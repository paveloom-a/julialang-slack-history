{"cursor": 1, "messages": [{"client_msg_id":"ed6be139-c668-4a04-ac4b-bbab9845f664","type":"message","text":"<@U68907M46> <@U6788D83U> the abstract algebra tools aren't all part of the system yet right?'","user":"U69BL50BF","ts":"1612903625.082600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Oty","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U68907M46"},{"type":"text","text":" "},{"type":"user","user_id":"U6788D83U"},{"type":"text","text":" the abstract algebra tools aren't all part of the system yet right?'"}]}]}]},{"client_msg_id":"22106756-77CA-4933-945B-5B1FEDCEE237","type":"message","text":"No we don't have varieties and such things hooked up","user":"U68907M46","ts":"1612953835.084500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3yW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No we don't have varieties and such things hooked up"}]}]}]},{"client_msg_id":"6420E3B5-76D5-4376-9DF7-70E98114D6E3","type":"message","text":"Which package can already give you the variety?","user":"U68907M46","ts":"1612953878.085100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"15I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which package can already give you the variety?"}]}]}]},{"client_msg_id":"226c615a-dca2-4704-a1ac-af0bb298639c","type":"message","text":"Well, OSCAR works only on the ideal, if I am not mistaken.","user":"UDD5Z7FLZ","ts":"1612957474.085700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wVwMY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, OSCAR works only on the ideal, if I am not mistaken."}]}]}]},{"client_msg_id":"7bbf1afd-6b02-47a2-b9a4-7056de6819e7","type":"message","text":"Also I'm looking for packages which can help me represent rational polynomials with automatic simplification if such a thing exists.... Does anyone have experience creating Fields out of PolynomialRings in AbstractAlgebra.jl? Does it work?","user":"U68907M46","ts":"1613111198.088300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FyRD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also I'm looking for packages which can help me represent rational polynomials with automatic simplification if such a thing exists.... Does anyone have experience creating Fields out of PolynomialRings in AbstractAlgebra.jl? Does it work?"}]}]}]},{"client_msg_id":"3387ebd7-ed2e-48f1-b6cf-e8d0210e9aea","type":"message","text":"<https://github.com/0x0f0f0f/Metatheory.jl|https://github.com/0x0f0f0f/Metatheory.jl>","user":"UDGT4PM41","ts":"1613142589.089700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5GOj","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/0x0f0f0f/Metatheory.jl","text":"https://github.com/0x0f0f0f/Metatheory.jl"}]}]}]},{"client_msg_id":"9cb14ecc-cc4e-457e-a5f2-63a7ac1b91d0","type":"message","text":"\"Metatheory.jl is a general purpose metaprogramming and algebraic computation library for the Julia programming language, designed to take advantage of the powerful reflection capabilities to bridge the gap between symbolic mathematics, abstract interpretation, equational reasoning, optimization, composable compiler transforms, and advanced homoiconic pattern matching features.\"","user":"UDGT4PM41","ts":"1613142634.090000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7IA8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"Metatheory.jl is a general purpose metaprogramming and algebraic computation library for the Julia programming language, designed to take advantage of the powerful reflection capabilities to bridge the gap between symbolic mathematics, abstract interpretation, equational reasoning, optimization, composable compiler transforms, and advanced homoiconic pattern matching features.\""}]}]}]},{"type":"message","subtype":"channel_join","ts":"1613345387.095400","user":"U01N8RAGPRA","text":"<@U01N8RAGPRA> has joined the channel","inviter":"UM8JUNJG7"},{"client_msg_id":"fc9573df-2a4a-422d-87b1-08986d5a2fdd","type":"message","text":"Happy to announce the first release of Metatheory.jl\n<https://github.com/0x0f0f0f/Metatheory.jl>\n<https://arxiv.org/abs/2102.07888>\n\nJoin us in the official <https://julialang.zulipchat.com/#narrow/stream/277860-metatheory.2Ejl/topic/.5BANN.5D.20Introducing.20Metatheory.2Ejl|Zulip Chat Stream> !","user":"U01K2JB9GPJ","ts":"1613557996.104200","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Metatheory.jl: Fast and Elegant Algebraic Computation in Julia...","title_link":"https://arxiv.org/abs/2102.07888","text":"We introduce Metatheory.jl: a lightweight and performant general purpose symbolics and metaprogramming framework meant to simplify the act of writing complex Julia metaprograms and to...","fallback":"arXiv.org: Metatheory.jl: Fast and Elegant Algebraic Computation in Julia...","from_url":"https://arxiv.org/abs/2102.07888","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/2102.07888"},{"service_name":"Zulip","title":"JuliaLang","title_link":"https://julialang.zulipchat.com/#narrow/stream/277860-metatheory.2Ejl/topic/.5BANN.5D.20Introducing.20Metatheory.2Ejl","text":"This is the Zulip server for the Julia programming language community. We ask anyone joining to adhere to the Julia Code of Conduct. | To learn more about Julia, check out <https://julialang.org/>, or just come ask us here! | You can reach out to the admins of this Zulip by sending a direct message to @zulip-admins.","fallback":"Zulip: JuliaLang","thumb_url":"https://zulip-avatars.s3.amazonaws.com/7178/realm/icon.png?version=6","from_url":"https://julialang.zulipchat.com/#narrow/stream/277860-metatheory.2Ejl/topic/.5BANN.5D.20Introducing.20Metatheory.2Ejl","thumb_width":100,"thumb_height":100,"id":2,"original_url":"https://julialang.zulipchat.com/#narrow/stream/277860-metatheory.2Ejl/topic/.5BANN.5D.20Introducing.20Metatheory.2Ejl"}],"blocks":[{"type":"rich_text","block_id":"TQKm6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Happy to announce the first release of Metatheory.jl\n"},{"type":"link","url":"https://github.com/0x0f0f0f/Metatheory.jl"},{"type":"text","text":"\n"},{"type":"link","url":"https://arxiv.org/abs/2102.07888"},{"type":"text","text":"\n\nJoin us in the official "},{"type":"link","url":"https://julialang.zulipchat.com/#narrow/stream/277860-metatheory.2Ejl/topic/.5BANN.5D.20Introducing.20Metatheory.2Ejl","text":"Zulip Chat Stream"},{"type":"text","text":" !"}]}]}]},{"client_msg_id":"fa623f5a-2cc7-45c5-a8e8-05fcdf3f3052","type":"message","text":"<@U69BL50BF> I was answering some questions in the HN thread. Am I correct that SU doesn't require subtyping number or real anymore?","user":"UDGT4PM41","ts":"1614969925.000700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nm6zQ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" I was answering some questions in the HN thread. Am I correct that SU doesn't require subtyping number or real anymore?"}]}]}]},{"client_msg_id":"4a6b1b42-0d31-4315-a231-c508f79c9ab2","type":"message","text":"I think I read that somewhere","user":"UDGT4PM41","ts":"1614969936.000900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xBU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I read that somewhere"}]}]}]},{"client_msg_id":"a65c4ab7-574e-4c94-8e6e-747c2747825c","type":"message","text":"Yes, SU doesn't subtype to numbers or anything","user":"U69BL50BF","ts":"1614970803.001200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qgBKf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, SU doesn't subtype to numbers or anything"}]}]}]},{"client_msg_id":"70226cf4-f5b8-4cec-bf2c-2688ef86406d","type":"message","text":"Symbolics.jl uses the `Num` type on its `@variable` to do automatic tracing via `&lt;:Number`. But that's not necessary for the CAS to work, it's just an enhancement.","user":"U69BL50BF","ts":"1614970842.002000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0JXJ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Symbolics.jl uses the "},{"type":"text","text":"Num","style":{"code":true}},{"type":"text","text":" type on its "},{"type":"text","text":"@variable","style":{"code":true}},{"type":"text","text":" to do automatic tracing via "},{"type":"text","text":"<:Number","style":{"code":true}},{"type":"text","text":". But that's not necessary for the CAS to work, it's just an enhancement."}]}]}]},{"client_msg_id":"a2f48a24-9890-4329-9e1d-1a6e8724a935","type":"message","text":"When AbstractInterpreter functionality is better, that will likely replace it.","user":"U69BL50BF","ts":"1614970855.002400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VKi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When AbstractInterpreter functionality is better, that will likely replace it."}]}]}]},{"client_msg_id":"650231c3-9996-4d82-bfcd-71f4c7e44da4","type":"message","text":"But indeed, there isn't a single underlying piece of the symbolic representation. There are `Add`s, `Mul`s, `Num`s, etc. all working in harmony because of the generic interface. Pieces of the representation can be changed and swapped out without breaking Symbolics.jl user code to a meaningful extent.'","user":"U69BL50BF","ts":"1614970896.003300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ojB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But indeed, there isn't a single underlying piece of the symbolic representation. There are "},{"type":"text","text":"Add","style":{"code":true}},{"type":"text","text":"s, "},{"type":"text","text":"Mul","style":{"code":true}},{"type":"text","text":"s, "},{"type":"text","text":"Num","style":{"code":true}},{"type":"text","text":"s, etc. all working in harmony because of the generic interface. Pieces of the representation can be changed and swapped out without breaking Symbolics.jl user code to a meaningful extent.'"}]}]}]},{"client_msg_id":"c89447a3-fe21-405f-bf4e-9bc80f3b6554","type":"message","text":"Cool!","user":"UDGT4PM41","ts":"1614972827.003500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Zq1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool!"}]}]}]},{"client_msg_id":"02c513b4-1333-40bb-8c89-caceb84db803","type":"message","text":"thanks for the explanation","user":"UDGT4PM41","ts":"1614972832.003700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CLNQQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks for the explanation"}]}]}]},{"client_msg_id":"84acb5d0-2091-4fc3-a418-e96b1a6e865c","type":"message","text":"I noticed that RigidBodyDynamics have some examples of using symbolic manipulation using sympy for the dynamic equations of mechanical systems.\n<https://juliarobotics.org/RigidBodyDynamics.jl/stable/generated/6.%20Symbolics%20using%20SymPy/6.%20Symbolics%20using%20SymPy/>\nWe do this a lot, using sympy and python, but have the following problem:\n- for a robot with 2DOF, you can derive the equations by hand\n- for 3DOF the calculations are very, very long\n- for 4DOF sympy is happy to do them for you\n- 5DOF takes a very long time\n- 6DOF takes a weekend\n- 7DOF forget about it\n\nI would really like to be able to manipulate those equations using Symbolics.jl and use them inside MTK models,  but I find that I never get very far when I about once every second month try it out, I always stumble on something trivial and fail to interpret the error message. Are there any examples of manipulating such equations using Symbolics.jl and simulating them?","user":"UJ7DVTVQ8","ts":"1615103792.008500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z4Cy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I noticed that RigidBodyDynamics have some examples of using symbolic manipulation using sympy for the dynamic equations of mechanical systems.\n"},{"type":"link","url":"https://juliarobotics.org/RigidBodyDynamics.jl/stable/generated/6.%20Symbolics%20using%20SymPy/6.%20Symbolics%20using%20SymPy/"},{"type":"text","text":"\nWe do this a lot, using sympy and python, but have the following problem:\n- for a robot with 2DOF, you can derive the equations by hand\n- for 3DOF the calculations are very, very long\n- for 4DOF sympy is happy to do them for you\n- 5DOF takes a very long time\n- 6DOF takes a weekend\n- 7DOF forget about it\n\nI would really like to be able to manipulate those equations using Symbolics.jl and use them inside MTK models,  but I find that I never get very far when I about once every second month try it out, I always stumble on something trivial and fail to interpret the error message. Are there any examples of manipulating such equations using Symbolics.jl and simulating them?"}]}]}],"thread_ts":"1615103792.008500","reply_count":10,"reply_users_count":3,"latest_reply":"1615105141.010400","reply_users":["UJ7DVTVQ8","U69BL50BF","U013L06JN15"],"subscribed":false},{"client_msg_id":"03a8c795-72da-47ee-ae38-fa0696ceb771","type":"message","text":"Quick question about SymPy.  When I try this simple toggle switch equations. The SymPy  gives `raise NotImplementedError`. Did I do something wrong?\n```using SymPy\n\nx, y = @vars x y\nα, β = @vars α β\n\nrhs = [α/(1 + y^β )  - x, α/(1 + x^β )  - y]\nfps = solve(rhs, (x,y))```","user":"UAA5ZRHM3","ts":"1615317654.013200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JrCa1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Quick question about SymPy.  When I try this simple toggle switch equations. The SymPy  gives "},{"type":"text","text":"raise NotImplementedError","style":{"code":true}},{"type":"text","text":". Did I do something wrong?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using SymPy\n\nx, y = @vars x y\nα, β = @vars α β\n\nrhs = [α/(1 + y^β )  - x, α/(1 + x^β )  - y]\nfps = solve(rhs, (x,y))"}]}]}]},{"client_msg_id":"1517a1de-ef8d-4bd3-82af-3455c8686d62","type":"message","text":"Does this work from the Python side?","user":"U8D9768Q6","ts":"1615318254.013600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dym","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does this work from the Python side?"}]}]}]},{"client_msg_id":"a146002f-d1af-4c9f-a6f0-5876e455f7dd","type":"message","text":"I have not try. But whenI set beta = 2, then `solve` and `nonlinsolve` works","user":"UAA5ZRHM3","ts":"1615318645.014300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r7yf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have not try. But whenI set beta = 2, then "},{"type":"text","text":"solve","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"nonlinsolve","style":{"code":true}},{"type":"text","text":" works"}]}]}]},{"client_msg_id":"704b0c22-b184-46ba-bcac-d54197e89cd4","type":"message","text":"`nonlinsolve` gives 5 solutions and `solve` only give one.","user":"UAA5ZRHM3","ts":"1615318673.014900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dASl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nonlinsolve","style":{"code":true}},{"type":"text","text":" gives 5 solutions and "},{"type":"text","text":"solve","style":{"code":true}},{"type":"text","text":" only give one."}]}]}]},{"client_msg_id":"e7a52848-542b-4b9f-9634-e6193f821b87","type":"message","text":"Just tried in matlab, it seem that they both can not handle variable in the exponential.","user":"UAA5ZRHM3","ts":"1615319235.015700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i8gJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just tried in matlab, it seem that they both can not handle variable in the exponential."}]}]}]},{"client_msg_id":"9be011ff-99d8-404f-be9e-92d0ff6da85f","type":"message","text":"Installing `SymPy.jl` in Julia seems to be easier than installing `sympy` in Python. Why am I not surprised…","user":"U67G3QRJM","ts":"1615330243.016300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1dY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Installing "},{"type":"text","text":"SymPy.jl","style":{"code":true}},{"type":"text","text":" in Julia seems to be easier than installing "},{"type":"text","text":"sympy","style":{"code":true}},{"type":"text","text":" in Python. Why am I not surprised…"}]}]}]},{"client_msg_id":"2b47f272-da9e-418b-9680-6ba42a76ed49","type":"message","text":"<@UAA5ZRHM3>: What is the difference between `nonlinsolve` and `solve` and what are the 5 solutions?","user":"U67G3QRJM","ts":"1615330391.016800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ncI7z","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UAA5ZRHM3"},{"type":"text","text":": What is the difference between "},{"type":"text","text":"nonlinsolve","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"solve","style":{"code":true}},{"type":"text","text":" and what are the 5 solutions?"}]}]}]},{"client_msg_id":"8fea4f1c-d960-4941-ba4d-4de7de22ae34","type":"message","text":"<@U67G3QRJM> In the document, it writes ” Currently `nonlinsolve` is not properly capable of solving the system of equations\n“. The 5 solutions contains 2 stable steady states, and 3 other implicit solutions which might correspond to unstable fix points I guess","user":"UAA5ZRHM3","ts":"1615331995.018500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vOS","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U67G3QRJM"},{"type":"text","text":" In the document, it writes ” Currently "},{"type":"text","text":"nonlinsolve","style":{"code":true}},{"type":"text","text":" is not properly capable of solving the system of equations\n“. The 5 solutions contains 2 stable steady states, and 3 other implicit solutions which might correspond to unstable fix points I guess"}]}]}],"reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"37cd4365-34f0-40f3-a153-50939a2dd212","type":"message","text":"Hi all","user":"U0145AT9WTX","ts":"1615825404.019900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s8iz4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all"}]}]}]},{"client_msg_id":"57521ae3-9a5a-44c2-a59d-c0c48c381410","type":"message","text":"I’m having some troubles with MTK and abs()","user":"U0145AT9WTX","ts":"1615825420.020300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cuA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m having some troubles with MTK and abs()"}]}]}]},{"client_msg_id":"fd8911e4-2c6d-4767-8292-39e00fde0e30","type":"message","text":"```julia&gt; @parameters x\n(x,)\n\njulia&gt; dx = abs(x)\nabs(x)\n\njulia&gt; ModelingToolkit.derivative(dx,x)\nERROR: TypeError: non-boolean (Term{Real,Nothing}) used in boolean context\nStacktrace:\n [1] ifelse(::Term{Real,Nothing}, ::Int64, ::Int64) at /Users/dcabecinhas/.julia/packages/IfElse/u1l5W/src/IfElse.jl:3\n [2] derivative(::typeof(abs), ::Tuple{Sym{ModelingToolkit.Parameter{Real},Nothing}}, ::Val{1}) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/extra_functions.jl:7\n [3] derivative_idx(::Term{Real,Nothing}, ::Int64) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:204\n [4] expand_derivatives(::Term{Real,Nothing}, ::Bool; occurances::Nothing) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:0\n [5] expand_derivatives(::Term{Real,Nothing}, ::Bool) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:78\n [6] derivative(::Num, ::Num; simplify::Bool) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:299\n [7] derivative(::Num, ::Num) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:296\n [8] top-level scope at REPL[13]:1```","user":"U0145AT9WTX","ts":"1615825457.020700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fed","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @parameters x\n(x,)\n\njulia> dx = abs(x)\nabs(x)\n\njulia> ModelingToolkit.derivative(dx,x)\nERROR: TypeError: non-boolean (Term{Real,Nothing}) used in boolean context\nStacktrace:\n [1] ifelse(::Term{Real,Nothing}, ::Int64, ::Int64) at /Users/dcabecinhas/.julia/packages/IfElse/u1l5W/src/IfElse.jl:3\n [2] derivative(::typeof(abs), ::Tuple{Sym{ModelingToolkit.Parameter{Real},Nothing}}, ::Val{1}) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/extra_functions.jl:7\n [3] derivative_idx(::Term{Real,Nothing}, ::Int64) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:204\n [4] expand_derivatives(::Term{Real,Nothing}, ::Bool; occurances::Nothing) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:0\n [5] expand_derivatives(::Term{Real,Nothing}, ::Bool) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:78\n [6] derivative(::Num, ::Num; simplify::Bool) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:299\n [7] derivative(::Num, ::Num) at /Users/dcabecinhas/.julia/packages/Symbolics/Lzghz/src/diff.jl:296\n [8] top-level scope at REPL[13]:1"}]}]}]},{"client_msg_id":"06755fbb-2611-46d8-b25b-fa8e96aaf498","type":"message","text":"this was working around MTK 5.1 but with the latest version it doesn’t anymore","user":"U0145AT9WTX","ts":"1615825476.021200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BGQP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this was working around MTK 5.1 but with the latest version it doesn’t anymore"}]}]}]},{"client_msg_id":"0023cf9f-88ec-4dc4-861a-6342e648f4db","type":"message","text":"can you point me out alternatives or the correct way to do this? thanks","user":"U0145AT9WTX","ts":"1615825509.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VxRip","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can you point me out alternatives or the correct way to do this? thanks"}]}]}]},{"client_msg_id":"e3c770d5-fb6a-4829-9fd8-6a34a9887c36","type":"message","text":"Yes, I need to fix it :stuck_out_tongue:","user":"U6788D83U","ts":"1615825520.022000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eS3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, I need to fix it "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"reactions":[{"name":"+1","users":["U0145AT9WTX"],"count":1}]},{"client_msg_id":"670b7f44-3ab6-446c-8aa2-2e73deaee4fe","type":"message","text":"hehe, alright. good that it is a known bug","user":"U0145AT9WTX","ts":"1615825647.022500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cjHX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hehe, alright. good that it is a known bug"}]}]}]},{"client_msg_id":"0bd07083-79f1-44bd-8779-01d05df94708","type":"message","text":"I’ll stay with the old version meanwhile","user":"U0145AT9WTX","ts":"1615825655.022800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CRIyJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ll stay with the old version meanwhile"}]}]}]},{"client_msg_id":"16ee8308-5537-4822-bed5-9b623ccd8879","type":"message","text":"Fixed <https://github.com/JuliaSymbolics/Symbolics.jl/pull/125/commits/98021e997a001de1579efa6f3b5d3fb5f6f816f2>","user":"U6788D83U","ts":"1615826009.023100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sJ2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Fixed "},{"type":"link","url":"https://github.com/JuliaSymbolics/Symbolics.jl/pull/125/commits/98021e997a001de1579efa6f3b5d3fb5f6f816f2"}]}]}]},{"client_msg_id":"30b1e6cc-7ead-4ef7-ad32-dc7e82fed6eb","type":"message","text":"does Symbolics handle complex numbers? How to define symbolic `i`?","user":"UC7FP1MQV","ts":"1615891531.000600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/kCJa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does Symbolics handle complex numbers? How to define symbolic "},{"type":"text","text":"i","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1615891531.000600","reply_count":1,"reply_users_count":1,"latest_reply":"1615892467.000700","reply_users":["U01C10FSAM8"],"subscribed":false},{"client_msg_id":"081278fb-341c-44af-95fa-86cf7a7fa8f4","type":"message","text":"Thanks, that was fast :slightly_smiling_face:","user":"U0145AT9WTX","ts":"1615907890.001600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7bE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, that was fast "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"711a381f-17f8-43ec-bcc9-e9da10528dce","type":"message","text":"I'm doing some more experiments with Symbolics.jl and just started a very heavy computation. From reading <https://symbolics.juliasymbolics.org/dev/comparison/> it appears as if symbolic computations are to be multi-threaded, but looking at the process monitor it seems as if only a single thread is busy (I have started julia with 4 threads). Do I need to do something to activate the threading?","user":"UJ7DVTVQ8","ts":"1615918019.006800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MW2C2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm doing some more experiments with Symbolics.jl and just started a very heavy computation. From reading "},{"type":"link","url":"https://symbolics.juliasymbolics.org/dev/comparison/"},{"type":"text","text":" it appears as if symbolic computations are to be multi-threaded, but looking at the process monitor it seems as if only a single thread is busy (I have started julia with 4 threads). Do I need to do something to activate the threading?"}]}]}]},{"client_msg_id":"abcd1841-e04a-4c0a-85b2-4bec96208426","type":"message","text":"threading should be on by default for deep enough trees.","user":"U69BL50BF","ts":"1615918431.007100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tny+w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"threading should be on by default for deep enough trees."}]}]}],"thread_ts":"1615918431.007100","reply_count":1,"reply_users_count":1,"latest_reply":"1615918712.007200","reply_users":["UJ7DVTVQ8"],"subscribed":false},{"client_msg_id":"9c09a463-20b1-474e-8921-67dc81161dd0","type":"message","text":"<https://github.com/JuliaSymbolics/Symbolics.jl/issues/129>","user":"UJ7DVTVQ8","ts":"1615919198.007500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LgMd","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaSymbolics/Symbolics.jl/issues/129"}]}]}]},{"client_msg_id":"6b49e181-f37f-4082-8d00-4199c348b5c6","type":"message","text":"This was the code I was running, did not see any threading there","user":"UJ7DVTVQ8","ts":"1615919214.007800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P9eIb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This was the code I was running, did not see any threading there"}]}]}]},{"client_msg_id":"6cac5f13-b064-486d-8a1c-a0711e665389","type":"message","text":"does Symbolics have support for evaluating propositions like `[p=&gt;q]=&gt;[!q=&gt;!p]`? ie give some predicates and some exprs and be able to `eval`them","user":"UM8JUNJG7","ts":"1615929131.011100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V4Hq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does Symbolics have support for evaluating propositions like "},{"type":"text","text":"[p=>q]=>[!q=>!p]","style":{"code":true}},{"type":"text","text":"? ie give some predicates and some exprs and be able to "},{"type":"text","text":"eval","style":{"code":true}},{"type":"text","text":"them"}]}]}]},{"client_msg_id":"0cd78c7d-b819-4aeb-9673-d62b3b2d5dc0","type":"message","text":"In SymPy I can get C-code for a simple expression by `sp.ccode(ex)`. I'm aware of the `build_function(..., target=CTarget)`, but it assumes that I want to generate a whole function rather than a single expression. I assume that `build_function` internally uses something like `latexify(ex)` but for C-code, can I access this lower-level interface somehow?","user":"UJ7DVTVQ8","ts":"1615987267.002500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JUMP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In SymPy I can get C-code for a simple expression by "},{"type":"text","text":"sp.ccode(ex)","style":{"code":true}},{"type":"text","text":". I'm aware of the "},{"type":"text","text":"build_function(..., target=CTarget)","style":{"code":true}},{"type":"text","text":", but it assumes that I want to generate a whole function rather than a single expression. I assume that "},{"type":"text","text":"build_function","style":{"code":true}},{"type":"text","text":" internally uses something like "},{"type":"text","text":"latexify(ex)","style":{"code":true}},{"type":"text","text":" but for C-code, can I access this lower-level interface somehow?"}]}]}]},{"client_msg_id":"a6ff2239-5c2c-408f-96ba-89e43865c68b","type":"message","text":"I'm just starting out with Symbolics - is there a way to create variables from strings? For example, in my code, I programmatically generate `\"N_$name\"` symbols and I'd like to be able to use these symbols when generating expressions","user":"UHYC5EKUJ","ts":"1616256124.007100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+1a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm just starting out with Symbolics - is there a way to create variables from strings? For example, in my code, I programmatically generate "},{"type":"text","text":"\"N_$name\"","style":{"code":true}},{"type":"text","text":" symbols and I'd like to be able to use these symbols when generating expressions"}]}]}],"thread_ts":"1616256124.007100","reply_count":5,"reply_users_count":2,"latest_reply":"1616256444.008000","reply_users":["UM8JUNJG7","UHYC5EKUJ"],"subscribed":false},{"client_msg_id":"5271e44f-bfd5-4343-bb4c-00195659d99e","type":"message","text":"Is there any method to extract linear coefficient of variable in a symbolic expression?\n`@variables x`\n`extract_coef(2*x) = 2`","user":"U01R99UKP1S","ts":"1616399564.010700","team":"T68168MUP","edited":{"user":"U01R99UKP1S","ts":"1616399595.000000"},"blocks":[{"type":"rich_text","block_id":"gX4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any method to extract linear coefficient of variable in a symbolic expression?\n"},{"type":"text","text":"@variables x","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"extract_coef(2*x) = 2","style":{"code":true}}]}]}]},{"client_msg_id":"a472a7ed-1754-4123-bbc7-519be5e2e406","type":"message","text":"I implemented in in DataDrivenDiffEq as follows <https://github.com/SciML/DataDrivenDiffEq.jl/blob/a63385aefca35d1ea88ae6bbd11daa5d5f906101/src/basis.jl#L415>, feel free to try it out ;)","user":"UNYPJU8DT","ts":"1616420603.011900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5oj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I implemented in in DataDrivenDiffEq as follows "},{"type":"link","url":"https://github.com/SciML/DataDrivenDiffEq.jl/blob/a63385aefca35d1ea88ae6bbd11daa5d5f906101/src/basis.jl#L415"},{"type":"text","text":", feel free to try it out ;)"}]}]}]},{"client_msg_id":"15cb5942-93f6-4154-8e95-7717000da87d","type":"message","text":"Thanks! I'll try it out.","user":"U01R99UKP1S","ts":"1616423228.012500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1SU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! I'll try it out."}]}]}]},{"client_msg_id":"2f206367-2efe-4446-b01d-07527f1858d3","type":"message","text":"Ah, sorry. This removes the coefficients :sweat_smile: but the general procedure should match.","user":"UNYPJU8DT","ts":"1616426148.013400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vf5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, sorry. This removes the coefficients "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":" but the general procedure should match."}]}]}]},{"client_msg_id":"32fc0ca3-e68c-4382-ab98-3956d9cf2285","type":"message","text":"<@U8D9768Q6>: An example of a non-working complex function:\n```using Symbolics\n@variables t\n\nexp(2π * im * t)```","user":"U67G3QRJM","ts":"1616789333.015300","team":"T68168MUP","edited":{"user":"U67G3QRJM","ts":"1616789348.000000"},"blocks":[{"type":"rich_text","block_id":"UnwIU","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8D9768Q6"},{"type":"text","text":": An example of a non-working complex function:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Symbolics\n@variables t\n\nexp(2π * im * t)"}]}]}]},{"client_msg_id":"433DD3DD-08C3-4776-B45A-4F108F332284","type":"message","text":"There are 2 ways to support Complex numbers:\n\n1. Use Complex (this leaves the question of what do we do with ‘@syms z::Complex’\n2. Use a Term{Complex} wrapped in something like Num. but Num &lt;: Real so it’s inaccurate. We could create a different wrapper type, but I'm kinda weirded out by having to add methods for that, but maybe it's not so bad.","user":"U68907M46","ts":"1616795760.019900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q6Pi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are 2 ways to support Complex numbers:\n"},{"type":"text","text":"\n1. Use Complex (this leaves the question of what do we do with ‘@syms z::Complex’\n2. Use a Term{Complex} wrapped in something like Num. but Num <: Real so it’s inaccurate. We could create a different wrapper type, but I'm kinda weirded out by having to add methods for that, but maybe it's not so bad."}]}]}]},{"client_msg_id":"52DA3858-F0EF-46E5-82E9-921CC78EB8F8","type":"message","text":"1. Also means that we need to make Complex itself behave like a tree and it cannot directly contain symbolic expressions but need to contain Nums","user":"U68907M46","ts":"1616795832.021400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hEK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1. Also means that we need to make Complex itself behave like a tree and it cannot directly contain symbolic expressions but need to contain Nums"}]}]}]},{"client_msg_id":"477BBECB-0DD7-4ED2-8290-977642C9C170","type":"message","text":"1 is my least favorite","user":"U68907M46","ts":"1616795840.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8vOVf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1 is my least favorite"}]}]}]},{"client_msg_id":"85e37aef-7699-4ce6-9bfd-288640fd55a4","type":"message","text":"only 2 ways?? whatever the approach adopted, it should work just as well with [at the very least not be an impediment to] e.g. Dual Numbers and Quaternions and Dual Quaternions.","user":"U68QW0PUZ","ts":"1616807941.022800","team":"T68168MUP","edited":{"user":"U68QW0PUZ","ts":"1616808316.000000"},"blocks":[{"type":"rich_text","block_id":"IrA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"only 2 ways?? whatever the approach adopted, it should work just as well with [at the very least not be an impediment to] e.g. Dual Numbers and Quaternions and Dual Quaternions."}]}]}]},{"client_msg_id":"f5a1fd2e-6bb2-4a60-aa3e-10f6851fe843","type":"message","text":"would it make sense to have RealNum as a single element number, ComplexNum and DualNum as distinct two element numbers ... [I have not looked at the source code]","user":"U68QW0PUZ","ts":"1616808536.025100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4CFZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"would it make sense to have RealNum as a single element number, ComplexNum and DualNum as distinct two element numbers ... [I have not looked at the source code]"}]}]}]},{"client_msg_id":"dd082914-71ca-4d07-8a51-b530f0ae4acb","type":"message","text":"how about the \"phone-a-friend\" approach -- putting the question to the experienced experts who have contributed their experience to the discourse thread?","user":"U68QW0PUZ","ts":"1616809655.026300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YIYD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how about the \"phone-a-friend\" approach -- putting the question to the experienced experts who have contributed their experience to the discourse thread?"}]}]}]},{"client_msg_id":"B9756A06-76C8-49EF-9F63-7B26E2A614FF","type":"message","text":"Hmm yes so 2) can be repeated for all those, at the expense of doubling the number of methods defined for each haha","user":"U68907M46","ts":"1616940553.027700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P9t=C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm yes so 2) can be repeated for all those, at the expense of doubling the number of methods defined for each haha"}]}]}]},{"client_msg_id":"F662A4CB-5769-4781-B957-F2C69FAB993C","type":"message","text":"Yes it would be nice to phone friends","user":"U68907M46","ts":"1616940584.028400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pLyEp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes it would be nice to phone friends"}]}]}]},{"client_msg_id":"E628EB93-0735-4FDB-A5DC-00FB5D789DAF","type":"message","text":"The perfect solution would be being able to have a type such that Symbolic{T} &lt;: T. I imagine if we figure out a trick to make method lookups fast for that it could be possible. Might have weird implications that i haven’t thought of but so far seems to fit in just fine.","user":"U68907M46","ts":"1616940789.032500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FIC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The perfect solution would be being able to have a type such that Symbolic{T} <: T. I imagine if we figure out a trick to make method lookups fast for that it could be possible. Might have weird implications that i haven’t thought of but so far seems to fit in just fine."}]}]}]},{"client_msg_id":"f0ced529-9e6e-424b-85fb-d91e42ca7c85","type":"message","text":"This is a compelling use case.  +1 for code that supports fast method lookups for  _subclassifying_ type families\n(somewhat like a type consistent lifting by wrapping, with a naturally preresolving multidispatch wherever possible).","user":"U68QW0PUZ","ts":"1616948307.039500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lM7k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is a compelling use case.  +1 for code that supports fast method lookups for  "},{"type":"text","text":"subclassifying","style":{"italic":true}},{"type":"text","text":" type families\n(somewhat like a type consistent lifting by wrapping, with a naturally preresolving multidispatch wherever possible)."}]}]}]},{"type":"message","subtype":"thread_broadcast","text":"Can this be solved with something traitor.jl? Either T or Symbolic becomes a trait","user":"UDGT4PM41","ts":"1617116041.039600","thread_ts":"1616940789.032500","root":{"client_msg_id":"E628EB93-0735-4FDB-A5DC-00FB5D789DAF","type":"message","text":"The perfect solution would be being able to have a type such that Symbolic{T} &lt;: T. I imagine if we figure out a trick to make method lookups fast for that it could be possible. Might have weird implications that i haven’t thought of but so far seems to fit in just fine.","user":"U68907M46","ts":"1616940789.032500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FIC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The perfect solution would be being able to have a type such that Symbolic{T} <: T. I imagine if we figure out a trick to make method lookups fast for that it could be possible. Might have weird implications that i haven’t thought of but so far seems to fit in just fine."}]}]}],"thread_ts":"1616940789.032500","reply_count":1,"reply_users_count":1,"latest_reply":"1617116041.039600","reply_users":["UDGT4PM41"],"is_locked":false,"subscribed":false},"blocks":[{"type":"rich_text","block_id":"OvKAC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can this be solved with something traitor.jl? Either T or Symbolic becomes a trait"}]}]}],"client_msg_id":"620a8809-402f-4210-b627-6c18edd5a5b7"},{"client_msg_id":"3d70528f-8499-4732-9b20-488e9d8e0c86","type":"message","text":"is there a way to make the `simplify` in `Symbolic` to simplify \"-1*x\" to \"-x\"?","user":"U73SL09GE","ts":"1617382784.041400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ImuC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a way to make the "},{"type":"text","text":"simplify","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"Symbolic","style":{"code":true}},{"type":"text","text":" to simplify \"-1*x\" to \"-x\"?"}]}]}]},{"client_msg_id":"f005863a-e560-47a2-a772-694d7b604e75","type":"message","text":"-x is -1*x","user":"U6788D83U","ts":"1617382999.041600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZCyT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"-x is -1*x"}]}]}]},{"client_msg_id":"44df8bc3-83d9-4b5d-b6e5-e940aedbc56a","type":"message","text":"There’s no difference","user":"U6788D83U","ts":"1617383003.041800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tlm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There’s no difference"}]}]}]},{"client_msg_id":"e0697090-b7c1-4548-bad7-08d213c0de2d","type":"message","text":"just to make the latex display prettier","user":"U73SL09GE","ts":"1617383058.042200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VHSoI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just to make the latex display prettier"}]}]}]},{"client_msg_id":"ef3d1c8c-4a7c-42d6-b0b5-fa24a525fa7e","type":"message","text":"We need to overload latex display","user":"U6788D83U","ts":"1617383080.042600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FXw15","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We need to overload latex display"}]}]}]},{"client_msg_id":"bafd76da-130d-4119-9a09-cabb4a9b0ee4","type":"message","text":"so it can be done from the `latexify` side","user":"U73SL09GE","ts":"1617384247.043300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c6m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so it can be done from the "},{"type":"text","text":"latexify","style":{"code":true}},{"type":"text","text":" side"}]}]}]},{"client_msg_id":"7f19768c-02b2-4a3f-92ab-0ffcb19b6b80","type":"message","text":"yeah","user":"U6788D83U","ts":"1617385612.043500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3gvjn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah"}]}]}]},{"type":"message","text":"if I add these two lines in the `_toexpr` function\n```if (op===(*)) &amp;&amp; (args[1] == -1)\n        return Symbol(\"-$(args[2])\")\nend```\nthen I can get what i wanted","files":[{"id":"F01T4C9T4ER","created":1617444015,"timestamp":1617444015,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U73SL09GE","editable":false,"size":8717,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01T4C9T4ER/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01T4C9T4ER/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01T4C9T4ER-f0245c4c9c/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01T4C9T4ER-f0245c4c9c/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01T4C9T4ER-f0245c4c9c/image_360.png","thumb_360_w":360,"thumb_360_h":126,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01T4C9T4ER-f0245c4c9c/image_480.png","thumb_480_w":480,"thumb_480_h":168,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01T4C9T4ER-f0245c4c9c/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01T4C9T4ER-f0245c4c9c/image_720.png","thumb_720_w":720,"thumb_720_h":252,"original_w":740,"original_h":259,"thumb_tiny":"AwAQADDTzRmiigAooooAKKKKAP/Z","permalink":"https://julialang.slack.com/files/U73SL09GE/F01T4C9T4ER/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01T4C9T4ER-aa81c2a6ac","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"EyC3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if I add these two lines in the "},{"type":"text","text":"_toexpr","style":{"code":true}},{"type":"text","text":" function\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"if (op===(*)) && (args[1] == -1)\n        return Symbol(\"-$(args[2])\")\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"then I can get what i wanted"}]}]}],"user":"U73SL09GE","display_as_bot":false,"ts":"1617444042.044600"},{"client_msg_id":"4b87101b-d3ed-4cbf-bdc8-abdae1df72aa","type":"message","text":"is this a good change?","user":"U73SL09GE","ts":"1617444068.045200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xuwnR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is this a good change?"}]}]}]},{"client_msg_id":"3FF95CEB-09D3-40CC-A7C7-704995FA5DF8","type":"message","text":"If you’d be willing to open a PR, that’s be great","user":"U8D9768Q6","ts":"1617461706.045900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LkG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you’d be willing to open a PR, that’s be great"}]}]}]}]}