[{"client_msg_id":"41c45f9a-dad6-4edd-9301-dc9592aae188","type":"message","text":"Here's a full MWE.\n```using Zygote: gradient, @adjoint\n\nstruct ArrayWrapper\n    arr\nend\n\nBase.sum(A::ArrayWrapper) = sum(A.arr)\n@adjoint ArrayWrapper(arr) = ArrayWrapper(arr), Δ -&gt; (Δ.arr,)\n\ngradient(A -&gt; sum(A), ArrayWrapper([1,2,3]))[1]\n# (arr = 3-element Fill{Int64}: entries equal to 1,)```\nKind of guessing this doesn't work like I think it does? Or chance of a bug?","user":"UUMJUCYRK","ts":"1608677079.241000","team":"T68168MUP","edited":{"user":"UUMJUCYRK","ts":"1608678260.000000"},"blocks":[{"type":"rich_text","block_id":"r+Z2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's a full MWE.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Zygote: gradient, @adjoint\n\nstruct ArrayWrapper\n    arr\nend\n\nBase.sum(A::ArrayWrapper) = sum(A.arr)\n@adjoint ArrayWrapper(arr) = ArrayWrapper(arr), Δ -> (Δ.arr,)\n\ngradient(A -> sum(A), ArrayWrapper([1,2,3]))[1]\n# (arr = 3-element Fill{Int64}: entries equal to 1,)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Kind of guessing this doesn't work like I think it does? Or chance of a bug?"}]}]}],"thread_ts":"1608677079.241000","reply_count":8,"reply_users_count":2,"latest_reply":"1608679194.243100","reply_users":["UD0NS8PDF","UUMJUCYRK"],"subscribed":false},{"client_msg_id":"b0ccd216-0c20-4a07-bdab-aec921803c7d","type":"message","text":"Quick question, I've got a custom array wrapper `FlatMap` which has a single field `Ix`, and gradients w.r.t. to it seem to be dropping the wrapper, e.g.\n```julia&gt; f = FlatMap{P}(rand(2,2));\n\njulia&gt; gradient(f -&gt; sum(FlatMap{P}(@. sin(f.Ix) + 2 * f.Ix)), f)[1]\n(Ix = [2.6497571430534186 2.9998943917323846; 2.7619849095897417 2.9517184834892687],)```\neven though I did define a custom adjoint for the constructor\n```@adjoint FlatMap{P}(Ix) where {P} = FlatMap{P}(Ix), Δ-&gt;(Δ.Ix,)```\nI was under the impression that defining the custom adjoint fixes this, but is that not the case?","user":"UUMJUCYRK","ts":"1608665468.240200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MSH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Quick question, I've got a custom array wrapper "},{"type":"text","text":"FlatMap","style":{"code":true}},{"type":"text","text":" which has a single field "},{"type":"text","text":"Ix","style":{"code":true}},{"type":"text","text":", and gradients w.r.t. to it seem to be dropping the wrapper, e.g.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> f = FlatMap{P}(rand(2,2));\n\njulia> gradient(f -> sum(FlatMap{P}(@. sin(f.Ix) + 2 * f.Ix)), f)[1]\n(Ix = [2.6497571430534186 2.9998943917323846; 2.7619849095897417 2.9517184834892687],)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"even though I did define a custom adjoint for the constructor\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@adjoint FlatMap{P}(Ix) where {P} = FlatMap{P}(Ix), Δ->(Δ.Ix,)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI was under the impression that defining the custom adjoint fixes this, but is that not the case?"}]}]}]},{"client_msg_id":"8ee7f0ed-7d29-4186-8f1a-8f3e792feb7a","type":"message","text":"Anyone have a moment to review this\n<https://github.com/JuliaDiff/ChainRulesTestUtils.jl/pull/93>","user":"U6A936746","ts":"1608577061.235600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"akpE9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyone have a moment to review this\n"},{"type":"link","url":"https://github.com/JuliaDiff/ChainRulesTestUtils.jl/pull/93"}]}]}],"thread_ts":"1608577061.235600","reply_count":1,"reply_users_count":1,"latest_reply":"1608630473.236000","reply_users":["U82RE6STE"],"subscribed":false,"reactions":[{"name":"merged","users":["U6A936746","U82RE6STE"],"count":2}]},{"client_msg_id":"6cb480df-85b1-44e4-b795-4c093f4fd87b","type":"message","text":"is it encouraged in ChainRules to leverage special arrays (i.e. FillArrays) for derivatives, since there will be lots of special forms? ChainRulesCore.Zero seems like a special case of this in the scalar case","user":"U82RE6STE","ts":"1608493520.233500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jyX/6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is it encouraged in ChainRules to leverage special arrays (i.e. FillArrays) for derivatives, since there will be lots of special forms? ChainRulesCore.Zero seems like a special case of this in the scalar case"}]}]}],"thread_ts":"1608493520.233500","reply_count":6,"reply_users_count":2,"latest_reply":"1608494771.235000","reply_users":["U6A936746","U82RE6STE"],"subscribed":false},{"client_msg_id":"e2df2341-0bfe-43c8-aae4-de8747fe1f86","type":"message","text":"Does ChainRulesTestUtils require structures to be `to_vec` -able in some way?","user":"U82RE6STE","ts":"1608485414.230200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZJE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does ChainRulesTestUtils require structures to be "},{"type":"text","text":"to_vec","style":{"code":true}},{"type":"text","text":" -able in some way?"}]}]}],"thread_ts":"1608485414.230200","reply_count":11,"reply_users_count":2,"latest_reply":"1608487045.232400","reply_users":["U82RE6STE","U6A936746"],"subscribed":false},{"client_msg_id":"302cadad-a444-45be-abcf-1e5e9e573f84","type":"message","text":"The rrule test got me confused:\n```rrule_test(f, ȳ, (x, x̄)...;```\nI have two arguments to my function, a first one I don't differentiate, and then a vector: f(::DummyStruct, v)\nHow should I structure the input to `rrule_test` ?","user":"U82RE6STE","ts":"1608481989.227800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IDkj/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The rrule test got me confused:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"rrule_test(f, ȳ, (x, x̄)...;"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I have two arguments to my function, a first one I don't differentiate, and then a vector: f(::DummyStruct, v)\nHow should I structure the input to "},{"type":"text","text":"rrule_test","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1608481989.227800","reply_count":3,"reply_users_count":2,"latest_reply":"1608482758.228500","reply_users":["U6A936746","U82RE6STE"],"subscribed":false},{"client_msg_id":"12379cef-bb92-411d-9575-94e446575fba","type":"message","text":"I couldn't find in the docs for CR, if one returns the output directly from the pullback (din = dout), should one make a copy from it or return the same array reference?","user":"U82RE6STE","ts":"1608479855.224500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vGUV=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I couldn't find in the docs for CR, if one returns the output directly from the pullback (din = dout), should one make a copy from it or return the same array reference?"}]}]}],"thread_ts":"1608479855.224500","reply_count":7,"reply_users_count":2,"latest_reply":"1608482250.227900","reply_users":["U6A936746","U82RE6STE"],"subscribed":false},{"client_msg_id":"b6d563e4-ab49-47c8-9b7a-e0f3e1acf5cc","type":"message","text":"both stable and latest are not responding","user":"U82RE6STE","ts":"1608477259.220400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YTM+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"both stable and latest are not responding"}]}]}]},{"client_msg_id":"b592884f-63b3-40cc-9ccd-db23a4df60d6","type":"message","text":"is documentation down for ChainRulesTestUtils? Or did the link just change?\n<https://github.com/JuliaDiff/ChainRulesTestUtils.jl>","user":"U82RE6STE","ts":"1608477247.220000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sNag","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is documentation down for ChainRulesTestUtils? Or did the link just change?\n"},{"type":"link","url":"https://github.com/JuliaDiff/ChainRulesTestUtils.jl"}]}]}],"thread_ts":"1608477247.220000","reply_count":15,"reply_users_count":2,"latest_reply":"1608481485.225500","reply_users":["U6A936746","U82RE6STE"],"subscribed":false},{"client_msg_id":"90de930f-df24-4d08-a56a-fa40214bca46","type":"message","text":"does anyone know if something like cvxlayers is implemented in Julia convex.jl? if not is it a decent idea to autodiff through a quadratic optimization program? My problems arent particularly big (~ 5-10 constraints, ~3-10 states)","user":"U01A38DLY8N","ts":"1608307220.216300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MSrl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does anyone know if something like cvxlayers is implemented in Julia convex.jl? if not is it a decent idea to autodiff through a quadratic optimization program? My problems arent particularly big (~ 5-10 constraints, ~3-10 states)"}]}]}],"thread_ts":"1608307220.216300","reply_count":4,"reply_users_count":3,"latest_reply":"1608365736.218000","reply_users":["UCZ7VBGUD","U01A38DLY8N","U82RE6STE"],"subscribed":false},{"client_msg_id":"c047da2b-27c8-4eb9-9802-7d2141427426","type":"message","text":"Trying to workout a nontrivial pullback manually is really giving me a new appreciation for how powerful AD really is...","user":"UM30MT6RF","ts":"1608306817.214500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WccL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Trying to workout a nontrivial pullback manually is really giving me a new appreciation for how powerful AD really is..."}]}]}],"thread_ts":"1608306817.214500","reply_count":2,"reply_users_count":2,"latest_reply":"1608317731.217400","reply_users":["UHDQQ4GN6","UM30MT6RF"],"subscribed":false,"reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"bad45d90-5924-41b8-8863-5273aae4f372","type":"message","text":"How can we define custom gradients (in ReverseDiff) for a function f:R^2 x R -&gt; R^2, (x,u)-&gt;f(x,u)? I thought that it is something like,\n```ReverseDiff.@grad f(x,u) = f(x,u), y -&gt; (y'*dfdx,y'*dfdu) ```\nbut this isn't working. Does anyone know how to define it properly?","user":"U019PPN3H6J","ts":"1608131294.206300","team":"T68168MUP","edited":{"user":"U019PPN3H6J","ts":"1608138651.000000"},"blocks":[{"type":"rich_text","block_id":"k1M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can we define custom gradients (in ReverseDiff) for a function f:R^2 x R -> R^2, (x,u)->f(x,u)? I thought that it is something like,\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ReverseDiff.@grad f(x,u) = f(x,u), y -> (y'*dfdx,y'*dfdu) "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but this isn't working. Does anyone know how to define it properly?"}]}]}]},{"client_msg_id":"ec85807a-b27a-4dd7-974e-8c6204a4f7bb","type":"message","text":"I had a dream about chainrules types last night","user":"UDGT4PM41","ts":"1608129071.202200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nRSi1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I had a dream about chainrules types last night"}]}]}],"reactions":[{"name":"zzz","users":["UCZ7VBGUD","UEN48T0BT","U6A936746","UCD4Z3NJZ","UH8A351DJ","U6QGE7S86","U677NAWV8"],"count":7},{"name":"chainrules","users":["U6A936746","UDXST8ARK","UEN48T0BT","UCD4Z3NJZ","UH8A351DJ","U6QGE7S86","U0160CXEY3Z","U677NAWV8"],"count":8},{"name":"vat-the-type-pirate-cat","users":["U7JQGPGCQ","U6QGE7S86","U677NAWV8"],"count":3}]},{"client_msg_id":"714acb3d-1c5f-4c8d-a9fb-26a6037a6a77","type":"message","text":"What causes this with Zygote?\n```ERROR: Need an adjoint for constructor PDiagMat{Float64,Array{Float64,1}}. Gradient is of type PDiagMat{Float64,Array{Float64,1}}```\nSometimes it just gets unhappy about constructors, and sometimes it doesn’t","user":"U6A936746","ts":"1608128432.201100","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1608128454.000000"},"blocks":[{"type":"rich_text","block_id":"xx1X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What causes this with Zygote?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: Need an adjoint for constructor PDiagMat{Float64,Array{Float64,1}}. Gradient is of type PDiagMat{Float64,Array{Float64,1}}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Sometimes it just gets unhappy about constructors, and sometimes it doesn’t"}]}]}]},{"client_msg_id":"8285d6d9-1185-4d7a-a2a9-9bb856760425","type":"message","text":"A very basic question: In ReverseDiff and Zygote are we also supposed to call something like zero_grad() in PyTorch in order to clear previous gradients or are they not summed up?","user":"U019PPN3H6J","ts":"1608117011.200500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6oV=B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A very basic question: In ReverseDiff and Zygote are we also supposed to call something like zero_grad() in PyTorch in order to clear previous gradients or are they not summed up?"}]}]}],"thread_ts":"1608117011.200500","reply_count":3,"reply_users_count":3,"latest_reply":"1608159431.207400","reply_users":["U6A936746","U019PPN3H6J","U6PQP41C3"],"subscribed":false},{"client_msg_id":"d752fd31-b647-4e2c-bbcd-b46583e9a7e6","type":"message","text":"Given a polynomial f I can obtain the expression to compute a Jacobian-vector-product (forward mode) by doing\n\n```julia&gt; @var x y ẋ ẏ\n(x, y, ẋ, ẏ)\n\njulia&gt; f = x + x * y\nx + x*y\n\njulia&gt; @var ε\n(ε,)\n\njulia&gt; differentiate(f([x,y] =&gt; [x,y] + ε * [ẋ, ẏ]), ε)(ε =&gt; 0)\nẋ + x*ẏ + y*ẋ```\n(In this case this is the same result as doing the naive symbolic computation, but in general this is the same as doing forward mode when additionally performing a common subexpression elimination).\n\nQuestion: Is there a similar way to obtain an expression for the reverse mode?","user":"U7KA5J01Y","ts":"1608026643.195500","team":"T68168MUP","edited":{"user":"U7KA5J01Y","ts":"1608040133.000000"},"blocks":[{"type":"rich_text","block_id":"Lfkc0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Given a polynomial f I can obtain the expression to compute a Jacobian-vector-product (forward mode) by doing\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @var x y ẋ ẏ\n(x, y, ẋ, ẏ)\n\njulia> f = x + x * y\nx + x*y\n\njulia> @var ε\n(ε,)\n\njulia> differentiate(f([x,y] => [x,y] + ε * [ẋ, ẏ]), ε)(ε => 0)\nẋ + x*ẏ + y*ẋ"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n(In this case this is the same result as doing the naive symbolic computation, but in general this is the same as doing forward mode when additionally performing a common subexpression elimination).\n\nQuestion: Is there a similar way to obtain an expression for the reverse mode?"}]}]}],"thread_ts":"1608026643.195500","reply_count":4,"reply_users_count":3,"latest_reply":"1608047716.198600","reply_users":["U67G3QRJM","U7KA5J01Y","UD0NS8PDF"],"subscribed":false},{"client_msg_id":"35070eae-6341-4808-bafa-fec493df6a0c","type":"message","text":"is there a reference where the rules for svd <https://github.com/JuliaDiff/ChainRules.jl/blob/master/src/rulesets/LinearAlgebra/factorization.jl#L37> came from?","user":"UDPLCA08H","ts":"1607963792.190600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pgjI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a reference where the rules for svd "},{"type":"link","url":"https://github.com/JuliaDiff/ChainRules.jl/blob/master/src/rulesets/LinearAlgebra/factorization.jl#L37"},{"type":"text","text":" came from?"}]}]}],"thread_ts":"1607963792.190600","reply_count":12,"reply_users_count":7,"latest_reply":"1607974321.194800","reply_users":["U6PQP41C3","UDXST8ARK","UDPLCA08H","U6A936746","UCD4Z3NJZ","UHDQQ4GN6","U6YRZ18GZ"],"subscribed":false}]