{"cursor": 1, "messages": [{"client_msg_id":"d9111366-2842-4ef8-89de-5f92863f41aa","type":"message","text":"I think lines 36-54 can be refactored to just\n```    u, v, w = model.velocities\n    ζ = ComputedField(∂y(w) - ∂z(v))\n    fields = (; u, v, w, ζ)\n\n    global_attributes = Dict(\"Re\" =&gt; Re)\n    output_attributes = Dict(\"ζ\" =&gt; Dict(\"longname\" =&gt; \"vorticity\", \"units\" =&gt; \"1/s\"))\n\n    field_output_writer =\n        NetCDFOutputWriter(model, fields, filename=\"lid_driven_cavity_Re$<http://Re.nc|Re.nc>\", schedule=TimeInterval(0.1),\n                           global_attributes=global_attributes, output_attributes=output_attributes)```","user":"UEP056STX","ts":"1612987346.036600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NqE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think lines 36-54 can be refactored to just\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    u, v, w = model.velocities\n    ζ = ComputedField(∂y(w) - ∂z(v))\n    fields = (; u, v, w, ζ)\n\n    global_attributes = Dict(\"Re\" => Re)\n    output_attributes = Dict(\"ζ\" => Dict(\"longname\" => \"vorticity\", \"units\" => \"1/s\"))\n\n    field_output_writer =\n        NetCDFOutputWriter(model, fields, filename=\"lid_driven_cavity_Re$Re.nc\", schedule=TimeInterval(0.1),\n                           global_attributes=global_attributes, output_attributes=output_attributes)"}]}]}],"reactions":[{"name":"heart","users":["U6740K1SP"],"count":1}]},{"client_msg_id":"12efaaa5-643a-4fb8-936d-202a3ae2fc86","type":"message","text":"`(; u, v, w, ζ)` is short for `(u=u, v=v, w=w, ζ=ζ)` since Julia 1.5 (well you probably know this)","user":"UEP056STX","ts":"1612987377.037200","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1612987501.000000"},"blocks":[{"type":"rich_text","block_id":"f5s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(; u, v, w, ζ)","style":{"code":true}},{"type":"text","text":" is short for "},{"type":"text","text":"(u=u, v=v, w=w, ζ=ζ)","style":{"code":true}},{"type":"text","text":" since Julia 1.5 (well you probably know this)"}]}]}]},{"client_msg_id":"3fd7ada1-14f1-407d-bfa0-c7b36a94d162","type":"message","text":"And the `NetCDFOutputWriter` can infer dimensions from `ComputedField` so that gets rid of some code.","user":"UEP056STX","ts":"1612987400.037700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MP5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And the "},{"type":"text","text":"NetCDFOutputWriter","style":{"code":true}},{"type":"text","text":" can infer dimensions from "},{"type":"text","text":"ComputedField","style":{"code":true}},{"type":"text","text":" so that gets rid of some code."}]}]}]},{"client_msg_id":"6a1545ee-a033-4f42-afdc-247a0d5e5a64","type":"message","text":"But lemme know if it doesn't work!","user":"UEP056STX","ts":"1612987429.038100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UI1I0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But lemme know if it doesn't work!"}]}]}]},{"client_msg_id":"86c4dbad-ef1a-4066-b398-4da045139a08","type":"message","text":"Thanks, we’ll give it a shot","user":"U6740K1SP","ts":"1612987535.038400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"butn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, we’ll give it a shot"}]}]}],"reactions":[{"name":"+1","users":["UEP056STX"],"count":1}]},{"client_msg_id":"e8116f71-142a-4d9a-a097-b5d7f1e34406","type":"message","text":"<@UEP056STX> I've just joined this channel.","user":"U01N3EKNZNJ","ts":"1613507677.043100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Se=k","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UEP056STX"},{"type":"text","text":" I've just joined this channel."}]}]}],"reactions":[{"name":"wave","users":["UMZQBQU67"],"count":1}]},{"client_msg_id":"a4828bb6-d4f1-4101-96c6-46183100dd79","type":"message","text":"Hey <@U01N3EKNZNJ>!","user":"UEP056STX","ts":"1613507688.043300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mPi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey "},{"type":"user","user_id":"U01N3EKNZNJ"},{"type":"text","text":"!"}]}]}],"reactions":[{"name":"eyes","users":["U010LHCP277"],"count":1}]},{"client_msg_id":"b9ffd542-ce9e-4ea2-b61b-f26fc40b61b1","type":"message","text":"Hey, guys, I've checked the code but I just wanted to double-check with a human. Defining an output such as it is written below will only average the `y` dimension between points 20 and 50, right? (in addition to averaging in the `x` and `time` dimensions)","user":"U01E0U2RJJ2","ts":"1613592187.045500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I1v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey, guys, I've checked the code but I just wanted to double-check with a human. Defining an output such as it is written below will only average the "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" dimension between points 20 and 50, right? (in addition to averaging in the "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"time","style":{"code":true}},{"type":"text","text":" dimensions)"}]}]}]},{"client_msg_id":"2b8c2080-a4b1-4c75-8aa5-5873bc856ef0","type":"message","text":"```outputs = (u=AveragedField(u, dims=(1, 2)),)\nNetCDFOutputWriter(model, outputs, schedule = AveragedTimeInterval(2minutes), field_slicer = FieldSlicer(j=20:50, with_halos=false))```","user":"U01E0U2RJJ2","ts":"1613592202.046000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zYj","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"outputs = (u=AveragedField(u, dims=(1, 2)),)\nNetCDFOutputWriter(model, outputs, schedule = AveragedTimeInterval(2minutes), field_slicer = FieldSlicer(j=20:50, with_halos=false))"}]}]}]},{"client_msg_id":"1bad71ea-4ec6-458e-a343-9f3f17b61822","type":"message","text":"Hmmm, `u = AveragedField(u, dims=(1, 2))` should return a `ReducedField` that's been averaged in x and y.","user":"UEP056STX","ts":"1613592303.046700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VIV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmm, "},{"type":"text","text":"u = AveragedField(u, dims=(1, 2))","style":{"code":true}},{"type":"text","text":" should return a "},{"type":"text","text":"ReducedField","style":{"code":true}},{"type":"text","text":" that's been averaged in x and y."}]}]}]},{"client_msg_id":"4e06dbb0-2f20-4105-a0ed-2c4812d31461","type":"message","text":"Then `FieldSlicer(j=20:50, with_halos=false)` will probably try to index the averaged field between `[:, 20:50, :]` but will fail since the averaged field should only have one grid point in x and y.","user":"UEP056STX","ts":"1613592344.047600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F75","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Then "},{"type":"text","text":"FieldSlicer(j=20:50, with_halos=false)","style":{"code":true}},{"type":"text","text":" will probably try to index the averaged field between "},{"type":"text","text":"[:, 20:50, :]","style":{"code":true}},{"type":"text","text":" but will fail since the averaged field should only have one grid point in x and y."}]}]}],"thread_ts":"1613592344.047600","reply_count":3,"reply_users_count":3,"latest_reply":"1613593130.054900","reply_users":["UMZQBQU67","U01E0U2RJJ2","UEP056STX"],"subscribed":false},{"client_msg_id":"43250ab2-8e2b-4ffe-ad78-4807650b70d8","type":"message","text":"You're trying to average in all x and 20 &lt;= j &lt;= 50 (+ in time)?","user":"UEP056STX","ts":"1613592452.048200","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1613592464.000000"},"blocks":[{"type":"rich_text","block_id":"M2V0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You're trying to average in all x and 20 <= j <= 50 (+ in time)?"}]}]}],"thread_ts":"1613592452.048200","reply_count":1,"reply_users_count":1,"latest_reply":"1613592503.048900","reply_users":["U01E0U2RJJ2"],"subscribed":false},{"client_msg_id":"774ddbd0-d50f-40f0-8604-533e28e6a45d","type":"message","text":"Don't think this is possible using just `AveragedField` and `FieldSlicer` as field slicing acts on the final result (in this case, it acts after the average has been computed).","user":"UEP056STX","ts":"1613592512.049200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X/hY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Don't think this is possible using just "},{"type":"text","text":"AveragedField","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"FieldSlicer","style":{"code":true}},{"type":"text","text":" as field slicing acts on the final result (in this case, it acts after the average has been computed)."}]}]}],"thread_ts":"1613592512.049200","reply_count":15,"reply_users_count":2,"latest_reply":"1613593010.054500","reply_users":["U01E0U2RJJ2","UEP056STX"],"subscribed":false},{"client_msg_id":"98552126-35fc-4ed4-b48c-b0bd25d6d57d","type":"message","text":"Right now you might have to average in x and time, then output a yz slice. The yz slice can then be averaged for 20 &lt;= j &lt;= 50 in post-processing/analysis.","user":"UEP056STX","ts":"1613592584.050400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sf6f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right now you might have to average in x and time, then output a yz slice. The yz slice can then be averaged for 20 <= j <= 50 in post-processing/analysis."}]}]}]},{"client_msg_id":"a6aa1eea-6324-40b2-92e3-28345d68c369","type":"message","text":"I would personally design a type for this, something like `WindowedSpatialAverage` that allows me to specify the window along each `i, j, k`. Then making it a callable object of one argument (nominally of `model`, though its irrelevant in this case) allows it to be used with an output writer and time-averaging.","user":"UMZQBQU67","ts":"1613600717.056700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zazT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would personally design a type for this, something like "},{"type":"text","text":"WindowedSpatialAverage","style":{"code":true}},{"type":"text","text":" that allows me to specify the window along each "},{"type":"text","text":"i, j, k","style":{"code":true}},{"type":"text","text":". Then making it a callable object of one argument (nominally of "},{"type":"text","text":"model","style":{"code":true}},{"type":"text","text":", though its irrelevant in this case) allows it to be used with an output writer and time-averaging."}]}]}]},{"client_msg_id":"a40a2ba4-ac21-424c-a15b-26375fd75657","type":"message","text":"<@U67BJLYCS> if I have a function (say, something that’s calculated in a kernel that’s a function of Cartesian indicies `i, j, k`) what’s the easiest way to calculate the average of that function? One way is to store the result of the computation in a `CuArray` and then use `CUDA.mean`. But is there a way to accumulate a `mean` on the fly without allocating intermediate memory? Or can we design a utility in `KernelAbstractions` that does this? cc <@U01E0U2RJJ2>","user":"UMZQBQU67","ts":"1613954839.020200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UOpb","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U67BJLYCS"},{"type":"text","text":" if I have a function (say, something that’s calculated in a kernel that’s a function of Cartesian indicies "},{"type":"text","text":"i, j, k","style":{"code":true}},{"type":"text","text":") what’s the easiest way to calculate the average of that function? One way is to store the result of the computation in a "},{"type":"text","text":"CuArray","style":{"code":true}},{"type":"text","text":" and then use "},{"type":"text","text":"CUDA.mean","style":{"code":true}},{"type":"text","text":". But is there a way to accumulate a "},{"type":"text","text":"mean","style":{"code":true}},{"type":"text","text":" on the fly without allocating intermediate memory? Or can we design a utility in "},{"type":"text","text":"KernelAbstractions","style":{"code":true}},{"type":"text","text":" that does this? cc "},{"type":"user","user_id":"U01E0U2RJJ2"}]}]}]},{"client_msg_id":"a79359a7-c309-4ddc-bde4-aebb6b036fec","type":"message","text":"We can and should add reductions to KA","user":"U67BJLYCS","ts":"1613955653.020600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kucu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We can and should add reductions to KA"}]}]}]},{"client_msg_id":"c7dd634f-1ec5-452d-a9db-120d88025109","type":"message","text":"Hasn't been a priority yet","user":"U67BJLYCS","ts":"1613955660.020900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KX2uX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hasn't been a priority yet"}]}]}]},{"client_msg_id":"a9d5f3b2-2b78-41a4-ada5-1bdd20d1556e","type":"message","text":"<@UC7AF7NSU> <@U6A0PD8CR>","user":"U67BJLYCS","ts":"1613955674.021200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NAs","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UC7AF7NSU"},{"type":"text","text":" "},{"type":"user","user_id":"U6A0PD8CR"}]}]}]},{"type":"message","subtype":"channel_join","ts":"1613955683.021400","user":"UC7AF7NSU","text":"<@UC7AF7NSU> has joined the channel","inviter":"U67BJLYCS"},{"type":"message","subtype":"channel_join","ts":"1613955684.021600","user":"U6A0PD8CR","text":"<@U6A0PD8CR> has joined the channel","inviter":"U67BJLYCS"},{"client_msg_id":"b3efd5fc-6c75-4384-acfc-70fd13ccfbd6","type":"message","text":"`Folds.sum(f, indices, CUDAEx()) / length(indices)` might work for something simple.","user":"UC7AF7NSU","ts":"1613955763.022400","team":"T68168MUP","edited":{"user":"UC7AF7NSU","ts":"1613955846.000000"},"blocks":[{"type":"rich_text","block_id":"ILYVR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Folds.sum(f, indices, CUDAEx()) / length(indices)","style":{"code":true}},{"type":"text","text":" might work for something simple."}]}]}]},{"client_msg_id":"79833921-58ac-4e6c-8916-4b18c73d8173","type":"message","text":"<https://github.com/JuliaFolds/Folds.jl>\n<https://github.com/JuliaFolds/FoldsCUDA.jl>","user":"UC7AF7NSU","ts":"1613955804.022600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JMsGk","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaFolds/Folds.jl"},{"type":"text","text":"\n"},{"type":"link","url":"https://github.com/JuliaFolds/FoldsCUDA.jl"}]}]}]},{"client_msg_id":"f5d8d8a9-d7c2-40d8-8e98-a0facf6ca47e","type":"message","text":"Yeah, but that still requires a second kernel","user":"U67BJLYCS","ts":"1613959386.023300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fniK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, but that still requires a second kernel"}]}]}]},{"client_msg_id":"a4555bab-76aa-4306-bfb4-149ec4fcd8c5","type":"message","text":"Oh, I see. Fusing collect and sum can be expressed as `indices |&gt; Map(f) |&gt; TeeRF(append!!, +)` in Transducers.jl but I haven't implemented enough machinery in FoldsCUDA to support this.","user":"UC7AF7NSU","ts":"1613961017.023700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MpWWi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, I see. Fusing collect and sum can be expressed as "},{"type":"text","text":"indices |> Map(f) |> TeeRF(append!!, +)","style":{"code":true}},{"type":"text","text":" in Transducers.jl but I haven't implemented enough machinery in FoldsCUDA to support this."}]}]}]},{"client_msg_id":"e271888a-e14c-4833-bd06-f676e811c971","type":"message","text":"<@U67BJLYCS> Would a simple `mapreduce` work?","user":"UEP056STX","ts":"1614012497.024700","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1614012721.000000"},"blocks":[{"type":"rich_text","block_id":"Nl1Zl","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U67BJLYCS"},{"type":"text","text":" Would a simple "},{"type":"text","text":"mapreduce","style":{"code":true}},{"type":"text","text":" work?"}]}]}]},{"client_msg_id":"492a314d-26f7-4d91-869e-cd5483b3ced8","type":"message","text":"I guess I'm not sure what the benefits of using FoldsCUDA.jl and Transducers.jl are, at least for computing a mean.","user":"UEP056STX","ts":"1614012549.025600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4OJoZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I'm not sure what the benefits of using FoldsCUDA.jl and Transducers.jl are, at least for computing a mean."}]}]}]},{"client_msg_id":"aaca9941-c055-4671-8ab2-5004f07d7529","type":"message","text":"oh yeah mapreduce will work","user":"U67BJLYCS","ts":"1614013507.026300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RgG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh yeah mapreduce will work"}]}]}]},{"client_msg_id":"54210c92-db88-4da8-bab1-ccef46ac408d","type":"message","text":"I thought Greg's question was how to do that inside a kernel","user":"U67BJLYCS","ts":"1614013518.026600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rPnke","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought Greg's question was how to do that inside a kernel"}]}]}]},{"client_msg_id":"0177a204-9cf2-4a65-afe0-56b9f7549145","type":"message","text":"Ah maybe it is. Still would be cool to try out `mapreduce` (fine for my use case at least).","user":"UEP056STX","ts":"1614013607.027400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wi0n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah maybe it is. Still would be cool to try out "},{"type":"text","text":"mapreduce","style":{"code":true}},{"type":"text","text":" (fine for my use case at least)."}]}]}]},{"client_msg_id":"741d0fae-0b2e-4147-ba98-e00daf8c2131","type":"message","text":"<@UMZQBQU67> We should see if we can pass an `Oceananigans.AbstractOperation` straight to `mapreduce`. Might work out of the box since `getindex` is defined!","user":"UEP056STX","ts":"1614013646.028100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MPL6R","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UMZQBQU67"},{"type":"text","text":" We should see if we can pass an "},{"type":"text","text":"Oceananigans.AbstractOperation","style":{"code":true}},{"type":"text","text":" straight to "},{"type":"text","text":"mapreduce","style":{"code":true}},{"type":"text","text":". Might work out of the box since "},{"type":"text","text":"getindex","style":{"code":true}},{"type":"text","text":" is defined!"}]}]}]},{"client_msg_id":"409ecb97-ead1-493e-b9b6-891b89454e5e","type":"message","text":"Hi everyone! I am new to this channel as well as Julia, Oceananigans, and LES modeling and there is a curious feature in the output of one of the cases I have been working with that I would love feedback on. Is this the proper forum to do that in?","user":"U01LBJ2VA9Z","ts":"1614268368.031600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yh5hm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi everyone! I am new to this channel as well as Julia, Oceananigans, and LES modeling and there is a curious feature in the output of one of the cases I have been working with that I would love feedback on. Is this the proper forum to do that in?"}]}]}]},{"client_msg_id":"cf60c102-526e-4246-8322-5e17f6869d97","type":"message","text":"Hey <@U01LBJ2VA9Z>! Yes this is a great place to ask for feedback.","user":"UEP056STX","ts":"1614268462.032100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AOiQ6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey "},{"type":"user","user_id":"U01LBJ2VA9Z"},{"type":"text","text":"! Yes this is a great place to ask for feedback."}]}]}]},{"client_msg_id":"0a94e764-1e62-4a66-bf09-1f40e6c832cb","type":"message","text":"GitHub discussions also works if you prefer GitHub (or would rather Slack not eat up the chat history).","user":"UEP056STX","ts":"1614268489.032700","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1614268538.000000"},"blocks":[{"type":"rich_text","block_id":"0Y3K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"GitHub discussions also works if you prefer GitHub (or would rather Slack not eat up the chat history)."}]}]}]},{"type":"message","text":"Thanks <@UEP056STX>, I will try it here first! I have attached a plot of the eddy viscosity from my run and the .jl file for the run. Is anyone familiar with what could be causing the large spike and subsequent decrease in eddy viscosity at ~8/22 9:36 . The spike appears in temperature, u, and v (and calculated fields like N^2 and gradient Richardson number) as well. It doesn’t appear to have a significant impact on the temperature structure of the water column but I would love to know what might be causing it. Any thoughts? Thanks for the help!","files":[{"id":"F01PJPE0HU4","created":1614268631,"timestamp":1614268631,"name":"Screen Shot 2021-02-25 at 10.56.45 AM.png","title":"Screen Shot 2021-02-25 at 10.56.45 AM.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01LBJ2VA9Z","editable":false,"size":265328,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01PJPE0HU4/screen_shot_2021-02-25_at_10.56.45_am.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01PJPE0HU4/download/screen_shot_2021-02-25_at_10.56.45_am.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01PJPE0HU4-2eac5bcff9/screen_shot_2021-02-25_at_10.56.45_am_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01PJPE0HU4-2eac5bcff9/screen_shot_2021-02-25_at_10.56.45_am_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01PJPE0HU4-2eac5bcff9/screen_shot_2021-02-25_at_10.56.45_am_360.png","thumb_360_w":360,"thumb_360_h":285,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01PJPE0HU4-2eac5bcff9/screen_shot_2021-02-25_at_10.56.45_am_480.png","thumb_480_w":480,"thumb_480_h":380,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01PJPE0HU4-2eac5bcff9/screen_shot_2021-02-25_at_10.56.45_am_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01PJPE0HU4-2eac5bcff9/screen_shot_2021-02-25_at_10.56.45_am_720.png","thumb_720_w":720,"thumb_720_h":570,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01PJPE0HU4-2eac5bcff9/screen_shot_2021-02-25_at_10.56.45_am_800.png","thumb_800_w":800,"thumb_800_h":633,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01PJPE0HU4-2eac5bcff9/screen_shot_2021-02-25_at_10.56.45_am_960.png","thumb_960_w":960,"thumb_960_h":760,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01PJPE0HU4-2eac5bcff9/screen_shot_2021-02-25_at_10.56.45_am_1024.png","thumb_1024_w":1024,"thumb_1024_h":810,"original_w":1160,"original_h":918,"thumb_tiny":"AwAlADDRbcc7TioC024gtj8KsdzSFQetAWKpeUfx/pQJJT/H+lSvDnoaj8tlNIWopllA4I/KpUkYzuhIwAuPxpqpxSx8XMn0WmgJe5oo7migYUUUUDCo0H75z7CpKaB85PsKBDscnnrRt6c0tFACbeOpo289aWigBNvTk0uKKKAP/9k=","permalink":"https://julialang.slack.com/files/U01LBJ2VA9Z/F01PJPE0HU4/screen_shot_2021-02-25_at_10.56.45_am.png","permalink_public":"https://slack-files.com/T68168MUP-F01PJPE0HU4-4d77dcf0d4","is_starred":false,"has_rich_preview":false},{"id":"F01P9GJ2EN9","created":1614268805,"timestamp":1614268805,"name":"Soulik_nowaves.jl","title":"Soulik_nowaves.jl","mimetype":"text/plain","filetype":"text","pretty_type":"Plain Text","user":"U01LBJ2VA9Z","editable":true,"size":7760,"mode":"snippet","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01P9GJ2EN9/soulik_nowaves.jl","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01P9GJ2EN9/download/soulik_nowaves.jl","permalink":"https://julialang.slack.com/files/U01LBJ2VA9Z/F01P9GJ2EN9/soulik_nowaves.jl","permalink_public":"https://slack-files.com/T68168MUP-F01P9GJ2EN9-985e27be06","edit_link":"https://julialang.slack.com/files/U01LBJ2VA9Z/F01P9GJ2EN9/soulik_nowaves.jl/edit","preview":"using Random\nusing Printf\nusing Oceananigans\nusing Oceananigans.Utils\nusing Oceananigans.Grids: nodes","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>using Random</pre></div>\n<div><pre>using Printf</pre></div>\n<div><pre>using Oceananigans</pre></div>\n<div><pre>using Oceananigans.Utils</pre></div>\n<div><pre>using Oceananigans.Grids: nodes</pre></div>\n</div>\n</div>\n","lines":195,"lines_more":190,"preview_is_truncated":true,"is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"xRZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks "},{"type":"user","user_id":"UEP056STX"},{"type":"text","text":", I will try it here first! I have attached a plot of the eddy viscosity from my run and the .jl file for the run. Is anyone familiar with what could be causing the large spike and subsequent decrease in eddy viscosity at ~8/22 9:36 . The spike appears in temperature, u, and v (and calculated fields like N^2 and gradient Richardson number) as well. It doesn’t appear to have a significant impact on the temperature structure of the water column but I would love to know what might be causing it. Any thoughts? Thanks for the help!"}]}]}],"user":"U01LBJ2VA9Z","ts":"1614269117.036800"},{"client_msg_id":"155dc315-ca56-4f06-9c41-c07955aa9c9d","type":"message","text":"Ah nice plot! I'm not as well versed in LES as <@UMZQBQU67> and I haven't used `ConstantSmagorinsky` much but your eddy viscosity plot perhaps suggests some kind of transition to turbulence around 8/22 9:36?","user":"UEP056STX","ts":"1614273074.039200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1je=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah nice plot! I'm not as well versed in LES as "},{"type":"user","user_id":"UMZQBQU67"},{"type":"text","text":" and I haven't used "},{"type":"text","text":"ConstantSmagorinsky","style":{"code":true}},{"type":"text","text":" much but your eddy viscosity plot perhaps suggests some kind of transition to turbulence around 8/22 9:36?"}]}]}]},{"client_msg_id":"652108c9-f62e-4082-ac5c-1db74c3a33b2","type":"message","text":"I guess I expect the eddy viscosity to increase when you have lots of turbulence, especially if the onset of turbulence is sudden or the turbulence is unresolved.","user":"UEP056STX","ts":"1614273075.039400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M4x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I expect the eddy viscosity to increase when you have lots of turbulence, especially if the onset of turbulence is sudden or the turbulence is unresolved."}]}]}]},{"client_msg_id":"01308c9e-e02d-40a3-813a-55ce9ed126e2","type":"message","text":"But in general I think you don't want to see the LES model imprinting or introducing artifacts into the prognostic variables u, v, T, etc.","user":"UEP056STX","ts":"1614273121.040300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4961","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But in general I think you don't want to see the LES model imprinting or introducing artifacts into the prognostic variables u, v, T, etc."}]}]}]},{"client_msg_id":"6e6f10a1-940d-48e7-ab89-590dcb21def5","type":"message","text":"I recall that `ConstantSmagorinsky` may be grid dependent so I'm wondering if perhaps changing the resolution helps?","user":"UEP056STX","ts":"1614273190.041200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2A+7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I recall that "},{"type":"text","text":"ConstantSmagorinsky","style":{"code":true}},{"type":"text","text":" may be grid dependent so I'm wondering if perhaps changing the resolution helps?"}]}]}]},{"client_msg_id":"5cc6d0af-7534-4d88-b390-fef909189008","type":"message","text":"I see you've commented out `AnisotropicMinimumDissipation`. Did it not work out for you? I think our experience has been that AMD performs better than Smagorinsky and AMD is supposed to not be sensitive to grid resolution.","user":"UEP056STX","ts":"1614273252.042300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ctx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see you've commented out "},{"type":"text","text":"AnisotropicMinimumDissipation","style":{"code":true}},{"type":"text","text":". Did it not work out for you? I think our experience has been that AMD performs better than Smagorinsky and AMD is supposed to not be sensitive to grid resolution."}]}]}]},{"client_msg_id":"acdfccb5-0d75-4095-9b03-17cf80a55dd9","type":"message","text":"The values you're seeing of νₑ ~ 10⁻² m²/s seem decently small enough.","user":"UEP056STX","ts":"1614273383.043500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g5LyO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The values you're seeing of νₑ ~ 10⁻² m²/s seem decently small enough."}]}]}]},{"client_msg_id":"74b7c694-fd93-4535-a004-e8fe66e5c269","type":"message","text":"I guess a rule of thumb is that the resolved flow should contain 80%+ of the energy, otherwise you might be far from the LES regime because you're not even simulating the large eddies.","user":"UEP056STX","ts":"1614273384.043700","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1614273406.000000"},"blocks":[{"type":"rich_text","block_id":"RtB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess a rule of thumb is that the resolved flow should contain 80%+ of the energy, otherwise you might be far from the LES regime because you're not even simulating the large eddies."}]}]}]},{"client_msg_id":"8ca854fa-cdc5-4357-8568-3d2785386ab0","type":"message","text":"If you feel that the LES model is affecting the solution too much (or νₑ is too large) then increasing the grid resolution should help I think.","user":"UEP056STX","ts":"1614273439.044500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"39Hq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you feel that the LES model is affecting the solution too much (or νₑ is too large) then increasing the grid resolution should help I think."}]}]}]},{"client_msg_id":"7eccc8ba-b922-41cd-9b52-8f573b433d41","type":"message","text":"Hi, <@U01LBJ2VA9Z>, welcome to the channel!\nI took a quick look at your script and it seems like you're reading the surface forcings from a file, right?","user":"U01E0U2RJJ2","ts":"1614274077.045300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i9l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, "},{"type":"user","user_id":"U01LBJ2VA9Z"},{"type":"text","text":", welcome to the channel!\nI took a quick look at your script and it seems like you're reading the surface forcings from a file, right?"}]}]}]},{"client_msg_id":"845ffb74-59b2-470e-84ab-344ca205e3bd","type":"message","text":"I guess the first thing I'd check is whether the forcings do anything different around that time. LES is a dynamic diffusivity closure (using that nomenclature loosely), in the sense that the diffusivities should dynamically respond to changes in the turbulence. So having a dip and a subsequent pick-up in the eddy diffusivity values like that may be normal depending on the dynamics you're simulating","user":"U01E0U2RJJ2","ts":"1614274234.047900","team":"T68168MUP","edited":{"user":"U01E0U2RJJ2","ts":"1614274365.000000"},"blocks":[{"type":"rich_text","block_id":"t=dOt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess the first thing I'd check is whether the forcings do anything different around that time. LES is a dynamic diffusivity closure (using that nomenclature loosely), in the sense that the diffusivities should dynamically respond to changes in the turbulence. So having a dip and a subsequent pick-up in the eddy diffusivity values like that may be normal depending on the dynamics you're simulating"}]}]}]},{"client_msg_id":"1c1f2896-e945-46f0-87dd-44c211b64f84","type":"message","text":"If around that time (for whatever reason) your forcing is such that it quickly suppresses turbulence and then picks up again, then the eddy diff is doing exactly what you'd expect","user":"U01E0U2RJJ2","ts":"1614274285.049000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hYd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If around that time (for whatever reason) your forcing is such that it quickly suppresses turbulence and then picks up again, then the eddy diff is doing exactly what you'd expect"}]}]}]},{"client_msg_id":"a7845adc-918a-420e-9988-91dd439df2b2","type":"message","text":"If that's not case then some more investigation is needed","user":"U01E0U2RJJ2","ts":"1614274300.049500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"97Q2c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If that's not case then some more investigation is needed"}]}]}]},{"client_msg_id":"365cbe2b-f685-4d68-873d-c378998d0087","type":"message","text":"I guess plotting the tke in the same way would help to see if there's a correlation","user":"U01E0U2RJJ2","ts":"1614274790.050100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i1Zes","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess plotting the tke in the same way would help to see if there's a correlation"}]}]}]},{"client_msg_id":"108417d8-e4ca-401c-a8e1-72ccfc1df940","type":"message","text":"<@UEP056STX> I switched to `ConstantSmagorinsky` because `AnisotropicMinimumDissipation`  was causing diffusion of the pycnocline before the forcing started and the strength of the stratification is crucial to the case. Maybe I will try a finer grid and see what happens.\n\n<@U01E0U2RJJ2> Yes I am forcing from a file. The surface forcing is from a meterological buoy. I have studied the forcing extensively but, now that I think about it, I don’t think I have plotted the functions that I fit to the data in the run script. I should probably check that the fitting didn’t cause any weird jumps in the forcing. There is a decrease in wind speed right around that time but I didn’t think it would be felt so immediately through the whole surface.\nI know this question might not have a very direct answer but is there a standard method to finding the turbulent velocity components needed to calculate TKE? Is there a standard time scale to average over to get the Reynold’s averaged component?","user":"U01LBJ2VA9Z","ts":"1614277982.057000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rrD","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UEP056STX"},{"type":"text","text":" I switched to "},{"type":"text","text":"ConstantSmagorinsky","style":{"code":true}},{"type":"text","text":" because "},{"type":"text","text":"AnisotropicMinimumDissipation","style":{"code":true}},{"type":"text","text":"  was causing diffusion of the pycnocline before the forcing started and the strength of the stratification is crucial to the case. Maybe I will try a finer grid and see what happens.\n\n"},{"type":"user","user_id":"U01E0U2RJJ2"},{"type":"text","text":" Yes I am forcing from a file. The surface forcing is from a meterological buoy. I have studied the forcing extensively but, now that I think about it, I don’t think I have plotted the functions that I fit to the data in the run script. I should probably check that the fitting didn’t cause any weird jumps in the forcing. There is a decrease in wind speed right around that time but I didn’t think it would be felt so immediately through the whole surface.\nI know this question might not have a very direct answer but is there a standard method to finding the turbulent velocity components needed to calculate TKE? Is there a standard time scale to average over to get the Reynold’s averaged component?"}]}]}],"thread_ts":"1614277982.057000","reply_count":10,"reply_users_count":3,"latest_reply":"1614280489.064200","reply_users":["U01E0U2RJJ2","UMZQBQU67","U01LBJ2VA9Z"],"subscribed":false},{"client_msg_id":"394a96e6-d70b-41ed-8cc5-2e1c71d40682","type":"message","text":"&gt;  I know this question might not have a very direct answer but is there a standard method to finding the turbulent velocity components needed to calculate TKE? Is there a standard time scale to average over to get the Reynold’s averaged component?\nWe usually define TKE as the variance associated with the perturbation velocity field around the horizontal mean. This does conflate internal wave energy with turbulent kinetic energy; however for boundary layer problems (at least, the ones that we usually find interesting…) internal wave energy is typically small compared to surface-forced turbulence and the conflation of the two is not an issue. With this definition, and in a horizontally-periodic domain, you can calculating TKE by first calculating the horizontally-averaged horizontal velocities and then squaring the perturbations therefrom.\n\nDue to a limitation with AbstractOperations it’s current requires a bit of work to calculate TKE on the GPU; however <@U01E0U2RJJ2> has written a package that you can use in conjunction with Oceananigans to do this quickly:\n\n<https://github.com/tomchor/Oceanostics.jl>","user":"UMZQBQU67","ts":"1614280212.062000","team":"T68168MUP","edited":{"user":"UMZQBQU67","ts":"1614280335.000000"},"blocks":[{"type":"rich_text","block_id":"k18","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" I know this question might not have a very direct answer but is there a standard method to finding the turbulent velocity components needed to calculate TKE? Is there a standard time scale to average over to get the Reynold’s averaged component?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nWe usually define TKE as the variance associated with the perturbation velocity field around the horizontal mean. This does conflate internal wave energy with turbulent kinetic energy; however for boundary layer problems (at least, the ones that we usually find interesting…) internal wave energy is typically small compared to surface-forced turbulence and the conflation of the two is not an issue. With this definition, and in a horizontally-periodic domain, you can calculating TKE by first calculating the horizontally-averaged horizontal velocities and then squaring the perturbations therefrom.\n\nDue to a limitation with AbstractOperations it’s current requires a bit of work to calculate TKE on the GPU; however "},{"type":"user","user_id":"U01E0U2RJJ2"},{"type":"text","text":" has written a package that you can use in conjunction with Oceananigans to do this quickly:\n\n"},{"type":"link","url":"https://github.com/tomchor/Oceanostics.jl"}]}]}]},{"client_msg_id":"4da5318d-44c8-4d49-a45b-71a6cb83e091","type":"message","text":"Actually I don’t see turbulent kinetic energy in Oceanostics yet --- but probably we should add it (maybe that’s my job :smirk:). Anyways, until then there is an implementation in the LESbrary.jl:\n\n<https://github.com/CliMA/LESbrary.jl/blob/master/src/TurbulenceStatistics/turbulent_kinetic_energy.jl>\n\nTo use this you would add `LESbrary.jl` to your environment and then put something like\n\n```using LESbrary.TurbulenceStatistics: TurbulentKineticEnergy\n\ntke = TurbulentKineticEnergy(model)```\nwhich you should then be able to use with `OutputWriters` like any other `ComputedField`.","user":"UMZQBQU67","ts":"1614280439.064100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3q1nE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually I don’t see turbulent kinetic energy in Oceanostics yet --- but probably we should add it (maybe that’s my job "},{"type":"emoji","name":"smirk"},{"type":"text","text":"). Anyways, until then there is an implementation in the LESbrary.jl:\n\n"},{"type":"link","url":"https://github.com/CliMA/LESbrary.jl/blob/master/src/TurbulenceStatistics/turbulent_kinetic_energy.jl"},{"type":"text","text":"\n\nTo use this you would add "},{"type":"text","text":"LESbrary.jl","style":{"code":true}},{"type":"text","text":" to your environment and then put something like\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using LESbrary.TurbulenceStatistics: TurbulentKineticEnergy\n\ntke = TurbulentKineticEnergy(model)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nwhich you should then be able to use with "},{"type":"text","text":"OutputWriters","style":{"code":true}},{"type":"text","text":" like any other "},{"type":"text","text":"ComputedField","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"c0d083ec-1eb6-4dc7-a400-353fbaaa86b9","type":"message","text":"I'm just gonna post this here is case it interests anyone: <https://www.gpuhackathons.org/event/sdsc-gpu-hackathon>\nUCSD is hosting a GPU hackathon. I haven't been to it, but I've attended one of their high-performance computing workshops and it was quite good","user":"U01E0U2RJJ2","ts":"1614307783.071100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"35sf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm just gonna post this here is case it interests anyone: "},{"type":"link","url":"https://www.gpuhackathons.org/event/sdsc-gpu-hackathon"},{"type":"text","text":"\nUCSD is hosting a GPU hackathon. I haven't been to it, but I've attended one of their high-performance computing workshops and it was quite good"}]}]}]},{"client_msg_id":"26b7b9bd-dc91-4a5d-987e-d5be33c55868","type":"message","text":"Not to spam everyone with links, but at some point I heard you guys mention that you want to profile the code. I came across this webcast that might be useful: <https://portal.xsede.org/course-calendar/-/training-user/class/2310/session/3970>","user":"U01E0U2RJJ2","ts":"1614725184.073700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1yuoN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not to spam everyone with links, but at some point I heard you guys mention that you want to profile the code. I came across this webcast that might be useful: "},{"type":"link","url":"https://portal.xsede.org/course-calendar/-/training-user/class/2310/session/3970"}]}]}]},{"client_msg_id":"cee215a4-7ce0-45c1-8684-26e66f82693a","type":"message","text":"From what I can tell it's specifically aimed at GPU computing","user":"U01E0U2RJJ2","ts":"1614725202.074100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zCf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From what I can tell it's specifically aimed at GPU computing"}]}]}]},{"client_msg_id":"39eb80b0-8c84-4eec-bb13-3bd0cf4e7093","type":"message","text":"In case anyone's been trying, I think Oceananigans.jl finally works with Julia 1.6 now :tada:","user":"UEP056STX","ts":"1614877723.001400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qZx1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In case anyone's been trying, I think Oceananigans.jl finally works with Julia 1.6 now "},{"type":"emoji","name":"tada"}]}]}]},{"type":"message","text":"I wanted to share with everyone some recent results using `ShallowWaterModel`.\n\nThe theory states that if you initialize a zonal channel with a Bickley jet then the maximum growth rate is `0.1397`, as can be seen <https://github.com/francispoulin/Linear-Stability-Calculators/blob/main/ShallowWater/Julia/Cartesian/growth_rates_Cartesian_Bickley_jet.png|here> with the most unstable mode having a vorticity field that looks like <https://github.com/francispoulin/Linear-Stability-Calculators/blob/main/ShallowWater/Julia/Cartesian/modes_2D_vorticity.png|this>.\n\nBelow you will see a plot of the growth rate that yields a value of `0.1384` (1% error) and you will see an animation with the total vorticity on the left and the perturbation vorticity on the right.  This uses `WENO5` for advection.  The agreement is rather remarkable, espeically considering that the resolution is only `256x256`.  Tomorrow I plan to put together an example, the first for this model, to share with the community.  Thanks to everyone who helped make this happen!","files":[{"id":"F01RKRP1D88","created":1615430419,"timestamp":1615430419,"name":"growth_rates.png","title":"growth_rates.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01FBLBCP7S","editable":false,"size":21034,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01RKRP1D88/growth_rates.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01RKRP1D88/download/growth_rates.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01RKRP1D88-8066a31038/growth_rates_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01RKRP1D88-8066a31038/growth_rates_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01RKRP1D88-8066a31038/growth_rates_360.png","thumb_360_w":360,"thumb_360_h":240,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01RKRP1D88-8066a31038/growth_rates_480.png","thumb_480_w":480,"thumb_480_h":320,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01RKRP1D88-8066a31038/growth_rates_160.png","original_w":600,"original_h":400,"thumb_tiny":"AwAgADDT70UgOTxS0AIQG60m0KRgc9qUnAoA7nrQAfN7GgE56YpaKAEHBpaRgT0OPpTQh7sT7E0AOHJz27UtHPpSA5HFAC0mQTijkjpRjB6UAf/Z","permalink":"https://julialang.slack.com/files/U01FBLBCP7S/F01RKRP1D88/growth_rates.png","permalink_public":"https://slack-files.com/T68168MUP-F01RKRP1D88-0826e39d15","is_starred":false,"has_rich_preview":false},{"id":"F01R269C05S","created":1615430427,"timestamp":1615430427,"name":"Bickley_Jet_ShallowWater.mp4","title":"Bickley_Jet_ShallowWater.mp4","mimetype":"video/mp4","filetype":"mp4","pretty_type":"MPEG 4 Video","user":"U01FBLBCP7S","editable":false,"size":740297,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01R269C05S/bickley_jet_shallowwater.mp4","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01R269C05S/download/bickley_jet_shallowwater.mp4","thumb_video":"https://files.slack.com/files-tmb/T68168MUP-F01R269C05S-3c7ba2efbe/bickley_jet_shallowwater_thumb_video.jpeg","permalink":"https://julialang.slack.com/files/U01FBLBCP7S/F01R269C05S/bickley_jet_shallowwater.mp4","permalink_public":"https://slack-files.com/T68168MUP-F01R269C05S-b81d93cf17","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"RpVjZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wanted to share with everyone some recent results using "},{"type":"text","text":"ShallowWaterModel","style":{"code":true}},{"type":"text","text":".\n\nThe theory states that if you initialize a zonal channel with a Bickley jet then the maximum growth rate is "},{"type":"text","text":"0.1397","style":{"code":true}},{"type":"text","text":", as can be seen "},{"type":"link","url":"https://github.com/francispoulin/Linear-Stability-Calculators/blob/main/ShallowWater/Julia/Cartesian/growth_rates_Cartesian_Bickley_jet.png","text":"here"},{"type":"text","text":" with the most unstable mode having a vorticity field that looks like "},{"type":"link","url":"https://github.com/francispoulin/Linear-Stability-Calculators/blob/main/ShallowWater/Julia/Cartesian/modes_2D_vorticity.png","text":"this"},{"type":"text","text":".\n\nBelow you will see a plot of the growth rate that yields a value of "},{"type":"text","text":"0.1384","style":{"code":true}},{"type":"text","text":" (1% error) and you will see an animation with the total vorticity on the left and the perturbation vorticity on the right.  This uses "},{"type":"text","text":"WENO5","style":{"code":true}},{"type":"text","text":" for advection.  The agreement is rather remarkable, espeically considering that the resolution is only "},{"type":"text","text":"256x256","style":{"code":true}},{"type":"text","text":".  Tomorrow I plan to put together an example, the first for this model, to share with the community.  Thanks to everyone who helped make this happen!"}]}]}],"user":"U01FBLBCP7S","ts":"1615430548.005200","reactions":[{"name":"tada","users":["U01E0U2RJJ2","UEP056STX"],"count":2},{"name":"bickley-jet","users":["UEP056STX"],"count":1}]},{"client_msg_id":"d3376fa8-4516-4392-a8ae-9801660ff70c","type":"message","text":"I recall we had some issues with oceananigans colliding with Flux, and I came across this in julia docs - they provide a solution:\n<https://docs.julialang.org/en/v1/manual/style-guide/#Avoid-type-piracy>\nSorry if I forget what the issue was exactly, but I recall showing it to <@UEP056STX>","user":"U01BG0NN34J","ts":"1615604360.009200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9ZWT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I recall we had some issues with oceananigans colliding with Flux, and I came across this in julia docs - they provide a solution:\n"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/style-guide/#Avoid-type-piracy"},{"type":"text","text":"\nSorry if I forget what the issue was exactly, but I recall showing it to "},{"type":"user","user_id":"UEP056STX"}]}]}]},{"client_msg_id":"a61fd4fe-38e5-4850-ab6c-3c97646398bd","type":"message","text":"Oceananigans.jl randomly showed up in the Dec 2020 issue of Linux magazine lol: <https://www.linux-magazine.com/Online/Features/Scientist-s-Toolbox/(offset)/3>","user":"UEP056STX","ts":"1616012021.000200","team":"T68168MUP","attachments":[{"service_name":"Linux Magazine","title":"The Scientist's Linux Toolbox » Linux Magazine","title_link":"https://www.linux-magazine.com/Online/Features/Scientist-s-Toolbox/(offset)/3","text":"Linux and science are a natural fit. These are a handful of essential software packages both for getting work done and presenting it to others.","fallback":"Linux Magazine: The Scientist's Linux Toolbox » Linux Magazine","image_url":"http://www.linux-magazine.com/var/linux_magazin/storage/images/issues/2020/241/scientist-s-toolbox/figure-2/777471-1-eng-US/Figure-2_opengraph_h.png","image_width":308,"image_height":200,"from_url":"https://www.linux-magazine.com/Online/Features/Scientist-s-Toolbox/(offset)/3","image_bytes":68090,"id":1,"original_url":"https://www.linux-magazine.com/Online/Features/Scientist-s-Toolbox/(offset)/3"}],"blocks":[{"type":"rich_text","block_id":"XNR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oceananigans.jl randomly showed up in the Dec 2020 issue of Linux magazine lol: "},{"type":"link","url":"https://www.linux-magazine.com/Online/Features/Scientist-s-Toolbox/(offset)/3"}]}]}],"reactions":[{"name":"star-struck","users":["U01DJ59B2SE"],"count":1}]},{"client_msg_id":"a57e4ee2-c98d-4d17-b7a6-e5485ea877c3","type":"message","text":"Nice!","user":"U67BJLYCS","ts":"1616012203.000500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n0pCP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice!"}]}]}]},{"client_msg_id":"7051a1d0-076f-41a5-98e0-b07a23f0daef","type":"message","text":"Hi all, I ma trying to turn a CPU run into a GPU run so I can do some high resolution tests and maybe, down the line, play with the Stokes drift fields. What version of CUDA is required?","user":"U01LBJ2VA9Z","ts":"1616095945.002900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"diAvI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all, I ma trying to turn a CPU run into a GPU run so I can do some high resolution tests and maybe, down the line, play with the Stokes drift fields. What version of CUDA is required?"}]}]}]},{"client_msg_id":"D880894E-B3E5-4925-8ED6-84162B14E57A","type":"message","text":"Is there a relatively simple way to save the velocity values before the pressure correction step? Either along with the regular velocity output (ideal) or just instead of the usual velocity output. ","user":"U01DJ59B2SE","ts":"1616526579.020300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7t=d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a relatively simple way to save the velocity values before the pressure correction step? Either along with the regular velocity output (ideal) or just instead of the usual velocity output. "}]}]}]},{"type":"message","text":"Hello! I am looking for a nudge in the right direction. I want to run this shallow water model:","files":[{"id":"F01SFQ8S2PM","created":1616696486,"timestamp":1616696486,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UEGRU91B2","editable":false,"size":11702,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01SFQ8S2PM/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01SFQ8S2PM/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01SFQ8S2PM-aeb1de424d/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01SFQ8S2PM-aeb1de424d/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01SFQ8S2PM-aeb1de424d/image_360.png","thumb_360_w":360,"thumb_360_h":121,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01SFQ8S2PM-aeb1de424d/image_160.png","original_w":412,"original_h":138,"thumb_tiny":"AwAQADDSP3hzTc8NzT8DOabg5OAMGgBQenNNH8XNO59sUgB9Bz1oAdRSc5pRnvQB/9k=","permalink":"https://julialang.slack.com/files/UEGRU91B2/F01SFQ8S2PM/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01SFQ8S2PM-95cea8d48d","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"O1lM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello! I am looking for a nudge in the right direction. I want to run this shallow water model:"}]}]}],"user":"UEGRU91B2","display_as_bot":false,"ts":"1616696489.025000","thread_ts":"1616696489.025000","reply_count":3,"reply_users_count":2,"latest_reply":"1616697295.025900","reply_users":["UEGRU91B2","U01FBLBCP7S"],"is_locked":false,"subscribed":false},{"client_msg_id":"a99abd34-4cae-4948-8432-ff4cd2fce29c","type":"message","text":"<@UEP056STX> and I have been doing some benchmarking of the `ShallowWaterModel` on `CPU`s vs `GPU`s.  After learning more about benchmarking than we had anticpated, we have the following results to share, which were run on a Tesla V100-SXM2-32GB machine.\n```        Shallow water model CPU -&gt; GPU speedup\n┌─────────────┬───────┬──────────┬─────────┬─────────┐\n│ Float_types │    Ns │  speedup │  memory │  allocs │\n├─────────────┼───────┼──────────┼─────────┼─────────┤\n│     Float64 │    32 │ 0.697116 │ 2.09724 │ 2.97978 │\n│     Float64 │    64 │  1.02927 │ 2.15944 │ 2.97029 │\n│     Float64 │   128 │  2.42711 │ 2.27406 │ 2.97029 │\n│     Float64 │   256 │  7.32025 │ 2.52177 │ 2.97029 │\n│     Float64 │   512 │  28.1914 │ 2.98971 │  2.9174 │\n│     Float64 │  1024 │  112.326 │ 3.93542 │ 2.93495 │\n│     Float64 │  2048 │  175.735 │ 5.81322 │ 2.98141 │\n│     Float64 │  4096 │  183.947 │ 9.58727 │ 2.96283 │\n│     Float64 │  8192 │  189.795 │  17.139 │ 2.96283 │\n│     Float64 │ 16384 │  186.833 │ 32.2437 │ 2.97419 │\n└─────────────┴───────┴──────────┴─────────┴─────────┘```\nWe weren't able to go any higher than this resolution, so we must be close to the 32GB of memory limit.  When we start testing `MultiGPU` (or `MPI_GPU`) we should be able to raise the wall and do even higher resolutions on two or more GPUs.\n\nThe punchline is that starting at `1024^2` we get a speed up of over `100` and it nearly doubles to `190`  at `4096^2`. To put this in context, to get something compariable, we would need `190` CPUs with MPI running at perfect efficiency.  Our eficiency performances of MPI showed that after 32 cores we had an efficiency of just over 80%.  I supsect we would need a lot more than 256 cores on the MPI code to run this quicky, but this is not something that we have checked (yet).  One GPU does a rather amazing job and should probably be used instead.","user":"U01FBLBCP7S","ts":"1616770712.035600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PG5","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UEP056STX"},{"type":"text","text":" and I have been doing some benchmarking of the "},{"type":"text","text":"ShallowWaterModel","style":{"code":true}},{"type":"text","text":" on `CPU`s vs `GPU`s.  After learning more about benchmarking than we had anticpated, we have the following results to share, which were run on a Tesla V100-SXM2-32GB machine.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"        Shallow water model CPU -> GPU speedup\n┌─────────────┬───────┬──────────┬─────────┬─────────┐\n│ Float_types │    Ns │  speedup │  memory │  allocs │\n├─────────────┼───────┼──────────┼─────────┼─────────┤\n│     Float64 │    32 │ 0.697116 │ 2.09724 │ 2.97978 │\n│     Float64 │    64 │  1.02927 │ 2.15944 │ 2.97029 │\n│     Float64 │   128 │  2.42711 │ 2.27406 │ 2.97029 │\n│     Float64 │   256 │  7.32025 │ 2.52177 │ 2.97029 │\n│     Float64 │   512 │  28.1914 │ 2.98971 │  2.9174 │\n│     Float64 │  1024 │  112.326 │ 3.93542 │ 2.93495 │\n│     Float64 │  2048 │  175.735 │ 5.81322 │ 2.98141 │\n│     Float64 │  4096 │  183.947 │ 9.58727 │ 2.96283 │\n│     Float64 │  8192 │  189.795 │  17.139 │ 2.96283 │\n│     Float64 │ 16384 │  186.833 │ 32.2437 │ 2.97419 │\n└─────────────┴───────┴──────────┴─────────┴─────────┘"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"We weren't able to go any higher than this resolution, so we must be close to the 32GB of memory limit.  When we start testing "},{"type":"text","text":"MultiGPU","style":{"code":true}},{"type":"text","text":" (or "},{"type":"text","text":"MPI_GPU","style":{"code":true}},{"type":"text","text":") we should be able to raise the wall and do even higher resolutions on two or more GPUs.\n\nThe punchline is that starting at "},{"type":"text","text":"1024^2","style":{"code":true}},{"type":"text","text":" we get a speed up of over "},{"type":"text","text":"100","style":{"code":true}},{"type":"text","text":" and it nearly doubles to "},{"type":"text","text":"190","style":{"code":true}},{"type":"text","text":"  at "},{"type":"text","text":"4096^2","style":{"code":true}},{"type":"text","text":". To put this in context, to get something compariable, we would need "},{"type":"text","text":"190","style":{"code":true}},{"type":"text","text":" CPUs with MPI running at perfect efficiency.  Our eficiency performances of MPI showed that after 32 cores we had an efficiency of just over 80%.  I supsect we would need a lot more than 256 cores on the MPI code to run this quicky, but this is not something that we have checked (yet).  One GPU does a rather amazing job and should probably be used instead."}]}]}]},{"client_msg_id":"7a12bd54-4ded-4ea8-93ce-5582abeb3ad4","type":"message","text":"Hi again! I wonder if I can have two forcings for the same field applied one after the other?","user":"UEGRU91B2","ts":"1617136191.049000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SJQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi again! I wonder if I can have two forcings for the same field applied one after the other?"}]}]}],"thread_ts":"1617136191.049000","reply_count":17,"reply_users_count":2,"latest_reply":"1617138826.052400","reply_users":["UEGRU91B2","UMZQBQU67"],"is_locked":false,"subscribed":false},{"client_msg_id":"9b142883-18b0-4d78-ad87-9328478ab88c","type":"message","text":"I noticed that in `VerticallyStretchedRectilinearGrid` it assumes that the horizontal grid is  uniform.  Is there any reason why this must be the case or was this simply done of convenience?","user":"U01FBLBCP7S","ts":"1617201298.053300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ve6f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I noticed that in "},{"type":"text","text":"VerticallyStretchedRectilinearGrid","style":{"code":true}},{"type":"text","text":" it assumes that the horizontal grid is  uniform.  Is there any reason why this must be the case or was this simply done of convenience?"}]}]}]},{"client_msg_id":"c3e71191-4099-465d-93da-7399a32a7fb8","type":"message","text":"Ah so when I first added the vertically stretched grid ~1.5 years ago we only had `IncompressibleModel` with no plans for other models.","user":"UEP056STX","ts":"1617201426.055400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OemC4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah so when I first added the vertically stretched grid ~1.5 years ago we only had "},{"type":"text","text":"IncompressibleModel","style":{"code":true}},{"type":"text","text":" with no plans for other models."}]}]}]},{"client_msg_id":"7d9af8b8-68c2-401a-a2ef-648a51ca4c8c","type":"message","text":"We knew we could implement a fast pressure/Poisson solver if one of the dimensions is stretched but not for multiple stretched dimensions.","user":"UEP056STX","ts":"1617201429.055600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5C0RV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We knew we could implement a fast pressure/Poisson solver if one of the dimensions is stretched but not for multiple stretched dimensions."}]}]}]},{"client_msg_id":"fd7fcd34-fc3d-4e53-a7c9-b43f64cb7405","type":"message","text":"We weren't interested in a slow `IncompressibleModel` so we decided to just focus on vertically stretched (which is what we really needed)","user":"UEP056STX","ts":"1617201448.056100","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1617201461.000000"},"blocks":[{"type":"rich_text","block_id":"7kBm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We weren't interested in a slow "},{"type":"text","text":"IncompressibleModel","style":{"code":true}},{"type":"text","text":" so we decided to just focus on vertically stretched (which is what we really needed)"}]}]}]},{"client_msg_id":"bbb7972d-49cb-4432-ad9e-268298f100ca","type":"message","text":"So it was where we decided to stop for `IncompressibleModel` ::P","user":"UEP056STX","ts":"1617201476.056600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nFfzr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So it was where we decided to stop for "},{"type":"text","text":"IncompressibleModel","style":{"code":true}},{"type":"text","text":" ::P"}]}]}]},{"client_msg_id":"bb3fc207-e2d0-4f1e-bc8a-aa961633240e","type":"message","text":"Obviously now a fully stretched/rectilinear grid in 3 dimensions would be useful for `ShallowWaterModel` and `HydrostaticFreeSurfaceModel` ...","user":"UEP056STX","ts":"1617201547.057600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fGh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Obviously now a fully stretched/rectilinear grid in 3 dimensions would be useful for "},{"type":"text","text":"ShallowWaterModel","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"HydrostaticFreeSurfaceModel","style":{"code":true}},{"type":"text","text":" ..."}]}]}]},{"client_msg_id":"b9c270f9-7f26-4f56-bc07-a91760afbf44","type":"message","text":"Shouldn't be super hard to add a new fully rectilinear grid","user":"UEP056STX","ts":"1617201567.058000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3I1aE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Shouldn't be super hard to add a new fully rectilinear grid"}]}]}]},{"client_msg_id":"4303f8df-a9d1-41ec-8ed4-91a85b26c73b","type":"message","text":"It wouldn't work with `IncompressibleModel` without a new pressure solver","user":"UEP056STX","ts":"1617201577.058300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lzyGj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It wouldn't work with "},{"type":"text","text":"IncompressibleModel","style":{"code":true}},{"type":"text","text":" without a new pressure solver"}]}]}]},{"client_msg_id":"cc7b91ac-ece5-4c46-a781-c6aec5b74ba3","type":"message","text":"But should work out of the box for shallow water and hydrostatic models","user":"UEP056STX","ts":"1617201590.058700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hdC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But should work out of the box for shallow water and hydrostatic models"}]}]}]},{"client_msg_id":"c11cd359-882c-43f2-909c-66e041c54200","type":"message","text":"You are of course reading my mind <@UEP056STX> and I am starting to work on a `ZonallyStretchedRectilinearGrid`, which I plan to use on `ShallowWaterModel`.  I am trying to keep it general so that one could alsouse this in `IncompressibleModel` but that is a little bit harder.","user":"U01FBLBCP7S","ts":"1617201662.059900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q0A3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You are of course reading my mind "},{"type":"user","user_id":"UEP056STX"},{"type":"text","text":" and I am starting to work on a "},{"type":"text","text":"ZonallyStretchedRectilinearGrid","style":{"code":true}},{"type":"text","text":", which I plan to use on "},{"type":"text","text":"ShallowWaterModel","style":{"code":true}},{"type":"text","text":".  I am trying to keep it general so that one could alsouse this in "},{"type":"text","text":"IncompressibleModel","style":{"code":true}},{"type":"text","text":" but that is a little bit harder."}]}]}]},{"client_msg_id":"d30ed291-580f-4567-877b-8decce4e340f","type":"message","text":"Oh awesome!","user":"UEP056STX","ts":"1617201703.060700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ToE7S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh awesome!"}]}]}]},{"client_msg_id":"07859ce1-51d1-491f-ac93-55a7dbe097cd","type":"message","text":"It might even make sense to stretch it in 3 dimensions but that could come later when we can test it","user":"UEP056STX","ts":"1617201726.061600","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1617201732.000000"},"blocks":[{"type":"rich_text","block_id":"Rn=cb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It might even make sense to stretch it in 3 dimensions but that could come later when we can test it"}]}]}],"thread_ts":"1617201726.061600","reply_count":1,"reply_users_count":1,"latest_reply":"1617201780.062800","reply_users":["U01FBLBCP7S"],"is_locked":false,"subscribed":false},{"client_msg_id":"ffa8e855-bc15-44ef-9d44-a62c3457a557","type":"message","text":"But my question was actually more basic.  It seems when the grid is built, the spacing in `x` and `y` must be the same.  Does this need to be the case?  I can imagine having a non-square grid in the horizontal, but not sure if this would break something with the pressure solve\n```   # Construct uniform horizontal grid\n    Lh, Nh, Hh, X₁ = (Lx, Ly), size[1:2], halo[1:2], (x[1], y[1])\n    Δx, Δy = Δh = Lh ./ Nh```","user":"U01FBLBCP7S","ts":"1617201729.061700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"idh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But my question was actually more basic.  It seems when the grid is built, the spacing in "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" must be the same.  Does this need to be the case?  I can imagine having a non-square grid in the horizontal, but not sure if this would break something with the pressure solve\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"   # Construct uniform horizontal grid\n    Lh, Nh, Hh, X₁ = (Lx, Ly), size[1:2], halo[1:2], (x[1], y[1])\n    Δx, Δy = Δh = Lh ./ Nh"}]}]}]},{"client_msg_id":"029f5701-8a14-45da-9795-8c061a4dce0f","type":"message","text":"Well the current pressure solver for `IncompressibleModel` uses FFTs so any stretching would mean they won't work anymore","user":"UEP056STX","ts":"1617201780.062700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hXE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well the current pressure solver for "},{"type":"text","text":"IncompressibleModel","style":{"code":true}},{"type":"text","text":" uses FFTs so any stretching would mean they won't work anymore"}]}]}]},{"client_msg_id":"893038c6-38f4-45e5-b52a-f54daddc064c","type":"message","text":"Vertically stretched solver uses a tridiagonal solve in the vertical","user":"UEP056STX","ts":"1617201800.063400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d0g/V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Vertically stretched solver uses a tridiagonal solve in the vertical"}]}]}]},{"client_msg_id":"07207b41-bf19-452c-a4b6-b881c3af0abb","type":"message","text":"For `ZonallyStretchedRectilinearGrid` I wouldn't worry about pressure solves :stuck_out_tongue:","user":"UEP056STX","ts":"1617201813.064000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"31Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For "},{"type":"text","text":"ZonallyStretchedRectilinearGrid","style":{"code":true}},{"type":"text","text":" I wouldn't worry about pressure solves "},{"type":"emoji","name":"stuck_out_tongue"}]}]}]},{"client_msg_id":"1769d1a3-f04c-43cd-8627-98cfedda7705","type":"message","text":"Ah, and presumably one could use that in the zonal direction, if one wanted to. But I won't worry about this for now.","user":"U01FBLBCP7S","ts":"1617201845.064400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EsfnB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, and presumably one could use that in the zonal direction, if one wanted to. But I won't worry about this for now."}]}]}]},{"client_msg_id":"268d89f3-a742-4776-b8f0-04910806d141","type":"message","text":"Ah probably but you'd have to be uniform in the other directions.","user":"UEP056STX","ts":"1617201873.065300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/Ci+k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah probably but you'd have to be uniform in the other directions."}]}]}]},{"client_msg_id":"06b9648f-6a81-4d79-afb0-8b82980f0d09","type":"message","text":"But the above bit of code could be easily generalized if you didn't want the same `Lh` and grid spacing in the x and y directions, right?","user":"U01FBLBCP7S","ts":"1617201874.065400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=ve","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But the above bit of code could be easily generalized if you didn't want the same "},{"type":"text","text":"Lh","style":{"code":true}},{"type":"text","text":" and grid spacing in the x and y directions, right?"}]}]}]},{"client_msg_id":"a7472e61-03dc-4b4a-bace-3854f052fc7e","type":"message","text":"Yes I think so","user":"UEP056STX","ts":"1617201896.065700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MqH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes I think so"}]}]}]},{"client_msg_id":"a2381b3f-08bb-47ae-bdcb-963c40d62429","type":"message","text":"Thanks for confirming that","user":"U01FBLBCP7S","ts":"1617201913.066400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s6BO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for confirming that"}]}]}]},{"client_msg_id":"abfe1820-ce3b-4df4-9cc2-adf69fd41b43","type":"message","text":"I guess you'd want to generate x and y like how `VerticallyStretchedRectilinearGrid` generates z coordinates?","user":"UEP056STX","ts":"1617201923.066700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GRp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess you'd want to generate x and y like how "},{"type":"text","text":"VerticallyStretchedRectilinearGrid","style":{"code":true}},{"type":"text","text":" generates z coordinates?"}]}]}]},{"client_msg_id":"337ccd6f-b7c2-4b50-a0a0-9e82389ce42c","type":"message","text":"Exacatly.  Working on `x` now as I want to do a wind driven gyre example with a well resolved western boundary layer.","user":"U01FBLBCP7S","ts":"1617202072.067400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7sVIF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Exacatly.  Working on "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" now as I want to do a wind driven gyre example with a well resolved western boundary layer."}]}]}]},{"client_msg_id":"499992d7-dabf-4c51-ac50-d4261c177fdc","type":"message","text":"That would be a pretty cool example! You might encounter bugs/issues/missing operators since some things might be missing for stretched x/y operators, but should be easy to catch these issues in shallow water.","user":"UEP056STX","ts":"1617202251.068600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zds","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That would be a pretty cool example! You might encounter bugs/issues/missing operators since some things might be missing for stretched x/y operators, but should be easy to catch these issues in shallow water."}]}]}]}]}