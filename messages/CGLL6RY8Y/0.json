{"cursor": 0, "messages": [{"type":"message","text":"I'm cross-posting this here because I think GeometryType and JuliaGeo are the main users of custom data layouts with StructArrays, which would be affected by this change.","user":"U6BJ9E351","ts":"1611920279.001700","team":"T68168MUP","attachments":[{"fallback":"[January 29th, 2021 12:36 PM] piever: I've started working on the final milestone issue for the next release of StructArrays, but I'm not completely sure whether the change is valid and worth the breakage. It is an attempt to make the interface more consistent. I'm adding a link to the PR here in case anybody wants to give feedback <https://github.com/JuliaArrays/StructArrays.jl/pull/167>","ts":"1611920196.018700","author_id":"U6BJ9E351","author_subname":"Pietro Vertechi","channel_id":"C6GHSTN4T","channel_name":"arrays","is_msg_unfurl":true,"text":"I've started working on the final milestone issue for the next release of StructArrays, but I'm not completely sure whether the change is valid and worth the breakage. It is an attempt to make the interface more consistent. I'm adding a link to the PR here in case anybody wants to give feedback <https://github.com/JuliaArrays/StructArrays.jl/pull/167>","author_name":"Pietro Vertechi","author_link":"https://julialang.slack.com/team/U6BJ9E351","author_icon":"https://avatars.slack-edge.com/2019-01-28/536734889862_8cf3425b56160138c3a1_48.jpg","mrkdwn_in":["text"],"color":"D0D0D0","from_url":"https://julialang.slack.com/archives/C6GHSTN4T/p1611920196018700","is_share":true,"footer":"Posted in #arrays"}],"blocks":[{"type":"rich_text","block_id":"QxUe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm cross-posting this here because I think GeometryType and JuliaGeo are the main users of custom data layouts with StructArrays, which would be affected by this change."}]}]}]},{"client_msg_id":"557dbaab-99b1-4e76-9c95-840c8fd46c8e","type":"message","text":"Hey,\nI have a question that has been keeping me busy quite some time now....\nI am working with polygon meshes and camera projections and so on. One aspect of this is having to compute visibility relations between camera positions and points in space with regard to a polygon mesh being in the way. I currently have a Python implementation, that uses raytracing/raycasting, and even though it makes use of all the CPU cores I have, it takes longer than I expected.\nNow that I am moving to Julia step by step, I want to also move this visibility computation, with the hope that I can find something better, maybe even making use of the GPU. Is anybody aware of a suitable implementation of visibility queries or raytracing?\nAny hints and ideas are welcome, I am slowly getting into the Julia geometry world.","user":"U019078LDND","ts":"1611931625.002400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N5V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey,\nI have a question that has been keeping me busy quite some time now....\nI am working with polygon meshes and camera projections and so on. One aspect of this is having to compute visibility relations between camera positions and points in space with regard to a polygon mesh being in the way. I currently have a Python implementation, that uses raytracing/raycasting, and even though it makes use of all the CPU cores I have, it takes longer than I expected.\nNow that I am moving to Julia step by step, I want to also move this visibility computation, with the hope that I can find something better, maybe even making use of the GPU. Is anybody aware of a suitable implementation of visibility queries or raytracing?\nAny hints and ideas are welcome, I am slowly getting into the Julia geometry world."}]}]}],"thread_ts":"1611931625.002400","reply_count":8,"reply_users_count":3,"latest_reply":"1612197963.004000","reply_users":["UA3UH56HL","U019078LDND","UGXP1QV41"],"subscribed":false},{"client_msg_id":"4c095261-bd9d-4ea1-a2f8-1552de1a0dcf","type":"message","text":"What’s the current status of `in` to check whether a point is in a polygon? And does it work for Shapefile polygons yet? I’m not really sure it made it past the move to GeometryBasics. <@U66SGEWAC>","user":"U73KENNG4","ts":"1614241184.001600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ECp3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What’s the current status of "},{"type":"text","text":"in","style":{"code":true}},{"type":"text","text":" to check whether a point is in a polygon? And does it work for Shapefile polygons yet? I’m not really sure it made it past the move to GeometryBasics. "},{"type":"user","user_id":"U66SGEWAC"}]}]}],"thread_ts":"1614241184.001600","reply_count":3,"reply_users_count":2,"latest_reply":"1614241946.002100","reply_users":["U8D0QF5NZ","U73KENNG4"],"subscribed":false},{"client_msg_id":"e175f484-e078-48de-be91-254e752cf05a","type":"message","text":"Hi! I'm now trying to use <https://github.com/JuliaGeometry/GeometryBasics.jl|GeometryBasics.jl>, and I have some questions.\n• Why is `+(a::Point, b::Point)` defined? I think they're elements of Affine space, and we can't add them.\n• Why is `Rect(Point(3,1), Vec(1,2)) # arguments are origin, widths` makes error? I think the first argument should be `Point` . (`Rect(Vec(3,1), Vec(1,2))` doesn't make error, but I think it doesn't make sense, I guess)","user":"U011U6S97BP","ts":"1618217449.006900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BIfq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi! I'm now trying to use "},{"type":"link","url":"https://github.com/JuliaGeometry/GeometryBasics.jl","text":"GeometryBasics.jl"},{"type":"text","text":", and I have some questions.\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why is "},{"type":"text","text":"+(a::Point, b::Point)","style":{"code":true}},{"type":"text","text":" defined? I think they're elements of Affine space, and we can't add them."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Why is "},{"type":"text","text":"Rect(Point(3,1), Vec(1,2)) # arguments are origin, widths","style":{"code":true}},{"type":"text","text":" makes error? I think the first argument should be "},{"type":"text","text":"Point","style":{"code":true}},{"type":"text","text":" . ("},{"type":"text","text":"Rect(Vec(3,1), Vec(1,2))","style":{"code":true}},{"type":"text","text":" doesn't make error, but I think it doesn't make sense, I guess)"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1618217449.006900","reply_count":2,"reply_users_count":2,"latest_reply":"1618219194.007200","reply_users":["U011U6S97BP","UA3UH56HL"],"is_locked":false,"subscribed":false}]}