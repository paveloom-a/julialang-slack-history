[{"client_msg_id":"329af425-edaf-44bd-914f-940bf2d4e64d","type":"message","text":"Any folks here familiar with the Python library MNE may be interested in <https://github.com/beacon-biosignals/PyMNE.jl>","user":"U680THK2S","ts":"1608572104.025900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oKNaz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any folks here familiar with the Python library MNE may be interested in "},{"type":"link","url":"https://github.com/beacon-biosignals/PyMNE.jl"}]}]}],"reactions":[{"name":"beacon-biosignals","users":["U674T0Y9Z"],"count":1},{"name":"bananadance","users":["U674T0Y9Z"],"count":1}]},{"client_msg_id":"bbcdd20f-d462-44b0-bc8a-8c553c36da47","type":"message","text":"Thanks a lot！<@ULKN4RKAR> <@UQGNA52H5>","user":"U01AJUF2GEP","ts":"1608567969.025100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tip","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks a lot！"},{"type":"user","user_id":"ULKN4RKAR"},{"type":"text","text":" "},{"type":"user","user_id":"UQGNA52H5"}]}]}]},{"client_msg_id":"22877f62-eb32-4712-8c52-481d2dd23158","type":"message","text":"I see <@UQGNA52H5> has summoned me.\n\n1. My workflow is similar as Tom, I make simulations of biologically-realistic neurons whether alone, in an arrangement, or a network. Most of the time, I am dealing with learning rules that have biological plausibility.  As for the flow, I create source code for the model and the julia file that runs the simulation and creates the figures for that particular model. This I repeat for each instance, if the model is now an arrangement of cells, then I make the two files again: its source code and the julia file that runs the model and generates the figures. This is for tractability. Most of time the most important thing is to be consistent and to document where you take parameter values from (paper references for example). In summary, most of my code is just parameters and equations integrated over time. \n2. As for packages, this is what I use: ProgressMeter, Distributions, Random, LinearAlgebra, StatsBase, Statistics, Plots. That's it. This makes reproducibility rather simple. In contrast with Tom, I do use Julia Plots. But I recommend JuliaPy/PyPlot and then use Seaborn for statistical plots. That's one beautiful package.","user":"ULKN4RKAR","ts":"1608182308.019200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NvM1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see "},{"type":"user","user_id":"UQGNA52H5"},{"type":"text","text":" has summoned me.\n\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My workflow is similar as Tom, I make simulations of biologically-realistic neurons whether alone, in an arrangement, or a network. Most of the time, I am dealing with learning rules that have biological plausibility.  As for the flow, I create source code for the model and the julia file that runs the simulation and creates the figures for that particular model. This I repeat for each instance, if the model is now an arrangement of cells, then I make the two files again: its source code and the julia file that runs the model and generates the figures. This is for tractability. Most of time the most important thing is to be consistent and to document where you take parameter values from (paper references for example). In summary, most of my code is just parameters and equations integrated over time. "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"As for packages, this is what I use: ProgressMeter, Distributions, Random, LinearAlgebra, StatsBase, Statistics, Plots. That's it. This makes reproducibility rather simple. In contrast with Tom, I do use Julia Plots. But I recommend JuliaPy/PyPlot and then use Seaborn for statistical plots. That's one beautiful package."}]}],"style":"ordered","indent":0}]}],"reactions":[{"name":"pray","users":["UQGNA52H5"],"count":1}]},{"client_msg_id":"ca9861b3-419d-423d-90df-48338f1f98e5","type":"message","text":"1. Hi Chetan. <@ULKN4RKAR> might also want to chime in.\n1. I make simulations. I mostly use only the very basic in-built packages in Julia and nothing fancy. There was a post on this channel a while back talking about a simulation package someone was working on. I think there are a few of these and are all in various stages of development. Realistically, though, if you want a nice simulator with lots of features, best to go find an established one - there are so many. The real benefit of Julia and coding from scratch is that you have complete control whereas a simulator will force you to think and do things in their way.\n2. Based on 1, I don't have any specific recommendations for Julia. Although I actually do all my plotting via Python notebooks because I hate Julia plotting.","user":"UQGNA52H5","ts":"1608178432.008800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F64","elements":[{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi Chetan. "},{"type":"user","user_id":"ULKN4RKAR"},{"type":"text","text":" might also want to chime in."}]}],"style":"ordered","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I make simulations. I mostly use only the very basic in-built packages in Julia and nothing fancy. There was a post on this channel a while back talking about a simulation package someone was working on. I think there are a few of these and are all in various stages of development. Realistically, though, if you want a nice simulator with lots of features, best to go find an established one - there are so many. The real benefit of Julia and coding from scratch is that you have complete control whereas a simulator will force you to think and do things in their way."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Based on 1, I don't have any specific recommendations for Julia. Although I actually do all my plotting via Python notebooks because I hate Julia plotting."}]}],"style":"ordered","indent":0}]}]},{"client_msg_id":"057a3c2e-52c0-4b03-bcb6-bd70521c2cd9","type":"message","text":"Greetings, members of the neuro channel and fellow Julia users!\nI'm new both to Computational Neuroscience and Julia!\nIf someone is practicing Computational Neuroscience in Julia,\n1. Can I ask about your workflow?\n2. Which packages do you use/recommend, to achieve your goals?","user":"U01AJUF2GEP","ts":"1608058625.005000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i3tw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Greetings, members of the neuro channel and fellow Julia users!\nI'm new both to Computational Neuroscience and Julia!\nIf someone is practicing Computational Neuroscience in Julia,\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can I ask about your workflow?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Which packages do you use/recommend, to achieve your goals?"}]}],"style":"ordered","indent":0}]}]}]