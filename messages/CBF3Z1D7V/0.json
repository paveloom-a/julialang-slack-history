{"cursor": 3, "messages": [{"client_msg_id":"a752439d-dba3-4ad0-94a1-1287177c9114","type":"message","text":"Environments seem to be pretty much the same, and still ~40s on the Pkg.test() case","user":"U013L06JN15","ts":"1614692494.043600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sKfCU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Environments seem to be pretty much the same, and still ~40s on the Pkg.test() case"}]}]}]},{"client_msg_id":"d554edbc-4e0a-49d0-8490-d384711ff1ca","type":"message","text":"I'm also seeing the same thing (long runtime from Pkg.test) on a Github action (running it in an Ubuntu container, whereas locally I'm running on Windows).","user":"U013L06JN15","ts":"1614692783.044700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OGXOQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm also seeing the same thing (long runtime from Pkg.test) on a Github action (running it in an Ubuntu container, whereas locally I'm running on Windows)."}]}]}]},{"client_msg_id":"81B526F2-58EC-4700-827A-61255BF7C045","type":"message","text":"When you run `Pkg.test()` how long does it take before the tests start?","user":"U8MPCDJAY","ts":"1614693012.045700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cQtTD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When you run "},{"type":"text","text":"Pkg.test()","style":{"code":true}},{"type":"text","text":" how long does it take before the tests start?"}]}]}]},{"client_msg_id":"E2AFCB02-5DD0-4973-A1D4-51538E64AD70","type":"message","text":"You might want to insert a print right at the start of tests, if the first test is long","user":"U8MPCDJAY","ts":"1614693039.046600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KHGrq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might want to insert a print right at the start of tests, if the first test is long"}]}]}]},{"client_msg_id":"af16b177-0bd6-451a-8874-e0b0f39e9321","type":"message","text":"<@U8MPCDJAY> runtimes below. The Pkg.test case also gets a depwarn, though I don't expect that would have a huge runtime cost?\n```&gt;&gt; julia --project=. --check-bounds=yes test/runtests.jl\n[ Info: (DateTime(\"2021-03-02T22:54:36.629\"), \"Loading packages (using ...)\")\n[ Info: (DateTime(\"2021-03-02T22:55:13.776\"), \"Setting up the test!\")\n[ Info: (DateTime(\"2021-03-02T22:56:33.847\"), \"Calling solve()...\")\n[ Info: (DateTime(\"2021-03-02T22:56:49.158\"), \"Calling @elapsed solve()\")\n[ Info: (DateTime(\"2021-03-02T22:56:49.177\"), \"Result of @elapsed solve() = 0.0061909 seconds\")\n\n&gt;&gt; julia --project=. --check-bounds=yes -e \"using Pkg; Pkg.test()\"\n     Testing Running tests...\n[ Info: (DateTime(\"2021-03-02T22:57:10.177\"), \"Loading packages (using ...)\")\n[ Info: (DateTime(\"2021-03-02T22:57:45.884\"), \"Setting up the test!\")\n[ Info: (DateTime(\"2021-03-02T22:59:12.858\"), \"Calling solve()...\")\n┌ Warning: `sys.name` like `sys.ode_f` is deprecated. Use getters like `get_ode_f` instead.\n│   caller = ip:0x0\n└ @ Core :-1\n[ Info: (DateTime(\"2021-03-02T23:00:11.003\"), \"Calling @elapsed solve()\")\n[ Info: (DateTime(\"2021-03-02T23:00:50.270\"), \"Result of @elapsed solve() = 39.252652 seconds\")```\n","user":"U013L06JN15","ts":"1614693705.048100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KVK","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8MPCDJAY"},{"type":"text","text":" runtimes below. The Pkg.test case also gets a depwarn, though I don't expect that would have a huge runtime cost?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":">> julia --project=. --check-bounds=yes test/runtests.jl\n[ Info: (DateTime(\"2021-03-02T22:54:36.629\"), \"Loading packages (using ...)\")\n[ Info: (DateTime(\"2021-03-02T22:55:13.776\"), \"Setting up the test!\")\n[ Info: (DateTime(\"2021-03-02T22:56:33.847\"), \"Calling solve()...\")\n[ Info: (DateTime(\"2021-03-02T22:56:49.158\"), \"Calling @elapsed solve()\")\n[ Info: (DateTime(\"2021-03-02T22:56:49.177\"), \"Result of @elapsed solve() = 0.0061909 seconds\")\n\n>> julia --project=. --check-bounds=yes -e \"using Pkg; Pkg.test()\"\n     Testing Running tests...\n[ Info: (DateTime(\"2021-03-02T22:57:10.177\"), \"Loading packages (using ...)\")\n[ Info: (DateTime(\"2021-03-02T22:57:45.884\"), \"Setting up the test!\")\n[ Info: (DateTime(\"2021-03-02T22:59:12.858\"), \"Calling solve()...\")\n┌ Warning: `sys.name` like `sys.ode_f` is deprecated. Use getters like `get_ode_f` instead.\n│   caller = ip:0x0\n└ @ Core :-1\n[ Info: (DateTime(\"2021-03-02T23:00:11.003\"), \"Calling @elapsed solve()\")\n[ Info: (DateTime(\"2021-03-02T23:00:50.270\"), \"Result of @elapsed solve() = 39.252652 seconds\")"}]},{"type":"rich_text_section","elements":[]}]}]},{"client_msg_id":"9b7a2cad-95cf-4437-ab3c-1ea14272c687","type":"message","text":"(I'm running the script version with --depwarn=yes now to check that too)","user":"U013L06JN15","ts":"1614693872.048500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qtqhI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I'm running the script version with --depwarn=yes now to check that too)"}]}]}]},{"client_msg_id":"68683a88-773c-440a-b874-81b05361ec99","type":"message","text":"Depwarns can indeed have a huge runtime cost (if they get into tight code)","user":"U67D54KS8","ts":"1614693993.048800","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1614694010.000000"},"blocks":[{"type":"rich_text","block_id":"yM3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Depwarns can indeed have a huge runtime cost (if they get into tight code)"}]}]}],"reactions":[{"name":"raised_hands","users":["U013L06JN15"],"count":1}]},{"client_msg_id":"7628d03b-5d04-49f5-b083-3951eff3710c","type":"message","text":"Yep that looks like it's it","user":"U013L06JN15","ts":"1614694064.049200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Ude","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yep that looks like it's it"}]}]}]},{"client_msg_id":"3d3c91af-0d06-4125-a41e-0e8e2e0df118","type":"message","text":"with --depwarn=yes\n[ Info: (DateTime(\"2021-03-02T23:07:51.415\"), \"Result of @elapsed solve() = 36.4861737 seconds\")","user":"U013L06JN15","ts":"1614694079.049400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gfn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with --depwarn=yes\n[ Info: (DateTime(\"2021-03-02T23:07:51.415\"), \"Result of @elapsed solve() = 36.4861737 seconds\")"}]}]}]},{"client_msg_id":"e14b8878-173f-4866-8d19-9be9c87f6e7c","type":"message","text":"That is hugely surprising to me, but thanks <@U8MPCDJAY> and <@U67D54KS8> for your debugging help!!","user":"U013L06JN15","ts":"1614694106.049800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x/5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is hugely surprising to me, but thanks "},{"type":"user","user_id":"U8MPCDJAY"},{"type":"text","text":" and "},{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":" for your debugging help!!"}]}]}],"reactions":[{"name":"+1","users":["U8MPCDJAY"],"count":1}]},{"client_msg_id":"9e80594d-8041-429b-927b-f3a52f4478e6","type":"message","text":"Every time a depwarn has the possibility of showing, Julia  needs to look at the callstack to see if the depwarn has already been printed there. Collecting the callstack is slow.","user":"U67D54KS8","ts":"1614694701.050400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/AxR/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Every time a depwarn has the possibility of showing, Julia  needs to look at the callstack to see if the depwarn has already been printed there. Collecting the callstack is slow."}]}]}]},{"client_msg_id":"704bb72c-c909-4689-ac16-804fb0f71935","type":"message","text":"That makes sense, thanks for clarifying! I'm partly surprised I was calling that depwarn apparently so often as well, but it was fortunately a very easy fix. :slightly_smiling_face:","user":"U013L06JN15","ts":"1614694919.051200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QSx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That makes sense, thanks for clarifying! I'm partly surprised I was calling that depwarn apparently so often as well, but it was fortunately a very easy fix. "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"FAC0F1FE-8476-42DA-8083-FC55D2DFBD0B","type":"message","text":"Do we have enough people for a Pkg call today (2pm Eastern Time)? No point in having a call with only 2-3 people.\n\nReact with a thumbs up if you can attend today.","user":"U7THT3TM3","ts":"1614703426.053200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u+V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do we have enough people for a Pkg call today (2pm Eastern Time)? No point in having a call with only 2-3 people.\n"},{"type":"text","text":"\nReact with a thumbs up if you can attend today."}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3","UCZ7VBGUD"],"count":2}]},{"client_msg_id":"6849d759-171c-47f6-87a6-879d99da7eb2","type":"message","text":"Looks like we only have 3 people. Let's cancel today's call, and plan on doing it in a future week.","user":"U7THT3TM3","ts":"1614710047.054600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=+Re9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks like we only have 3 people. Let's cancel today's call, and plan on doing it in a future week."}]}]}],"reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"type":"message","text":"If you are a member of JuliaRegistries, see below: (cross-post from <#C6M4DQA5P|pkg-registration>)","user":"U7THT3TM3","ts":"1615245439.054800","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1615245636.000000"},"attachments":[{"fallback":"[March 8th, 2021 6:16 PM] dilum: Hey everyone, I'm trying to clean up the permissions in the JuliaRegistries organization. I've been organizing the repos into teams, and then putting people on teams. Unfortunately, when you add someone to a team, GitHub likes to automatically \"watch\" all of those repos. So if you are a JuliaRegistries member, you may find that you have suddenly been \"subscribed\" to multiple JuliaRegistries repos that you weren't previously watching.\n\nUnfortunately you will need to manually click \"unwatch\" from any repo that you don't want to subscribe to.\n\nSorry about this inconvenience! I don't know of any way that I can disable this in GitHub.","ts":"1615245412.098100","author_id":"U7THT3TM3","author_subname":"Dilum Aluthge","channel_id":"C6M4DQA5P","channel_name":"pkg-registration","is_msg_unfurl":true,"text":"Hey everyone, I'm trying to clean up the permissions in the JuliaRegistries organization. I've been organizing the repos into teams, and then putting people on teams. Unfortunately, when you add someone to a team, GitHub likes to automatically \"watch\" all of those repos. So if you are a JuliaRegistries member, you may find that you have suddenly been \"subscribed\" to multiple JuliaRegistries repos that you weren't previously watching.\n\nUnfortunately you will need to manually click \"unwatch\" from any repo that you don't want to subscribe to.\n\nSorry about this inconvenience! I don't know of any way that I can disable this in GitHub.","author_name":"Dilum Aluthge","author_link":"https://julialang.slack.com/team/U7THT3TM3","author_icon":"https://secure.gravatar.com/avatar/16aeca0a435d95b33fbca08d6cfc2787.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-48.png","mrkdwn_in":["text"],"color":"D0D0D0","from_url":"https://julialang.slack.com/archives/C6M4DQA5P/p1615245412098100","is_share":true,"footer":"Posted in #pkg-registration"}],"blocks":[{"type":"rich_text","block_id":"5Pfub","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you are a member of JuliaRegistries, see below: (cross-post from "},{"type":"channel","channel_id":"C6M4DQA5P"},{"type":"text","text":")"}]}]}]},{"client_msg_id":"36637eea-ebd0-4d4f-9835-fe2844520f55","type":"message","text":"<https://daniel.haxx.se/blog/2021/03/09/half-of-curls-vulnerabilities-are-c-mistakes/|https://daniel.haxx.se/blog/2021/03/09/half-of-curls-vulnerabilities-are-c-mistakes/>","user":"UDB26738Q","ts":"1615285608.055100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tu=4","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://daniel.haxx.se/blog/2021/03/09/half-of-curls-vulnerabilities-are-c-mistakes/","text":"https://daniel.haxx.se/blog/2021/03/09/half-of-curls-vulnerabilities-are-c-mistakes/"}]}]}]},{"client_msg_id":"46b5b435-b260-4429-9058-9270ee8ff2cc","type":"message","text":"If I remember correctly, someone wanted to have a Pkg call this week?","user":"U66GD0880","ts":"1615316727.055400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JfJO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I remember correctly, someone wanted to have a Pkg call this week?"}]}]}],"reactions":[{"name":"call_me_hand","users":["UDB26738Q","U7THT3TM3"],"count":2}]},{"client_msg_id":"4179b089-ed3d-4685-a049-63d2adc63890","type":"message","text":"I’ll hop on at 11:15 Pacific, if someone has something to discuss we can do so, otherwise after 15 minutes or so I’ll hop back off. :slightly_smiling_face:","user":"U66GD0880","ts":"1615316798.056600","team":"T68168MUP","edited":{"user":"U66GD0880","ts":"1615316805.000000"},"blocks":[{"type":"rich_text","block_id":"HBo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ll hop on at 11:15 Pacific, if someone has something to discuss we can do so, otherwise after 15 minutes or so I’ll hop back off. "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"cae7dee9-8a9f-49fd-918e-099b015eb638","type":"message","text":"I'll join as well. <@UDB26738Q> and <@UCZ7VBGUD> are you available?","user":"U7THT3TM3","ts":"1615317114.057000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ezu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll join as well. "},{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" and "},{"type":"user","user_id":"UCZ7VBGUD"},{"type":"text","text":" are you available?"}]}]}],"thread_ts":"1615317114.057000","reply_count":2,"reply_users_count":2,"latest_reply":"1615317134.057500","reply_users":["UDB26738Q","UCZ7VBGUD"],"subscribed":false},{"client_msg_id":"40ebb62f-34e2-4c6b-9feb-70b1817ceab2","type":"message","text":"I’ve written down the results of the pkg call discussion here: <https://github.com/JuliaRegistries/RegistryCI.jl/issues/352>","user":"UCZ7VBGUD","ts":"1615320631.058500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4I8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ve written down the results of the pkg call discussion here: "},{"type":"link","url":"https://github.com/JuliaRegistries/RegistryCI.jl/issues/352"}]}]}],"reactions":[{"name":"heart","users":["UDB26738Q"],"count":1}]},{"client_msg_id":"85ea4e86-635d-459b-90c7-72b46116b4bb","type":"message","text":"A number of times I’ve wanted `pkg&gt; rm --all`.. Worth adding?","user":"U8MPCDJAY","ts":"1615422776.060100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3/OV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A number of times I’ve wanted "},{"type":"text","text":"pkg> rm --all","style":{"code":true}},{"type":"text","text":".. Worth adding?"}]}]}],"reactions":[{"name":"booom","users":["UDB26738Q"],"count":1}]},{"client_msg_id":"9366c496-6f66-4cfa-b887-59b584b81fe9","type":"message","text":"you can just delete the `Project` file, but yeah I guess it would be slightly nice to have in the API","user":"U9VG1AYSG","ts":"1615423149.060900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yrwJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can just delete the "},{"type":"text","text":"Project","style":{"code":true}},{"type":"text","text":" file, but yeah I guess it would be slightly nice to have in the API"}]}]}]},{"client_msg_id":"e30af28f-1f92-40f1-aa85-882c317abcf1","type":"message","text":"Does storage servers still provide `/registry/$uuid/$hash` tarballs?\n\n```bash-3.2$ server=<https://us-east.storage.julialang.org>\nbash-3.2$ wget $server$(curl -sSfL $server/registries)\n--2021-03-11 23:38:28--  <https://us-east.storage.julialang.org/registry/23338594-aafe-5451-b93e-139f81909106/5bc87d3fd5facd9877ad0adfd9feba7c8caaee9b>\nResolving <http://us-east.storage.julialang.org|us-east.storage.julialang.org> (<http://us-east.storage.julialang.org|us-east.storage.julialang.org>)... 198.18.7.136\nConnecting to <http://us-east.storage.julialang.org|us-east.storage.julialang.org> (<http://us-east.storage.julialang.org|us-east.storage.julialang.org>)|198.18.7.136|:443... connected.\nHTTP request sent, awaiting response... 301 Moved Permanently\nLocation: <https://us-east.storage.juliahub.com/registry/23338594-aafe-5451-b93e-139f81909106/5bc87d3fd5facd9877ad0adfd9feba7c8caaee9b> [following]\n--2021-03-11 23:38:29--  <https://us-east.storage.juliahub.com/registry/23338594-aafe-5451-b93e-139f81909106/5bc87d3fd5facd9877ad0adfd9feba7c8caaee9b>\nResolving <http://us-east.storage.juliahub.com|us-east.storage.juliahub.com> (<http://us-east.storage.juliahub.com|us-east.storage.juliahub.com>)... 198.18.7.133\nConnecting to <http://us-east.storage.juliahub.com|us-east.storage.juliahub.com> (<http://us-east.storage.juliahub.com|us-east.storage.juliahub.com>)|198.18.7.133|:443... connected.\nHTTP request sent, awaiting response... 500 Internal Server Error\n2021-03-11 23:38:30 ERROR 500: Internal Server Error.```\nThis works for `<https://us-east.pkg.julialang.org>`","user":"UH108BJB1","ts":"1615477127.063000","team":"T68168MUP","edited":{"user":"UH108BJB1","ts":"1615477205.000000"},"blocks":[{"type":"rich_text","block_id":"4kBfF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does storage servers still provide "},{"type":"text","text":"/registry/$uuid/$hash","style":{"code":true}},{"type":"text","text":" tarballs?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bash-3.2$ server="},{"type":"link","url":"https://us-east.storage.julialang.org"},{"type":"text","text":"\nbash-3.2$ wget $server$(curl -sSfL $server/registries)\n--2021-03-11 23:38:28--  "},{"type":"link","url":"https://us-east.storage.julialang.org/registry/23338594-aafe-5451-b93e-139f81909106/5bc87d3fd5facd9877ad0adfd9feba7c8caaee9b"},{"type":"text","text":"\nResolving us-east.storage.julialang.org (us-east.storage.julialang.org)... 198.18.7.136\nConnecting to us-east.storage.julialang.org (us-east.storage.julialang.org)|198.18.7.136|:443... connected.\nHTTP request sent, awaiting response... 301 Moved Permanently\nLocation: "},{"type":"link","url":"https://us-east.storage.juliahub.com/registry/23338594-aafe-5451-b93e-139f81909106/5bc87d3fd5facd9877ad0adfd9feba7c8caaee9b"},{"type":"text","text":" [following]\n--2021-03-11 23:38:29--  "},{"type":"link","url":"https://us-east.storage.juliahub.com/registry/23338594-aafe-5451-b93e-139f81909106/5bc87d3fd5facd9877ad0adfd9feba7c8caaee9b"},{"type":"text","text":"\nResolving us-east.storage.juliahub.com (us-east.storage.juliahub.com)... 198.18.7.133\nConnecting to us-east.storage.juliahub.com (us-east.storage.juliahub.com)|198.18.7.133|:443... connected.\nHTTP request sent, awaiting response... 500 Internal Server Error\n2021-03-11 23:38:30 ERROR 500: Internal Server Error."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThis works for "},{"type":"link","url":"https://us-east.pkg.julialang.org","style":{"code":true}}]}]}]},{"client_msg_id":"e0b8b892-5b75-471d-8c35-74233ee2bb23","type":"message","text":"Can you try again Johnny?","user":"U66GD0880","ts":"1615481163.063400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jseF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you try again Johnny?"}]}]}]},{"client_msg_id":"00321c6f-7b56-4294-92b1-33b1695b6c9a","type":"message","text":"Still 500 error.","user":"UH108BJB1","ts":"1615482362.063600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I9j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Still 500 error."}]}]}]},{"client_msg_id":"779f7bf2-296f-4d11-b2ff-c68cad019186","type":"message","text":"Seems to be a network issue in China. I can successfully download the tarball via a proxy.","user":"UH108BJB1","ts":"1615482594.064700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/8IaQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems to be a network issue in China. I can successfully download the tarball via a proxy."}]}]}],"thread_ts":"1615482594.064700","reply_count":12,"reply_users_count":2,"latest_reply":"1615483288.068900","reply_users":["U66GD0880","UH108BJB1"],"subscribed":false},{"client_msg_id":"cf44420f-99e5-4f5f-a4ed-ff287a731775","type":"message","text":"what about the korean server?","user":"U66GD0880","ts":"1615482702.064900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mx9Kp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what about the korean server?"}]}]}]},{"client_msg_id":"353303e8-8051-406a-a1a6-86362d6c3285","type":"message","text":"I tried also `/package/$uuid/$hash`. Both of the two servers return 500 error except for `/registries`.","user":"UH108BJB1","ts":"1615482837.066200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hKBEP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I tried also "},{"type":"text","text":"/package/$uuid/$hash","style":{"code":true}},{"type":"text","text":". Both of the two servers return 500 error except for "},{"type":"text","text":"/registries","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"d26040f8-f083-4ca9-8228-937198dfd1ee","type":"message","text":"Does anyone know of a way to disable the notifications of CompatHelper workflows on Github? This never happened, but since a week or two I'm notified of every succesfull run.","user":"U88813859","ts":"1615742170.073400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7emx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know of a way to disable the notifications of CompatHelper workflows on Github? This never happened, but since a week or two I'm notified of every succesfull run."}]}]}]},{"client_msg_id":"a2f4ba01-5b24-41f2-8346-0e861a6bc0e8","type":"message","text":"Hmmm","user":"U7THT3TM3","ts":"1615742195.073600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SKd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmm"}]}]}]},{"client_msg_id":"fa38f172-88ac-4639-940a-4a6b029a5676","type":"message","text":"<https://github.com/settings/notifications> maybe?","user":"U7THT3TM3","ts":"1615742209.073800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f0H0L","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/settings/notifications"},{"type":"text","text":" maybe?"}]}]}]},{"client_msg_id":"69764a09-a0d8-4c2f-b939-ee860d4dadcd","type":"message","text":"Scroll down to \"GitHub Actions\"","user":"U7THT3TM3","ts":"1615742215.074000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d5Rt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Scroll down to \"GitHub Actions\""}]}]}]},{"client_msg_id":"b39c8c29-bb9d-46bd-a7a4-7ba74d852925","type":"message","text":"Thanks, the check \"only notify on failed workflow\" wasn't enabled. I think this should solve it.  :slightly_smiling_face:","user":"U88813859","ts":"1615754837.075100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OM1Fa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, the check \"only notify on failed workflow\" wasn't enabled. I think this should solve it.  "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"783c07f9-3b5d-4c10-9edc-c718fedc19ee","type":"message","text":"Does anyone know what happened to Pkg.Display?","user":"U69BL50BF","ts":"1615838116.075700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lKSs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know what happened to Pkg.Display?"}]}]}]},{"client_msg_id":"c4ab85e9-f601-4e6e-90d2-cde31fed02ec","type":"message","text":"<https://github.com/SciML/SciMLTutorials.jl/issues/377>","user":"U69BL50BF","ts":"1615838117.075900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8=Bfb","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/SciML/SciMLTutorials.jl/issues/377"}]}]}]},{"client_msg_id":"87c76862-1ba6-45aa-8d0c-6a237edecba1","type":"message","text":"<https://github.com/JuliaLang/Pkg.jl/pull/1621>, which is first available in 1.5.0.","user":"U7THT3TM3","ts":"1615838401.076200","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1615838576.000000"},"blocks":[{"type":"rich_text","block_id":"tNvu","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/pull/1621"},{"type":"text","text":", which is first available in 1.5.0."}]}]}]},{"client_msg_id":"33c24980-45ee-48a0-8c9b-d30561cd25b4","type":"message","text":"Just out of curiosity, what were you using `Pkg.Display.status` for?","user":"U7THT3TM3","ts":"1615838445.076600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oCL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just out of curiosity, what were you using "},{"type":"text","text":"Pkg.Display.status","style":{"code":true}},{"type":"text","text":" for?"}]}]}]},{"client_msg_id":"b6887b9d-25c4-4fe8-bf17-de88007dc26b","type":"message","text":"For <https://github.com/SciML/SciMLBenchmarks.jl/blob/master/markdown/NonStiffODE/RigidBody_wpd.md#appendix>","user":"U69BL50BF","ts":"1615838719.077100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GFad","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For "},{"type":"link","url":"https://github.com/SciML/SciMLBenchmarks.jl/blob/master/markdown/NonStiffODE/RigidBody_wpd.md#appendix"}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"3B629611-138E-433A-946E-2F31D1D2F4FB","type":"message","text":"I think what you could do is to make an IOBuffer, set `<http://ctx.io|ctx.io>` to that IOBuffer, and then call `Pkg.status`, and then read the IOBuffer out into a string","user":"U7THT3TM3","ts":"1615839023.079300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BhiG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think what you could do is to make an IOBuffer, set "},{"type":"link","url":"http://ctx.io","text":"ctx.io","style":{"code":true}},{"type":"text","text":" to that IOBuffer, and then call "},{"type":"text","text":"Pkg.status","style":{"code":true}},{"type":"text","text":", and then read the IOBuffer out into a string"}]}]}]},{"client_msg_id":"5d845b2d-13e2-400d-8fd4-156159dae463","type":"message","text":"Or use `sprint`","user":"U67D54KS8","ts":"1615839353.079500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IQv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or use "},{"type":"text","text":"sprint","style":{"code":true}}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3","U680THK2S","U6A936746"],"count":3},{"name":"runner","users":["U680THK2S","U7THT3TM3","UDB26738Q","U6A936746"],"count":4}]},{"client_msg_id":"8dd6936a-cbeb-4334-904f-40c69ef020cb","type":"message","text":"Will `sprint` work with `Pkg.status`? I though that `sprint` expects the function to have a first positional argument of the form `io::IO`. But that's not the case for `Pkg.status`, which can either take an `io` as a keyword argument, or it can get the `io` from the context.","user":"U7THT3TM3","ts":"1615839665.082000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EdVYN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Will "},{"type":"text","text":"sprint","style":{"code":true}},{"type":"text","text":" work with "},{"type":"text","text":"Pkg.status","style":{"code":true}},{"type":"text","text":"? I though that "},{"type":"text","text":"sprint","style":{"code":true}},{"type":"text","text":" expects the function to have a first positional argument of the form "},{"type":"text","text":"io::IO","style":{"code":true}},{"type":"text","text":". But that's not the case for "},{"type":"text","text":"Pkg.status","style":{"code":true}},{"type":"text","text":", which can either take an "},{"type":"text","text":"io","style":{"code":true}},{"type":"text","text":" as a keyword argument, or it can get the "},{"type":"text","text":"io","style":{"code":true}},{"type":"text","text":" from the context."}]}]}]},{"client_msg_id":"1b77a532-e5d4-4ead-a75e-53865f1eca34","type":"message","text":"`sprint(io -&gt; Pkg.status(; io=io))`","user":"U67SCG4HG","ts":"1615839863.083000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m7L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sprint(io -> Pkg.status(; io=io))","style":{"code":true}}]}]}],"thread_ts":"1615839863.083000","reply_count":1,"reply_users_count":1,"latest_reply":"1615839872.083100","reply_users":["U7THT3TM3"],"subscribed":false,"reactions":[{"name":"+1","users":["U7THT3TM3","U680THK2S","U6A936746"],"count":3}]},{"client_msg_id":"21881729-cdf5-4ddf-be95-c8614dee5137","type":"message","text":"Hey Pkg devs! A few months ago I talked with <@U66GD0880> and <@U6795JH6H> about Pluto’s upcoming built-in package management. By now the base feature set is done, and I am looking for feedback! I made a 6 min video showing the main points: <https://youtu.be/jQEZTZM1GXE> Maybe I can join the next Pkg call to discuss?","user":"UUTL3EKN3","ts":"1616001172.004200","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"PlutoPkg demo","title_link":"https://youtu.be/jQEZTZM1GXE","author_name":"Fons van der Plas","author_link":"https://www.youtube.com/c/FonsvanderPlas0","thumb_url":"https://i.ytimg.com/vi/jQEZTZM1GXE/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: PlutoPkg demo","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/jQEZTZM1GXE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://youtu.be/jQEZTZM1GXE","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://youtu.be/jQEZTZM1GXE"}],"blocks":[{"type":"rich_text","block_id":"CWDsl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey Pkg devs! A few months ago I talked with "},{"type":"user","user_id":"U66GD0880"},{"type":"text","text":" and "},{"type":"user","user_id":"U6795JH6H"},{"type":"text","text":" about Pluto’s upcoming built-in package management. By now the base feature set is done, and I am looking for feedback! I made a 6 min video showing the main points: "},{"type":"link","url":"https://youtu.be/jQEZTZM1GXE"},{"type":"text","text":" Maybe I can join the next Pkg call to discuss?"}]}]}],"reactions":[{"name":"call_me_hand","users":["UDB26738Q","U7THT3TM3","U6795JH6H","U8MPCDJAY","U66GD0880"],"count":5}]},{"client_msg_id":"a0e9eead-e219-41ad-ab52-047f8354832e","type":"message","text":"Looks great! Feel free to open issues about various API improvements you would want to Pkg so we can make those solid and tested, so we're not risking breaking this with various Pkg refactorings.","user":"U67D54KS8","ts":"1616013711.006000","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616013798.000000"},"blocks":[{"type":"rich_text","block_id":"xFz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks great! Feel free to open issues about various API improvements you would want to Pkg so we can make those solid and tested, so we're not risking breaking this with various Pkg refactorings."}]}]}],"thread_ts":"1616013711.006000","reply_count":1,"reply_users_count":1,"latest_reply":"1616015662.007300","reply_users":["UUTL3EKN3"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"That’s really nice to hear, thanks!\n\nSo far, everything has been easy to do with Pkg internals, so my requests would mostly be about making API public","user":"UUTL3EKN3","ts":"1616015662.007300","thread_ts":"1616013711.006000","root":{"client_msg_id":"a0e9eead-e219-41ad-ab52-047f8354832e","type":"message","text":"Looks great! Feel free to open issues about various API improvements you would want to Pkg so we can make those solid and tested, so we're not risking breaking this with various Pkg refactorings.","user":"U67D54KS8","ts":"1616013711.006000","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616013798.000000"},"blocks":[{"type":"rich_text","block_id":"xFz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks great! Feel free to open issues about various API improvements you would want to Pkg so we can make those solid and tested, so we're not risking breaking this with various Pkg refactorings."}]}]}],"thread_ts":"1616013711.006000","reply_count":1,"reply_users_count":1,"latest_reply":"1616015662.007300","reply_users":["UUTL3EKN3"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"Fipy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That’s really nice to hear, thanks!\n\nSo far, everything has been easy to do with Pkg internals, so my requests would mostly be about making API public"}]}]}],"client_msg_id":"0b75dd31-ecb1-4d0a-a564-0c39695ecd6f"},{"client_msg_id":"964c6322-593a-49e5-9ced-10c88ec1527a","type":"message","text":"This is really great Fons.  It feels really natural, and I love how simple it looks.  Nice work!","user":"U66GD0880","ts":"1616025573.008600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dsY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is really great Fons.  It feels really natural, and I love how simple it looks.  Nice work!"}]}]}]},{"client_msg_id":"df79500e-a3ff-4b8f-bbd1-d48eb2363821","type":"message","text":"Are there any additional review comments on <https://github.com/JuliaLang/Pkg.jl/pull/2176>? (\"Add the `force_latest_compat` keyword argument to `Pkg.test`\".)\n\nIf not, I'm inclined to wait a little bit, and then merge that PR so we can get it into 1.7.","user":"U7THT3TM3","ts":"1616171228.014900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wbzub","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any additional review comments on "},{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/pull/2176"},{"type":"text","text":"? (\"Add the "},{"type":"text","text":"force_latest_compat","style":{"code":true}},{"type":"text","text":" keyword argument to "},{"type":"text","text":"Pkg.test","style":{"code":true}},{"type":"text","text":"\".)\n\nIf not, I'm inclined to wait a little bit, and then merge that PR so we can get it into 1.7."}]}]}]},{"client_msg_id":"be7ffad2-0437-4e23-9e37-9349f14cd632","type":"message","text":"To be honest, I don't even understand what the \"latest compat\" is. Compat are ranges, they can be overlapping, distinct etc. What does the \"latest one\" even mean?\n\nWhat I think you want to find is the highest version of a package compatible with the project? That can pretty easily be done by just checking the versions one by one and picking the max one that is compatible. And then you make a compat entry with `=` that version.\n\nBut that depends on what versions that exist for that package so that data has to come in somewhere.","user":"U67D54KS8","ts":"1616173181.017700","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616173262.000000"},"blocks":[{"type":"rich_text","block_id":"ana","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To be honest, I don't even understand what the \"latest compat\" is. Compat are ranges, they can be overlapping, distinct etc. What does the \"latest one\" even mean?\n\nWhat I think you want to find is the highest version of a package compatible with the project? That can pretty easily be done by just checking the versions one by one and picking the max one that is compatible. And then you make a compat entry with "},{"type":"text","text":"=","style":{"code":true}},{"type":"text","text":" that version.\n\nBut that depends on what versions that exist for that package so that data has to come in somewhere."}]}]}]},{"client_msg_id":"607c6993-178a-46e2-8d73-2120376965ab","type":"message","text":"But there is not really any need to change any compat entries. You can just resolve and check what versions you got. If any of those is less than the max allowed version, then you error.","user":"U67D54KS8","ts":"1616173372.020300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NSaqF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But there is not really any need to change any compat entries. You can just resolve and check what versions you got. If any of those is less than the max allowed version, then you error."}]}]}]},{"client_msg_id":"a3c6ecd8-0bd1-4f21-8ae7-df3b9e5b392c","type":"message","text":"The resolver should give you the max version if possible","user":"U67D54KS8","ts":"1616173400.020800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a7y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The resolver should give you the max version if possible"}]}]}]},{"client_msg_id":"8b626d25-24a6-4d2b-bd23-b4c330d52f26","type":"message","text":"So, here is the motivation. Suppose that you have an existing `[compat]` entry that looks like this:\n- `Foo = \"0.1, 0.2, 0.3\"`\n\nAnd some bot (CompatHelper, Dependabot, etc.) makes a PR to change that `[compat]` entry to this:\n- `Foo = \"0.1, 0.2, 0.3, 0.4\"`\n\nWe want to make sure that the package tests get run with Foo version `0.4.x` for some value of x.\n\nAnd we can't put that logic inside the bot making the PR, since once we transition to Dependabot, we can't make Dependabot do any extra compute.\n\nI don't particularly care how we accomplish this, i.e. if #2176 isn't the right approach, we can definitely do something else instead. But this is the use case that we need to solve.","user":"U7THT3TM3","ts":"1616173850.024200","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1616173972.000000"},"blocks":[{"type":"rich_text","block_id":"TfEC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, here is the motivation. Suppose that you have an existing "},{"type":"text","text":"[compat]","style":{"code":true}},{"type":"text","text":" entry that looks like this:\n- "},{"type":"text","text":"Foo = \"0.1, 0.2, 0.3\"","style":{"code":true}},{"type":"text","text":"\n\nAnd some bot (CompatHelper, Dependabot, etc.) makes a PR to change that "},{"type":"text","text":"[compat]","style":{"code":true}},{"type":"text","text":" entry to this:\n- "},{"type":"text","text":"Foo = \"0.1, 0.2, 0.3, 0.4\"","style":{"code":true}},{"type":"text","text":"\n\nWe want to make sure that the package tests get run with Foo version "},{"type":"text","text":"0.4.x","style":{"code":true}},{"type":"text","text":" for some value of x.\n\nAnd we can't put that logic inside the bot making the PR, since once we transition to Dependabot, we can't make Dependabot do any extra compute.\n\nI don't particularly care how we accomplish this, i.e. if #2176 isn't the right approach, we can definitely do something else instead. But this is the use case that we need to solve."}]}]}]},{"client_msg_id":"1d48f360-3a0c-49d2-89af-e87f381bc24f","type":"message","text":"The idea of #2176 was that, in the temporary sandbox project used by `Pkg.test`, we would change the `[compat]` entry from `Foo = \"0.1, 0.2, 0.3, 0.4\"` to `Foo = \"0.4\"`. This will now ensure that `Pkg.test` will run with Foo version `0.4.x` for some value of x, which is what we want.","user":"U7THT3TM3","ts":"1616174059.025900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dNa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The idea of #2176 was that, in the temporary sandbox project used by "},{"type":"text","text":"Pkg.test","style":{"code":true}},{"type":"text","text":", we would change the "},{"type":"text","text":"[compat]","style":{"code":true}},{"type":"text","text":" entry from "},{"type":"text","text":"Foo = \"0.1, 0.2, 0.3, 0.4\"","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"Foo = \"0.4\"","style":{"code":true}},{"type":"text","text":". This will now ensure that "},{"type":"text","text":"Pkg.test","style":{"code":true}},{"type":"text","text":" will run with Foo version "},{"type":"text","text":"0.4.x","style":{"code":true}},{"type":"text","text":" for some value of x, which is what we want."}]}]}]},{"client_msg_id":"5d4c80c0-7f01-45b7-9ca4-e45ed4b4b859","type":"message","text":"But we can absolutely do a different approach.","user":"U7THT3TM3","ts":"1616174123.026400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eKRPR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But we can absolutely do a different approach."}]}]}]},{"client_msg_id":"abcfa616-4614-463b-894a-7aa829a0d855","type":"message","text":"The original motivating issue is <https://github.com/JuliaRegistries/CompatHelper.jl/issues/160>. But as I mention above, this is not something that we can solve by e.g. running the resolver inside CompatHelper. Because once we move to Dependabot, we won't be able to do anything as intensive as running the Pkg resolver inside Dependabot. The only thing we'll be able to do with Dependabot is detect (from the General registry) that Foo version `0.4` has been released, and then open a PR that changes `Foo = \"0.1, 0.2, 0.3\"` to `Foo = \"0.1, 0.2, 0.3, 0.4\"`.","user":"U7THT3TM3","ts":"1616174295.028400","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1616174435.000000"},"blocks":[{"type":"rich_text","block_id":"=x0Yz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The original motivating issue is "},{"type":"link","url":"https://github.com/JuliaRegistries/CompatHelper.jl/issues/160"},{"type":"text","text":". But as I mention above, this is not something that we can solve by e.g. running the resolver inside CompatHelper. Because once we move to Dependabot, we won't be able to do anything as intensive as running the Pkg resolver inside Dependabot. The only thing we'll be able to do with Dependabot is detect (from the General registry) that Foo version "},{"type":"text","text":"0.4","style":{"code":true}},{"type":"text","text":" has been released, and then open a PR that changes "},{"type":"text","text":"Foo = \"0.1, 0.2, 0.3\"","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"Foo = \"0.1, 0.2, 0.3, 0.4\"","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"0182bc30-9ac0-43a2-8ead-ca033c4c4f5d","type":"message","text":"My point is that there isn't really a concept of \"latest compat\". Pretty much all you can do with compat is ask if a version is inside it or not. So a possible query you can do is \"is the latest compatible version of this package installed?\". This seems to be what you want for CompatHelper.","user":"U67D54KS8","ts":"1616174547.030300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/kW0/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My point is that there isn't really a concept of \"latest compat\". Pretty much all you can do with compat is ask if a version is inside it or not. So a possible query you can do is \"is the latest compatible version of this package installed?\". This seems to be what you want for CompatHelper."}]}]}]},{"client_msg_id":"b9b02a5b-6a37-4c35-a5e4-f49a6a98891d","type":"message","text":"Or alternatively, restrict the existing compat so that only the latest compatible version of a package is allowed","user":"U67D54KS8","ts":"1616174582.031200","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616174598.000000"},"blocks":[{"type":"rich_text","block_id":"ZIzT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or alternatively, restrict the existing compat so that only the latest compatible version of a package is allowed"}]}]}]},{"client_msg_id":"fe545cda-e93c-4bb4-9f5f-8b83d4352fb3","type":"message","text":"But the set of available package versions has to be an input","user":"U67D54KS8","ts":"1616174611.031800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pdl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But the set of available package versions has to be an input"}]}]}]},{"client_msg_id":"162b5ca0-fac4-47ef-ba7c-2e6d2b625c20","type":"message","text":"Ahh, I see what you mean.","user":"U7THT3TM3","ts":"1616174644.032200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3bcA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ahh, I see what you mean."}]}]}]},{"client_msg_id":"421682ef-5a12-4dde-ac0b-7c4ee362298e","type":"message","text":"So, perhaps the feature would be implemented like this:\n\n1. We assemble a list of all registered versions of Foo.\n2. We iterate over each version from step 1, and for each version, we determine whether or not that version is inside the `[compat]` entry for Foo. At the end of this step, we have a list of all registered versions of Foo that are compatible with our given `[compat]` entry for Foo.\n3. We take the `maximum` of the list from step 2. This gives us the latest registered version of Foo that is compatible with our given `[compat]` entry for Foo.\n4. `Pkg.test` sets up the temporary sandbox project, and runs the resolver.\n5. We look inside the temporary sandbox project and see which version of `Foo` the resolver selected.\n6. We compare the answer from step 3 to the answer from step 5. If they are exactly the same version number, we do nothing, and `Pkg.test` continues. If they are NOT exactly the same version number, and our keyword argument `force_latest_compatible_version` is `true`, we throw an error.\n\nIs that right?","user":"U7THT3TM3","ts":"1616174902.036800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AB+S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, perhaps the feature would be implemented like this:\n\n1. We assemble a list of all registered versions of Foo.\n2. We iterate over each version from step 1, and for each version, we determine whether or not that version is inside the "},{"type":"text","text":"[compat]","style":{"code":true}},{"type":"text","text":" entry for Foo. At the end of this step, we have a list of all registered versions of Foo that are compatible with our given "},{"type":"text","text":"[compat]","style":{"code":true}},{"type":"text","text":" entry for Foo.\n3. We take the "},{"type":"text","text":"maximum","style":{"code":true}},{"type":"text","text":" of the list from step 2. This gives us the latest registered version of Foo that is compatible with our given "},{"type":"text","text":"[compat]","style":{"code":true}},{"type":"text","text":" entry for Foo.\n4. "},{"type":"text","text":"Pkg.test","style":{"code":true}},{"type":"text","text":" sets up the temporary sandbox project, and runs the resolver.\n5. We look inside the temporary sandbox project and see which version of "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" the resolver selected.\n6. We compare the answer from step 3 to the answer from step 5. If they are exactly the same version number, we do nothing, and "},{"type":"text","text":"Pkg.test","style":{"code":true}},{"type":"text","text":" continues. If they are NOT exactly the same version number, and our keyword argument "},{"type":"text","text":"force_latest_compatible_version","style":{"code":true}},{"type":"text","text":" is "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":", we throw an error.\n\nIs that right?"}]}]}]},{"client_msg_id":"fe81117a-0d0a-4761-a8d5-532af1166e53","type":"message","text":"Yes, at least I think so","user":"U67D54KS8","ts":"1616174951.037100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dO3q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, at least I think so"}]}]}]},{"client_msg_id":"6823FA2F-9C48-4DD8-89FF-11D58C0B77A6","type":"message","text":"How would I go about doing step 1? Is there an API where I can give Pkg a name and UUID, and get back all registered versions across all available registries?","user":"U7THT3TM3","ts":"1616175893.038300","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1616175902.000000"},"blocks":[{"type":"rich_text","block_id":"IcXc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How would I go about doing step 1? Is there an API where I can give Pkg a name and UUID, and get back all registered versions across all available registries?"}]}]}]},{"client_msg_id":"9b92fc74-b06a-40b5-a6a8-d2a70d27905e","type":"message","text":"```using Pkg\nc = Pkg.Types.Context()\nuuid = Base.UUID(\"7876af07-990d-54b4-ab0e-23690620f79a\")\nversions = VersionNumber[]\nfor reg in c.registries\n    pkg = get(reg, uuid, nothing)\n    pkg == nothing &amp;&amp; continue\n    info = Pkg.Registry.registry_info(pkg)\n    append!(versions, keys(info.version_info))\nend```","user":"U67D54KS8","ts":"1616176342.038900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IRHN","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Pkg\nc = Pkg.Types.Context()\nuuid = Base.UUID(\"7876af07-990d-54b4-ab0e-23690620f79a\")\nversions = VersionNumber[]\nfor reg in c.registries\n    pkg = get(reg, uuid, nothing)\n    pkg == nothing && continue\n    info = Pkg.Registry.registry_info(pkg)\n    append!(versions, keys(info.version_info))\nend"}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"0b1fc064-9d2e-4419-8de5-2ea75882fb95","type":"message","text":"for example","user":"U67D54KS8","ts":"1616176344.039100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NQk8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for example"}]}]}]},{"client_msg_id":"af710c6c-b75b-47ba-96e5-f84147dffa4b","type":"message","text":"<https://github.com/JuliaLang/Pkg.jl/pull/2439> - \"Add the `force_latest_compatible_version` keyword argument to `Pkg.test`\"","user":"U7THT3TM3","ts":"1616189186.040400","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1616191842.000000"},"blocks":[{"type":"rich_text","block_id":"yCAT","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/pull/2439"},{"type":"text","text":" - \"Add the "},{"type":"text","text":"force_latest_compatible_version","style":{"code":true}},{"type":"text","text":" keyword argument to "},{"type":"text","text":"Pkg.test","style":{"code":true}},{"type":"text","text":"\""}]}]}]},{"client_msg_id":"d8524a88-dc8e-47ed-a848-036647064919","type":"message","text":"why does\n```% JULIA_PKG_SERVER=\"<http://pkg.julialang.org|pkg.julialang.org>\" JULIA_DEPOT_PATH=$(mktemp -d) julia-16 -q \n(@v1.6) pkg&gt; add Hyperopt```\ninstall `IRTools` v0.3.3 when v0.4.2 (the latest version of `IRTools`) is compatible with the environment, as far as I can see (`]add IRTools@v0.4.2` doesn't complain)?  why `add` is not adding the latest possible version?","user":"UDB26738Q","ts":"1616266856.043200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"viR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why does\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"% JULIA_PKG_SERVER=\"pkg.julialang.org\" JULIA_DEPOT_PATH=$(mktemp -d) julia-16 -q \n(@v1.6) pkg> add Hyperopt"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"install "},{"type":"text","text":"IRTools","style":{"code":true}},{"type":"text","text":" v0.3.3 when v0.4.2 (the latest version of "},{"type":"text","text":"IRTools","style":{"code":true}},{"type":"text","text":") is compatible with the environment, as far as I can see ("},{"type":"text","text":"]add IRTools@v0.4.2","style":{"code":true}},{"type":"text","text":" doesn't complain)?  why "},{"type":"text","text":"add","style":{"code":true}},{"type":"text","text":" is not adding the latest possible version?"}]}]}]},{"client_msg_id":"263a8600-edde-422b-a740-2e0f04d4f82d","type":"message","text":"Adding `IRTools@0.4.2` causes other packages to downgrade so you have multiple \"pareto optimal\". The resolver picks one for you. If you want more fine grained control, use `compat`.","user":"U67D54KS8","ts":"1616267474.043900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R4Pl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Adding "},{"type":"text","text":"IRTools@0.4.2","style":{"code":true}},{"type":"text","text":" causes other packages to downgrade so you have multiple \"pareto optimal\". The resolver picks one for you. If you want more fine grained control, use "},{"type":"text","text":"compat","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"31c8e199-4314-49ac-9936-c4d018638549","type":"message","text":"it's an indirect dependency, so not sure that the dev wants to add it to `Project.toml`.  the fact is that `IRTools` v0.3.3 seems to break in AutoMerge, so all new registrations of `Hyperopt` require manual merge","user":"UDB26738Q","ts":"1616267582.045300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zmzdn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's an indirect dependency, so not sure that the dev wants to add it to "},{"type":"text","text":"Project.toml","style":{"code":true}},{"type":"text","text":".  the fact is that "},{"type":"text","text":"IRTools","style":{"code":true}},{"type":"text","text":" v0.3.3 seems to break in AutoMerge, so all new registrations of "},{"type":"text","text":"Hyperopt","style":{"code":true}},{"type":"text","text":" require manual merge"}]}]}]},{"client_msg_id":"b3e93374-8a2e-4f3d-a01d-e3b28bc5f4d9","type":"message","text":"I also don't understand why `IRTools` breaks in AutoMerge :confused:","user":"UDB26738Q","ts":"1616267990.045800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a8Q1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I also don't understand why "},{"type":"text","text":"IRTools","style":{"code":true}},{"type":"text","text":" breaks in AutoMerge "},{"type":"emoji","name":"confused"}]}]}]},{"client_msg_id":"56e1b5d3-23c5-4319-a15d-92e24c7a9ecb","type":"message","text":"Could also find the packages that makes IRTools downgrade and fix the compat there","user":"U67D54KS8","ts":"1616268088.046200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tPM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could also find the packages that makes IRTools downgrade and fix the compat there"}]}]}]},{"client_msg_id":"157431ca-20cf-437d-a136-0d1d721f8063","type":"message","text":"Zygote is the only package in the manifest that depends on IRTools, but it allows both 0.3 and 0.4","user":"UDB26738Q","ts":"1616268129.046800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FExU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Zygote is the only package in the manifest that depends on IRTools, but it allows both 0.3 and 0.4"}]}]}]},{"client_msg_id":"ba48c722-6a7c-41d1-9e89-b6a061012e14","type":"message","text":"This seems to be the conflict:\n\n```(v1.6) pkg&gt; add IRTools@0.4 AbstractFFTs@1 Hyperopt@0.4\n   Resolving package versions...\nERROR: Unsatisfiable requirements detected for package GaussianProcesses [891a1506]:\n GaussianProcesses [891a1506] log:\n ├─possible versions are: 0.8.0-0.12.3 or uninstalled\n ├─restricted by compatibility requirements with Hyperopt [93e5fe13] to versions: 0.12.0-0.12.3\n │ └─Hyperopt [93e5fe13] log:\n │   ├─possible versions are: 0.1.0-0.4.3 or uninstalled\n │   └─restricted to versions 0.4 by an explicit requirement, leaving only versions 0.4.0-0.4.3\n └─restricted by compatibility requirements with Zygote [e88e6eb3] to versions: 0.8.0-0.9.0 or uninstalled — no versions left\n   └─Zygote [e88e6eb3] log:\n     ├─possible versions are: 0.1.0-0.6.4 or uninstalled\n     ├─restricted by compatibility requirements with IRTools [7869d1d1] to versions: [0.1.0, 0.4.21-0.6.4] or uninstalled\n     │ └─IRTools [7869d1d1] log:\n     │   ├─possible versions are: 0.1.0-0.4.2 or uninstalled\n     │   └─restricted to versions 0.4.2 by an explicit requirement, leaving only versions 0.4.2\n     └─restricted by compatibility requirements with AbstractFFTs [621f4979] to versions: [0.1.0-0.4.12, 0.6.1-0.6.4] or uninstalled, leaving only versions: [0.1.0, 0.6.1-0.6.4] or uninstalled\n       └─AbstractFFTs [621f4979] log:\n         ├─possible versions are: 0.3.0-1.0.1 or uninstalled\n         └─restricted to versions 1.0.1 by an explicit requirement, leaving only versions 1.0.1```","user":"U67D54KS8","ts":"1616268235.047400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uD/zN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This seems to be the conflict:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(v1.6) pkg> add IRTools@0.4 AbstractFFTs@1 Hyperopt@0.4\n   Resolving package versions...\nERROR: Unsatisfiable requirements detected for package GaussianProcesses [891a1506]:\n GaussianProcesses [891a1506] log:\n ├─possible versions are: 0.8.0-0.12.3 or uninstalled\n ├─restricted by compatibility requirements with Hyperopt [93e5fe13] to versions: 0.12.0-0.12.3\n │ └─Hyperopt [93e5fe13] log:\n │   ├─possible versions are: 0.1.0-0.4.3 or uninstalled\n │   └─restricted to versions 0.4 by an explicit requirement, leaving only versions 0.4.0-0.4.3\n └─restricted by compatibility requirements with Zygote [e88e6eb3] to versions: 0.8.0-0.9.0 or uninstalled — no versions left\n   └─Zygote [e88e6eb3] log:\n     ├─possible versions are: 0.1.0-0.6.4 or uninstalled\n     ├─restricted by compatibility requirements with IRTools [7869d1d1] to versions: [0.1.0, 0.4.21-0.6.4] or uninstalled\n     │ └─IRTools [7869d1d1] log:\n     │   ├─possible versions are: 0.1.0-0.4.2 or uninstalled\n     │   └─restricted to versions 0.4.2 by an explicit requirement, leaving only versions 0.4.2\n     └─restricted by compatibility requirements with AbstractFFTs [621f4979] to versions: [0.1.0-0.4.12, 0.6.1-0.6.4] or uninstalled, leaving only versions: [0.1.0, 0.6.1-0.6.4] or uninstalled\n       └─AbstractFFTs [621f4979] log:\n         ├─possible versions are: 0.3.0-1.0.1 or uninstalled\n         └─restricted to versions 1.0.1 by an explicit requirement, leaving only versions 1.0.1"}]}]}]},{"client_msg_id":"1a451471-0274-4fce-9e3d-75e951635cc1","type":"message","text":"Needs a release of <https://github.com/STOR-i/GaussianProcesses.jl/commit/d98cfcaa9212881e74f752cb0c6a1b484e19329d#diff-72ed386c2a0cd1d23c0968297e70023ed98c22490d146dd89fc91f48369bad4d>","user":"U67D54KS8","ts":"1616268344.047600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5bP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Needs a release of "},{"type":"link","url":"https://github.com/STOR-i/GaussianProcesses.jl/commit/d98cfcaa9212881e74f752cb0c6a1b484e19329d#diff-72ed386c2a0cd1d23c0968297e70023ed98c22490d146dd89fc91f48369bad4d"}]}]}],"thread_ts":"1616268344.047600","reply_count":1,"reply_users_count":1,"latest_reply":"1616268420.047700","reply_users":["UDB26738Q"],"subscribed":false},{"client_msg_id":"15913f48-d185-4fcb-a342-6eff41aa3f16","type":"message","text":"What is included in the public API of Pkg.jl? (i.e., covered by semver)\n\nIs it only stuff exported from the top module or are there some submodules whose exports are also covered?","user":"U69J94HT9","ts":"1616427775.048800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z7T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is included in the public API of Pkg.jl? (i.e., covered by semver)\n\nIs it only stuff exported from the top module or are there some submodules whose exports are also covered?"}]}]}]},{"client_msg_id":"67c4863f-3d09-4f56-bdea-4793ef1072bc","type":"message","text":"What's in the docs","user":"U67D54KS8","ts":"1616428155.049000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ss97","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's in the docs"}]}]}]},{"client_msg_id":"87f667b4-aa32-40c7-bb55-4d45621c227d","type":"message","text":"For `[compat]` sections, instead of `^`, could we make `≥` the default (for repos not using a bot like CompatHelper)?","user":"U67BXBF99","ts":"1616430174.050200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5+GE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For "},{"type":"text","text":"[compat]","style":{"code":true}},{"type":"text","text":" sections, instead of "},{"type":"text","text":"^","style":{"code":true}},{"type":"text","text":", could we make "},{"type":"text","text":"≥","style":{"code":true}},{"type":"text","text":" the default (for repos not using a bot like CompatHelper)?"}]}]}]},{"client_msg_id":"84189cc5-b1b2-4f7f-a741-afaa325fc4a3","type":"message","text":"My experience is that packages sometimes are breaking (particularly when pre-v1.0), and the current specifier then forces mass downgrades in the ecosystem if I install an unmaintained package","user":"U67BXBF99","ts":"1616430260.051700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u7ii","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My experience is that packages sometimes are breaking (particularly when pre-v1.0), and the current specifier then forces mass downgrades in the ecosystem if I install an unmaintained package"}]}]}]},{"client_msg_id":"43c6e225-92ed-41ac-893d-8b55e9af2486","type":"message","text":"This results in massive breakage, as those old versions aren’t actually tested and functional","user":"U67BXBF99","ts":"1616430284.052200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6/jzZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This results in massive breakage, as those old versions aren’t actually tested and functional"}]}]}]},{"client_msg_id":"d8a56d5d-7a0a-4117-888b-86a418ae1868","type":"message","text":"And we don’t otherwise typically see even good packages like `NLopt` update their old compat bounds to prevent this from occurring","user":"U67BXBF99","ts":"1616430396.052900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2RhVx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And we don’t otherwise typically see even good packages like "},{"type":"text","text":"NLopt","style":{"code":true}},{"type":"text","text":" update their old compat bounds to prevent this from occurring"}]}]}]},{"client_msg_id":"e79b6c07-367b-43b8-a41f-064c8296b438","type":"message","text":"when they make a new release which fixes a serious bug (such as the one encountered here: <https://s3.amazonaws.com/julialang-reports/nanosoldier/pkgeval/by_date/2021-03/22/EfficientGlobalOptimization.1.7.0-DEV-7d117dceb0.log>)","user":"U67BXBF99","ts":"1616430427.053500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G+RI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"when they make a new release which fixes a serious bug (such as the one encountered here: "},{"type":"link","url":"https://s3.amazonaws.com/julialang-reports/nanosoldier/pkgeval/by_date/2021-03/22/EfficientGlobalOptimization.1.7.0-DEV-7d117dceb0.log"},{"type":"text","text":")"}]}]}]},{"client_msg_id":"e7f02d0a-34db-47db-9f7b-c8049bbda9eb","type":"message","text":"they shouldn’t need to update compat bounds for bugfixes though, since those should be in the patch release. Changing the meaning of the default specifier sounds super breaking, and in particular changing it to `&gt;=` means it’s almost worthless. Breaking changes are supposed to be actually breaking, so that’s saying you’re compatible with any future breaking changes which doesn’t really make any sense.","user":"UCZ7VBGUD","ts":"1616431071.055500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fZAqz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"they shouldn’t need to update compat bounds for bugfixes though, since those should be in the patch release. Changing the meaning of the default specifier sounds super breaking, and in particular changing it to "},{"type":"text","text":">=","style":{"code":true}},{"type":"text","text":" means it’s almost worthless. Breaking changes are supposed to be actually breaking, so that’s saying you’re compatible with any future breaking changes which doesn’t really make any sense."}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"d5cb9d88-7ba1-4fa5-b850-245ff69aa8b0","type":"message","text":"I think maybe we should make package authors give confirmation that they intend to make a breaking release when registering the new version of their package. “Do you mean to make a breaking release? Thumbs-up react for yes and registration will proceed. Otherwise please update the version in your Project.toml and re-trigger registration.” Because I think there are spurious non-breaking releases which are versioned as breaking which causes these problems. (Like bugfixes being marked as breaking). A breaking release should be a big deal and shouldn’t be regarded as “well let’s tag it as breaking to be safe” since that causes a problems too.","user":"UCZ7VBGUD","ts":"1616431382.057900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zhUl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think maybe we should make package authors give confirmation that they intend to make a breaking release when registering the new version of their package. “Do you mean to make a breaking release? Thumbs-up react for yes and registration will proceed. Otherwise please update the version in your Project.toml and re-trigger registration.” Because I think there are spurious non-breaking releases which are versioned as breaking which causes these problems. (Like bugfixes being marked as breaking). A breaking release should be a big deal and shouldn’t be regarded as “well let’s tag it as breaking to be safe” since that causes a problems too."}]}]}],"reactions":[{"name":"+1","users":["U67SCG4HG","U7THT3TM3"],"count":2}]},{"client_msg_id":"af40e766-1827-4f05-a1e3-40f2ea84da32","type":"message","text":"Yeah, but the current situation also claims forward compatibility of every past release with every combination of future releases, which is also not necessarily very helpful","user":"U67BXBF99","ts":"1616431746.059000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kcMvI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, but the current situation also claims forward compatibility of every past release with every combination of future releases, which is also not necessarily very helpful"}]}]}],"reactions":[{"name":"question","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"b4fb775d-81b3-4068-b811-179e057c4fb6","type":"message","text":"&gt; For [compat] sections, instead of ^, could we make ≥ the default\nthis kills the compat","user":"U67D54KS8","ts":"1616431803.059300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sNPPD","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"For [compat] sections, instead of ^, could we make ≥ the default"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nthis kills the compat"}]}]}],"reactions":[{"name":"dagger_knife","users":["UDB26738Q","U7THT3TM3"],"count":2},{"name":"crab","users":["U67D54KS8","U7THT3TM3"],"count":2}]},{"client_msg_id":"4381b8df-9025-4ccd-9e1d-8d1a95b7e97f","type":"message","text":"note that if there are popular packages which really have too strict bounds which would cause strain in the ecosystem, we can retroactively fix them in the registry without doing a new release","user":"UDB26738Q","ts":"1616431906.060500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7Q6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"note that if there are popular packages which really have too strict bounds which would cause strain in the ecosystem, we can retroactively fix them in the registry without doing a new release"}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"type":"message","subtype":"thread_broadcast","text":"And what about when `DataFrames` releases 2.0 with a bunch of breakage and suddenly every package is broken by default for a new user?","user":"U67D54KS8","ts":"1616432006.060600","thread_ts":"1616430260.051700","root":{"client_msg_id":"84189cc5-b1b2-4f7f-a741-afaa325fc4a3","type":"message","text":"My experience is that packages sometimes are breaking (particularly when pre-v1.0), and the current specifier then forces mass downgrades in the ecosystem if I install an unmaintained package","user":"U67BXBF99","ts":"1616430260.051700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u7ii","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My experience is that packages sometimes are breaking (particularly when pre-v1.0), and the current specifier then forces mass downgrades in the ecosystem if I install an unmaintained package"}]}]}],"thread_ts":"1616430260.051700","reply_count":22,"reply_users_count":3,"latest_reply":"1616434834.071500","reply_users":["U67D54KS8","UDB26738Q","U67BXBF99"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"r00","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And what about when "},{"type":"text","text":"DataFrames","style":{"code":true}},{"type":"text","text":" releases 2.0 with a bunch of breakage and suddenly every package is broken by default for a new user?"}]}]}],"client_msg_id":"7517d60a-6960-4a89-ad91-c446e44ea47c","edited":{"user":"U67D54KS8","ts":"1616432094.000000"},"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"15bb0951-73b4-47b5-b3c1-e080deef5c7b","type":"message","text":"<@UDB26738Q> We have the data for that from Nanosoldier, but I was told we cannot retroactively apply that to the registry","user":"U67BXBF99","ts":"1616434086.065600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SWKO","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" We have the data for that from Nanosoldier, but I was told we cannot retroactively apply that to the registry"}]}]}]},{"client_msg_id":"412a8abf-f775-459c-817d-8bd5bcc7b73f","type":"message","text":"I guess because that would penalize package with unreliable tests (we have some that simply don’t run correctly in the sandbox), and possibly also because it means the registry would no long reflects the content of the package author’s repo?","user":"U67BXBF99","ts":"1616434170.066900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z2Iol","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess because that would penalize package with unreliable tests (we have some that simply don’t run correctly in the sandbox), and possibly also because it means the registry would no long reflects the content of the package author’s repo?"}]}]}]},{"client_msg_id":"f74c2388-f277-4dfa-afd1-cc9cb99909de","type":"message","text":"&gt; it means the registry would no long reflects the content of the package author’s repo?\ntrue, but being able to modify the registry is an escape hatch for the cases where editing the repo isn't an option\n\nBTW, now I understand where this started: <https://github.com/JuliaRegistries/General/pull/32561#issuecomment-804222635> :sweat_smile:  but I don't understand your comment\n\n&gt; The docs say that the ability to specify an upper-bound was added in Julia v1.4, while this package update needs to support v1.0","user":"UDB26738Q","ts":"1616434391.069100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VNEfh","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"it means the registry would no long reflects the content of the package author’s repo?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\ntrue, but being able to modify the registry is an escape hatch for the cases where editing the repo isn't an option\n\nBTW, now I understand where this started: "},{"type":"link","url":"https://github.com/JuliaRegistries/General/pull/32561#issuecomment-804222635"},{"type":"text","text":" "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":"  but I don't understand your comment\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"The docs say that the ability to specify an upper-bound was added in Julia v1.4, while this package update needs to support v1.0"}]}]}]},{"client_msg_id":"dff5826a-e7b4-4a78-9898-5bedcaea05e5","type":"message","text":"The `&gt;=` compat syntax was added in 1.4. Jameson is on a compat crusade so he wants to use that here <https://github.com/JuliaCI/BenchmarkTools.jl/blob/fbaa14d7f1853c994c8d1720ce766760efcbf1e6/Project.toml#L14>. But BenchmarkTools should support 1.0.","user":"U67D54KS8","ts":"1616434488.069700","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616434521.000000"},"blocks":[{"type":"rich_text","block_id":"yGw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":">=","style":{"code":true}},{"type":"text","text":" compat syntax was added in 1.4. Jameson is on a compat crusade so he wants to use that here "},{"type":"link","url":"https://github.com/JuliaCI/BenchmarkTools.jl/blob/fbaa14d7f1853c994c8d1720ce766760efcbf1e6/Project.toml#L14"},{"type":"text","text":". But BenchmarkTools should support 1.0."}]}]}],"thread_ts":"1616434488.069700","reply_count":1,"reply_users_count":1,"latest_reply":"1616434558.070000","reply_users":["UDB26738Q"],"subscribed":false}]}