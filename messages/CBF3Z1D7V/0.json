{"cursor": 4, "messages": [{"client_msg_id":"2a8582d3-eccf-4703-ae32-980402258d7d","type":"message","text":"Sure, that is my preference.","user":"U7THT3TM3","ts":"1616442524.097800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FUvi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure, that is my preference."}]}]}]},{"client_msg_id":"5011cf6b-2c0b-4cf1-8dc9-237b3ee69fce","type":"message","text":"I think that people get annoyed with the occasional need to bump a compat bound and fail to realize how horrifically often we’d need to go around putting retroactive caps on things if we defaulted to unbounded compat.","user":"U6795JH6H","ts":"1616448562.104700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"raSW1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think that people get annoyed with the occasional need to bump a compat bound and fail to realize how horrifically often we’d need to go around putting retroactive caps on things if we defaulted to unbounded compat."}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3","U680THK2S"],"count":2},{"name":"100","users":["U6A936746"],"count":1}]},{"client_msg_id":"07d79797-7506-4da0-9f5e-bff717f81127","type":"message","text":"Remember “The Cappening”? It would be that but all the time.","user":"U6795JH6H","ts":"1616448595.105500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kvoZ6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Remember “The Cappening”? It would be that but all the time."}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1},{"name":"scream","users":["U680THK2S","U6A936746"],"count":2},{"name":"joy","users":["U678RKJ5A"],"count":1}]},{"client_msg_id":"accbd82a-b5d0-4662-b4bb-f6255f877464","type":"message","text":"If the default was no upper bounds then any time someone makes a release of a package that has a _correct_ upper bound on some dependency, we would need to go in an cap anything depends on that package.","user":"U6795JH6H","ts":"1616448704.107300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aIjTc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If the default was no upper bounds then any time someone makes a release of a package that has a "},{"type":"text","text":"correct","style":{"italic":true}},{"type":"text","text":" upper bound on some dependency, we would need to go in an cap anything depends on that package."}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3","UGU761DU2"],"count":2}]},{"client_msg_id":"5a2719ff-815a-4b50-911f-64ae656a3c72","type":"message","text":"Total nightmare","user":"U6795JH6H","ts":"1616448722.107600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QzZT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Total nightmare"}]}]}]},{"client_msg_id":"b40dae45-4eaa-4244-b5c4-1fdd4db8909f","type":"message","text":"CompatHelper does help with prompting compat bumps but if you don't also make a release yourself you can still get into this kind of nonsense, <https://github.com/timueh/PolyChaos.jl/pull/51>, where people get the impression that removing compat bounds is helpful when it's really just a matter of unreleased compat bumps.","user":"UBVE598BC","ts":"1616452254.111400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U9H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"CompatHelper does help with prompting compat bumps but if you don't also make a release yourself you can still get into this kind of nonsense, "},{"type":"link","url":"https://github.com/timueh/PolyChaos.jl/pull/51"},{"type":"text","text":", where people get the impression that removing compat bounds is helpful when it's really just a matter of unreleased compat bumps."}]}]}],"thread_ts":"1616452254.111400","reply_count":3,"reply_users_count":2,"latest_reply":"1616452803.112000","reply_users":["UM8JUNJG7","UBVE598BC"],"subscribed":false,"reactions":[{"name":"joy","users":["UM8JUNJG7"],"count":1}]},{"client_msg_id":"37f5c525-e141-4939-9cb9-35d02cb871a3","type":"message","text":"Just a heads up, I might make quite a few small \"refactoring\" PRs that on the surface look kinda pointless. However, I have a pretty good idea of some tweaks that would make the internal API in Pkg quite a lot better (cf the new Registry stuff that's in there) but every time I've attempted to implement it I've gotten overwhelmed with all other stuff that has to be changed. So I am trying to do it more piece by piece now.","user":"U67D54KS8","ts":"1616501486.114100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bw3JQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just a heads up, I might make quite a few small \"refactoring\" PRs that on the surface look kinda pointless. However, I have a pretty good idea of some tweaks that would make the internal API in Pkg quite a lot better (cf the new Registry stuff that's in there) but every time I've attempted to implement it I've gotten overwhelmed with all other stuff that has to be changed. So I am trying to do it more piece by piece now."}]}]}],"reactions":[{"name":"+1","users":["U8MPCDJAY","U6BNE7LTZ"],"count":2}]},{"client_msg_id":"d4654f0e-1061-4fe2-9075-d3e6177b6616","type":"message","text":"I just got caught out by something like\n```(v1.5) pkg&gt; dev /path/to/Foo.jl\n...\n(v1.5) pkg&gt; test Foo\n...\nERROR: LoadError: ArgumentError: Package SpecialFunctions does not have ChainRulesCore in its dependencies\n...\n\n(v1.5) pkg&gt; up\n...\n(v1.5) pkg&gt; test Foo\n...\nERROR: LoadError: ArgumentError: Package SpecialFunctions does not have ChainRulesCore in its dependencies```\nand it turned out I had a bad manifest in `/path/to/Foo.jl` that wasn’t being re-resolved by up.\n\nBug? or am I just expecting too much? Should `up` or `resolve` be recursive and also delve-into dev-ed packages?","user":"U8MPCDJAY","ts":"1616523523.115900","team":"T68168MUP","edited":{"user":"U8MPCDJAY","ts":"1616523564.000000"},"blocks":[{"type":"rich_text","block_id":"6nxpp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just got caught out by something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(v1.5) pkg> dev /path/to/Foo.jl\n...\n(v1.5) pkg> test Foo\n...\nERROR: LoadError: ArgumentError: Package SpecialFunctions does not have ChainRulesCore in its dependencies\n...\n\n(v1.5) pkg> up\n...\n(v1.5) pkg> test Foo\n...\nERROR: LoadError: ArgumentError: Package SpecialFunctions does not have ChainRulesCore in its dependencies"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and it turned out I had a bad manifest in "},{"type":"text","text":"/path/to/Foo.jl","style":{"code":true}},{"type":"text","text":" that wasn’t being re-resolved by up.\n\nBug? or am I just expecting too much? Should "},{"type":"text","text":"up","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"resolve","style":{"code":true}},{"type":"text","text":" be recursive and also delve-into dev-ed packages?"}]}]}]},{"client_msg_id":"3ef37ec2-98ab-4a2a-9988-743ecdc7ca58","type":"message","text":"on 1.6 I am getting a `Warning: Some registries failed to update:` on a private registry in a git repo... I'm not entirely sure what's actually happening becuase it *IS* succeeding in cloning stuff from teh same git server.  I have not yet been able to verify that it's actually failing to update the registry...","user":"U9VG1AYSG","ts":"1616686265.119700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DKfR9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"on 1.6 I am getting a "},{"type":"text","text":"Warning: Some registries failed to update:","style":{"code":true}},{"type":"text","text":" on a private registry in a git repo... I'm not entirely sure what's actually happening becuase it "},{"type":"text","text":"IS","style":{"bold":true}},{"type":"text","text":" succeeding in cloning stuff from teh same git server.  I have not yet been able to verify that it's actually failing to update the registry..."}]}]}],"thread_ts":"1616686265.119700","reply_count":13,"reply_users_count":3,"latest_reply":"1616689319.123400","reply_users":["U67SCG4HG","U9VG1AYSG","UBVE598BC"],"is_locked":false,"subscribed":false},{"client_msg_id":"620d7562-f665-4953-95f7-9cb6d2e6f765","type":"message","text":"best comment on hacker news:\n\n&gt;  Is there a per-project way to manage dependencies yet?","user":"UDB26738Q","ts":"1616686563.120500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=3LRl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"best comment on hacker news:\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":" Is there a per-project way to manage dependencies yet?"}]}]}],"thread_ts":"1616686563.120500","reply_count":1,"reply_users_count":1,"latest_reply":"1616688065.121000","reply_users":["U66GD0880"],"is_locked":false,"subscribed":false,"reactions":[{"name":"wat-duck","users":["U67D54KS8","U680THK2S","U6QGE7S86","U66GD0880"],"count":4}]},{"client_msg_id":"ac0acad5-2ad5-4854-90a2-b684994564c2","type":"message","text":"is PkgServer particularly lazy today?","user":"UDB26738Q","ts":"1616716627.125400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GlM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is PkgServer particularly lazy today?"}]}]}],"thread_ts":"1616716627.125400","reply_count":1,"reply_users_count":1,"latest_reply":"1616716836.125900","reply_users":["U8MPCDJAY"],"is_locked":false,"subscribed":false},{"client_msg_id":"B658C05B-4426-4DF8-A71F-3955DECEF475","type":"message","text":"I’ve seen a few people confused about how to get more info on the errors during auto-precomp that don’t throw and show stack traces. I’m thinking we need a little text there to prompt what to do.. Something like this?\n\n`Either call pkg&gt; precompile, or load the package to get the full error report`\n","user":"U8MPCDJAY","ts":"1616908237.133700","team":"T68168MUP","edited":{"user":"U8MPCDJAY","ts":"1616908260.000000"},"blocks":[{"type":"rich_text","block_id":"Bbh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ve seen a few people confused about how to get more info on the errors during auto-precomp that don’t throw and show stack traces. I’m thinking we need a little text there to prompt what to do.. Something like this?\n\n"},{"type":"text","text":"Either call pkg> precompile, or load the package to get the full error report","style":{"code":true}},{"type":"text","text":"\n"}]}]}],"reactions":[{"name":"+1","users":["U6795JH6H"],"count":1}]},{"client_msg_id":"c419723e-a5f3-499f-afe7-e86a6dd52d18","type":"message","text":"Anyone knows what can be up with <https://discourse.julialang.org/t/julia-1-6-0-add-package-ohmyrepl/58148/2>? <@U6795JH6H>?","user":"U67D54KS8","ts":"1617013709.134800","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Julia 1.6.0 add Package OhMyREPL","title_link":"https://discourse.julialang.org/t/julia-1-6-0-add-package-ohmyrepl/58148/2","text":"This error says that there were some problems during the communication with Git. Can you retry and check that you are able to git clone ... from GitHub? Chances are that it was just a temporary hick-up.","fallback":"JuliaLang: Julia 1.6.0 add Package OhMyREPL","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1617001869,"from_url":"https://discourse.julialang.org/t/julia-1-6-0-add-package-ohmyrepl/58148/2","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/julia-1-6-0-add-package-ohmyrepl/58148/2"}],"blocks":[{"type":"rich_text","block_id":"a2oPI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyone knows what can be up with "},{"type":"link","url":"https://discourse.julialang.org/t/julia-1-6-0-add-package-ohmyrepl/58148/2"},{"type":"text","text":"? "},{"type":"user","user_id":"U6795JH6H"},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"24de186f-375d-488b-9863-fb3a41f21710","type":"message","text":"On 1.6:","user":"U67BJLYCS","ts":"1617027720.136600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N1=eD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"On 1.6:"}]}]}]},{"client_msg_id":"30d826cb-8d9e-47a4-aec1-a9ffd2184262","type":"message","text":"```ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing to an object of type String\nClosest candidates are:\n  convert(::Type{String}, !Matched::String) at essentials.jl:210\n  convert(::Type{T}, !Matched::T) where T&lt;:AbstractString at strings/basic.jl:231\n  convert(::Type{T}, !Matched::AbstractString) where T&lt;:AbstractString at strings/basic.jl:232\n  ...\nStacktrace:\n  [1] setindex!(h::Dict{String, Vector{Base.UUID}}, v0::Vector{Base.UUID}, key0::Nothing)\n    @ Base ./dict.jl:374\n  [2] ensure_resolved(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; registry::Bool)\n    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:830\n  [3] ensure_resolved\n    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:825 [inlined]\n  [4] build(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; verbose::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:892\n  [5] build\n    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:877 [inlined]\n  [6] #build#70\n    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:73 [inlined]\n  [7] build\n    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:72 [inlined]\n  [8] build(pkg::Pkg.Types.PackageSpec; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:69\n  [9] build(pkg::Pkg.Types.PackageSpec)\n    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:69\n [10] top-level scope\n    @ ~/work/KernelAbstractions.jl/KernelAbstractions.jl/.ci/develop.jl:13```","user":"U67BJLYCS","ts":"1617027723.136800","team":"T68168MUP","edited":{"user":"U67BJLYCS","ts":"1617027728.000000"},"blocks":[{"type":"rich_text","block_id":"fR4","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: LoadError: MethodError: Cannot `convert` an object of type Nothing to an object of type String\nClosest candidates are:\n  convert(::Type{String}, !Matched::String) at essentials.jl:210\n  convert(::Type{T}, !Matched::T) where T<:AbstractString at strings/basic.jl:231\n  convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:232\n  ...\nStacktrace:\n  [1] setindex!(h::Dict{String, Vector{Base.UUID}}, v0::Vector{Base.UUID}, key0::Nothing)\n    @ Base ./dict.jl:374\n  [2] ensure_resolved(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; registry::Bool)\n    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:830\n  [3] ensure_resolved\n    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:825 [inlined]\n  [4] build(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; verbose::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:892\n  [5] build\n    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:877 [inlined]\n  [6] #build#70\n    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:73 [inlined]\n  [7] build\n    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:72 [inlined]\n  [8] build(pkg::Pkg.Types.PackageSpec; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})\n    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:69\n  [9] build(pkg::Pkg.Types.PackageSpec)\n    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:69\n [10] top-level scope\n    @ ~/work/KernelAbstractions.jl/KernelAbstractions.jl/.ci/develop.jl:13"}]}]}]},{"client_msg_id":"477ba5f4-30df-4d73-b70d-17111c654ced","type":"message","text":"Need: Project, Manifest, command that was run.","user":"U67D54KS8","ts":"1617028152.137200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dPnvU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Need: Project, Manifest, command that was run."}]}]}],"thread_ts":"1617028152.137200","reply_count":7,"reply_users_count":2,"latest_reply":"1617030989.138600","reply_users":["U67BJLYCS","U67D54KS8"],"is_locked":false,"subscribed":false},{"type":"message","text":"Getting a bit excessive? :stuck_out_tongue:","files":[{"id":"F01T5G624BB","created":1617089673,"timestamp":1617089673,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U67D54KS8","editable":false,"size":67936,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01T5G624BB/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01T5G624BB/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01T5G624BB-799d897d07/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01T5G624BB-799d897d07/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01T5G624BB-799d897d07/image_360.png","thumb_360_w":360,"thumb_360_h":190,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01T5G624BB-799d897d07/image_480.png","thumb_480_w":480,"thumb_480_h":253,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01T5G624BB-799d897d07/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01T5G624BB-799d897d07/image_720.png","thumb_720_w":720,"thumb_720_h":380,"original_w":743,"original_h":392,"thumb_tiny":"AwAZADCmMbVwvOOckUfgPzFJuOANxwOlISf7xoAcenQfmKTn0X9KbuPqaMmgBTn/AGf0pDSUUwJQrbR2BHHWjDf3v501vurTaAHkNj7386TB/v8A86bRQA7kfx00j3paKAP/2Q==","permalink":"https://julialang.slack.com/files/U67D54KS8/F01T5G624BB/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01T5G624BB-4ceb796b99","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"=GQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Getting a bit excessive? "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"user":"U67D54KS8","display_as_bot":false,"ts":"1617089683.140600","reactions":[{"name":"+1","users":["U67SCG4HG"],"count":1}]},{"client_msg_id":"70c4e010-386d-40ae-9ef8-836fd2eac1b5","type":"message","text":"Why is it so frequent?","user":"U6795JH6H","ts":"1617135990.143300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JzF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why is it so frequent?"}]}]}],"thread_ts":"1617135990.143300","reply_count":7,"reply_users_count":2,"latest_reply":"1617139023.149300","reply_users":["U8MPCDJAY","U6795JH6H"],"is_locked":false,"subscribed":false},{"client_msg_id":"7EF1457C-D1C1-4B76-AF5F-F8843997A7AA","type":"message","text":"Should there be a 1.6.0 release on the Pkg repo? The last one is 1.5.3","user":"U8MPCDJAY","ts":"1617150265.150200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o6K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Should there be a 1.6.0 release on the Pkg repo? The last one is 1.5.3"}]}]}]},{"client_msg_id":"5C8C7D12-6B4A-4048-843B-61879692E1E3","type":"message","text":"There should yes","user":"U6795JH6H","ts":"1617152229.150500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k6sS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There should yes"}]}]}]},{"client_msg_id":"f589b2af-9856-42d3-8d61-c53864f96db9","type":"message","text":"anybody around who can point me to some docs on the Scratchspace/Preferences stuff? I’m finally wanting to dig in, but I can’t find any docs in JuliaLang or Pkg.jl?","user":"U681ELA87","ts":"1617161903.151600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"png","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"anybody around who can point me to some docs on the Scratchspace/Preferences stuff? I’m finally wanting to dig in, but I can’t find any docs in JuliaLang or Pkg.jl?"}]}]}]},{"client_msg_id":"fbaad8d4-6558-465e-b586-2095252ace60","type":"message","text":"Specifically, I’m interested in the mechanism that would allow my package (ODBC.jl) to have a mutable location that would persist across Julia versions that it could store some state (odbc driver registration)","user":"U681ELA87","ts":"1617161975.152500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JAK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Specifically, I’m interested in the mechanism that would allow my package (ODBC.jl) to have a mutable location that would persist across Julia versions that it could store some state (odbc driver registration)"}]}]}]},{"client_msg_id":"5b4d5db7-4fe8-4fa2-ad03-18355cd12989","type":"message","text":"nvm, I think I found it: <https://github.com/JuliaPackaging/Scratch.jl>","user":"U681ELA87","ts":"1617162391.152700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"47dKn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nvm, I think I found it: "},{"type":"link","url":"https://github.com/JuliaPackaging/Scratch.jl"}]}]}]},{"client_msg_id":"705e7a96-2b9e-45c9-83e6-641afe1defb9","type":"message","text":"<https://github.com/JuliaLang/Pkg.jl/pull/2431> should be ready for review / testing.","user":"U67D54KS8","ts":"1617204944.153000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hJi8N","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/pull/2431"},{"type":"text","text":" should be ready for review / testing."}]}]}]},{"client_msg_id":"7a0248f7-7abd-47f4-9cf1-2df96fddd6a6","type":"message","text":"(turning off whitespace in the diff is to recommend)","user":"U67D54KS8","ts":"1617204984.153300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2Rs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(turning off whitespace in the diff is to recommend)"}]}]}]},{"client_msg_id":"3d5184d8-17ed-4608-b399-c310684ef3e1","type":"message","text":"what happened to the method\n```Pkg.Registry.update(::Pkg.Types.Context, ::Vector{Pkg.Registry.RegistrySpec}; io=Base.DevNull())```\nin `master`?","user":"UDB26738Q","ts":"1617323010.153800","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1617323085.000000"},"blocks":[{"type":"rich_text","block_id":"4X+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what happened to the method\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Pkg.Registry.update(::Pkg.Types.Context, ::Vector{Pkg.Registry.RegistrySpec}; io=Base.DevNull())"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"in "},{"type":"text","text":"master","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1617323010.153800","reply_count":1,"reply_users_count":1,"latest_reply":"1617323278.154000","reply_users":["UDB26738Q"],"is_locked":false,"subscribed":false},{"client_msg_id":"9297cc4c-238c-4968-90eb-57338ea0a131","type":"message","text":"Ok, I think I’ve heard this is possible, but I kind of want to try it: registering a current submodule of a current package as its own package. So it would continue to live in the repo of the “parent” package, but would be registered as its own package. I’m imagining the subdirectory would need all the usual package bells/whistles? `/src`, `/test/runtests.jl`, `/docs`, Project.toml file, etc. Right? So essentially a full “package” in my parent package’s current repo subdirectory. Then I can register the package from……any commit in the parent repo? But I reference the subdirectory package as the one to register? If anyone has any `@JuliaRegistrator register()` command examples handy, I’d appreciate it.","user":"U681ELA87","ts":"1617334032.157300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1gW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, I think I’ve heard this is possible, but I kind of want to try it: registering a current submodule of a current package as its own package. So it would continue to live in the repo of the “parent” package, but would be registered as its own package. I’m imagining the subdirectory would need all the usual package bells/whistles? "},{"type":"text","text":"/src","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"/test/runtests.jl","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"/docs","style":{"code":true}},{"type":"text","text":", Project.toml file, etc. Right? So essentially a full “package” in my parent package’s current repo subdirectory. Then I can register the package from……any commit in the parent repo? But I reference the subdirectory package as the one to register? If anyone has any "},{"type":"text","text":"@JuliaRegistrator register()","style":{"code":true}},{"type":"text","text":" command examples handy, I’d appreciate it."}]}]}]},{"client_msg_id":"4bb6510b-d3fe-44bd-b3dd-cae7cb91b00e","type":"message","text":"I recently did this for KernelAbstractions and it was surprisingly smooth","user":"U67BJLYCS","ts":"1617334300.157400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2Kd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I recently did this for KernelAbstractions and it was surprisingly smooth"}]}]}]},{"client_msg_id":"7b0b6a7c-9d5c-4d3f-951f-2c06e801718d","type":"message","text":"<https://github.com/JuliaGPU/KernelAbstractions.jl/tree/master/lib|https://github.com/JuliaGPU/KernelAbstractions.jl/tree/master/lib>","user":"U67BJLYCS","ts":"1617334302.157500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k9zK","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaGPU/KernelAbstractions.jl/tree/master/lib","text":"https://github.com/JuliaGPU/KernelAbstractions.jl/tree/master/lib"}]}]}]},{"client_msg_id":"68be8786-79f2-46c1-b16d-bcbe1802f581","type":"message","text":"<https://github.com/JuliaGPU/KernelAbstractions.jl/commit/8c9d7b48fb3b9dbecc5aae7e30e2758f2f71b6d5#commitcomment-48907813|https://github.com/JuliaGPU/KernelAbstractions.jl/commit/8c9d7b48fb3b9dbecc5aae7e30e2758f2f71b6d5#commitcomment-48907813>","user":"U67BJLYCS","ts":"1617334342.157600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o18pL","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaGPU/KernelAbstractions.jl/commit/8c9d7b48fb3b9dbecc5aae7e30e2758f2f71b6d5#commitcomment-48907813","text":"https://github.com/JuliaGPU/KernelAbstractions.jl/commit/8c9d7b48fb3b9dbecc5aae7e30e2758f2f71b6d5#commitcomment-48907813"}]}]}]},{"client_msg_id":"9bc45499-78ea-4b54-9df3-7c9de9271c27","type":"message","text":"Is the invocation","user":"U67BJLYCS","ts":"1617334348.157700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mt=p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is the invocation"}]}]}]},{"client_msg_id":"fd3a86c1-a60a-4c35-ab3f-6821c2588898","type":"message","text":"I think my one complaint would be that I can tag everything at once","user":"U67BJLYCS","ts":"1617334364.157800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Hyg9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think my one complaint would be that I can tag everything at once"}]}]}]},{"client_msg_id":"2a984ec4-e980-43f4-ad6e-e21d59d06f43","type":"message","text":"Awesome. Going to give it a whirl.","user":"U681ELA87","ts":"1617334729.158100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GvAcX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Awesome. Going to give it a whirl."}]}]}]},{"client_msg_id":"981b545a-da17-45be-a39a-936a9ed18b7e","type":"message","text":"Follow up question: is it possible to `dev` a subdirectory package? I can’t seem to quite figure out the right incantation to make Pkg.jl happy.","user":"U681ELA87","ts":"1617342287.158800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZgpI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Follow up question: is it possible to "},{"type":"text","text":"dev","style":{"code":true}},{"type":"text","text":" a subdirectory package? I can’t seem to quite figure out the right incantation to make Pkg.jl happy."}]}]}]},{"client_msg_id":"b007b841-82c2-4043-9782-077027e51441","type":"message","text":"Oh, I think it was because I didn’t rename my source file to the new package name\\","user":"U681ELA87","ts":"1617342730.159100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oHQZQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, I think it was because I didn’t rename my source file to the new package name\\"}]}]}]},{"client_msg_id":"a72711c6-8326-49f1-9e38-b16437bc0f7a","type":"message","text":"&gt; Follow up question: is it possible to dev a subdirectory package?\nYou just dev the folder like normally. If you have `MyPackage/MySubPackage` you do `pkg&gt; dev MyPackage/MySubPackage`","user":"U67D54KS8","ts":"1617347086.159900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E=xs","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Follow up question: is it possible to dev a subdirectory package?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYou just dev the folder like normally. If you have "},{"type":"text","text":"MyPackage/MySubPackage","style":{"code":true}},{"type":"text","text":" you do "},{"type":"text","text":"pkg> dev MyPackage/MySubPackage","style":{"code":true}}]}]}]},{"client_msg_id":"54c708e4-afe2-420f-a818-8f31e6bf5704","type":"message","text":"yeah, I got it to work, but it was mad at me for a while because I had `Arrow/src/ArrowTypes/src/arrowtypes.jl`, and my file name wasn’t `ArrowTypes.jl`.","user":"U681ELA87","ts":"1617380316.160800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yWY4p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, I got it to work, but it was mad at me for a while because I had "},{"type":"text","text":"Arrow/src/ArrowTypes/src/arrowtypes.jl","style":{"code":true}},{"type":"text","text":", and my file name wasn’t "},{"type":"text","text":"ArrowTypes.jl","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"f44b9e45-8e6b-4de8-9c8a-d2936a1d6cc6","type":"message","text":"Yeah, both code loading and Pkg should probably detect that and give a better error message","user":"U67D54KS8","ts":"1617384181.161200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eMF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, both code loading and Pkg should probably detect that and give a better error message"}]}]}]},{"client_msg_id":"ee45b30e-b7b7-41f4-800e-5e3e5da0fb98","type":"message","text":"Is there a way to modify the manifest via things like `develop()` but not re-instantiate and rebuild and such?","user":"U66GD0880","ts":"1617656811.163400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dwh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to modify the manifest via things like "},{"type":"text","text":"develop()","style":{"code":true}},{"type":"text","text":" but not re-instantiate and rebuild and such?"}]}]}]},{"client_msg_id":"cdae6690-93bf-4bc3-836b-c8ae0f9a5922","type":"message","text":"I want to manually `instantiate` after I’m done with all the operations I’m going to do","user":"U66GD0880","ts":"1617656825.163800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/qM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I want to manually "},{"type":"text","text":"instantiate","style":{"code":true}},{"type":"text","text":" after I’m done with all the operations I’m going to do"}]}]}]},{"client_msg_id":"550e4dc9-ae78-4c2b-b5a8-da4fbcb82ac1","type":"message","text":"I don’t want to `instantiate` after each operation where I’m changing aspects of the project/manifest","user":"U66GD0880","ts":"1617656842.164200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H49v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t want to "},{"type":"text","text":"instantiate","style":{"code":true}},{"type":"text","text":" after each operation where I’m changing aspects of the project/manifest"}]}]}]},{"client_msg_id":"A6363DAF-B910-46C8-BF8F-359AAEECB683","type":"message","text":"Any desire for a pkg meeting today?","user":"U66GD0880","ts":"1617731609.164700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mTsyP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any desire for a pkg meeting today?"}]}]}]},{"client_msg_id":"3174FFF3-4808-47AD-BEC3-2412E139E4BF","type":"message","text":"I’m taking that as a no. :)","user":"U66GD0880","ts":"1617733196.165100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OxUP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m taking that as a no. :)"}]}]}],"reactions":[{"name":"tumbleweed","users":["UDB26738Q","U680THK2S"],"count":2},{"name":"cricket","users":["U680THK2S"],"count":1}]},{"client_msg_id":"8311eee9-4e80-4cd8-b2c0-9fa90bbe4017","type":"message","text":"Any opinions on <https://github.com/JuliaLang/Pkg.jl/pull/2484> ?\nBasically it will make packages precompile even if they can’t be loaded during the session. i.e. yellow `✓`’s rather than `?`, which currently delays precomp until the next session and is a bit of an unfriendly UX flow","user":"U8MPCDJAY","ts":"1617834514.169200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8ZL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any opinions on "},{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/pull/2484"},{"type":"text","text":" ?\nBasically it will make packages precompile even if they can’t be loaded during the session. i.e. yellow "},{"type":"text","text":"✓","style":{"code":true}},{"type":"text","text":"’s rather than "},{"type":"text","text":"?","style":{"code":true}},{"type":"text","text":", which currently delays precomp until the next session and is a bit of an unfriendly UX flow"}]}]}],"thread_ts":"1617834514.169200","reply_count":1,"reply_users_count":1,"latest_reply":"1617834697.169700","reply_users":["U01537M2E9W"],"is_locked":false,"subscribed":false,"reactions":[{"name":"+1","users":["U66GD0880","U7THT3TM3"],"count":2}]},{"type":"message","text":"i.e.","files":[{"id":"F01TLP1AX50","created":1617834526,"timestamp":1617834526,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U8MPCDJAY","editable":false,"size":191920,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01TLP1AX50/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01TLP1AX50/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01TLP1AX50-d3cae2ad29/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01TLP1AX50-d3cae2ad29/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01TLP1AX50-d3cae2ad29/image_360.png","thumb_360_w":360,"thumb_360_h":69,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01TLP1AX50-d3cae2ad29/image_480.png","thumb_480_w":480,"thumb_480_h":92,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01TLP1AX50-d3cae2ad29/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01TLP1AX50-d3cae2ad29/image_720.png","thumb_720_w":720,"thumb_720_h":138,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01TLP1AX50-d3cae2ad29/image_800.png","thumb_800_w":800,"thumb_800_h":154,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01TLP1AX50-d3cae2ad29/image_960.png","thumb_960_w":960,"thumb_960_h":184,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01TLP1AX50-d3cae2ad29/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":197,"original_w":1584,"original_h":304,"thumb_tiny":"AwAJADCoOg4pDzxg/lSj7opT1oAZx/dNGP8AZNOP9aWgBnHpTak70dqAP//Z","permalink":"https://julialang.slack.com/files/U8MPCDJAY/F01TLP1AX50/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01TLP1AX50-0174a5f299","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"BGKeQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i.e."}]}]}],"user":"U8MPCDJAY","display_as_bot":false,"ts":"1617834532.169400"},{"client_msg_id":"a62dee07-c052-497c-ae21-e379fe5122e1","type":"message","text":"Similarly, it seems that different versions of packages aren't maintained in the precompilation cache. Do I understand this correctly? Sometimes I see an older version of a package being precompiled that I know was just precompiled.","user":"U01537M2E9W","ts":"1617834788.171300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LTy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Similarly, it seems that different versions of packages aren't maintained in the precompilation cache. Do I understand this correctly? Sometimes I see an older version of a package being precompiled that I know was just precompiled."}]}]}]},{"client_msg_id":"C6163431-4EA8-4DE0-817A-DEF21F8B1FBE","type":"message","text":"They shouldn’t be, but can be if a dependency has been re-precompiled","user":"U8MPCDJAY","ts":"1617834859.172200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pu4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They shouldn’t be, but can be if a dependency has been re-precompiled"}]}]}],"thread_ts":"1617834859.172200","reply_count":19,"reply_users_count":3,"latest_reply":"1617836380.178000","reply_users":["U01537M2E9W","U8MPCDJAY","U66GD0880"],"is_locked":false,"subscribed":false},{"client_msg_id":"836089a0-92a4-4285-9619-a909ef2b4837","type":"message","text":"Regarding slow files on windows e.g. with registry update: <https://gregoryszorc.com/blog/2021/04/06/surprisingly-slow/>\n\n&gt; Closing File Handles on Windows\n&gt; ...\n&gt; While I didn't realize it at the time, the cause for this was/is Windows Defender. Windows Defender (and other anti-virus / scanning software) typically work on Windows by installing what's called a filesystem filter driver. This is a kernel driver that essentially hooks itself into the kernel and receives callbacks on I/O and filesystem events. It turns out the close file callback triggers scanning of written data. And this scanning appears to occur synchronously, blocking CloseHandle() from returning. This adds milliseconds of overhead. The net effect is that file mutation I/O on Windows is drastically reduced by Windows Defender and other A/V scanners.\n&gt; \n&gt; As far as I can tell, as long as Windows Defender (and presumably other A/V scanners) are running, there's no way to make the Windows I/O APIs consistently fast. You can disable A/V scanning (at your own peril). But the trick that Mercurial employs (which has later been emulated by rustup among other tools) is to use a thread pool for calling CloseHandle(). Even if you perform all file open and write I/O on a single thread and use a background thread pool only for calling CloseHandle(), you can see a &gt;3x speedup in time to write files. This optimization should ideally be employed by any software that creates or mutates as little as a few hundred files on Windows.\n&gt; Fun fact: rustup can extract tar files on Windows faster than open source and commercial fast extraction/copy tools because it employs this trick and more. I believe rustup on Windows is actually faster at extracting tar archives than it is on Linux!","user":"U67D54KS8","ts":"1617864954.178800","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1617864988.000000"},"blocks":[{"type":"rich_text","block_id":"WlU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Regarding slow files on windows e.g. with registry update: "},{"type":"link","url":"https://gregoryszorc.com/blog/2021/04/06/surprisingly-slow/"},{"type":"text","text":"\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Closing File Handles on Windows\n...\nWhile I didn't realize it at the time, the cause for this was/is Windows Defender. Windows Defender (and other anti-virus / scanning software) typically work on Windows by installing what's called a filesystem filter driver. This is a kernel driver that essentially hooks itself into the kernel and receives callbacks on I/O and filesystem events. It turns out the close file callback triggers scanning of written data. And this scanning appears to occur synchronously, blocking CloseHandle() from returning. This adds milliseconds of overhead. The net effect is that file mutation I/O on Windows is drastically reduced by Windows Defender and other A/V scanners.\n\nAs far as I can tell, as long as Windows Defender (and presumably other A/V scanners) are running, there's no way to make the Windows I/O APIs consistently fast. You can disable A/V scanning (at your own peril). But the trick that Mercurial employs (which has later been emulated by rustup among other tools) is to use a thread pool for calling CloseHandle(). Even if you perform all file open and write I/O on a single thread and use a background thread pool only for calling CloseHandle(), you can see a >3x speedup in time to write files. This optimization should ideally be employed by any software that creates or mutates as little as a few hundred files on Windows.\nFun fact: rustup can extract tar files on Windows faster than open source and commercial fast extraction/copy tools because it employs this trick and more. I believe rustup on Windows is actually faster at extracting tar archives than it is on Linux!"}]}]}]},{"client_msg_id":"472e927e-e883-4eea-b17f-5dc62bb2749f","type":"message","text":"I just noticed that if I `Pkg.test()` a package that has Preferences set, the preferences don’t show up.  :disappointed:","user":"U66GD0880","ts":"1617943790.180000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sux","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just noticed that if I "},{"type":"text","text":"Pkg.test()","style":{"code":true}},{"type":"text","text":" a package that has Preferences set, the preferences don’t show up.  "},{"type":"emoji","name":"disappointed"}]}]}]},{"client_msg_id":"3155da38-ddf5-447a-991d-14b314e234a8","type":"message","text":"I’m guessing that `Pkg.test()` creates a temporary project?","user":"U66GD0880","ts":"1617943818.180600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4N8sH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m guessing that "},{"type":"text","text":"Pkg.test()","style":{"code":true}},{"type":"text","text":" creates a temporary project?"}]}]}],"thread_ts":"1617943818.180600","reply_count":1,"reply_users_count":1,"latest_reply":"1617945041.181500","reply_users":["U67BJLYCS"],"is_locked":false,"subscribed":false},{"client_msg_id":"398cb251-d8c2-4b1c-acd5-c34a9842a2be","type":"message","text":"I guess we’ll need to fix this if we want preferences to be usable within tests. :disappointed:","user":"U66GD0880","ts":"1617944058.181000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gRUD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess we’ll need to fix this if we want preferences to be usable within tests. "},{"type":"emoji","name":"disappointed"}]}]}]},{"client_msg_id":"0ae8f92d-b20b-4b7b-9291-841a065b2590","type":"message","text":"Probably need to fix `sandbox()` to copy the preferences over into the temporary project htat it creates","user":"U66GD0880","ts":"1617944074.181400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/b81O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Probably need to fix "},{"type":"text","text":"sandbox()","style":{"code":true}},{"type":"text","text":" to copy the preferences over into the temporary project htat it creates"}]}]}]},{"client_msg_id":"1e1bcff3-da76-408c-a943-7785e41c320f","type":"message","text":"I'm surprised that happens, I thought it would copy the existing project and do modifications to it which would keep the preferences. But I am not super familiar with `sandbox` and how it works.","user":"U67D54KS8","ts":"1617956810.182400","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1617956814.000000"},"blocks":[{"type":"rich_text","block_id":"PV2w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm surprised that happens, I thought it would copy the existing project and do modifications to it which would keep the preferences. But I am not super familiar with "},{"type":"text","text":"sandbox","style":{"code":true}},{"type":"text","text":" and how it works."}]}]}]},{"client_msg_id":"022b1c2c-d493-4cda-840a-52ccb92137b8","type":"message","text":"<https://github.com/JuliaLang/Pkg.jl/issues/2500>","user":"U66GD0880","ts":"1617990329.183000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iag","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/issues/2500"}]}]}]},{"client_msg_id":"93c09aff-b93d-4336-8d07-89b2570aa698","type":"message","text":"Can we finally use subprojects for real and stop doing targets?","user":"U6795JH6H","ts":"1617999046.183500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JoW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can we finally use subprojects for real and stop doing targets?"}]}]}]},{"client_msg_id":"3e9c9924-db9f-420b-810e-9d130b080146","type":"message","text":"I feel like that would solve this and whole slew of other issues","user":"U6795JH6H","ts":"1617999060.183900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WfEGL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel like that would solve this and whole slew of other issues"}]}]}]},{"client_msg_id":"0c062342-c826-40b4-9149-6ae0ed5026d0","type":"message","text":"Like you could just leave a `test/Manifest.toml` around and reuse it","user":"U6795JH6H","ts":"1617999081.184300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9bQA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like you could just leave a "},{"type":"text","text":"test/Manifest.toml","style":{"code":true}},{"type":"text","text":" around and reuse it"}]}]}]},{"client_msg_id":"6a747586-9128-4124-81f8-46a0c75ea069","type":"message","text":"<@U6795JH6H> did you guys ever decide on a resolution strategy for subprojects? I feel that is the big thing to decide on before starting work. I was hung up on the fact that the current resolver can't (AFAIU) completely represent the problem, but I think it will probably not be a big issue in practice. I can dedicate some time to do the legwork. The discussion in the respective GH issue I think is sufficient to get a good start going. I get a bit sad when people struggle with `Pkg.test` since it is pretty messy","user":"UE4DPAS4W","ts":"1618000983.184500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q0s","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6795JH6H"},{"type":"text","text":" did you guys ever decide on a resolution strategy for subprojects? I feel that is the big thing to decide on before starting work. I was hung up on the fact that the current resolver can't (AFAIU) completely represent the problem, but I think it will probably not be a big issue in practice. I can dedicate some time to do the legwork. The discussion in the respective GH issue I think is sufficient to get a good start going. I get a bit sad when people struggle with "},{"type":"text","text":"Pkg.test","style":{"code":true}},{"type":"text","text":" since it is pretty messy"}]}]}]},{"client_msg_id":"a5bb92ea-c941-4ec3-a439-0f94de4ad66d","type":"message","text":"I must say I still don't understand how `test/Project.toml` work.  I only have troubles with it.  isn't there a sane way to inherit the dependencies of the top-level project?  my understanding was that you could have the entry\n```&lt;ThisPackage&gt; = \"&lt;uuid&gt;\"```\nin `test/Project.toml` that would do the trick, but it doesn't seem to be the case as far as I can see","user":"UDB26738Q","ts":"1618010370.186600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hDfwG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I must say I still don't understand how "},{"type":"text","text":"test/Project.toml","style":{"code":true}},{"type":"text","text":" work.  I only have troubles with it.  isn't there a sane way to inherit the dependencies of the top-level project?  my understanding was that you could have the entry\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"<ThisPackage> = \"<uuid>\""}]},{"type":"rich_text_section","elements":[{"type":"text","text":"in "},{"type":"text","text":"test/Project.toml","style":{"code":true}},{"type":"text","text":" that would do the trick, but it doesn't seem to be the case as far as I can see"}]}]}]},{"client_msg_id":"d71e7a55-72c7-4f9e-adb9-1a654b284ff8","type":"message","text":"oh, no, the package itself should _not_ be there?","user":"UDB26738Q","ts":"1618010633.187000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iqT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, no, the package itself should "},{"type":"text","text":"not","style":{"italic":true}},{"type":"text","text":" be there?"}]}]}]},{"client_msg_id":"5da5a853-d803-405a-92d6-2622f6b7def5","type":"message","text":"For Pluto, I am planning to a have an isolated package project for each notebook, with the manifest embedded in the notebook file. Two recent comments on the pull request express a concern for “bloat”:\n&gt; <https://github.com/fonsp/Pluto.jl/pull/844#issuecomment-817076975>\n&gt; I’d like to advocate against this use of the `Manifest.toml` as I think this is liable to lead to gigantic bloat in `.julia`’s package version cache, as well as making users unnecessarily encounter pre-compilation much more often.\nI don’t have the intuition needed to judge how much of a problem is (but I do like the idea of using the Manifest). What do you think? I remember talking about this with Stefan and Elliot on our call, but I can’t quite remember the answer.","user":"UUTL3EKN3","ts":"1618049484.191400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZMT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For Pluto, I am planning to a have an isolated package project for each notebook, with the manifest embedded in the notebook file. Two recent comments on the pull request express a concern for “bloat”:\n"}]},{"type":"rich_text_quote","elements":[{"type":"link","url":"https://github.com/fonsp/Pluto.jl/pull/844#issuecomment-817076975"},{"type":"text","text":"\nI’d like to advocate against this use of the "},{"type":"text","text":"Manifest.toml","style":{"code":true}},{"type":"text","text":" as I think this is liable to lead to gigantic bloat in "},{"type":"text","text":".julia","style":{"code":true}},{"type":"text","text":"’s package version cache, as well as making users unnecessarily encounter pre-compilation much more often."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI don’t have the intuition needed to judge how much of a problem is (but I do like the idea of using the Manifest). What do you think? I remember talking about this with Stefan and Elliot on our call, but I can’t quite remember the answer."}]}]}],"thread_ts":"1618049484.191400","reply_count":3,"reply_users_count":2,"latest_reply":"1618049823.192000","reply_users":["UUTL3EKN3","U67SCG4HG"],"is_locked":false,"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"A more concrete question from me would be: “If I add a couple of common packages to a clean environment today, and again 7 days later, will the second environment be very different?”","user":"UUTL3EKN3","ts":"1618049598.191500","thread_ts":"1618049484.191400","root":{"client_msg_id":"5da5a853-d803-405a-92d6-2622f6b7def5","type":"message","text":"For Pluto, I am planning to a have an isolated package project for each notebook, with the manifest embedded in the notebook file. Two recent comments on the pull request express a concern for “bloat”:\n&gt; <https://github.com/fonsp/Pluto.jl/pull/844#issuecomment-817076975>\n&gt; I’d like to advocate against this use of the `Manifest.toml` as I think this is liable to lead to gigantic bloat in `.julia`’s package version cache, as well as making users unnecessarily encounter pre-compilation much more often.\nI don’t have the intuition needed to judge how much of a problem is (but I do like the idea of using the Manifest). What do you think? I remember talking about this with Stefan and Elliot on our call, but I can’t quite remember the answer.","user":"UUTL3EKN3","ts":"1618049484.191400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZMT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For Pluto, I am planning to a have an isolated package project for each notebook, with the manifest embedded in the notebook file. Two recent comments on the pull request express a concern for “bloat”:\n"}]},{"type":"rich_text_quote","elements":[{"type":"link","url":"https://github.com/fonsp/Pluto.jl/pull/844#issuecomment-817076975"},{"type":"text","text":"\nI’d like to advocate against this use of the "},{"type":"text","text":"Manifest.toml","style":{"code":true}},{"type":"text","text":" as I think this is liable to lead to gigantic bloat in "},{"type":"text","text":".julia","style":{"code":true}},{"type":"text","text":"’s package version cache, as well as making users unnecessarily encounter pre-compilation much more often."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI don’t have the intuition needed to judge how much of a problem is (but I do like the idea of using the Manifest). What do you think? I remember talking about this with Stefan and Elliot on our call, but I can’t quite remember the answer."}]}]}],"thread_ts":"1618049484.191400","reply_count":3,"reply_users_count":2,"latest_reply":"1618049823.192000","reply_users":["UUTL3EKN3","U67SCG4HG"],"is_locked":false,"subscribed":false},"blocks":[{"type":"rich_text","block_id":"=FP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A more concrete question from me would be: “If I add a couple of common packages to a clean environment today, and again 7 days later, will the second environment be very different?”"}]}]}],"client_msg_id":"3bd5d6b1-b8c3-4084-afbe-7c9da8dc05fd"},{"client_msg_id":"88C3D964-4D95-4E0F-AEB3-82C706328D9B","type":"message","text":"I recall that once upon a time, someone (I think it was <@U6A936746>, but I am not 100% sure) was mentioning that they'd like functionality like:\n1. Run tests using the oldest compatible versions of my dependencies \n2. Run tests using random compatible versions of my dependencies\nSuch functionality (and anything else you can dream up) would be available with <https://github.com/JuliaLang/Pkg.jl/pull/2498|https://github.com/JuliaLang/Pkg.jl/pull/2498>","user":"U7THT3TM3","ts":"1618179639.197400","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1618179659.000000"},"blocks":[{"type":"rich_text","block_id":"QBzlW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I recall that once upon a time, someone (I think it was "},{"type":"user","user_id":"U6A936746"},{"type":"text","text":", but I am not 100% sure) was mentioning that they'd like functionality like:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Run tests using the oldest "},{"type":"text","text":"compatible "},{"type":"text","text":"versions of my dependencies "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Run tests using random "},{"type":"text","text":"compatible "},{"type":"text","text":"versions of my dependencies"}]}],"style":"ordered","indent":0,"offset":0},{"type":"rich_text_section","elements":[{"type":"text","text":"\nSuch functionality (and anything else you can dream up) would be available with "},{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/pull/2498","text":"https://github.com/JuliaLang/Pkg.jl/pull/2498"}]}]}],"reactions":[{"name":"cool","users":["UDB26738Q"],"count":1}]},{"client_msg_id":"e8410562-b0f7-44bb-afeb-745d94bf2803","type":"message","text":"What if the resolver returned a lazy  iterator of legal package version combination. (With some way of controlling granularity).\nThen you can get the newest from the first.\nYou can walk down it til you find one where particular version constraints are met like the newest x,y, and z. (Without regard for overall newness).\nYou can get the oldest from the end.\nYou can get random by collecting and sampling one.\n\nIt would be a lot of work I think to change the resolver to do this.\nAnd it would probably end up quite expensive to get anything that wasn't near the start. I expect that getting the next solution would be adding a constraint to forbid this solution and resolving. But I guess there would be some dynamic programming table already filled so maybe not too bad (warm starting).\nStill probably expensive to get the oldest","user":"U6A936746","ts":"1618182032.197700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zX3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What if the resolver returned a lazy  iterator of legal package version combination. (With some way of controlling granularity).\nThen you can get the newest from the first.\nYou can walk down it til you find one where particular version constraints are met like the newest x,y, and z. (Without regard for overall newness).\nYou can get the oldest from the end.\nYou can get random by collecting and sampling one.\n\nIt would be a lot of work I think to change the resolver to do this.\nAnd it would probably end up quite expensive to get anything that wasn't near the start. I expect that getting the next solution would be adding a constraint to forbid this solution and resolving. But I guess there would be some dynamic programming table already filled so maybe not too bad (warm starting).\nStill probably expensive to get the oldest"}]}]}]}]}