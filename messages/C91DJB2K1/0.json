{"cursor": 0, "messages": [{"client_msg_id":"ce036d57-9276-418f-912c-d38703f2fafe","type":"message","text":"I am having trouble with a `SignatureDoesNotMatch` error when calling `S3.get_object`. With some keys, everything works as expected. However, with a key containing this substring, I get the error: `0 2016-12-28T113155+0100 4.1.avi`. Maybe it has something to do with the characters in that key?","user":"U01537M2E9W","ts":"1607957929.144000","team":"T68168MUP","edited":{"user":"U01537M2E9W","ts":"1607957986.000000"},"blocks":[{"type":"rich_text","block_id":"u6zCx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am having trouble with a "},{"type":"text","text":"SignatureDoesNotMatch","style":{"code":true}},{"type":"text","text":" error when calling "},{"type":"text","text":"S3.get_object","style":{"code":true}},{"type":"text","text":". With some keys, everything works as expected. However, with a key containing this substring, I get the error: "},{"type":"text","text":"0 2016-12-28T113155+0100 4.1.avi","style":{"code":true}},{"type":"text","text":". Maybe it has something to do with the characters in that key?"}]}]}]},{"client_msg_id":"84ff651c-eeac-411f-bc40-f1ac93d60153","type":"message","text":"I think it is the `+` character. I copied the S3 object to a new key without any `+` in the key and the error is gone. This won't work as a workaround, though, so I would like to see if we can debug/fix the way the signature.","user":"U01537M2E9W","ts":"1607958187.145100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hx2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it is the "},{"type":"text","text":"+","style":{"code":true}},{"type":"text","text":" character. I copied the S3 object to a new key without any "},{"type":"text","text":"+","style":{"code":true}},{"type":"text","text":" in the key and the error is gone. This won't work as a workaround, though, so I would like to see if we can debug/fix the way the signature."}]}]}]},{"client_msg_id":"ab6491f4-680e-4744-81d6-871b7942d007","type":"message","text":"Maybe this is related to <https://github.com/JuliaCloud/AWS.jl/issues/254>","user":"U01537M2E9W","ts":"1607958322.145300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"30d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe this is related to "},{"type":"link","url":"https://github.com/JuliaCloud/AWS.jl/issues/254"}]}]}]},{"client_msg_id":"48ad3055-0ce9-4f50-baeb-e1fab0bec19d","type":"message","text":"Yep, `HTTP.escapeuri` does the trick.","user":"U01537M2E9W","ts":"1607958372.145500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kgu3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yep, "},{"type":"text","text":"HTTP.escapeuri","style":{"code":true}},{"type":"text","text":" does the trick."}]}]}]},{"client_msg_id":"68df9b3a-0087-4454-825e-3fa08651e6d6","type":"message","text":"Hmm.. here is a key that works without escaping but fails with escaping: `1.8 2016-10-27T151720-0400.avi`","user":"U01537M2E9W","ts":"1607958766.146000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+6mYz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm.. here is a key that works without escaping but fails with escaping: "},{"type":"text","text":"1.8 2016-10-27T151720-0400.avi","style":{"code":true}}]}]}]},{"client_msg_id":"897a3a23-2684-46a4-b2d3-531ac9f32160","type":"message","text":"And here is a key that fails with and without escaping: `0 2016-12-28T113155+0100 4.1.avi`","user":"U01537M2E9W","ts":"1607959152.147000","team":"T68168MUP","edited":{"user":"U01537M2E9W","ts":"1607959190.000000"},"blocks":[{"type":"rich_text","block_id":"JjCo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And here is a key that fails with and without escaping: "},{"type":"text","text":"0 2016-12-28T113155+0100 4.1.avi","style":{"code":true}}]}]}]},{"client_msg_id":"eeb918c0-673b-4c15-bfd7-26f5e612d465","type":"message","text":"Off hand might be an issue w/ the space character. I can take a look at this some time in the future, quite busy this week.\n\nTry and reference it in `S3.get_object` using `%20` instead of ` `","user":"ULDQSHD41","ts":"1607959160.147200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fcG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Off hand might be an issue w/ the space character. I can take a look at this some time in the future, quite busy this week.\n\nTry and reference it in "},{"type":"text","text":"S3.get_object","style":{"code":true}},{"type":"text","text":" using "},{"type":"text","text":"%20","style":{"code":true}},{"type":"text","text":" instead of ` `"}]}]}]},{"client_msg_id":"e9a6ae67-3eed-4004-900b-ddf0494c99f2","type":"message","text":"Ah, I think I figured it out. `HTTP.escapeuri` is doing the right thing and escaping the _whole_ URI, including any forward slashes in the key. My URIs are really of the form `a/b/c.avi`, so I need to split on `/`, map the parts using `HTTP.escapeuri` and the join with `/`.","user":"U01537M2E9W","ts":"1607959497.149400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0=9I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, I think I figured it out. "},{"type":"text","text":"HTTP.escapeuri","style":{"code":true}},{"type":"text","text":" is doing the right thing and escaping the "},{"type":"text","text":"whole","style":{"italic":true}},{"type":"text","text":" URI, including any forward slashes in the key. My URIs are really of the form "},{"type":"text","text":"a/b/c.avi","style":{"code":true}},{"type":"text","text":", so I need to split on "},{"type":"text","text":"/","style":{"code":true}},{"type":"text","text":", map the parts using "},{"type":"text","text":"HTTP.escapeuri","style":{"code":true}},{"type":"text","text":" and the join with "},{"type":"text","text":"/","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"7679eaba-29da-4afb-af99-902569b6d544","type":"message","text":"I'm having new problem uploading a tarball to S3:\n```julia&gt; cp(source, destination)\nERROR: AWS.AWSExceptions.AWSException(\"403\", \"AWSException\", Dict{String,Dict}(), HTTP.ExceptionRequest.StatusError(403, \"HEAD\", \"/dackebeetle/2020-12-14T16:38:46.662.tar\", HTTP.Messages.Response:\n\"\"\"\nHTTP/1.1 403 Forbidden\nx-amz-request-id: 345752ABEB0E778D\nx-amz-id-2: r26YRQX+HJvRjMYjFqancyTWeDCjCScIUbCvnWO41BOVERzEIuPvATRn3t8mXV9Kx2CIvEFMYkk=\nContent-Type: application/xml\nTransfer-Encoding: chunked\nDate: Mon, 14 Dec 2020 17:06:20 GMT\nServer: AmazonS3\n\n\"\"\"))\nStacktrace:\n [1] #request#1(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:iofunction, :require_ssl_verification, :response_stream),Tuple{Nothing,Bool,Nothing}}}, ::typeof(HTTP.request), ::Type{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N) at /home/pi/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:22\n [2] #request#1(::VersionNumber, ::String, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :response_stream),Tuple{Bool,Nothing}}}, ::typeof(HTTP.request), ::Type{MessageLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0 (repeats 2 times)\n [3] (::HTTP.var\"#kw##request\")(::NamedTuple{(:require_ssl_verification, :response_stream),Tuple{Bool,Nothing}}, ::typeof(HTTP.request), ::Type{BasicAuthLayer{MessageLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0\n [4] _http_request(::AWS.Request) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:296\n [5] macro expansion at /home/pi/.julia/packages/Mocking/U41JO/src/mock.jl:29 [inlined]\n [6] macro expansion at /home/pi/.julia/packages/Retry/vS1bg/src/repeat_try.jl:192 [inlined]\n [7] #submit_request#30(::Bool, ::typeof(AWS.submit_request), ::AWS.AWSConfig, ::AWS.Request) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:355\n [8] (::AWS.var\"#kw##submit_request\")(::NamedTuple{(:return_headers,),Tuple{Bool}}, ::typeof(AWS.submit_request), ::AWS.AWSConfig, ::AWS.Request) at ./none:0\n [9] #_#31(::AWS.AWSConfig, ::AWS.RestXMLService, ::String, ::String, ::Dict{String,Any}) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:557\n [10] Any at ./none:0 [inlined] (repeats 2 times)\n [11] #head_object#107 at /home/pi/.julia/packages/AWS/NxxtR/src/services/s3.jl:897 [inlined]\n [12] #head_object at ./none:0 [inlined]\n [13] #s3_get_meta#8(::String, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(s3_get_meta), ::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:136\n [14] #s3_get_meta at ./none:0 [inlined]\n [15] macro expansion at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:152 [inlined]\n [16] macro expansion at /home/pi/.julia/packages/Retry/vS1bg/src/repeat_try.jl:192 [inlined]\n [17] #s3_exists#10(::String, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(s3_exists), ::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:151\n [18] s3_exists(::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:151\n [19] exists(::S3Path) at /home/pi/.julia/packages/AWSS3/eJYxO/src/s3path.jl:165\n [20] #cp#16(::Bool, ::Bool, ::typeof(cp), ::PosixPath, ::S3Path) at /home/pi/.julia/packages/FilePathsBase/LLCDa/src/path.jl:545\n [21] cp(::PosixPath, ::S3Path) at /home/pi/.julia/packages/FilePathsBase/LLCDa/src/path.jl:545\n [22] top-level scope at REPL[40]:1```\nNote though that I'm attempting to do this from a RPI which I simply copied the credentials file to (i.e. `~/.aws/credentials`). Not sure what permissions etc the policy I'm using needs now.","user":"U7PGB5DU3","ts":"1607965714.151100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0a/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm having new problem uploading a tarball to S3:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> cp(source, destination)\nERROR: AWS.AWSExceptions.AWSException(\"403\", \"AWSException\", Dict{String,Dict}(), HTTP.ExceptionRequest.StatusError(403, \"HEAD\", \"/dackebeetle/2020-12-14T16:38:46.662.tar\", HTTP.Messages.Response:\n\"\"\"\nHTTP/1.1 403 Forbidden\nx-amz-request-id: 345752ABEB0E778D\nx-amz-id-2: r26YRQX+HJvRjMYjFqancyTWeDCjCScIUbCvnWO41BOVERzEIuPvATRn3t8mXV9Kx2CIvEFMYkk=\nContent-Type: application/xml\nTransfer-Encoding: chunked\nDate: Mon, 14 Dec 2020 17:06:20 GMT\nServer: AmazonS3\n\n\"\"\"))\nStacktrace:\n [1] #request#1(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:iofunction, :require_ssl_verification, :response_stream),Tuple{Nothing,Bool,Nothing}}}, ::typeof(HTTP.request), ::Type{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N) at /home/pi/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:22\n [2] #request#1(::VersionNumber, ::String, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :response_stream),Tuple{Bool,Nothing}}}, ::typeof(HTTP.request), ::Type{MessageLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0 (repeats 2 times)\n [3] (::HTTP.var\"#kw##request\")(::NamedTuple{(:require_ssl_verification, :response_stream),Tuple{Bool,Nothing}}, ::typeof(HTTP.request), ::Type{BasicAuthLayer{MessageLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0\n [4] _http_request(::AWS.Request) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:296\n [5] macro expansion at /home/pi/.julia/packages/Mocking/U41JO/src/mock.jl:29 [inlined]\n [6] macro expansion at /home/pi/.julia/packages/Retry/vS1bg/src/repeat_try.jl:192 [inlined]\n [7] #submit_request#30(::Bool, ::typeof(AWS.submit_request), ::AWS.AWSConfig, ::AWS.Request) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:355\n [8] (::AWS.var\"#kw##submit_request\")(::NamedTuple{(:return_headers,),Tuple{Bool}}, ::typeof(AWS.submit_request), ::AWS.AWSConfig, ::AWS.Request) at ./none:0\n [9] #_#31(::AWS.AWSConfig, ::AWS.RestXMLService, ::String, ::String, ::Dict{String,Any}) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:557\n [10] Any at ./none:0 [inlined] (repeats 2 times)\n [11] #head_object#107 at /home/pi/.julia/packages/AWS/NxxtR/src/services/s3.jl:897 [inlined]\n [12] #head_object at ./none:0 [inlined]\n [13] #s3_get_meta#8(::String, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(s3_get_meta), ::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:136\n [14] #s3_get_meta at ./none:0 [inlined]\n [15] macro expansion at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:152 [inlined]\n [16] macro expansion at /home/pi/.julia/packages/Retry/vS1bg/src/repeat_try.jl:192 [inlined]\n [17] #s3_exists#10(::String, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(s3_exists), ::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:151\n [18] s3_exists(::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:151\n [19] exists(::S3Path) at /home/pi/.julia/packages/AWSS3/eJYxO/src/s3path.jl:165\n [20] #cp#16(::Bool, ::Bool, ::typeof(cp), ::PosixPath, ::S3Path) at /home/pi/.julia/packages/FilePathsBase/LLCDa/src/path.jl:545\n [21] cp(::PosixPath, ::S3Path) at /home/pi/.julia/packages/FilePathsBase/LLCDa/src/path.jl:545\n [22] top-level scope at REPL[40]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Note though that I'm attempting to do this from a RPI which I simply copied the credentials file to (i.e. "},{"type":"text","text":"~/.aws/credentials","style":{"code":true}},{"type":"text","text":"). Not sure what permissions etc the policy I'm using needs now."}]}]}]},{"client_msg_id":"b062f66b-3936-41c1-a70f-2c0e5041f8f7","type":"message","text":"It works fine from my machine, but not from the Pi...","user":"U7PGB5DU3","ts":"1607966003.151600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pZtb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It works fine from my machine, but not from the Pi..."}]}]}]},{"client_msg_id":"16df51a1-3007-49c5-9d03-3e7407ffeeb3","type":"message","text":"Even allowing everything doesn't help?\n```\"Effect\": \"Allow\",\n            \"Action\": [\n                \"*\"\n            ],```","user":"U7PGB5DU3","ts":"1607966581.152100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8hot","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Even allowing everything doesn't help?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\"Effect\": \"Allow\",\n            \"Action\": [\n                \"*\"\n            ],"}]}]}],"thread_ts":"1607966581.152100","reply_count":17,"reply_users_count":3,"latest_reply":"1607975076.155400","reply_users":["ULDQSHD41","U7PGB5DU3","U69J94HT9"],"subscribed":false},{"client_msg_id":"c27f243d-f400-440d-bef8-87c8a780b127","type":"message","text":"Hi everyone, so what is the recommended julia package to use for AWS? Because <https://github.com/JuliaCloud/AWS.jl> says it replaces <https://github.com/JuliaCloud/AWSCore.jl>, but at the same time AWSCore seems to have all/a lot of documentation whereas I am struggling to figure out how to even find which functions I can call in AWS.jl without having to dive into source code essentially","user":"U01C2AJ9F63","ts":"1608723070.156900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mUl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi everyone, so what is the recommended julia package to use for AWS? Because "},{"type":"link","url":"https://github.com/JuliaCloud/AWS.jl"},{"type":"text","text":" says it replaces "},{"type":"link","url":"https://github.com/JuliaCloud/AWSCore.jl"},{"type":"text","text":", but at the same time AWSCore seems to have all/a lot of documentation whereas I am struggling to figure out how to even find which functions I can call in AWS.jl without having to dive into source code essentially"}]}]}]},{"client_msg_id":"6AD0C420-8A45-4599-9B89-A95E03E025B2","type":"message","text":"Just in case anyone is interested <https://youtu.be/6DvpneWRb_w|https://youtu.be/6DvpneWRb_w>","user":"U8T0YV7QC","ts":"1611120594.003200","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"Running AWS Lambda functions with Julia | Tom Kwong","title_link":"https://youtu.be/6DvpneWRb_w","author_name":"The Julia Programming Language","author_link":"https://www.youtube.com/c/TheJuliaLanguage","thumb_url":"https://i.ytimg.com/vi/6DvpneWRb_w/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: Running AWS Lambda functions with Julia | Tom Kwong","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/6DvpneWRb_w?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://youtu.be/6DvpneWRb_w","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://youtu.be/6DvpneWRb_w"}],"blocks":[{"type":"rich_text","block_id":"7T151","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just in case anyone is interested "},{"type":"link","url":"https://youtu.be/6DvpneWRb_w","text":"https://youtu.be/6DvpneWRb_w"}]}]}],"thread_ts":"1611120594.003200","reply_count":9,"reply_users_count":4,"latest_reply":"1611195802.001400","reply_users":["U01CQTKB86N","U8T0YV7QC","ULDQSHD41","U01D42PK8KD"],"subscribed":false},{"client_msg_id":"8b8b4602-5d0a-4f46-aabe-ec1f4958fae0","type":"message","text":"Is there a way to profile the Julia Lambda execution? I.e. how much time is spent inside Julia vs. everywhere else.","user":"U01CQTKB86N","ts":"1611850650.004900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4vh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to profile the Julia Lambda execution? I.e. how much time is spent inside Julia vs. everywhere else."}]}]}]},{"client_msg_id":"0f0697f3-d151-4474-b217-24ff49f7e8d3","type":"message","text":"Has anyone had success/failures running Julia 1.5 on Graviton instances (M6g or C6g)?","user":"UNH0PT5D3","ts":"1613660637.007800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xAC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Has anyone had success/failures running Julia 1.5 on Graviton instances (M6g or C6g)?"}]}]}]},{"client_msg_id":"404b1e0a-ea48-4aad-851c-29c03e2148eb","type":"message","text":"Creating a new package `mAWS (Mock AWS)`, to.. mock AWS calls in Julia!\n\n- <https://github.com/JuliaCloud/mAWS.jl/pull/2>","user":"ULDQSHD41","ts":"1614904580.000300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GuN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Creating a new package "},{"type":"text","text":"mAWS (Mock AWS)","style":{"code":true}},{"type":"text","text":", to.. mock AWS calls in Julia!\n\n- "},{"type":"link","url":"https://github.com/JuliaCloud/mAWS.jl/pull/2"}]}]}]},{"client_msg_id":"d58ca37b-5dea-4754-bb91-36d506069348","type":"message","text":"Nice! :+1:  The name is a little odd to start with lowercase letter though…. Perhaps call it MockAWS instead?","user":"U8T0YV7QC","ts":"1614911383.001000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PJ=T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice! "},{"type":"emoji","name":"+1"},{"type":"text","text":"  The name is a little odd to start with lowercase letter though…. Perhaps call it MockAWS instead?"}]}]}]},{"client_msg_id":"c742e17b-a3c9-48be-8c2d-7f39928af1db","type":"message","text":"Sounds like micro-AWS.","user":"U01CQTKB86N","ts":"1614919064.001500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lcGqr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sounds like micro-AWS."}]}]}]},{"client_msg_id":"0c648485-6bfc-4a85-8aae-f58e0147984f","type":"message","text":"Renamed it to `MockAWS.jl` :+1: thanks for the feedback!","user":"ULDQSHD41","ts":"1614955224.001900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vvjZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Renamed it to "},{"type":"text","text":"MockAWS.jl","style":{"code":true}},{"type":"text","text":" "},{"type":"emoji","name":"+1"},{"type":"text","text":" thanks for the feedback!"}]}]}],"reactions":[{"name":"+1","users":["U01CQTKB86N","UDXST8ARK"],"count":2}]},{"client_msg_id":"5fbeba95-a22b-441e-8120-8e94d7c6fb24","type":"message","text":"Matt, I have an update for this thread from the other day <https://julialang.slack.com/archives/C683N3423/p1615224052045300>. Maybe you think this is a useful addition to AWS.jl.\n\nI got IAM auth working with my REST API using AWS.jl (and not using HTTP.jl, something is wrong with the signing as you mentioned). Here is my working code:\n```request = AWS.Request(\n    service = \"execute-api\",\n    api_version = \"\",\n    request_method = \"GET\",\n    headers = LittleDict([\n        \"Content-Type\" =&gt; \"application/json\",\n        \"x-api-key\" =&gt; api_key,\n    ]),\n    content = json(\"\"),\n    resource = \"$(stage)/$route\",\n    url = \"https://$(api_id).execute-api.$(aws_config.region).<http://amazonaws.com/$(stage)/$route|amazonaws.com/$(stage)/$route>\",\n    return_stream = false,\n    response_stream = nothing,\n    http_options = String[],\n    return_raw = false,\n    response_dict_type = LittleDict,\n)\n\nresponse = AWS.submit_request(aws_config, request; return_headers=true)```\nIt basically works out of the box; the only missing feature is being able to make that `request.url` start with my `api_id`, not just the service name `execute-api`. Hopefully this makes sense. The `api_id` is something like `s77fke7f6q` and is generated for you when you create an API using API Gateway.","user":"U01537M2E9W","ts":"1615326846.004900","team":"T68168MUP","edited":{"user":"U01537M2E9W","ts":"1615326851.000000"},"blocks":[{"type":"rich_text","block_id":"qB6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Matt, I have an update for this thread from the other day "},{"type":"link","url":"https://julialang.slack.com/archives/C683N3423/p1615224052045300"},{"type":"text","text":". Maybe you think this is a useful addition to AWS.jl.\n\nI got IAM auth working with my REST API using AWS.jl (and not using HTTP.jl, something is wrong with the signing as you mentioned). Here is my working code:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"request = AWS.Request(\n    service = \"execute-api\",\n    api_version = \"\",\n    request_method = \"GET\",\n    headers = LittleDict([\n        \"Content-Type\" => \"application/json\",\n        \"x-api-key\" => api_key,\n    ]),\n    content = json(\"\"),\n    resource = \"$(stage)/$route\",\n    url = \"https://$(api_id).execute-api.$(aws_config.region).amazonaws.com/$(stage)/$route\",\n    return_stream = false,\n    response_stream = nothing,\n    http_options = String[],\n    return_raw = false,\n    response_dict_type = LittleDict,\n)\n\nresponse = AWS.submit_request(aws_config, request; return_headers=true)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIt basically works out of the box; the only missing feature is being able to make that "},{"type":"text","text":"request.url","style":{"code":true}},{"type":"text","text":" start with my "},{"type":"text","text":"api_id","style":{"code":true}},{"type":"text","text":", not just the service name "},{"type":"text","text":"execute-api","style":{"code":true}},{"type":"text","text":". Hopefully this makes sense. The "},{"type":"text","text":"api_id","style":{"code":true}},{"type":"text","text":" is something like "},{"type":"text","text":"s77fke7f6q","style":{"code":true}},{"type":"text","text":" and is generated for you when you create an API using API Gateway."}]}]}]},{"client_msg_id":"c1f62e83-e9e4-48fc-be55-9bdff60b1001","type":"message","text":"I think it would be cool if I could use `@service` to declare my own REST API and then use the same AWS.jl machinery to set it up.","user":"U01537M2E9W","ts":"1615326918.005700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dPmF6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it would be cool if I could use "},{"type":"text","text":"@service","style":{"code":true}},{"type":"text","text":" to declare my own REST API and then use the same AWS.jl machinery to set it up."}]}]}]},{"client_msg_id":"c316b0cb-1221-481a-8689-7708c85b4e94","type":"message","text":"From my naive understanding of AWS.jl, it looks like the main change would be to `Request` to add a field for the \"sub-service\" and to `_generate_service_url` to take in that sub-service as another parameter. This can be `\"\"` or `nothing` by default to maintain backward compatibility.","user":"U01537M2E9W","ts":"1615327124.006900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gGlr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From my naive understanding of AWS.jl, it looks like the main change would be to "},{"type":"text","text":"Request","style":{"code":true}},{"type":"text","text":" to add a field for the \"sub-service\" and to "},{"type":"text","text":"_generate_service_url","style":{"code":true}},{"type":"text","text":" to take in that sub-service as another parameter. This can be "},{"type":"text","text":"\"\"","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"nothing","style":{"code":true}},{"type":"text","text":" by default to maintain backward compatibility."}]}]}]},{"client_msg_id":"884c1123-a1d8-455e-973b-2e26dcdac7ae","type":"message","text":"Would you mind logging this as an issue? I don’t want this to get lost to Slack,\n\n- <https://github.com/JuliaCloud/AWS.jl/issues/new>\n\nThere’s definitely something that can be done here, and it *shouldn’t* be too involved. I don’t have experience with API gateway, but I figured there would have been endpoints where you would just pass in `api_id`, `stage_name`, `route_name` and have it all constructed for you, but it doesn’t seem to be the case.\n\nThis also does lend into the areas of AWSS3 and various other hand written packages and to maybe reconsider how they tie into the ecosystem. Whether that’s as their own packages, or bringing them into `AWS.jl`.","user":"ULDQSHD41","ts":"1615327555.009200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JXm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would you mind logging this as an issue? I don’t want this to get lost to Slack,\n\n- "},{"type":"link","url":"https://github.com/JuliaCloud/AWS.jl/issues/new"},{"type":"text","text":"\n\nThere’s definitely something that can be done here, and it "},{"type":"text","text":"shouldn’t","style":{"bold":true}},{"type":"text","text":" be too involved. I don’t have experience with API gateway, but I figured there would have been endpoints where you would just pass in "},{"type":"text","text":"api_id","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"stage_name","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"route_name","style":{"code":true}},{"type":"text","text":" and have it all constructed for you, but it doesn’t seem to be the case.\n\nThis also does lend into the areas of AWSS3 and various other hand written packages and to maybe reconsider how they tie into the ecosystem. Whether that’s as their own packages, or bringing them into "},{"type":"text","text":"AWS.jl","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"411e4db9-a4c7-4a0b-8d7a-7f00120561ae","type":"message","text":"Hi, we have S3 compatible storage and I want to download objects from that storage in Julia. I'm struggling with supplying my own URL address so it's not using the AWS one, but address of our own storage.\nHow can it be done? I've read docs for AWSS3, AWS and AWSCore, but I'm still not how to specify the endpoint.","user":"USBKT1275","ts":"1616166861.002300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bD4=C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, we have S3 compatible storage and I want to download objects from that storage in Julia. I'm struggling with supplying my own URL address so it's not using the AWS one, but address of our own storage.\nHow can it be done? I've read docs for AWSS3, AWS and AWSCore, but I'm still not how to specify the endpoint."}]}]}]}]}