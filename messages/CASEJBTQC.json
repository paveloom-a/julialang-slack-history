[{"client_msg_id":"15b3b9dd-0374-41ee-9841-e81d305715c2","type":"message","text":"One reason is that I'm lazy and I have a lot of those function. Also, users of my package can add some function on the fly that would need that the second method to be generated. But I can probably try to do something with a dict. Thanks for the help <@U6QGE7S86>","user":"U01FR2HFJ7M","ts":"1608676895.075200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tlc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One reason is that I'm lazy and I have a lot of those function. Also, users of my package can add some function on the fly that would need that the second method to be generated. But I can probably try to do something with a dict. Thanks for the help "},{"type":"user","user_id":"U6QGE7S86"}]}]}]},{"client_msg_id":"927aa77e-70c1-4f3e-ae3f-784faf2b519c","type":"message","text":"You might be able to do the same by making an array / dict of functions and then looking it up, then calling it.","user":"U6QGE7S86","ts":"1608668777.070100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fZn4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might be able to do the same by making an array / dict of functions and then looking it up, then calling it."}]}]}]},{"client_msg_id":"7a3004cf-0b61-459f-8bc3-26dc66c0aada","type":"message","text":"<@U01FR2HFJ7M> What do you need to do that needs a macro?","user":"U6QGE7S86","ts":"1608668741.069500","team":"T68168MUP","edited":{"user":"U6QGE7S86","ts":"1608668754.000000"},"blocks":[{"type":"rich_text","block_id":"8r=Vj","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01FR2HFJ7M"},{"type":"text","text":" What do you need to do that needs a macro?"}]}]}]},{"client_msg_id":"f45dc03e-27d0-4713-a184-eeb9b0aa0967","type":"message","text":"Hi there. I have a very basic question about macros. I am trying to define a macro that generate the second method based on the first one. (something does something based on x, not only x[i])\n```f(i::Int, x::Vector) = something(x[i],x)\nf(x::Vector) = map(i -&gt; f(i, x), 1:length(x))```\nAny idea?","user":"U01FR2HFJ7M","ts":"1608622994.068400","team":"T68168MUP","edited":{"user":"U01FR2HFJ7M","ts":"1608623257.000000"},"blocks":[{"type":"rich_text","block_id":"iPO2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi there. I have a very basic question about macros. I am trying to define a macro that generate the second method based on the first one. (something does something based on x, not only x[i])\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"f(i::Int, x::Vector) = something(x[i],x)\nf(x::Vector) = map(i -> f(i, x), 1:length(x))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Any idea?"}]}]}]}]