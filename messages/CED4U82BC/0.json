{"cursor": 1, "messages": [{"client_msg_id":"f8d9be30-eb6c-4c11-8c34-47cdd0dd3857","type":"message","text":"with this fix, it shouldn't matter anymore","user":"UH24GRBLL","ts":"1612954553.072300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NHb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with this fix, it shouldn't matter anymore"}]}]}]},{"client_msg_id":"d7d94066-7c3a-43ef-87f0-58e14175acdf","type":"message","text":"My guess is that the exploit only works when both name and UUID match.","user":"U7THT3TM3","ts":"1612954554.072400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w/8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My guess is that the exploit only works when both name and UUID match."}]}]}],"thread_ts":"1612954554.072400","reply_count":10,"reply_users_count":3,"latest_reply":"1612955867.093100","reply_users":["UCZ7VBGUD","U7THT3TM3","UH24GRBLL"],"subscribed":false},{"client_msg_id":"5f457827-a0b1-4b40-8e00-dc2512fd0106","type":"message","text":"But it would be good to confirm that.","user":"U7THT3TM3","ts":"1612954685.074600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7Bc2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But it would be good to confirm that."}]}]}]},{"client_msg_id":"CA2728EC-A8AC-4299-AA4B-AC423370D29F","type":"message","text":"A non-breaking fix is for each private registry user who also uses General to use the 3 day waiting period to monitor for clashes in new package registrations to General. That could be automated by tooling as well","user":"UCZ7VBGUD","ts":"1612954693.074900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wE5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A non-breaking fix is for each private registry user who also uses General to use the 3 day waiting period to monitor for clashes in new package registrations to General. That could be automated by tooling as well"}]}]}]},{"client_msg_id":"d7a35545-1546-454d-a8ce-b010bffd77ef","type":"message","text":"Yeah.... that's probably the short-term solution.","user":"U7THT3TM3","ts":"1612954706.075200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MF/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah.... that's probably the short-term solution."}]}]}]},{"client_msg_id":"6a7273bf-6ad6-4c14-835d-1f252771dfa3","type":"message","text":"But I don't think it's feasible as a long-term solution.","user":"U7THT3TM3","ts":"1612954725.075600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0eZO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I don't think it's feasible as a long-term solution."}]}]}]},{"client_msg_id":"5f0002ea-ccb1-4e77-b490-7efb6c345d22","type":"message","text":"if such a clash were to be detected, how should it be reported?","user":"UH24GRBLL","ts":"1612954901.077600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d5X0k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if such a clash were to be detected, how should it be reported?"}]}]}]},{"client_msg_id":"f4203a02-fad7-4221-9160-b681c3d575c6","type":"message","text":"The user would post a comment on the PR (which blocks automerge)","user":"U7THT3TM3","ts":"1612954918.078200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"86Pm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The user would post a comment on the PR (which blocks automerge)"}]}]}]},{"client_msg_id":"fcd1be42-3cdd-492c-8fcb-80a989a15c37","type":"message","text":"that signals that the package is actually called that and has that UUID though","user":"UH24GRBLL","ts":"1612954935.078800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fXuP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that signals that the package is actually called that and has that UUID though"}]}]}]},{"client_msg_id":"c6494686-6229-4657-9f9c-98cdc409247b","type":"message","text":"Saying something like \"I suspect that this is nefarious\"","user":"U7THT3TM3","ts":"1612954935.078900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w6S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Saying something like \"I suspect that this is nefarious\""}]}]}]},{"client_msg_id":"75e28653-2f13-4c0f-8cf5-cf38dd824840","type":"message","text":"would at least require changing the internal package's UUID","user":"UH24GRBLL","ts":"1612954957.079800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8vz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"would at least require changing the internal package's UUID"}]}]}]},{"client_msg_id":"5cd89727-65ee-43d6-b438-21fd5a871aca","type":"message","text":"The probability that someone would register a package with the same name and UUID is very small, right?","user":"U7THT3TM3","ts":"1612954962.080000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JQQHk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The probability that someone would register a package with the same name and UUID is very small, right?"}]}]}]},{"client_msg_id":"6e5c293a-dcf9-49ed-a32e-e8049c36e7f6","type":"message","text":"I see what you mean. There are two cases:\n1. It's nefarious. In this case we obviously don't want to merge it into General\n2. It's not nefarious - someone just happened to generate the same exact UUID. The probability is very low, but I guess it could happen.","user":"U7THT3TM3","ts":"1612955047.081700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P7cK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see what you mean. There are two cases:\n1. It's nefarious. In this case we obviously don't want to merge it into General\n2. It's not nefarious - someone just happened to generate the same exact UUID. The probability is very low, but I guess it could happen."}]}]}]},{"client_msg_id":"c2690fae-d7e8-4479-bc20-68739e8cb777","type":"message","text":"We use version 4 UUIDs.","user":"U7THT3TM3","ts":"1612955088.081900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cc7Gi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We use version 4 UUIDs."}]}]}]},{"client_msg_id":"5f7e24b6-0708-4b6c-97b8-b7dd92b5360b","type":"message","text":"From Wikipedia: \"Thus, the probability to find a duplicate within 103 trillion version-4 UUIDs is one in a billion. \"","user":"U7THT3TM3","ts":"1612955093.082100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/dLIX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From Wikipedia: \"Thus, the probability to find a duplicate within 103 trillion version-4 UUIDs is one in a billion. \""}]}]}]},{"client_msg_id":"24ec5c6d-91e3-4a72-bba1-49c04bc1c982","type":"message","text":"yes","user":"UH24GRBLL","ts":"1612955141.082800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OWu2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"b43eef1b-edcd-441e-b6f5-e5099451a51f","type":"message","text":"If case 2 happens, then yeah the internal user could change their UUID","user":"U7THT3TM3","ts":"1612955143.083000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K73","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If case 2 happens, then yeah the internal user could change their UUID"}]}]}]},{"client_msg_id":"f166b895-1444-4bd4-8f8e-b19a045c245a","type":"message","text":"nothing stops someone from opening a new PR with the same UUID again","user":"UH24GRBLL","ts":"1612955152.083400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XU=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nothing stops someone from opening a new PR with the same UUID again"}]}]}]},{"client_msg_id":"e5ddfb09-9ccf-427b-890b-d2698c5e0844","type":"message","text":"But I think it's quite unlikely","user":"U7THT3TM3","ts":"1612955152.083500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gBK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I think it's quite unlikely"}]}]}]},{"client_msg_id":"3db9887e-75cc-4294-a676-7d2b7c4655c2","type":"message","text":"Yeah, this is why I think the `shadowable = true` approach is better long-term.","user":"U7THT3TM3","ts":"1612955181.084300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tOomF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, this is why I think the "},{"type":"text","text":"shadowable = true","style":{"code":true}},{"type":"text","text":" approach is better long-term."}]}]}]},{"client_msg_id":"3a690d6c-e7a4-417a-9a83-84a8a19b7893","type":"message","text":"Simpler.","user":"U7THT3TM3","ts":"1612955183.084600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fnyi/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Simpler."}]}]}]},{"client_msg_id":"b42800fe-519a-4cc6-bcb6-76359dc68d19","type":"message","text":"agreed","user":"UH24GRBLL","ts":"1612955187.084800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pbJ2F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"agreed"}]}]}]},{"client_msg_id":"0ef730c1-5209-46c8-9537-12d01ee12639","type":"message","text":"I'd change the internal UUID anyway as a precaution and would try to find out how they found the UUID in the first place","user":"UH24GRBLL","ts":"1612955207.085600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t7mA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd change the internal UUID anyway as a precaution and would try to find out how they found the UUID in the first place"}]}]}]},{"client_msg_id":"c8e3e1eb-e5ad-4e57-854a-05ea3f88929a","type":"message","text":"The hard part is implementing it. I don't have enough familiarity with this part of Pkg. Not a lot of people do - Stefan, Kristoffer, maybe Fredrik and Elliot? All of those people's time is very limited, and I don't think this is going to take priority right now","user":"U7THT3TM3","ts":"1612955239.086300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G9CW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The hard part is implementing it. I don't have enough familiarity with this part of Pkg. Not a lot of people do - Stefan, Kristoffer, maybe Fredrik and Elliot? All of those people's time is very limited, and I don't think this is going to take priority right now"}]}]}]},{"client_msg_id":"410e4ad9-9cd5-474f-8f5a-45a97d5fbf1d","type":"message","text":"In that case we should definitely write this up in some more permanent place than slack","user":"UH24GRBLL","ts":"1612955345.086900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bw1I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In that case we should definitely write this up in some more permanent place than slack"}]}]}]},{"type":"message","subtype":"thread_broadcast","text":"Yeah, on 1.6-rc1 at least, I get\n```julia&gt; Pkg.add(PackageSpec(uuid=\"7876af07-990d-54b4-ab0e-23690620f79a\"))\n    Updating registry at `./depot/registries/reg1`\n    Updating git-repo `/Users/eh540/registrytesting/reg1`\n    Updating registry at `./depot/registries/reg2`\n    Updating git-repo `/Users/eh540/registrytesting/reg2`\nERROR: package `7876af07-990d-54b4-ab0e-23690620f79a` has multiple registered name values: Example, Example2```","user":"UCZ7VBGUD","ts":"1612955365.087200","thread_ts":"1612954554.072400","root":{"client_msg_id":"d7d94066-7c3a-43ef-87f0-58e14175acdf","type":"message","text":"My guess is that the exploit only works when both name and UUID match.","user":"U7THT3TM3","ts":"1612954554.072400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w/8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My guess is that the exploit only works when both name and UUID match."}]}]}],"thread_ts":"1612954554.072400","reply_count":10,"reply_users_count":3,"latest_reply":"1612955867.093100","reply_users":["UCZ7VBGUD","U7THT3TM3","UH24GRBLL"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"yRH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, on 1.6-rc1 at least, I get\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Pkg.add(PackageSpec(uuid=\"7876af07-990d-54b4-ab0e-23690620f79a\"))\n    Updating registry at `./depot/registries/reg1`\n    Updating git-repo `/Users/eh540/registrytesting/reg1`\n    Updating registry at `./depot/registries/reg2`\n    Updating git-repo `/Users/eh540/registrytesting/reg2`\nERROR: package `7876af07-990d-54b4-ab0e-23690620f79a` has multiple registered name values: Example, Example2"}]}]}],"client_msg_id":"b6cd7925-c722-4add-b7e4-e0387b485bc2","reactions":[{"name":"+1","users":["U7THT3TM3","UH24GRBLL"],"count":2},{"name":"tada","users":["UH24GRBLL","U7THT3TM3"],"count":2},{"name":"heart","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"e2f96495-e96b-4a98-8437-2d66b3b44d70","type":"message","text":"Sure, want to copy this Slack conversation into an issue, and post it on <https://github.com/JuliaLang/Pkg.jl>? And include a link to <https://github.com/DilumAluthge/MWE_multiple_registries_same_package_uuid>","user":"U7THT3TM3","ts":"1612955427.089400","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1612955505.000000"},"blocks":[{"type":"rich_text","block_id":"C5+14","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure, want to copy this Slack conversation into an issue, and post it on "},{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl"},{"type":"text","text":"? And include a link to "},{"type":"link","url":"https://github.com/DilumAluthge/MWE_multiple_registries_same_package_uuid"}]}]}]},{"client_msg_id":"7620fba6-93a3-4405-beea-27aed6177eba","type":"message","text":"yeah, I'll try my best to summarize this","user":"UH24GRBLL","ts":"1612955502.090000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ngG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, I'll try my best to summarize this"}]}]}],"thread_ts":"1612955502.090000","reply_count":1,"reply_users_count":1,"latest_reply":"1612955827.091300","reply_users":["U7THT3TM3"],"subscribed":false,"reactions":[{"name":"+1","users":["U7THT3TM3","UCZ7VBGUD"],"count":2}]},{"client_msg_id":"dc37bad5-728d-4e2c-832f-d8dc519fdffc","type":"message","text":"any bike shedding for the issue name? :)","user":"UH24GRBLL","ts":"1612955527.090500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MwgS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"any bike shedding for the issue name? :)"}]}]}],"thread_ts":"1612955527.090500","reply_count":2,"reply_users_count":2,"latest_reply":"1612955618.091000","reply_users":["U7THT3TM3","UH24GRBLL"],"subscribed":false},{"client_msg_id":"66b55cef-719a-4649-9db9-c21903b258c5","type":"message","text":"&gt; 2. Do it in Julia 1.x, but make a lot of Slack posts and Discourse posts informing people of the change, and make it easy for people (JC, Invenia, Beacon, etc) to make the changes needed\nThe changes would only affect registries that have opensourced some of their packages to General, right?","user":"UH24GRBLL","ts":"1612955855.092400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U8Y9","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"2. Do it in Julia 1.x, but make a lot of Slack posts and Discourse posts informing people of the change, and make it easy for people (JC, Invenia, Beacon, etc) to make the changes needed"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThe changes would only affect registries that have opensourced some of their packages to General, right?"}]}]}]},{"client_msg_id":"d53b27c6-4604-4d19-804f-4b3c90e5b9cb","type":"message","text":"or to some other registry","user":"UH24GRBLL","ts":"1612955863.092900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nZAu+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or to some other registry"}]}]}]},{"client_msg_id":"6e515dbc-40dc-46a8-bd3d-00d4ba549c2a","type":"message","text":"and the `shadowable` flag would be located in the `Package.toml` of a package","user":"UH24GRBLL","ts":"1612955889.093700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jazZn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and the "},{"type":"text","text":"shadowable","style":{"code":true}},{"type":"text","text":" flag would be located in the "},{"type":"text","text":"Package.toml","style":{"code":true}},{"type":"text","text":" of a package"}]}]}]},{"client_msg_id":"28D03671-A43E-4A88-94F0-AEE378635398","type":"message","text":"Yes that's correct ","user":"U7THT3TM3","ts":"1612955937.094000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1nK/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes that's correct "}]}]}]},{"client_msg_id":"E0FA04A5-67D7-4AEF-A25A-F6343C3AA8E6","type":"message","text":"So it's a very narrow set of people that would experience the breakage ","user":"U7THT3TM3","ts":"1612955953.094800","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1612955962.000000"},"blocks":[{"type":"rich_text","block_id":"F/p0X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So it's a very narrow set of people that would experience the breakage "}]}]}]},{"client_msg_id":"59a02c99-82d3-411f-8e48-147a9878e5ef","type":"message","text":"not in the Project.toml of the package though, it would go in the registry itself","user":"UCZ7VBGUD","ts":"1612955982.095700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rKN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not in the Project.toml of the package though, it would go in the registry itself"}]}]}]},{"client_msg_id":"1DC10025-D7F0-49D3-A976-EFD94F0B071A","type":"message","text":"But we would still want to work closely with those groups to make the transition easy","user":"U7THT3TM3","ts":"1612955984.095800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JvF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But we would still want to work closely with those groups to make the transition easy"}]}]}]},{"client_msg_id":"CE5BFDC9-1903-4740-992E-1B165A9AF049","type":"message","text":"Yeah that's correct","user":"U7THT3TM3","ts":"1612955987.096000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KpV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah that's correct"}]}]}]},{"client_msg_id":"9C12C326-DEA4-41D1-B571-6BEB475E73BC","type":"message","text":"`Package.toml` files go into registry repos","user":"U7THT3TM3","ts":"1612956003.096600","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1612956017.000000"},"blocks":[{"type":"rich_text","block_id":"Y+Wr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Package.toml","style":{"code":true}},{"type":"text","text":" files go into registry repos"}]}]}],"reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"7C63F9D7-7730-4FD6-9FF4-72A09D2071F5","type":"message","text":"`Project.toml` files go into package repos","user":"U7THT3TM3","ts":"1612956011.096900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8e7XZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Project.to","style":{"code":true}},{"type":"text","text":"ml","style":{"code":true}},{"type":"text","text":" files go into package repos"}]}]}]},{"client_msg_id":"6aa8b5a1-11d5-4584-944c-ff570d562dbd","type":"message","text":"I guess the fact that it's breaking is in some sense a good thing","user":"UH24GRBLL","ts":"1612956031.097400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+R+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess the fact that it's breaking is in some sense a good thing"}]}]}]},{"client_msg_id":"eb9f6fd8-0d44-4bfe-ba1e-4323849fc59f","type":"message","text":"it doesn't leave people in a vulnerable state","user":"UH24GRBLL","ts":"1612956038.097800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iL3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it doesn't leave people in a vulnerable state"}]}]}]},{"client_msg_id":"57687ddb-b936-4288-93e1-def63ae799cc","type":"message","text":"so I'd be very much in favor of that","user":"UH24GRBLL","ts":"1612956051.098100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rJCK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I'd be very much in favor of that"}]}]}]},{"client_msg_id":"08f7693f-f978-4ab5-8d04-7d681734f1f7","type":"message","text":"<https://github.com/JuliaLang/Pkg.jl/issues/2393> opened","user":"UH24GRBLL","ts":"1612956597.098800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ug5","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/issues/2393"},{"type":"text","text":" opened"}]}]}],"reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"3a6d14af-d625-4b9a-b84a-dba6349d7fd5","type":"message","text":"would this need some support in LocalRegistries.jl as well?","user":"UH24GRBLL","ts":"1612956950.099100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EZg4S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"would this need some support in LocalRegistries.jl as well?"}]}]}]},{"client_msg_id":"9d4a4fb4-5995-496c-83c6-364c04399be7","type":"message","text":"That depends on how it is solved but if it's an opt-in feature for a very small number of packages, you can just edit the registry files by hand.","user":"UBVE598BC","ts":"1612961995.101300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iuf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That depends on how it is solved but if it's an opt-in feature for a very small number of packages, you can just edit the registry files by hand."}]}]}]},{"client_msg_id":"22a51e23-1905-4996-a405-cccf6cbfb328","type":"message","text":"Btw, the `shadowable` feature doesn't seem likely to be breaking. If there's an extra field in the registry, older Julia versions would just ignore it, as far as I know.","user":"UBVE598BC","ts":"1612962866.102700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nh4Yi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Btw, the "},{"type":"text","text":"shadowable","style":{"code":true}},{"type":"text","text":" feature doesn't seem likely to be breaking. If there's an extra field in the registry, older Julia versions would just ignore it, as far as I know."}]}]}],"thread_ts":"1612962866.102700","reply_count":3,"reply_users_count":2,"latest_reply":"1612963037.103200","reply_users":["U67SCG4HG","UBVE598BC"],"subscribed":false},{"client_msg_id":"d1a2bc0c-28b7-4f09-b978-708fadeb626d","type":"message","text":"npm fscilitated a supply chain attack, horribly","user":"U6QGE7S86","ts":"1612972932.104900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nrLD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"npm fscilitated a supply chain attack, horribly"}]}]}]},{"client_msg_id":"3844ac49-c62e-4b65-950e-b6a82b289d6d","type":"message","text":"<https://mobile.twitter.com/hmemcpy/status/1359478493386592267|https://mobile.twitter.com/hmemcpy/status/1359478493386592267>","user":"U6QGE7S86","ts":"1612972939.105100","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/hmemcpy|@hmemcpy>: Holy. Effin. Shit. <https://www.bleepingcomputer.com/news/security/researcher-hacks-over-35-tech-firms-in-novel-supply-chain-attack> <https://pbs.twimg.com/media/Et3WeDGXIAIn9K0.jpg>","ts":1612959905,"author_name":"Igal Tabachnik","author_link":"https://twitter.com/hmemcpy/status/1359478493386592267","author_icon":"https://pbs.twimg.com/profile_images/1310914800780824576/vKQciyPL_normal.jpg","author_subname":"@hmemcpy","text":"Holy. Effin. Shit. <https://www.bleepingcomputer.com/news/security/researcher-hacks-over-35-tech-firms-in-novel-supply-chain-attack> <https://pbs.twimg.com/media/Et3WeDGXIAIn9K0.jpg>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://mobile.twitter.com/hmemcpy/status/1359478493386592267","image_url":"https://pbs.twimg.com/media/Et3WeDGXIAIn9K0.jpg","image_width":857,"image_height":1200,"image_bytes":175728,"id":1,"original_url":"https://mobile.twitter.com/hmemcpy/status/1359478493386592267","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"},{"text":"<https://pbs.twimg.com/media/Et3WepnXcAQI2Hq.jpg>","image_url":"https://pbs.twimg.com/media/Et3WepnXcAQI2Hq.jpg","image_width":1079,"image_height":1190,"image_bytes":293081,"id":2}],"blocks":[{"type":"rich_text","block_id":"jhAJ","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://mobile.twitter.com/hmemcpy/status/1359478493386592267","text":"https://mobile.twitter.com/hmemcpy/status/1359478493386592267"}]}]}]},{"client_msg_id":"44a60440-baf1-497f-b5bd-14f7810ba3d6","type":"message","text":"A new star is born: \"dependency confusion\" attack.","user":"U6QGE7S86","ts":"1612973122.106000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f5D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A new star is born: \"dependency confusion\" attack."}]}]}],"thread_ts":"1612973122.106000","reply_count":3,"reply_users_count":1,"latest_reply":"1612973671.108100","reply_users":["UDB26738Q"],"subscribed":false},{"client_msg_id":"d5d85d13-b001-41bd-8054-4051d503dfb6","type":"message","text":"We are thinking about public registries shadowing packages in private registries, but this affects public registries shadowing packages in other public registries as well, right? For example, a package in General shadowing a package in HolyLabRegistry. That would be easy to exploit because the targeted registry is public.","user":"U01537M2E9W","ts":"1612973618.107500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xn/U9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We are thinking about public registries shadowing packages in private registries, but this affects public registries shadowing packages in other public registries as well, right? For example, a package in General shadowing a package in HolyLabRegistry. That would be easy to exploit because the targeted registry is public."}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"9abbf07b-21b2-4b76-ab1e-901fa32d1660","type":"message","text":"Yeah great point","user":"U7THT3TM3","ts":"1612973639.107700","team":"T68168MUP","edited":{"user":"U7THT3TM3","ts":"1612973662.000000"},"blocks":[{"type":"rich_text","block_id":"jnDp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah great point"}]}]}]},{"client_msg_id":"827149ae-7c28-45d0-aa58-9a9a0822699b","type":"message","text":"very good point! with the fix, it's only exploitable if the registry has the duality with `shadowable`","user":"UH24GRBLL","ts":"1612975538.110900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZON","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"very good point! with the fix, it's only exploitable if the registry has the duality with "},{"type":"text","text":"shadowable","style":{"code":true}}]}]}]},{"client_msg_id":"8fe0a331-bf8f-4b6f-b8a6-fd6f243f84ed","type":"message","text":"and that then falls into the \"users are supposed to trust registries they install\" category, I think","user":"UH24GRBLL","ts":"1612975560.111400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612975565.000000"},"blocks":[{"type":"rich_text","block_id":"XT1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and that then falls into the \"users are supposed to trust registries they install\" category, I think"}]}]}]},{"client_msg_id":"1e859a31-ffb3-4b9c-8da5-dd0f7c9c0d7f","type":"message","text":"or we could improve upon this further by only allowing some registries to shadow in the first place","user":"UH24GRBLL","ts":"1612976095.112000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cqpwu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or we could improve upon this further by only allowing some registries to shadow in the first place"}]}]}]},{"client_msg_id":"afd8b130-04ff-468b-8876-4437e1c3a093","type":"message","text":"I'll add it to the issue","user":"UH24GRBLL","ts":"1612976104.112200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MEg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll add it to the issue"}]}]}]},{"client_msg_id":"3f20d8c2-4246-49e3-befa-afbb5e07215f","type":"message","text":"Is there any legitimate use for package shadowing? I can't think of one.","user":"U01537M2E9W","ts":"1612979246.114600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YnmT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any legitimate use for package shadowing? I can't think of one."}]}]}],"thread_ts":"1612979246.114600","reply_count":1,"reply_users_count":1,"latest_reply":"1612979675.118500","reply_users":["UBVE598BC"],"subscribed":false},{"client_msg_id":"7e44469c-b69e-4a9b-8dc7-ac517cb02f69","type":"message","text":"independently maintained registry backups","user":"UH24GRBLL","ts":"1612979381.114900","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612979412.000000"},"blocks":[{"type":"rich_text","block_id":"Aw5b+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"independently maintained registry backups"}]}]}]},{"client_msg_id":"f8843b56-9fef-48e6-a11d-e06a29a9ceaa","type":"message","text":"sorry, I didn't follow the discussion above about shadowing, but what if a package is marked as non-shadowable in two registries?","user":"UDB26738Q","ts":"1612979631.118300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pzje","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sorry, I didn't follow the discussion above about shadowing, but what if a package is marked as non-shadowable in two registries?"}]}]}]},{"client_msg_id":"774d79d2-e449-459f-b092-69de3620eba2","type":"message","text":"you mean you have three registries, one has the package marked as shadowable and the other two as non-shadowable?","user":"UH24GRBLL","ts":"1612979731.119100","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612979738.000000"},"blocks":[{"type":"rich_text","block_id":"JRuSJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you mean you have three registries, one has the package marked as shadowable and the other two as non-shadowable?"}]}]}]},{"client_msg_id":"6365db3c-3867-4e67-b52a-77dea528c6a5","type":"message","text":"no, I mean a package is marked as non-shadowable in all relevant registries (2, 3, 10, whatever)","user":"UDB26738Q","ts":"1612979777.119800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9K/Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, I mean a package is marked as non-shadowable in all relevant registries (2, 3, 10, whatever)"}]}]}]},{"client_msg_id":"d9eb072d-bd96-4a9e-91df-23ff540f47d4","type":"message","text":"then it won't install","user":"UH24GRBLL","ts":"1612979807.120300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q8Htw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then it won't install"}]}]}]},{"client_msg_id":"e9e554d5-14c4-4b7c-ad22-b0389224d40c","type":"message","text":"for that to happen both UUID and Name have to match though","user":"UH24GRBLL","ts":"1612979825.121000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NGQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for that to happen both UUID and Name have to match though"}]}]}]},{"client_msg_id":"c5876468-1885-4d2b-b0fb-d5b4408fc6eb","type":"message","text":"I think the idea is to error unless it's marked as shadowable (opt-in) in all registries you have installed and it appears.","user":"UBVE598BC","ts":"1612979834.121200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zfxh/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the idea is to error unless it's marked as shadowable (opt-in) in all registries you have installed and it appears."}]}]}],"reactions":[{"name":"100","users":["UH24GRBLL"],"count":1},{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"68c3cf3c-b909-44f8-8e2f-a038b6f98f67","type":"message","text":"or if it only exists in one registry, then it's fine to install as well","user":"UH24GRBLL","ts":"1612979864.121700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B3si","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or if it only exists in one registry, then it's fine to install as well"}]}]}]},{"client_msg_id":"23b1bc63-f5ba-4293-b36b-2d1b7bab1200","type":"message","text":"Remember, the only registries relevant for an install are those installed locally on the users' machine","user":"UH24GRBLL","ts":"1612980511.122200","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612980520.000000"},"blocks":[{"type":"rich_text","block_id":"FvZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Remember, the only registries relevant for an install are those installed locally on the users' machine"}]}]}]},{"client_msg_id":"f20671e0-4e09-4dd5-b9a8-a9a63e159433","type":"message","text":"There's another problem: imagine CI has 2 steps, 1) adding the private registry 2) install the package. Now imagine the first step fails and CI just continues (horrible configuration, but bear with me). Now the only other registry (e.g. General) has a package with the same name and UUID. Since it's the only registry with that (name,UUID), it happily installs and you're pwned again.","user":"UH24GRBLL","ts":"1612980956.124500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VCkb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There's another problem: imagine CI has 2 steps, 1) adding the private registry 2) install the package. Now imagine the first step fails and CI just continues (horrible configuration, but bear with me). Now the only other registry (e.g. General) has a package with the same name and UUID. Since it's the only registry with that (name,UUID), it happily installs and you're pwned again."}]}]}]},{"client_msg_id":"37926ed5-dd7d-4cd6-aa49-0dabfafe982b","type":"message","text":"This isn't prevented by `shadowable`, but it should fail safe, right?","user":"UH24GRBLL","ts":"1612981006.125000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t55h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This isn't prevented by "},{"type":"text","text":"shadowable","style":{"code":true}},{"type":"text","text":", but it should fail safe, right?"}]}]}]},{"client_msg_id":"c45afdb7-b674-4cbe-bb1f-f780dd1ca7b1","type":"message","text":"(dare I say it?) there's a feature from... npm.. we could emulate with a stronger guarantee to fix this. Requiring to specify the registry a package should be cloned from (called `scopes` in npm - see <https://docs.npmjs.com/cli/v6/using-npm/scope>).","user":"UH24GRBLL","ts":"1612981957.126200","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612981962.000000"},"blocks":[{"type":"rich_text","block_id":"K3XI3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(dare I say it?) there's a feature from... npm.. we could emulate with a stronger guarantee to fix this. Requiring to specify the registry a package should be cloned from (called "},{"type":"text","text":"scopes","style":{"code":true}},{"type":"text","text":" in npm - see "},{"type":"link","url":"https://docs.npmjs.com/cli/v6/using-npm/scope"},{"type":"text","text":")."}]}]}]},{"client_msg_id":"c68d8798-c912-4fd2-8c31-dcbe453362e7","type":"message","text":"difference being that npm doesn't require scopes","user":"UH24GRBLL","ts":"1612981974.126800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/vjtn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"difference being that npm doesn't require scopes"}]}]}]},{"client_msg_id":"d5b587f6-5354-4ebe-a552-baa53280cd7a","type":"message","text":"So, since we use internal package registry at work, I had to try out the \"dependency confustion\" attack with installing package with same name as some public package in internal registry, with different UUID, and I was glad to see it not install and instead I got this:\n```(@v1.5) pkg&gt; add ChainRules\nThere are multiple registered `ChainRules` packages, choose one:\n &gt; Registry: General - Path: <https://github.com/JuliaDiff/ChainRules.jl.git>\n   Registry: dev_registry - Path: <mailto:git@git.int.avast.com|git@git.int.avast.com>:racinsky/ChainRules.jl.git```\nand in case of non-interative job, it raised error\n`ERROR: there are multiple registered `ChainRules` packages, explicitly set the uuid` and crashed","user":"USBKT1275","ts":"1612988070.129200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I14YX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, since we use internal package registry at work, I had to try out the \"dependency confustion\" attack with installing package with same name as some public package in internal registry, with different UUID, and I was glad to see it not install and instead I got this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(@v1.5) pkg> add ChainRules\nThere are multiple registered `ChainRules` packages, choose one:\n > Registry: General - Path: "},{"type":"link","url":"https://github.com/JuliaDiff/ChainRules.jl.git"},{"type":"text","text":"\n   Registry: dev_registry - Path: git@git.int.avast.com:racinsky/ChainRules.jl.git"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and in case of non-interative job, it raised error\n"},{"type":"text","text":"ERROR: there are multiple registered `ChainRules` packages, explicitly set the uuid","style":{"code":true}},{"type":"text","text":" and crashed"}]}]}]},{"client_msg_id":"955a560a-05b4-4646-8e7d-1c308b051460","type":"message","text":"I think the attack does work if you use the same UUID in both packages, see <https://github.com/DilumAluthge/MWE_multiple_registries_same_package_uuid/> by <@U7THT3TM3>","user":"UCZ7VBGUD","ts":"1612990003.129500","team":"T68168MUP","edited":{"user":"UCZ7VBGUD","ts":"1612990035.000000"},"blocks":[{"type":"rich_text","block_id":"Klb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the attack does work if you use the same UUID in both packages, see "},{"type":"link","url":"https://github.com/DilumAluthge/MWE_multiple_registries_same_package_uuid/"},{"type":"text","text":" by "},{"type":"user","user_id":"U7THT3TM3"}]}]}]},{"client_msg_id":"41b0396b-f516-4677-bad3-26c39396eb67","type":"message","text":"different UUID is fine - that's the regular case, as those are what's supposed to be unique","user":"UH24GRBLL","ts":"1612990372.130000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TBjjk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"different UUID is fine - that's the regular case, as those are what's supposed to be unique"}]}]}]},{"client_msg_id":"3d17b0d1-c233-490b-a819-1ebf059e0ac8","type":"message","text":"the problem occurs if both have the same UUID as well","user":"UH24GRBLL","ts":"1612990383.130300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WB1J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the problem occurs if both have the same UUID as well"}]}]}]},{"client_msg_id":"0a068dc5-904e-4a6b-99cd-cf7f60f434fb","type":"message","text":"I’m just catching up on this (not looking at Slack for a while, but <@U6QGE7S86> pinged me on Twitter)","user":"U6795JH6H","ts":"1613004483.131900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lzmZi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m just catching up on this (not looking at Slack for a while, but "},{"type":"user","user_id":"U6QGE7S86"},{"type":"text","text":" pinged me on Twitter)"}]}]}],"reactions":[{"name":"+1","users":["U6QGE7S86"],"count":1}]},{"client_msg_id":"5e4df9b9-0352-4b38-a11c-cd386826377f","type":"message","text":"I don’t think the `shadowable` approach is well thought through","user":"U6795JH6H","ts":"1613004501.132400","team":"T68168MUP","edited":{"user":"U6795JH6H","ts":"1613004700.000000"},"blocks":[{"type":"rich_text","block_id":"2=a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t think the "},{"type":"text","text":"shadowable","style":{"code":true}},{"type":"text","text":" approach is well thought through"}]}]}],"reactions":[{"name":"100","users":["U67SCG4HG"],"count":1}]},{"client_msg_id":"1f90edb3-d69b-41c6-827f-87c8f432ad04","type":"message","text":"this absolutely does not warrant making a breaking change to the whole ecosystem","user":"U6795JH6H","ts":"1613004534.133100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rWI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this absolutely does not warrant making a breaking change to the whole ecosystem"}]}]}],"thread_ts":"1613004534.133100","reply_count":2,"reply_users_count":2,"latest_reply":"1613007366.139400","reply_users":["UCZ7VBGUD","U6795JH6H"],"subscribed":false},{"client_msg_id":"51ad79a3-a630-4f61-afca-8e0a868ac5cd","type":"message","text":"there are several mitigating factors for Julia:\n1. Manifest files are content-addressed already\n2. You need to know a private package’s UUID to implement the attack","user":"U6795JH6H","ts":"1613004620.134600","team":"T68168MUP","edited":{"user":"U6795JH6H","ts":"1613004715.000000"},"blocks":[{"type":"rich_text","block_id":"pW9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there are several mitigating factors for Julia:\n1. Manifest files are content-addressed already\n2. You need to know a private package’s UUID to implement the attack"}]}]}]},{"client_msg_id":"ed9be73e-bc20-4cb4-9823-e8b5d8e2d2ee","type":"message","text":"the first thing we should do is post on Discourse that people with private packages should not publish UUIDs of those packages because it opens them up to this attack","user":"U6795JH6H","ts":"1613004659.135400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1j9u6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the first thing we should do is post on Discourse that people with private packages should not publish UUIDs of those packages because it opens them up to this attack"}]}]}]},{"client_msg_id":"aa6358c0-c58d-4f45-8766-df0ddd746684","type":"message","text":"another option that seems sensible to me is that we allow associating a public key with a package and providing signatures for version =&gt; content pairings (only content would still allow an attacker to associate a new version with old content, which could be used to force someone to use an older version with a vulnerability, which is still bad)","user":"U6795JH6H","ts":"1613004849.137600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QCED","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"another option that seems sensible to me is that we allow associating a public key with a package and providing signatures for version => content pairings (only content would still allow an attacker to associate a new version with old content, which could be used to force someone to use an older version with a vulnerability, which is still bad)"}]}]}]},{"client_msg_id":"5e2c77c0-a792-489a-b221-4fd92766a73e","type":"message","text":"One way to avoid this problem would be for private registry owners to also register matching dummy version 0.0.1 packages in General. This would of course be a terrible use of General in every other way than for that purpose, so better not have that happen. A possible alternative would be to have some service that allows submitting UUIDs (without matching package names) that should not be allowed to be registered in General. That of course has its own set of problems but may be worth considering.","user":"UBVE598BC","ts":"1613028725.148800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qc4+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One way to avoid this problem would be for private registry owners to also register matching dummy version 0.0.1 packages in General. This would of course be a terrible use of General in every other way than for that purpose, so better not have that happen. A possible alternative would be to have some service that allows submitting UUIDs (without matching package names) that should not be allowed to be registered in General. That of course has its own set of problems but may be worth considering."}]}]}],"thread_ts":"1613028725.148800","reply_count":1,"reply_users_count":1,"latest_reply":"1613028760.148900","reply_users":["UH24GRBLL"],"subscribed":false},{"client_msg_id":"061515cf-f24b-4457-b798-71a6cf4daf1f","type":"message","text":"Thinking aloud again: What about adding a field in the registry saying that packages in this registry must not be shadowed unless the package itself is marked as shadowable? Then you would only have to do this inside your own registry if you want that feature and General would not be affected at all.","user":"UBVE598BC","ts":"1613029360.152700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S7B2S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thinking aloud again: What about adding a field in the registry saying that packages in this registry must not be shadowed unless the package itself is marked as shadowable? Then you would only have to do this inside your own registry if you want that feature and General would not be affected at all."}]}]}]},{"client_msg_id":"5de9bc49-8a3b-42ff-a383-80c75ca4ca00","type":"message","text":"But if you manage to not have your private registry available, then it would still download the bad one?","user":"U67D54KS8","ts":"1613029988.153500","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1613030015.000000"},"blocks":[{"type":"rich_text","block_id":"OMRps","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But if you manage to not have your private registry available, then it would still download the bad one?"}]}]}],"thread_ts":"1613029988.153500","reply_count":2,"reply_users_count":1,"latest_reply":"1613031750.158000","reply_users":["UBVE598BC"],"subscribed":false,"reactions":[{"name":"point_up","users":["U7THT3TM3","UH24GRBLL"],"count":2}]},{"client_msg_id":"8479d9ca-cf54-4a86-9a15-ee4fa5ffcbc7","type":"message","text":"I understand the sentiment of not wanting to break this existing workflow, but I don't think this can be mitigated without breaking it. I agree that an advisory of some sort is a good idea though.","user":"UH24GRBLL","ts":"1613030651.156900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IE4sN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I understand the sentiment of not wanting to break this existing workflow, but I don't think this can be mitigated without breaking it. I agree that an advisory of some sort is a good idea though."}]}]}]},{"client_msg_id":"5edd7b6a-d316-430a-b45b-0e863fe6f399","type":"message","text":"Haskell hit by dependency confusion too :confused:\n<https://twitter.com/deech/status/1359895240442843136>","user":"U6QGE7S86","ts":"1613060051.164500","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/deech|@deech>: well shit ... \n\n<https://frasertweedale.github.io/blog-fp/posts/2021-02-12-haskell-dependency-confusion.html> <https://pbs.twimg.com/media/Et9RgHoWYAkTHUw.png>","ts":1613059265,"author_name":"deech","author_link":"https://twitter.com/deech/status/1359895240442843136","author_icon":"https://pbs.twimg.com/profile_images/1351302195501817857/UaTqxCVo_normal.jpg","author_subname":"@deech","text":"well shit ... \n\n<https://frasertweedale.github.io/blog-fp/posts/2021-02-12-haskell-dependency-confusion.html> <https://pbs.twimg.com/media/Et9RgHoWYAkTHUw.png>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/deech/status/1359895240442843136","image_url":"https://pbs.twimg.com/media/Et9RgHoWYAkTHUw.png","image_width":619,"image_height":154,"image_bytes":11289,"id":1,"original_url":"https://twitter.com/deech/status/1359895240442843136","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"aYqX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haskell hit by dependency confusion too "},{"type":"emoji","name":"confused"},{"type":"text","text":"\n"},{"type":"link","url":"https://twitter.com/deech/status/1359895240442843136"}]}]}]},{"client_msg_id":"1897B6E1-76AD-42E5-9C41-2CB76CCE864A","type":"message","text":"Are there any programming language ecosystems that are not vulnerable to this attack?","user":"U7THT3TM3","ts":"1613083155.175200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l50Zs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any programming language ecosystems that are not vulnerable to this attack?"}]}]}]},{"type":"message","subtype":"channel_join","ts":"1613099405.176300","user":"UC8821DPY","text":"<@UC8821DPY> has joined the channel","inviter":"U7THT3TM3"},{"client_msg_id":"0c9759c2-955f-4d59-b785-b64122a53569","type":"message","text":"Could we prevent this by allowing people who want to have their registries be public submit a list of \"we've reserved the following UUIDs\" to General? Attackers then have to convince victims to install an additional registry, right?","user":"UC8821DPY","ts":"1613109175.178000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0LC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could we prevent this by allowing people who want to have their registries be public submit a list of \"we've reserved the following UUIDs\" to General? Attackers then have to convince victims to install an additional registry, right?"}]}]}]},{"client_msg_id":"9f8da2ee-3782-4b8f-86a2-76dcc5a04d6a","type":"message","text":"Blacklisting of UUIDs for General is one of the ideas that have been discussed in the threads above. The easiest short-term solution would probably be to make auto-merge check a configurable selection of public registries and block if it finds a conflicting UUID.","user":"UBVE598BC","ts":"1613111458.181000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k3s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Blacklisting of UUIDs for General is one of the ideas that have been discussed in the threads above. The easiest short-term solution would probably be to make auto-merge check a configurable selection of public registries and block if it finds a conflicting UUID."}]}]}]},{"client_msg_id":"ba2ac9b8-37ac-4d9e-af04-09089495a6b9","type":"message","text":"In theory we could switch to UUID5 with the registry UUID being the namespace, right?","user":"U6BNE7LTZ","ts":"1613125204.182800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L5p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In theory we could switch to UUID5 with the registry UUID being the namespace, right?"}]}]}]},{"client_msg_id":"d3f5377e-ba2d-42d1-8319-75629b80aca3","type":"message","text":"I have a work in progress PR for mitigation of dependency confusion for public registries at <https://github.com/JuliaRegistries/RegistryCI.jl/pull/348>. Please review that the approach is sound.","user":"UBVE598BC","ts":"1613230608.185100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jYYM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a work in progress PR for mitigation of dependency confusion for public registries at "},{"type":"link","url":"https://github.com/JuliaRegistries/RegistryCI.jl/pull/348"},{"type":"text","text":". Please review that the approach is sound."}]}]}]},{"client_msg_id":"da0ac416-a839-48bf-9847-cd12f55733e1","type":"message","text":"Here are all the things I think we should do to mitigate this:\n1. <@UBVE598BC>’s PR above: allow registries that are publicly visible (the packages don’t have to be) to register themselves with the General CI system to prevent PRs to General doing this kind of attack\n2. Add a similar mechanism for registries that aren’t publicly visible that allows publishing a list of hashed package UUIDs and repo URLs (need to determine if salting is necessary). The check logic is similar: if the UUID matches and the repo URL doesn’t, then we consider it an attack and block it; if the UUID and repo URL match, that’s fine; if the UUID doesn’t match that’s also fine.\n3. Write an announcement on discourse that Julia is susceptible to the dependency confusion attack if the attacker knows the name _and_ UUID of the package. Anyone maintaining a public registry should register it with RegistryCI. Anyone maintaining a private registry should try to keep package UUIDs private; once (2) above is done, they should consider publishing a hashed list of package UUIDs that can be checked by RegistryCI.\n4. Add a client-side protection mechanism like the “mergable” option. However, this needs a bit more thought. I think that the client should at least consult all registries that it currently knows about (whether it can update them or not) and make sure that no nefarious package confusion is being attempted. The worry is that if someone loses or deletes a registry that could open the client up to the attack. So we may want to keep the mergability info somewhere even more persistent than where the registries are stored.","user":"U6795JH6H","ts":"1613422593.200500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cv+u8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here are all the things I think we should do to mitigate this:\n1. "},{"type":"user","user_id":"UBVE598BC"},{"type":"text","text":"’s PR above: allow registries that are publicly visible (the packages don’t have to be) to register themselves with the General CI system to prevent PRs to General doing this kind of attack\n2. Add a similar mechanism for registries that aren’t publicly visible that allows publishing a list of hashed package UUIDs and repo URLs (need to determine if salting is necessary). The check logic is similar: if the UUID matches and the repo URL doesn’t, then we consider it an attack and block it; if the UUID and repo URL match, that’s fine; if the UUID doesn’t match that’s also fine.\n3. Write an announcement on discourse that Julia is susceptible to the dependency confusion attack if the attacker knows the name "},{"type":"text","text":"and","style":{"italic":true}},{"type":"text","text":" UUID of the package. Anyone maintaining a public registry should register it with RegistryCI. Anyone maintaining a private registry should try to keep package UUIDs private; once (2) above is done, they should consider publishing a hashed list of package UUIDs that can be checked by RegistryCI.\n4. Add a client-side protection mechanism like the “mergable” option. However, this needs a bit more thought. I think that the client should at least consult all registries that it currently knows about (whether it can update them or not) and make sure that no nefarious package confusion is being attempted. The worry is that if someone loses or deletes a registry that could open the client up to the attack. So we may want to keep the mergability info somewhere even more persistent than where the registries are stored."}]}]}]},{"client_msg_id":"a4b7aea3-7817-4e23-9280-009bae2eef40","type":"message","text":"I’m on parental leave so I’m not going to be doing any of this.","user":"U6795JH6H","ts":"1613422610.200900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6PX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m on parental leave so I’m not going to be doing any of this."}]}]}]},{"client_msg_id":"236d5311-ed7c-40ec-a0e6-4ff81d7521ef","type":"message","text":"it would be great to get volunteers to work on the additional pieces of this","user":"U6795JH6H","ts":"1613422632.201300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"32Yx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it would be great to get volunteers to work on the additional pieces of this"}]}]}]},{"client_msg_id":"847e7eb7-8268-4023-86c2-b993ab0cf5d5","type":"message","text":"Once Gunnar’s PR is merged and CI protects against this, <@U7THT3TM3>, would you be willing to write up a Discourse post?","user":"U6795JH6H","ts":"1613422978.202000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nnZ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Once Gunnar’s PR is merged and CI protects against this, "},{"type":"user","user_id":"U7THT3TM3"},{"type":"text","text":", would you be willing to write up a Discourse post?"}]}]}],"thread_ts":"1613422978.202000","reply_count":3,"reply_users_count":2,"latest_reply":"1613423101.203300","reply_users":["U7THT3TM3","U6795JH6H"],"subscribed":false,"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"b1d335ee-6345-4ca0-a0c7-387b41478c57","type":"message","text":"then we can work on the items (2) and (4)","user":"U6795JH6H","ts":"1613423003.203000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Fyq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then we can work on the items (2) and (4)"}]}]}]},{"client_msg_id":"befaeac1-1d4f-4f7c-a55a-52c18ebbc9d9","type":"message","text":"Regarding the design of (2): there’s a choice between:\n- no salt: just directly hash the UUID and repo URL — each entry looks like `hash(uuid), hash(repo)`\n- salt: use random salt to hash the UUID and repo URL — each entry looks like `salt, hash(\"uuid\" * salt * uuid), hash(\"repo\" * salt * repo)`","user":"U6795JH6H","ts":"1613423250.205100","team":"T68168MUP","edited":{"user":"U6795JH6H","ts":"1613423365.000000"},"blocks":[{"type":"rich_text","block_id":"dYR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Regarding the design of (2): there’s a choice between:\n- no salt: just directly hash the UUID and repo URL — each entry looks like "},{"type":"text","text":"hash(uuid), hash(repo)","style":{"code":true}},{"type":"text","text":"\n- salt: use random salt to hash the UUID and repo URL — each entry looks like "},{"type":"text","text":"salt, hash(\"uuid\" * salt * uuid), hash(\"repo\" * salt * repo)","style":{"code":true}}]}]}]},{"client_msg_id":"0419a56b-dfd4-4def-b296-304f51b53b67","type":"message","text":"the former allows you to efficiently look up just a single entry for comparison but it leaks more information about what the private UUIDs and repo URLs might be","user":"U6795JH6H","ts":"1613423512.206400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2yUL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the former allows you to efficiently look up just a single entry for comparison but it leaks more information about what the private UUIDs and repo URLs might be"}]}]}]},{"client_msg_id":"d38d5bce-064f-4fb9-8f10-51dcb1a0efcb","type":"message","text":"the latter makes it very hard to figure out what a private uuid or repo are from the hashes but also means that checking a new UUID, repo pair requires hashing it as many times as there are entries in the database","user":"U6795JH6H","ts":"1613423621.207900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LcZj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the latter makes it very hard to figure out what a private uuid or repo are from the hashes but also means that checking a new UUID, repo pair requires hashing it as many times as there are entries in the database"}]}]}]},{"client_msg_id":"82feff0a-88a1-4702-82b9-a50e8464683e","type":"message","text":"the `hash` function should be `sha256`","user":"U6795JH6H","ts":"1613423654.208300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/9eF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the "},{"type":"text","text":"hash","style":{"code":true}},{"type":"text","text":" function should be "},{"type":"text","text":"sha256","style":{"code":true}}]}]}]},{"client_msg_id":"2fac0103-078e-4c37-98ae-0ce678833de8","type":"message","text":"but we probably want to also record that to allow upgrading to a more secure hash in the future","user":"U6795JH6H","ts":"1613423681.208900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KbWdy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but we probably want to also record that to allow upgrading to a more secure hash in the future"}]}]}]},{"client_msg_id":"db0ac8cf-9c71-49b4-9aa2-60d86e716661","type":"message","text":"I just timed our sha256 implementation and it hashes a URL in about 0.5 µs","user":"U6795JH6H","ts":"1613423996.210900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BMVSN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just timed our sha256 implementation and it hashes a URL in about 0.5 µs"}]}]}]},{"client_msg_id":"3a6fc4db-cca8-40f2-bcb3-86911cce69c4","type":"message","text":"which means that we can hash 10,000 UUIDs + URLs in 10,000 µs = 10 ms","user":"U6795JH6H","ts":"1613424046.211800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AVT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which means that we can hash 10,000 UUIDs + URLs in 10,000 µs = 10 ms"}]}]}]},{"client_msg_id":"0199e1da-cff2-4b34-bdd6-6021a33b7a11","type":"message","text":"so I think we should do the salted version. after all the check is only done once per registration of a new package, so that’s really nothing at all","user":"U6795JH6H","ts":"1613424111.212900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jqZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I think we should do the salted version. after all the check is only done once per registration of a new package, so that’s really nothing at all"}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"b4f32a0e-6f8a-4c03-917f-21feac097d2a","type":"message","text":"we might even want to use bcrypt instead of sha256 or whatever the latest, greatest slow password hashing algorithm is, which would keep attackers from brute forcing this readily","user":"U6795JH6H","ts":"1613424172.214000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vMCs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we might even want to use bcrypt instead of sha256 or whatever the latest, greatest slow password hashing algorithm is, which would keep attackers from brute forcing this readily"}]}]}],"thread_ts":"1613424172.214000","reply_count":1,"reply_users_count":1,"latest_reply":"1613425881.215100","reply_users":["U6795JH6H"],"subscribed":false,"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"e48bca53-af4c-4057-b99a-23888eb4bfa5","type":"message","text":"I haven't had time to think about this over the weekend, but I'll go through the proposed mitigations and try to think of ways to break them over the next few days. The mitigation for public registries sounds good - their UUIDs/repo URLs are public already, so requiring those to match between known public registries seems sound. While I'm not in favor of any \"opt-in\" to security (public registries not knowing about this mitigation keep their users vulnerable..), the only other problem I can think of is genuine UUID collision. Very unlikely in 1.6, as the UUIDs stdlib uses `RandomDevice()` as PRNG, but if that happens and both packages are legitimate, there's no way around managing it anyway.","user":"UH24GRBLL","ts":"1613460573.219900","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1613461610.000000"},"blocks":[{"type":"rich_text","block_id":"t1sh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven't had time to think about this over the weekend, but I'll go through the proposed mitigations and try to think of ways to break them over the next few days. The mitigation for public registries sounds good - their UUIDs/repo URLs are public already, so requiring those to match between known public registries seems sound. While I'm not in favor of any \"opt-in\" to security (public registries not knowing about this mitigation keep their users vulnerable..), the only other problem I can think of is genuine UUID collision. Very unlikely in 1.6, as the UUIDs stdlib uses "},{"type":"text","text":"RandomDevice()","style":{"code":true}},{"type":"text","text":" as PRNG, but if that happens and both packages are legitimate, there's no way around managing it anyway."}]}]}]}]}