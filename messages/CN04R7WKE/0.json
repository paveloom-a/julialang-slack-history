{"cursor": 5, "messages": [{"client_msg_id":"eb2173ea-7d3f-4e4f-825b-c4e386029221","type":"message","text":"Hi,","user":"U7GQE9JP9","ts":"1616487384.127500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HkBA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi,"}]}]}]},{"client_msg_id":"d80d7c9f-c485-470c-8c6e-0a8cceaed220","type":"message","text":"I am not sure what you have in mind. A block matrix of DiffEqOperators?","user":"U7GQE9JP9","ts":"1616487415.128000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5aJst","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am not sure what you have in mind. A block matrix of DiffEqOperators?"}]}]}]},{"client_msg_id":"1a634aba-f744-49cc-9fb9-839365bcecb1","type":"message","text":"<@UB197FRCL> don't you get a block operator by just using the dimensions functionality?","user":"U69BL50BF","ts":"1616487488.128500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1UIVO","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UB197FRCL"},{"type":"text","text":" don't you get a block operator by just using the dimensions functionality?"}]}]}]},{"client_msg_id":"275e2d49-a265-45ce-a3c6-dcf7493e2078","type":"message","text":"I'm trying to use `NeuralPDE.jl` to solve the PDE\n```∂u/∂x + ∂u/∂y = -sin(y)```\nI don't have any boundary conditions. Rather, I would like to constrain the solution such that it has an isolated minimum at `(x,y) = (0,0)` , i.e.,  the gradient at zero is `∇u(0) = [0 0]` and the Hessian is positive definite `∇²u(0) ≻ 0` .\n\nIt doesn't look like this can be put into the `NeuralPDE.jl` framework easily. Can anyone suggest how to go about this? Thanks!","user":"UMNPJKFE1","ts":"1616520434.131500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FbELl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm trying to use "},{"type":"text","text":"NeuralPDE.jl","style":{"code":true}},{"type":"text","text":" to solve the PDE\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"∂u/∂x + ∂u/∂y = -sin(y)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I don't have any boundary conditions. Rather, I would like to constrain the solution such that it has an isolated minimum at "},{"type":"text","text":"(x,y) = (0,0)","style":{"code":true}},{"type":"text","text":" , i.e.,  the gradient at zero is "},{"type":"text","text":"∇u(0) = [0 0]","style":{"code":true}},{"type":"text","text":" and the Hessian is positive definite "},{"type":"text","text":"∇²u(0) ≻ 0","style":{"code":true}},{"type":"text","text":" .\n\nIt doesn't look like this can be put into the "},{"type":"text","text":"NeuralPDE.jl","style":{"code":true}},{"type":"text","text":" framework easily. Can anyone suggest how to go about this? Thanks!"}]}]}]},{"client_msg_id":"b0da3f29-bdd7-4aa3-a29d-c32026f4e44b","type":"message","text":"Is MTK able to model implicit systems and pass them to OrdinaryDiffEq right now? So an equation of the form `x*y - y*x + y +y^2 ~ 0` where `x` is really the differential of `y(t)`w.r.t. `t` ? I assumed that it would be possible, using the acausal model downstream, but I don't get how right now :sweat_smile:","user":"UNYPJU8DT","ts":"1616573690.136100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OiEJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is MTK able to model implicit systems and pass them to OrdinaryDiffEq right now? So an equation of the form "},{"type":"text","text":"x*y - y*x + y +y^2 ~ 0","style":{"code":true}},{"type":"text","text":" where "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" is really the differential of "},{"type":"text","text":"y(t)","style":{"code":true}},{"type":"text","text":"w.r.t. "},{"type":"text","text":"t","style":{"code":true}},{"type":"text","text":" ? I assumed that it would be possible, using the acausal model downstream, but I don't get how right now "},{"type":"emoji","name":"sweat_smile"}]}]}]},{"client_msg_id":"7cb67320-98e1-43b5-9d84-3f2cf182fbad","type":"message","text":"Hi. Short question re ModelingToolkit: is \"import\"-ing instead of \"using\" problematic/discouraged or the code below should work ok?","user":"U01R0NYA8F9","ts":"1616585231.137600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AYPC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi. Short question re ModelingToolkit: is \"import\"-ing instead of \"using\" problematic/discouraged or the code below should work ok?"}]}]}]},{"client_msg_id":"5cf51633-8ab8-4282-82c5-150964742d30","type":"message","text":"import ModelingToolkit\nModelingToolkit.@parameters t\nModelingToolkit.@variables u1(..)\n\nDt  = ModelingToolkit.Differential(t)\nDtt = ModelingToolkit.Differential(t)^2\n\nTMAX = 10\nF(t) = (t&lt;=TMAX/2) ? -1.0 : 1.0\nModelingToolkit.@register F(t)\n\neqs = [\n    Dtt(u1(t)) ~ F(t),\n]\nbcs = [\n    u1(0) ~ 0.f0,\n]","user":"U01R0NYA8F9","ts":"1616585242.137800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q=n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"import ModelingToolkit\nModelingToolkit.@parameters t\nModelingToolkit.@variables u1(..)\n\nDt  = ModelingToolkit.Differential(t)\nDtt = ModelingToolkit.Differential(t)^2\n\nTMAX = 10\nF(t) = (t<=TMAX/2) ? -1.0 : 1.0\nModelingToolkit.@register F(t)\n\neqs = [\n    Dtt(u1(t)) ~ F(t),\n]\nbcs = [\n    u1(0) ~ 0.f0,\n]"}]}]}]},{"client_msg_id":"d9198621-0513-4efa-8bc5-63ad0b792fde","type":"message","text":"Right now, it results in a LoadError","user":"U01R0NYA8F9","ts":"1616585292.138300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"haB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right now, it results in a LoadError"}]}]}]},{"client_msg_id":"5a6017d8-aaa4-4757-a47e-a465488d627f","type":"message","text":"ERROR: LoadError: UndefVarError: Num not defined\nStacktrace:\n [1] #5\n   @ ~/.julia/dev/Symbolics/src/register.jl:43 [inlined]\n [2] _any\n   @ ./reduce.jl:876 [inlined]\n [3] any\n   @ ./reduce.jl:871 [inlined]\n [4] F(t::Symbolics.Num)\n   @ Main ~/.julia/dev/Symbolics/src/register.jl:43\n [5] top-level scope\n   @ ~/Desktop/bbb/microwe.jl:12\nin expression starting at /home/mquartulli/Desktop/bbb/microwe.jl:12","user":"U01R0NYA8F9","ts":"1616585294.138500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tZvl1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ERROR: LoadError: UndefVarError: Num not defined\nStacktrace:\n [1] #5\n   @ ~/.julia/dev/Symbolics/src/register.jl:43 [inlined]\n [2] _any\n   @ ./reduce.jl:876 [inlined]\n [3] any\n   @ ./reduce.jl:871 [inlined]\n [4] F(t::Symbolics.Num)\n   @ Main ~/.julia/dev/Symbolics/src/register.jl:43\n [5] top-level scope\n   @ ~/Desktop/bbb/microwe.jl:12\nin expression starting at /home/mquartulli/Desktop/bbb/microwe.jl:12"}]}]}]},{"client_msg_id":"24bb242a-5324-446c-879f-8ae12a98d723","type":"message","text":"as far as I understand due to the fact that","user":"U01R0NYA8F9","ts":"1616585316.138800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h9Mw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as far as I understand due to the fact that"}]}]}]},{"client_msg_id":"c3fb0843-5dc6-4b4e-95da-fa0c0f141c39","type":"message","text":"register.jl in Symbolics does not import num.jl","user":"U01R0NYA8F9","ts":"1616585336.139200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CcA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"register.jl in Symbolics does not import num.jl"}]}]}]},{"client_msg_id":"e6a31354-0cc7-41db-ac86-b85cb588e06b","type":"message","text":"Of course, the micro example works if we change the first line to \"using ModelingToolkit\"","user":"U01R0NYA8F9","ts":"1616585408.139900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r2CuQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Of course, the micro example works if we change the first line to \"using ModelingToolkit\""}]}]}]},{"client_msg_id":"304f938e-e415-48e3-a6fa-8a1264a48f38","type":"message","text":"(sorry for not getting the code formatting right in the messages above - will look into it)","user":"U01R0NYA8F9","ts":"1616585449.140500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P9e8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(sorry for not getting the code formatting right in the messages above - will look into it)"}]}]}]},{"client_msg_id":"45479410-e0d9-4ffb-b74a-5634c494e727","type":"message","text":"(Please also do let me know if `diffeq-bridged` is a better channel for this...)","user":"U01R0NYA8F9","ts":"1616586068.141700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g5TsW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(Please also do let me know if "},{"type":"text","text":"diffeq-bridged","style":{"code":true}},{"type":"text","text":" is a better channel for this...)"}]}]}]},{"client_msg_id":"2a791fc8-df6b-42e8-8275-f00a7311688f","type":"message","text":"<@UER6P8FNG> suggested that I read <https://docs.julialang.org/en/v1.6.0-rc3/manual/modules/> . Thank you Ludovico!","user":"U01R0NYA8F9","ts":"1616587957.143000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BTUh","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UER6P8FNG"},{"type":"text","text":" suggested that I read "},{"type":"link","url":"https://docs.julialang.org/en/v1.6.0-rc3/manual/modules/"},{"type":"text","text":" . Thank you Ludovico!"}]}]}]},{"client_msg_id":"69452ae2-c763-463a-8107-853f7df0be46","type":"message","text":"Marked a couple of issues as good-first-issue in DiffEqFlux, if there are people looking for things to work on for their GSoC application let us know if you are working on it","user":"U6QF223TN","ts":"1616590818.145100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hF5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Marked a couple of issues as good-first-issue in DiffEqFlux, if there are people looking for things to work on for their GSoC application let us know if you are working on it"}]}]}]},{"client_msg_id":"17a2cad1-8823-49e7-afde-668db4ea8be7","type":"message","text":"<@U69BL50BF> Do you ( or anyone in this channel :sweat_smile: ) have any objections against getting rid of the implicit `ADM` optimizer in DataDriven? Since the parallel implicit algorithm is much more robust and makes more headaches for a new, general implicit result, I would just throw it away.","user":"UNYPJU8DT","ts":"1616592020.148000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hZoE","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" Do you ( or anyone in this channel "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":" ) have any objections against getting rid of the implicit "},{"type":"text","text":"ADM","style":{"code":true}},{"type":"text","text":" optimizer in DataDriven? Since the parallel implicit algorithm is much more robust and makes more headaches for a new, general implicit result, I would just throw it away."}]}]}]},{"client_msg_id":"b9366fab-89dc-4ae1-89ea-feba100ec1de","type":"message","text":"Keep it. I think having archival methods for people to test is good for science, even if it's not recommended.","user":"U69BL50BF","ts":"1616595716.148800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BJrI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Keep it. I think having archival methods for people to test is good for science, even if it's not recommended."}]}]}]},{"client_msg_id":"4b0672bf-11b3-4f3e-9cda-0b55aa6748c6","type":"message","text":"Does anyone know why this test fails despite it appears the same things are evaluated?\n```sbml2reactionsystem: Test Failed at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/sbml2reactionsystem.jl:9\n  Expression: isequal(parmap, trueparmap)\n   Evaluated: isequal(Pair{Num,Float64}[k1 =&gt; 0.8], Pair{Num,Float64}[k1 =&gt; 0.8, k2 =&gt; 0.6])\nStacktrace:\n [1] top-level scope at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/sbml2reactionsystem.jl:9\n [2] include(::String) at ./client.jl:457\n [3] top-level scope at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/runtests.jl:9\n [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115\n [5] top-level scope at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/runtests.jl:9\n [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115\n [7] top-level scope at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/runtests.jl:9```\nStrangely, my MWE does not fail:\n```using EzXML, Symbolics, Test\n\ndoc = parsexml(\"\"\"&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;parameter id=\"k1\" value=\"1.\"/&gt;\"\"\")\n\nfunction build_par_map(parnodes::Vector{EzXML.Node})\n    ids = @. Num(Variable(Symbol(getindex(parnodes, \"id\"))))\n    vals = @. Float64(Meta.parse(getindex(parnodes, \"value\")))\n    ids .=&gt; vals\nend\n\ntrueparmap = [Num(Variable(:k1)) =&gt; 1., Num(Variable(:k1)) =&gt; 1.]\nparmap = build_par_map([doc.root, doc.root])\n\n@test isequal(parmap, trueparmap)```","user":"UQJA15XNF","ts":"1616712722.153100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6IaCd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know why this test fails despite it appears the same things are evaluated?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"sbml2reactionsystem: Test Failed at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/sbml2reactionsystem.jl:9\n  Expression: isequal(parmap, trueparmap)\n   Evaluated: isequal(Pair{Num,Float64}[k1 => 0.8], Pair{Num,Float64}[k1 => 0.8, k2 => 0.6])\nStacktrace:\n [1] top-level scope at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/sbml2reactionsystem.jl:9\n [2] include(::String) at ./client.jl:457\n [3] top-level scope at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/runtests.jl:9\n [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115\n [5] top-level scope at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/runtests.jl:9\n [6] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115\n [7] top-level scope at /media/sf_DPhil_Project/Programmes/juliadev/dev/SBML.jl/test/runtests.jl:9"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Strangely, my MWE does not fail:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using EzXML, Symbolics, Test\n\ndoc = parsexml(\"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<parameter id=\"k1\" value=\"1.\"/>\"\"\")\n\nfunction build_par_map(parnodes::Vector{EzXML.Node})\n    ids = @. Num(Variable(Symbol(getindex(parnodes, \"id\"))))\n    vals = @. Float64(Meta.parse(getindex(parnodes, \"value\")))\n    ids .=> vals\nend\n\ntrueparmap = [Num(Variable(:k1)) => 1., Num(Variable(:k1)) => 1.]\nparmap = build_par_map([doc.root, doc.root])\n\n@test isequal(parmap, trueparmap)"}]}]}]},{"client_msg_id":"7cded0a5-0678-4efd-adfd-98ad748266c3","type":"message","text":"`isequal(Pair{Num,Float64}[k1 =&gt; 0.8], Pair{Num,Float64}[k1 =&gt; 0.8, k2 =&gt; 0.6])`","user":"U69BL50BF","ts":"1616723139.153300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fxz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"isequal(Pair{Num,Float64}[k1 => 0.8], Pair{Num,Float64}[k1 => 0.8, k2 => 0.6])","style":{"code":true}}]}]}]},{"client_msg_id":"32906f9f-20ad-4926-8a05-64e2326a2dd8","type":"message","text":"those are not the same.","user":"U69BL50BF","ts":"1616723143.153500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sie1l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"those are not the same."}]}]}]},{"client_msg_id":"d3092a7a-46b7-43a2-9ce9-ae9344cb96d4","type":"message","text":"Is there any reason for not implementing a 5-arg `mul!` for `AbstractDiffEqLinearOperator`? If not, should I try a small PR?","user":"UB197FRCL","ts":"1616737278.154300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i7yW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any reason for not implementing a 5-arg "},{"type":"text","text":"mul!","style":{"code":true}},{"type":"text","text":" for "},{"type":"text","text":"AbstractDiffEqLinearOperator","style":{"code":true}},{"type":"text","text":"? If not, should I try a small PR?"}]}]}],"thread_ts":"1616737278.154300","reply_count":2,"reply_users_count":1,"latest_reply":"1616739034.154700","reply_users":["UB197FRCL"],"is_locked":false,"subscribed":false},{"client_msg_id":"03d0b310-cd13-42d5-af04-de29c82cbbf0","type":"message","text":"On a DiffEqOpeators.jl-related note, I keep getting\n```WARNING: Method definition *(Number, SciMLBase.AbstractDiffEqLinearOperator{T}) where {T} in module SciMLBase at /Users/benoitpasquier/.julia/dev/SciMLBase/src/operators/common_defaults.jl:15 overwritten in module DiffEqOperators at /Users/benoitpasquier/.julia/packages/DiffEqOperators/5mEx8/src/composite_operators.jl:20.\n  ** incremental compilation may be fatally broken for this module **\n\nWARNING: Method definition *(Number, SciMLBase.AbstractDiffEqLinearOperator{T}) where {T} in module SciMLBase at /Users/benoitpasquier/.julia/dev/SciMLBase/src/operators/common_defaults.jl:15 overwritten in module DiffEqOperators at /Users/benoitpasquier/.julia/packages/DiffEqOperators/5mEx8/src/composite_operators.jl:20.\n  ** incremental compilation may be fatally broken for this module **```\nwhich I think might just be a small oversight of some piece of code that was moved from DiffEqOperators into SciMLBase, but not sure","user":"UB197FRCL","ts":"1616739501.156000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aP55","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"On a DiffEqOpeators.jl-related note, I keep getting\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"WARNING: Method definition *(Number, SciMLBase.AbstractDiffEqLinearOperator{T}) where {T} in module SciMLBase at /Users/benoitpasquier/.julia/dev/SciMLBase/src/operators/common_defaults.jl:15 overwritten in module DiffEqOperators at /Users/benoitpasquier/.julia/packages/DiffEqOperators/5mEx8/src/composite_operators.jl:20.\n  ** incremental compilation may be fatally broken for this module **\n\nWARNING: Method definition *(Number, SciMLBase.AbstractDiffEqLinearOperator{T}) where {T} in module SciMLBase at /Users/benoitpasquier/.julia/dev/SciMLBase/src/operators/common_defaults.jl:15 overwritten in module DiffEqOperators at /Users/benoitpasquier/.julia/packages/DiffEqOperators/5mEx8/src/composite_operators.jl:20.\n  ** incremental compilation may be fatally broken for this module **"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which I think might just be a small oversight of some piece of code that was moved from DiffEqOperators into SciMLBase, but not sure"}]}]}]},{"client_msg_id":"4943ebde-9169-40cb-8d33-b31cadd09693","type":"message","text":"seems like it","user":"U69BL50BF","ts":"1616752206.156600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CVa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"seems like it"}]}]}]},{"client_msg_id":"543b482e-7a03-4e80-b863-82a3fb6b10ad","type":"message","text":"there should be an easy fix for that though.","user":"U69BL50BF","ts":"1616752217.156900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4bXW9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there should be an easy fix for that though."}]}]}]},{"client_msg_id":"c8d1846c-95db-4037-b992-641020cdf722","type":"message","text":"Let me try to understand.\n• in SciMLBase `a * L` \"materializes\" the operator and turns it into the matrix `a * L.A`,\n• in DiffEqOperators, `a * L` creates a (lazy?) `ScaledDiffEqOperator`. \nI guess the DiffEqOperators has the the most advanced approach (and could nicely use things like the scalar arguments of the 5-arg `mul!` actually I guess?). But I'm not sure you'd want to remove the SciMLBase fallback. What would the easy fix be?","user":"UB197FRCL","ts":"1616754087.161800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KFO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let me try to understand.\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in SciMLBase "},{"type":"text","text":"a * L","style":{"code":true}},{"type":"text","text":" \"materializes\" the operator and turns it into the matrix "},{"type":"text","text":"a * L.A","style":{"code":true}},{"type":"text","text":","}]},{"type":"rich_text_section","elements":[{"type":"text","text":"in DiffEqOperators, "},{"type":"text","text":"a * L","style":{"code":true}},{"type":"text","text":" creates a (lazy?) "},{"type":"text","text":"ScaledDiffEqOperator","style":{"code":true}},{"type":"text","text":". "}]}],"style":"bullet","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"I guess the DiffEqOperators has the the most advanced approach (and could nicely use things like the scalar arguments of the 5-arg "},{"type":"text","text":"mul!","style":{"code":true}},{"type":"text","text":" actually I guess?). But I'm not sure you'd want to remove the SciMLBase fallback. What would the easy fix be?"}]}]}]},{"client_msg_id":"479f268c-0f75-4631-b2b1-7ee8acdd665b","type":"message","text":"&gt; But I'm not sure you'd want to remove the SciMLBase fallback. What would the easy fix be?\n\nThe fallback isn't intended.","user":"U69BL50BF","ts":"1616755287.162100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xitdn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> But I'm not sure you'd want to remove the SciMLBase fallback. What would the easy fix be?\n\nThe fallback isn't intended."}]}]}]},{"client_msg_id":"5da1a035-1a06-463c-a696-68538c9b9611","type":"message","text":"So remove the `*` operation in <https://github.com/SciML/SciMLBase.jl/blob/4a95d3d1bd42c7bd7c13b8babdc2ee61188fbf8b/src/operators/common_defaults.jl#L13-L16>? I.e., remove the `*` in the first line below:\n```for op in (:*, :/, :\\), T in (:AbstractArray, :Number)\n  @eval Base.$op(L::AbstractDiffEqLinearOperator, x::$T) = $op(convert(AbstractMatrix,L), x)\n  @eval Base.$op(x::$T, L::AbstractDiffEqLinearOperator) = $op(x, convert(AbstractMatrix,L))\nend```","user":"UB197FRCL","ts":"1616756191.162900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dQw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So remove the "},{"type":"text","text":"*","style":{"code":true}},{"type":"text","text":" operation in "},{"type":"link","url":"https://github.com/SciML/SciMLBase.jl/blob/4a95d3d1bd42c7bd7c13b8babdc2ee61188fbf8b/src/operators/common_defaults.jl#L13-L16"},{"type":"text","text":"? I.e., remove the "},{"type":"text","text":"*","style":{"code":true}},{"type":"text","text":" in the first line below:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for op in (:*, :/, :\\), T in (:AbstractArray, :Number)\n  @eval Base.$op(L::AbstractDiffEqLinearOperator, x::$T) = $op(convert(AbstractMatrix,L), x)\n  @eval Base.$op(x::$T, L::AbstractDiffEqLinearOperator) = $op(x, convert(AbstractMatrix,L))\nend"}]}]}]},{"client_msg_id":"2c2f3e18-129d-4d74-8b62-aad0147369a0","type":"message","text":"I think so.","user":"U69BL50BF","ts":"1616756333.163100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A4Vm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think so."}]}]}]},{"client_msg_id":"8b60e468-2474-41fe-96ab-633bdb00d19e","type":"message","text":"Oh wait, you just want to remove the case of `a * L` where `a` is scalar. You want to keep the case where `a` is an array I think (I don't think there is an issue there that popped up for me).","user":"UB197FRCL","ts":"1616756537.164500","team":"T68168MUP","edited":{"user":"UB197FRCL","ts":"1616756556.000000"},"blocks":[{"type":"rich_text","block_id":"V6l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh wait, you just want to remove the case of "},{"type":"text","text":"a * L","style":{"code":true}},{"type":"text","text":" where "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" is scalar. You want to keep the case where "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" is an array I think (I don't think there is an issue there that popped up for me)."}]}]}]},{"client_msg_id":"1e164ce8-261b-483e-9a6e-00f5bc7c25e5","type":"message","text":"So maybe remove the `T isa Number` case (`T` is the type of `a`)","user":"UB197FRCL","ts":"1616756677.165200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0Kg=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So maybe remove the "},{"type":"text","text":"T isa Number","style":{"code":true}},{"type":"text","text":" case ("},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" is the type of "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":")"}]}]}]},{"client_msg_id":"7c05a58e-a4e2-44ac-852f-086ae13f6bc9","type":"message","text":"My (improved?) understanding is that you only want to convert to a matrix when you actually do a matrix–vector (or matrix–matrix) operation. If it's something like `a * L` or `L / a` with a scalar `a`, then you want this to be lazy, right?","user":"UB197FRCL","ts":"1616756809.167800","team":"T68168MUP","edited":{"user":"UB197FRCL","ts":"1616756840.000000"},"blocks":[{"type":"rich_text","block_id":"TLc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My (improved?) understanding is that you only want to convert to a matrix when you actually do a matrix–vector (or matrix–matrix) operation. If it's something like "},{"type":"text","text":"a * L","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"L / a","style":{"code":true}},{"type":"text","text":" with a scalar "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":", then you want this to be lazy, right?"}]}]}]},{"client_msg_id":"a7ddecb2-cc95-494a-bf82-74822b454731","type":"message","text":"yes, lazy should be preferred.","user":"U69BL50BF","ts":"1616756979.168800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7QNrn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, lazy should be preferred."}]}]}]},{"client_msg_id":"e70ea949-4b86-4c77-a06f-be95e17be4cd","type":"message","text":"OK So I suggested this removal here FWIW: <https://github.com/SciML/SciMLBase.jl/pull/41> (I know it's just a PR, but it's still a bit scary for me to edit anything in (SciML)Base, I feel like it's going to break lots of stuff! :sweat_smile:)","user":"UB197FRCL","ts":"1616757365.171100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DfJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK So I suggested this removal here FWIW: "},{"type":"link","url":"https://github.com/SciML/SciMLBase.jl/pull/41"},{"type":"text","text":" (I know it's just a PR, but it's still a bit scary for me to edit anything in (SciML)Base, I feel like it's going to break lots of stuff! "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":")"}]}]}]},{"client_msg_id":"fa75789a-d4a3-4b92-8b25-6a80a2e2f3a5","type":"message","text":"Thanks for all the answers and feedback!","user":"UB197FRCL","ts":"1616757394.171400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LL7C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for all the answers and feedback!"}]}]}]},{"client_msg_id":"a4d0c890-b2d7-459a-9e19-382ea7148b81","type":"message","text":"BTW I find it hard (impossible?) to decipher the error message in the failing tests <https://github.com/SciML/SciMLBase.jl/runs/2201300315?check_suite_focus=true> so I'm not sure how to help any further","user":"UB197FRCL","ts":"1616757673.173000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uIFT3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW I find it hard (impossible?) to decipher the error message in the failing tests "},{"type":"link","url":"https://github.com/SciML/SciMLBase.jl/runs/2201300315?check_suite_focus=true"},{"type":"text","text":" so I'm not sure how to help any further"}]}]}]},{"client_msg_id":"8aeaa7ed-d147-4303-9b56-8d8e43884747","type":"message","text":"interesting. It's erroring because there's an ambiguity found.","user":"U69BL50BF","ts":"1616757793.173700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c9Kl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting. It's erroring because there's an ambiguity found."}]}]}]},{"type":"message","text":"I recently saw a presentation that assert the adjoint methods is inferior in terms pf precision of the backward pass compared backward propagation through time.\nDoes that hold in this generality?\nWhere can i learn more about BPTT? (Is it supported in Julia)\nCan i use this insight to get more robust parameter estimation of classical differential equations too?","user":"U9MD78Z9N","ts":"1616758771.173800","team":"T68168MUP"},{"client_msg_id":"bbf7d882-e6c9-4d9b-961d-105065f210cb","type":"message","text":"yes, we'll be putting up a preprint soon on this topic.","user":"U69BL50BF","ts":"1616758996.174100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zoP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, we'll be putting up a preprint soon on this topic."}]}]}]},{"client_msg_id":"41373f88-ef67-44e3-9fae-401affd36d31","type":"message","text":"but yes, there's some old proofs about consistency of backprop on integrators.","user":"U69BL50BF","ts":"1616759023.174500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FXOWg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but yes, there's some old proofs about consistency of backprop on integrators."}]}]}]},{"type":"message","text":"The presentation where this came up was this: <https://www.youtube.com/watch?v=9AxYrmUlA0I> which i foound excellent. The presenter is from MIT or something like that.","user":"U9MD78Z9N","ts":"1616759212.174600","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1616759317.000000"},"attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"Liquid Time Constant Networks","title_link":"https://www.youtube.com/watch?v=9AxYrmUlA0I","author_name":"Simons Institute","author_link":"https://www.youtube.com/user/SimonsInstitute","thumb_url":"https://i.ytimg.com/vi/9AxYrmUlA0I/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: Liquid Time Constant Networks","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/9AxYrmUlA0I?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://www.youtube.com/watch?v=9AxYrmUlA0I","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://www.youtube.com/watch?v=9AxYrmUlA0I"}]},{"client_msg_id":"c38029a7-1be4-4916-b4d5-534fdecbbfaa","type":"message","text":"yes, in Daniela's lab and we've been talking with him.","user":"U69BL50BF","ts":"1616759356.175100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LeWx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, in Daniela's lab and we've been talking with him."}]}]}]},{"client_msg_id":"a24a2e93-5974-40ee-8a14-0739f25bb72f","type":"message","text":"BPTT is just a fancy term for backprop on the integration code though.","user":"U69BL50BF","ts":"1616759562.175500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4tSCE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BPTT is just a fancy term for backprop on the integration code though."}]}]}]},{"type":"message","text":"That's what i needed to hear.","user":"U9MD78Z9N","ts":"1616759954.175600","team":"T68168MUP"},{"client_msg_id":"f58a8d82-47ee-4115-a207-be9137765295","type":"message","text":"I'm getting a weird error with Flux/DiffEqFlux with a simple loss function when I try to train. I'm not sure why it's giving me a `ERROR: LoadError: MethodError: no method matching +(::Float64, ::Array{Float64,2}` . Loss function works when I evaluate it myself. Could anyone help me with suggestions for how to debug or better code it? Simplified code below. (It'll be part of a slightly bigger SciML problem, which is why I'd like to use DiffEqFlux)\n\n```U = FastChain(FastDense(1, 10, sigmoid), FastDense(10, 1))\nfunction loss(θ)\n    # Evaluate U neural network at y and return scalar\n    nn_windspeed = y -&gt; U(y, θ)[1]\n    \n    y = -5:0.1:5\n    windspeeds = nn_windspeed.(y)\n    truewinds = y.^2\n\n    return sum(abs2, (windspeeds .- truewinds))\nend\nDiffEqFlux.sciml_train(loss, initial_params(U), ADAM(1.0e-2), maxiters = 200)```","user":"U0138UTB7A4","ts":"1616788506.177700","team":"T68168MUP","edited":{"user":"U0138UTB7A4","ts":"1616788562.000000"},"blocks":[{"type":"rich_text","block_id":"8AY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm getting a weird error with Flux/DiffEqFlux with a simple loss function when I try to train. I'm not sure why it's giving me a "},{"type":"text","text":"ERROR: LoadError: MethodError: no method matching +(::Float64, ::Array{Float64,2}","style":{"code":true}},{"type":"text","text":" . Loss function works when I evaluate it myself. Could anyone help me with suggestions for how to debug or better code it? Simplified code below. (It'll be part of a slightly bigger SciML problem, which is why I'd like to use DiffEqFlux)\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"U = FastChain(FastDense(1, 10, sigmoid), FastDense(10, 1))\nfunction loss(θ)\n    # Evaluate U neural network at y and return scalar\n    nn_windspeed = y -> U(y, θ)[1]\n    \n    y = -5:0.1:5\n    windspeeds = nn_windspeed.(y)\n    truewinds = y.^2\n\n    return sum(abs2, (windspeeds .- truewinds))\nend\nDiffEqFlux.sciml_train(loss, initial_params(U), ADAM(1.0e-2), maxiters = 200)"}]}]}]},{"client_msg_id":"410a2cea-30c4-4ea2-b4ae-eb9d3939201c","type":"message","text":"our equation is actually\nS du/dt = Dx(T (Dx(u)))\nS is a capacity term. Sometimes, in parts or all of the domain, S is 0. In our traditional setup that's allowed. Having S=0 turns that part of the domain into steady state problems. And the problem is solvable. However, in ODEproblems, we have to re-write it as\n\ndu/dt = 1/S Dx(T (Dx(u)))\n\nBut this will not work because I will have to do\nSinv= 1./S; Sinv[S.&lt;=0].=0\n\nThen all matrix terms will be set to 0 for the parts where S=0. Imagine this is for the whole domain, then every matrix entry is 0 and it is unsolvable.\n\nAny solution? S seems to be different from the mass matrix.","user":"U01CFQU8UFL","ts":"1616860495.180500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yCjT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"our equation is actually\nS du/dt = Dx(T (Dx(u)))\nS is a capacity term. Sometimes, in parts or all of the domain, S is 0. In our traditional setup that's allowed. Having S=0 turns that part of the domain into steady state problems. And the problem is solvable. However, in ODEproblems, we have to re-write it as\n\ndu/dt = 1/S Dx(T (Dx(u)))\n\nBut this will not work because I will have to do\nSinv= 1./S; Sinv[S.<=0].=0\n\nThen all matrix terms will be set to 0 for the parts where S=0. Imagine this is for the whole domain, then every matrix entry is 0 and it is unsolvable.\n\nAny solution? S seems to be different from the mass matrix."}]}]}]},{"client_msg_id":"3435a039-0365-4134-8ed7-e0ebaf86dfab","type":"message","text":"<@U01CFQU8UFL> That is equivalent to a mass matrix.","user":"U69BL50BF","ts":"1616952376.181000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JzIPS","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01CFQU8UFL"},{"type":"text","text":" That is equivalent to a mass matrix."}]}]}]},{"client_msg_id":"2ff97af7-921f-4802-9c2d-38eb69a124a9","type":"message","text":"If it's a scalar just use a diagonal MM","user":"U69BL50BF","ts":"1616952387.181300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CJ1Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it's a scalar just use a diagonal MM"}]}]}],"thread_ts":"1616952387.181300","reply_count":3,"reply_users_count":2,"latest_reply":"1616953874.181800","reply_users":["U01CFQU8UFL","U69BL50BF"],"is_locked":false,"subscribed":false},{"client_msg_id":"76f46174-4e0b-4d2d-9d16-31a32cc6fa7b","type":"message","text":"How do you computational biology/chemistry types model a large but discrete number of 3 interacting molecules in chemical reactions? Or does that not really happen in the real world? Do you do that with enzymes?","user":"U7Z4938R3","ts":"1617028909.182600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QAup","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do you computational biology/chemistry types model a large but discrete number of 3 interacting molecules in chemical reactions? Or does that not really happen in the real world? Do you do that with enzymes?"}]}]}]},{"client_msg_id":"cb79c510-53b8-4f3c-9d00-a7c8f72cba17","type":"message","text":"Tau-leaping methods","user":"U69BL50BF","ts":"1617028938.182800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wzu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Tau-leaping methods"}]}]}]},{"client_msg_id":"4a710fa0-ead3-4366-ac84-058ef348cfd4","type":"message","text":"What is the mathematical model they implement? Can you express like a markov chain?","user":"U7Z4938R3","ts":"1617029270.182900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zs0t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the mathematical model they implement? Can you express like a markov chain?"}]}]}]},{"client_msg_id":"29bd393a-4f17-4cc8-a509-d75940d83978","type":"message","text":"it's an approximation to a continuous-time markov chain","user":"U69BL50BF","ts":"1617029310.183200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zRa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's an approximation to a continuous-time markov chain"}]}]}]},{"client_msg_id":"4b9cf29a-2328-4ecd-8154-d6830a58ecc1","type":"message","text":"transforming it into a discrete time markov chain with Poisson jumps","user":"U69BL50BF","ts":"1617029320.183500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q61","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"transforming it into a discrete time markov chain with Poisson jumps"}]}]}]},{"client_msg_id":"d1574f83-b686-47f2-9062-3b9f447e3a5d","type":"message","text":"Ok, sorry for the imprecision. Given a markov chain I understand the calculation roughly using those tricks, but how do you describe the dynamics of 3 interacting molecules in a markov chain? Is there a toy example? I know how to implement these things with 2 interacting things, but not sure what 3 looks like.","user":"U7Z4938R3","ts":"1617029419.183600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1fn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, sorry for the imprecision. Given a markov chain I understand the calculation roughly using those tricks, but how do you describe the dynamics of 3 interacting molecules in a markov chain? Is there a toy example? I know how to implement these things with 2 interacting things, but not sure what 3 looks like."}]}]}]},{"client_msg_id":"7a2a7bbd-9676-4208-a342-4847cdacb6aa","type":"message","text":"Is this how enzymes are modeled and calculated?","user":"U7Z4938R3","ts":"1617029441.183700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kzl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this how enzymes are modeled and calculated?"}]}]}]},{"client_msg_id":"bbf8d169-edf4-45dd-8561-981e068cac93","type":"message","text":"Yes Michalis-Menton enzyme kinetics is a classic 3 system","user":"U69BL50BF","ts":"1617029583.184200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/EZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes Michalis-Menton enzyme kinetics is a classic 3 system"}]}]}],"thread_ts":"1617029583.184200","reply_count":1,"reply_users_count":1,"latest_reply":"1617031174.184600","reply_users":["U7Z4938R3"],"is_locked":false,"subscribed":false},{"client_msg_id":"c9eee8ad-2dad-41f1-ac09-de0f69815786","type":"message","text":"note that you always assume that only two things interact at a time though","user":"U69BL50BF","ts":"1617029593.184500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ILJvm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"note that you always assume that only two things interact at a time though"}]}]}]},{"type":"message","text":"It’s in the definition of a Poisson process, the first clause says that in a short time not more than one event happens","files":[{"id":"F01TF24U7NU","created":1617043242,"timestamp":1617043242,"name":"Screenshot 2021-03-29 at 20.40.01.png","title":"Screenshot 2021-03-29 at 20.40.01.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U6C937ENB","editable":false,"size":31643,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01TF24U7NU/screenshot_2021-03-29_at_20.40.01.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01TF24U7NU/download/screenshot_2021-03-29_at_20.40.01.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01TF24U7NU-9ed85428f8/screenshot_2021-03-29_at_20.40.01_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01TF24U7NU-9ed85428f8/screenshot_2021-03-29_at_20.40.01_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01TF24U7NU-9ed85428f8/screenshot_2021-03-29_at_20.40.01_360.png","thumb_360_w":360,"thumb_360_h":51,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01TF24U7NU-9ed85428f8/screenshot_2021-03-29_at_20.40.01_480.png","thumb_480_w":480,"thumb_480_h":68,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01TF24U7NU-9ed85428f8/screenshot_2021-03-29_at_20.40.01_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01TF24U7NU-9ed85428f8/screenshot_2021-03-29_at_20.40.01_720.png","thumb_720_w":720,"thumb_720_h":102,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01TF24U7NU-9ed85428f8/screenshot_2021-03-29_at_20.40.01_800.png","thumb_800_w":800,"thumb_800_h":113,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01TF24U7NU-9ed85428f8/screenshot_2021-03-29_at_20.40.01_960.png","thumb_960_w":960,"thumb_960_h":136,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01TF24U7NU-9ed85428f8/screenshot_2021-03-29_at_20.40.01_1024.png","thumb_1024_w":1024,"thumb_1024_h":145,"original_w":1176,"original_h":166,"thumb_tiny":"AwAGADDTOe2KOfaiigBOfUU3JFPph/xoAXP8qdUfp9KkoA//2Q==","permalink":"https://julialang.slack.com/files/U6C937ENB/F01TF24U7NU/screenshot_2021-03-29_at_20.40.01.png","permalink_public":"https://slack-files.com/T68168MUP-F01TF24U7NU-b8c86d55f0","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"=lULm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s in the definition of a Poisson process, the first clause says that in a short time not more than one event happens"}]}]}],"user":"U6C937ENB","display_as_bot":false,"ts":"1617043274.188400"},{"client_msg_id":"c9e6f692-d44c-4186-b038-11ae9ca9245d","type":"message","text":"Is Petzold, Cao and Gillespie from the mid 2000s still state of the art for tau leaping?","user":"U677NAWV8","ts":"1617060431.190300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DW2i+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is Petzold, Cao and Gillespie from the mid 2000s still state of the art for tau leaping?"}]}]}]}]}