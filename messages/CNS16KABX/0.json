{"cursor": 0, "messages": [{"type":"message","subtype":"channel_join","ts":"1612326840.000200","user":"U01HK5WRVJT","text":"<@U01HK5WRVJT> has joined the channel"},{"type":"message","subtype":"channel_join","ts":"1612911034.000400","user":"U01MRRU542G","text":"<@U01MRRU542G> has joined the channel"},{"type":"message","subtype":"channel_join","ts":"1613001618.000600","user":"U01KXPUPHL2","text":"<@U01KXPUPHL2> has joined the channel"},{"type":"message","subtype":"channel_join","ts":"1615785808.000200","user":"U01N7F3RC76","text":"<@U01N7F3RC76> has joined the channel"},{"type":"message","subtype":"channel_join","ts":"1615867757.000200","user":"ULWFF2Z8U","text":"<@ULWFF2Z8U> has joined the channel"},{"type":"message","subtype":"bot_message","text":"Hello! I am trying to use a `LazySum` of `LazyTensor` operators called `op`. I can execute `op * ket` successfully, but not `mul!(out_ket, op, ket)`. With the latter I get a method mismatch error. I would like to do the latter for benchmarking.  I see QuantumOptics calls `QuantumOpticsBase.mul!()` internally (is QuantumOpticsBase not overloading `Base.mul!`?), but this doesn't work for me either. Should this be working?","ts":"1615937921.000300","username":"[gitter] <amilsted>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Hello! I am trying to use a `LazySum` of `LazyTensor` operators called `op`. I can execute `op * ket` successfully, but not `mul!(out_ket, op, ket)`. With the latter I get a method mismatch error. I would like to do the latter for benchmarking.  I see QuantumOptics calls `QuantumOpticsBase.mul!()` internally (is QuantumOpticsBase not overloading `Base.mul!`?), but this doesn't work for me either. Should this be working?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"On a related matter, how careful are the `LazySum` and `LazyTensor` implementations of `mul!()` or `gemm!()` with memory allocation?","ts":"1615938042.000400","username":"[gitter] <amilsted>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"On a related matter, how careful are the `LazySum` and `LazyTensor` implementations of `mul!()` or `gemm!()` with memory allocation?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"PS: Thanks to the devs of QuantumOptics. It's very cool!","ts":"1615938091.000500","username":"[gitter] <amilsted>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"PS: Thanks to the devs of QuantumOptics. It's very cool!","verbatim":false}}]}]}