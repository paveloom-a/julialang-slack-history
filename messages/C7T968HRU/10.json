{"cursor": 9, "messages": [{"client_msg_id":"e1bd020c-f91b-4807-9c1c-1c1df368096e","type":"message","text":"and physics-informed neural networks","user":"U69BL50BF","ts":"1611868090.125000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8848f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and physics-informed neural networks"}]}]}]},{"client_msg_id":"9ad3cbd4-42e5-4711-baf0-f8bb2ad4a688","type":"message","text":"<https://neuralpde.sciml.ai/dev/pinn/system/>","user":"U69BL50BF","ts":"1611868102.125200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kkc","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://neuralpde.sciml.ai/dev/pinn/system/"}]}]}]},{"client_msg_id":"d3c007e1-826c-43ff-8250-35a694d3f624","type":"message","text":"but those are much more the current research","user":"U69BL50BF","ts":"1611868109.125500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mWFP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but those are much more the current research"}]}]}]},{"type":"message","subtype":"bot_message","text":"@ChrisRackauckas I found a good MWE in the doc ;)  <https://diffeqflux.sciml.ai/dev/examples/minibatch/>  Doesn't work anymore:  ``` julia&gt; res1 = DiffEqFlux.sciml_train(loss_adjoint, pp, ADAM(0.05), ncycle(train_loader, numEpochs), cb = cb, maxiters = numEpochs) ERROR: MethodError: no method matching sciml_train(::typeof(loss_adjoint), ::Array{Float32,1}, ::ADAM, ::IterTools.NCycle{Flux.Data.DataLoader{Tuple{Array{Float32,2},StepRangeLen{Float32,Float64,Float64}}}}; cb=var\"#5#7\"(), maxiters=300) Closest candidates are:   sciml_train(::Any, ::Any, ::Any) at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:1 got unsupported keyword arguments \"cb\", \"maxiters\"   sciml_train(::Any, ::Any, ::Any, ::DiffEqBase.AbstractADType, ::Any...; kwargs...) at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:1 ```","ts":"1611868282.125600","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"@ChrisRackauckas I found a good MWE in the doc ;)\n\n<https://diffeqflux.sciml.ai/dev/examples/minibatch/>\n\nDoesn't work anymore:\n\n```\njulia&gt; res1 = DiffEqFlux.sciml_train(loss_adjoint, pp, ADAM(0.05), ncycle(train_loader, numEpochs), cb = cb, maxiters = numEpochs)\nERROR: MethodError: no method matching sciml_train(::typeof(loss_adjoint), ::Array{Float32,1}, ::ADAM, ::IterTools.NCycle{Flux.Data.DataLoader{Tuple{Array{Float32,2},StepRangeLen{Float32,Float64,Float64}}}}; cb=var\"#5#7\"(), maxiters=300)\nClosest candidates are:\n  sciml_train(::Any, ::Any, ::Any) at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:1 got unsupported keyword arguments \"cb\", \"maxiters\"\n  sciml_train(::Any, ::Any, ::Any, ::DiffEqBase.AbstractADType, ::Any...; kwargs...) at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:1\n```","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Oh well I'll just pin to an old version I know works for me while it stabilizes :)","ts":"1611868436.125700","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Oh well I'll just pin to an old version I know works for me while it stabilizes :)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Oh boy it's DiffEqFlux v1.24.0, that's old. Well if it works it works","ts":"1611869046.125800","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Oh boy it's DiffEqFlux v1.24.0, that's old. Well if it works it works","verbatim":false}}]},{"client_msg_id":"5db6ae23-c7c0-462c-bb11-13a199892ac7","type":"message","text":"oh I may need to go back through that.","user":"U69BL50BF","ts":"1611870068.126000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uSj99","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh I may need to go back through that."}]}]}]},{"type":"message","subtype":"bot_message","text":"Thanks, @ChrisRackauckas !","ts":"1611870229.126100","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Thanks, @ChrisRackauckas !","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Can you maybe elucidate what you mean by \"index them at the spot\"?  Using [the Gierer-Meinhardt example](<https://tutorials.sciml.ai/html/introduction/03-optimizing_diffeq_code.html>), what I did so far is fill arrays using  sth like `pM = [prod(ui,vi) for vi in 1:N, ui in 1:N]` and then replacing the scalars here: `dr[:,:,1] = Du .+ pM .- dM.*u`","ts":"1611870950.126200","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Can you maybe elucidate what you mean by \"index them at the spot\"? \nUsing [the Gierer-Meinhardt example](<https://tutorials.sciml.ai/html/introduction/03-optimizing_diffeq_code.html>), what I did so far is fill arrays using  sth like `pM = [prod(ui,vi) for vi in 1:N, ui in 1:N]` and then replacing the scalars here: `dr[:,:,1] = Du .+ pM .- dM.*u`","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"..seems to work!","ts":"1611871470.126300","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"..seems to work!","verbatim":false}}]},{"client_msg_id":"ea0074dd-4508-41e5-a0a1-f37252ac55aa","type":"message","text":"Does anyone know how `DiffEqFlux` gets around Zygote not allowing array mutation? There's very clearly array mutation going on in an in-place ODEProblem.","user":"U01H36BUDJB","ts":"1611914304.127500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rqe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know how "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":" gets around Zygote not allowing array mutation? There's very clearly array mutation going on in an in-place ODEProblem."}]}]}]},{"client_msg_id":"3de898a8-5b63-4407-897a-6a2757195a28","type":"message","text":"ReverseDiff element-wise reverse","user":"U69BL50BF","ts":"1611914696.127900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"icgz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ReverseDiff element-wise reverse"}]}]}]},{"client_msg_id":"4731e1b5-d803-4e8a-bf3c-6b6b5ac25d11","type":"message","text":"wait so it doesn't use Zygote?","user":"U01H36BUDJB","ts":"1611914732.128100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OWzab","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"wait so it doesn't use Zygote?"}]}]}]},{"client_msg_id":"10a99494-b095-4b9b-bd02-872d41fcd571","type":"message","text":"it does","user":"U69BL50BF","ts":"1611914797.128300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wnx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it does"}]}]}]},{"client_msg_id":"9ed14718-5a44-47a6-b57b-ce30faa2974d","type":"message","text":"well that I'm really confused, I thought ReverseDiff and Zygote were two completely different AD tools.","user":"U01H36BUDJB","ts":"1611914829.128700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M=9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well that I'm really confused, I thought ReverseDiff and Zygote were two completely different AD tools."}]}]}]},{"client_msg_id":"0dfee84e-796b-43c8-9a17-a8e528096185","type":"message","text":"yes","user":"U69BL50BF","ts":"1611914833.128900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M9f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"7c7dd897-a1cd-4712-895d-27ea966089db","type":"message","text":":volcano:","user":"U69BL50BF","ts":"1611914838.129100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pdx=r","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"volcano"}]}]}]},{"client_msg_id":"f7cb0875-d334-44f2-9b12-0e57b5340770","type":"message","text":"there's two layers of differentiation","user":"U69BL50BF","ts":"1611914849.129400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fkP5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's two layers of differentiation"}]}]}]},{"client_msg_id":"a047b402-0a8d-4eee-b55d-794b4910a474","type":"message","text":"the user calls a Zygote derivative","user":"U69BL50BF","ts":"1611914864.129800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ID0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the user calls a Zygote derivative"}]}]}]},{"client_msg_id":"55e67b48-1b87-4fc6-a314-06c0052c6c0b","type":"message","text":"which uses an adjoint","user":"U69BL50BF","ts":"1611914870.130000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g4M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which uses an adjoint"}]}]}]},{"client_msg_id":"ab5425ac-d575-45a9-93e0-fafebdf03f3e","type":"message","text":"defined by higher order differentiation","user":"U69BL50BF","ts":"1611914875.130300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0osq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"defined by higher order differentiation"}]}]}]},{"client_msg_id":"0630ad2a-cd0a-45eb-8602-f193ca656791","type":"message","text":"where an ODE with ReverseDiff is used","user":"U69BL50BF","ts":"1611914882.130600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9j2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where an ODE with ReverseDiff is used"}]}]}]},{"client_msg_id":"fb4f3df3-18a6-44fc-a1b1-55cac72f716d","type":"message","text":"you can switch this around","user":"U69BL50BF","ts":"1611914886.130800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G+mY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can switch this around"}]}]}]},{"client_msg_id":"b92f5175-215a-44e6-8aa7-7e3237c86cfd","type":"message","text":"this is the `autojacvec` argument","user":"U69BL50BF","ts":"1611914892.131100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VaF2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is the "},{"type":"text","text":"autojacvec","style":{"code":true}},{"type":"text","text":" argument"}]}]}]},{"client_msg_id":"29941bfe-704f-45a4-b95a-862fa96c3b96","type":"message","text":"ah, I see.","user":"U01H36BUDJB","ts":"1611914906.131700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hbB+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, I see."}]}]}]},{"client_msg_id":"04e4b096-d925-4221-93f3-154f6cf8026d","type":"message","text":"`InterpolatingAdjoint(autojacvec=ReverseDiffVJP())` is the default on in-place ODEs","user":"U69BL50BF","ts":"1611914906.131800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z3E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"InterpolatingAdjoint(autojacvec=ReverseDiffVJP())","style":{"code":true}},{"type":"text","text":" is the default on in-place ODEs"}]}]}]},{"client_msg_id":"cc959ac9-823d-47d6-bc43-715f750067e4","type":"message","text":"So if you use Zygote for autojacvec you can't have an in-place ODE.","user":"U01H36BUDJB","ts":"1611914930.132200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zHi0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So if you use Zygote for autojacvec you can't have an in-place ODE."}]}]}]},{"client_msg_id":"aa12c31f-bf67-4eef-897d-3ce36c67ecac","type":"message","text":"yes","user":"U69BL50BF","ts":"1611914949.132600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SJBoL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"f490db79-4085-49d2-82e2-8c29bcbc6ae6","type":"message","text":"Seems like the performance benefit of Zygote would be negated by the GC.","user":"U01H36BUDJB","ts":"1611914958.132900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4IwN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems like the performance benefit of Zygote would be negated by the GC."}]}]}]},{"client_msg_id":"b381f6ad-bd05-4106-a6c9-d92b73e9cf4f","type":"message","text":"try it and you'll see the Zygote mutation error","user":"U69BL50BF","ts":"1611914960.133100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AIz3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"try it and you'll see the Zygote mutation error"}]}]}]},{"client_msg_id":"5d4473a1-4e8d-494a-99ae-62af17912ff1","type":"message","text":"no","user":"U69BL50BF","ts":"1611914968.133300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uaV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no"}]}]}]},{"client_msg_id":"8e41e2f1-9585-40c7-94c1-a30301799110","type":"message","text":"any reverse mode has to allocate","user":"U69BL50BF","ts":"1611914974.133500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pTU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"any reverse mode has to allocate"}]}]}]},{"client_msg_id":"bc0b3e28-3f9b-4950-bd3c-b6aa73e2069e","type":"message","text":"the only way to match it would be, if the assumptions of tape compilation are fine, to tape compile","user":"U69BL50BF","ts":"1611914996.134100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iYO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the only way to match it would be, if the assumptions of tape compilation are fine, to tape compile"}]}]}]},{"client_msg_id":"331f217a-f8c6-488e-b088-2aff366faf43","type":"message","text":"yeah but can't it pre-allocate...? the gradient sizes shouldn't change...","user":"U01H36BUDJB","ts":"1611914998.134200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qr3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah but can't it pre-allocate...? the gradient sizes shouldn't change..."}]}]}]},{"client_msg_id":"43b72b7b-f387-430f-8228-0d55c9aa31ee","type":"message","text":"`InterpolatingAdjoint(autojacvec=ReverseDiffVJP(true))`","user":"U69BL50BF","ts":"1611915009.134500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yxi7Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"InterpolatingAdjoint(autojacvec=ReverseDiffVJP(true))","style":{"code":true}}]}]}]},{"client_msg_id":"ed551536-d876-4dc7-9602-70220f85c13f","type":"message","text":"gradient sizes don't change, but you have to store the forward pass somewhere.","user":"U69BL50BF","ts":"1611915024.134900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"px05","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"gradient sizes don't change, but you have to store the forward pass somewhere."}]}]}]},{"client_msg_id":"329d4b55-3ac4-4a20-b747-c314ce06a0cb","type":"message","text":"ok, but can't that also be pre-allocated?","user":"U01H36BUDJB","ts":"1611915053.135400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eDJHk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, but can't that also be pre-allocated?"}]}]}]},{"client_msg_id":"cb456d21-0980-4395-8ee7-1a23b6736697","type":"message","text":"(I know autodiff is really hard, I'm just curious)","user":"U01H36BUDJB","ts":"1611915065.135800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fQp9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I know autodiff is really hard, I'm just curious)"}]}]}]},{"client_msg_id":"94db5daa-e19e-4975-8436-1f3440407e4d","type":"message","text":"\"`compile` is a boolean for whether to precompile the tape, which should only be done if there are no branches (`if` or `while` statements) in the `f` function\"\nis there a way around this restriction, similar to `cond` , `where`, or `while_loop` in Tensorflow? the `IfElse` package, maybe?","user":"U01H36BUDJB","ts":"1611915646.137200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nqqs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\""},{"type":"text","text":"compile","style":{"code":true}},{"type":"text","text":" is a boolean for whether to precompile the tape, which should only be done if there are no branches ("},{"type":"text","text":"if","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"while","style":{"code":true}},{"type":"text","text":" statements) in the "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" function\"\nis there a way around this restriction, similar to "},{"type":"text","text":"cond","style":{"code":true}},{"type":"text","text":" , "},{"type":"text","text":"where","style":{"code":true}},{"type":"text","text":", or "},{"type":"text","text":"while_loop","style":{"code":true}},{"type":"text","text":" in Tensorflow? the "},{"type":"text","text":"IfElse","style":{"code":true}},{"type":"text","text":" package, maybe?"}]}]}]},{"client_msg_id":"92209182-2a68-4f74-bf68-7d72b82b874d","type":"message","text":"not with ReverseDiff","user":"U69BL50BF","ts":"1611915683.137400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t4Dw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not with ReverseDiff"}]}]}]},{"client_msg_id":"0ee81caf-a2e4-4429-a813-047113d73bf9","type":"message","text":"though other AD packages like ReversePropogation could have a solution to it","user":"U69BL50BF","ts":"1611915696.137800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GwDW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"though other AD packages like ReversePropogation could have a solution to it"}]}]}]},{"client_msg_id":"1858bcba-4078-42a4-979c-f9ea8d8d97b1","type":"message","text":"a good AD package to use for this case would actually be Enzyme","user":"U69BL50BF","ts":"1611915715.138100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BFy/b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a good AD package to use for this case would actually be Enzyme"}]}]}]},{"client_msg_id":"b2dbb122-8d27-41e0-87a6-27bad9c6df91","type":"message","text":"we should setup a few more vjp options.","user":"U69BL50BF","ts":"1611915724.138400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sbdGn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we should setup a few more vjp options."}]}]}]},{"client_msg_id":"d7ac2e66-66d3-4e6f-aab8-51b32ebb4bac","type":"message","text":"ok... I think I'll just try to avoid `if` in the meantime. I guess theoretically some conditional logic could be encoded as callbacks.","user":"U01H36BUDJB","ts":"1611915796.139400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q4NE+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok... I think I'll just try to avoid "},{"type":"text","text":"if","style":{"code":true}},{"type":"text","text":" in the meantime. I guess theoretically some conditional logic could be encoded as callbacks."}]}]}]},{"client_msg_id":"b3ad57ea-7011-4558-b704-47a34bc62df8","type":"message","text":"or just multiplication","user":"U69BL50BF","ts":"1611915894.139600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1c8+m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or just multiplication"}]}]}]},{"client_msg_id":"0eb3f205-c652-4a4c-b256-a407759d1dbe","type":"message","text":"yeah true. I remember doing that a lot when writing GPU kernels haha","user":"U01H36BUDJB","ts":"1611915937.140000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4heg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah true. I remember doing that a lot when writing GPU kernels haha"}]}]}]},{"client_msg_id":"03528cfd-246f-47ea-99b3-ba00b7a13e6f","type":"message","text":"uh oh, new problem... can `p` not be an arbitrary object when using `DiffEqFlux`? I'm getting errors, looks like it expects it to be an array.","user":"U01H36BUDJB","ts":"1611916407.140800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DWiK9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uh oh, new problem... can "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" not be an arbitrary object when using "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":"? I'm getting errors, looks like it expects it to be an array."}]}]}]},{"client_msg_id":"db6d9bde-c673-4905-beda-b964a35ab5f8","type":"message","text":"no","user":"U69BL50BF","ts":"1611917328.141000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"khA/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no"}]}]}]},{"client_msg_id":"87d698df-fa32-4374-af7e-8f97607c1263","type":"message","text":"it needs to be some AbstractArray'","user":"U69BL50BF","ts":"1611917333.141200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"brn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it needs to be some AbstractArray'"}]}]}]},{"client_msg_id":"9af77f3b-e3b8-4189-8e05-1472f9f66926","type":"message","text":"since it needs to serve as the basis for an ODE solve","user":"U69BL50BF","ts":"1611917341.141500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6y6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"since it needs to serve as the basis for an ODE solve"}]}]}]},{"client_msg_id":"abf74a70-c387-4b74-985d-b408339e62c7","type":"message","text":"there are exceptions to that.","user":"U69BL50BF","ts":"1611917351.141700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PQHCT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there are exceptions to that."}]}]}]},{"client_msg_id":"53d7dd07-39fe-4479-a852-c33a2deb179e","type":"message","text":"oof","user":"U01H36BUDJB","ts":"1611919018.141900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5CP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oof"}]}]}]},{"client_msg_id":"c24836c7-1d3d-479c-af4e-cbac01abe988","type":"message","text":"this is really unfortunate. I might have to abandon SciML for my problem then... which makes me quite sad.","user":"U01H36BUDJB","ts":"1611919047.142500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vdw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is really unfortunate. I might have to abandon SciML for my problem then... which makes me quite sad."}]}]}]},{"type":"message","subtype":"bot_message","text":"It's a huge pain in the ass but I've resorted to stuffing everything in arrays and reconstructing the objects I want later... @ChrisRackauckas , the DiffEq doc says p can be anything (not in the DiffEqFlux setting, pure OrdinaryDiffEq), is it not true anymore ?","ts":"1611919780.142600","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"It's a huge pain in the ass but I've resorted to stuffing everything in arrays and reconstructing the objects I want later... @ChrisRackauckas , the DiffEq doc says p can be anything (not in the DiffEqFlux setting, pure OrdinaryDiffEq), is it not true anymore ?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"\" Note that the type for the parameters p can be anything: you can use arrays, static arrays, named tuples, etc. to enclose your parameters in a way that is sensible for your problem. \"","ts":"1611919816.142700","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"\" Note that the type for the parameters p can be anything: you can use arrays, static arrays, named tuples, etc. to enclose your parameters in a way that is sensible for your problem. \"","verbatim":false}}]},{"client_msg_id":"83661cb5-f09a-477e-ac66-5834e1d281ae","type":"message","text":"p can be anything if you aren't using `DiffEqFlux`. But I need `DiffEqFlux` . The problem with using arrays is that everything has to be the same type and the same(-ish) dimension, which doesn't really work for complex models that have many different kinds of parameters.","user":"U01H36BUDJB","ts":"1611920019.144000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dpcO=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"p can be anything if you aren't using `DiffEqFlux`. But I need "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":" . The problem with using arrays is that everything has to be the same type and the same(-ish) dimension, which doesn't really work for complex models that have many different kinds of parameters."}]}]}]},{"client_msg_id":"d87029a9-8ba4-4906-b970-e3a00762e07c","type":"message","text":"The good news is that it seems like using function closures works, i.e. you can build the step function inside of another function and thus enclose the outer functions parameters, which can be of any type. This seems to work with `DiffEqFlux` , but I'm not sure what the performance implications are.","user":"U01H36BUDJB","ts":"1611920107.145500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fc9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The good news is that it seems like using function closures works, i.e. you can build the step function inside of another function and thus enclose the outer functions parameters, which can be of any type. This seems to work with "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":" , but I'm not sure what the performance implications are."}]}]}]},{"client_msg_id":"a95df97c-bf6f-42e0-bb40-1e83858bed3d","type":"message","text":"I'm guessing that closures preclude certain kinds of optimizations from the compiler.","user":"U01H36BUDJB","ts":"1611920123.145900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P8cy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm guessing that closures preclude certain kinds of optimizations from the compiler."}]}]}]},{"client_msg_id":"daddb0ec-5e67-4a98-b64f-e03843267c37","type":"message","text":"But if you split out most of the computational work into other outer functions that are called and compiled normally maybe it wouldn't matter.","user":"U01H36BUDJB","ts":"1611920175.146900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g+LF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But if you split out most of the computational work into other outer functions that are called and compiled normally maybe it wouldn't matter."}]}]}]},{"type":"message","subtype":"bot_message","text":"That's what I'm trying currently and it is slower.  Need to try the tips given here:  <https://docs.julialang.org/en/v1/manual/performance-tips/#man-performance-captured>","ts":"1611920321.147200","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"That's what I'm trying currently and it is slower.\n\nNeed to try the tips given here:\n\n<https://docs.julialang.org/en/v1/manual/performance-tips/#man-performance-captured>","verbatim":false}}]},{"client_msg_id":"213858ea-ac8b-41d6-ad3f-8a37693e13ea","type":"message","text":"nice, looks like you can more or less fix it","user":"U01H36BUDJB","ts":"1611920518.147700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dV=r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nice, looks like you can more or less fix it"}]}]}]},{"client_msg_id":"34b9c7b9-3298-4da7-bfbd-d1fb1bb3c947","type":"message","text":"FastClosures.jl looks quite nice as well","user":"U01H36BUDJB","ts":"1611920689.148000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"73bA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FastClosures.jl looks quite nice as well"}]}]}]},{"type":"message","subtype":"bot_message","text":"Hey everyone! Another question from me: How can I prevent that `solve(ODEProblem(...))` stores every intermediate solution ` u(t)  for tspan[1] ≤ t ≤ tspan[2]`? I am only interested in `u(tspan[2])` and as my `u(t)` are `Array{Float64,3}`, I get problems with memory overrun when solving...happy about any advice!","ts":"1611931957.148100","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","thread_ts":"1611931957.148100","reply_count":2,"reply_users_count":1,"latest_reply":"1611932169.148400","reply_users":["U01H36BUDJB"],"subscribed":false,"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Hey everyone! Another question from me: How can I prevent that `solve(ODEProblem(...))` stores every intermediate solution ` u(t)  for tspan[1] ≤ t ≤ tspan[2]`? I am only interested in `u(tspan[2])` and as my `u(t)` are `Array{Float64,3}`, I get problems with memory overrun when solving...happy about any advice!","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Thanks!!","ts":"1611932428.148600","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Thanks!!","verbatim":false}}]},{"client_msg_id":"9c9b000f-bad0-4e83-b3a9-360c3935c9d6","type":"message","text":"I mean, you can use something like `ReverseDiffAdjoint()` with a bit more flexibility on `p`","user":"U69BL50BF","ts":"1611932953.149100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hIR7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, you can use something like "},{"type":"text","text":"ReverseDiffAdjoint()","style":{"code":true}},{"type":"text","text":" with a bit more flexibility on "},{"type":"text","text":"p","style":{"code":true}}]}]}]},{"client_msg_id":"525efa39-1d34-47b2-85f6-e204a895f5e6","type":"message","text":"the difficulty is mostly that with an adjoint method we have to build the extended space and solve either a differential equation or a quadratue with `p` in it","user":"U69BL50BF","ts":"1611932985.149800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yc8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the difficulty is mostly that with an adjoint method we have to build the extended space and solve either a differential equation or a quadratue with "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" in it"}]}]}]},{"client_msg_id":"2dffa519-013c-4030-985b-82a917a33343","type":"message","text":"the quadrature libraries require an AbstractArray, and DiffEq relaxes that a bit but not all of the way","user":"U69BL50BF","ts":"1611933009.150300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BvA+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the quadrature libraries require an AbstractArray, and DiffEq relaxes that a bit but not all of the way"}]}]}]},{"client_msg_id":"98e060ea-8901-442b-b116-2a0ed16ecf25","type":"message","text":"You probably could use a VectorOfArray","user":"U69BL50BF","ts":"1611933016.150500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GAvd9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You probably could use a VectorOfArray"}]}]}]},{"type":"message","subtype":"bot_message","text":" `saveon` did not work (V 1.5.3. )and I didn't find anything in the doc about it, but `saveat` did work. Thanks again","ts":"1611933326.150600","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":" `saveon` did not work (V 1.5.3. )and I didn't find anything in the doc about it, but `saveat` did work. Thanks again","verbatim":false}}]},{"client_msg_id":"e152fe63-7834-48f8-92c6-677cb33d2ae2","type":"message","text":"`saveon` isn't an argument and never has been an argument.","user":"U69BL50BF","ts":"1611933437.150900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ek=JA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"saveon","style":{"code":true}},{"type":"text","text":" isn't an argument and never has been an argument."}]}]}]},{"client_msg_id":"5a470f41-9c1a-4672-8ff3-f8c08550d759","type":"message","text":"<@U01H36BUDJB> would a vector of arrays be enough?","user":"U69BL50BF","ts":"1611933504.151400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mnGX","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01H36BUDJB"},{"type":"text","text":" would a vector of arrays be enough?"}]}]}],"thread_ts":"1611933504.151400","reply_count":2,"reply_users_count":1,"latest_reply":"1611933844.152800","reply_users":["U01H36BUDJB"],"subscribed":false},{"client_msg_id":"16f77f7a-17fc-4457-9238-60e4d80537c3","type":"message","text":"and instead of a tuple of arrays, how about an ArrayPartition?","user":"U69BL50BF","ts":"1611933516.151700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kn61w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and instead of a tuple of arrays, how about an ArrayPartition?"}]}]}]},{"client_msg_id":"381060c9-4e39-477d-96cb-5bee65c6184b","type":"message","text":"<@U69BL50BF> @Mrc010 sorry, I meant `save_on=false`, see here <https://diffeq.sciml.ai/dev/basics/common_solver_opts/>","user":"U01H36BUDJB","ts":"1611933733.152500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0ZW","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" @Mrc010 sorry, I meant `save_on=false`, see here "},{"type":"link","url":"https://diffeq.sciml.ai/dev/basics/common_solver_opts/"}]}]}]},{"client_msg_id":"5b10c792-8624-4283-bfd3-fe199003d111","type":"message","text":"I'm sure I can isolate the parameters I am interested in optimizing into some kind of array structure, the problem is all of the other non-optimized parameters, constants, and configuration options that need to be included somehow.","user":"U01H36BUDJB","ts":"1611933969.153900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0zmF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm sure I can isolate the parameters I am interested in optimizing into some kind of array structure, the problem is all of the other non-optimized parameters, constants, and configuration options that need to be included somehow."}]}]}]},{"client_msg_id":"47fe92e8-9ea2-43bf-aa50-09c995a430de","type":"message","text":"If there are any examples of complex, large scale models using the `SciML` framework, I'd be interested in seeing how they structure their code. Presumably they would have the same kind of problem.","user":"U01H36BUDJB","ts":"1611934091.155100","team":"T68168MUP","edited":{"user":"U01H36BUDJB","ts":"1611934108.000000"},"blocks":[{"type":"rich_text","block_id":"B2oWq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If there are any examples of complex, large scale models using the "},{"type":"text","text":"SciML","style":{"code":true}},{"type":"text","text":" framework, I'd be interested in seeing how they structure their code. Presumably they would have the same kind of problem."}]}]}]},{"client_msg_id":"f6b83fa1-c7ac-4b3e-b069-8c9e5aec89eb","type":"message","text":"&gt; I'm sure I can isolate the parameters I am interested in optimizing into some kind of array structure, the problem is all of the other non-optimized parameters, constants, and configuration options that need to be included somehow.","user":"U69BL50BF","ts":"1611934125.155500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uvGmh","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I'm sure I can isolate the parameters I am interested in optimizing into some kind of array structure, the problem is all of the other non-optimized parameters, constants, and configuration options that need to be included somehow."}]}]}]},{"client_msg_id":"1fc92de2-7373-4a68-9acd-ab1cae96b97f","type":"message","text":"Yeah... I have a plan for what to do but it's tedious to solve","user":"U69BL50BF","ts":"1611934136.155800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mKU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah... I have a plan for what to do but it's tedious to solve"}]}]}]},{"client_msg_id":"d0dae3ec-f0c7-458e-8b22-326e05ab24d4","type":"message","text":"I think we can have an interface where people tell us what's actually the parameters and such","user":"U69BL50BF","ts":"1611934154.156200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t6JHc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think we can have an interface where people tell us what's actually the parameters and such"}]}]}]},{"client_msg_id":"89ce4404-63ec-47ec-88b4-2c00ef8bd32c","type":"message","text":"Yeah that's more or less what I'm making for my specific case.","user":"U01H36BUDJB","ts":"1611934172.156500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0P7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah that's more or less what I'm making for my specific case."}]}]}]},{"client_msg_id":"3ffb76cd-1505-4036-848a-461af843e363","type":"message","text":"&gt; If there are any examples of complex, large scale models using the `SciML` framework, I'd be interested in seeing how they structure their code. Presumably they would have the same kind of problem\nJust views of arrays for now","user":"U69BL50BF","ts":"1611934180.157000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D0vK","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If there are any examples of complex, large scale models using the "},{"type":"text","text":"SciML","style":{"code":true}},{"type":"text","text":" framework, I'd be interested in seeing how they structure their code. Presumably they would have the same kind of problem"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Just views of arrays for now"}]}]}],"thread_ts":"1611934180.157000","reply_count":13,"reply_users_count":2,"latest_reply":"1611935179.160400","reply_users":["U01H36BUDJB","U69BL50BF"],"subscribed":false},{"client_msg_id":"220c3064-e204-4c5d-a3b8-5c9b1849ce0a","type":"message","text":"with PDEs at least there's a nice structure.","user":"U69BL50BF","ts":"1611934185.157200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ntxuk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with PDEs at least there's a nice structure."}]}]}]},{"client_msg_id":"d4e01e40-e86d-4bcc-999d-db278a7bc511","type":"message","text":"I'm also kind of borrowing the ideas from ModelingToolkit about declaring dependent vs independent symbolic variables to make it more extensible","user":"U01H36BUDJB","ts":"1611934225.157900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2Yv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm also kind of borrowing the ideas from ModelingToolkit about declaring dependent vs independent symbolic variables to make it more extensible"}]}]}]},{"client_msg_id":"ADE53C87-264E-41EE-AFD5-3A29607700F2","type":"message","text":"A student I’m working with is running the Bayesian Neuyral ODE example on a different data set, and is saying it takes on the order of 2-3 hours on a powerful machine with 20 data points.  Is this to be expected? ","user":"U66G4838Q","ts":"1612148641.163500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4DB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A student I’m working with is running the Bayesian Neuyral ODE example on a different data set, and is saying it takes on the order of 2-3 hours on a powerful machine with 20 data points.  Is this to be expected? "}]}]}]},{"client_msg_id":"cae46a9f-480b-4439-89bc-97bbebe170b1","type":"message","text":"It is fairly expensive, yes. Which example? Some of them are on the order of tens of minutes, others a few hours. The current form also is not using chain-level parallelism, so it may not be exploiting a whole powerful machine.","user":"U69BL50BF","ts":"1612151431.165000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YjNSs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is fairly expensive, yes. Which example? Some of them are on the order of tens of minutes, others a few hours. The current form also is not using chain-level parallelism, so it may not be exploiting a whole powerful machine."}]}]}]},{"client_msg_id":"9006d16b-bb07-4760-a37a-fff338648d2e","type":"message","text":"Also there's probably a few better sensealg choices that could be done to the examples.","user":"U69BL50BF","ts":"1612151461.165400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"68=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also there's probably a few better sensealg choices that could be done to the examples."}]}]}]},{"client_msg_id":"c3e731e6-5f52-4244-a92d-2c0280fab298","type":"message","text":"2-3 hours does seem like a lot if it's <https://diffeqflux.sciml.ai/dev/examples/BayesianNODE_NUTS/> or <https://diffeqflux.sciml.ai/dev/examples/BayesianNODE_SGLD/> though","user":"U69BL50BF","ts":"1612151657.166000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9f7ES","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"2-3 hours does seem like a lot if it's "},{"type":"link","url":"https://diffeqflux.sciml.ai/dev/examples/BayesianNODE_NUTS/"},{"type":"text","text":" or "},{"type":"link","url":"https://diffeqflux.sciml.ai/dev/examples/BayesianNODE_SGLD/"},{"type":"text","text":" though"}]}]}]},{"client_msg_id":"31085bbf-83ae-440e-a6f5-34cb70076f3d","type":"message","text":"Yeah, it is the NUTS example","user":"U66G4838Q","ts":"1612152754.166300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WnukY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, it is the NUTS example"}]}]}]},{"client_msg_id":"82e86d63-3df0-4104-8766-86e309b522a4","type":"message","text":"I'm running this copy-pasteable example and its on the order of 10s of minutes so I'll try to see if there's anything different that she's doing","user":"U66G4838Q","ts":"1612152900.167100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HGC1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm running this copy-pasteable example and its on the order of 10s of minutes so I'll try to see if there's anything different that she's doing"}]}]}]},{"client_msg_id":"511aa6ab-bd01-4a3b-ad82-03a5e07e8239","type":"message","text":"what kind of CPU?","user":"U69BL50BF","ts":"1612152940.167300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"paRb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what kind of CPU?"}]}]}]},{"client_msg_id":"7ebe754d-12de-495f-a636-0e03890bc9bd","type":"message","text":"We do make use of LoopVectorization.jl stuff, so maybe it's an issue for <@UAUPJLBQX>? Really taking a shot in the dark","user":"U69BL50BF","ts":"1612152958.167800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bdz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We do make use of LoopVectorization.jl stuff, so maybe it's an issue for "},{"type":"user","user_id":"UAUPJLBQX"},{"type":"text","text":"? Really taking a shot in the dark"}]}]}]},{"client_msg_id":"0370c4e3-f165-4a15-84a4-8e6e6effa944","type":"message","text":"Sorry that wasn't clear.  I mean the code from the tutorial is much faster and the only difference really is the data.  I'm noticing that its starting with instabilities in the start so perhaps its pushing the solver into a finer resolution (sorry, I don't know the diffeq terminology) that isn't happening with the tutorial","user":"U66G4838Q","ts":"1612153819.169400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tuT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry that wasn't clear.  I mean the code from the tutorial is much faster and the only difference really is the data.  I'm noticing that its starting with instabilities in the start so perhaps its pushing the solver into a finer resolution (sorry, I don't know the diffeq terminology) that isn't happening with the tutorial"}]}]}]},{"client_msg_id":"be459b5d-ec77-4717-9bf4-303a5af6e356","type":"message","text":"Yeah the dependence of performance on problem there has not been quantified well yet. Using less data points can even make the problem harder, the instabilities you are seeing are probably because of the sampler starting at a weird parameter region, try to pass in a reasonable initial parameter vector and see if it helps. Also, instabilities are a big reason for performance hit in this so both those things are probably related in your case","user":"U6QF223TN","ts":"1612154169.174100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZYfc4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah the dependence of performance on problem there has not been quantified well yet. Using less data points can even make the problem harder, the instabilities you are seeing are probably because of the sampler starting at a weird parameter region, try to pass in a reasonable initial parameter vector and see if it helps. Also, instabilities are a big reason for performance hit in this so both those things are probably related in your case"}]}]}]},{"client_msg_id":"dea7622b-208c-42c1-833f-e1954f75f917","type":"message","text":"&gt; I'm noticing that its starting with instabilities in the start so perhaps its pushing the solver into a finer resolution","user":"U69BL50BF","ts":"1612154297.174400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hJMI","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I'm noticing that its starting with instabilities in the start so perhaps its pushing the solver into a finer resolution"}]}]}]},{"client_msg_id":"19fe6312-9b84-4cd0-a390-53c66590c1d0","type":"message","text":"\"finer resolution\" as in smaller dt?","user":"U69BL50BF","ts":"1612154306.174700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xz+S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"finer resolution\" as in smaller dt?"}]}]}]},{"client_msg_id":"1f8c6362-f05a-447f-8b39-b89c07c1844e","type":"message","text":"That is a very good indicator that the problem may be stiff, in which case `Tsit5()` is not an appropriate solver.","user":"U69BL50BF","ts":"1612154321.175100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dz6RW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is a very good indicator that the problem may be stiff, in which case "},{"type":"text","text":"Tsit5()","style":{"code":true}},{"type":"text","text":" is not an appropriate solver."}]}]}]},{"client_msg_id":"9767b83c-1380-413d-a434-6de72544d215","type":"message","text":"if you use an auto-switching method does it switch to the method for stiff equations?","user":"U69BL50BF","ts":"1612154358.175500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Stcv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you use an auto-switching method does it switch to the method for stiff equations?"}]}]}]},{"client_msg_id":"03600867-ead6-47f0-9ef6-473d7eb1419c","type":"message","text":"Hmm","user":"U66G4838Q","ts":"1612155364.175800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/tWL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm"}]}]}]},{"client_msg_id":"20db2a13-a8cb-4f58-9bf9-2cae1fe9ea5c","type":"message","text":"noticed a few things","user":"U66G4838Q","ts":"1612155371.176200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m/yf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"noticed a few things"}]}]}]},{"client_msg_id":"019fa837-f540-4143-82c4-d18820c5cb98","type":"message","text":"1. actually the main difference was that she has tspan 0:ndata","user":"U66G4838Q","ts":"1612155405.176900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c6vbt","elements":[{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"actually the main difference was that she has tspan 0:ndata"}]}],"style":"ordered","indent":0}]}],"thread_ts":"1612155405.176900","reply_count":1,"reply_users_count":1,"latest_reply":"1612156222.179200","reply_users":["U6QF223TN"],"subscribed":false},{"client_msg_id":"0942cda7-0612-4728-9f78-fd9fabf9fb4b","type":"message","text":"as oppose to 0:1","user":"U66G4838Q","ts":"1612155443.177200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vIrO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as oppose to 0:1"}]}]}]}]}