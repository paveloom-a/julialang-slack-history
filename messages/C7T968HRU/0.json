{"cursor": 6, "messages": [{"client_msg_id":"28bbded3-64b4-4b9c-9e2b-b7aa0bcc2970","type":"message","text":"&gt; Does the `residual` just take four components?\nYup\n&gt; Is there any special order they need to take on?\nNope, no order necessarily.","user":"U69BL50BF","ts":"1610421014.361400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cqJ","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Does the "},{"type":"text","text":"residual","style":{"code":true}},{"type":"text","text":" just take four components?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Yup\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Is there any special order they need to take on?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Nope, no order necessarily."}]}]}]},{"client_msg_id":"64d971c1-ce1b-45db-aa7c-684420897937","type":"message","text":"Lovely, thanks","user":"U8D9768Q6","ts":"1610421058.361600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YJV0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Lovely, thanks"}]}]}]},{"client_msg_id":"9d0a6dff-ae0c-4977-8454-13f949245b79","type":"message","text":"One of my supervisors came to me today with a funky differential equation and said\n&gt; So, I've never actually solved a differential equation before numerically, so I was going to start with this one, but then I remembered you telling me about some fancy julia package that can solve wacky ODEs. Could you give this one a shot? ","user":"U8D9768Q6","ts":"1610421183.363700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yTSL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One of my supervisors came to me today with a funky differential equation and said\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"So, I've never actually solved a differential equation before numerically, so I was going to start with this one, but then I remembered you telling me about some fancy julia package that can solve wacky ODEs. Could you give this one a shot? "}]}]}]},{"client_msg_id":"ba7098a3-eae6-4024-9fcc-78e71ef165ce","type":"message","text":"If I have a large N-compartment ODE model and I’m looking to parallelize the `ODEmodel(du,u,p,t)` function by `@distributed` on the for loop. Is this the ideal way to speed this up on a CPU with multiple nodes?\n\nI thought maybe it would pay to give each node a chunk of the compartments, update the respective `u` components, broadcast it to the others and repeat. But this potentially seems bad unless I enforce a fixed time step which I think loses out on the utility of the adaptive step routines.","user":"UFH4C3LBT","ts":"1610423367.367400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y1v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I have a large N-compartment ODE model and I’m looking to parallelize the "},{"type":"text","text":"ODEmodel(du,u,p,t)","style":{"code":true}},{"type":"text","text":" function by "},{"type":"text","text":"@distributed","style":{"code":true}},{"type":"text","text":" on the for loop. Is this the ideal way to speed this up on a CPU with multiple nodes?\n\nI thought maybe it would pay to give each node a chunk of the compartments, update the respective "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":" components, broadcast it to the others and repeat. But this potentially seems bad unless I enforce a fixed time step which I think loses out on the utility of the adaptive step routines."}]}]}]},{"client_msg_id":"c843b507-e54f-404c-8230-c660cf65f226","type":"message","text":"&gt; way to speed this up on a CPU with multiple nodes?","user":"U69BL50BF","ts":"1610424401.367700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8nHD","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"way to speed this up on a CPU with multiple nodes?"}]}]}]},{"client_msg_id":"0ee4da6a-2c52-49ac-aa33-6d53fa8c828e","type":"message","text":"That doesn't make sense","user":"U69BL50BF","ts":"1610424404.367900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FNr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That doesn't make sense"}]}]}]},{"client_msg_id":"9cebabdd-51cb-4bb5-9860-35dfa6c791b0","type":"message","text":"CPU with multiple cores? Or multiple nodes?","user":"U69BL50BF","ts":"1610424412.368100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Su2/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"CPU with multiple cores? Or multiple nodes?"}]}]}]},{"client_msg_id":"455ee9ba-07e0-41d9-8723-026cfe7ff689","type":"message","text":"those are two different things.","user":"U69BL50BF","ts":"1610424415.368300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Eo7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"those are two different things."}]}]}]},{"client_msg_id":"f1450535-a8e1-412d-9962-db5e9b4d5e28","type":"message","text":"sounds like you mean multicore machine, in which case multithreading is the right way to go.","user":"U69BL50BF","ts":"1610424443.368700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vjqM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sounds like you mean multicore machine, in which case multithreading is the right way to go."}]}]}]},{"client_msg_id":"9acb7f7b-b68c-4a76-82b2-32ab761e00a9","type":"message","text":"For a 4-component method that's quick to evaluate is it usually better to use `SVectors` out of place, or `Vector`s in place?","user":"U8D9768Q6","ts":"1610433017.369600","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1610433039.000000"},"blocks":[{"type":"rich_text","block_id":"SIto+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For a 4-component method that's quick to evaluate is it usually better to use "},{"type":"text","text":"SVectors","style":{"code":true}},{"type":"text","text":" out of place, or "},{"type":"text","text":"Vector","style":{"code":true}},{"type":"text","text":"s in place?"}]}]}]},{"client_msg_id":"425185af-b641-438c-8247-d1449d80cd43","type":"message","text":"Probably Vectors just because of how NLsolve is going to handle it, but it's hard to tell","user":"U69BL50BF","ts":"1610433313.370100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uUWW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Probably Vectors just because of how NLsolve is going to handle it, but it's hard to tell"}]}]}]},{"client_msg_id":"26538f2c-0fa0-4dbe-9864-16abc4a8fd9b","type":"message","text":"We're building new nonlinear solvers because of this","user":"U69BL50BF","ts":"1610433322.370400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8FHE4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We're building new nonlinear solvers because of this"}]}]}]},{"client_msg_id":"e81dc336-42df-4c3a-990f-eb2fda3a499a","type":"message","text":"Fair enough. Is it different for initial value problems?","user":"U8D9768Q6","ts":"1610433389.371100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A1jfx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Fair enough. Is it different for initial value problems?"}]}]}]},{"client_msg_id":"36ca24e1-b3a3-4769-a5d0-98e507898e00","type":"message","text":"yes","user":"U69BL50BF","ts":"1610433659.371300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9YZ+U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"8eef8ff4-d34c-4220-b86a-81daa4abb6f2","type":"message","text":"IVPs have gotten much more love","user":"U69BL50BF","ts":"1610433665.371500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3UK+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IVPs have gotten much more love"}]}]}]},{"client_msg_id":"a795a820-f1f3-4f9f-aaa9-bc153950dc1b","type":"message","text":"the last time the BVP solvers got a ton of love was before StaticArrays was even a library","user":"U69BL50BF","ts":"1610433679.371900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"isHf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the last time the BVP solvers got a ton of love was before StaticArrays was even a library"}]}]}]},{"client_msg_id":"9bd587a1-4e0b-4716-bd12-cfa60d540230","type":"message","text":"we probably need to put some time into it over the summer","user":"U69BL50BF","ts":"1610433687.372200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A+E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we probably need to put some time into it over the summer"}]}]}]},{"client_msg_id":"1449489f-90e7-4616-b263-e1e2bc9cb943","type":"message","text":"what's there works but it's only okay.","user":"U69BL50BF","ts":"1610433692.372400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+YelP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what's there works but it's only okay."}]}]}]},{"client_msg_id":"2244bb46-72d5-46d6-a2e8-bd4f4cc36d57","type":"message","text":"<https://github.com/SciML/BoundaryValueDiffEq.jl/blob/master/src/solve.jl#L35>","user":"U69BL50BF","ts":"1610433769.372600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ioLdM","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/SciML/BoundaryValueDiffEq.jl/blob/master/src/solve.jl#L35"}]}]}]},{"client_msg_id":"893aedb5-1410-449c-adb6-82f05d90ebb3","type":"message","text":"interesting it doesn't match that","user":"U69BL50BF","ts":"1610433772.372800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kb4D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting it doesn't match that"}]}]}]},{"client_msg_id":"b6afe77b-a0eb-4838-8dcb-8e978d8d6cb6","type":"message","text":"Gotcha, thanks.","user":"U8D9768Q6","ts":"1610434119.373000","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1610434129.000000"},"blocks":[{"type":"rich_text","block_id":"Xk14A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Gotcha, thanks."}]}]}]},{"client_msg_id":"46adbf99-0ab4-4e14-adf8-bd572c9b1fe6","type":"message","text":"Yes and mirk4 is not written for AD i noticed. Maybe we can use the wrapper for inplace method","user":"U7GQE9JP9","ts":"1610438300.374300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zkZt/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes and mirk4 is not written for AD i noticed. Maybe we can use the wrapper for inplace method"}]}]}]},{"client_msg_id":"6da211ee-2a65-421d-b038-9fe5029489d5","type":"message","text":"<@U69BL50BF> Is there a way with `DiffEqOperators` to express a second order derivative that's a function of `Dx(u)`? i.e. `Dx(f(Dx(u)))`  where `Dx` here is the derivative w.r.t `x` . The application is a thermal conductivity dependent on `x` in Fourier's heat equation.","user":"U01H36BUDJB","ts":"1610464229.378200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JRS","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" Is there a way with "},{"type":"text","text":"DiffEqOperators","style":{"code":true}},{"type":"text","text":" to express a second order derivative that's a function of "},{"type":"text","text":"Dx(u)","style":{"code":true}},{"type":"text","text":"? i.e. "},{"type":"text","text":"Dx(f(Dx(u)))","style":{"code":true}},{"type":"text","text":"  where "},{"type":"text","text":"Dx","style":{"code":true}},{"type":"text","text":" here is the derivative w.r.t "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" . The application is a thermal conductivity dependent on "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" in Fourier's heat equation."}]}]}]},{"client_msg_id":"8bd673ed-2a17-42a9-9377-263086d1aeac","type":"message","text":"so more specifically, `Dx(k(x)*Dx(u))`","user":"U01H36BUDJB","ts":"1610464291.378700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I/h8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so more specifically, "},{"type":"text","text":"Dx(k(x)*Dx(u))","style":{"code":true}}]}]}]},{"client_msg_id":"3e31d1a9-52ba-43a4-b3f0-24993f5c544f","type":"message","text":"Nonlinear diffusions are not supported right now","user":"U69BL50BF","ts":"1610464530.379000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L8I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nonlinear diffusions are not supported right now"}]}]}]},{"client_msg_id":"37913ca1-6810-45e8-a969-0a12d824c557","type":"message","text":"there's an open issue on that","user":"U69BL50BF","ts":"1610464535.379200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O8y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's an open issue on that"}]}]}]},{"client_msg_id":"cbb7f1d6-1919-400a-b297-9af0405ababd","type":"message","text":"it needs a specific operator and parsing FWICT","user":"U69BL50BF","ts":"1610464545.379500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V4pI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it needs a specific operator and parsing FWICT"}]}]}]},{"client_msg_id":"ef69c885-5589-496b-8f11-7c32faaf8638","type":"message","text":"ok. but it should be possible to construct using two first order `CeneteredDifference` operators, correct?","user":"U01H36BUDJB","ts":"1610464615.379900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hXD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok. but it should be possible to construct using two first order "},{"type":"text","text":"CeneteredDifference","style":{"code":true}},{"type":"text","text":" operators, correct?"}]}]}]},{"client_msg_id":"f6b22028-9f9f-4179-9820-b795f1bc7fb6","type":"message","text":"like `D*k*D*Q*u` where `Q` is the boundary condition... or something like that","user":"U01H36BUDJB","ts":"1610464781.381000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gatH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like "},{"type":"text","text":"D*k*D*Q*u","style":{"code":true}},{"type":"text","text":" where "},{"type":"text","text":"Q","style":{"code":true}},{"type":"text","text":" is the boundary condition... or something like that"}]}]}]},{"client_msg_id":"4f8a3c4d-9302-4ee1-bb36-03bfe8eeb7e9","type":"message","text":"yeah the problem is that boundary condition handling when you have a nonlinearity in the middle.","user":"U69BL50BF","ts":"1610465004.381400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ElgH+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah the problem is that boundary condition handling when you have a nonlinearity in the middle."}]}]}]},{"client_msg_id":"e17a3b32-885c-40c1-be93-0abad63141bf","type":"message","text":"it looks like composition of two first order differences, but it's not strictly composition of two first order differences because of the BC","user":"U69BL50BF","ts":"1610465032.381900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MqDR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it looks like composition of two first order differences, but it's not strictly composition of two first order differences because of the BC"}]}]}]},{"client_msg_id":"f3eb62af-1035-49fb-b535-110e4332ea91","type":"message","text":"right yeah.. actually it should be `D*Q*k*D*Q*u` , right?","user":"U01H36BUDJB","ts":"1610465311.383000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P5Doy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right yeah.. actually it should be "},{"type":"text","text":"D*Q*k*D*Q*u","style":{"code":true}},{"type":"text","text":" , right?"}]}]}]},{"client_msg_id":"4fae3258-9891-4f57-8143-49a967642166","type":"message","text":"yeah so it's tricky","user":"U69BL50BF","ts":"1610465645.383300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dBDDw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah so it's tricky"}]}]}]},{"client_msg_id":"a1fb2e7e-0084-474a-baa2-4a51695b2003","type":"message","text":"if you do that you get the wrong size","user":"U69BL50BF","ts":"1610465663.383500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C4jJr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you do that you get the wrong size"}]}]}]},{"client_msg_id":"ed4f3e4a-9ebc-4b58-9a17-ff9982d9fb69","type":"message","text":"or wrong values at least","user":"U69BL50BF","ts":"1610465668.383700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GuHq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or wrong values at least"}]}]}]},{"client_msg_id":"9fa001e0-5095-4ccc-89b5-713136def0e8","type":"message","text":"unless it's Dirichlet only IIRC","user":"U69BL50BF","ts":"1610465674.384000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tCf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"unless it's Dirichlet only IIRC"}]}]}]},{"client_msg_id":"e909bca4-4ab1-43f6-b133-b537089d2f68","type":"message","text":"so there's an issue about making a specific operator for nonlinear diffusion","user":"U69BL50BF","ts":"1610465686.384400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dafzv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so there's an issue about making a specific operator for nonlinear diffusion"}]}]}]},{"client_msg_id":"e979abda-b93b-4bf7-af9b-6cad2f368bf5","type":"message","text":"I'll check out the issue. Unrelated question, is there a non-allocating option for the `BoundaryCondition` operators? Can't find it on the docs. I suppose not since you have to allocate a new vector with the padding... but if there was a way to do it with a peallocated vector and `mul!` maybe that would work..?","user":"U01H36BUDJB","ts":"1610466173.385700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yf7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll check out the issue. Unrelated question, is there a non-allocating option for the "},{"type":"text","text":"BoundaryCondition","style":{"code":true}},{"type":"text","text":" operators? Can't find it on the docs. I suppose not since you have to allocate a new vector with the padding... but if there was a way to do it with a peallocated vector and "},{"type":"text","text":"mul!","style":{"code":true}},{"type":"text","text":" maybe that would work..?"}]}]}]},{"client_msg_id":"730db035-9452-47ac-9b60-f6a8589a68f8","type":"message","text":"they don't allocate","user":"U69BL50BF","ts":"1610466219.385900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"urT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"they don't allocate"}]}]}]},{"client_msg_id":"53923df3-4e47-49ab-8c6b-dc6d2684b3dd","type":"message","text":"it's a struct type wrapper","user":"U69BL50BF","ts":"1610466233.386200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DxX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's a struct type wrapper"}]}]}]},{"client_msg_id":"9fdf3ccb-ffa0-4cb0-9d46-a1bc6ca1572d","type":"message","text":":face_with_raised_eyebrow:","user":"U01H36BUDJB","ts":"1610466234.386300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LAuA6","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"face_with_raised_eyebrow"}]}]}]},{"client_msg_id":"d71f7197-0a15-45c7-bb52-d3732ed5b09b","type":"message","text":"that's weird, it allocated when I `@benchmark` 'd it... maybe there's a bug, I'll double check","user":"U01H36BUDJB","ts":"1610466265.386900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hBZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's weird, it allocated when I "},{"type":"text","text":"@benchmark","style":{"code":true}},{"type":"text","text":" 'd it... maybe there's a bug, I'll double check"}]}]}]},{"client_msg_id":"09be0fb0-3bda-4f80-9f19-20307c47a92c","type":"message","text":"<https://github.com/SciML/DiffEqOperators.jl/blob/master/src/boundary_padded_arrays.jl#L13-L17>","user":"U69BL50BF","ts":"1610466284.387100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"focq3","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/SciML/DiffEqOperators.jl/blob/master/src/boundary_padded_arrays.jl#L13-L17"}]}]}]},{"client_msg_id":"47bdf218-94f4-4591-90d5-9e2e1e6e5541","type":"message","text":"so okay","user":"U69BL50BF","ts":"1610466286.387300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oda","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so okay"}]}]}]},{"client_msg_id":"18804f70-afb0-4212-aded-c804ed9d9bb5","type":"message","text":"if you have that as an intermediate, then it will compile away","user":"U69BL50BF","ts":"1610466295.387600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pSM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you have that as an intermediate, then it will compile away"}]}]}]},{"client_msg_id":"d1937f93-4872-43dd-a462-abf64f5b1f2e","type":"message","text":"it's like a static array","user":"U69BL50BF","ts":"1610466297.387800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vlGE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's like a static array"}]}]}]},{"client_msg_id":"db16064e-26ec-4377-b510-de3444127c60","type":"message","text":"it'll stay stack-allocated if it never gets returned","user":"U69BL50BF","ts":"1610466307.388100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oXb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it'll stay stack-allocated if it never gets returned"}]}]}]},{"client_msg_id":"5685c1b1-0cf8-4015-9178-ec8b068e6b17","type":"message","text":"if you return it then it'll get heap-allocated and you'll see","user":"U69BL50BF","ts":"1610466319.388500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OZBk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you return it then it'll get heap-allocated and you'll see"}]}]}]},{"client_msg_id":"f88d9dff-47ee-4360-bdb1-a674540354a6","type":"message","text":"aha","user":"U01H36BUDJB","ts":"1610466329.388900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9I1G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"aha"}]}]}]},{"client_msg_id":"6e9c93f7-0171-470a-be01-d0ac3d7eea99","type":"message","text":"but in the standard D*Q*u it should just be a dispatch intermediate and the compiler will handle it","user":"U69BL50BF","ts":"1610466336.389200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BCUY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but in the standard D*Q*u it should just be a dispatch intermediate and the compiler will handle it"}]}]}]},{"client_msg_id":"59deb923-3430-44e9-bbc7-2918c1ec7fb0","type":"message","text":"otherwise it's just a constant size, I think like 32+16 bytes? 48","user":"U69BL50BF","ts":"1610466357.389600","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1610466361.000000"},"blocks":[{"type":"rich_text","block_id":"mIAE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"otherwise it's just a constant size, I think like 32+16 bytes? 48"}]}]}]},{"client_msg_id":"03781d68-d754-4b21-b3f1-6599744f80f8","type":"message","text":"because it's a pointer to the array + 2 floating point numbers","user":"U69BL50BF","ts":"1610466371.390100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jA3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because it's a pointer to the array + 2 floating point numbers"}]}]}]},{"client_msg_id":"9846bde0-8203-445f-9f78-8bf09094f8ef","type":"message","text":"oh my calculation is off but you get the point.","user":"U69BL50BF","ts":"1610466379.390500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sZJh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh my calculation is off but you get the point."}]}]}]},{"client_msg_id":"63bc842b-f345-4dfb-bd94-967885ab5994","type":"message","text":"yeah but if you want a non-allocating difference operator: `mul!(out,Δ,Q*A)`","user":"U01H36BUDJB","ts":"1610466379.390600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gzw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah but if you want a non-allocating difference operator: "},{"type":"text","text":"mul!(out,Δ,Q*A)","style":{"code":true}}]}]}]},{"client_msg_id":"403d5088-c3ff-4ba6-b1ea-1d304f77afa3","type":"message","text":"then it gets returned","user":"U01H36BUDJB","ts":"1610466386.390900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6pK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then it gets returned"}]}]}]},{"client_msg_id":"fa930add-be3d-47ba-92ca-e703a482b9b1","type":"message","text":"but if that is in a function, Julia will just directly remove the struct and the dispatch","user":"U69BL50BF","ts":"1610466417.391500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NFFQ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but if that is in a function, Julia will just directly remove the struct and the dispatch"}]}]}]},{"client_msg_id":"ccf3abef-583c-4d95-967a-cda21cece0d7","type":"message","text":"or at least it should","user":"U69BL50BF","ts":"1610466426.391900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zjo2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or at least it should"}]}]}]},{"client_msg_id":"5db02300-3de4-444a-8b3c-57bf5655f798","type":"message","text":"we could add some mul! dispatches too","user":"U69BL50BF","ts":"1610466435.392300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V6kv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we could add some mul! dispatches too"}]}]}]},{"client_msg_id":"21a3600d-17bf-4de1-b912-166dfdbfa27b","type":"message","text":"what do you mean by, if it's in a function?","user":"U01H36BUDJB","ts":"1610466439.392500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j3mpu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you mean by, if it's in a function?"}]}]}]},{"client_msg_id":"6d84c74a-e9fe-4175-baf1-203851b74dc7","type":"message","text":"`f(out,u,p,t) = mul!(out,Δ,Q*u)` kind of thing should be good.","user":"U69BL50BF","ts":"1610466471.393100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"In7f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"f(out,u,p,t) = mul!(out,Δ,Q*u)","style":{"code":true}},{"type":"text","text":" kind of thing should be good."}]}]}]},{"client_msg_id":"628ed2e4-6a0e-4340-bed3-cbaf7b3d536e","type":"message","text":"Otherwise it's worth tracking down.","user":"U69BL50BF","ts":"1610466476.393400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aSNUh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Otherwise it's worth tracking down."}]}]}]},{"client_msg_id":"a19e6c4c-78ed-431c-8f85-76253bb5f961","type":"message","text":"ok let me try it","user":"U01H36BUDJB","ts":"1610466481.393600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DSvqn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok let me try it"}]}]}]},{"client_msg_id":"d9e125e9-4d22-4ecb-819a-9a0a897e0758","type":"message","text":"and this requires Julia v1.5","user":"U69BL50BF","ts":"1610466502.393800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z/Ye","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and this requires Julia v1.5"}]}]}]},{"client_msg_id":"9d1fb735-763a-429a-9206-dc9f200017a0","type":"message","text":"<https://github.com/JuliaLang/julia/blob/v1.5.3/NEWS.md#compilerruntime-improvements>","user":"U69BL50BF","ts":"1610466598.394000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d+8ft","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/blob/v1.5.3/NEWS.md#compilerruntime-improvements"}]}]}]},{"client_msg_id":"29d1b5bc-b68d-4cd5-9663-46981ebd58d3","type":"message","text":"that's the compiler optimization it would use.","user":"U69BL50BF","ts":"1610466603.394200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5z3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's the compiler optimization it would use."}]}]}]},{"client_msg_id":"c2a6094a-9253-4ce1-b718-b22428721d6d","type":"message","text":"I'm on 1.5.3","user":"U01H36BUDJB","ts":"1610466696.394600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0o=V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm on 1.5.3"}]}]}]},{"client_msg_id":"effb673d-28c5-4551-8425-c7ff0a7e5c30","type":"message","text":"doesn't seem to work:\n```@benchmark f(out,u)\nBenchmarkTools.Trial: \n  memory estimate:  224 bytes\n  allocs estimate:  3\n  --------------\n  minimum time:     349.282 ns (0.00% GC)\n  median time:      363.723 ns (0.00% GC)\n  mean time:        412.892 ns (5.29% GC)\n  maximum time:     30.611 μs (98.07% GC)\n  --------------\n  samples:          10000\n  evals/sample:     213```","user":"U01H36BUDJB","ts":"1610466708.394800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eHcT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"doesn't seem to work:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@benchmark f(out,u)\nBenchmarkTools.Trial: \n  memory estimate:  224 bytes\n  allocs estimate:  3\n  --------------\n  minimum time:     349.282 ns (0.00% GC)\n  median time:      363.723 ns (0.00% GC)\n  mean time:        412.892 ns (5.29% GC)\n  maximum time:     30.611 μs (98.07% GC)\n  --------------\n  samples:          10000\n  evals/sample:     213"}]}]}]},{"client_msg_id":"ba1c698e-e742-4881-8b31-2d358fef6503","type":"message","text":"it's GC'ing at least","user":"U01H36BUDJB","ts":"1610466755.395200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N2s12","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's GC'ing at least"}]}]}]},{"client_msg_id":"2a7b29e5-4de9-467a-933e-d6f76c7d7d00","type":"message","text":"okay open an issue","user":"U69BL50BF","ts":"1610466756.395300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MRBI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay open an issue"}]}]}]},{"client_msg_id":"bd9c315a-914b-4dfe-81ca-4d688a72f0d7","type":"message","text":"<@U6788D83U> I am not very familiar with Butcher tableau and I would like to keep the notations you use in BVP.jl. I think I have an issue with the Tableau from  “A Runge-Kutta Type Boundary Value ODE Solver with Defect Control”\n# by W.H. Enright and Paul Muir. Hence, I would like to implement the one on page 190 Cash, J. R., and A. Singhal. “High Order Methods for the Numerical Solution of Two-Point Boundary Value Problems.” _BIT Numerical Mathematics_ 22, no. 2 (June 1, 1982): 183–99. <https://doi.org/10.1007/BF01944476>. I would say that the vector v=0. Can you confirm this please? Thank you!","user":"U7GQE9JP9","ts":"1610481069.397300","team":"T68168MUP","edited":{"user":"U7GQE9JP9","ts":"1610481080.000000"},"blocks":[{"type":"rich_text","block_id":"NVt","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6788D83U"},{"type":"text","text":" I am not very familiar with Butcher tableau and I would like to keep the notations you use in BVP.jl. I think I have an issue with the Tableau from  “A Runge-Kutta Type Boundary Value ODE Solver with Defect Control”\n# by W.H. Enright and Paul Muir. Hence, I would like to implement the one on page 190 Cash, J. R., and A. Singhal. “High Order Methods for the Numerical Solution of Two-Point Boundary Value Problems.” "},{"type":"text","text":"BIT Numerical Mathematics","style":{"italic":true}},{"type":"text","text":" 22, no. 2 (June 1, 1982): 183–99. "},{"type":"link","url":"https://doi.org/10.1007/BF01944476"},{"type":"text","text":". I would say that the vector v=0. Can you confirm this please? Thank you!"}]}]}]},{"client_msg_id":"aa0a6ceb-e7d8-4276-8a8f-427402449822","type":"message","text":"Which `v` are you referring to?","user":"U6788D83U","ts":"1610482531.397800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a6ZU4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":" are you referring to?"}]}]}]},{"client_msg_id":"8868827a-2809-4dd8-86c5-0fcf812e852c","type":"message","text":"here <https://github.com/SciML/BoundaryValueDiffEq.jl/blob/master/src/mirk_tableaus.jl>","user":"U7GQE9JP9","ts":"1610522285.398000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U9C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"here "},{"type":"link","url":"https://github.com/SciML/BoundaryValueDiffEq.jl/blob/master/src/mirk_tableaus.jl"}]}]}]},{"client_msg_id":"1565830d-a874-4d21-88de-a159f42f2869","type":"message","text":"Does anyone have any tips on how to properly evaluate a DAE solver? `IDA` works well, but I can't really use it to compute high-accuracy reference solutions since it does not support BigFloats. And `DABDF2` was not able to solve the problem (Robertson) for 1e-12 tolerances.","user":"UMQME35EV","ts":"1610534818.398400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YiGAe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone have any tips on how to properly evaluate a DAE solver? `IDA` works well, but I can't really use it to compute high-accuracy reference solutions since it does not support BigFloats. And `DABDF2` was not able to solve the problem (Robertson) for 1e-12 tolerances."}]}]}]},{"client_msg_id":"5bc2112a-8667-4f99-bc11-a73870a90db3","type":"message","text":"Is there some tool that allows to build derivative operators for hexagonal grids for space discredited ODEs?","user":"U9MD78Z9N","ts":"1610547155.400200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4VbW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there some tool that allows to build derivative operators for hexagonal grids for space discredited ODEs?"}]}]}],"thread_ts":"1610547155.400200","reply_count":1,"reply_users_count":1,"latest_reply":"1610548447.400500","reply_users":["U69BL50BF"],"subscribed":false},{"client_msg_id":"7286eaad-2db0-4ea0-8f29-637817ada60b","type":"message","text":"Is nonlinear diffusion currently supported by NeuralPDE?","user":"U01H36BUDJB","ts":"1610550769.401100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=8AD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is nonlinear diffusion currently supported by NeuralPDE?"}]}]}]},{"client_msg_id":"14661098-1db7-45dd-8026-5f9e4fa5c2fc","type":"message","text":"it should just work.","user":"U69BL50BF","ts":"1610551577.401300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hI8tY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it should just work."}]}]}]}]}