{"cursor": 21, "messages": [{"client_msg_id":"2ba58313-8078-4ac8-a8f9-f4b8bde6be7e","type":"message","text":"ideal diode:  when it is off current is 0 (voltage arbitrary negative), when it is on voltage is 0 (current arbitrary positive)","user":"URPFQPSEQ","ts":"1616425116.129100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GyJLK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ideal diode:  when it is off current is 0 (voltage arbitrary negative), when it is on voltage is 0 (current arbitrary positive)"}]}]}]},{"client_msg_id":"5e3871ce-4d53-4308-97b7-8a017108dfeb","type":"message","text":"and the variable off is a boolean variable in modelica","user":"URPFQPSEQ","ts":"1616425222.129600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VWN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and the variable off is a boolean variable in modelica"}]}]}]},{"client_msg_id":"62b98dd1-69af-4b08-859b-b7e4c8466487","type":"message","text":"I'm trying to make FastChain twice differentiable (it somehow mutates arrays)\n\nI rewrote FastChain as:\n\n```split_at(p, idx) = view(p, 1:idx), view(p, (idx+1):lastindex(p))\n\nfunction ChainRulesCore.rrule(\n  ::typeof(split_at),\n  p::AbstractVector{S},\n  idx::Int,\n  ) where S\n\n  function split_at_pullback(Δ)\n    return (\n      ChainRulesCore.NO_FIELDS,\n      ChainRulesCore.@thunk(vcat(Δ...)),\n      ChainRulesCore.NO_FIELDS,\n    )\n  end\n  split_at(p, idx), split_at_pullback\nend\n\napplychain(::Tuple{}, x, p) = x\n# applychain(fs::Tuple, x, p) = applychain(Base.tail(fs), first(fs)(x,p[1:paramlength(first(fs))]), p[(paramlength(first(fs))+1):end])\nfunction DiffEqFlux.applychain(fs::Tuple, x, p)\n  p₁, p₂ = split_at(p, DiffEqFlux.paramlength(first(fs)))\n  DiffEqFlux.applychain(Base.tail(fs), first(fs)(x, p₁), p₂)\nend\n(c::FastChain)(x,p) = applychain(c.layers, x, p)```\nYes it's ugly :slightly_smiling_face:\n\nIf I run:\n\n```nn = FastChain(\n    FastDense(1,2, selu),\n    FastDense(2,1),\n    )\np = initial_params(nnb)\n\nfunction ftest(p)\n    gz, back = Zygote.pullback(z -&gt; nn(z, p), rand(1, 100))\n    back(gz)[1]\nend\n\ny, back = Zygote.pullback(ftest, p)\nback(y)[1]```\nI get a stray `Zero()` . Any ideas ?\n\n```8-element Array{Any,1}:\n -4.961157245626697\n  4.776112584950887\n -3.0912947608064307\n  3.257924132096858\n -3.3781788944196873\n -2.207525737666333\n  3.504429379232563\n   Zero()```\n","user":"UKJSNT1QR","ts":"1616451914.144000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mWX+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm trying to make FastChain twice differentiable (it somehow mutates arrays)\n\nI rewrote FastChain as:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"split_at(p, idx) = view(p, 1:idx), view(p, (idx+1):lastindex(p))\n\nfunction ChainRulesCore.rrule(\n  ::typeof(split_at),\n  p::AbstractVector{S},\n  idx::Int,\n  ) where S\n\n  function split_at_pullback(Δ)\n    return (\n      ChainRulesCore.NO_FIELDS,\n      ChainRulesCore.@thunk(vcat(Δ...)),\n      ChainRulesCore.NO_FIELDS,\n    )\n  end\n  split_at(p, idx), split_at_pullback\nend\n\napplychain(::Tuple{}, x, p) = x\n# applychain(fs::Tuple, x, p) = applychain(Base.tail(fs), first(fs)(x,p[1:paramlength(first(fs))]), p[(paramlength(first(fs))+1):end])\nfunction DiffEqFlux.applychain(fs::Tuple, x, p)\n  p₁, p₂ = split_at(p, DiffEqFlux.paramlength(first(fs)))\n  DiffEqFlux.applychain(Base.tail(fs), first(fs)(x, p₁), p₂)\nend\n(c::FastChain)(x,p) = applychain(c.layers, x, p)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYes it's ugly "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\n\nIf I run:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"nn = FastChain(\n    FastDense(1,2, selu),\n    FastDense(2,1),\n    )\np = initial_params(nnb)\n\nfunction ftest(p)\n    gz, back = Zygote.pullback(z -> nn(z, p), rand(1, 100))\n    back(gz)[1]\nend\n\ny, back = Zygote.pullback(ftest, p)\nback(y)[1]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI get a stray "},{"type":"text","text":"Zero()","style":{"code":true}},{"type":"text","text":" . Any ideas ?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"8-element Array{Any,1}:\n -4.961157245626697\n  4.776112584950887\n -3.0912947608064307\n  3.257924132096858\n -3.3781788944196873\n -2.207525737666333\n  3.504429379232563\n   Zero()"}]},{"type":"rich_text_section","elements":[]}]}]},{"client_msg_id":"8e8d182f-ed7c-4b91-8d73-fd6048460fe8","type":"message","text":"I'm struggling to try and reduce allocations made when using `GhostDerivativeOperator`s from `DiffEqOperators` . Example:\n```d2x = CenteredDifference{1}(2, 2, 1.0, 5);\nbcx = Neumann0BC(1.0, 1)\nop = d2x * bcx\n\nu = zeros(5,5)\nu[3,3] = 1.0\n@btime du = op * u # 99.501 μs (1155 allocations: 95.17 KiB)\n\ndu = zeros(5,5)\n@btime mul!(du, op, u) # 97.665 μs (1154 allocations: 94.89 KiB)```\nI was hoping for a bigger improvement from the inplace multiplication. Is this a necessary limitation of the operators being driven by convolutions?","user":"U01J62981NK","ts":"1616453240.152700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"07T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm struggling to try and reduce allocations made when using "},{"type":"text","text":"GhostDerivativeOperator","style":{"code":true}},{"type":"text","text":"s from "},{"type":"text","text":"DiffEqOperators","style":{"code":true}},{"type":"text","text":" . Example:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"d2x = CenteredDifference{1}(2, 2, 1.0, 5);\nbcx = Neumann0BC(1.0, 1)\nop = d2x * bcx\n\nu = zeros(5,5)\nu[3,3] = 1.0\n@btime du = op * u # 99.501 μs (1155 allocations: 95.17 KiB)\n\ndu = zeros(5,5)\n@btime mul!(du, op, u) # 97.665 μs (1154 allocations: 94.89 KiB)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I was hoping for a bigger improvement from the inplace multiplication. Is this a necessary limitation of the operators being driven by convolutions?"}]}]}]},{"client_msg_id":"9db27345-85f9-481c-8a6c-6680dc167ab0","type":"message","text":"this <https://www.lifl.fr/~sedoglav/Load/Sedoglavic2002.pdf> algorithm is efficient for local identifiability analysis, I started putting together some draft code for it, this is not ready yet, but any feedback is welcome: <https://github.com/iliailmer/local-identifiability>\ni wonder how Symbolics/MTK will work with AbtractAlgebra and modular arithmetic for power series.","user":"U01K1S5RZB9","ts":"1616468800.153900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/vCx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this "},{"type":"link","url":"https://www.lifl.fr/~sedoglav/Load/Sedoglavic2002.pdf"},{"type":"text","text":" algorithm is efficient for local identifiability analysis, I started putting together some draft code for it, this is not ready yet, but any feedback is welcome: "},{"type":"link","url":"https://github.com/iliailmer/local-identifiability"},{"type":"text","text":"\ni wonder how Symbolics/MTK will work with AbtractAlgebra and modular arithmetic for power series."}]}]}]},{"client_msg_id":"695b07cc-72d1-4d0c-bb1a-01934ef679a2","type":"message","text":"```julia&gt; ReverseDiffVJP(compile=false)\nERROR: MethodError: no method matching ReverseDiffVJP(; compile=false)\nClosest candidates are:\n  ReverseDiffVJP() at /home/arno/.julia/packages/DiffEqSensitivity/JqbFp/src/sensitivity_algorithms.jl:134 got unsupported keyword argument \"compile\"\n  ReverseDiffVJP(::Any) at /home/arno/.julia/packages/DiffEqSensitivity/JqbFp/src/sensitivity_algorithms.jl:134 got unsupported keyword argument \"compile\"\nStacktrace:\n [1] top-level scope at REPL[27]:1\n\njulia&gt; ReverseDiffVJP(compile=true)\nERROR: MethodError: no method matching ReverseDiffVJP(; compile=true)\n...\n\njulia&gt; ReverseDiffVJP(true)\nReverseDiffVJP{true}()\n\njulia&gt; ReverseDiffVJP(false)\nReverseDiffVJP{false}()```\ncompile does not seem to be a keyword like the docs suggest. I would fix this myself but I don't know in which direction, change the docs or actually make it a keyword argument.","user":"UQEDP1Q5V","ts":"1616505529.156100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KAvU2","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> ReverseDiffVJP(compile=false)\nERROR: MethodError: no method matching ReverseDiffVJP(; compile=false)\nClosest candidates are:\n  ReverseDiffVJP() at /home/arno/.julia/packages/DiffEqSensitivity/JqbFp/src/sensitivity_algorithms.jl:134 got unsupported keyword argument \"compile\"\n  ReverseDiffVJP(::Any) at /home/arno/.julia/packages/DiffEqSensitivity/JqbFp/src/sensitivity_algorithms.jl:134 got unsupported keyword argument \"compile\"\nStacktrace:\n [1] top-level scope at REPL[27]:1\n\njulia> ReverseDiffVJP(compile=true)\nERROR: MethodError: no method matching ReverseDiffVJP(; compile=true)\n...\n\njulia> ReverseDiffVJP(true)\nReverseDiffVJP{true}()\n\njulia> ReverseDiffVJP(false)\nReverseDiffVJP{false}()"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"compile does not seem to be a keyword like the docs suggest. I would fix this myself but I don't know in which direction, change the docs or actually make it a keyword argument."}]}]}]},{"client_msg_id":"fcae6f68-95d8-4c7d-bd25-654be6c86ec6","type":"message","text":"It's a default argument IIRC","user":"U69BL50BF","ts":"1616506395.156300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WmN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's a default argument IIRC"}]}]}]},{"client_msg_id":"a2216f53-5027-4a22-9e4a-8b2013a5bf65","type":"message","text":"In the codebase yes, but the docs use it as kw I think.","user":"UQEDP1Q5V","ts":"1616506815.157000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TcjHK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the codebase yes, but the docs use it as kw I think."}]}]}]},{"client_msg_id":"8df4d5fd-6e21-4b54-a083-02269fe0c8f7","type":"message","text":"oh interesting","user":"U69BL50BF","ts":"1616508732.157200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jbw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh interesting"}]}]}]},{"client_msg_id":"7c3511b2-3552-48ee-b475-e81075dd7fef","type":"message","text":"the docs should get updated then","user":"U69BL50BF","ts":"1616508736.157500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q0F=z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the docs should get updated then"}]}]}]},{"client_msg_id":"5d1d1947-184a-4584-bdd7-0fcc1df75032","type":"message","text":"I'm like 99% sure that I have done `ReverseDiffVJP(compile=true)` and it worked fine. So either something changed or maybe you have an old version?","user":"U01H36BUDJB","ts":"1616509007.158100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GAX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm like 99% sure that I have done "},{"type":"text","text":"ReverseDiffVJP(compile=true)","style":{"code":true}},{"type":"text","text":" and it worked fine. So either something changed or maybe you have an old version?"}]}]}]},{"client_msg_id":"d60deb37-1870-47fa-8c8b-93d2d3d7ed03","type":"message","text":"How do I diagnose a slow GPU solve ? It's currently very slow but GPU usage is also very low. I'd expect the GPU usage to at least be high. CPU usage is also surprisingly high, while I would expect nothing to happen on the CPU. :/","user":"UKJSNT1QR","ts":"1616514229.161800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hn0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do I diagnose a slow GPU solve ? It's currently very slow but GPU usage is also very low. I'd expect the GPU usage to at least be high. CPU usage is also surprisingly high, while I would expect nothing to happen on the CPU. :/"}]}]}],"thread_ts":"1616514229.161800","reply_count":3,"reply_users_count":2,"latest_reply":"1616514717.162900","reply_users":["UM8JUNJG7","UKJSNT1QR"],"subscribed":false},{"client_msg_id":"00308304-942c-4347-b8db-a66b3b356bfc","type":"message","text":"Is there an easy way to do mixed GPU / CPU profiling and see where the time is spent ?","user":"UKJSNT1QR","ts":"1616514260.162300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MKBJl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there an easy way to do mixed GPU / CPU profiling and see where the time is spent ?"}]}]}]},{"client_msg_id":"9f322368-f6c7-4f91-a6e8-78cade39cdc4","type":"message","text":"is the jacobian generation faster for a model that's been written in modeling toolkit rather than for a model I used modelingtoolkitize for?","user":"U01G3BG7AFR","ts":"1616537559.164900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qu9KG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is the jacobian generation faster for a model that's been written in modeling toolkit rather than for a model I used modelingtoolkitize for?"}]}]}]},{"client_msg_id":"e06aa491-f140-4ea5-960f-bd870c0629d8","type":"message","text":"it should be about the same, sans the tracing time.","user":"U69BL50BF","ts":"1616537696.165200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xwc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it should be about the same, sans the tracing time."}]}]}]},{"client_msg_id":"11ed621a-8811-430c-9546-7276e5b4f4dd","type":"message","text":"I came across a paper entitled “Geometric Algebra Levenberg-Marquardt”, that uses projective geometric algebra (PGA) for automatic differentiation. To the experts on autodiff, how widely used are PGA techniques for autodiff? Are there limitations to such techniques?","user":"ULSFQ48UQ","ts":"1616594374.168800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XXQP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I came across a paper entitled “Geometric Algebra Levenberg-Marquardt”, that uses projective geometric algebra (PGA) for automatic differentiation. To the experts on autodiff, how widely used are PGA techniques for autodiff? Are there limitations to such techniques?"}]}]}]},{"client_msg_id":"65d129f5-71bc-48ad-b3e1-b4a1012f83f9","type":"message","text":"I mean, the method of <https://link.springer.com/chapter/10.1007/978-3-030-22514-8_51> isn't surprising. It's using forward-mode AD to compute matrix-free Hessian-vector products and then noting that CG converges within N iterations on positive definite matrices.","user":"U69BL50BF","ts":"1616596286.169800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RXe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, the method of "},{"type":"link","url":"https://link.springer.com/chapter/10.1007/978-3-030-22514-8_51"},{"type":"text","text":" isn't surprising. It's using forward-mode AD to compute matrix-free Hessian-vector products and then noting that CG converges within N iterations on positive definite matrices."}]}]}]},{"client_msg_id":"fdf6defa-5dab-41fd-bd65-58eab1282a54","type":"message","text":"Not only is it not optimal (forward-over-reverse would be better), but it's an overly complicated way of computing something that is well-known in other terms. It reminds me of category theory :shrug:","user":"U69BL50BF","ts":"1616596334.170600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oFdal","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not only is it not optimal (forward-over-reverse would be better), but it's an overly complicated way of computing something that is well-known in other terms. It reminds me of category theory "},{"type":"emoji","name":"shrug"}]}]}],"thread_ts":"1616596334.170600","reply_count":3,"reply_users_count":2,"latest_reply":"1616599086.179700","reply_users":["U6788D83U","UM8JUNJG7"],"is_locked":false,"subscribed":false,"reactions":[{"name":"rolling_on_the_floor_laughing","users":["U6788D83U","UP95S4864","UM8JUNJG7"],"count":3}]},{"client_msg_id":"688a64a2-3009-4f82-9afa-3d5ce5788433","type":"message","text":"Geometric algebra isn't bad though since it gives a nice algebraic way to compute and derive a ton of things, but most of what it's used for generally doesn't end up being too surprising.","user":"U69BL50BF","ts":"1616596365.171200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mo7VH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Geometric algebra isn't bad though since it gives a nice algebraic way to compute and derive a ton of things, but most of what it's used for generally doesn't end up being too surprising."}]}]}]},{"client_msg_id":"dbf5c416-8dca-4437-8174-8f6ef9949d66","type":"message","text":"Also, it’s worth noting that CG doesn’t quite do that in practice, because the loss of orthogonality in finite precision arithmetic.","user":"U6788D83U","ts":"1616596735.171800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=OC98","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, it’s worth noting that CG doesn’t quite do that in practice, because the loss of orthogonality in finite precision arithmetic."}]}]}]},{"client_msg_id":"4648e950-017c-4873-ad99-156ae1fc4ac3","type":"message","text":"Note that PGA has some nice successes in computer graphics, particularly in computing intersections of points, lines, and spheres, if you include conformal GA. I find geometric algebra preferable to complex algebra, it’s not as restrictive, and makes it easier to combine different spaces in a single model.","user":"ULSFQ48UQ","ts":"1616597948.179100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8UU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Note that PGA has some nice successes in computer graphics, particularly in computing intersections of points, lines, and spheres, if you include conformal GA. I find geometric algebra preferable to complex algebra, it’s not as restrictive, and makes it easier to combine different spaces in a single model."}]}]}]},{"client_msg_id":"f75dacd0-f046-474c-ae78-18879c6efa2d","type":"message","text":"Hi all. I hope this is the right place to ask. Otherwise, please feel free to re-direct me! :slightly_smiling_face:\n\nI am encountering an issue with the minimal MLK non-working example below:\n\n`using Flux`\n`using Symbolics`\n`using DiffEqFlux`\n`using ModelingToolkit`\n`using NeuralPDE`\n`using GalacticOptim`\n\n`@parameters t, l, r`\n`TMAX = 1000.0`\n`LMAX = 300.0`\n`RMAX = 10.0`\n\n`Dt  = Differential(t)`\n`Dl  = Differential(l)`\n`Dr  = Differential(r)`\n\n`@variables u1(..), u2(..)`\n\n`domains = [`\n    `t in ModelingToolkit.IntervalDomain(0.0,TMAX),`\n    `l in ModelingToolkit.IntervalDomain(0.0,LMAX),`\n    `r in ModelingToolkit.IntervalDomain(0.0,RMAX), ]`\n`steps = [ 10,10,10 ]` \n`dxs = [`\n    `(domains[i].domain.upper-domains[i].domain.lower)/steps[i]`\n    `for i in 1:length(domains) ]`\n`indvars = [t,l,r]`\n`depvars = [u1,u2]`\n\n`inner = 30`\n`chains = [`\n    `FastChain(`\n        `FastDense(length(indvars),inner,Flux.σ),`\n        `FastDense(inner,inner,Flux.σ),`\n        `FastDense(inner,inner,Flux.σ),`\n        `FastDense(inner,1))`\n    `for u in depvars]`\n`strategy = GridTraining(dxs)`\n`discretization = PhysicsInformedNN(chains, strategy)`\n\n`I(t) = (t&lt;=TMAX/2) ? -1.0 : 1.0`\n`ModelingToolkit.@register I(t)`\n\n`eqs = [`\n    `Dl(u1(t,l,r)) ~ 0.f0,`\n    `Dr(u1(t,l,r)) ~ 0.f0,`\n    `Dt(u2(t,l,r)) ~ 0.f0,`\n    `Dl(u2(t,l,r)) ~ 0.f0,`\n    `Dr(u2(t,l,r)) ~ 0.f0, ]`\n`bcs = [`\n    `u1(t,0,0) ~ I(t),`\n    `u2(0,0,r) ~ 2.f0, ]`\n\n`max_iterations = 3`\n`pde_system = PDESystem(eqs,bcs,domains,indvars,depvars)`\n`prob = discretize(pde_system,discretization)`\n\nwhich produces an\n\n`ERROR: LoadError: BoundsError: attempt to access 0-element Vector{Vector{Any}} at index [1]` \n\nin NeuralPDE/`pinns_pde_solve.jl` :get_argument() while returning the `first.(args_)` , that I think depends on the fact that `e isa Expr` is False in `find_thing_in_expr()`  for the `eqs` above.\n\nAny suggestions? :-D","user":"U01R0NYA8F9","ts":"1616600153.181300","team":"T68168MUP","edited":{"user":"U01R0NYA8F9","ts":"1616600422.000000"},"blocks":[{"type":"rich_text","block_id":"ecjd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all. I hope this is the right place to ask. Otherwise, please feel free to re-direct me! "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\n\nI am encountering an issue with the minimal MLK non-working example below:\n\n"},{"type":"text","text":"using Flux","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"using Symbolics","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"using DiffEqFlux","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"using ModelingToolkit","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"using NeuralPDE","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"using GalacticOptim","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"@parameters t, l, r","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"TMAX = 1000.0","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"LMAX = 300.0","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"RMAX = 10.0","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"Dt  = Differential(t)","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"Dl  = Differential(l)","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"Dr  = Differential(r)","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"@variables u1(..), u2(..)","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"domains = [","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    t in ModelingToolkit.IntervalDomain(0.0,TMAX),","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    l in ModelingToolkit.IntervalDomain(0.0,LMAX),","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    r in ModelingToolkit.IntervalDomain(0.0,RMAX), ]","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"steps = [ 10,10,10 ] ","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"dxs = [","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    (domains[i].domain.upper-domains[i].domain.lower)/steps[i]","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    for i in 1:length(domains) ]","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"indvars = [t,l,r]","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"depvars = [u1,u2]","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"inner = 30","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"chains = [","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    FastChain(","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"        FastDense(length(indvars),inner,Flux.σ),","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"        FastDense(inner,inner,Flux.σ),","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"        FastDense(inner,inner,Flux.σ),","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"        FastDense(inner,1))","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    for u in depvars]","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"strategy = GridTraining(dxs)","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"discretization = PhysicsInformedNN(chains, strategy)","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"I(t) = (t<=TMAX/2) ? -1.0 : 1.0","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"ModelingToolkit.@register I(t)","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"eqs = [","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    Dl(u1(t,l,r)) ~ 0.f0,","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    Dr(u1(t,l,r)) ~ 0.f0,","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    Dt(u2(t,l,r)) ~ 0.f0,","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    Dl(u2(t,l,r)) ~ 0.f0,","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    Dr(u2(t,l,r)) ~ 0.f0, ]","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"bcs = [","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    u1(t,0,0) ~ I(t),","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    u2(0,0,r) ~ 2.f0, ]","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"max_iterations = 3","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"pde_system = PDESystem(eqs,bcs,domains,indvars,depvars)","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"prob = discretize(pde_system,discretization)","style":{"code":true}},{"type":"text","text":"\n\nwhich produces an\n\n"},{"type":"text","text":"ERROR: LoadError: BoundsError: attempt to access 0-element Vector{Vector{Any}} at index [1] ","style":{"code":true}},{"type":"text","text":"\n\nin NeuralPDE/"},{"type":"text","text":"pinns_pde_solve.jl","style":{"code":true}},{"type":"text","text":" :get_argument() while returning the "},{"type":"text","text":"first.(args_)","style":{"code":true}},{"type":"text","text":" , that I think depends on the fact that "},{"type":"text","text":"e isa Expr","style":{"code":true}},{"type":"text","text":" is False in "},{"type":"text","text":"find_thing_in_expr()","style":{"code":true}},{"type":"text","text":"  for the "},{"type":"text","text":"eqs","style":{"code":true}},{"type":"text","text":" above.\n\nAny suggestions? :-D"}]}]}]},{"client_msg_id":"cd777996-15e9-4521-a8e0-383393bbb055","type":"message","text":"&gt; Note that PGA has some nice successes in computer graphics, particularly in computing intersections of points, lines, and spheres, if you include conformal GA. I find geometric algebra preferable to complex algebra, it’s not as restrictive, and makes it easier to combine different spaces in a single model.\nDid those require PGA? From what I've seen, it's a neat language to simplify some coding, but I haven't seen a result which \"requires\" it.","user":"U69BL50BF","ts":"1616617008.184800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dai","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Note that PGA has some nice successes in computer graphics, particularly in computing intersections of points, lines, and spheres, if you include conformal GA. I find geometric algebra preferable to complex algebra, it’s not as restrictive, and makes it easier to combine different spaces in a single model."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Did those require PGA? From what I've seen, it's a neat language to simplify some coding, but I haven't seen a result which \"requires\" it."}]}]}]},{"client_msg_id":"d212b4b1-9367-4db9-90cb-0a9af5fa14a3","type":"message","text":"I think by definition anything you can do with it can just be done with simple vectors and calculus?","user":"U69BL50BF","ts":"1616617023.185200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ryV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think by definition anything you can do with it can just be done with simple vectors and calculus?"}]}]}]},{"client_msg_id":"61e3aa77-38c2-4754-b73f-38e74321eb60","type":"message","text":"The Geometric Algebra True Believer:tm: would say\n&gt; sure, but you could also say the exact same thing about complex numbers. They're still very useful and nice ","user":"U8D9768Q6","ts":"1616617286.187000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pi=I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The Geometric Algebra True Believer"},{"type":"emoji","name":"tm"},{"type":"text","text":" would say\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"sure, but you could also say the exact same thing about complex numbers. They're still very useful and nice "}]}]}]},{"client_msg_id":"eff1b4de-f87a-4bb8-9baf-be12e74f8482","type":"message","text":"Complex is useful because complex analysis easily identifies a whole set of really powerful tools with holomorphic functions. If you didn't have all of those properties of holomorphic functions, with using complex analysis as the only simple way to prove some of those statements, then I think it would get a lot less use.","user":"U69BL50BF","ts":"1616617423.189800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BXar","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Complex is useful because complex analysis easily identifies a whole set of really powerful tools with holomorphic functions. If you didn't have all of those properties of holomorphic functions, with using complex analysis as the only simple way to prove some of those statements, then I think it would get a lot less use."}]}]}]},{"client_msg_id":"6949ff76-72de-4664-9c96-a79c1774d721","type":"message","text":"You kind of have the opposite with geometric algebra and category theory: you prove the statement without it first, and then show you can rewrite the statement in a nicer way.","user":"U69BL50BF","ts":"1616617450.190800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C+ef","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You kind of have the opposite with geometric algebra and category theory: you prove the statement without it first, and then show you can rewrite the statement in a nicer way."}]}]}]},{"client_msg_id":"78577c05-cc2c-4ad0-a92b-4eb831e219b7","type":"message","text":"I think it's similar to the fact that you can write down Maxwell's equations with quaternions: it's cool but :shrug:","user":"U69BL50BF","ts":"1616617475.191700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d/k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it's similar to the fact that you can write down Maxwell's equations with quaternions: it's cool but "},{"type":"emoji","name":"shrug"}]}]}]},{"client_msg_id":"447a4215-23ee-4468-90a7-4e918e107546","type":"message","text":"Eh, GA does actually generalize many statements about complex numbers to statements about n-dimensional vector algebra / calculus","user":"U8D9768Q6","ts":"1616617502.192300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A/dQK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Eh, GA does actually generalize many statements about complex numbers to statements about n-dimensional vector algebra / calculus"}]}]}]},{"client_msg_id":"e02767ea-e960-4476-a435-98a660c4b4b2","type":"message","text":"It's not the most useful framework as we've already developed this machinery in other languages, but I don't thunk your characterization is fair","user":"U8D9768Q6","ts":"1616617538.193200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e=k=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's not the most useful framework as we've already developed this machinery in other languages, but I don't thunk your characterization is fair"}]}]}]},{"client_msg_id":"02df8934-2286-41a6-aaae-e1db4d4f0b5c","type":"message","text":"The other thing I'd mention is that in Projective GA, you have a big vector space (whose elements represent points, lines, planes, etc) with a multiplication table that's somewhat spars (unlike regular GA), so I'd imagine that there's more room for more efficient computations in PGA than using matrices","user":"U8D9768Q6","ts":"1616617672.195700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HZ8yL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The other thing I'd mention is that in Projective GA, you have a big vector space (whose elements represent points, lines, planes, etc) with a multiplication table that's somewhat spars (unlike regular GA), so I'd imagine that there's more room for more efficient computations in PGA than using matrices"}]}]}]},{"client_msg_id":"752c28c9-db0b-45cb-8974-e2ecb8307a7c","type":"message","text":"That is, the GA of 3D space in matrix form would look like\n```using StaticArrays\n\nσ0 = SA[1 0 0 0\n        0 1 0 0\n        0 0 1 0\n        0 0 0 1];\n\nσ1 = SA[0 0 1 0\n        0 0 0 1\n        1 0 0 0\n        0 1 0 0];\n\nσ2 = SA[0  0  0  1\n        0  0 -1  0\n        0 -1  0  0\n        1  0  0  0];\n\nσ3 = SA[1 0  0  0\n        0 1  0  0\n        0 0 -1  0\n        0 0  0 -1];```\nand then the projective extension of that would be\n```⊗(a, b) = SMatrix(kron(a,b))\nh0 = SA[1 0; 0 1]\nh1 = SA[0 1; 0 0]\ne0 = σ0 ⊗ h0\ne1 = σ1 ⊗ h0\ne2 = σ2 ⊗ h0\ne3 = σ3 ⊗ h0\ne4 = σ0 ⊗ h1```\nand the multiplication table for `e_i`  and they're products has many zeros (because `h1` is nilpotent), so writing software that can take advantage of that can have many advantages. But probably there are ways to get similar effects through some clever manipulations","user":"U8D9768Q6","ts":"1616617950.199000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yMr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is, the GA of 3D space in matrix form would look like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using StaticArrays\n\nσ0 = SA[1 0 0 0\n        0 1 0 0\n        0 0 1 0\n        0 0 0 1];\n\nσ1 = SA[0 0 1 0\n        0 0 0 1\n        1 0 0 0\n        0 1 0 0];\n\nσ2 = SA[0  0  0  1\n        0  0 -1  0\n        0 -1  0  0\n        1  0  0  0];\n\nσ3 = SA[1 0  0  0\n        0 1  0  0\n        0 0 -1  0\n        0 0  0 -1];"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and then the projective extension of that would be\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"⊗(a, b) = SMatrix(kron(a,b))\nh0 = SA[1 0; 0 1]\nh1 = SA[0 1; 0 0]\ne0 = σ0 ⊗ h0\ne1 = σ1 ⊗ h0\ne2 = σ2 ⊗ h0\ne3 = σ3 ⊗ h0\ne4 = σ0 ⊗ h1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and the multiplication table for "},{"type":"text","text":"e_i","style":{"code":true}},{"type":"text","text":"  and they're products has many zeros (because "},{"type":"text","text":"h1","style":{"code":true}},{"type":"text","text":" is nilpotent), so writing software that can take advantage of that can have many advantages. But probably there are ways to get similar effects through some clever manipulations"}]}]}]},{"client_msg_id":"230174ea-b82a-491a-9f2d-9de683d67f95","type":"message","text":"<@U69BL50BF> Can `Symbolics.jl` generate derivatives for functions with boolean expressions (e.g. `x &gt; 0` )? It doesn't seem to. `expand_derivatives` doesn't touch them, at least.","user":"U01H36BUDJB","ts":"1616618773.201100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZCRq","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" Can "},{"type":"text","text":"Symbolics.jl","style":{"code":true}},{"type":"text","text":" generate derivatives for functions with boolean expressions (e.g. "},{"type":"text","text":"x > 0","style":{"code":true}},{"type":"text","text":" )? It doesn't seem to. "},{"type":"text","text":"expand_derivatives","style":{"code":true}},{"type":"text","text":" doesn't touch them, at least."}]}]}]},{"client_msg_id":"b67b0ef1-5df3-467d-b2c7-c6b4a59ab2b5","type":"message","text":":thinking_face: that probably needs some examples and tests.","user":"U69BL50BF","ts":"1616618899.201400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PUv","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"thinking_face"},{"type":"text","text":" that probably needs some examples and tests."}]}]}]},{"client_msg_id":"950ee5d3-2e3c-46f0-9b66-d0f254f9874a","type":"message","text":"Here's a simple example:\n```using ModelingToolkit\n@variables T\nh(T) = (T&lt;=0.0)*exp(-(T/0.1)^2)+(T&gt;0.0)\nu = h(T)\ndFdT = ∂T(u) |&gt; expand_derivatives```","user":"U01H36BUDJB","ts":"1616619214.202000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZuK2k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's a simple example:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using ModelingToolkit\n@variables T\nh(T) = (T<=0.0)*exp(-(T/0.1)^2)+(T>0.0)\nu = h(T)\ndFdT = ∂T(u) |> expand_derivatives"}]}]}]},{"client_msg_id":"e66dacf2-9802-4c28-98f5-2fa53828b93d","type":"message","text":"Outputs: `Differential(T)(T &gt; 0.0) + Differential(T)(T &lt;= 0.0)*exp(-100.0(T^2)) - (200.0T*exp(-100.0(T^2))*(T &lt;= 0.0))`","user":"U01H36BUDJB","ts":"1616619233.202200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H886","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Outputs: "},{"type":"text","text":"Differential(T)(T > 0.0) + Differential(T)(T <= 0.0)*exp(-100.0(T^2)) - (200.0T*exp(-100.0(T^2))*(T <= 0.0))","style":{"code":true}}]}]}]},{"client_msg_id":"5ea69732-59f2-461d-a3f9-14adcb8982d6","type":"message","text":"Is this where `IfElse` is necessary?","user":"U01H36BUDJB","ts":"1616619274.202500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tYIR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this where "},{"type":"text","text":"IfElse","style":{"code":true}},{"type":"text","text":" is necessary?"}]}]}]},{"client_msg_id":"76761c1e-18f7-437a-8157-ee3a5847007a","type":"message","text":"Assumptions might be needed too","user":"U69BL50BF","ts":"1616619310.202700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ho0b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Assumptions might be needed too"}]}]}]},{"client_msg_id":"92ca3d6c-aa51-49bc-bac5-aca7ddb53956","type":"message","text":"Is there a way to specify assumptions...?","user":"U01H36BUDJB","ts":"1616619352.203000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rpv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to specify assumptions...?"}]}]}]},{"client_msg_id":"7482cf97-e4d7-45dd-9570-ebfa32a6f54a","type":"message","text":"yes, you just need a whole assumptions mechanism, like Mathematica","user":"U69BL50BF","ts":"1616619455.203300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Us2fG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, you just need a whole assumptions mechanism, like Mathematica"}]}]}]},{"client_msg_id":"cc0c982a-8cab-4d78-8ee1-29f987c39967","type":"message","text":"we don't have that at all right now.","user":"U69BL50BF","ts":"1616619459.203500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H/y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we don't have that at all right now."}]}]}]},{"client_msg_id":"4325c293-4dcf-49a0-ac11-c284c922d4af","type":"message","text":"ah, I see","user":"U01H36BUDJB","ts":"1616619467.203800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UrB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, I see"}]}]}]},{"client_msg_id":"27b32a99-6cb7-47f8-b03d-6187e12e746d","type":"message","text":"we could probably do a few things to improve this easily though, but more generally solving this could be difficult.","user":"U69BL50BF","ts":"1616619480.204100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eTqda","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we could probably do a few things to improve this easily though, but more generally solving this could be difficult."}]}]}]},{"client_msg_id":"6af7b745-6218-4a7b-95b4-b8f47bf8ea2b","type":"message","text":"should I try using `IfElse` or just stick with `ForawrdDiff` ?","user":"U01H36BUDJB","ts":"1616619564.204800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0Jwt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"should I try using "},{"type":"text","text":"IfElse","style":{"code":true}},{"type":"text","text":" or just stick with "},{"type":"text","text":"ForawrdDiff","style":{"code":true}},{"type":"text","text":" ?"}]}]}]},{"client_msg_id":"f85922a0-cd30-4171-8b0b-fe5ebbe70701","type":"message","text":"If you use IfElse you should be fine.","user":"U69BL50BF","ts":"1616619667.205100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K9Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you use IfElse you should be fine."}]}]}],"reactions":[{"name":"+1","users":["U01H36BUDJB"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Is the bridge working in both directions?","ts":"1616619758.205200","username":"[zulip] <Brenhin Keller>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-03-25/1895849447458_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Is the bridge working in both directions?","verbatim":false}}]},{"client_msg_id":"90DF11C5-970D-40AB-B575-43C13651D30D","type":"message","text":"Looks like that’s a yes!","user":"UGU761DU2","ts":"1616619770.205600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cjY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks like that’s a yes!"}]}]}]},{"client_msg_id":"6ed03507-3e9b-4ca0-b4c3-61b308c96cf6","type":"message","text":"Do you have examples of FVM solutions to a multidimensional Fokker-Planck equation (for particle distributions)? If not, please help me getting me started, I will then add an example (e.g. 1D or 2D) to the docs.","user":"U01HC60USTH","ts":"1616688894.215900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xa5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you have examples of FVM solutions to a multidimensional Fokker-Planck equation (for particle distributions)? If not, please help me getting me started, I will then add an example (e.g. 1D or 2D) to the docs."}]}]}]},{"client_msg_id":"1856c232-08df-4648-a6af-2b7b509021b9","type":"message","text":"is it a known issue that zygote fails with DiffEqUncertainty expectation calls in batch mode?","user":"UQEDP1Q5V","ts":"1616699265.216700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VCpN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is it a known issue that zygote fails with DiffEqUncertainty expectation calls in batch mode?"}]}]}]},{"client_msg_id":"fd732f8c-274f-4b5b-a71d-9bf8eab05ae5","type":"message","text":"For some integrators, yes.","user":"U69BL50BF","ts":"1616700043.216900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6LtS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For some integrators, yes."}]}]}]},{"client_msg_id":"ed9cc695-2ec3-4ced-b013-21a560ef6290","type":"message","text":"There's a few issues like:\n\n<https://github.com/SciML/Quadrature.jl/issues/40>\n<https://github.com/SciML/Quadrature.jl/issues/61>","user":"U69BL50BF","ts":"1616700070.217200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S9=65","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There's a few issues like:\n\n"},{"type":"link","url":"https://github.com/SciML/Quadrature.jl/issues/40"},{"type":"text","text":"\n"},{"type":"link","url":"https://github.com/SciML/Quadrature.jl/issues/61"}]}]}]},{"client_msg_id":"ccbfed65-5c5a-4bb3-813a-1dcaa33415c2","type":"message","text":"The Quadrature tests with Zygote do seem to work when `nout=1`. Is `nout=1` used by `expectation` when the observable `g` outputs a scalar?","user":"UQEDP1Q5V","ts":"1616701541.221600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r4VXp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The Quadrature tests with Zygote do seem to work when "},{"type":"text","text":"nout=1","style":{"code":true}},{"type":"text","text":". Is "},{"type":"text","text":"nout=1","style":{"code":true}},{"type":"text","text":" used by "},{"type":"text","text":"expectation","style":{"code":true}},{"type":"text","text":" when the observable "},{"type":"text","text":"g","style":{"code":true}},{"type":"text","text":" outputs a scalar?"}]}]}]},{"client_msg_id":"afc6b032-fbd8-405e-b884-1b33587e9a67","type":"message","text":"When doing AD the gradient of the expectation gets transformed to the expectation of the gradient, so `nout` gets modified based on the number of parameters.","user":"UP95S4864","ts":"1616701726.223100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sKET","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When doing AD the gradient of the expectation gets transformed to the expectation of the gradient, so "},{"type":"text","text":"nout","style":{"code":true}},{"type":"text","text":" gets modified based on the number of parameters."}]}]}]},{"client_msg_id":"4785ef9d-798d-4c3a-a9dc-dcc86a74cc6b","type":"message","text":"But why is that not also an issue for:\n```f(x,p) = x*p[1].+p[2]*p[3]\n\nlb =1.0\nub = 3.0\np = [2.0, 3.0, 4.0]\nprob = QuadratureProblem(f,lb,ub,p)\n\nfunction testf3(lb,ub,p; f=f)\n    prob = QuadratureProblem(f,lb,ub,p, batch = 10, nout=1)\n    solve(prob, CubatureJLp(); reltol=1e-3,abstol=1e-3)[1]\nend\n\ndp1 = ForwardDiff.gradient(p-&gt;testf3(lb,ub,p),p)\ndp2 = Zygote.gradient(p-&gt;testf3(lb,ub,p),p)[1]```\n","user":"UQEDP1Q5V","ts":"1616701971.223600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W7gV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But why is that not also an issue for:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"f(x,p) = x*p[1].+p[2]*p[3]\n\nlb =1.0\nub = 3.0\np = [2.0, 3.0, 4.0]\nprob = QuadratureProblem(f,lb,ub,p)\n\nfunction testf3(lb,ub,p; f=f)\n    prob = QuadratureProblem(f,lb,ub,p, batch = 10, nout=1)\n    solve(prob, CubatureJLp(); reltol=1e-3,abstol=1e-3)[1]\nend\n\ndp1 = ForwardDiff.gradient(p->testf3(lb,ub,p),p)\ndp2 = Zygote.gradient(p->testf3(lb,ub,p),p)[1]"}]},{"type":"rich_text_section","elements":[]}]}]},{"client_msg_id":"d79f443e-e8b2-4c7c-9316-f6c654bb2aed","type":"message","text":"When doing expectation does your observable produce a scalar or vector?","user":"UP95S4864","ts":"1616702356.224300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z6AhB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When doing expectation does your observable produce a scalar or vector?"}]}]}]},{"client_msg_id":"f1945968-63a4-4c01-847e-21d1f39189e4","type":"message","text":"scalar","user":"UQEDP1Q5V","ts":"1616702369.224500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PTcy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"scalar"}]}]}]},{"client_msg_id":"d757adcb-a600-4af5-b5af-4a519d123384","type":"message","text":"Can you post an issue with a MWE?","user":"UP95S4864","ts":"1616702485.224900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gGY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you post an issue with a MWE?"}]}]}]},{"client_msg_id":"bf26230b-e1c3-48f1-b3d2-f22f1125fe38","type":"message","text":"I'll try to isolate the problem and post it at DiffEqExpectation.","user":"UQEDP1Q5V","ts":"1616702523.225400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9aB3E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll try to isolate the problem and post it at DiffEqExpectation."}]}]}],"reactions":[{"name":"+1","users":["UP95S4864"],"count":1}]},{"client_msg_id":"b56554f9-2c44-47fa-bc99-c1aab34533b5","type":"message","text":"Is ReverseDiff tape compilation (of a whole objective) safe with various sensalg for differential equations?","user":"UQEDP1Q5V","ts":"1616771571.227000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8jbwF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is ReverseDiff tape compilation (of a whole objective) safe with various sensalg for differential equations?"}]}]}]},{"client_msg_id":"376df7d1-fc6e-4bf0-ad37-97bd8716e526","type":"message","text":"If you don’t have any branches","user":"U6788D83U","ts":"1616772720.227300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P=5BA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you don’t have any branches"}]}]}]},{"client_msg_id":"dd9c0524-2587-4741-ba50-b9386a90169a","type":"message","text":"adaptive time stepping causes branches?","user":"UQEDP1Q5V","ts":"1616773258.227800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xPK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"adaptive time stepping causes branches?"}]}]}]},{"client_msg_id":"0673b500-d97a-438f-a5c8-aff3c35884b1","type":"message","text":"It depends on how you use ReverseDiff","user":"U6788D83U","ts":"1616773360.228400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kj1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It depends on how you use ReverseDiff"}]}]}]},{"client_msg_id":"cb6df7d5-a1c7-40c7-ac6e-29488d04d3f3","type":"message","text":"If you use the continuous adjoint with ReverseDiff, then only branches in the ODE RHS function matter.","user":"U6788D83U","ts":"1616773398.229100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0QZIG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you use the continuous adjoint with ReverseDiff, then only branches in the ODE RHS function matter."}]}]}]},{"client_msg_id":"1241b5c1-0f55-4301-9935-c13d07c87f1a","type":"message","text":"If you are differentiating a whole adaptive solver, then you cannot compile the tape.","user":"U6788D83U","ts":"1616773433.229900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lx6/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you are differentiating a whole adaptive solver, then you cannot compile the tape."}]}]}]},{"client_msg_id":"45fb80c4-868f-4f67-8da8-2ee1c8010ebb","type":"message","text":"I am using InterpolatingAdjoint, and there are no branches in my code other than the adaptive time steps the ODE solver takes. From your explanation I take it I can compile?","user":"UQEDP1Q5V","ts":"1616773514.231100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MA8u+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am using InterpolatingAdjoint, and there are no branches in my code other than the adaptive time steps the ODE solver takes. From your explanation I take it I can compile?"}]}]}]},{"client_msg_id":"c72b7fe6-429a-42b9-b582-0e142be5979c","type":"message","text":"Yes","user":"U6788D83U","ts":"1616773527.231300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CGx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes"}]}]}]},{"client_msg_id":"5c18c388-d73e-4ac2-9421-a1cfb424e9e3","type":"message","text":"Yes, the sensealg form only cares about branches in the RHS","user":"U69BL50BF","ts":"1616776705.231600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pvZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, the sensealg form only cares about branches in the RHS"}]}]}]},{"client_msg_id":"61474f82-3678-43af-a683-7b5ee026b908","type":"message","text":"<https://discourse.julialang.org/t/plotting-odeproblem-solutions-with-makie/58096>","user":"U7ZNTQFLH","ts":"1616880609.232000","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Plotting ODEProblem solutions with Makie","title_link":"https://discourse.julialang.org/t/plotting-odeproblem-solutions-with-makie/58096","text":"Whatever (plot recipes?) allows for the solution output from solving an ODEProblem in ModelingToolkit.jl (or maybe just OrdinaryDiffEq.jl?) to be just plotted using Plots.jl is wonderful and magical. I love how it’s possible to just do sol = solve(problem); plot(sol) as well as plotting individual states by name (plot(sol, vars=[(x, y), (w, z)]) etc). However overall I’m finding Makie to be my favorite tool for plotting/visualization. Is there anything out there yet that provides similar power ...","fallback":"JuliaLang: Plotting ODEProblem solutions with Makie","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1616880589,"from_url":"https://discourse.julialang.org/t/plotting-odeproblem-solutions-with-makie/58096","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/plotting-odeproblem-solutions-with-makie/58096"}],"blocks":[{"type":"rich_text","block_id":"+u9","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://discourse.julialang.org/t/plotting-odeproblem-solutions-with-makie/58096"}]}]}]},{"client_msg_id":"3a181c31-adad-4551-979e-0338bceb1ff3","type":"message","text":"(x-post in <#C8RQUU2KH|makie>, I'll capture answers on Slack in the Discourse from either place)","user":"U7ZNTQFLH","ts":"1616880648.232800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bxG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(x-post in "},{"type":"channel","channel_id":"C8RQUU2KH"},{"type":"text","text":", I'll capture answers on Slack in the Discourse from either place)"}]}]}]},{"client_msg_id":"daaaf55e-7f10-4c4e-8697-2dbde040359e","type":"message","text":"For parameter estimation: what to do when the objective evaluates correctly, but the gradient calculation fails in the ODE solver. Does the trick with the `return Inf` still work then? `ForwardDiff.derivative(x-&gt;Inf,1.0)` returns a 0 derivative.","user":"UQEDP1Q5V","ts":"1616953822.235400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MVp8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For parameter estimation: what to do when the objective evaluates correctly, but the gradient calculation fails in the ODE solver. Does the trick with the "},{"type":"text","text":"return Inf","style":{"code":true}},{"type":"text","text":" still work then? "},{"type":"text","text":"ForwardDiff.derivative(x->Inf,1.0)","style":{"code":true}},{"type":"text","text":" returns a 0 derivative."}]}]}]},{"client_msg_id":"02df3fa6-e976-4c2b-960f-390ce10ad86a","type":"message","text":"did you look into why the derivative is failing?","user":"U69BL50BF","ts":"1616953859.235800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M6p6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"did you look into why the derivative is failing?"}]}]}]},{"client_msg_id":"4337b299-5fab-4711-812e-ea70c08b5d7c","type":"message","text":"Which method?","user":"U69BL50BF","ts":"1616953861.236000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wls","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which method?"}]}]}]},{"client_msg_id":"53d5e517-3c1e-4816-9ebc-e7c24f92250e","type":"message","text":"InterpolatingAdjoint(): initial dt too small (I'm guessing for the reverse solve, but I'm not sure how to diagnose that)","user":"UQEDP1Q5V","ts":"1616954113.237200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B8C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"InterpolatingAdjoint(): initial dt too small (I'm guessing for the reverse solve, but I'm not sure how to diagnose that)"}]}]}]},{"client_msg_id":"11677d7c-3531-4586-9667-6fe8981be3a1","type":"message","text":"does it fail with forward diff or quadrature adjoint?","user":"U69BL50BF","ts":"1616954137.237500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FvvJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does it fail with forward diff or quadrature adjoint?"}]}]}]},{"client_msg_id":"47143952-3912-4213-8632-8cfbeb906bd0","type":"message","text":"ForwardDiff is too slow. I can try again with quadrature adjoint but it will have to recompile for the night. (Also Zygote stack overflows).","user":"UQEDP1Q5V","ts":"1616954378.239300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pRj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ForwardDiff is too slow. I can try again with quadrature adjoint but it will have to recompile for the night. (Also Zygote stack overflows)."}]}]}]},{"client_msg_id":"ddddfeae-ce4e-40a8-9b83-7f93d916f881","type":"message","text":"<@U69BL50BF> I just realized that the `AbstractDiffEqCompositeOperator` cannot be moved to SciMLBase since it `&lt;:AbstractDiffEqLinearOperator` from DiffEqBase. In this case should I move them to that or should `AbstractDiffEqLinearOperator` be moved to SciMLBase?","user":"U9MED583T","ts":"1616967823.241600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7sMS","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" I just realized that the "},{"type":"text","text":"AbstractDiffEqCompositeOperator","style":{"code":true}},{"type":"text","text":" cannot be moved to SciMLBase since it "},{"type":"text","text":"<:AbstractDiffEqLinearOperator","style":{"code":true}},{"type":"text","text":" from DiffEqBase. In this case should I move them to that or should "},{"type":"text","text":"AbstractDiffEqLinearOperator","style":{"code":true}},{"type":"text","text":" be moved to SciMLBase?"}]}]}]},{"client_msg_id":"dd76f312-1692-4086-8bf5-de058d14a6df","type":"message","text":"``AbstractDiffEqLinearOperator``  hmm why is that there?","user":"U69BL50BF","ts":"1616967854.241900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VkU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"`"},{"type":"text","text":"AbstractDiffEqLinearOperator` ","style":{"code":true}},{"type":"text","text":" hmm why is that there?"}]}]}]},{"client_msg_id":"c38b9736-ef49-4b90-9710-a19215b9658a","type":"message","text":"That may have been an accident.","user":"U69BL50BF","ts":"1616967859.242100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x+Rhv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That may have been an accident."}]}]}]},{"client_msg_id":"35a13e20-02a1-42bb-a9a0-3dc3305c8dd2","type":"message","text":"Hmm... something is strange, it looks like it is actually defined in SciMLBase, but DiffEqOperators imports it from DiffEqBase. Sorry for the confusion","user":"U9MED583T","ts":"1616968056.243600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mYw2e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm... something is strange, it looks like it is actually defined in SciMLBase, but DiffEqOperators imports it from DiffEqBase. Sorry for the confusion"}]}]}]},{"client_msg_id":"dcc50bff-5631-4e0a-a3b0-e162d7318f3d","type":"message","text":"<https://github.com/SciML/DiffEqOperators.jl/blob/master/src/DiffEqOperators.jl#L6>\n\nThis was confusing at first","user":"U9MED583T","ts":"1616968113.244400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dpL4","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/SciML/DiffEqOperators.jl/blob/master/src/DiffEqOperators.jl#L6"},{"type":"text","text":"\n\nThis was confusing at first"}]}]}]},{"client_msg_id":"b6b0dc22-cb86-4cff-ad6b-356984b67845","type":"message","text":"What's the right syntax for extracting a certain state by name out of a solution at an arbitrary time (i.e. a combination of `sol[x]` where `x` is a variable and `sol(t)`)? What about for the whole dense solution? And in general is there a way to map a state variable to an index into the solution?","user":"U7ZNTQFLH","ts":"1616968335.246100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ut/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's the right syntax for extracting a certain state by name out of a solution at an arbitrary time (i.e. a combination of "},{"type":"text","text":"sol[x]","style":{"code":true}},{"type":"text","text":" where "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" is a variable and "},{"type":"text","text":"sol(t)","style":{"code":true}},{"type":"text","text":")? What about for the whole dense solution? And in general is there a way to map a state variable to an index into the solution?"}]}]}]},{"client_msg_id":"25b2ec3b-a3d5-4809-9780-bcf941166a8c","type":"message","text":"<@U7ZNTQFLH> we haven't handled that part yet.","user":"U69BL50BF","ts":"1616968646.246300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U9Ohb","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7ZNTQFLH"},{"type":"text","text":" we haven't handled that part yet."}]}]}]},{"client_msg_id":"b7c8a49a-fd42-461d-a071-bbba17229865","type":"message","text":"That's a good issue for SciMLBase though","user":"U69BL50BF","ts":"1616968654.246600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Arxs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's a good issue for SciMLBase though"}]}]}]},{"client_msg_id":"f06f6cd9-8ed9-4fb5-84df-8e507608b4a2","type":"message","text":"and we just started discussing it yesterday with the PDE stuff.","user":"U69BL50BF","ts":"1616968664.247000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xwE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and we just started discussing it yesterday with the PDE stuff."}]}]}]},{"client_msg_id":"f5f8718d-dd6a-4f3a-89ab-68ad2280b91a","type":"message","text":"OK cool. Poking around a bit, on my last question it looks like I can maybe compare hashes between a variable that I have and the `states` field from the ODESystem, would that make sense?","user":"U7ZNTQFLH","ts":"1616968749.248100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cURkS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK cool. Poking around a bit, on my last question it looks like I can maybe compare hashes between a variable that I have and the "},{"type":"text","text":"states","style":{"code":true}},{"type":"text","text":" field from the ODESystem, would that make sense?"}]}]}]},{"client_msg_id":"9e8ba7b0-70b2-42fd-9bb4-f5ef0bbf7f4b","type":"message","text":"what do you mean?","user":"U69BL50BF","ts":"1616969014.248300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"36TF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you mean?"}]}]}]},{"client_msg_id":"6ec71ac8-5b7b-419c-a5d1-15f224c37064","type":"message","text":"The system has a `states` field the elements of which are the `@variable`s that are part of the system, and (I assume) the ordering of them is the same as the order of the states in the solution.","user":"U7ZNTQFLH","ts":"1616969222.249400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"70J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The system has a "},{"type":"text","text":"states","style":{"code":true}},{"type":"text","text":" field the elements of which are the "},{"type":"text","text":"@variable","style":{"code":true}},{"type":"text","text":"s that are part of the system, and (I assume) the ordering of them is the same as the order of the states in the solution."}]}]}]},{"client_msg_id":"d70ae11d-f01c-4183-98cd-a7ba0f0ec7cc","type":"message","text":"So if I've got an ODESystem `mysystem`, a solution `sol`, and one of those variables `x` (defined somewhere by `@variables x(t)`), and I want the dense solution for that state it seems that the `hash` field of one of the entries in `mysystem.states` will match `x.val.hash` at the index I'm looking for.","user":"U7ZNTQFLH","ts":"1616969472.252200","team":"T68168MUP","edited":{"user":"U7ZNTQFLH","ts":"1616969492.000000"},"blocks":[{"type":"rich_text","block_id":"gTPbl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So if I've got an ODESystem "},{"type":"text","text":"mysystem","style":{"code":true}},{"type":"text","text":", a solution "},{"type":"text","text":"sol","style":{"code":true}},{"type":"text","text":", and one of those variables "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" (defined somewhere by "},{"type":"text","text":"@variables x(t)","style":{"code":true}},{"type":"text","text":"), and I want the dense solution for that state it seems that the "},{"type":"text","text":"hash","style":{"code":true}},{"type":"text","text":" field of one of the entries in "},{"type":"text","text":"mysystem.states","style":{"code":true}},{"type":"text","text":" will match "},{"type":"text","text":"x.val.hash","style":{"code":true}},{"type":"text","text":" at the index I'm looking for."}]}]}]},{"client_msg_id":"17359406-9df4-4a15-bd20-4643f6467066","type":"message","text":".. and then I would get my solution at an arbitrary time `t` with `sol(t, idxs=i)`  where `i` is that index.","user":"U7ZNTQFLH","ts":"1616969596.253500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1jSMx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":".. and then I would get my solution at an arbitrary time "},{"type":"text","text":"t","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"sol(t, idxs=i)","style":{"code":true}},{"type":"text","text":"  where "},{"type":"text","text":"i","style":{"code":true}},{"type":"text","text":" is that index."}]}]}]},{"client_msg_id":"b3958a2c-f8b9-4e6a-bc07-502405f2c6e6","type":"message","text":"Not sure if that makes it any clearer :slightly_smiling_face:. I think in part this is tricky because the states I'm interested in are \"vectors\" i.e. `@variables x[1:3]` and it doesn't seem you can just do `mysystem.x[1]` . Though, it seems I can do `mysystem.x₁` but it's a pain to type the subscript and not friendly to loop over all the elements of `x`.","user":"U7ZNTQFLH","ts":"1616969848.256300","team":"T68168MUP","edited":{"user":"U7ZNTQFLH","ts":"1616969857.000000"},"blocks":[{"type":"rich_text","block_id":"wfrI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure if that makes it any clearer "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":". I think in part this is tricky because the states I'm interested in are \"vectors\" i.e. "},{"type":"text","text":"@variables x[1:3]","style":{"code":true}},{"type":"text","text":" and it doesn't seem you can just do "},{"type":"text","text":"mysystem.x[1]","style":{"code":true}},{"type":"text","text":" . Though, it seems I can do "},{"type":"text","text":"mysystem.x₁","style":{"code":true}},{"type":"text","text":" but it's a pain to type the subscript and not friendly to loop over all the elements of "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"1258655e-c157-4dca-983b-cd682e142ffa","type":"message","text":"yes, `sol(t, idxs=x)` can do the same lookup as the other approach, that is the plan.","user":"U69BL50BF","ts":"1616970795.256900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"19eh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, "},{"type":"text","text":"sol(t, idxs=x)","style":{"code":true}},{"type":"text","text":" can do the same lookup as the other approach, that is the plan."}]}]}],"reactions":[{"name":"+1","users":["U7ZNTQFLH"],"count":1}]},{"client_msg_id":"2a7a965f-3067-4bc4-8fa6-ef30a0c5ae98","type":"message","text":"Are the continuous adjoint methods (such as InterpolatingAdjoint) discrete forward over reverse compatible?","user":"UQEDP1Q5V","ts":"1616982392.258100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9OKf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are the continuous adjoint methods (such as InterpolatingAdjoint) discrete forward over reverse compatible?"}]}]}]},{"client_msg_id":"8e8b3d99-8fb1-4e73-9b6a-b411dd143b60","type":"message","text":"yes","user":"U69BL50BF","ts":"1616982403.258300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rDhiq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"fcc3d7a3-463d-4f4e-baac-b3203f1facb8","type":"message","text":"<https://diffeq.sciml.ai/stable/analysis/sensitivity/#Second-Order-Sensitivity-Analysis-via-second_order_sensitivities-(Experimental)>","user":"U69BL50BF","ts":"1616982421.258500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HYbNl","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://diffeq.sciml.ai/stable/analysis/sensitivity/#Second-Order-Sensitivity-Analysis-via-second_order_sensitivities-(Experimental)"}]}]}]},{"client_msg_id":"46025cbc-a230-473f-ad30-e0198ef89ce6","type":"message","text":"that's how that works.","user":"U69BL50BF","ts":"1616982424.258700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=T+Xo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's how that works."}]}]}]},{"client_msg_id":"cf48c879-3abe-4f99-81f1-956c8171400e","type":"message","text":"Right, but there is no high level interface for that yet?","user":"UQEDP1Q5V","ts":"1616982525.259000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x/AxP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, but there is no high level interface for that yet?"}]}]}]},{"client_msg_id":"b6851b45-79d4-4f5f-82e0-731bcbd2f022","type":"message","text":"that's the high level interface. Is there a higher level interface you can think of on it?","user":"U69BL50BF","ts":"1616982586.259400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cB9Rd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's the high level interface. Is there a higher level interface you can think of on it?"}]}]}]},{"client_msg_id":"41169929-e4fe-49eb-b882-fb554286ade4","type":"message","text":"For example that you could add an additional ForwardDiff.jacobian over this example:\n```function sum_of_solution(u0,p)\n  _prob = remake(prob,u0=u0,p=p)\n  sum(solve(_prob,Tsit5(),saveat=0.1,sensealg=QuadratureAdjoint()))\nend\ndu01,dp1 = Zygote.gradient(sum_of_solution,u0,p)```","user":"UQEDP1Q5V","ts":"1616982813.260000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n9y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For example that you could add an additional ForwardDiff.jacobian over this example:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function sum_of_solution(u0,p)\n  _prob = remake(prob,u0=u0,p=p)\n  sum(solve(_prob,Tsit5(),saveat=0.1,sensealg=QuadratureAdjoint()))\nend\ndu01,dp1 = Zygote.gradient(sum_of_solution,u0,p)"}]}]}]},{"client_msg_id":"45450de7-a4d0-49a4-a07b-8ecf5bc7bd3f","type":"message","text":"that's a lower level interface, yeah","user":"U69BL50BF","ts":"1616983419.260200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tqc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's a lower level interface, yeah"}]}]}]},{"client_msg_id":"e3091ba6-03b9-4af1-830c-4175da2bbd2c","type":"message","text":"you could directly call ForwardDiff.jacobian over that","user":"U69BL50BF","ts":"1616983426.260600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uewg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could directly call ForwardDiff.jacobian over that"}]}]}]},{"client_msg_id":"7745e39c-852d-44e5-bfe8-af706fe2197a","type":"message","text":"We added the higher level hessian call but it's kind of an experimental interface but it's hard to tell the utility.","user":"U69BL50BF","ts":"1616983446.261100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ma11","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We added the higher level hessian call but it's kind of an experimental interface but it's hard to tell the utility."}]}]}]},{"client_msg_id":"7b869d18-c2c4-4c66-bfb2-0755ab2b6cd2","type":"message","text":"Is anybody aware of any julia packages related to contraction analysis/theory for non-linear system stability analysis?","user":"UP95S4864","ts":"1617037297.262000","team":"T68168MUP","edited":{"user":"UP95S4864","ts":"1617037437.000000"},"blocks":[{"type":"rich_text","block_id":"ymWst","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is anybody aware of any julia packages related to contraction analysis/theory for non-linear system stability analysis?"}]}]}],"thread_ts":"1617037297.262000","reply_count":4,"reply_users_count":2,"latest_reply":"1617039155.262800","reply_users":["UP95S4864","U011V2YN59N"],"is_locked":false,"subscribed":false},{"client_msg_id":"dde4aa30-1620-40bd-b7a8-57d9e5f93e8e","type":"message","text":"Hi <@U69BL50BF> I remember you had a website where you enter the vector field and display the solution. Is it still running? How safe is it (for example to code inspection, code injection…)\n\nI am planning on making one for one of my project","user":"U7GQE9JP9","ts":"1617101273.264900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+0ePV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi "},{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" I remember you had a website where you enter the vector field and display the solution. Is it still running? How safe is it (for example to code inspection, code injection…)\n\nI am planning on making one for one of my project"}]}]}]},{"client_msg_id":"14a5661b-912b-440c-bb8b-d51882397b01","type":"message","text":"<http://app.juliadiffeq.org/>","user":"U69BL50BF","ts":"1617106592.265100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ubN","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"http://app.juliadiffeq.org/"}]}]}]},{"client_msg_id":"696d1866-a382-40eb-bd88-5435706053ed","type":"message","text":"lots of hacky code injection checks","user":"U69BL50BF","ts":"1617106611.265400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jA4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lots of hacky code injection checks"}]}]}]},{"client_msg_id":"4a141857-168c-4521-9b68-3f71dc9367c7","type":"message","text":"excellent!!","user":"U7GQE9JP9","ts":"1617107278.265600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nbl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"excellent!!"}]}]}]},{"client_msg_id":"35af2c20-2d62-4c19-adde-945a02dd3065","type":"message","text":"is there a github for it?","user":"U7GQE9JP9","ts":"1617107388.265900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kgQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a github for it?"}]}]}]},{"client_msg_id":"497ec736-4b61-4946-ae4e-d3e8eb7cfd75","type":"message","text":"old old old v0.5 stuff, yes","user":"U69BL50BF","ts":"1617107437.266100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ho7T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"old old old v0.5 stuff, yes"}]}]}]},{"client_msg_id":"98e375ec-3b74-4d72-9771-2f3b15acdf7a","type":"message","text":"I wouldn't do it that way anymore.","user":"U69BL50BF","ts":"1617107442.266300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dlq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wouldn't do it that way anymore."}]}]}]},{"client_msg_id":"bb733778-ccbf-47f6-985f-5e7dfca89cdd","type":"message","text":"Is there is better way?","user":"U7GQE9JP9","ts":"1617108458.266500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FyW4B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there is better way?"}]}]}]},{"client_msg_id":"340b4ee6-8ecd-4265-9e93-e147b31315e6","type":"message","text":"Publishing a Dash app is rather straightforward these days","user":"U69BL50BF","ts":"1617108476.266900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e8ui0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Publishing a Dash app is rather straightforward these days"}]}]}]},{"client_msg_id":"4e7a1c9c-03da-4b5c-863c-7c0e91a19c5d","type":"message","text":"This was straight Angular with Mux.jl","user":"U69BL50BF","ts":"1617108485.267200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dZb=T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This was straight Angular with Mux.jl"}]}]}]},{"client_msg_id":"efb96a7d-7279-4754-90fa-e2c65273a6d4","type":"message","text":"<@U7GQE9JP9> I believe that <@U6740K1SP> had a nice covid dash app that you could use as a starting point. I don't remember if he had a differential equation in there, but he might have. That will save you some time getting up and running.","user":"UDDSTBX19","ts":"1617109135.268600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IjDSl","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7GQE9JP9"},{"type":"text","text":" I believe that "},{"type":"user","user_id":"U6740K1SP"},{"type":"text","text":" had a nice covid dash app that you could use as a starting point. I don't remember if he had a differential equation in there, but he might have. That will save you some time getting up and running."}]}]}]},{"client_msg_id":"a48fa0d1-6b16-49fd-b61d-b8da90ba7baa","type":"message","text":"<http://covid-county-dash.herokuapp.com/>","user":"UDDSTBX19","ts":"1617109340.268800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w3d0J","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"http://covid-county-dash.herokuapp.com/"}]}]}]},{"client_msg_id":"b6df6dbf-1677-464b-9d68-09db0a2a951c","type":"message","text":"<https://github.com/mbauman/CovidCountyDash.jl>","user":"UDDSTBX19","ts":"1617109357.269000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e2HQr","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/mbauman/CovidCountyDash.jl"}]}]}]},{"client_msg_id":"6c03cbe1-8eb6-4dbe-99fe-b858bed01c98","type":"message","text":"thank you, ill look at it","user":"U7GQE9JP9","ts":"1617109394.269300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0NjfL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you, ill look at it"}]}]}]},{"type":"message","text":"Say, I was wondering if I can numerically solve a differential equation that has integral terms in `diffeq`? I had not see a tutorial or reference to this on the website, though there are some mentions on discourse. If I had a relatively simple and well studied problem like this on below, is there an example of how to do this in diffeq?\n\nI have solved some integro-differential equations by laplace transform before, but not numerically. Would I use the `DDEProblem` interface and then refer to the integral as the `h(p,t)` function using say `Quadrature.jl`. I can give it a shot and try som code, but needed a point in the right direction.","files":[{"id":"F01STUF2WF4","created":1617110608,"timestamp":1617110608,"name":"Selection_009.png","title":"Selection_009.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UDDSTBX19","editable":false,"size":9912,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01STUF2WF4/selection_009.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01STUF2WF4/download/selection_009.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01STUF2WF4-997b8ff933/selection_009_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01STUF2WF4-997b8ff933/selection_009_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01STUF2WF4-997b8ff933/selection_009_360.png","thumb_360_w":360,"thumb_360_h":69,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01STUF2WF4-997b8ff933/selection_009_480.png","thumb_480_w":480,"thumb_480_h":92,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01STUF2WF4-997b8ff933/selection_009_160.png","original_w":647,"original_h":124,"thumb_tiny":"AwAJADDR+bPbFHz+1OooAaucc+tIN+AfzzT6KAEG7vimtv56Y/Wn0UAf/9k=","permalink":"https://julialang.slack.com/files/UDDSTBX19/F01STUF2WF4/selection_009.png","permalink_public":"https://slack-files.com/T68168MUP-F01STUF2WF4-1ee58ffcc1","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"t8h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Say, I was wondering if I can numerically solve a differential equation that has integral terms in "},{"type":"text","text":"diffeq","style":{"code":true}},{"type":"text","text":"? I had not see a tutorial or reference to this on the website, though there are some mentions on discourse. If I had a relatively simple and well studied problem like this on below, is there an example of how to do this in diffeq?\n\nI have solved some integro-differential equations by laplace transform before, but not numerically. Would I use the "},{"type":"text","text":"DDEProblem","style":{"code":true}},{"type":"text","text":" interface and then refer to the integral as the "},{"type":"text","text":"h(p,t)","style":{"code":true}},{"type":"text","text":" function using say "},{"type":"text","text":"Quadrature.jl","style":{"code":true}},{"type":"text","text":". I can give it a shot and try som code, but needed a point in the right direction."}]}]}],"user":"UDDSTBX19","display_as_bot":false,"ts":"1617110805.274200"}]}