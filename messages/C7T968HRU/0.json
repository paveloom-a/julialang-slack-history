{"cursor": 8, "messages": [{"client_msg_id":"2a59c1f5-1ef7-43cd-8731-be17eedec235","type":"message","text":"orbital mechanics problems are chaotic enough that I've seen `abstol=1e-8` to `abstol=1f-8` gives an O(1) difference","user":"U69BL50BF","ts":"1611153878.178500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UJPaz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"orbital mechanics problems are chaotic enough that I've seen "},{"type":"text","text":"abstol=1e-8","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"abstol=1f-8","style":{"code":true}},{"type":"text","text":" gives an O(1) difference"}]}]}]},{"client_msg_id":"9e77b002-73fc-4894-9bf2-54b009b32d4c","type":"message","text":"For reference:\n```julia&gt; 1e-8 - 1f-8\n6.07747099184471e-17```","user":"U69BL50BF","ts":"1611154067.179100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4gH3Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For reference:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> 1e-8 - 1f-8\n6.07747099184471e-17"}]}]}],"reactions":[{"name":"+1","users":["U81CQL3LY"],"count":1}]},{"client_msg_id":"33ae72a8-d3e8-4da6-9543-9034ef03778d","type":"message","text":"Is there some way to turn off SIMD? The problems in question where not extremely chaotic, but I guess my tolerances were just too large.","user":"U81CQL3LY","ts":"1611159095.180200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=3t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there some way to turn off SIMD? The problems in question where not extremely chaotic, but I guess my tolerances were just too large."}]}]}]},{"client_msg_id":"41289372-04e2-4e14-bc49-e30e94d6d8e3","type":"message","text":"Use Julia with -O0","user":"U69BL50BF","ts":"1611159716.180400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vkT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Use Julia with -O0"}]}]}]},{"client_msg_id":"2c0571ef-e0e7-4d01-9ff2-818b68b10ab0","type":"message","text":"or -O1 should be fine","user":"U69BL50BF","ts":"1611159721.180600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LrvL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or -O1 should be fine"}]}]}]},{"client_msg_id":"63ef6435-d7a5-4923-a7d6-1aea08e053fd","type":"message","text":"thanks!","user":"U81CQL3LY","ts":"1611162550.180800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QDG7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks!"}]}]}]},{"client_msg_id":"d864d9e5-0906-4b77-a786-e7f9011b1438","type":"message","text":"muladd might similarly be a difference, though chips without hardware FMA are getting quite rare.","user":"U69BL50BF","ts":"1611162836.181300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cr9us","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"muladd might similarly be a difference, though chips without hardware FMA are getting quite rare."}]}]}]},{"client_msg_id":"88eef3a4-7ebf-4fe2-a85f-f7692af779ea","type":"message","text":"<@U69BL50BF> scratched my head for a while","user":"U01HMTRF78E","ts":"1611251290.000600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k34DF","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" scratched my head for a while"}]}]}]},{"type":"message","text":"","files":[{"id":"F01KCEUH40M","created":1611251297,"timestamp":1611251297,"name":"CodeCogsEqn.png","title":"CodeCogsEqn.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01HMTRF78E","editable":false,"size":1442,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01KCEUH40M/codecogseqn.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01KCEUH40M/download/codecogseqn.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01KCEUH40M-74c87cc2f8/codecogseqn_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01KCEUH40M-74c87cc2f8/codecogseqn_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01KCEUH40M-74c87cc2f8/codecogseqn_360.png","thumb_360_w":360,"thumb_360_h":16,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01KCEUH40M-74c87cc2f8/codecogseqn_160.png","original_w":475,"original_h":21,"thumb_tiny":"AwACADDMooooAKKKKACiiigD/9k=","permalink":"https://julialang.slack.com/files/U01HMTRF78E/F01KCEUH40M/codecogseqn.png","permalink_public":"https://slack-files.com/T68168MUP-F01KCEUH40M-2f1e5e5ce4","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"U01HMTRF78E","display_as_bot":false,"ts":"1611251301.000700"},{"client_msg_id":"414b8af3-7604-4ae8-8d33-66f844752377","type":"message","text":"Isn't this symmetric ??","user":"U01HMTRF78E","ts":"1611251324.001300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DphwZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Isn't this symmetric ??"}]}]}]},{"client_msg_id":"2403382c-3de7-4169-85a0-025135478a3b","type":"message","text":"yes where is that from?","user":"U69BL50BF","ts":"1611251965.001700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TE4rm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes where is that from?"}]}]}]},{"client_msg_id":"9121ae51-678f-473f-b306-3e6aad28f196","type":"message","text":"that's a centered difference on the 2nd order derivative and a centered difference on another term, though I'm not sure why that has an h^2 on the one that is presumably a first derivative","user":"U69BL50BF","ts":"1611252014.002700","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1611252040.000000"},"blocks":[{"type":"rich_text","block_id":"x1M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's a centered difference on the 2nd order derivative and a centered difference on another term, though I'm not sure why that has an h^2 on the one that is presumably a first derivative"}]}]}]},{"client_msg_id":"fdc5c129-c0d4-42f6-b8f2-6ded1ca61ca1","type":"message","text":"h^2 is because we are discretizing both k and u, hence h*h","user":"U01HMTRF78E","ts":"1611252112.004000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ag4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"h^2 is because we are discretizing both k and u, hence h*h"}]}]}]},{"client_msg_id":"6a3fcf9f-b546-4211-80ee-20d883306316","type":"message","text":"So, this is the expression for the nonlinear case we were discussing.","user":"U01HMTRF78E","ts":"1611252152.004800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2D14l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, this is the expression for the nonlinear case we were discussing."}]}]}]},{"client_msg_id":"9974df34-5ffd-4a37-bf7f-1b92f6cf8883","type":"message","text":"Where is it going wrong then?","user":"U01HMTRF78E","ts":"1611252408.005300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s0jG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Where is it going wrong then?"}]}]}]},{"client_msg_id":"ca308bd1-f1e7-4ff6-a414-e0783277b9f8","type":"message","text":"what's the original PDE?","user":"U69BL50BF","ts":"1611256624.005600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bhql","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what's the original PDE?"}]}]}]},{"client_msg_id":"bf10e78c-d622-4144-a9da-c49cdd9a9a53","type":"message","text":"Seems like it should just be h on the bottom of that one","user":"U69BL50BF","ts":"1611256633.005900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6pXl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems like it should just be h on the bottom of that one"}]}]}]},{"client_msg_id":"92fc0a49-d6dc-4ecb-ab81-97a7303822b6","type":"message","text":"and it seems like that is an unstable discretization","user":"U69BL50BF","ts":"1611256639.006300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6anM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it seems like that is an unstable discretization"}]}]}]},{"client_msg_id":"f34ac86a-ab9e-40ab-9297-2715b9b2c493","type":"message","text":"where did you get this?","user":"U69BL50BF","ts":"1611256643.006500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i4rj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where did you get this?"}]}]}]},{"client_msg_id":"ee86f7f5-cd57-4367-a8c3-61dcf7f0d2e1","type":"message","text":"oh wait","user":"U69BL50BF","ts":"1611256650.006700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZyWQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh wait"}]}]}]},{"client_msg_id":"176d5c2f-0c34-4b54-80c9-a92e9eb5b669","type":"message","text":"this is from the nonlinear diffusion?","user":"U69BL50BF","ts":"1611256656.006900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aNob","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is from the nonlinear diffusion?"}]}]}]},{"client_msg_id":"4a7f1b1e-c8d8-459e-bbb2-653825abda79","type":"message","text":"Why are the `ODEFunction` , `SDEFunction` , etc. built inside <https://github.com/SciML/DiffEqFlux.jl/blob/419091455d44998fddfffec798094b927012e2a6/src/neural_de.jl#L66> ? Wouldnâ€™t it be better to cache them inside the struct and use only  `remake` ?","user":"UR75SQMCZ","ts":"1611264222.007400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t6kH1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why are the "},{"type":"text","text":"ODEFunction","style":{"code":true}},{"type":"text","text":" , "},{"type":"text","text":"SDEFunction","style":{"code":true}},{"type":"text","text":" , etc. built inside "},{"type":"link","url":"https://github.com/SciML/DiffEqFlux.jl/blob/419091455d44998fddfffec798094b927012e2a6/src/neural_de.jl#L66"},{"type":"text","text":" ? Wouldnâ€™t it be better to cache them inside the struct and use only  "},{"type":"text","text":"remake","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1611264222.007400","reply_count":1,"reply_users_count":1,"latest_reply":"1611281405.017900","reply_users":["U69BL50BF"],"subscribed":false},{"client_msg_id":"51c9f118-9114-42ff-8ca1-1cf59aa2629e","type":"message","text":"I think I may be going crazy, but did I break somethingâ€¦\n```using DifferentialEquations,Plots\n\nf(du,u,p,t) = u\n\n\n# Put in some random parameters\ntfinal = 10.0\nn0 = 10\nN = 100\nu0 = n0/N\n\ntspan = (0.0,tfinal)\nprob = ODEProblem(f,u0,tspan)\nsol = solve(prob,Tsit5(),reltol=1e-5, abstol=1e-8)```\nGives an error:\n```ERROR: LoadError: MethodError: no method matching similar(::Float64, ::Type{Float64})```\nI tried defining `f` as a function as well\n```function f(du,u,p,t)\n\n\tdu = u\n\nend```\nWhich also had the same errorâ€¦ am I doing something stupid? Or do I need to reload the package?","user":"UFH4C3LBT","ts":"1611272994.008700","team":"T68168MUP","edited":{"user":"UFH4C3LBT","ts":"1611273062.000000"},"blocks":[{"type":"rich_text","block_id":"4jT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I may be going crazy, but did I break somethingâ€¦\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using DifferentialEquations,Plots\n\nf(du,u,p,t) = u\n\n\n# Put in some random parameters\ntfinal = 10.0\nn0 = 10\nN = 100\nu0 = n0/N\n\ntspan = (0.0,tfinal)\nprob = ODEProblem(f,u0,tspan)\nsol = solve(prob,Tsit5(),reltol=1e-5, abstol=1e-8)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Gives an error:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: LoadError: MethodError: no method matching similar(::Float64, ::Type{Float64})"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I tried defining "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" as a function as well\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function f(du,u,p,t)\n\n\tdu = u\n\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Which also had the same errorâ€¦ am I doing something stupid? Or do I need to reload the package?"}]}]}],"thread_ts":"1611272994.008700","reply_count":4,"reply_users_count":2,"latest_reply":"1611273630.009800","reply_users":["U8T9JUA5R","UFH4C3LBT"],"subscribed":false},{"client_msg_id":"2fa09592-c828-482a-b6c6-a64d6cfcb0f0","type":"message","text":"<@U69BL50BF> yep, that is from nonlinear diffusion.","user":"U01HMTRF78E","ts":"1611279789.012600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t/REr","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" yep, that is from nonlinear diffusion."}]}]}],"thread_ts":"1611279789.012600","reply_count":23,"reply_users_count":3,"latest_reply":"1611424224.057600","reply_users":["U69BL50BF","U01HMTRF78E","U01H36BUDJB"],"subscribed":false},{"client_msg_id":"048415ca-471d-4d42-9353-3415782adc66","type":"message","text":"I'm getting some bizarre error that I can't pin down.\n\nTL;DR: sometimes solvers using ForwardDiff Duals error out when combined with CUDA. This doesn't happen for `Dense` with tanh nor `GRUCell`, it does however happen for `LSTMCell` and a custom layer that mimics the LSTM\nMWE\n```using CUDA, Flux, OrdinaryDiffEq, DiffEqSensitivity, Random\nCUDA.allowscalar(false)\n\nRandom.seed!(0)\ntspan = Float32.((0, 100))\nbasic_tgrad(u,p,t) = zero(u)\n\nnhidden = 4\nnin = 2\nnn = Flux.LSTMCell(nin,nhidden) |&gt; gpu\np, re = Flux.destructure(nn)\n\nU = randn(2*nhidden) |&gt; cu\nwrap(u) = (u[1:nhidden],u[nhidden+1:2nhidden])\nunwrap(u) = cat(u[1]...,dims=1)\ndudt_(u,p,t) = re(p)(wrap(u), CUDA.zeros(nin) ) |&gt; unwrap\nff = ODEFunction{false}(dudt_,tgrad=basic_tgrad)\nprob = ODEProblem{false}(ff,U,tspan,p)\nsolve(prob,Rosenbrock23();sense=InterpolatingAdjoint(autojacvec=ZygoteVJP()))```","user":"UPM0H43C7","ts":"1611280030.014500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CF1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm getting some bizarre error that I can't pin down.\n\nTL;DR: sometimes solvers using ForwardDiff Duals error out when combined with CUDA. This doesn't happen for "},{"type":"text","text":"Dense","style":{"code":true}},{"type":"text","text":" with tanh nor "},{"type":"text","text":"GRUCell","style":{"code":true}},{"type":"text","text":", it does however happen for "},{"type":"text","text":"LSTMCell","style":{"code":true}},{"type":"text","text":" and a custom layer that mimics the LSTM\nMWE\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using CUDA, Flux, OrdinaryDiffEq, DiffEqSensitivity, Random\nCUDA.allowscalar(false)\n\nRandom.seed!(0)\ntspan = Float32.((0, 100))\nbasic_tgrad(u,p,t) = zero(u)\n\nnhidden = 4\nnin = 2\nnn = Flux.LSTMCell(nin,nhidden) |> gpu\np, re = Flux.destructure(nn)\n\nU = randn(2*nhidden) |> cu\nwrap(u) = (u[1:nhidden],u[nhidden+1:2nhidden])\nunwrap(u) = cat(u[1]...,dims=1)\ndudt_(u,p,t) = re(p)(wrap(u), CUDA.zeros(nin) ) |> unwrap\nff = ODEFunction{false}(dudt_,tgrad=basic_tgrad)\nprob = ODEProblem{false}(ff,U,tspan,p)\nsolve(prob,Rosenbrock23();sense=InterpolatingAdjoint(autojacvec=ZygoteVJP()))"}]}]}]},{"client_msg_id":"5a807ef5-e4c0-4646-afcb-5376e349b1fa","type":"message","text":"Whatâ€™s the error msg? You might want to ask in <#C689Y34LE|gpu>","user":"U6788D83U","ts":"1611280263.015000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qNz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Whatâ€™s the error msg? You might want to ask in "},{"type":"channel","channel_id":"C689Y34LE"}]}]}]},{"client_msg_id":"1cbfdc85-a73c-4082-8de5-9f2faf9918eb","type":"message","text":"It throws a CUDA error:\n```ERROR: MethodError: no method matching unsafe_convert(::Type{Float64}, ::ForwardDiff.Dual{Nothing,Float64,8})```","user":"UPM0H43C7","ts":"1611280774.016300","team":"T68168MUP","edited":{"user":"UPM0H43C7","ts":"1611280817.000000"},"blocks":[{"type":"rich_text","block_id":"37GF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It throws a CUDA error:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: MethodError: no method matching unsafe_convert(::Type{Float64}, ::ForwardDiff.Dual{Nothing,Float64,8})"}]}]}]},{"client_msg_id":"09a713a8-8e16-4736-9dc1-73b7dd6b5c6d","type":"message","text":"Yeah, sounds like a question for <#C689Y34LE|gpu>. Remember to post the full stacktrace there.","user":"U6788D83U","ts":"1611280825.017000","team":"T68168MUP","edited":{"user":"U6788D83U","ts":"1611280854.000000"},"blocks":[{"type":"rich_text","block_id":"x2i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, sounds like a question for "},{"type":"channel","channel_id":"C689Y34LE"},{"type":"text","text":". Remember to post the full stacktrace there."}]}]}],"reactions":[{"name":"+1","users":["UPM0H43C7"],"count":1}]},{"client_msg_id":"0b2ed2d2-debb-46d9-86cb-b94ab9f3dc37","type":"message","text":"I donâ€™t have a GPU handy so I cannot reproduce it.","user":"U6788D83U","ts":"1611280842.017600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"st80","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I donâ€™t have a GPU handy so I cannot reproduce it."}]}]}]},{"client_msg_id":"1fee7fde-73d5-4a08-8850-69e7d223a1bd","type":"message","text":"Well the real problem is that isn't an ODE, so it generally won't be solved well anyways unless because LSTM has state. You have to encode such objects differently.","user":"U69BL50BF","ts":"1611281515.019100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WbEd=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well the real problem is that isn't an ODE, so it generally won't be solved well anyways unless because LSTM has state. You have to encode such objects differently."}]}]}]},{"client_msg_id":"e7207c43-4a03-4a94-a176-896e4bb88d20","type":"message","text":"but that error seems like an odd GPU error.","user":"U69BL50BF","ts":"1611281633.019300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+9mN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but that error seems like an odd GPU error."}]}]}]},{"client_msg_id":"003ab23f-eb1b-4e74-a628-eeb07477af55","type":"message","text":"<@UPM0H43C7> looks like the main reason is because it's not compatible with ForwardDiff.","user":"U69BL50BF","ts":"1611283107.019700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B+J","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPM0H43C7"},{"type":"text","text":" looks like the main reason is because it's not compatible with ForwardDiff."}]}]}]},{"client_msg_id":"7569b659-ee4f-4272-b0a0-94f62f92e2d7","type":"message","text":"`solve(prob,Rosenbrock23(autodiff=false);sense=InterpolatingAdjoint(autojacvec=ZygoteVJP()))` fixes it.","user":"U69BL50BF","ts":"1611283122.019900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zFDd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"solve(prob,Rosenbrock23(autodiff=false);sense=InterpolatingAdjoint(autojacvec=ZygoteVJP()))","style":{"code":true}},{"type":"text","text":" fixes it."}]}]}]},{"client_msg_id":"4e8cc5df-a6b0-41cd-8b1e-7f0c7ba760a9","type":"message","text":"there's not really going to be an advantage here to using forward diff","user":"U69BL50BF","ts":"1611283132.020200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"juY8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's not really going to be an advantage here to using forward diff"}]}]}]},{"client_msg_id":"534d4ade-188f-4704-bbdf-40f76f05c66a","type":"message","text":"but you really don't want to do that splatting in unwrap","user":"U69BL50BF","ts":"1611283141.020500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HeN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but you really don't want to do that splatting in unwrap"}]}]}],"reactions":[{"name":"+1","users":["UPM0H43C7"],"count":1}]},{"type":"message","subtype":"thread_broadcast","text":"So a new operator isn't required for this then?","user":"U01HMTRF78E","ts":"1611283605.020900","thread_ts":"1611279789.012600","root":{"client_msg_id":"2fa09592-c828-482a-b6c6-a64d6cfcb0f0","type":"message","text":"<@U69BL50BF> yep, that is from nonlinear diffusion.","user":"U01HMTRF78E","ts":"1611279789.012600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t/REr","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" yep, that is from nonlinear diffusion."}]}]}],"thread_ts":"1611279789.012600","reply_count":23,"reply_users_count":3,"latest_reply":"1611424224.057600","reply_users":["U69BL50BF","U01HMTRF78E","U01H36BUDJB"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"JIh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So a new operator isn't required for this then?"}]}]}],"client_msg_id":"b056e28e-9300-44cb-9e7e-5704c247be2d"},{"client_msg_id":"b324a70c-5ffa-4fc2-95ee-1f56d20599b5","type":"message","text":"A few days ago I asked about fitting large (-ish) neural ode models, and I ran into problems with the memory usage both during the solve call and the adjoint.\n\nI tested it and I think the culprit is taking a low-dimensional input (that with the neural ODE defines a inhomogeneous system) and embedding it in a higher dimensional space. Even though the input is instantaneous, something during the solve call must store it. This is despite the fact the embedding is wrapped with `Zygote.ignore` .\n\nI tried implementing it with a `DiscreteCallback`  that affects the parameters (rather than states `u`). This was a partial success as it halved the peak memory usage. but it does not work with reverse mode autodiff (at least the ones I tried).\n\nAny suggestions what might a good workaround this problem?","user":"UPM0H43C7","ts":"1611328034.032200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QhYV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A few days ago I asked about fitting large (-ish) neural ode models, and I ran into problems with the memory usage both during the solve call and the adjoint.\n\nI tested it and I think the culprit is taking a low-dimensional input (that with the neural ODE defines a inhomogeneous system) and embedding it in a higher dimensional space. Even though the input is instantaneous, something during the solve call must store it. This is despite the fact the embedding is wrapped with "},{"type":"text","text":"Zygote.ignore","style":{"code":true}},{"type":"text","text":" .\n\nI tried implementing it with a "},{"type":"text","text":"DiscreteCallback","style":{"code":true}},{"type":"text","text":"  that affects the parameters (rather than states "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":"). This was a partial success as it halved the peak memory usage. but it does not work with reverse mode autodiff (at least the ones I tried).\n\nAny suggestions what might a good workaround this problem?"}]}]}],"thread_ts":"1611328034.032200","reply_count":35,"reply_users_count":2,"latest_reply":"1611348558.040700","reply_users":["UPM0H43C7","U69BL50BF"],"subscribed":false},{"client_msg_id":"6ab2824d-55fe-4548-a27f-f9fd273a2ad4","type":"message","text":"Iâ€™m still trying to understand the (in) efficiency of solving ODEâ€™s driven by piecewise constant functions.\nI wrote up a few examples showing this (see comment).\nIn a nutshell, using `tstops` or `d_discontinuities` tanks the solver performance (both time and space) but using a DiscreteCallback doesnâ€™t. It feels like Iâ€™m not not using `solve`  right with all its possibilities.","user":"UPM0H43C7","ts":"1611419279.048900","team":"T68168MUP","edited":{"user":"UPM0H43C7","ts":"1611419290.000000"},"blocks":[{"type":"rich_text","block_id":"nXN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Iâ€™m still trying to understand the (in) efficiency of solving ODEâ€™s driven by piecewise constant functions.\nI wrote up a few examples showing this (see comment).\nIn a nutshell, using "},{"type":"text","text":"tstops","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"d_discontinuities","style":{"code":true}},{"type":"text","text":" tanks the solver performance (both time and space) but using a DiscreteCallback doesnâ€™t. It feels like Iâ€™m not not using "},{"type":"text","text":"solve","style":{"code":true}},{"type":"text","text":"  right with all its possibilities."}]}]}],"thread_ts":"1611419279.048900","reply_count":15,"reply_users_count":2,"latest_reply":"1611428073.059100","reply_users":["UPM0H43C7","U69BL50BF"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"@aussetg_twitter that issue isn't FastDense, it's Zygote","ts":"1611509703.059600","username":"[gitter] <ChrisRackauckas>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-10-18/257963008226_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"@aussetg_twitter that issue isn't FastDense, it's Zygote","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"You can double differentiate FastDense, just don't double Zygote","ts":"1611509723.059700","username":"[gitter] <ChrisRackauckas>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-10-18/257963008226_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"You can double differentiate FastDense, just don't double Zygote","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Reversed off over Zygote","ts":"1611509734.059800","username":"[gitter] <ChrisRackauckas>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-10-18/257963008226_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Reversed off over Zygote","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Forwarddiff over Zygote","ts":"1611509747.059900","username":"[gitter] <ChrisRackauckas>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-10-18/257963008226_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Forwarddiff over Zygote","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"These things are good","ts":"1611509752.060000","username":"[gitter] <ChrisRackauckas>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-10-18/257963008226_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"These things are good","verbatim":false}}]},{"type":"message","text":"I still haven't been able to figure out the plotting and broadcasting related issues I encountered last week while working with the solution.  Could I get help in troubleshooting the following first?\n```# Plotting version 1\nplot(sol, vars=(0,30))\n\n# Plotting version 2\ntestfxn(t) = sol(t, idxs=30)\nplot(-60:0.1:100, testfxn)```\nAttached are the outputs from the 2 versions.","files":[{"id":"F01LHSVUTGQ","created":1611612628,"timestamp":1611612628,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"ULZQ4DCSU","editable":false,"size":19451,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01LHSVUTGQ/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01LHSVUTGQ/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01LHSVUTGQ-d666295724/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01LHSVUTGQ-d666295724/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01LHSVUTGQ-d666295724/image_360.png","thumb_360_w":360,"thumb_360_h":239,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01LHSVUTGQ-d666295724/image_480.png","thumb_480_w":480,"thumb_480_h":319,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01LHSVUTGQ-d666295724/image_160.png","original_w":599,"original_h":398,"thumb_tiny":"AwAfADDSHU0tIOppaAEz82PalpP4/wAKWgANJg+tLRQAg6mlpMelLz60ANz+8x7U6k2/Nu74xRQAtFJzQc4oA//Z","permalink":"https://julialang.slack.com/files/ULZQ4DCSU/F01LHSVUTGQ/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01LHSVUTGQ-9357dc6896","is_starred":false,"has_rich_preview":false},{"id":"F01KD8T8W07","created":1611612648,"timestamp":1611612648,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"ULZQ4DCSU","editable":false,"size":41001,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01KD8T8W07/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01KD8T8W07/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01KD8T8W07-f05c3784bc/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01KD8T8W07-f05c3784bc/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01KD8T8W07-f05c3784bc/image_360.png","thumb_360_w":360,"thumb_360_h":242,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01KD8T8W07-f05c3784bc/image_480.png","thumb_480_w":480,"thumb_480_h":323,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01KD8T8W07-f05c3784bc/image_160.png","original_w":598,"original_h":402,"thumb_tiny":"AwAgADDR3Ef/AKjQpJPNIf8APWlXr/8AroAdRRRQAUnPrS0UAMI5/wDrGlXr/wDWo+Q9x+dGVHQj86AHUgo3D1H50gYeo/OgB1FN3D1/WjePX9aAP//Z","permalink":"https://julialang.slack.com/files/ULZQ4DCSU/F01KD8T8W07/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01KD8T8W07-8d4d3e90ed","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"2HWq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I still haven't been able to figure out the plotting and broadcasting related issues I encountered last week while working with the solution.  Could I get help in troubleshooting the following first?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"# Plotting version 1\nplot(sol, vars=(0,30))\n\n# Plotting version 2\ntestfxn(t) = sol(t, idxs=30)\nplot(-60:0.1:100, testfxn)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Attached are the outputs from the 2 versions."}]}]}],"user":"ULZQ4DCSU","ts":"1611612731.062400"},{"client_msg_id":"390053a3-ef6d-43e0-b5f3-82043b177fcd","type":"message","text":"is it a dense solution?","user":"U69BL50BF","ts":"1611612910.063100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ymq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is it a dense solution?"}]}]}]},{"client_msg_id":"21f47f85-7471-4e78-b024-706279b391b7","type":"message","text":"yes","user":"ULZQ4DCSU","ts":"1611613172.063300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fDz0n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"f84f1533-eaf6-4494-9926-9cd2bb99796d","type":"message","text":"odd","user":"U69BL50BF","ts":"1611614702.063600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2JeY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"odd"}]}]}]},{"client_msg_id":"956d1c60-8e40-41a5-a4d4-6f0e425f5d27","type":"message","text":"what if you expand it yourself?","user":"U69BL50BF","ts":"1611614705.063800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PsgK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what if you expand it yourself?"}]}]}]},{"client_msg_id":"1c467489-aaad-4b76-9178-790ef1325b46","type":"message","text":"how would you do that?","user":"ULZQ4DCSU","ts":"1611614973.064000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rU7CU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how would you do that?"}]}]}]},{"client_msg_id":"2580cdc2-35e3-4832-a115-3c1b0284f993","type":"message","text":"```testfxn(-60:0.1:100)```","user":"U69BL50BF","ts":"1611615272.064400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pIV","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"testfxn(-60:0.1:100)"}]}]}]},{"client_msg_id":"46fe3330-4866-40ee-a7fc-c26209dc0683","type":"message","text":"and then plot","user":"U69BL50BF","ts":"1611615274.064600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jMeK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and then plot"}]}]}]},{"type":"message","text":"","files":[{"id":"F01L0BCUUH2","created":1611615438,"timestamp":1611615438,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"ULZQ4DCSU","editable":false,"size":5431,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01L0BCUUH2/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01L0BCUUH2/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01L0BCUUH2-baae990a28/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01L0BCUUH2-baae990a28/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01L0BCUUH2-baae990a28/image_360.png","thumb_360_w":360,"thumb_360_h":10,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01L0BCUUH2-baae990a28/image_480.png","thumb_480_w":480,"thumb_480_h":13,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01L0BCUUH2-baae990a28/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01L0BCUUH2-baae990a28/image_720.png","thumb_720_w":720,"thumb_720_h":20,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01L0BCUUH2-baae990a28/image_800.png","thumb_800_w":800,"thumb_800_h":22,"original_w":909,"original_h":25,"thumb_tiny":"AwABADCCmnqadTT1NBQlFFFAgooooA//2Q==","permalink":"https://julialang.slack.com/files/ULZQ4DCSU/F01L0BCUUH2/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01L0BCUUH2-9c7f2a81cc","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"ULZQ4DCSU","display_as_bot":false,"ts":"1611615440.064700"},{"client_msg_id":"031351ad-6757-4ef7-8665-03936ee31b07","type":"message","text":"I meant make that into a plottable object.","user":"U69BL50BF","ts":"1611615979.065300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j8C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I meant make that into a plottable object."}]}]}]},{"client_msg_id":"1f19433d-93e3-44f7-8fd2-e658d10b3ef6","type":"message","text":"has anyone here used `Unitful` with `DifferentialEquations.jl` ? Preliminary benchmarks I've run show a performance hit of 10% or more which is a bit unfortunate.","user":"U01H36BUDJB","ts":"1611616147.066000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KW+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"has anyone here used "},{"type":"text","text":"Unitful","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"DifferentialEquations.jl","style":{"code":true}},{"type":"text","text":" ? Preliminary benchmarks I've run show a performance hit of 10% or more which is a bit unfortunate."}]}]}],"thread_ts":"1611616147.066000","reply_count":1,"reply_users_count":1,"latest_reply":"1611617530.066400","reply_users":["U69BL50BF"],"subscribed":false},{"type":"message","text":"","files":[{"id":"F01KUETGN0K","created":1611616998,"timestamp":1611616998,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"ULZQ4DCSU","editable":false,"size":8970,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01KUETGN0K/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01KUETGN0K/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01KUETGN0K-cf17fe15f0/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01KUETGN0K-cf17fe15f0/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01KUETGN0K-cf17fe15f0/image_360.png","thumb_360_w":360,"thumb_360_h":40,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01KUETGN0K-cf17fe15f0/image_480.png","thumb_480_w":480,"thumb_480_h":53,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01KUETGN0K-cf17fe15f0/image_160.png","original_w":579,"original_h":64,"thumb_tiny":"AwAFADCtgUEAClobpQMbRwe1FFACYHpRgUtFAH//2Q==","permalink":"https://julialang.slack.com/files/ULZQ4DCSU/F01KUETGN0K/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01KUETGN0K-d16c5b4a52","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"ULZQ4DCSU","display_as_bot":false,"ts":"1611617000.066100"},{"client_msg_id":"3ff79f80-5812-47e8-90e2-bc51ae1556b9","type":"message","text":"I would like to do a Jet Transport based on a MTK model and am hitting many road blocks. It looks like TaylorSeries IC doesn't work  w/ DiffEq in general. produces  `LoadError: MethodError: no method matching TaylorN{Float64}(::Rational{Int64})` for both `Tsit5()`  and `TaylorMethod` .  As a work around, I looked into building the eom function and calling `TaylorIntegration`  directly, however the parsing performed in `taylorinteg`  is hitting a roadblock w/ `RuntimeGeneratedFunctions` .  I would prefer to used DiffEq directly but is there a simple stop-gap workaround for this. e.g. produce a `function`  instead of `RuntimeGeneratedFunctions` ?","user":"UP95S4864","ts":"1611668881.071300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/pcf4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would like to do a Jet Transport based on a MTK model and am hitting many road blocks. It looks like TaylorSeries IC doesn't work  w/ DiffEq in general. produces  "},{"type":"text","text":"LoadError: MethodError: no method matching TaylorN{Float64}(::Rational{Int64})","style":{"code":true}},{"type":"text","text":" for both "},{"type":"text","text":"Tsit5()","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"TaylorMethod","style":{"code":true}},{"type":"text","text":" .  As a work around, I looked into building the eom function and calling "},{"type":"text","text":"TaylorIntegration","style":{"code":true}},{"type":"text","text":"  directly, however the parsing performed in "},{"type":"text","text":"taylorinteg","style":{"code":true}},{"type":"text","text":"  is hitting a roadblock w/ "},{"type":"text","text":"RuntimeGeneratedFunctions","style":{"code":true}},{"type":"text","text":" .  I would prefer to used DiffEq directly but is there a simple stop-gap workaround for this. e.g. produce a "},{"type":"text","text":"function","style":{"code":true}},{"type":"text","text":"  instead of "},{"type":"text","text":"RuntimeGeneratedFunctions","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1611668881.071300","reply_count":31,"reply_users_count":3,"latest_reply":"1611776076.109900","reply_users":["UP95S4864","U69BL50BF","U9Z3H4H5F"],"subscribed":false},{"client_msg_id":"1251b20a-cf56-4ca9-9116-7c861e616cb2","type":"message","text":"Something in the world of MTK/SymbolicUtils changed: upon creation of equations there is some simplification happening ( `x ~ a + b + a` returns `x ~ b + 2a` )which broke my tests. Does anyone one knows where this changes comes from? Is there any progress on the direct comparison of two equations or the total ordering of terms? There are some oldish issues about that (i.e. <https://github.com/JuliaSymbolics/SymbolicUtils.jl/issues/85>)â€¦","user":"U01BYANF42K","ts":"1611673026.079300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G4VkB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Something in the world of MTK/SymbolicUtils changed: upon creation of equations there is some simplification happening ( "},{"type":"text","text":"x ~ a + b + a","style":{"code":true}},{"type":"text","text":" returns "},{"type":"text","text":"x ~ b + 2a","style":{"code":true}},{"type":"text","text":" )which broke my tests. Does anyone one knows where this changes comes from? Is there any progress on the direct comparison of two equations or the total ordering of terms? There are some oldish issues about that (i.e. "},{"type":"link","url":"https://github.com/JuliaSymbolics/SymbolicUtils.jl/issues/85"},{"type":"text","text":")â€¦"}]}]}]},{"client_msg_id":"3f610998-3a47-42f8-9fb0-4ce763ce6b19","type":"message","text":"yes it's the same PR with the 100x-1000x acceleration","user":"U69BL50BF","ts":"1611673119.079600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gkntb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes it's the same PR with the 100x-1000x acceleration"}]}]}]},{"client_msg_id":"fc636dd7-0559-47fe-8d47-3b48f64b9174","type":"message","text":"<https://github.com/JuliaSymbolics/SymbolicUtils.jl/pull/154>","user":"U69BL50BF","ts":"1611673119.079800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iABY","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaSymbolics/SymbolicUtils.jl/pull/154"}]}]}],"thread_ts":"1611673119.079800","reply_count":4,"reply_users_count":2,"latest_reply":"1611693834.091000","reply_users":["U01BYANF42K","U69BL50BF"],"subscribed":false},{"client_msg_id":"6d2c014c-6da5-40ac-b280-dd7bef6e8844","type":"message","text":"Chris, I figured out that the plotting issue happens if I use `CVODE_BDF()`, when I tested it with the Lorenz equations.","user":"ULZQ4DCSU","ts":"1611673602.080800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"awYB1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Chris, I figured out that the plotting issue happens if I use "},{"type":"text","text":"CVODE_BDF()","style":{"code":true}},{"type":"text","text":", when I tested it with the Lorenz equations."}]}]}]},{"client_msg_id":"cb880490-c316-4be2-b791-fb281222bfa9","type":"message","text":"```using DifferentialEquations\nusing Sundials\nusing Plots\n\nfunction lorenz!(du,u,p,t)\n du[1] = 10.0*(u[2]-u[1])\n du[2] = u[1]*(28.0-u[3]) - u[2]\n du[3] = u[1]*u[2] - (8/3)*u[3]\nend\n\nu0 = [1.0;0.0;0.0]\ntspan = (0.0,100.0)\nprob = ODEProblem(lorenz!,u0,tspan)\n#sol = solve(prob)\nsol = solve(prob, CVODE_BDF())\n\nplot(sol, vars=(0,1))\n\n@. testfxn(t) = sol(t, idxs=1)\nplot(0.0:0.1:100, testfxn)```","user":"ULZQ4DCSU","ts":"1611673657.081100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3MOB","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using DifferentialEquations\nusing Sundials\nusing Plots\n\nfunction lorenz!(du,u,p,t)\n du[1] = 10.0*(u[2]-u[1])\n du[2] = u[1]*(28.0-u[3]) - u[2]\n du[3] = u[1]*u[2] - (8/3)*u[3]\nend\n\nu0 = [1.0;0.0;0.0]\ntspan = (0.0,100.0)\nprob = ODEProblem(lorenz!,u0,tspan)\n#sol = solve(prob)\nsol = solve(prob, CVODE_BDF())\n\nplot(sol, vars=(0,1))\n\n@. testfxn(t) = sol(t, idxs=1)\nplot(0.0:0.1:100, testfxn)"}]}]}]},{"type":"message","text":"Do you think that could be related to the following error?","files":[{"id":"F01KWTUKKKM","created":1611673808,"timestamp":1611673808,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"ULZQ4DCSU","editable":false,"size":34951,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01KWTUKKKM/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01KWTUKKKM/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01KWTUKKKM-754bc6b2dc/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01KWTUKKKM-754bc6b2dc/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01KWTUKKKM-754bc6b2dc/image_360.png","thumb_360_w":360,"thumb_360_h":120,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01KWTUKKKM-754bc6b2dc/image_480.png","thumb_480_w":480,"thumb_480_h":160,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01KWTUKKKM-754bc6b2dc/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01KWTUKKKM-754bc6b2dc/image_720.png","thumb_720_w":720,"thumb_720_h":240,"original_w":766,"original_h":255,"thumb_tiny":"AwAPADCsOlKKaGGOtLuA70wFpabvFJuFAC0Um4UbhQB//9k=","permalink":"https://julialang.slack.com/files/ULZQ4DCSU/F01KWTUKKKM/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01KWTUKKKM-10f26c521e","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"Qri","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you think that could be related to the following error?"}]}]}],"user":"ULZQ4DCSU","display_as_bot":false,"ts":"1611673811.082700"},{"client_msg_id":"4059c628-b847-4594-a505-0eb3de4ebc42","type":"message","text":"where are the zero dimensional arrays coming from?","user":"U69BL50BF","ts":"1611681100.083500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oFe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where are the zero dimensional arrays coming from?"}]}]}]},{"client_msg_id":"884ed498-1791-4c23-a65b-8b42228ab8ab","type":"message","text":"from the solution","user":"ULZQ4DCSU","ts":"1611681148.083700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uag","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"from the solution"}]}]}]},{"client_msg_id":"8681abc9-25e5-42ad-981c-fb8151c8c30b","type":"message","text":"you're using 0 dimensional variables in the solution?","user":"U69BL50BF","ts":"1611681175.084300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r+Yf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you're using 0 dimensional variables in the solution?"}]}]}]},{"client_msg_id":"15546902-4cdc-469e-a29c-654bcff92503","type":"message","text":"my u and p are vectors, but sol(1, idxs=1), for example, shows up as a zero dimensional array","user":"ULZQ4DCSU","ts":"1611681244.085300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AvC3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"my u and p are vectors, but sol(1, idxs=1), for example, shows up as a zero dimensional array"}]}]}]},{"client_msg_id":"7fcf7c8e-e1b2-45d0-adc6-f318912a00f0","type":"message","text":"Hello diffeq enthusiasts,\n\nI am looking for advice on accurate *Finite Volume simulation packages/tools in Julia*.\nSpecifically, it would be nice to simulate a 2D (stiff) time-dependent convection-diffusion problem.\n\nWould you have any suggestions?\nThank you!","user":"U01HC60USTH","ts":"1611691262.088400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SUXi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello diffeq enthusiasts,\n\nI am looking for advice on accurate "},{"type":"text","text":"Finite Volume simulation packages/tools in Julia","style":{"bold":true}},{"type":"text","text":".\nSpecifically, it would be nice to simulate a 2D (stiff) time-dependent convection-diffusion problem.\n\nWould you have any suggestions?\nThank you!"}]}]}]},{"client_msg_id":"506c3fbe-4c68-4637-9827-83902a2d9076","type":"message","text":"do finite volume to get the ODEs and then put it to a stiff ODE solver","user":"U69BL50BF","ts":"1611691730.088700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yVXI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do finite volume to get the ODEs and then put it to a stiff ODE solver"}]}]}]},{"client_msg_id":"790f40a3-292e-485e-8498-32cad52c9797","type":"message","text":"we don't have auto spatial FVM right now.","user":"U69BL50BF","ts":"1611691738.089000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UPDal","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we don't have auto spatial FVM right now."}]}]}]},{"client_msg_id":"a18b3f5f-c8d1-4f94-aed5-14670fe4b7f9","type":"message","text":"so I figured out what's causing the zero dimensional array.\n\n```@. testfxn(t) = sol(t, idxs=1)\ntypeof(testfxn(1))```\nIt's `Float64` with `solve(prob)` and `Array{Float64,0}` with `solve(prob, CVODE_BDF())`.","user":"ULZQ4DCSU","ts":"1611692175.089700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"llC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I figured out what's causing the zero dimensional array.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@. testfxn(t) = sol(t, idxs=1)\ntypeof(testfxn(1))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It's "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"solve(prob)","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Array{Float64,0}","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"solve(prob, CVODE_BDF())","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"faaf6983-fbcf-444a-b46e-a6e6086b7adf","type":"message","text":"oh :thinking_face:","user":"U69BL50BF","ts":"1611692880.089900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2I2+p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh "},{"type":"emoji","name":"thinking_face"}]}]}]},{"client_msg_id":"da2effc9-d619-4cbe-a473-b4c3fd6b0770","type":"message","text":"can you get an MWE with that? Simplify it down?","user":"U69BL50BF","ts":"1611692887.090300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"075i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can you get an MWE with that? Simplify it down?"}]}]}]},{"client_msg_id":"239e262e-bd87-43d0-8dcc-ab513f1d2a9e","type":"message","text":"That would be good to figure out and fix.","user":"U69BL50BF","ts":"1611692893.090500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eip","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That would be good to figure out and fix."}]}]}]},{"client_msg_id":"e1cdf4e0-cca7-49db-a424-f01f03a61420","type":"message","text":"and post to sundials issues?","user":"ULZQ4DCSU","ts":"1611692977.090700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"50h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and post to sundials issues?"}]}]}]},{"client_msg_id":"3b69f9d5-37cb-4d77-893b-3bc2aa84c796","type":"message","text":"yes","user":"U69BL50BF","ts":"1611693696.090900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o6cH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"64d715a5-e67b-478f-95c9-4eb4b7137a2b","type":"message","text":"is there a way to get `ODEProblem` and `solve` to use a pre-allocated state variable? From the documentation, it appears that `inplace` only is concerned with the differential `du` , not the state variable `u`. or is this not possible due to interpolation?","user":"U01H36BUDJB","ts":"1611739413.094400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jtb8z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a way to get "},{"type":"text","text":"ODEProblem","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"solve","style":{"code":true}},{"type":"text","text":" to use a pre-allocated state variable? From the documentation, it appears that "},{"type":"text","text":"inplace","style":{"code":true}},{"type":"text","text":" only is concerned with the differential "},{"type":"text","text":"du","style":{"code":true}},{"type":"text","text":" , not the state variable "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":". or is this not possible due to interpolation?"}]}]}],"thread_ts":"1611739413.094400","reply_count":2,"reply_users_count":2,"latest_reply":"1611744211.094700","reply_users":["UNM50TRRR","U01H36BUDJB"],"subscribed":false},{"client_msg_id":"bfbc084f-42b0-4756-85a9-027ca3235bde","type":"message","text":"If I solve an ODE without specifying the algorithm (it ends up using Vern9 and Rodas5) and I check the sol.t array I see that the timestep chosen is basically constant. If I then take this timestep and use it as the dt in an RODE problem solving with Euler I get huge numerical errors, I require a timestep that is ~1000 times smaller to see the same solution. I'd like some help understanding what's going on","user":"ULA52A5B5","ts":"1611763446.096900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hRw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I solve an ODE without specifying the algorithm (it ends up using Vern9 and Rodas5) and I check the sol.t array I see that the timestep chosen is basically constant. If I then take this timestep and use it as the dt in an RODE problem solving with Euler I get huge numerical errors, I require a timestep that is ~1000 times smaller to see the same solution. I'd like some help understanding what's going on"}]}]}],"thread_ts":"1611763446.096900","reply_count":13,"reply_users_count":2,"latest_reply":"1611765152.107700","reply_users":["U69BL50BF","ULA52A5B5"],"subscribed":false},{"client_msg_id":"707bf965-e466-45db-affd-1be7b3566ee0","type":"message","text":"<@U69BL50BF> Is the UDE paper published or still under review?","user":"U01H36BUDJB","ts":"1611763658.097500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vA9","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" Is the UDE paper published or still under review?"}]}]}],"thread_ts":"1611763658.097500","reply_count":5,"reply_users_count":2,"latest_reply":"1611764745.104900","reply_users":["U69BL50BF","U01H36BUDJB"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"@ChrisRackauckas is Zygote over Forwarddiff ok ?  Also I think GalacticOptim 0.4.5 broke diffeqflux ?   ``` DiffEqFlux.sciml_train(loss, d.p, ADAM(0.01), ncycle(data, epochs), maxiters = epochs, cb = cb) ```  does't work anymore  ``` DiffEqFlux.sciml_train(loss, d.p, ADAM(0.01), data=ncycle(data, epochs), maxiters = epochs, cb = cb)  ``` does launch but crashes with   ``` ERROR: BoundsError: attempt to access ()   at index [1] Stacktrace:  [1] adjoint at /home/guillaume/.julia/packages/Zygote/Iz3wR/src/lib/lib.jl:92 [inlined]  [2] _pullback at /home/guillaume/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:57 [inlined]  [3] _pullback(::Zygote.Context, ::typeof(Zygote.literal_indexed_iterate), ::Tuple{}, ::Val{1}) at /home/guillaume/.julia/packages/Zygote/Iz3wR/src/lib/lib.jl:129  [4] loss at ./REPL[21]:3 [inlined]  [5] _pullback(::Zygote.Context, ::var\"#loss#50\"{SurvivalConditionalFlow{Continuous,Float32,CuArray{Float32,1}}}, ::CuArray{Float32,1}) at /home/guillaume/.julia/packages/Zygote/Iz3wR/src/compiler/interface2.jl:0  [6] #69 at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:2 [inlined] ```","ts":"1611854129.117500","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"@ChrisRackauckas is Zygote over Forwarddiff ok ?\n\nAlso I think GalacticOptim 0.4.5 broke diffeqflux ? \n\n```\nDiffEqFlux.sciml_train(loss, d.p, ADAM(0.01), ncycle(data, epochs), maxiters = epochs, cb = cb)\n```\n does't work anymore\n\n```\nDiffEqFlux.sciml_train(loss, d.p, ADAM(0.01), data=ncycle(data, epochs), maxiters = epochs, cb = cb) \n```\ndoes launch but crashes with \n\n```\nERROR: BoundsError: attempt to access ()\n  at index [1]\nStacktrace:\n [1] adjoint at /home/guillaume/.julia/packages/Zygote/Iz3wR/src/lib/lib.jl:92 [inlined]\n [2] _pullback at /home/guillaume/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:57 [inlined]\n [3] _pullback(::Zygote.Context, ::typeof(Zygote.literal_indexed_iterate), ::Tuple{}, ::Val{1}) at /home/guillaume/.julia/packages/Zygote/Iz3wR/src/lib/lib.jl:129\n [4] loss at ./REPL[21]:3 [inlined]\n [5] _pullback(::Zygote.Context, ::var\"#loss#50\"{SurvivalConditionalFlow{Continuous,Float32,CuArray{Float32,1}}}, ::CuArray{Float32,1}) at /home/guillaume/.julia/packages/Zygote/Iz3wR/src/compiler/interface2.jl:0\n [6] #69 at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:2 [inlined]\n```","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Scratch that, I use a GPU, no forwarddiff for me","ts":"1611854492.117600","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Scratch that, I use a GPU, no forwarddiff for me","verbatim":false}}]},{"client_msg_id":"d2baef87-00d6-4a5d-9402-6368831b9ebb","type":"message","text":"forwarddiff is fine with GPUs","user":"U69BL50BF","ts":"1611854552.117900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"unJX=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"forwarddiff is fine with GPUs"}]}]}]},{"client_msg_id":"4ba23e40-8977-4a03-8c45-28d6fe506141","type":"message","text":"I'm not sure what that error is though","user":"U69BL50BF","ts":"1611854573.118200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JCL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure what that error is though"}]}]}]},{"client_msg_id":"dce30a46-35a7-4fc8-a36a-193788c2369f","type":"message","text":"I'd need to see a reproducer.","user":"U69BL50BF","ts":"1611854577.118400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W0eNm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd need to see a reproducer."}]}]}]},{"client_msg_id":"9d733523-e251-41f5-8174-b82558817806","type":"message","text":"looks like an incorrectly defined adjoint","user":"U01H36BUDJB","ts":"1611854591.118700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TmCyt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"looks like an incorrectly defined adjoint"}]}]}]},{"client_msg_id":"58c19fce-261a-49ff-9c2e-23701d8a7a63","type":"message","text":"I'd check the adjoint code the error is pointing to. Might also have something to do with the types you're using and how they get mapped to adjoint rules.","user":"U01H36BUDJB","ts":"1611854705.120200","team":"T68168MUP","edited":{"user":"U01H36BUDJB","ts":"1611854732.000000"},"blocks":[{"type":"rich_text","block_id":"w5lt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd check the adjoint code the error is pointing to. Might also have something to do with the types you're using and how they get mapped to adjoint rules."}]}]}],"reactions":[{"name":"heavy_check_mark","users":["U69BL50BF"],"count":1}]},{"client_msg_id":"5f8dea90-35c3-4382-a00f-2c4bc81b75d6","type":"message","text":"The type signature at frame 3 looks suspicious to me.","user":"U01H36BUDJB","ts":"1611854831.121100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vKAI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The type signature at frame 3 looks suspicious to me."}]}]}]},{"type":"message","subtype":"bot_message","text":"I'll to create a MWE, it's hard to debug I have no idea *where* it breaks. If I take the gradient of the loss by hand ( Zygote.gradient(p -&gt; loss(p, x), x) ) everything is fine and dandy.","ts":"1611854910.121200","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"I'll to create a MWE, it's hard to debug I have no idea *where* it breaks. If I take the gradient of the loss by hand ( Zygote.gradient(p -&gt; loss(p, x), x) ) everything is fine and dandy.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Ok I suck too much at Julia to understand how GalacticOptim.solve works but it's capturing the wrong context","ts":"1611865354.121300","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Ok I suck too much at Julia to understand how GalacticOptim.solve works but it's capturing the wrong context","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"It works with loss(p) but not loss(p, data), I need to understand how it works behind the scenes","ts":"1611865485.121400","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"It works with loss(p) but not loss(p, data), I need to understand how it works behind the scenes","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Hi! I'd like to solve a steady-state reaction-diffusion equation where I vary the production and degradation rates depending on spatial position. In the end, I'd want to do statistics on the spatial gradients of many samples. I'm currently testing a few options using FD, but I'm curious how you'd approach that problem. Thanks for any comments!","ts":"1611866426.121500","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Hi! I'd like to solve a steady-state reaction-diffusion equation where I vary the production and degradation rates depending on spatial position. In the end, I'd want to do statistics on the spatial gradients of many samples. I'm currently testing a few options using FD, but I'm curious how you'd approach that problem. Thanks for any comments!","verbatim":false}}]},{"client_msg_id":"ddad5487-cb2a-4ef0-a8a8-7637625015aa","type":"message","text":"<@UKJSNT1QR> it's not you it's a little crazy internally and there might be a dispatch missing `loss(p,data)`.","user":"U69BL50BF","ts":"1611867973.122200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bf+S","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UKJSNT1QR"},{"type":"text","text":" it's not you it's a little crazy internally and there might be a dispatch missing "},{"type":"text","text":"loss(p,data)","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"7aeaf086-36d7-4575-ae7e-df629a8d6995","type":"message","text":"It says it's still in progress in the docs, both for users and internals","user":"U69BL50BF","ts":"1611867991.122700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Msnq7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It says it's still in progress in the docs, both for users and internals"}]}]}]},{"client_msg_id":"6b449bb1-2282-4cb5-b3d9-303bf671efe9","type":"message","text":"it needs a little bit of cleaning :wink:","user":"U69BL50BF","ts":"1611868000.122900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kyaXJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it needs a little bit of cleaning "},{"type":"emoji","name":"wink"}]}]}]},{"client_msg_id":"cefc10ab-96fe-491d-be56-318185761aa5","type":"message","text":"@Mrc010 I'd do something like","user":"U69BL50BF","ts":"1611868007.123100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gval","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@Mrc010 I'd do something like"}]}]}]},{"client_msg_id":"4e33f1fe-3ea2-4c60-a802-5dd6bc3c6aa3","type":"message","text":"<https://diffeq.sciml.ai/stable/tutorials/advanced_ode_example/#Automatic-Sparsity-Detection>","user":"U69BL50BF","ts":"1611868023.123300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uphts","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://diffeq.sciml.ai/stable/tutorials/advanced_ode_example/#Automatic-Sparsity-Detection"}]}]}]},{"client_msg_id":"0919ae19-2103-4be1-bfca-a6d1a26db804","type":"message","text":"or","user":"U69BL50BF","ts":"1611868024.123500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5STY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or"}]}]}]},{"client_msg_id":"d4d11967-f48c-4ca7-87f7-5835fee8cfbb","type":"message","text":"<https://tutorials.sciml.ai/html/introduction/03-optimizing_diffeq_code.html>","user":"U69BL50BF","ts":"1611868038.123700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zakl","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://tutorials.sciml.ai/html/introduction/03-optimizing_diffeq_code.html"}]}]}]},{"client_msg_id":"ac6002ba-c7ef-4bb6-813a-ec7790732f53","type":"message","text":"For the spatial parameters you just make them an array instead of scalar and then index them at the same spot","user":"U69BL50BF","ts":"1611868058.124200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gt2B0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For the spatial parameters you just make them an array instead of scalar and then index them at the same spot"}]}]}]},{"client_msg_id":"901cc2ab-5ae9-49e7-9081-79d812883ea0","type":"message","text":"we are moving towards doing this automatically","user":"U69BL50BF","ts":"1611868077.124500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uw2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we are moving towards doing this automatically"}]}]}]},{"client_msg_id":"9c658330-2f25-48c0-a716-052938a769f6","type":"message","text":"<https://github.com/SciML/DiffEqOperators.jl>","user":"U69BL50BF","ts":"1611868084.124700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9rjX","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/SciML/DiffEqOperators.jl"}]}]}]},{"client_msg_id":"e1bd020c-f91b-4807-9c1c-1c1df368096e","type":"message","text":"and physics-informed neural networks","user":"U69BL50BF","ts":"1611868090.125000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8848f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and physics-informed neural networks"}]}]}]},{"client_msg_id":"9ad3cbd4-42e5-4711-baf0-f8bb2ad4a688","type":"message","text":"<https://neuralpde.sciml.ai/dev/pinn/system/>","user":"U69BL50BF","ts":"1611868102.125200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kkc","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://neuralpde.sciml.ai/dev/pinn/system/"}]}]}]},{"client_msg_id":"d3c007e1-826c-43ff-8250-35a694d3f624","type":"message","text":"but those are much more the current research","user":"U69BL50BF","ts":"1611868109.125500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mWFP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but those are much more the current research"}]}]}]},{"type":"message","subtype":"bot_message","text":"@ChrisRackauckas I found a good MWE in the doc ;)  <https://diffeqflux.sciml.ai/dev/examples/minibatch/>  Doesn't work anymore:  ``` julia&gt; res1 = DiffEqFlux.sciml_train(loss_adjoint, pp, ADAM(0.05), ncycle(train_loader, numEpochs), cb = cb, maxiters = numEpochs) ERROR: MethodError: no method matching sciml_train(::typeof(loss_adjoint), ::Array{Float32,1}, ::ADAM, ::IterTools.NCycle{Flux.Data.DataLoader{Tuple{Array{Float32,2},StepRangeLen{Float32,Float64,Float64}}}}; cb=var\"#5#7\"(), maxiters=300) Closest candidates are:   sciml_train(::Any, ::Any, ::Any) at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:1 got unsupported keyword arguments \"cb\", \"maxiters\"   sciml_train(::Any, ::Any, ::Any, ::DiffEqBase.AbstractADType, ::Any...; kwargs...) at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:1 ```","ts":"1611868282.125600","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"@ChrisRackauckas I found a good MWE in the doc ;)\n\n<https://diffeqflux.sciml.ai/dev/examples/minibatch/>\n\nDoesn't work anymore:\n\n```\njulia&gt; res1 = DiffEqFlux.sciml_train(loss_adjoint, pp, ADAM(0.05), ncycle(train_loader, numEpochs), cb = cb, maxiters = numEpochs)\nERROR: MethodError: no method matching sciml_train(::typeof(loss_adjoint), ::Array{Float32,1}, ::ADAM, ::IterTools.NCycle{Flux.Data.DataLoader{Tuple{Array{Float32,2},StepRangeLen{Float32,Float64,Float64}}}}; cb=var\"#5#7\"(), maxiters=300)\nClosest candidates are:\n  sciml_train(::Any, ::Any, ::Any) at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:1 got unsupported keyword arguments \"cb\", \"maxiters\"\n  sciml_train(::Any, ::Any, ::Any, ::DiffEqBase.AbstractADType, ::Any...; kwargs...) at /home/guillaume/.julia/packages/DiffEqFlux/Bj6Is/src/train.jl:1\n```","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Oh well I'll just pin to an old version I know works for me while it stabilizes :)","ts":"1611868436.125700","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Oh well I'll just pin to an old version I know works for me while it stabilizes :)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Oh boy it's DiffEqFlux v1.24.0, that's old. Well if it works it works","ts":"1611869046.125800","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Oh boy it's DiffEqFlux v1.24.0, that's old. Well if it works it works","verbatim":false}}]},{"client_msg_id":"5db6ae23-c7c0-462c-bb11-13a199892ac7","type":"message","text":"oh I may need to go back through that.","user":"U69BL50BF","ts":"1611870068.126000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uSj99","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh I may need to go back through that."}]}]}]},{"type":"message","subtype":"bot_message","text":"Thanks, @ChrisRackauckas !","ts":"1611870229.126100","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Thanks, @ChrisRackauckas !","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Can you maybe elucidate what you mean by \"index them at the spot\"?  Using [the Gierer-Meinhardt example](<https://tutorials.sciml.ai/html/introduction/03-optimizing_diffeq_code.html>), what I did so far is fill arrays using  sth like `pM = [prod(ui,vi) for vi in 1:N, ui in 1:N]` and then replacing the scalars here: `dr[:,:,1] = Du .+ pM .- dM.*u`","ts":"1611870950.126200","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Can you maybe elucidate what you mean by \"index them at the spot\"? \nUsing [the Gierer-Meinhardt example](<https://tutorials.sciml.ai/html/introduction/03-optimizing_diffeq_code.html>), what I did so far is fill arrays using  sth like `pM = [prod(ui,vi) for vi in 1:N, ui in 1:N]` and then replacing the scalars here: `dr[:,:,1] = Du .+ pM .- dM.*u`","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"..seems to work!","ts":"1611871470.126300","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"..seems to work!","verbatim":false}}]},{"client_msg_id":"ea0074dd-4508-41e5-a0a1-f37252ac55aa","type":"message","text":"Does anyone know how `DiffEqFlux` gets around Zygote not allowing array mutation? There's very clearly array mutation going on in an in-place ODEProblem.","user":"U01H36BUDJB","ts":"1611914304.127500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rqe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know how "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":" gets around Zygote not allowing array mutation? There's very clearly array mutation going on in an in-place ODEProblem."}]}]}]},{"client_msg_id":"3de898a8-5b63-4407-897a-6a2757195a28","type":"message","text":"ReverseDiff element-wise reverse","user":"U69BL50BF","ts":"1611914696.127900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"icgz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ReverseDiff element-wise reverse"}]}]}]},{"client_msg_id":"4731e1b5-d803-4e8a-bf3c-6b6b5ac25d11","type":"message","text":"wait so it doesn't use Zygote?","user":"U01H36BUDJB","ts":"1611914732.128100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OWzab","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"wait so it doesn't use Zygote?"}]}]}]},{"client_msg_id":"10a99494-b095-4b9b-bd02-872d41fcd571","type":"message","text":"it does","user":"U69BL50BF","ts":"1611914797.128300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wnx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it does"}]}]}]},{"client_msg_id":"9ed14718-5a44-47a6-b57b-ce30faa2974d","type":"message","text":"well that I'm really confused, I thought ReverseDiff and Zygote were two completely different AD tools.","user":"U01H36BUDJB","ts":"1611914829.128700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M=9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well that I'm really confused, I thought ReverseDiff and Zygote were two completely different AD tools."}]}]}]},{"client_msg_id":"0dfee84e-796b-43c8-9a17-a8e528096185","type":"message","text":"yes","user":"U69BL50BF","ts":"1611914833.128900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M9f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"7c7dd897-a1cd-4712-895d-27ea966089db","type":"message","text":":volcano:","user":"U69BL50BF","ts":"1611914838.129100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pdx=r","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"volcano"}]}]}]},{"client_msg_id":"f7cb0875-d334-44f2-9b12-0e57b5340770","type":"message","text":"there's two layers of differentiation","user":"U69BL50BF","ts":"1611914849.129400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fkP5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's two layers of differentiation"}]}]}]},{"client_msg_id":"a047b402-0a8d-4eee-b55d-794b4910a474","type":"message","text":"the user calls a Zygote derivative","user":"U69BL50BF","ts":"1611914864.129800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ID0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the user calls a Zygote derivative"}]}]}]},{"client_msg_id":"55e67b48-1b87-4fc6-a314-06c0052c6c0b","type":"message","text":"which uses an adjoint","user":"U69BL50BF","ts":"1611914870.130000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g4M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which uses an adjoint"}]}]}]},{"client_msg_id":"ab5425ac-d575-45a9-93e0-fafebdf03f3e","type":"message","text":"defined by higher order differentiation","user":"U69BL50BF","ts":"1611914875.130300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0osq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"defined by higher order differentiation"}]}]}]},{"client_msg_id":"0630ad2a-cd0a-45eb-8602-f193ca656791","type":"message","text":"where an ODE with ReverseDiff is used","user":"U69BL50BF","ts":"1611914882.130600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9j2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where an ODE with ReverseDiff is used"}]}]}]},{"client_msg_id":"fb4f3df3-18a6-44fc-a1b1-55cac72f716d","type":"message","text":"you can switch this around","user":"U69BL50BF","ts":"1611914886.130800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G+mY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can switch this around"}]}]}]},{"client_msg_id":"b92f5175-215a-44e6-8aa7-7e3237c86cfd","type":"message","text":"this is the `autojacvec` argument","user":"U69BL50BF","ts":"1611914892.131100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VaF2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is the "},{"type":"text","text":"autojacvec","style":{"code":true}},{"type":"text","text":" argument"}]}]}]},{"client_msg_id":"29941bfe-704f-45a4-b95a-862fa96c3b96","type":"message","text":"ah, I see.","user":"U01H36BUDJB","ts":"1611914906.131700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hbB+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, I see."}]}]}]},{"client_msg_id":"04e4b096-d925-4221-93f3-154f6cf8026d","type":"message","text":"`InterpolatingAdjoint(autojacvec=ReverseDiffVJP())` is the default on in-place ODEs","user":"U69BL50BF","ts":"1611914906.131800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z3E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"InterpolatingAdjoint(autojacvec=ReverseDiffVJP())","style":{"code":true}},{"type":"text","text":" is the default on in-place ODEs"}]}]}]},{"client_msg_id":"cc959ac9-823d-47d6-bc43-715f750067e4","type":"message","text":"So if you use Zygote for autojacvec you can't have an in-place ODE.","user":"U01H36BUDJB","ts":"1611914930.132200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zHi0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So if you use Zygote for autojacvec you can't have an in-place ODE."}]}]}]},{"client_msg_id":"aa12c31f-bf67-4eef-897d-3ce36c67ecac","type":"message","text":"yes","user":"U69BL50BF","ts":"1611914949.132600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SJBoL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"f490db79-4085-49d2-82e2-8c29bcbc6ae6","type":"message","text":"Seems like the performance benefit of Zygote would be negated by the GC.","user":"U01H36BUDJB","ts":"1611914958.132900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4IwN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems like the performance benefit of Zygote would be negated by the GC."}]}]}]},{"client_msg_id":"b381f6ad-bd05-4106-a6c9-d92b73e9cf4f","type":"message","text":"try it and you'll see the Zygote mutation error","user":"U69BL50BF","ts":"1611914960.133100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AIz3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"try it and you'll see the Zygote mutation error"}]}]}]},{"client_msg_id":"5d4473a1-4e8d-494a-99ae-62af17912ff1","type":"message","text":"no","user":"U69BL50BF","ts":"1611914968.133300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uaV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no"}]}]}]},{"client_msg_id":"8e41e2f1-9585-40c7-94c1-a30301799110","type":"message","text":"any reverse mode has to allocate","user":"U69BL50BF","ts":"1611914974.133500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pTU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"any reverse mode has to allocate"}]}]}]},{"client_msg_id":"bc0b3e28-3f9b-4950-bd3c-b6aa73e2069e","type":"message","text":"the only way to match it would be, if the assumptions of tape compilation are fine, to tape compile","user":"U69BL50BF","ts":"1611914996.134100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iYO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the only way to match it would be, if the assumptions of tape compilation are fine, to tape compile"}]}]}]},{"client_msg_id":"331f217a-f8c6-488e-b088-2aff366faf43","type":"message","text":"yeah but can't it pre-allocate...? the gradient sizes shouldn't change...","user":"U01H36BUDJB","ts":"1611914998.134200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qr3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah but can't it pre-allocate...? the gradient sizes shouldn't change..."}]}]}]},{"client_msg_id":"43b72b7b-f387-430f-8228-0d55c9aa31ee","type":"message","text":"`InterpolatingAdjoint(autojacvec=ReverseDiffVJP(true))`","user":"U69BL50BF","ts":"1611915009.134500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yxi7Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"InterpolatingAdjoint(autojacvec=ReverseDiffVJP(true))","style":{"code":true}}]}]}]},{"client_msg_id":"ed551536-d876-4dc7-9602-70220f85c13f","type":"message","text":"gradient sizes don't change, but you have to store the forward pass somewhere.","user":"U69BL50BF","ts":"1611915024.134900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"px05","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"gradient sizes don't change, but you have to store the forward pass somewhere."}]}]}]},{"client_msg_id":"329d4b55-3ac4-4a20-b747-c314ce06a0cb","type":"message","text":"ok, but can't that also be pre-allocated?","user":"U01H36BUDJB","ts":"1611915053.135400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eDJHk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, but can't that also be pre-allocated?"}]}]}]},{"client_msg_id":"cb456d21-0980-4395-8ee7-1a23b6736697","type":"message","text":"(I know autodiff is really hard, I'm just curious)","user":"U01H36BUDJB","ts":"1611915065.135800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fQp9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I know autodiff is really hard, I'm just curious)"}]}]}]},{"client_msg_id":"94db5daa-e19e-4975-8436-1f3440407e4d","type":"message","text":"\"`compile` is a boolean for whether to precompile the tape, which should only be done if there are no branches (`if` or `while` statements) in the `f` function\"\nis there a way around this restriction, similar to `cond` , `where`, or `while_loop` in Tensorflow? the `IfElse` package, maybe?","user":"U01H36BUDJB","ts":"1611915646.137200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nqqs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\""},{"type":"text","text":"compile","style":{"code":true}},{"type":"text","text":" is a boolean for whether to precompile the tape, which should only be done if there are no branches ("},{"type":"text","text":"if","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"while","style":{"code":true}},{"type":"text","text":" statements) in the "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" function\"\nis there a way around this restriction, similar to "},{"type":"text","text":"cond","style":{"code":true}},{"type":"text","text":" , "},{"type":"text","text":"where","style":{"code":true}},{"type":"text","text":", or "},{"type":"text","text":"while_loop","style":{"code":true}},{"type":"text","text":" in Tensorflow? the "},{"type":"text","text":"IfElse","style":{"code":true}},{"type":"text","text":" package, maybe?"}]}]}]},{"client_msg_id":"92209182-2a68-4f74-bf68-7d72b82b874d","type":"message","text":"not with ReverseDiff","user":"U69BL50BF","ts":"1611915683.137400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t4Dw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not with ReverseDiff"}]}]}]},{"client_msg_id":"0ee81caf-a2e4-4429-a813-047113d73bf9","type":"message","text":"though other AD packages like ReversePropogation could have a solution to it","user":"U69BL50BF","ts":"1611915696.137800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GwDW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"though other AD packages like ReversePropogation could have a solution to it"}]}]}]},{"client_msg_id":"1858bcba-4078-42a4-979c-f9ea8d8d97b1","type":"message","text":"a good AD package to use for this case would actually be Enzyme","user":"U69BL50BF","ts":"1611915715.138100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BFy/b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a good AD package to use for this case would actually be Enzyme"}]}]}]},{"client_msg_id":"b2dbb122-8d27-41e0-87a6-27bad9c6df91","type":"message","text":"we should setup a few more vjp options.","user":"U69BL50BF","ts":"1611915724.138400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sbdGn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we should setup a few more vjp options."}]}]}]},{"client_msg_id":"d7ac2e66-66d3-4e6f-aab8-51b32ebb4bac","type":"message","text":"ok... I think I'll just try to avoid `if` in the meantime. I guess theoretically some conditional logic could be encoded as callbacks.","user":"U01H36BUDJB","ts":"1611915796.139400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q4NE+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok... I think I'll just try to avoid "},{"type":"text","text":"if","style":{"code":true}},{"type":"text","text":" in the meantime. I guess theoretically some conditional logic could be encoded as callbacks."}]}]}]},{"client_msg_id":"b3ad57ea-7011-4558-b704-47a34bc62df8","type":"message","text":"or just multiplication","user":"U69BL50BF","ts":"1611915894.139600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1c8+m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or just multiplication"}]}]}]},{"client_msg_id":"0eb3f205-c652-4a4c-b256-a407759d1dbe","type":"message","text":"yeah true. I remember doing that a lot when writing GPU kernels haha","user":"U01H36BUDJB","ts":"1611915937.140000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4heg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah true. I remember doing that a lot when writing GPU kernels haha"}]}]}]},{"client_msg_id":"03528cfd-246f-47ea-99b3-ba00b7a13e6f","type":"message","text":"uh oh, new problem... can `p` not be an arbitrary object when using `DiffEqFlux`? I'm getting errors, looks like it expects it to be an array.","user":"U01H36BUDJB","ts":"1611916407.140800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DWiK9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uh oh, new problem... can "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" not be an arbitrary object when using "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":"? I'm getting errors, looks like it expects it to be an array."}]}]}]},{"client_msg_id":"db6d9bde-c673-4905-beda-b964a35ab5f8","type":"message","text":"no","user":"U69BL50BF","ts":"1611917328.141000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"khA/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no"}]}]}]},{"client_msg_id":"87d698df-fa32-4374-af7e-8f97607c1263","type":"message","text":"it needs to be some AbstractArray'","user":"U69BL50BF","ts":"1611917333.141200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"brn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it needs to be some AbstractArray'"}]}]}]},{"client_msg_id":"9af77f3b-e3b8-4189-8e05-1472f9f66926","type":"message","text":"since it needs to serve as the basis for an ODE solve","user":"U69BL50BF","ts":"1611917341.141500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6y6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"since it needs to serve as the basis for an ODE solve"}]}]}]},{"client_msg_id":"abf74a70-c387-4b74-985d-b408339e62c7","type":"message","text":"there are exceptions to that.","user":"U69BL50BF","ts":"1611917351.141700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PQHCT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there are exceptions to that."}]}]}]},{"client_msg_id":"53d7dd07-39fe-4479-a852-c33a2deb179e","type":"message","text":"oof","user":"U01H36BUDJB","ts":"1611919018.141900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5CP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oof"}]}]}]},{"client_msg_id":"c24836c7-1d3d-479c-af4e-cbac01abe988","type":"message","text":"this is really unfortunate. I might have to abandon SciML for my problem then... which makes me quite sad.","user":"U01H36BUDJB","ts":"1611919047.142500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vdw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is really unfortunate. I might have to abandon SciML for my problem then... which makes me quite sad."}]}]}]},{"type":"message","subtype":"bot_message","text":"It's a huge pain in the ass but I've resorted to stuffing everything in arrays and reconstructing the objects I want later... @ChrisRackauckas , the DiffEq doc says p can be anything (not in the DiffEqFlux setting, pure OrdinaryDiffEq), is it not true anymore ?","ts":"1611919780.142600","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"It's a huge pain in the ass but I've resorted to stuffing everything in arrays and reconstructing the objects I want later... @ChrisRackauckas , the DiffEq doc says p can be anything (not in the DiffEqFlux setting, pure OrdinaryDiffEq), is it not true anymore ?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"\" Note that the type for the parameters p can be anything: you can use arrays, static arrays, named tuples, etc. to enclose your parameters in a way that is sensible for your problem. \"","ts":"1611919816.142700","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"\" Note that the type for the parameters p can be anything: you can use arrays, static arrays, named tuples, etc. to enclose your parameters in a way that is sensible for your problem. \"","verbatim":false}}]},{"client_msg_id":"83661cb5-f09a-477e-ac66-5834e1d281ae","type":"message","text":"p can be anything if you aren't using `DiffEqFlux`. But I need `DiffEqFlux` . The problem with using arrays is that everything has to be the same type and the same(-ish) dimension, which doesn't really work for complex models that have many different kinds of parameters.","user":"U01H36BUDJB","ts":"1611920019.144000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dpcO=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"p can be anything if you aren't using `DiffEqFlux`. But I need "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":" . The problem with using arrays is that everything has to be the same type and the same(-ish) dimension, which doesn't really work for complex models that have many different kinds of parameters."}]}]}]},{"client_msg_id":"d87029a9-8ba4-4906-b970-e3a00762e07c","type":"message","text":"The good news is that it seems like using function closures works, i.e. you can build the step function inside of another function and thus enclose the outer functions parameters, which can be of any type. This seems to work with `DiffEqFlux` , but I'm not sure what the performance implications are.","user":"U01H36BUDJB","ts":"1611920107.145500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fc9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The good news is that it seems like using function closures works, i.e. you can build the step function inside of another function and thus enclose the outer functions parameters, which can be of any type. This seems to work with "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":" , but I'm not sure what the performance implications are."}]}]}]},{"client_msg_id":"a95df97c-bf6f-42e0-bb40-1e83858bed3d","type":"message","text":"I'm guessing that closures preclude certain kinds of optimizations from the compiler.","user":"U01H36BUDJB","ts":"1611920123.145900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P8cy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm guessing that closures preclude certain kinds of optimizations from the compiler."}]}]}]},{"client_msg_id":"daddb0ec-5e67-4a98-b64f-e03843267c37","type":"message","text":"But if you split out most of the computational work into other outer functions that are called and compiled normally maybe it wouldn't matter.","user":"U01H36BUDJB","ts":"1611920175.146900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g+LF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But if you split out most of the computational work into other outer functions that are called and compiled normally maybe it wouldn't matter."}]}]}]},{"type":"message","subtype":"bot_message","text":"That's what I'm trying currently and it is slower.  Need to try the tips given here:  <https://docs.julialang.org/en/v1/manual/performance-tips/#man-performance-captured>","ts":"1611920321.147200","username":"[gitter] <aussetg_twitter>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"That's what I'm trying currently and it is slower.\n\nNeed to try the tips given here:\n\n<https://docs.julialang.org/en/v1/manual/performance-tips/#man-performance-captured>","verbatim":false}}]},{"client_msg_id":"213858ea-ac8b-41d6-ad3f-8a37693e13ea","type":"message","text":"nice, looks like you can more or less fix it","user":"U01H36BUDJB","ts":"1611920518.147700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dV=r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nice, looks like you can more or less fix it"}]}]}]},{"client_msg_id":"34b9c7b9-3298-4da7-bfbd-d1fb1bb3c947","type":"message","text":"FastClosures.jl looks quite nice as well","user":"U01H36BUDJB","ts":"1611920689.148000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"73bA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FastClosures.jl looks quite nice as well"}]}]}]},{"type":"message","subtype":"bot_message","text":"Hey everyone! Another question from me: How can I prevent that `solve(ODEProblem(...))` stores every intermediate solution ` u(t)  for tspan[1] â‰¤ t â‰¤ tspan[2]`? I am only interested in `u(tspan[2])` and as my `u(t)` are `Array{Float64,3}`, I get problems with memory overrun when solving...happy about any advice!","ts":"1611931957.148100","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","thread_ts":"1611931957.148100","reply_count":2,"reply_users_count":1,"latest_reply":"1611932169.148400","reply_users":["U01H36BUDJB"],"subscribed":false,"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Hey everyone! Another question from me: How can I prevent that `solve(ODEProblem(...))` stores every intermediate solution ` u(t)  for tspan[1] â‰¤ t â‰¤ tspan[2]`? I am only interested in `u(tspan[2])` and as my `u(t)` are `Array{Float64,3}`, I get problems with memory overrun when solving...happy about any advice!","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Thanks!!","ts":"1611932428.148600","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Thanks!!","verbatim":false}}]},{"client_msg_id":"9c9b000f-bad0-4e83-b3a9-360c3935c9d6","type":"message","text":"I mean, you can use something like `ReverseDiffAdjoint()` with a bit more flexibility on `p`","user":"U69BL50BF","ts":"1611932953.149100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hIR7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, you can use something like "},{"type":"text","text":"ReverseDiffAdjoint()","style":{"code":true}},{"type":"text","text":" with a bit more flexibility on "},{"type":"text","text":"p","style":{"code":true}}]}]}]},{"client_msg_id":"525efa39-1d34-47b2-85f6-e204a895f5e6","type":"message","text":"the difficulty is mostly that with an adjoint method we have to build the extended space and solve either a differential equation or a quadratue with `p` in it","user":"U69BL50BF","ts":"1611932985.149800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yc8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the difficulty is mostly that with an adjoint method we have to build the extended space and solve either a differential equation or a quadratue with "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" in it"}]}]}]},{"client_msg_id":"2dffa519-013c-4030-985b-82a917a33343","type":"message","text":"the quadrature libraries require an AbstractArray, and DiffEq relaxes that a bit but not all of the way","user":"U69BL50BF","ts":"1611933009.150300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BvA+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the quadrature libraries require an AbstractArray, and DiffEq relaxes that a bit but not all of the way"}]}]}]},{"client_msg_id":"98e060ea-8901-442b-b116-2a0ed16ecf25","type":"message","text":"You probably could use a VectorOfArray","user":"U69BL50BF","ts":"1611933016.150500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GAvd9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You probably could use a VectorOfArray"}]}]}]},{"type":"message","subtype":"bot_message","text":" `saveon` did not work (V 1.5.3. )and I didn't find anything in the doc about it, but `saveat` did work. Thanks again","ts":"1611933326.150600","username":"[gitter] <Mrc010>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":" `saveon` did not work (V 1.5.3. )and I didn't find anything in the doc about it, but `saveat` did work. Thanks again","verbatim":false}}]},{"client_msg_id":"e152fe63-7834-48f8-92c6-677cb33d2ae2","type":"message","text":"`saveon` isn't an argument and never has been an argument.","user":"U69BL50BF","ts":"1611933437.150900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ek=JA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"saveon","style":{"code":true}},{"type":"text","text":" isn't an argument and never has been an argument."}]}]}]},{"client_msg_id":"5a470f41-9c1a-4672-8ff3-f8c08550d759","type":"message","text":"<@U01H36BUDJB> would a vector of arrays be enough?","user":"U69BL50BF","ts":"1611933504.151400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mnGX","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01H36BUDJB"},{"type":"text","text":" would a vector of arrays be enough?"}]}]}],"thread_ts":"1611933504.151400","reply_count":2,"reply_users_count":1,"latest_reply":"1611933844.152800","reply_users":["U01H36BUDJB"],"subscribed":false},{"client_msg_id":"16f77f7a-17fc-4457-9238-60e4d80537c3","type":"message","text":"and instead of a tuple of arrays, how about an ArrayPartition?","user":"U69BL50BF","ts":"1611933516.151700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kn61w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and instead of a tuple of arrays, how about an ArrayPartition?"}]}]}]},{"client_msg_id":"381060c9-4e39-477d-96cb-5bee65c6184b","type":"message","text":"<@U69BL50BF> @Mrc010 sorry, I meant `save_on=false`, see here <https://diffeq.sciml.ai/dev/basics/common_solver_opts/>","user":"U01H36BUDJB","ts":"1611933733.152500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0ZW","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" @Mrc010 sorry, I meant `save_on=false`, see here "},{"type":"link","url":"https://diffeq.sciml.ai/dev/basics/common_solver_opts/"}]}]}]},{"client_msg_id":"5b10c792-8624-4283-bfd3-fe199003d111","type":"message","text":"I'm sure I can isolate the parameters I am interested in optimizing into some kind of array structure, the problem is all of the other non-optimized parameters, constants, and configuration options that need to be included somehow.","user":"U01H36BUDJB","ts":"1611933969.153900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0zmF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm sure I can isolate the parameters I am interested in optimizing into some kind of array structure, the problem is all of the other non-optimized parameters, constants, and configuration options that need to be included somehow."}]}]}]},{"client_msg_id":"47fe92e8-9ea2-43bf-aa50-09c995a430de","type":"message","text":"If there are any examples of complex, large scale models using the `SciML` framework, I'd be interested in seeing how they structure their code. Presumably they would have the same kind of problem.","user":"U01H36BUDJB","ts":"1611934091.155100","team":"T68168MUP","edited":{"user":"U01H36BUDJB","ts":"1611934108.000000"},"blocks":[{"type":"rich_text","block_id":"B2oWq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If there are any examples of complex, large scale models using the "},{"type":"text","text":"SciML","style":{"code":true}},{"type":"text","text":" framework, I'd be interested in seeing how they structure their code. Presumably they would have the same kind of problem."}]}]}]},{"client_msg_id":"f6b83fa1-c7ac-4b3e-b069-8c9e5aec89eb","type":"message","text":"&gt; I'm sure I can isolate the parameters I am interested in optimizing into some kind of array structure, the problem is all of the other non-optimized parameters, constants, and configuration options that need to be included somehow.","user":"U69BL50BF","ts":"1611934125.155500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uvGmh","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I'm sure I can isolate the parameters I am interested in optimizing into some kind of array structure, the problem is all of the other non-optimized parameters, constants, and configuration options that need to be included somehow."}]}]}]},{"client_msg_id":"1fc92de2-7373-4a68-9acd-ab1cae96b97f","type":"message","text":"Yeah... I have a plan for what to do but it's tedious to solve","user":"U69BL50BF","ts":"1611934136.155800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mKU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah... I have a plan for what to do but it's tedious to solve"}]}]}]},{"client_msg_id":"d0dae3ec-f0c7-458e-8b22-326e05ab24d4","type":"message","text":"I think we can have an interface where people tell us what's actually the parameters and such","user":"U69BL50BF","ts":"1611934154.156200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t6JHc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think we can have an interface where people tell us what's actually the parameters and such"}]}]}]},{"client_msg_id":"89ce4404-63ec-47ec-88b4-2c00ef8bd32c","type":"message","text":"Yeah that's more or less what I'm making for my specific case.","user":"U01H36BUDJB","ts":"1611934172.156500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0P7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah that's more or less what I'm making for my specific case."}]}]}]},{"client_msg_id":"3ffb76cd-1505-4036-848a-461af843e363","type":"message","text":"&gt; If there are any examples of complex, large scale models using theÂ `SciML`Â framework, I'd be interested in seeing how they structure their code. Presumably they would have the same kind of problem\nJust views of arrays for now","user":"U69BL50BF","ts":"1611934180.157000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D0vK","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If there are any examples of complex, large scale models using theÂ "},{"type":"text","text":"SciML","style":{"code":true}},{"type":"text","text":"Â framework, I'd be interested in seeing how they structure their code. Presumably they would have the same kind of problem"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Just views of arrays for now"}]}]}],"thread_ts":"1611934180.157000","reply_count":13,"reply_users_count":2,"latest_reply":"1611935179.160400","reply_users":["U01H36BUDJB","U69BL50BF"],"subscribed":false},{"client_msg_id":"220c3064-e204-4c5d-a3b8-5c9b1849ce0a","type":"message","text":"with PDEs at least there's a nice structure.","user":"U69BL50BF","ts":"1611934185.157200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ntxuk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with PDEs at least there's a nice structure."}]}]}]},{"client_msg_id":"d4e01e40-e86d-4bcc-999d-db278a7bc511","type":"message","text":"I'm also kind of borrowing the ideas from ModelingToolkit about declaring dependent vs independent symbolic variables to make it more extensible","user":"U01H36BUDJB","ts":"1611934225.157900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2Yv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm also kind of borrowing the ideas from ModelingToolkit about declaring dependent vs independent symbolic variables to make it more extensible"}]}]}]},{"client_msg_id":"ADE53C87-264E-41EE-AFD5-3A29607700F2","type":"message","text":"A student Iâ€™m working with is running the Bayesian Neuyral ODE example on a different data set, and is saying it takes on the order of 2-3 hours on a powerful machine with 20 data points.  Is this to be expected? ","user":"U66G4838Q","ts":"1612148641.163500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4DB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A student Iâ€™m working with is running the Bayesian Neuyral ODE example on a different data set, and is saying it takes on the order of 2-3 hours on a powerful machine with 20 data points.  Is this to be expected? "}]}]}]},{"client_msg_id":"cae46a9f-480b-4439-89bc-97bbebe170b1","type":"message","text":"It is fairly expensive, yes. Which example? Some of them are on the order of tens of minutes, others a few hours. The current form also is not using chain-level parallelism, so it may not be exploiting a whole powerful machine.","user":"U69BL50BF","ts":"1612151431.165000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YjNSs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is fairly expensive, yes. Which example? Some of them are on the order of tens of minutes, others a few hours. The current form also is not using chain-level parallelism, so it may not be exploiting a whole powerful machine."}]}]}]},{"client_msg_id":"9006d16b-bb07-4760-a37a-fff338648d2e","type":"message","text":"Also there's probably a few better sensealg choices that could be done to the examples.","user":"U69BL50BF","ts":"1612151461.165400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"68=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also there's probably a few better sensealg choices that could be done to the examples."}]}]}]},{"client_msg_id":"c3e731e6-5f52-4244-a92d-2c0280fab298","type":"message","text":"2-3 hours does seem like a lot if it's <https://diffeqflux.sciml.ai/dev/examples/BayesianNODE_NUTS/> or <https://diffeqflux.sciml.ai/dev/examples/BayesianNODE_SGLD/> though","user":"U69BL50BF","ts":"1612151657.166000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9f7ES","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"2-3 hours does seem like a lot if it's "},{"type":"link","url":"https://diffeqflux.sciml.ai/dev/examples/BayesianNODE_NUTS/"},{"type":"text","text":" or "},{"type":"link","url":"https://diffeqflux.sciml.ai/dev/examples/BayesianNODE_SGLD/"},{"type":"text","text":" though"}]}]}]},{"client_msg_id":"31085bbf-83ae-440e-a6f5-34cb70076f3d","type":"message","text":"Yeah, it is the NUTS example","user":"U66G4838Q","ts":"1612152754.166300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WnukY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, it is the NUTS example"}]}]}]},{"client_msg_id":"82e86d63-3df0-4104-8766-86e309b522a4","type":"message","text":"I'm running this copy-pasteable example and its on the order of 10s of minutes so I'll try to see if there's anything different that she's doing","user":"U66G4838Q","ts":"1612152900.167100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HGC1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm running this copy-pasteable example and its on the order of 10s of minutes so I'll try to see if there's anything different that she's doing"}]}]}]},{"client_msg_id":"511aa6ab-bd01-4a3b-ad82-03a5e07e8239","type":"message","text":"what kind of CPU?","user":"U69BL50BF","ts":"1612152940.167300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"paRb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what kind of CPU?"}]}]}]},{"client_msg_id":"7ebe754d-12de-495f-a636-0e03890bc9bd","type":"message","text":"We do make use of LoopVectorization.jl stuff, so maybe it's an issue for <@UAUPJLBQX>? Really taking a shot in the dark","user":"U69BL50BF","ts":"1612152958.167800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bdz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We do make use of LoopVectorization.jl stuff, so maybe it's an issue for "},{"type":"user","user_id":"UAUPJLBQX"},{"type":"text","text":"? Really taking a shot in the dark"}]}]}]},{"client_msg_id":"0370c4e3-f165-4a15-84a4-8e6e6effa944","type":"message","text":"Sorry that wasn't clear.  I mean the code from the tutorial is much faster and the only difference really is the data.  I'm noticing that its starting with instabilities in the start so perhaps its pushing the solver into a finer resolution (sorry, I don't know the diffeq terminology) that isn't happening with the tutorial","user":"U66G4838Q","ts":"1612153819.169400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tuT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry that wasn't clear.  I mean the code from the tutorial is much faster and the only difference really is the data.  I'm noticing that its starting with instabilities in the start so perhaps its pushing the solver into a finer resolution (sorry, I don't know the diffeq terminology) that isn't happening with the tutorial"}]}]}]},{"client_msg_id":"be459b5d-ec77-4717-9bf4-303a5af6e356","type":"message","text":"Yeah the dependence of performance on problem there has not been quantified well yet. Using less data points can even make the problem harder, the instabilities you are seeing are probably because of the sampler starting at a weird parameter region, try to pass in a reasonable initial parameter vector and see if it helps. Also, instabilities are a big reason for performance hit in this so both those things are probably related in your case","user":"U6QF223TN","ts":"1612154169.174100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZYfc4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah the dependence of performance on problem there has not been quantified well yet. Using less data points can even make the problem harder, the instabilities you are seeing are probably because of the sampler starting at a weird parameter region, try to pass in a reasonable initial parameter vector and see if it helps. Also, instabilities are a big reason for performance hit in this so both those things are probably related in your case"}]}]}]},{"client_msg_id":"dea7622b-208c-42c1-833f-e1954f75f917","type":"message","text":"&gt; I'm noticing that its starting with instabilities in the start so perhaps its pushing the solver into a finer resolution","user":"U69BL50BF","ts":"1612154297.174400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hJMI","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I'm noticing that its starting with instabilities in the start so perhaps its pushing the solver into a finer resolution"}]}]}]},{"client_msg_id":"19fe6312-9b84-4cd0-a390-53c66590c1d0","type":"message","text":"\"finer resolution\" as in smaller dt?","user":"U69BL50BF","ts":"1612154306.174700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xz+S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"finer resolution\" as in smaller dt?"}]}]}]},{"client_msg_id":"1f8c6362-f05a-447f-8b39-b89c07c1844e","type":"message","text":"That is a very good indicator that the problem may be stiff, in which case `Tsit5()` is not an appropriate solver.","user":"U69BL50BF","ts":"1612154321.175100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dz6RW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is a very good indicator that the problem may be stiff, in which case "},{"type":"text","text":"Tsit5()","style":{"code":true}},{"type":"text","text":" is not an appropriate solver."}]}]}]},{"client_msg_id":"9767b83c-1380-413d-a434-6de72544d215","type":"message","text":"if you use an auto-switching method does it switch to the method for stiff equations?","user":"U69BL50BF","ts":"1612154358.175500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Stcv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you use an auto-switching method does it switch to the method for stiff equations?"}]}]}]},{"client_msg_id":"03600867-ead6-47f0-9ef6-473d7eb1419c","type":"message","text":"Hmm","user":"U66G4838Q","ts":"1612155364.175800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/tWL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm"}]}]}]},{"client_msg_id":"20db2a13-a8cb-4f58-9bf9-2cae1fe9ea5c","type":"message","text":"noticed a few things","user":"U66G4838Q","ts":"1612155371.176200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m/yf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"noticed a few things"}]}]}]},{"client_msg_id":"019fa837-f540-4143-82c4-d18820c5cb98","type":"message","text":"1. actually the main difference was that she has tspan 0:ndata","user":"U66G4838Q","ts":"1612155405.176900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c6vbt","elements":[{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"actually the main difference was that she has tspan 0:ndata"}]}],"style":"ordered","indent":0}]}],"thread_ts":"1612155405.176900","reply_count":1,"reply_users_count":1,"latest_reply":"1612156222.179200","reply_users":["U6QF223TN"],"subscribed":false},{"client_msg_id":"0942cda7-0612-4728-9f78-fd9fabf9fb4b","type":"message","text":"as oppose to 0:1","user":"U66G4838Q","ts":"1612155443.177200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vIrO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as oppose to 0:1"}]}]}]},{"client_msg_id":"c6712f85-7c5b-45ab-8bed-425c8afeae2c","type":"message","text":"opposed to*","user":"U66G4838Q","ts":"1612155448.177400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c5A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"opposed to*"}]}]}]},{"client_msg_id":"8273d41f-ff02-4e37-85be-efb163e02395","type":"message","text":"In general, do you normalize the spans to be over the unit interval?","user":"U66G4838Q","ts":"1612155466.177900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NQw=l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In general, do you normalize the spans to be over the unit interval?"}]}]}]},{"client_msg_id":"065a4016-510a-444b-9c74-9839514e9c33","type":"message","text":"Making that changes closes the speed gap, but I'm still getting both instability and `dt &lt;= dtmin` errors","user":"U66G4838Q","ts":"1612155500.178600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CJ8e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Making that changes closes the speed gap, but I'm still getting both instability and "},{"type":"text","text":"dt <= dtmin","style":{"code":true}},{"type":"text","text":" errors"}]}]}]},{"client_msg_id":"5509fb84-52a2-482f-882a-31287c2558ca","type":"message","text":"Hey <@U66G4838Q>: One thing which can improve the performance and reduce/avoid the instability errors is reducing the initial step size in the find_good_stepsize() function (<https://github.com/TuringLang/AdvancedHMC.jl/blob/master/src/trajectory.jl|https://github.com/TuringLang/AdvancedHMC.jl/blob/master/src/trajectory.jl>). If you look at the find_good_stepsize() code in the link above, the initialization for stepsize  starts with Ïµ = 0.1. I've found that reducing this value to Ïµ = 0.01 or Ïµ = 0.001 based on your data, sometimes leads to a much faster determination of initial step size and also avoids the instability issues due to small steps taken by the sampler.","user":"UTLTSMTEH","ts":"1612181018.184300","team":"T68168MUP","edited":{"user":"UTLTSMTEH","ts":"1612182202.000000"},"blocks":[{"type":"rich_text","block_id":"rzJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey "},{"type":"user","user_id":"U66G4838Q"},{"type":"text","text":": One thing which can improve the performance and reduce/avoid the instability errors is reducing the initial step size in the find_good_stepsize() function ("},{"type":"link","url":"https://github.com/TuringLang/AdvancedHMC.jl/blob/master/src/trajectory.jl","text":"https://github.com/TuringLang/AdvancedHMC.jl/blob/master/src/trajectory.jl"},{"type":"text","text":"). If you look at the find_good_stepsize() code in the link above, the initialization for stepsize  starts with Ïµ = 0.1. I've found that reducing this value to Ïµ = 0.01 or Ïµ = 0.001 based on your data, sometimes leads to a much faster determination of initial step size and also avoids the instability issues due to small steps taken by the sampler."}]}]}]},{"client_msg_id":"08e2352e-a639-44e8-86f5-5054e8253f06","type":"message","text":"I would recommend you to take a look at how much time the below code takes for your example\n```find_good_stepsize(h, Float64.(prob_neuralode.p))```","user":"UTLTSMTEH","ts":"1612181175.185700","team":"T68168MUP","edited":{"user":"UTLTSMTEH","ts":"1612181199.000000"},"blocks":[{"type":"rich_text","block_id":"5fi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would recommend you to take a look at how much time the below code takes for your example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"find_good_stepsize(h, Float64.(prob_neuralode.p))"}]}]}]},{"client_msg_id":"29fc9239-d3b0-4b4b-be8e-49828f35aaff","type":"message","text":"If it's taking a very long time, probably try decreasing the initial step size as I mentioned above.","user":"UTLTSMTEH","ts":"1612181231.186500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u6aLm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it's taking a very long time, probably try decreasing the initial step size as I mentioned above."}]}]}]},{"client_msg_id":"cd49223f-7b92-49f0-b0d6-6ddd3ffd5794","type":"message","text":"If it's still taking a long time to run/ having instability errors, feel free to get in touch: I'll be happy to look at the code and figure out ways to improve it :slightly_smiling_face:","user":"UTLTSMTEH","ts":"1612181345.187900","team":"T68168MUP","edited":{"user":"UTLTSMTEH","ts":"1612182286.000000"},"blocks":[{"type":"rich_text","block_id":"FPSSt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it's still taking a long time to run/ having instability errors, feel free to get in touch: I'll be happy to look at the code and figure out ways to improve it "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"type":"message","subtype":"bot_message","text":"Hello everyone, I am hesitating whether the following request is appropriate but I will try: I would love to proceed with `ModelingToolkit` but the bug <https://github.com/SciML/ModelingToolkit.jl/issues/565> has been a stopper for me for several months and I am not able to fix it myself. Would anyone, perhaps the author(s) of ModelingToolkit, be so kind and check if it is fixable with a decent effort?   As a reciprocal service to the community, I will prepare and submit a fine example for the ModelingToolkit documentation (in the past I submitted, for example, <https://diffeq.sciml.ai/stable/tutorials/ode_example/#Example-3:-Solving-Nonhomogeneous-Equations-using-Parameterized-Functions>, I actually like preparing examples). The example will revolve around building a model of very long mass-spring chain. It might be interesting, I guess. I can proceed without ModelingToolkit but I hoped to demonstrate how convenient it is (in contrast with building the function for the right hand side of the ODE manually). ","ts":"1612182230.188100","username":"[gitter] <hurak>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Hello everyone, I am hesitating whether the following request is appropriate but I will try: I would love to proceed with `ModelingToolkit` but the bug <https://github.com/SciML/ModelingToolkit.jl/issues/565> has been a stopper for me for several months and I am not able to fix it myself. Would anyone, perhaps the author(s) of ModelingToolkit, be so kind and check if it is fixable with a decent effort? \n\nAs a reciprocal service to the community, I will prepare and submit a fine example for the ModelingToolkit documentation (in the past I submitted, for example, <https://diffeq.sciml.ai/stable/tutorials/ode_example/#Example-3:-Solving-Nonhomogeneous-Equations-using-Parameterized-Functions>, I actually like preparing examples). The example will revolve around building a model of very long mass-spring chain. It might be interesting, I guess. I can proceed without ModelingToolkit but I hoped to demonstrate how convenient it is (in contrast with building the function for the right hand side of the ODE manually). ","verbatim":false}}]},{"client_msg_id":"b47ebbfa-aa29-44cf-ad39-b982df770a71","type":"message","text":"<@UCDUE13M2>","user":"U69BL50BF","ts":"1612182315.188900","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1612182327.000000"},"blocks":[{"type":"rich_text","block_id":"Esd","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UCDUE13M2"}]}]}]},{"type":"message","subtype":"channel_join","ts":"1612182318.189100","user":"UCDUE13M2","text":"<@UCDUE13M2> has joined the channel","inviter":"U69BL50BF"},{"client_msg_id":"6d4d9102-df8e-4c5d-ad0d-8dec6fa39a00","type":"message","text":"we have a pretty tight deadline for something by February 5th, but that is one of the usability concerns we should be getting to quite soon.","user":"U69BL50BF","ts":"1612182350.189900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XRp1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we have a pretty tight deadline for something by February 5th, but that is one of the usability concerns we should be getting to quite soon."}]}]}]},{"type":"message","subtype":"bot_message","text":"Thanks for considering this particular issue. Best.","ts":"1612182404.190000","username":"[gitter] <hurak>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Thanks for considering this particular issue. Best.","verbatim":false}}]},{"type":"message","text":"I wonder whether this assumption is to blame:\n<https://github.com/SciML/ModelingToolkit.jl/blob/755ebdf335591b6b297d0a4960126214a08d0e97/src/systems/diffeqs/odesystem.jl#L135>","user":"U9MD78Z9N","ts":"1612182704.190100","team":"T68168MUP"},{"client_msg_id":"99727b2e-dded-4de6-a2f2-bd275f2e065d","type":"message","text":"that's not the full issue","user":"U69BL50BF","ts":"1612182849.190400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qun","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's not the full issue"}]}]}]},{"client_msg_id":"94819769-d277-497e-95c2-6c8a7b75049d","type":"message","text":"if you get rid of that, you still have to actually fix the issue that other passes assume that form","user":"U69BL50BF","ts":"1612182866.190800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6sw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you get rid of that, you still have to actually fix the issue that other passes assume that form"}]}]}]},{"client_msg_id":"170ad389-c9b7-4c4d-aac7-9f33eabc66bc","type":"message","text":"so the constructor should search for differential terms and move them","user":"U69BL50BF","ts":"1612182882.191200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L7OAF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so the constructor should search for differential terms and move them"}]}]}]},{"type":"message","text":"True.","user":"U9MD78Z9N","ts":"1612182904.191300","team":"T68168MUP"},{"client_msg_id":"9d0825f0-6783-449c-a666-c5ee586dd585","type":"message","text":"I am trying to solve an ensemble problem. It seems that the `ensemblealg` argument can only be passed using DifferentialEquations.jl, right? If I use StochasticDiffEq.jl I have to use the kwarg  `parallel_type`  and receive a warning. Should I load DifferentialEquations  in my library? I am using `DiffEqBase.__solve(ensembleprob, alg, ensemblealg, kwargsâ€¦)`","user":"U01658MJH3P","ts":"1612205520.193300","team":"T68168MUP","edited":{"user":"U01658MJH3P","ts":"1612205829.000000"},"blocks":[{"type":"rich_text","block_id":"j2f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am trying to solve an ensemble problem. It seems that the "},{"type":"text","text":"ensemblealg","style":{"code":true}},{"type":"text","text":" argument can only be passed using DifferentialEquations.jl, right? If I use StochasticDiffEq.jl I have to use the kwarg  "},{"type":"text","text":"parallel_type","style":{"code":true}},{"type":"text","text":"  and receive a warning. Should I load DifferentialEquations  in my library? I am using "},{"type":"text","text":"DiffEqBase.__solve(ensembleprob, alg, ensemblealg, kwargsâ€¦)","style":{"code":true}}]}]}]},{"client_msg_id":"40b846bf-ef49-400f-8a1c-1cdfc1c7935a","type":"message","text":"you don't need DifferentialEquations.jl for it","user":"U69BL50BF","ts":"1612205807.193600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gFX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you don't need DifferentialEquations.jl for it"}]}]}]},{"client_msg_id":"f1730f31-61c3-4154-8e30-b8e5d0387be3","type":"message","text":"you just `solve(prob,alg,ensemblealg)","user":"U69BL50BF","ts":"1612205844.194200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Akqz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you just `solve(prob,alg,ensemblealg)"}]}]}]},{"client_msg_id":"ee385082-e2b1-405a-b581-2d020f10a20f","type":"message","text":"DiffEqBase has changed. Let me see if updating solves my issue! Thanks!","user":"U01658MJH3P","ts":"1612206351.195800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ac0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"DiffEqBase has changed. Let me see if updating solves my issue! Thanks!"}]}]}]},{"client_msg_id":"7195983a-201e-44b4-90bb-defb3d780407","type":"message","text":"what is your code like?","user":"U69BL50BF","ts":"1612206543.196000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pyzvc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what is your code like?"}]}]}]},{"client_msg_id":"e73ce989-4bed-441b-96e4-1012b7d65cad","type":"message","text":"Updating  DiffEqBase solved the problem!","user":"U01658MJH3P","ts":"1612206901.196600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Zf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Updating  DiffEqBase solved the problem!"}]}]}]},{"client_msg_id":"ae8673f8-dd91-4258-bc4e-898fa0424a4a","type":"message","text":"I am writing a library for finance: <https://sciquant.github.io/UniversalDynamics.jl/dev/ir/short_rate_model.html>","user":"U01658MJH3P","ts":"1612206954.197100","team":"T68168MUP","edited":{"user":"U01658MJH3P","ts":"1612207095.000000"},"blocks":[{"type":"rich_text","block_id":"eKQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am writing a library for finance: "},{"type":"link","url":"https://sciquant.github.io/UniversalDynamics.jl/dev/ir/short_rate_model.html"}]}]}]},{"client_msg_id":"96046d62-464c-4a47-bd43-42f6cdbc1d58","type":"message","text":"Is the adaptive step logic within integrators treated specially for AD purposes?","user":"U6P4UPP9D","ts":"1612210585.198900","team":"T68168MUP","edited":{"user":"U6P4UPP9D","ts":"1612218305.000000"},"blocks":[{"type":"rich_text","block_id":"l0t5p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is the adaptive step logic within integrators treated specially for AD purposes?"}]}]}]},{"client_msg_id":"a4f860c5-9a41-4185-8c4d-8c37585dd78c","type":"message","text":"Not really","user":"U69BL50BF","ts":"1612216923.199100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ggHk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not really"}]}]}]},{"client_msg_id":"3f7d6f56-7048-4a9c-9522-b23c440c9042","type":"message","text":"As in, they work without the treatment","user":"U69BL50BF","ts":"1612216929.199400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IzTB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As in, they work without the treatment"}]}]}]},{"client_msg_id":"44a9d920-9bdb-49ba-a5c8-be598eaf73d8","type":"message","text":"Over the years I have cut out a few bits to make it a little faster (essentially nograds), but it worked even before that","user":"U69BL50BF","ts":"1612216960.200100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5qX3b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Over the years I have cut out a few bits to make it a little faster (essentially nograds), but it worked even before that"}]}]}]},{"client_msg_id":"b84bc446-16a4-4ef6-b439-ec536b1b6435","type":"message","text":"Got curious because I found <https://www.researchgate.net/publication/2786873_Automatic_Differentiation_of_Numerical_Integration_Algorithms|this paper> reporting some discrepancies and adds a correction term for ADIFOR.","user":"U6P4UPP9D","ts":"1612223312.202300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P5Jl5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Got curious because I found "},{"type":"link","url":"https://www.researchgate.net/publication/2786873_Automatic_Differentiation_of_Numerical_Integration_Algorithms","text":"this paper"},{"type":"text","text":" reporting some discrepancies and adds a correction term for ADIFOR."}]}]}],"thread_ts":"1612223312.202300","reply_count":3,"reply_users_count":1,"latest_reply":"1612225893.206500","reply_users":["U69BL50BF"],"subscribed":false},{"client_msg_id":"d312f8b5-17e3-4a88-9a99-84108cdc771a","type":"message","text":"When calling Zygote.gradient over a loss function that depends on the parameters of an ODE, does that hooks into the sensealg chosen for the integration, or does it applies reverse AD through the solver?","user":"U6P4UPP9D","ts":"1612223844.204900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F2XA=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When calling Zygote.gradient over a loss function that depends on the parameters of an ODE, does that hooks into the sensealg chosen for the integration, or does it applies reverse AD through the solver?"}]}]}]},{"client_msg_id":"ea901ad8-eea5-4fbf-ac39-d9762d33cbdf","type":"message","text":"&gt; does that hooks into the sensealg chosen for the integration, or does it applies reverse AD through the solver?","user":"U69BL50BF","ts":"1612225611.205200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MHV1","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"does that hooks into the sensealg chosen for the integration, or does it applies reverse AD through the solver?"}]}]}]},{"client_msg_id":"c3e49194-df1f-40e3-86bf-98a2abe6b8c1","type":"message","text":"It hooks into the sensealg","user":"U69BL50BF","ts":"1612225615.205400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nTRC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It hooks into the sensealg"}]}]}]},{"client_msg_id":"90d01a30-909d-4f7f-a7c2-09367f0bbd02","type":"message","text":"but you can tell it to ignore it, or tell it to use another AD mode","user":"U69BL50BF","ts":"1612225624.205700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fOb3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but you can tell it to ignore it, or tell it to use another AD mode"}]}]}]},{"client_msg_id":"ae63ff18-366f-4655-9103-a9f5f4367c02","type":"message","text":"that's what the discrete adjoints are for.","user":"U69BL50BF","ts":"1612225632.206000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7zt5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's what the discrete adjoints are for."}]}]}]},{"type":"message","subtype":"bot_message","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png>)","ts":"1612268252.207300","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","attachments":[{"fallback":"250x218px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png","image_width":250,"image_height":218,"image_bytes":58583,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png","id":1,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png"},{"fallback":"563x490px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png","image_width":563,"image_height":490,"image_bytes":41397,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png","id":2,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png"}],"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png>)","verbatim":false}}],"edited":{"user":"B795XHD0X","ts":"1612268253.000000"}},{"type":"message","subtype":"bot_message","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png>)","ts":"1612268268.207500","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","attachments":[{"fallback":"250x218px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png","image_width":250,"image_height":218,"image_bytes":58583,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png","id":1,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png"},{"fallback":"563x490px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png","image_width":563,"image_height":490,"image_bytes":41397,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png","id":2,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png"}],"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png>)","verbatim":false}}],"edited":{"user":"B795XHD0X","ts":"1612268270.000000"}},{"type":"message","subtype":"bot_message","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png>)","ts":"1612268432.207700","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","attachments":[{"fallback":"250x145px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png","image_width":250,"image_height":145,"image_bytes":17609,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png","id":1,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png"},{"fallback":"521x303px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png","image_width":521,"image_height":303,"image_bytes":19091,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png","id":2,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png"}],"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png>)","verbatim":false}}],"edited":{"user":"B795XHD0X","ts":"1612268433.000000"}},{"type":"message","subtype":"bot_message","text":"Hi.. First trial on diffeqpy here, and struggling a bit. Installed julia 1.6.0, but the demo-code at <https://github.com/SciML/diffeqpy> , inserted, seems to take forever... not getting out of prob = de.ODEProblem(f, u0, tspan)... No errors/warnings.. Any suggestions?  ","ts":"1612268521.207900","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Hi.. First trial on diffeqpy here, and struggling a bit. Installed julia 1.6.0, but the demo-code at <https://github.com/SciML/diffeqpy> , inserted, seems to take forever... not getting out of prob = de.ODEProblem(f, u0, tspan)...\nNo errors/warnings.. Any suggestions?\n\n","verbatim":false}}]},{"client_msg_id":"ff7da613-ecc9-4a8c-b182-18b92506f44b","type":"message","text":"Hi and welcome! 1.6.0 is still in beta, so it might not work as intended. The saver option right now is 1.5.3.","user":"UNYPJU8DT","ts":"1612269645.209300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XCu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi and welcome! 1.6.0 is still in beta, so it might not work as intended. The saver option right now is 1.5.3."}]}]}]},{"client_msg_id":"780e7a6c-8282-4060-aff2-190521e4afb3","type":"message","text":"Hi, all! After finding a solution `sol` to an `ODEProblem` and having been given a function `g(u)`, let us say I want to find the value of the time integral $\\int_0^T g(sol.u(t)) dt$. I know I can compute a Riemman sum using the finite difference of the discrete set of values `sol.t` , or some other integration method, but I image, since `sol` interpolates its values, that there might be a better, simpler and more direct way to do that. Is there?","user":"U01CR62LAAD","ts":"1612270005.214000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lcqav","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, all! After finding a solution "},{"type":"text","text":"sol","style":{"code":true}},{"type":"text","text":" to an "},{"type":"text","text":"ODEProblem","style":{"code":true}},{"type":"text","text":" and having been given a function "},{"type":"text","text":"g(u)","style":{"code":true}},{"type":"text","text":", let us say I want to find the value of the time integral $\\int_0^T g(sol.u(t)) dt$. I know I can compute a Riemman sum using the finite difference of the discrete set of values "},{"type":"text","text":"sol.t","style":{"code":true}},{"type":"text","text":" , or some other integration method, but I image, since "},{"type":"text","text":"sol","style":{"code":true}},{"type":"text","text":" interpolates its values, that there might be a better, simpler and more direct way to do that. Is there?"}]}]}],"thread_ts":"1612270005.214000","reply_count":4,"reply_users_count":2,"latest_reply":"1612273923.215500","reply_users":["UAQLHMSN7","U01CR62LAAD"],"subscribed":false},{"client_msg_id":"0941c93c-eb6c-4d66-a48f-ba7692cc9710","type":"message","text":"&gt; Hi and welcome! 1.6.0 is still in beta, so it might not work as intended. The saver option right now is 1.5.3.\nIndeed,  I don't know if pyjulia has been tested on the beta yet. The other thing is that it installs everything on the first go, and that might be a big part of it.","user":"U69BL50BF","ts":"1612270225.214700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gWD8","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Hi and welcome! 1.6.0 is still in beta, so it might not work as intended. The saver option right now is 1.5.3."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Indeed,  I don't know if pyjulia has been tested on the beta yet. The other thing is that it installs everything on the first go, and that might be a big part of it."}]}]}]},{"client_msg_id":"bde4ea4b-7e5b-4741-97bc-039dd6d4b42c","type":"message","text":"Hello, All! Is there any general rule of thumb for avoiding the error `Double callback crossing floating pointer reducer errored. Report this issue.` ? I've been continually getting this error but have been hesitant to create a new issue on the DifferentialEquations.jl issue board because I've been unable to create an MWE. Any tips/help would be greatly appriciated!","user":"U01GL480CGN","ts":"1612290990.221400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yzj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello, All! Is there any general rule of thumb for avoiding the error "},{"type":"text","text":"Double callback crossing floating pointer reducer errored. Report this issue.","style":{"code":true}},{"type":"text","text":" ? I've been continually getting this error but have been hesitant to create a new issue on the DifferentialEquations.jl issue board because I've been unable to create an MWE. Any tips/help would be greatly appriciated!"}]}]}]},{"type":"message","subtype":"bot_message","text":"Hello, I'm testing a simple Advection equation with DifferentialEquations.jl but using the `iterator` interface. But I'm trying to step at specific $$\\Delta t$$ using the `saveat` option. When I print the first time $$t=0$$ as expected. But, after calling the first `step!` function, $$t = 0.003 $$ or so. And if I try to force a specific step with `step!(int, deltat)` it still goes beyond the specified $$\\Delta t$$. Any ideas? or someone have had a similar behaviour?","ts":"1612322345.221900","username":"[gitter] <olmozavala>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Hello, I'm testing a simple Advection equation with DifferentialEquations.jl but using the `iterator` interface. But I'm trying to step at specific $$\\Delta t$$ using the `saveat` option. When I print the first time $$t=0$$ as expected. But, after calling the first `step!` function, $$t = 0.003 $$ or so. And if I try to force a specific step with `step!(int, deltat)` it still goes beyond the specified $$\\Delta t$$. Any ideas? or someone have had a similar behaviour?","verbatim":false}}]},{"client_msg_id":"325006be-0966-4e36-9075-ca45f8229dca","type":"message","text":"`saveat` doesn't control the stepping behavior, it control the save points. Those are different.","user":"U69BL50BF","ts":"1612325318.222300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mTt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"saveat","style":{"code":true}},{"type":"text","text":" doesn't control the stepping behavior, it control the save points. Those are different."}]}]}]},{"client_msg_id":"ce035ad8-42b8-47c9-9416-6b406547a79d","type":"message","text":"You might want to use `adaptive=false,tstops = ...`?","user":"U69BL50BF","ts":"1612325328.222600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CE3IM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might want to use "},{"type":"text","text":"adaptive=false,tstops = ...","style":{"code":true}},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"7f8f9be0-4883-44c1-a959-64c07b7815ea","type":"message","text":"`step!` has a kwarg for hitting a point exactly.","user":"U69BL50BF","ts":"1612325355.222900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l3u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"step!","style":{"code":true}},{"type":"text","text":" has a kwarg for hitting a point exactly."}]}]}]},{"client_msg_id":"a80977bc-d1ed-4d7d-a6cb-9351fcebb9b2","type":"message","text":"<@U01GL480CGN> open an issue for that with a reproducer if you can. It's likely a deep floating point thing.","user":"U69BL50BF","ts":"1612325372.223300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zr5","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01GL480CGN"},{"type":"text","text":" open an issue for that with a reproducer if you can. It's likely a deep floating point thing."}]}]}],"thread_ts":"1612325372.223300","reply_count":2,"reply_users_count":1,"latest_reply":"1612398788.233100","reply_users":["U01GL480CGN"],"subscribed":false},{"client_msg_id":"fa658ba4-efb5-4b8f-b93b-bf9fd107788f","type":"message","text":"Bunch of questions:\n\nWhat is the current state of FEM PDE discretization in Julia? Is Gridap my best bet?\n\nQuite some time ago I asked about uncertainty quantification in combination with SINDY, now with the new Bayesian SciML paper, I am wondering if this relates?\n\nAnd about the new Bayesian SciML paper. If I understood correctly all the examples learn the entire systems, but the same techniques should be usable when you know most of the model structure but are missing some terms?\n\nI tried before to put a DiffEqFlux model inside Turing, but it was much too slow. Is AdvancedHMC that much faster?\nIf I understand correctly the Markov chains are all ran on the cpu? Is it not possible to run a bunch of parallel leapfrog integrators with DiffEqGPU?","user":"UQEDP1Q5V","ts":"1612363179.224700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nWS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Bunch of questions:\n\nWhat is the current state of FEM PDE discretization in Julia? Is Gridap my best bet?\n\nQuite some time ago I asked about uncertainty quantification in combination with SINDY, now with the new Bayesian SciML paper, I am wondering if this relates?\n\nAnd about the new Bayesian SciML paper. If I understood correctly all the examples learn the entire systems, but the same techniques should be usable when you know most of the model structure but are missing some terms?\n\nI tried before to put a DiffEqFlux model inside Turing, but it was much too slow. Is AdvancedHMC that much faster?\nIf I understand correctly the Markov chains are all ran on the cpu? Is it not possible to run a bunch of parallel leapfrog integrators with DiffEqGPU?"}]}]}]},{"client_msg_id":"203b1054-469b-4254-b8d5-8e532644b6fc","type":"message","text":"&gt; Quite some time ago I asked about uncertainty quantification in combination with SINDY, now with the new Bayesian SciML paper, I am wondering if this relates?\n&gt; \n&gt; And about the new Bayesian SciML paper. If I understood correctly all the examples learn the entire systems, but the same techniques should be usable when you know most of the model structure but are missing some terms?\nThe last example is exactly this","user":"U69BL50BF","ts":"1612364187.225000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/dr","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Quite some time ago I asked about uncertainty quantification in combination with SINDY, now with the new Bayesian SciML paper, I am wondering if this relates?\n\nAnd about the new Bayesian SciML paper. If I understood correctly all the examples learn the entire systems, but the same techniques should be usable when you know most of the model structure but are missing some terms?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The last example is exactly this"}]}]}],"thread_ts":"1612364187.225000","reply_count":5,"reply_users_count":2,"latest_reply":"1612368806.227400","reply_users":["UQEDP1Q5V","U69BL50BF"],"subscribed":false},{"client_msg_id":"62f01d25-02af-4f24-ab18-1c6f0081d1d7","type":"message","text":"&gt; What is the current state of FEM PDE discretization in Julia? Is Gridap my best bet?\nYes","user":"U69BL50BF","ts":"1612364191.225300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K/nG","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"What is the current state of FEM PDE discretization in Julia? Is Gridap my best bet?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Yes"}]}]}]},{"client_msg_id":"6292e8dd-2dfa-4f5a-b09a-017fb68969d4","type":"message","text":"&gt; I tried before to put a DiffEqFlux model inside Turing, but it was much too slow. Is AdvancedHMC that much faster?\nIt's better now, it's still hard and on-going research.","user":"U69BL50BF","ts":"1612364202.225700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XntIO","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I tried before to put a DiffEqFlux model inside Turing, but it was much too slow. Is AdvancedHMC that much faster?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It's better now, it's still hard and on-going research."}]}]}]},{"client_msg_id":"8dfe449e-042c-49fd-a09a-ad2ebc1920a7","type":"message","text":"&gt; If I understand correctly the Markov chains are all ran on the cpu? Is it not possible to run a bunch of parallel leapfrog integrators with DiffEqGPU?\nIt could be but it's hard. I'm trying to get that off the ground though.","user":"U69BL50BF","ts":"1612364224.226300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U=w4","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If I understand correctly the Markov chains are all ran on the cpu? Is it not possible to run a bunch of parallel leapfrog integrators with DiffEqGPU?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It could be but it's hard. I'm trying to get that off the ground though."}]}]}]},{"client_msg_id":"9f1d9994-d602-463f-9856-08312d172d37","type":"message","text":"Hey! Is it possible that this line needs to be updated?\n<https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/correlated_noisefunc.jl#L4>\n\nFor the in place case it is updated:\n<https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/correlated_noisefunc.jl#L22>\n\nOtherwise when I use the out of place form for `CorrelatedWienerProcess` I  get a `MethodError:` because it cannot evaluate `W.dist(W.dW,W,dtleft,u,p,W.curt,W.rng)` here:\n<https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/noise_interfaces/noise_process_interface.jl#L150|https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/noise_interfaces/noise_process_interface.jl#L1[â€¦]50>","user":"U01658MJH3P","ts":"1612381525.229800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7HnuY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey! Is it possible that this line needs to be updated?\n"},{"type":"link","url":"https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/correlated_noisefunc.jl#L4"},{"type":"text","text":"\n\nFor the in place case it is updated:\n"},{"type":"link","url":"https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/correlated_noisefunc.jl#L22"},{"type":"text","text":"\n\nOtherwise when I use the out of place form for "},{"type":"text","text":"CorrelatedWienerProcess","style":{"code":true}},{"type":"text","text":" I  get a "},{"type":"text","text":"MethodError:","style":{"code":true}},{"type":"text","text":" because it cannot evaluate "},{"type":"text","text":"W.dist(W.dW,W,dtleft,u,p,W.curt,W.rng)","style":{"code":true}},{"type":"text","text":" here:\n"},{"type":"link","url":"https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/noise_interfaces/noise_process_interface.jl#L150","text":"https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/noise_interfaces/noise_process_interface.jl#L1[â€¦]50"}]}]}]},{"client_msg_id":"7d76ec28-6eaa-4a7f-9ff9-a56626d85d66","type":"message","text":"oh yeah","user":"U69BL50BF","ts":"1612381604.230000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iuoo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh yeah"}]}]}]},{"client_msg_id":"e7af3466-cb93-4aef-9cad-d878ae4447d3","type":"message","text":"that needs an update","user":"U69BL50BF","ts":"1612381606.230300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nz2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that needs an update"}]}]}]},{"client_msg_id":"a7bac68a-a024-45ba-b942-7bb4fcf202dc","type":"message","text":"(and it sounds like we're only testing in-place.","user":"U69BL50BF","ts":"1612381613.230700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tPQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and it sounds like we're only testing in-place."}]}]}],"reactions":[{"name":"point_up_2","users":["U01658MJH3P"],"count":1}]},{"client_msg_id":"c33f864f-7e18-4a99-bf73-03adecdbcdec","type":"message","text":"should I raise an issue or you will just remember? This is a MWE showing the error:\n```f(u, p, t) = SVector(0.1, 0.1)\ng(u, p, t) = SVector(0.1, 0.1)\n\nÎ“ = @SMatrix [1.0 0.3\n              0.3 1.0]\n\nnoise = CorrelatedWienerProcess(Î“, 0., @SVector(zeros(2)), @SVector(zeros(2)))\n\nprob = SDEProblem{false}(f, g, @SVector(ones(2)), (0., 1.), nothing, noise = noise)\nsol = solve(prob, SRIW1())```","user":"U01658MJH3P","ts":"1612381677.231200","team":"T68168MUP","edited":{"user":"U01658MJH3P","ts":"1612381866.000000"},"blocks":[{"type":"rich_text","block_id":"NEYS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"should I raise an issue or you will just remember? This is a MWE showing the error:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"f(u, p, t) = SVector(0.1, 0.1)\ng(u, p, t) = SVector(0.1, 0.1)\n\nÎ“ = @SMatrix [1.0 0.3\n              0.3 1.0]\n\nnoise = CorrelatedWienerProcess(Î“, 0., @SVector(zeros(2)), @SVector(zeros(2)))\n\nprob = SDEProblem{false}(f, g, @SVector(ones(2)), (0., 1.), nothing, noise = noise)\nsol = solve(prob, SRIW1())"}]}]}]},{"client_msg_id":"7e8ef7dd-cbe9-4be6-a190-f98c05ed91fb","type":"message","text":"raise an issue.","user":"U69BL50BF","ts":"1612383336.231600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7cG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"raise an issue."}]}]}],"thread_ts":"1612383336.231600","reply_count":3,"reply_users_count":1,"latest_reply":"1612383800.232100","reply_users":["U01658MJH3P"],"subscribed":false},{"client_msg_id":"e4a6f57b-651c-4ca7-ae3c-da6cfab6ebee","type":"message","text":"It seems like array assignment breaks the gradient computation in `DiffEqFlux`...? Even doing something simple like this:\n```Î±, Î², Î´, Î³, a, b = p\nab = ones(2)\nab[1] = a\nab[2] = b\ndu[1] = dx = (Î± - Î²*y)x*ab[1]\ndu[2] = dy = (Î´*x - Î³)y*ab[2]```\nchain rule isn't applied and the original parameters `a` and `b` remain unchanged. This example is contrived, but it's quite problematic because often it's far more efficient to pre-compute a function (possibly using parameters `p`) and store the values in an array for re-use rather than make redundant function calls. Most obvious example of this is second-order finite difference, e.g. d2(f(u(x)))/dx","user":"U01H36BUDJB","ts":"1612430383.238800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9bBR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems like array assignment breaks the gradient computation in "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":"...? Even doing something simple like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Î±, Î², Î´, Î³, a, b = p\nab = ones(2)\nab[1] = a\nab[2] = b\ndu[1] = dx = (Î± - Î²*y)x*ab[1]\ndu[2] = dy = (Î´*x - Î³)y*ab[2]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"chain rule isn't applied and the original parameters "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" remain unchanged. This example is contrived, but it's quite problematic because often it's far more efficient to pre-compute a function (possibly using parameters "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":") and store the values in an array for re-use rather than make redundant function calls. Most obvious example of this is second-order finite difference, e.g. d2(f(u(x)))/dx"}]}]}]},{"client_msg_id":"5fa14062-db15-4f7b-acb4-ffcb8caa7d78","type":"message","text":"no that's ReverseDiff and type based AD in general","user":"U69BL50BF","ts":"1612431439.239300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hTzkt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no that's ReverseDiff and type based AD in general"}]}]}]},{"client_msg_id":"c73a7e4b-5f20-4faf-9c0e-d94e697a7bf3","type":"message","text":"`ab = similar(u)`","user":"U69BL50BF","ts":"1612431449.239700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s+KV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ab = similar(u)","style":{"code":true}}]}]}]},{"client_msg_id":"8e5213f0-501a-48e3-a4b5-0aca3bbb6691","type":"message","text":"just write code generically the standard way and you're fine.","user":"U69BL50BF","ts":"1612431461.240000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a/Sc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just write code generically the standard way and you're fine."}]}]}]},{"client_msg_id":"c2b7b890-e947-4418-801c-565e659c7d9e","type":"message","text":"what do you mean? in the target use case I'm thinking of, `ab` would be a pre-allocated vector and its values would be assigned to the output of a function `f(u,p)`","user":"U01H36BUDJB","ts":"1612431547.240900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XMJt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you mean? in the target use case I'm thinking of, "},{"type":"text","text":"ab","style":{"code":true}},{"type":"text","text":" would be a pre-allocated vector and its values would be assigned to the output of a function "},{"type":"text","text":"f(u,p)","style":{"code":true}}]}]}]},{"client_msg_id":"9a2940a8-d611-4b75-969d-dc94a9036141","type":"message","text":"```ab .= f(u,p)```","user":"U01H36BUDJB","ts":"1612431570.241400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Daaop","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ab .= f(u,p)"}]}]}]},{"client_msg_id":"975d93ee-d6b5-48f6-be2e-1d0612988e51","type":"message","text":"well the you need to make sure `ab` is pre-allocated with AD in mind","user":"U69BL50BF","ts":"1612431585.241700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"avZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well the you need to make sure "},{"type":"text","text":"ab","style":{"code":true}},{"type":"text","text":" is pre-allocated with AD in mind"}]}]}]},{"client_msg_id":"03285f9d-54bd-45b5-89ec-faf81e25e35d","type":"message","text":"ok, so I need to tell ReverseDiff about it?","user":"U01H36BUDJB","ts":"1612431604.242200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ogsqJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, so I need to tell ReverseDiff about it?"}]}]}]},{"client_msg_id":"4b7694e0-286d-4864-9a25-9ae1eda1f640","type":"message","text":"if you're going to reverse mode that doesn't make much sense though","user":"U69BL50BF","ts":"1612431606.242400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QGEE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you're going to reverse mode that doesn't make much sense though"}]}]}]},{"client_msg_id":"80e3fb91-279f-4be7-94cb-3a2b93c1ac94","type":"message","text":"so you're saying I should change the `sensealg` to forward mode","user":"U01H36BUDJB","ts":"1612431637.242800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KCjug","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you're saying I should change the "},{"type":"text","text":"sensealg","style":{"code":true}},{"type":"text","text":" to forward mode"}]}]}]},{"client_msg_id":"b97ac4b3-ffc7-4e3d-80e7-525f086de627","type":"message","text":"it's going to do it in forward mode too","user":"U69BL50BF","ts":"1612431652.243000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uRf1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's going to do it in forward mode too"}]}]}]},{"client_msg_id":"6244e39c-5f63-4179-9faa-7b301a0ba263","type":"message","text":"just think about how the values are flowing and you'll see it doesn't make all that much sense","user":"U69BL50BF","ts":"1612431674.243500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fp4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just think about how the values are flowing and you'll see it doesn't make all that much sense"}]}]}]},{"client_msg_id":"85ded88d-2e7d-4439-9fa8-076a145a27fb","type":"message","text":"though there is a workaround with forward mode by abusing `reinterpret`","user":"U69BL50BF","ts":"1612431687.244000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xZXX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"though there is a workaround with forward mode by abusing "},{"type":"text","text":"reinterpret","style":{"code":true}}]}]}]},{"client_msg_id":"cad2245f-05d5-466c-b677-2ffad56e360e","type":"message","text":"<https://diffeq.sciml.ai/stable/basics/faq/#I-get-Dual-number-errors-when-I-solve-my-ODE-with-Rosenbrock-or-SDIRK-methods>","user":"U69BL50BF","ts":"1612431688.244200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9ZdH","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://diffeq.sciml.ai/stable/basics/faq/#I-get-Dual-number-errors-when-I-solve-my-ODE-with-Rosenbrock-or-SDIRK-methods"}]}]}]},{"client_msg_id":"d9a714b9-65c2-4460-a68d-2ef950652cb5","type":"message","text":"mathematically it makes sense to me... it would just be a chain rule application through `ab` ; but I can understand why there might be complications with autodiff","user":"U01H36BUDJB","ts":"1612431717.244900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ET9D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"mathematically it makes sense to me... it would just be a chain rule application through "},{"type":"text","text":"ab","style":{"code":true}},{"type":"text","text":" ; but I can understand why there might be complications with autodiff"}]}]}]},{"client_msg_id":"0fd4ba12-51cf-4617-9640-caaa56fb09e6","type":"message","text":"`ab = ones(2)`","user":"U69BL50BF","ts":"1612431736.245100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nz134","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ab = ones(2)","style":{"code":true}}]}]}]},{"client_msg_id":"d117fd72-f3b9-4efe-9fcd-a97626939cf0","type":"message","text":"it's 128 bits","user":"U69BL50BF","ts":"1612431739.245300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7+Lgk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's 128 bits"}]}]}]},{"client_msg_id":"ab39b20e-36db-4134-8523-27b544d8c566","type":"message","text":"how do you chain rule through 128 bits with (4+1)*64*2 bits of numbers?","user":"U69BL50BF","ts":"1612431755.245700","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1612431888.000000"},"blocks":[{"type":"rich_text","block_id":"XzjG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how do you chain rule through 128 bits with (4+1)*64*2 bits of numbers?"}]}]}]},{"client_msg_id":"b34b3501-14f8-4aad-a00e-849290d21380","type":"message","text":"well... it's like a new variable; we could equivalently do\n```du[1] = dx = (Î± - Î²*y)x*a\ndu[2] = dy = (Î´*x - Î³)y*b```\nbut in this example, we set `y1 = a` and `y2 = b`  (i.e. `ab=[y1,y2]` ) and then do\n```du[1] = dx = (Î± - Î²*y)x*y1\ndu[2] = dy = (Î´*x - Î³)y*y2```\nso chain rule just says that d(dx)/da = d(dx)/dy1*d(y1)/da and the rightmost term is just one.","user":"U01H36BUDJB","ts":"1612431944.248600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/9x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well... it's like a new variable; we could equivalently do\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"du[1] = dx = (Î± - Î²*y)x*a\ndu[2] = dy = (Î´*x - Î³)y*b"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but in this example, we set "},{"type":"text","text":"y1 = a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"y2 = b","style":{"code":true}},{"type":"text","text":"  (i.e. "},{"type":"text","text":"ab=[y1,y2]","style":{"code":true}},{"type":"text","text":" ) and then do\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"du[1] = dx = (Î± - Î²*y)x*y1\ndu[2] = dy = (Î´*x - Î³)y*y2"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so chain rule just says that d(dx)/da = d(dx)/dy1*d(y1)/da and the rightmost term is just one."}]}]}]},{"client_msg_id":"bb73b3b5-75cc-4f47-a1fd-d80d58cde28d","type":"message","text":"yes, but that's not the issue","user":"U69BL50BF","ts":"1612431955.248800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vKhNq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, but that's not the issue"}]}]}]},{"client_msg_id":"72599d40-c2b5-45a4-817b-93e9d7c4eff5","type":"message","text":"you're saying you're \"pre-allocating\"","user":"U69BL50BF","ts":"1612431961.249000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xXSm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you're saying you're \"pre-allocating\""}]}]}]},{"client_msg_id":"0d537dd2-6cfc-43f4-ac95-c38d987221e5","type":"message","text":"you're pre-allocating 128 bits and want to store 640 bits in it.","user":"U69BL50BF","ts":"1612431987.249800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xbUnW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you're pre-allocating 128 bits and want to store 640 bits in it."}]}]}]},{"client_msg_id":"3b7e1dd2-fd7c-454d-887f-ea75a9ccc54b","type":"message","text":"so there's two pieces to it","user":"U69BL50BF","ts":"1612432045.250100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7Tgl1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so there's two pieces to it"}]}]}]},{"client_msg_id":"d3d90447-6698-4c7a-b3fe-11ec7581e568","type":"message","text":"1 is that reverse mode needs to delay computation, so it's not just an implementation thing but rather it's impossible to not use memory in reverse mode AD because it needs to be stored for a potentially indefinitely later time (unless you're using reversible computing). 2 is that in forward mode it doesn't need to delay computation because it eagerly pushes forward, but by doing so the bits associated with given operations grows to hold all of the dual dimensions","user":"U69BL50BF","ts":"1612432143.252000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nhm3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1 is that reverse mode needs to delay computation, so it's not just an implementation thing but rather it's impossible to not use memory in reverse mode AD because it needs to be stored for a potentially indefinitely later time (unless you're using reversible computing). 2 is that in forward mode it doesn't need to delay computation because it eagerly pushes forward, but by doing so the bits associated with given operations grows to hold all of the dual dimensions"}]}]}]},{"client_msg_id":"a366d055-cd5c-4ea3-adc8-92f5ac807d31","type":"message","text":"(2) can be handled by the trick I posted above which allows you to define arrays which use dispatch to change sizes depending on whether it's in the AD context or not","user":"U69BL50BF","ts":"1612432182.252700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8i=3s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(2) can be handled by the trick I posted above which allows you to define arrays which use dispatch to change sizes depending on whether it's in the AD context or not"}]}]}]},{"client_msg_id":"61c80fc8-f366-4d0c-851a-fad0c0f2abce","type":"message","text":"but 1 that's just how reverse mode AD works. You can \"let mutation work\" in reverse mode, and that would just amount to behind the scenes allocating the values for when one reverses.","user":"U69BL50BF","ts":"1612432222.253700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FNP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but 1 that's just how reverse mode AD works. You can \"let mutation work\" in reverse mode, and that would just amount to behind the scenes allocating the values for when one reverses."}]}]}]},{"client_msg_id":"de07a8bb-0d4c-4167-8503-02c61ec4c935","type":"message","text":"unless it's a fully scalarized compile time reverse mode AD","user":"U69BL50BF","ts":"1612432266.253900","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1612432281.000000"},"blocks":[{"type":"rich_text","block_id":"mE0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"unless it's a fully scalarized compile time reverse mode AD"}]}]}]},{"client_msg_id":"92f34c48-7371-4064-9e27-f6e41e38cd2d","type":"message","text":"in which case it wouldn't use you preallocation","user":"U69BL50BF","ts":"1612432294.254500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"28fg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in which case it wouldn't use you preallocation"}]}]}]},{"client_msg_id":"deb756e0-a4e3-4763-bee3-c1e7dcc23cf4","type":"message","text":"hmm, ok, so I guess long story short I just have to allocate new vectors in the step function","user":"U01H36BUDJB","ts":"1612432300.254700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kM99","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm, ok, so I guess long story short I just have to allocate new vectors in the step function"}]}]}]},{"client_msg_id":"e14b598c-8054-4dcf-a6a2-ada3ffe7c0cc","type":"message","text":"or use this trick with forward diff","user":"U01H36BUDJB","ts":"1612432315.255100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z6IVP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or use this trick with forward diff"}]}]}]},{"client_msg_id":"06132291-d469-4623-914e-d6f81ddecba4","type":"message","text":"if you don't allocate and you're doing reverse mode, what's going to happen is equivalent to it anyways","user":"U69BL50BF","ts":"1612432346.255600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Og06","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you don't allocate and you're doing reverse mode, what's going to happen is equivalent to it anyways"}]}]}]},{"client_msg_id":"67975308-a17a-4b45-b543-e8436e46e713","type":"message","text":"it's why ML libraries have much less emphasis on performance in the front end","user":"U69BL50BF","ts":"1612432369.256100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7/t8e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's why ML libraries have much less emphasis on performance in the front end"}]}]}]},{"client_msg_id":"d5e7fe31-1775-4717-976f-5d941381f43f","type":"message","text":"you mean why I never once thought about memory allocation while using tensorflow? :sweat_smile:","user":"U01H36BUDJB","ts":"1612432420.256600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+gRnS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you mean why I never once thought about memory allocation while using tensorflow? "},{"type":"emoji","name":"sweat_smile"}]}]}]},{"client_msg_id":"53bfac5a-531b-48eb-980d-07db41671aac","type":"message","text":"tensorflow is completely different","user":"U69BL50BF","ts":"1612432433.256800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u=J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"tensorflow is completely different"}]}]}]},{"client_msg_id":"3e6d2deb-09f1-44fc-bf56-3770eb0062cb","type":"message","text":"it's a declarative programming language","user":"U69BL50BF","ts":"1612432443.257100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zif","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's a declarative programming language"}]}]}]},{"client_msg_id":"01f95b74-6dca-422d-9965-567bc55c2498","type":"message","text":"I mean... 2.0 isn't","user":"U01H36BUDJB","ts":"1612432459.257300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"veT+T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean... 2.0 isn't"}]}]}]},{"client_msg_id":"f5a02e7c-bc10-4eeb-92bb-b81da67730f3","type":"message","text":"under the hood I guess it still is because it does all of this crazy graph building with `@tf.function` but...","user":"U01H36BUDJB","ts":"1612432492.258000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IYXBY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"under the hood I guess it still is because it does all of this crazy graph building with "},{"type":"text","text":"@tf.function","style":{"code":true}},{"type":"text","text":" but..."}]}]}]},{"client_msg_id":"857a1968-ab2f-41ae-8c29-0d00b2b9061f","type":"message","text":"it just has dynamic nodes and a way to disable a lot of the optimizations","user":"U69BL50BF","ts":"1612432517.258300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uBuT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it just has dynamic nodes and a way to disable a lot of the optimizations"}]}]}]},{"client_msg_id":"87fa1783-62da-4fba-a0b3-bbda8108c12e","type":"message","text":"that 100 parameters rule-of-thumb for forward diff in the documentation, does that mean sensitivity parameters or also the number of ODEs (i.e. size of `u` )?","user":"U01H36BUDJB","ts":"1612432621.259500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ssq=z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that 100 parameters rule-of-thumb for forward diff in the documentation, does that mean sensitivity parameters or also the number of ODEs (i.e. size of "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":" )?"}]}]}]},{"client_msg_id":"3a15a522-dedc-4655-975f-54c6825ae898","type":"message","text":"we saw the same thing in ODE cases","user":"U69BL50BF","ts":"1612432681.259800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XlQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we saw the same thing in ODE cases"}]}]}]},{"client_msg_id":"d01a1aa0-49e7-48a9-8432-8f694710307b","type":"message","text":"but there's a bunch of caveats","user":"U69BL50BF","ts":"1612432688.260100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vZE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but there's a bunch of caveats"}]}]}]},{"client_msg_id":"12ddb971-b610-44e3-b831-37d0cbbe2ab5","type":"message","text":"so if I have say 10 \"trained\" parameters but 200 ODEs (from a discretized PDE), then you would expect reverse-diff to be more efficient, per your benchmarks?","user":"U01H36BUDJB","ts":"1612432776.261100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GtfY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so if I have say 10 \"trained\" parameters but 200 ODEs (from a discretized PDE), then you would expect reverse-diff to be more efficient, per your benchmarks?"}]}]}]},{"client_msg_id":"a0ac04fa-b8af-4ab9-baf4-0a07e1b606c5","type":"message","text":"that's on the edge. Maybe forward there if you do all of the pre-allocation tricks","user":"U69BL50BF","ts":"1612432808.261600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sBa0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's on the edge. Maybe forward there if you do all of the pre-allocation tricks"}]}]}]},{"client_msg_id":"08112467-10fb-4723-97e4-253bb6afdff2","type":"message","text":"stiff?","user":"U69BL50BF","ts":"1612432829.261800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fxG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"stiff?"}]}]}]},{"client_msg_id":"804d4a05-5832-4b37-9849-dd16c1ee404c","type":"message","text":"yes","user":"U01H36BUDJB","ts":"1612432843.262000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MMlJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"be2cfe53-e32d-49d1-937a-ac99a19ffa57","type":"message","text":"well partially... heat equation w/ phase change, so it's stiff during phase change, but I think it's non-stiff otherwise","user":"U01H36BUDJB","ts":"1612432888.262700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1PeY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well partially... heat equation w/ phase change, so it's stiff during phase change, but I think it's non-stiff otherwise"}]}]}]},{"client_msg_id":"69f3a11a-86f4-42e2-8b8e-6a27e481b378","type":"message","text":"was gonna use the auto-switching solvers","user":"U01H36BUDJB","ts":"1612432899.263000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uGPY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"was gonna use the auto-switching solvers"}]}]}]},{"client_msg_id":"b3f834b0-159a-4c72-8a14-ab588c82b533","type":"message","text":"I think forward mode then","user":"U69BL50BF","ts":"1612432908.263200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tuf6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think forward mode then"}]}]}]},{"client_msg_id":"78e74138-ca15-4fbe-885d-8c07912624f1","type":"message","text":"for reasons explained in a submission due tomorrow","user":"U69BL50BF","ts":"1612432919.263500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7K63A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for reasons explained in a submission due tomorrow"}]}]}]},{"client_msg_id":"e86466d4-1faa-4e38-9967-ae57cd14a361","type":"message","text":"oof, ok I'll stop bothering you then","user":"U01H36BUDJB","ts":"1612432936.263800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WTcTI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oof, ok I'll stop bothering you then"}]}]}]},{"client_msg_id":"89c844ca-8a89-430c-9a5d-76c5899e622d","type":"message","text":"though QuadratureAdjoint would likely give it a run for the money","user":"U69BL50BF","ts":"1612432943.264100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KoH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"though QuadratureAdjoint would likely give it a run for the money"}]}]}]},{"client_msg_id":"e40d913e-bf02-44e5-af16-95a2de079c85","type":"message","text":"no, the submissions are fine","user":"U69BL50BF","ts":"1612432947.264300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P=FO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, the submissions are fine"}]}]}]},{"client_msg_id":"63d14ce8-568e-4794-8802-8a0d3b0ec718","type":"message","text":"doing 3 this week but it's mostly tidying up now.","user":"U69BL50BF","ts":"1612432963.264600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y10XQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"doing 3 this week but it's mostly tidying up now."}]}]}]},{"client_msg_id":"84a1ac5c-aa50-41ec-b0ce-a457ae1752a5","type":"message","text":"Slack says it's like 5 AM your time. Are you not in North America?","user":"U01H36BUDJB","ts":"1612432995.264900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6uv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Slack says it's like 5 AM your time. Are you not in North America?"}]}]}]},{"client_msg_id":"ef3a6e8d-23f7-4871-b61e-4aabeef0d5c9","type":"message","text":"I am","user":"U69BL50BF","ts":"1612433001.265100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AUvP+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am"}]}]}]},{"client_msg_id":"cd2ba686-0eb7-4edc-aa1f-36b2eb63cb0d","type":"message","text":":sweat_smile:","user":"U01H36BUDJB","ts":"1612433011.265300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ha=","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"sweat_smile"}]}]}]},{"client_msg_id":"af86079f-5ea1-4eee-a863-14a1feb46666","type":"message","text":"so the solution to having pre-allocated arrays with forward-diff is `get_tmp` and `dualcache`?","user":"U01H36BUDJB","ts":"1612433991.265900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WD8Bw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so the solution to having pre-allocated arrays with forward-diff is "},{"type":"text","text":"get_tmp","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"dualcache","style":{"code":true}},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"3f9c41d2-f8ac-4bc3-b558-3d67fa21c812","type":"message","text":"yes","user":"U69BL50BF","ts":"1612434932.266100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tzx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"type":"message","subtype":"bot_message","text":"&gt; Hi.. First trial on diffeqpy here, and struggling a bit. Installed julia 1.6.0, but the demo-code at <https://github.com/SciML/diffeqpy> , inserted, seems to take forever... not getting out of prob = de.ODEProblem(f, u0, tspan)... &gt; No errors/warnings.. Any suggestions? &gt;  &gt;   With downgrading to version 1.5.3 for julia gave a clear improvement (thanks for suggestion). My normal development cycle is still somewhat hampered though.. Using PyCharm to single-step through the code, any interactive use at a breakpoint seems to be impossible.. Even before any de call to de.xx has been done, just a simple \" tv=np.arange(0.,1,0.1) takes forever... and returns nothing. Is this \"normal\"?  ","ts":"1612435118.266200","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"&gt; Hi.. First trial on diffeqpy here, and struggling a bit. Installed julia 1.6.0, but the demo-code at <https://github.com/SciML/diffeqpy> , inserted, seems to take forever... not getting out of prob = de.ODEProblem(f, u0, tspan)...\n&gt; No errors/warnings.. Any suggestions?\n&gt; \n&gt;  \nWith downgrading to version 1.5.3 for julia gave a clear improvement (thanks for suggestion). My normal development cycle is still somewhat hampered though.. Using PyCharm to single-step through the code, any interactive use at a breakpoint seems to be impossible.. Even before any de call to de.xx has been done, just a simple \" tv=np.arange(0.,1,0.1) takes forever... and returns nothing. Is this \"normal\"?\n\n","verbatim":false}}]},{"client_msg_id":"b85a7cc4-8240-406f-8568-75a092d0131f","type":"message","text":"I'm not sure what you're referring to with `tv=np.arange(0.,1,0.1)`","user":"U69BL50BF","ts":"1612435311.266500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rx4aS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure what you're referring to with "},{"type":"text","text":"tv=np.arange(0.,1,0.1)","style":{"code":true}}]}]}]},{"client_msg_id":"42cc909c-16da-4abb-9768-ab26c59f92f9","type":"message","text":"that's not in any of the examples?","user":"U69BL50BF","ts":"1612435317.266700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"amw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's not in any of the examples?"}]}]}]},{"client_msg_id":"81da19f0-363e-4137-861f-cbe9b37618fe","type":"message","text":"<@U69BL50BF> I don't think the example in the docs with `get_tmp` and `dualcache` works with `DiffEqFlux` because then the contents of `p` are also instances of `Dual` during forward differentiation.","user":"U01H36BUDJB","ts":"1612436274.268100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UTi","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" I don't think the example in the docs with "},{"type":"text","text":"get_tmp","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"dualcache","style":{"code":true}},{"type":"text","text":" works with "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":" because then the contents of "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" are also instances of "},{"type":"text","text":"Dual","style":{"code":true}},{"type":"text","text":" during forward differentiation."}]}]}]},{"client_msg_id":"ecd8eca9-2f15-40a9-8054-de245c76b8f2","type":"message","text":"i.e. then `mul!(tmp,A,u)` doesn't type check anymore because `tmp = get_tmp(tmp,u)` reinterprets as the original array type.","user":"U01H36BUDJB","ts":"1612436334.269200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"taONT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i.e. then "},{"type":"text","text":"mul!(tmp,A,u)","style":{"code":true}},{"type":"text","text":" doesn't type check anymore because "},{"type":"text","text":"tmp = get_tmp(tmp,u)","style":{"code":true}},{"type":"text","text":" reinterprets as the original array type."}]}]}]},{"client_msg_id":"0ebd47b8-f5d9-49b3-955c-25e539b17b39","type":"message","text":"you just need to make sure the chunksizes align.","user":"U69BL50BF","ts":"1612436367.269700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RaP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you just need to make sure the chunksizes align."}]}]}]},{"client_msg_id":"6f06cb98-c3ce-4b95-a0e6-c7662f9610bb","type":"message","text":"ah, because `p` and `u` are different lengths","user":"U01H36BUDJB","ts":"1612436391.270000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k/E5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, because "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":" are different lengths"}]}]}]},{"client_msg_id":"dad11260-92e2-4ff4-bf48-0f86ed9bd675","type":"message","text":"so the automatic chunking would be different","user":"U01H36BUDJB","ts":"1612436400.270200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T4J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so the automatic chunking would be different"}]}]}]},{"client_msg_id":"5f38530e-7dfc-46b9-8b92-afda82642900","type":"message","text":"how do you control the chunking when calling `sciml_train` ? I don't see a kwarg for that.","user":"U01H36BUDJB","ts":"1612436468.270500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DnR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how do you control the chunking when calling "},{"type":"text","text":"sciml_train","style":{"code":true}},{"type":"text","text":" ? I don't see a kwarg for that."}]}]}]},{"client_msg_id":"88d5700f-9b5d-4980-af59-ebb747e58b01","type":"message","text":"there isn't an argument for it","user":"U69BL50BF","ts":"1612436481.270700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s=9i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there isn't an argument for it"}]}]}]},{"type":"message","subtype":"bot_message","text":"&gt; [slack] &lt;chrisrackauckas&gt; that's not in any of the examples?  I am just creating an array to plot the solution at a finer time grid... plt.plot(tv,sol(tv)) ","ts":"1612436485.270900","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"&gt; [slack] &lt;chrisrackauckas&gt; that's not in any of the examples?\n\nI am just creating an array to plot the solution at a finer time grid... plt.plot(tv,sol(tv)) ","verbatim":false}}]},{"client_msg_id":"2858f196-72e5-4d01-a1f3-546b86b5d4ae","type":"message","text":"I'd have to dig in to see how it's heuristically doing it","user":"U69BL50BF","ts":"1612436491.271100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s=uf5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd have to dig in to see how it's heuristically doing it"}]}]}]},{"client_msg_id":"25aa442e-bbc7-4cc9-ab93-14b13dd9dd3e","type":"message","text":"ah wait ``ForwardDiffSensitivity`` has a chunk size argument","user":"U01H36BUDJB","ts":"1612436528.271500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wM2aa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah wait `"},{"type":"text","text":"ForwardDiffSensitivity","style":{"code":true}},{"type":"text","text":"` has a chunk size argument"}]}]}]},{"client_msg_id":"62633f33-3614-4642-8815-f8b059d19b9d","type":"message","text":"@peroveh are you running it in a REPL or IDE? The initialization of the packages may take a bit but once all of the instances are running it should be good.","user":"U69BL50BF","ts":"1612436596.272300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TsUDj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@peroveh are you running it in a REPL or IDE? The initialization of the packages may take a bit but once all of the instances are running it should be good."}]}]}]},{"type":"message","subtype":"bot_message","text":"<@U69BL50BF> Yes...i note the time for initialization... (from diffeqpy import de etc).. But this appears to be an issue with PyCharm after the initialization... When at any breakpoint, it does not appear to behave as for normal programs in python when i single step these.. For others i can create new variables, inspect them, plot them etc.. But now i cannot get this to work... The simple interactive test te=np.arange(0.,1,0.1) to create a new time vector takes forever, returns nothing.. whereas the same statement explicit in the code does behave as expected.. It thus appear that it is the debug functionality in PyCharm which somehow is \"wrecked\".. Here i have stopped after tl is created... but no interaction appears possible..","ts":"1612437176.272400","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"<@U69BL50BF> Yes...i note the time for initialization... (from diffeqpy import de etc).. But this appears to be an issue with PyCharm after the initialization... When at any breakpoint, it does not appear to behave as for normal programs in python when i single step these.. For others i can create new variables, inspect them, plot them etc.. But now i cannot get this to work... The simple interactive test te=np.arange(0.,1,0.1) to create a new time vector takes forever, returns nothing.. whereas the same statement explicit in the code does behave as expected.. It thus appear that it is the debug functionality in PyCharm which somehow is \"wrecked\".. Here i have stopped after tl is created... but no interaction appears possible..","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/image.png>)","ts":"1612437176.272500","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","attachments":[{"fallback":"250x164px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/thumb/image.png","image_width":250,"image_height":164,"image_bytes":29374,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/thumb/image.png","id":1,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/thumb/image.png"},{"fallback":"895x588px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/image.png","image_width":895,"image_height":588,"image_bytes":77700,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/image.png","id":2,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/image.png"}],"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/pHFp/image.png>)","verbatim":false}}],"edited":{"user":"B795XHD0X","ts":"1612437177.000000"}},{"client_msg_id":"fdd88c85-a960-474e-b1dc-622128b8b621","type":"message","text":"I am not sure how PyCharm breakpoints are going to interact with the Julia calls","user":"U69BL50BF","ts":"1612437207.273000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5a1R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am not sure how PyCharm breakpoints are going to interact with the Julia calls"}]}]}]},{"client_msg_id":"95612c11-8a4d-40f1-9827-12d08c3926b1","type":"message","text":"that's a question for the pyjulia devs","user":"U69BL50BF","ts":"1612437214.273300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y13","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's a question for the pyjulia devs"}]}]}]},{"client_msg_id":"10de1440-f9cc-4e60-b79b-167c598d341b","type":"message","text":"<@U69BL50BF> I'm 90% sure at this point that `dualcache` just doesn't work with `DiffEqFlux` since the parameter vector `p` has to be a flat array. It fails if there's any other kind of structure, including `DualCache` .","user":"U01H36BUDJB","ts":"1612448742.274700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k4hJk","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" I'm 90% sure at this point that "},{"type":"text","text":"dualcache","style":{"code":true}},{"type":"text","text":" just doesn't work with "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":" since the parameter vector "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" has to be a flat array. It fails if there's any other kind of structure, including "},{"type":"text","text":"DualCache","style":{"code":true}},{"type":"text","text":" ."}]}]}]},{"client_msg_id":"cf4fa890-f8f0-4c16-8441-17c8da791a99","type":"message","text":"I've been messing around with it for a while now.","user":"U01H36BUDJB","ts":"1612448758.275000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gTd9U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've been messing around with it for a while now."}]}]}]},{"client_msg_id":"c61e4a1c-13cb-4681-a0f9-7ded7bda0411","type":"message","text":"you'dhave to global it.","user":"U69BL50BF","ts":"1612453867.275400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iCK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you'dhave to global it."}]}]}]},{"client_msg_id":"f37c2a2c-4b80-4ac1-b733-e07d33126ac4","type":"message","text":"unrelated question, are there any major drawbacks to using MultiScaleArrays? performance penalties or something?","user":"U01H36BUDJB","ts":"1612454923.275900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wKq=o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"unrelated question, are there any major drawbacks to using MultiScaleArrays? performance penalties or something?"}]}]}]},{"client_msg_id":"c8fd7389-0070-4b8c-956e-eb0c9d75d5b9","type":"message","text":"yes, it's discontiguous","user":"U69BL50BF","ts":"1612456323.276100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qej","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, it's discontiguous"}]}]}]},{"client_msg_id":"df6396db-3455-4e15-82e1-c6cdcb341e03","type":"message","text":"hmm. well the alternative in my problem domain would be to have a single contiguous state array but possibly with large sections that have zero derivatives, if that particular layer does not implement the variable","user":"U01H36BUDJB","ts":"1612457507.277400","team":"T68168MUP","edited":{"user":"U01H36BUDJB","ts":"1612457583.000000"},"blocks":[{"type":"rich_text","block_id":"rGO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm. well the alternative in my problem domain would be to have a single contiguous state array but possibly with large sections that have zero derivatives, if that particular layer does not implement the variable"}]}]}]},{"client_msg_id":"f62b057b-e956-4b43-bd6a-66607ba4f070","type":"message","text":"so I guess how efficient that is depends on how well the solvers handle sparsity and/or zero derivatives","user":"U01H36BUDJB","ts":"1612457528.277900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sqXoZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I guess how efficient that is depends on how well the solvers handle sparsity and/or zero derivatives"}]}]}]},{"client_msg_id":"72767238-0794-44d2-8571-439914fe0133","type":"message","text":"I saw something on this slack recently but don't remember what it said exactly. If I have a large system, but I am primarily interested in just the linear combination of some of the state variables (for instance, an age structured model where I want to measure the total population), is there a method that will get me that more efficiently than solving for all the state variables?","user":"U011V2YN59N","ts":"1612459229.279700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y8Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I saw something on this slack recently but don't remember what it said exactly. If I have a large system, but I am primarily interested in just the linear combination of some of the state variables (for instance, an age structured model where I want to measure the total population), is there a method that will get me that more efficiently than solving for all the state variables?"}]}]}]},{"client_msg_id":"c90b1c5d-6ec5-41c0-be27-2c56b5208b30","type":"message","text":"not in general. In general, you need to solve the nonlinear function to linearly combine.","user":"U69BL50BF","ts":"1612459338.280100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CM3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not in general. In general, you need to solve the nonlinear function to linearly combine."}]}]}]},{"client_msg_id":"6e497ff9-a7e7-4146-a670-f9d930c92eb8","type":"message","text":"Right ok, I'm not sure what it was that I was thinking about then. Thanks!","user":"U011V2YN59N","ts":"1612459680.280700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vONW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right ok, I'm not sure what it was that I was thinking about then. Thanks!"}]}]}]},{"client_msg_id":"0b44f85b-b305-4255-9261-9c6622583183","type":"message","text":"is there documentation somewhere on how `solve` determines when it needs to allocate new instances of `u`? I guess it's at least partially solver dependent.","user":"U01H36BUDJB","ts":"1612463376.283100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gdje","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there documentation somewhere on how "},{"type":"text","text":"solve","style":{"code":true}},{"type":"text","text":" determines when it needs to allocate new instances of "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":"? I guess it's at least partially solver dependent."}]}]}]},{"client_msg_id":"82ec9c8c-091f-4132-bccd-7864fb448ec4","type":"message","text":"Any advice on profiling solving differential equations on the GPU? The profiler utilities in Julia confuse me","user":"UPM0H43C7","ts":"1612467195.284500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9soa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any advice on profiling solving differential equations on the GPU? The profiler utilities in Julia confuse me"}]}]}]},{"client_msg_id":"69d05f41-780c-4f2f-91b0-e24824cc5211","type":"message","text":"<https://juliagpu.gitlab.io/CUDA.jl/development/profiling/>","user":"U67BJLYCS","ts":"1612467376.284700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lXayK","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://juliagpu.gitlab.io/CUDA.jl/development/profiling/"}]}]}],"thread_ts":"1612467376.284700","reply_count":2,"reply_users_count":2,"latest_reply":"1612467745.285100","reply_users":["UPM0H43C7","U9MD78Z9N"],"subscribed":false,"reactions":[{"name":"+1","users":["UPM0H43C7"],"count":1}]}]}