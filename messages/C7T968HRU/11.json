{"cursor": 10, "messages": [{"client_msg_id":"c6712f85-7c5b-45ab-8bed-425c8afeae2c","type":"message","text":"opposed to*","user":"U66G4838Q","ts":"1612155448.177400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c5A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"opposed to*"}]}]}]},{"client_msg_id":"8273d41f-ff02-4e37-85be-efb163e02395","type":"message","text":"In general, do you normalize the spans to be over the unit interval?","user":"U66G4838Q","ts":"1612155466.177900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NQw=l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In general, do you normalize the spans to be over the unit interval?"}]}]}]},{"client_msg_id":"065a4016-510a-444b-9c74-9839514e9c33","type":"message","text":"Making that changes closes the speed gap, but I'm still getting both instability and `dt &lt;= dtmin` errors","user":"U66G4838Q","ts":"1612155500.178600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CJ8e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Making that changes closes the speed gap, but I'm still getting both instability and "},{"type":"text","text":"dt <= dtmin","style":{"code":true}},{"type":"text","text":" errors"}]}]}]},{"client_msg_id":"5509fb84-52a2-482f-882a-31287c2558ca","type":"message","text":"Hey <@U66G4838Q>: One thing which can improve the performance and reduce/avoid the instability errors is reducing the initial step size in the find_good_stepsize() function (<https://github.com/TuringLang/AdvancedHMC.jl/blob/master/src/trajectory.jl|https://github.com/TuringLang/AdvancedHMC.jl/blob/master/src/trajectory.jl>). If you look at the find_good_stepsize() code in the link above, the initialization for stepsize  starts with ϵ = 0.1. I've found that reducing this value to ϵ = 0.01 or ϵ = 0.001 based on your data, sometimes leads to a much faster determination of initial step size and also avoids the instability issues due to small steps taken by the sampler.","user":"UTLTSMTEH","ts":"1612181018.184300","team":"T68168MUP","edited":{"user":"UTLTSMTEH","ts":"1612182202.000000"},"blocks":[{"type":"rich_text","block_id":"rzJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey "},{"type":"user","user_id":"U66G4838Q"},{"type":"text","text":": One thing which can improve the performance and reduce/avoid the instability errors is reducing the initial step size in the find_good_stepsize() function ("},{"type":"link","url":"https://github.com/TuringLang/AdvancedHMC.jl/blob/master/src/trajectory.jl","text":"https://github.com/TuringLang/AdvancedHMC.jl/blob/master/src/trajectory.jl"},{"type":"text","text":"). If you look at the find_good_stepsize() code in the link above, the initialization for stepsize  starts with ϵ = 0.1. I've found that reducing this value to ϵ = 0.01 or ϵ = 0.001 based on your data, sometimes leads to a much faster determination of initial step size and also avoids the instability issues due to small steps taken by the sampler."}]}]}]},{"client_msg_id":"08e2352e-a639-44e8-86f5-5054e8253f06","type":"message","text":"I would recommend you to take a look at how much time the below code takes for your example\n```find_good_stepsize(h, Float64.(prob_neuralode.p))```","user":"UTLTSMTEH","ts":"1612181175.185700","team":"T68168MUP","edited":{"user":"UTLTSMTEH","ts":"1612181199.000000"},"blocks":[{"type":"rich_text","block_id":"5fi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would recommend you to take a look at how much time the below code takes for your example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"find_good_stepsize(h, Float64.(prob_neuralode.p))"}]}]}]},{"client_msg_id":"29fc9239-d3b0-4b4b-be8e-49828f35aaff","type":"message","text":"If it's taking a very long time, probably try decreasing the initial step size as I mentioned above.","user":"UTLTSMTEH","ts":"1612181231.186500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u6aLm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it's taking a very long time, probably try decreasing the initial step size as I mentioned above."}]}]}]},{"client_msg_id":"cd49223f-7b92-49f0-b0d6-6ddd3ffd5794","type":"message","text":"If it's still taking a long time to run/ having instability errors, feel free to get in touch: I'll be happy to look at the code and figure out ways to improve it :slightly_smiling_face:","user":"UTLTSMTEH","ts":"1612181345.187900","team":"T68168MUP","edited":{"user":"UTLTSMTEH","ts":"1612182286.000000"},"blocks":[{"type":"rich_text","block_id":"FPSSt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it's still taking a long time to run/ having instability errors, feel free to get in touch: I'll be happy to look at the code and figure out ways to improve it "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"type":"message","subtype":"bot_message","text":"Hello everyone, I am hesitating whether the following request is appropriate but I will try: I would love to proceed with `ModelingToolkit` but the bug <https://github.com/SciML/ModelingToolkit.jl/issues/565> has been a stopper for me for several months and I am not able to fix it myself. Would anyone, perhaps the author(s) of ModelingToolkit, be so kind and check if it is fixable with a decent effort?   As a reciprocal service to the community, I will prepare and submit a fine example for the ModelingToolkit documentation (in the past I submitted, for example, <https://diffeq.sciml.ai/stable/tutorials/ode_example/#Example-3:-Solving-Nonhomogeneous-Equations-using-Parameterized-Functions>, I actually like preparing examples). The example will revolve around building a model of very long mass-spring chain. It might be interesting, I guess. I can proceed without ModelingToolkit but I hoped to demonstrate how convenient it is (in contrast with building the function for the right hand side of the ODE manually). ","ts":"1612182230.188100","username":"[gitter] <hurak>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Hello everyone, I am hesitating whether the following request is appropriate but I will try: I would love to proceed with `ModelingToolkit` but the bug <https://github.com/SciML/ModelingToolkit.jl/issues/565> has been a stopper for me for several months and I am not able to fix it myself. Would anyone, perhaps the author(s) of ModelingToolkit, be so kind and check if it is fixable with a decent effort? \n\nAs a reciprocal service to the community, I will prepare and submit a fine example for the ModelingToolkit documentation (in the past I submitted, for example, <https://diffeq.sciml.ai/stable/tutorials/ode_example/#Example-3:-Solving-Nonhomogeneous-Equations-using-Parameterized-Functions>, I actually like preparing examples). The example will revolve around building a model of very long mass-spring chain. It might be interesting, I guess. I can proceed without ModelingToolkit but I hoped to demonstrate how convenient it is (in contrast with building the function for the right hand side of the ODE manually). ","verbatim":false}}]},{"client_msg_id":"b47ebbfa-aa29-44cf-ad39-b982df770a71","type":"message","text":"<@UCDUE13M2>","user":"U69BL50BF","ts":"1612182315.188900","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1612182327.000000"},"blocks":[{"type":"rich_text","block_id":"Esd","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UCDUE13M2"}]}]}]},{"type":"message","subtype":"channel_join","ts":"1612182318.189100","user":"UCDUE13M2","text":"<@UCDUE13M2> has joined the channel","inviter":"U69BL50BF"},{"client_msg_id":"6d4d9102-df8e-4c5d-ad0d-8dec6fa39a00","type":"message","text":"we have a pretty tight deadline for something by February 5th, but that is one of the usability concerns we should be getting to quite soon.","user":"U69BL50BF","ts":"1612182350.189900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XRp1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we have a pretty tight deadline for something by February 5th, but that is one of the usability concerns we should be getting to quite soon."}]}]}]},{"type":"message","subtype":"bot_message","text":"Thanks for considering this particular issue. Best.","ts":"1612182404.190000","username":"[gitter] <hurak>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Thanks for considering this particular issue. Best.","verbatim":false}}]},{"type":"message","text":"I wonder whether this assumption is to blame:\n<https://github.com/SciML/ModelingToolkit.jl/blob/755ebdf335591b6b297d0a4960126214a08d0e97/src/systems/diffeqs/odesystem.jl#L135>","user":"U9MD78Z9N","ts":"1612182704.190100","team":"T68168MUP"},{"client_msg_id":"99727b2e-dded-4de6-a2f2-bd275f2e065d","type":"message","text":"that's not the full issue","user":"U69BL50BF","ts":"1612182849.190400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qun","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's not the full issue"}]}]}]},{"client_msg_id":"94819769-d277-497e-95c2-6c8a7b75049d","type":"message","text":"if you get rid of that, you still have to actually fix the issue that other passes assume that form","user":"U69BL50BF","ts":"1612182866.190800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6sw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you get rid of that, you still have to actually fix the issue that other passes assume that form"}]}]}]},{"client_msg_id":"170ad389-c9b7-4c4d-aac7-9f33eabc66bc","type":"message","text":"so the constructor should search for differential terms and move them","user":"U69BL50BF","ts":"1612182882.191200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L7OAF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so the constructor should search for differential terms and move them"}]}]}]},{"type":"message","text":"True.","user":"U9MD78Z9N","ts":"1612182904.191300","team":"T68168MUP"},{"client_msg_id":"9d0825f0-6783-449c-a666-c5ee586dd585","type":"message","text":"I am trying to solve an ensemble problem. It seems that the `ensemblealg` argument can only be passed using DifferentialEquations.jl, right? If I use StochasticDiffEq.jl I have to use the kwarg  `parallel_type`  and receive a warning. Should I load DifferentialEquations  in my library? I am using `DiffEqBase.__solve(ensembleprob, alg, ensemblealg, kwargs…)`","user":"U01658MJH3P","ts":"1612205520.193300","team":"T68168MUP","edited":{"user":"U01658MJH3P","ts":"1612205829.000000"},"blocks":[{"type":"rich_text","block_id":"j2f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am trying to solve an ensemble problem. It seems that the "},{"type":"text","text":"ensemblealg","style":{"code":true}},{"type":"text","text":" argument can only be passed using DifferentialEquations.jl, right? If I use StochasticDiffEq.jl I have to use the kwarg  "},{"type":"text","text":"parallel_type","style":{"code":true}},{"type":"text","text":"  and receive a warning. Should I load DifferentialEquations  in my library? I am using "},{"type":"text","text":"DiffEqBase.__solve(ensembleprob, alg, ensemblealg, kwargs…)","style":{"code":true}}]}]}]},{"client_msg_id":"40b846bf-ef49-400f-8a1c-1cdfc1c7935a","type":"message","text":"you don't need DifferentialEquations.jl for it","user":"U69BL50BF","ts":"1612205807.193600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gFX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you don't need DifferentialEquations.jl for it"}]}]}]},{"client_msg_id":"f1730f31-61c3-4154-8e30-b8e5d0387be3","type":"message","text":"you just `solve(prob,alg,ensemblealg)","user":"U69BL50BF","ts":"1612205844.194200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Akqz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you just `solve(prob,alg,ensemblealg)"}]}]}]},{"client_msg_id":"ee385082-e2b1-405a-b581-2d020f10a20f","type":"message","text":"DiffEqBase has changed. Let me see if updating solves my issue! Thanks!","user":"U01658MJH3P","ts":"1612206351.195800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ac0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"DiffEqBase has changed. Let me see if updating solves my issue! Thanks!"}]}]}]},{"client_msg_id":"7195983a-201e-44b4-90bb-defb3d780407","type":"message","text":"what is your code like?","user":"U69BL50BF","ts":"1612206543.196000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pyzvc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what is your code like?"}]}]}]},{"client_msg_id":"e73ce989-4bed-441b-96e4-1012b7d65cad","type":"message","text":"Updating  DiffEqBase solved the problem!","user":"U01658MJH3P","ts":"1612206901.196600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Zf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Updating  DiffEqBase solved the problem!"}]}]}]},{"client_msg_id":"ae8673f8-dd91-4258-bc4e-898fa0424a4a","type":"message","text":"I am writing a library for finance: <https://sciquant.github.io/UniversalDynamics.jl/dev/ir/short_rate_model.html>","user":"U01658MJH3P","ts":"1612206954.197100","team":"T68168MUP","edited":{"user":"U01658MJH3P","ts":"1612207095.000000"},"blocks":[{"type":"rich_text","block_id":"eKQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am writing a library for finance: "},{"type":"link","url":"https://sciquant.github.io/UniversalDynamics.jl/dev/ir/short_rate_model.html"}]}]}]},{"client_msg_id":"96046d62-464c-4a47-bd43-42f6cdbc1d58","type":"message","text":"Is the adaptive step logic within integrators treated specially for AD purposes?","user":"U6P4UPP9D","ts":"1612210585.198900","team":"T68168MUP","edited":{"user":"U6P4UPP9D","ts":"1612218305.000000"},"blocks":[{"type":"rich_text","block_id":"l0t5p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is the adaptive step logic within integrators treated specially for AD purposes?"}]}]}]},{"client_msg_id":"a4f860c5-9a41-4185-8c4d-8c37585dd78c","type":"message","text":"Not really","user":"U69BL50BF","ts":"1612216923.199100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ggHk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not really"}]}]}]},{"client_msg_id":"3f7d6f56-7048-4a9c-9522-b23c440c9042","type":"message","text":"As in, they work without the treatment","user":"U69BL50BF","ts":"1612216929.199400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IzTB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As in, they work without the treatment"}]}]}]},{"client_msg_id":"44a9d920-9bdb-49ba-a5c8-be598eaf73d8","type":"message","text":"Over the years I have cut out a few bits to make it a little faster (essentially nograds), but it worked even before that","user":"U69BL50BF","ts":"1612216960.200100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5qX3b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Over the years I have cut out a few bits to make it a little faster (essentially nograds), but it worked even before that"}]}]}]},{"client_msg_id":"b84bc446-16a4-4ef6-b439-ec536b1b6435","type":"message","text":"Got curious because I found <https://www.researchgate.net/publication/2786873_Automatic_Differentiation_of_Numerical_Integration_Algorithms|this paper> reporting some discrepancies and adds a correction term for ADIFOR.","user":"U6P4UPP9D","ts":"1612223312.202300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P5Jl5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Got curious because I found "},{"type":"link","url":"https://www.researchgate.net/publication/2786873_Automatic_Differentiation_of_Numerical_Integration_Algorithms","text":"this paper"},{"type":"text","text":" reporting some discrepancies and adds a correction term for ADIFOR."}]}]}],"thread_ts":"1612223312.202300","reply_count":3,"reply_users_count":1,"latest_reply":"1612225893.206500","reply_users":["U69BL50BF"],"subscribed":false},{"client_msg_id":"d312f8b5-17e3-4a88-9a99-84108cdc771a","type":"message","text":"When calling Zygote.gradient over a loss function that depends on the parameters of an ODE, does that hooks into the sensealg chosen for the integration, or does it applies reverse AD through the solver?","user":"U6P4UPP9D","ts":"1612223844.204900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F2XA=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When calling Zygote.gradient over a loss function that depends on the parameters of an ODE, does that hooks into the sensealg chosen for the integration, or does it applies reverse AD through the solver?"}]}]}]},{"client_msg_id":"ea901ad8-eea5-4fbf-ac39-d9762d33cbdf","type":"message","text":"&gt; does that hooks into the sensealg chosen for the integration, or does it applies reverse AD through the solver?","user":"U69BL50BF","ts":"1612225611.205200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MHV1","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"does that hooks into the sensealg chosen for the integration, or does it applies reverse AD through the solver?"}]}]}]},{"client_msg_id":"c3e49194-df1f-40e3-86bf-98a2abe6b8c1","type":"message","text":"It hooks into the sensealg","user":"U69BL50BF","ts":"1612225615.205400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nTRC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It hooks into the sensealg"}]}]}]},{"client_msg_id":"90d01a30-909d-4f7f-a7c2-09367f0bbd02","type":"message","text":"but you can tell it to ignore it, or tell it to use another AD mode","user":"U69BL50BF","ts":"1612225624.205700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fOb3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but you can tell it to ignore it, or tell it to use another AD mode"}]}]}]},{"client_msg_id":"ae63ff18-366f-4655-9103-a9f5f4367c02","type":"message","text":"that's what the discrete adjoints are for.","user":"U69BL50BF","ts":"1612225632.206000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7zt5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's what the discrete adjoints are for."}]}]}]},{"type":"message","subtype":"bot_message","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png>)","ts":"1612268252.207300","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","attachments":[{"fallback":"250x218px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png","image_width":250,"image_height":218,"image_bytes":58583,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png","id":1,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png"},{"fallback":"563x490px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png","image_width":563,"image_height":490,"image_bytes":41397,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png","id":2,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png"}],"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/vn4T/image.png>)","verbatim":false}}],"edited":{"user":"B795XHD0X","ts":"1612268253.000000"}},{"type":"message","subtype":"bot_message","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png>)","ts":"1612268268.207500","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","attachments":[{"fallback":"250x218px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png","image_width":250,"image_height":218,"image_bytes":58583,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png","id":1,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png"},{"fallback":"563x490px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png","image_width":563,"image_height":490,"image_bytes":41397,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png","id":2,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png"}],"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/11uG/image.png>)","verbatim":false}}],"edited":{"user":"B795XHD0X","ts":"1612268270.000000"}},{"type":"message","subtype":"bot_message","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png>)","ts":"1612268432.207700","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","attachments":[{"fallback":"250x145px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png","image_width":250,"image_height":145,"image_bytes":17609,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png","id":1,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png"},{"fallback":"521x303px image","image_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png","image_width":521,"image_height":303,"image_bytes":19091,"from_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png","id":2,"original_url":"https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png"}],"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"[![image.png](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/thumb/image.png>)](<https://files.gitter.im/57bf79b040f3a6eec0615ecf/DzIt/image.png>)","verbatim":false}}],"edited":{"user":"B795XHD0X","ts":"1612268433.000000"}},{"type":"message","subtype":"bot_message","text":"Hi.. First trial on diffeqpy here, and struggling a bit. Installed julia 1.6.0, but the demo-code at <https://github.com/SciML/diffeqpy> , inserted, seems to take forever... not getting out of prob = de.ODEProblem(f, u0, tspan)... No errors/warnings.. Any suggestions?  ","ts":"1612268521.207900","username":"[gitter] <peroveh>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Hi.. First trial on diffeqpy here, and struggling a bit. Installed julia 1.6.0, but the demo-code at <https://github.com/SciML/diffeqpy> , inserted, seems to take forever... not getting out of prob = de.ODEProblem(f, u0, tspan)...\nNo errors/warnings.. Any suggestions?\n\n","verbatim":false}}]},{"client_msg_id":"ff7da613-ecc9-4a8c-b182-18b92506f44b","type":"message","text":"Hi and welcome! 1.6.0 is still in beta, so it might not work as intended. The saver option right now is 1.5.3.","user":"UNYPJU8DT","ts":"1612269645.209300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XCu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi and welcome! 1.6.0 is still in beta, so it might not work as intended. The saver option right now is 1.5.3."}]}]}]},{"client_msg_id":"780e7a6c-8282-4060-aff2-190521e4afb3","type":"message","text":"Hi, all! After finding a solution `sol` to an `ODEProblem` and having been given a function `g(u)`, let us say I want to find the value of the time integral $\\int_0^T g(sol.u(t)) dt$. I know I can compute a Riemman sum using the finite difference of the discrete set of values `sol.t` , or some other integration method, but I image, since `sol` interpolates its values, that there might be a better, simpler and more direct way to do that. Is there?","user":"U01CR62LAAD","ts":"1612270005.214000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lcqav","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, all! After finding a solution "},{"type":"text","text":"sol","style":{"code":true}},{"type":"text","text":" to an "},{"type":"text","text":"ODEProblem","style":{"code":true}},{"type":"text","text":" and having been given a function "},{"type":"text","text":"g(u)","style":{"code":true}},{"type":"text","text":", let us say I want to find the value of the time integral $\\int_0^T g(sol.u(t)) dt$. I know I can compute a Riemman sum using the finite difference of the discrete set of values "},{"type":"text","text":"sol.t","style":{"code":true}},{"type":"text","text":" , or some other integration method, but I image, since "},{"type":"text","text":"sol","style":{"code":true}},{"type":"text","text":" interpolates its values, that there might be a better, simpler and more direct way to do that. Is there?"}]}]}],"thread_ts":"1612270005.214000","reply_count":4,"reply_users_count":2,"latest_reply":"1612273923.215500","reply_users":["UAQLHMSN7","U01CR62LAAD"],"subscribed":false},{"client_msg_id":"0941c93c-eb6c-4d66-a48f-ba7692cc9710","type":"message","text":"&gt; Hi and welcome! 1.6.0 is still in beta, so it might not work as intended. The saver option right now is 1.5.3.\nIndeed,  I don't know if pyjulia has been tested on the beta yet. The other thing is that it installs everything on the first go, and that might be a big part of it.","user":"U69BL50BF","ts":"1612270225.214700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gWD8","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Hi and welcome! 1.6.0 is still in beta, so it might not work as intended. The saver option right now is 1.5.3."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Indeed,  I don't know if pyjulia has been tested on the beta yet. The other thing is that it installs everything on the first go, and that might be a big part of it."}]}]}]},{"client_msg_id":"bde4ea4b-7e5b-4741-97bc-039dd6d4b42c","type":"message","text":"Hello, All! Is there any general rule of thumb for avoiding the error `Double callback crossing floating pointer reducer errored. Report this issue.` ? I've been continually getting this error but have been hesitant to create a new issue on the DifferentialEquations.jl issue board because I've been unable to create an MWE. Any tips/help would be greatly appriciated!","user":"U01GL480CGN","ts":"1612290990.221400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yzj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello, All! Is there any general rule of thumb for avoiding the error "},{"type":"text","text":"Double callback crossing floating pointer reducer errored. Report this issue.","style":{"code":true}},{"type":"text","text":" ? I've been continually getting this error but have been hesitant to create a new issue on the DifferentialEquations.jl issue board because I've been unable to create an MWE. Any tips/help would be greatly appriciated!"}]}]}]},{"type":"message","subtype":"bot_message","text":"Hello, I'm testing a simple Advection equation with DifferentialEquations.jl but using the `iterator` interface. But I'm trying to step at specific $$\\Delta t$$ using the `saveat` option. When I print the first time $$t=0$$ as expected. But, after calling the first `step!` function, $$t = 0.003 $$ or so. And if I try to force a specific step with `step!(int, deltat)` it still goes beyond the specified $$\\Delta t$$. Any ideas? or someone have had a similar behaviour?","ts":"1612322345.221900","username":"[gitter] <olmozavala>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"Hello, I'm testing a simple Advection equation with DifferentialEquations.jl but using the `iterator` interface. But I'm trying to step at specific $$\\Delta t$$ using the `saveat` option. When I print the first time $$t=0$$ as expected. But, after calling the first `step!` function, $$t = 0.003 $$ or so. And if I try to force a specific step with `step!(int, deltat)` it still goes beyond the specified $$\\Delta t$$. Any ideas? or someone have had a similar behaviour?","verbatim":false}}]},{"client_msg_id":"325006be-0966-4e36-9075-ca45f8229dca","type":"message","text":"`saveat` doesn't control the stepping behavior, it control the save points. Those are different.","user":"U69BL50BF","ts":"1612325318.222300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mTt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"saveat","style":{"code":true}},{"type":"text","text":" doesn't control the stepping behavior, it control the save points. Those are different."}]}]}]},{"client_msg_id":"ce035ad8-42b8-47c9-9416-6b406547a79d","type":"message","text":"You might want to use `adaptive=false,tstops = ...`?","user":"U69BL50BF","ts":"1612325328.222600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CE3IM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might want to use "},{"type":"text","text":"adaptive=false,tstops = ...","style":{"code":true}},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"7f8f9be0-4883-44c1-a959-64c07b7815ea","type":"message","text":"`step!` has a kwarg for hitting a point exactly.","user":"U69BL50BF","ts":"1612325355.222900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l3u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"step!","style":{"code":true}},{"type":"text","text":" has a kwarg for hitting a point exactly."}]}]}]},{"client_msg_id":"a80977bc-d1ed-4d7d-a6cb-9351fcebb9b2","type":"message","text":"<@U01GL480CGN> open an issue for that with a reproducer if you can. It's likely a deep floating point thing.","user":"U69BL50BF","ts":"1612325372.223300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zr5","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01GL480CGN"},{"type":"text","text":" open an issue for that with a reproducer if you can. It's likely a deep floating point thing."}]}]}],"thread_ts":"1612325372.223300","reply_count":2,"reply_users_count":1,"latest_reply":"1612398788.233100","reply_users":["U01GL480CGN"],"subscribed":false},{"client_msg_id":"fa658ba4-efb5-4b8f-b93b-bf9fd107788f","type":"message","text":"Bunch of questions:\n\nWhat is the current state of FEM PDE discretization in Julia? Is Gridap my best bet?\n\nQuite some time ago I asked about uncertainty quantification in combination with SINDY, now with the new Bayesian SciML paper, I am wondering if this relates?\n\nAnd about the new Bayesian SciML paper. If I understood correctly all the examples learn the entire systems, but the same techniques should be usable when you know most of the model structure but are missing some terms?\n\nI tried before to put a DiffEqFlux model inside Turing, but it was much too slow. Is AdvancedHMC that much faster?\nIf I understand correctly the Markov chains are all ran on the cpu? Is it not possible to run a bunch of parallel leapfrog integrators with DiffEqGPU?","user":"UQEDP1Q5V","ts":"1612363179.224700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nWS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Bunch of questions:\n\nWhat is the current state of FEM PDE discretization in Julia? Is Gridap my best bet?\n\nQuite some time ago I asked about uncertainty quantification in combination with SINDY, now with the new Bayesian SciML paper, I am wondering if this relates?\n\nAnd about the new Bayesian SciML paper. If I understood correctly all the examples learn the entire systems, but the same techniques should be usable when you know most of the model structure but are missing some terms?\n\nI tried before to put a DiffEqFlux model inside Turing, but it was much too slow. Is AdvancedHMC that much faster?\nIf I understand correctly the Markov chains are all ran on the cpu? Is it not possible to run a bunch of parallel leapfrog integrators with DiffEqGPU?"}]}]}]},{"client_msg_id":"203b1054-469b-4254-b8d5-8e532644b6fc","type":"message","text":"&gt; Quite some time ago I asked about uncertainty quantification in combination with SINDY, now with the new Bayesian SciML paper, I am wondering if this relates?\n&gt; \n&gt; And about the new Bayesian SciML paper. If I understood correctly all the examples learn the entire systems, but the same techniques should be usable when you know most of the model structure but are missing some terms?\nThe last example is exactly this","user":"U69BL50BF","ts":"1612364187.225000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/dr","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Quite some time ago I asked about uncertainty quantification in combination with SINDY, now with the new Bayesian SciML paper, I am wondering if this relates?\n\nAnd about the new Bayesian SciML paper. If I understood correctly all the examples learn the entire systems, but the same techniques should be usable when you know most of the model structure but are missing some terms?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The last example is exactly this"}]}]}],"thread_ts":"1612364187.225000","reply_count":5,"reply_users_count":2,"latest_reply":"1612368806.227400","reply_users":["UQEDP1Q5V","U69BL50BF"],"subscribed":false},{"client_msg_id":"62f01d25-02af-4f24-ab18-1c6f0081d1d7","type":"message","text":"&gt; What is the current state of FEM PDE discretization in Julia? Is Gridap my best bet?\nYes","user":"U69BL50BF","ts":"1612364191.225300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K/nG","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"What is the current state of FEM PDE discretization in Julia? Is Gridap my best bet?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Yes"}]}]}]},{"client_msg_id":"6292e8dd-2dfa-4f5a-b09a-017fb68969d4","type":"message","text":"&gt; I tried before to put a DiffEqFlux model inside Turing, but it was much too slow. Is AdvancedHMC that much faster?\nIt's better now, it's still hard and on-going research.","user":"U69BL50BF","ts":"1612364202.225700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XntIO","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I tried before to put a DiffEqFlux model inside Turing, but it was much too slow. Is AdvancedHMC that much faster?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It's better now, it's still hard and on-going research."}]}]}]},{"client_msg_id":"8dfe449e-042c-49fd-a09a-ad2ebc1920a7","type":"message","text":"&gt; If I understand correctly the Markov chains are all ran on the cpu? Is it not possible to run a bunch of parallel leapfrog integrators with DiffEqGPU?\nIt could be but it's hard. I'm trying to get that off the ground though.","user":"U69BL50BF","ts":"1612364224.226300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U=w4","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If I understand correctly the Markov chains are all ran on the cpu? Is it not possible to run a bunch of parallel leapfrog integrators with DiffEqGPU?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It could be but it's hard. I'm trying to get that off the ground though."}]}]}]},{"client_msg_id":"9f1d9994-d602-463f-9856-08312d172d37","type":"message","text":"Hey! Is it possible that this line needs to be updated?\n<https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/correlated_noisefunc.jl#L4>\n\nFor the in place case it is updated:\n<https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/correlated_noisefunc.jl#L22>\n\nOtherwise when I use the out of place form for `CorrelatedWienerProcess` I  get a `MethodError:` because it cannot evaluate `W.dist(W.dW,W,dtleft,u,p,W.curt,W.rng)` here:\n<https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/noise_interfaces/noise_process_interface.jl#L150|https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/noise_interfaces/noise_process_interface.jl#L1[…]50>","user":"U01658MJH3P","ts":"1612381525.229800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7HnuY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey! Is it possible that this line needs to be updated?\n"},{"type":"link","url":"https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/correlated_noisefunc.jl#L4"},{"type":"text","text":"\n\nFor the in place case it is updated:\n"},{"type":"link","url":"https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/correlated_noisefunc.jl#L22"},{"type":"text","text":"\n\nOtherwise when I use the out of place form for "},{"type":"text","text":"CorrelatedWienerProcess","style":{"code":true}},{"type":"text","text":" I  get a "},{"type":"text","text":"MethodError:","style":{"code":true}},{"type":"text","text":" because it cannot evaluate "},{"type":"text","text":"W.dist(W.dW,W,dtleft,u,p,W.curt,W.rng)","style":{"code":true}},{"type":"text","text":" here:\n"},{"type":"link","url":"https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/noise_interfaces/noise_process_interface.jl#L150","text":"https://github.com/SciML/DiffEqNoiseProcess.jl/blob/68a8391edc408b42d692035d9583b8d2738d9548/src/noise_interfaces/noise_process_interface.jl#L1[…]50"}]}]}]},{"client_msg_id":"7d76ec28-6eaa-4a7f-9ff9-a56626d85d66","type":"message","text":"oh yeah","user":"U69BL50BF","ts":"1612381604.230000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iuoo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh yeah"}]}]}]},{"client_msg_id":"e7af3466-cb93-4aef-9cad-d878ae4447d3","type":"message","text":"that needs an update","user":"U69BL50BF","ts":"1612381606.230300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nz2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that needs an update"}]}]}]},{"client_msg_id":"a7bac68a-a024-45ba-b942-7bb4fcf202dc","type":"message","text":"(and it sounds like we're only testing in-place.","user":"U69BL50BF","ts":"1612381613.230700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tPQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and it sounds like we're only testing in-place."}]}]}],"reactions":[{"name":"point_up_2","users":["U01658MJH3P"],"count":1}]},{"client_msg_id":"c33f864f-7e18-4a99-bf73-03adecdbcdec","type":"message","text":"should I raise an issue or you will just remember? This is a MWE showing the error:\n```f(u, p, t) = SVector(0.1, 0.1)\ng(u, p, t) = SVector(0.1, 0.1)\n\nΓ = @SMatrix [1.0 0.3\n              0.3 1.0]\n\nnoise = CorrelatedWienerProcess(Γ, 0., @SVector(zeros(2)), @SVector(zeros(2)))\n\nprob = SDEProblem{false}(f, g, @SVector(ones(2)), (0., 1.), nothing, noise = noise)\nsol = solve(prob, SRIW1())```","user":"U01658MJH3P","ts":"1612381677.231200","team":"T68168MUP","edited":{"user":"U01658MJH3P","ts":"1612381866.000000"},"blocks":[{"type":"rich_text","block_id":"NEYS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"should I raise an issue or you will just remember? This is a MWE showing the error:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"f(u, p, t) = SVector(0.1, 0.1)\ng(u, p, t) = SVector(0.1, 0.1)\n\nΓ = @SMatrix [1.0 0.3\n              0.3 1.0]\n\nnoise = CorrelatedWienerProcess(Γ, 0., @SVector(zeros(2)), @SVector(zeros(2)))\n\nprob = SDEProblem{false}(f, g, @SVector(ones(2)), (0., 1.), nothing, noise = noise)\nsol = solve(prob, SRIW1())"}]}]}]},{"client_msg_id":"7e8ef7dd-cbe9-4be6-a190-f98c05ed91fb","type":"message","text":"raise an issue.","user":"U69BL50BF","ts":"1612383336.231600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7cG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"raise an issue."}]}]}],"thread_ts":"1612383336.231600","reply_count":3,"reply_users_count":1,"latest_reply":"1612383800.232100","reply_users":["U01658MJH3P"],"subscribed":false},{"client_msg_id":"e4a6f57b-651c-4ca7-ae3c-da6cfab6ebee","type":"message","text":"It seems like array assignment breaks the gradient computation in `DiffEqFlux`...? Even doing something simple like this:\n```α, β, δ, γ, a, b = p\nab = ones(2)\nab[1] = a\nab[2] = b\ndu[1] = dx = (α - β*y)x*ab[1]\ndu[2] = dy = (δ*x - γ)y*ab[2]```\nchain rule isn't applied and the original parameters `a` and `b` remain unchanged. This example is contrived, but it's quite problematic because often it's far more efficient to pre-compute a function (possibly using parameters `p`) and store the values in an array for re-use rather than make redundant function calls. Most obvious example of this is second-order finite difference, e.g. d2(f(u(x)))/dx","user":"U01H36BUDJB","ts":"1612430383.238800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9bBR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems like array assignment breaks the gradient computation in "},{"type":"text","text":"DiffEqFlux","style":{"code":true}},{"type":"text","text":"...? Even doing something simple like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"α, β, δ, γ, a, b = p\nab = ones(2)\nab[1] = a\nab[2] = b\ndu[1] = dx = (α - β*y)x*ab[1]\ndu[2] = dy = (δ*x - γ)y*ab[2]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"chain rule isn't applied and the original parameters "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" remain unchanged. This example is contrived, but it's quite problematic because often it's far more efficient to pre-compute a function (possibly using parameters "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":") and store the values in an array for re-use rather than make redundant function calls. Most obvious example of this is second-order finite difference, e.g. d2(f(u(x)))/dx"}]}]}]},{"client_msg_id":"5fa14062-db15-4f7b-acb4-ffcb8caa7d78","type":"message","text":"no that's ReverseDiff and type based AD in general","user":"U69BL50BF","ts":"1612431439.239300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hTzkt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no that's ReverseDiff and type based AD in general"}]}]}]},{"client_msg_id":"c73a7e4b-5f20-4faf-9c0e-d94e697a7bf3","type":"message","text":"`ab = similar(u)`","user":"U69BL50BF","ts":"1612431449.239700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s+KV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ab = similar(u)","style":{"code":true}}]}]}]},{"client_msg_id":"8e5213f0-501a-48e3-a4b5-0aca3bbb6691","type":"message","text":"just write code generically the standard way and you're fine.","user":"U69BL50BF","ts":"1612431461.240000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a/Sc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just write code generically the standard way and you're fine."}]}]}]},{"client_msg_id":"c2b7b890-e947-4418-801c-565e659c7d9e","type":"message","text":"what do you mean? in the target use case I'm thinking of, `ab` would be a pre-allocated vector and its values would be assigned to the output of a function `f(u,p)`","user":"U01H36BUDJB","ts":"1612431547.240900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XMJt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you mean? in the target use case I'm thinking of, "},{"type":"text","text":"ab","style":{"code":true}},{"type":"text","text":" would be a pre-allocated vector and its values would be assigned to the output of a function "},{"type":"text","text":"f(u,p)","style":{"code":true}}]}]}]},{"client_msg_id":"9a2940a8-d611-4b75-969d-dc94a9036141","type":"message","text":"```ab .= f(u,p)```","user":"U01H36BUDJB","ts":"1612431570.241400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Daaop","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ab .= f(u,p)"}]}]}]},{"client_msg_id":"975d93ee-d6b5-48f6-be2e-1d0612988e51","type":"message","text":"well the you need to make sure `ab` is pre-allocated with AD in mind","user":"U69BL50BF","ts":"1612431585.241700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"avZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well the you need to make sure "},{"type":"text","text":"ab","style":{"code":true}},{"type":"text","text":" is pre-allocated with AD in mind"}]}]}]},{"client_msg_id":"03285f9d-54bd-45b5-89ec-faf81e25e35d","type":"message","text":"ok, so I need to tell ReverseDiff about it?","user":"U01H36BUDJB","ts":"1612431604.242200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ogsqJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, so I need to tell ReverseDiff about it?"}]}]}]},{"client_msg_id":"4b7694e0-286d-4864-9a25-9ae1eda1f640","type":"message","text":"if you're going to reverse mode that doesn't make much sense though","user":"U69BL50BF","ts":"1612431606.242400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QGEE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you're going to reverse mode that doesn't make much sense though"}]}]}]},{"client_msg_id":"80e3fb91-279f-4be7-94cb-3a2b93c1ac94","type":"message","text":"so you're saying I should change the `sensealg` to forward mode","user":"U01H36BUDJB","ts":"1612431637.242800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KCjug","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you're saying I should change the "},{"type":"text","text":"sensealg","style":{"code":true}},{"type":"text","text":" to forward mode"}]}]}]},{"client_msg_id":"b97ac4b3-ffc7-4e3d-80e7-525f086de627","type":"message","text":"it's going to do it in forward mode too","user":"U69BL50BF","ts":"1612431652.243000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uRf1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's going to do it in forward mode too"}]}]}]},{"client_msg_id":"6244e39c-5f63-4179-9faa-7b301a0ba263","type":"message","text":"just think about how the values are flowing and you'll see it doesn't make all that much sense","user":"U69BL50BF","ts":"1612431674.243500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fp4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just think about how the values are flowing and you'll see it doesn't make all that much sense"}]}]}]},{"client_msg_id":"85ded88d-2e7d-4439-9fa8-076a145a27fb","type":"message","text":"though there is a workaround with forward mode by abusing `reinterpret`","user":"U69BL50BF","ts":"1612431687.244000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xZXX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"though there is a workaround with forward mode by abusing "},{"type":"text","text":"reinterpret","style":{"code":true}}]}]}]},{"client_msg_id":"cad2245f-05d5-466c-b677-2ffad56e360e","type":"message","text":"<https://diffeq.sciml.ai/stable/basics/faq/#I-get-Dual-number-errors-when-I-solve-my-ODE-with-Rosenbrock-or-SDIRK-methods>","user":"U69BL50BF","ts":"1612431688.244200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9ZdH","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://diffeq.sciml.ai/stable/basics/faq/#I-get-Dual-number-errors-when-I-solve-my-ODE-with-Rosenbrock-or-SDIRK-methods"}]}]}]},{"client_msg_id":"d9a714b9-65c2-4460-a68d-2ef950652cb5","type":"message","text":"mathematically it makes sense to me... it would just be a chain rule application through `ab` ; but I can understand why there might be complications with autodiff","user":"U01H36BUDJB","ts":"1612431717.244900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ET9D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"mathematically it makes sense to me... it would just be a chain rule application through "},{"type":"text","text":"ab","style":{"code":true}},{"type":"text","text":" ; but I can understand why there might be complications with autodiff"}]}]}]},{"client_msg_id":"0fd4ba12-51cf-4617-9640-caaa56fb09e6","type":"message","text":"`ab = ones(2)`","user":"U69BL50BF","ts":"1612431736.245100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nz134","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ab = ones(2)","style":{"code":true}}]}]}]},{"client_msg_id":"d117fd72-f3b9-4efe-9fcd-a97626939cf0","type":"message","text":"it's 128 bits","user":"U69BL50BF","ts":"1612431739.245300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7+Lgk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's 128 bits"}]}]}]},{"client_msg_id":"ab39b20e-36db-4134-8523-27b544d8c566","type":"message","text":"how do you chain rule through 128 bits with (4+1)*64*2 bits of numbers?","user":"U69BL50BF","ts":"1612431755.245700","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1612431888.000000"},"blocks":[{"type":"rich_text","block_id":"XzjG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how do you chain rule through 128 bits with (4+1)*64*2 bits of numbers?"}]}]}]},{"client_msg_id":"b34b3501-14f8-4aad-a00e-849290d21380","type":"message","text":"well... it's like a new variable; we could equivalently do\n```du[1] = dx = (α - β*y)x*a\ndu[2] = dy = (δ*x - γ)y*b```\nbut in this example, we set `y1 = a` and `y2 = b`  (i.e. `ab=[y1,y2]` ) and then do\n```du[1] = dx = (α - β*y)x*y1\ndu[2] = dy = (δ*x - γ)y*y2```\nso chain rule just says that d(dx)/da = d(dx)/dy1*d(y1)/da and the rightmost term is just one.","user":"U01H36BUDJB","ts":"1612431944.248600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/9x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well... it's like a new variable; we could equivalently do\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"du[1] = dx = (α - β*y)x*a\ndu[2] = dy = (δ*x - γ)y*b"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but in this example, we set "},{"type":"text","text":"y1 = a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"y2 = b","style":{"code":true}},{"type":"text","text":"  (i.e. "},{"type":"text","text":"ab=[y1,y2]","style":{"code":true}},{"type":"text","text":" ) and then do\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"du[1] = dx = (α - β*y)x*y1\ndu[2] = dy = (δ*x - γ)y*y2"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so chain rule just says that d(dx)/da = d(dx)/dy1*d(y1)/da and the rightmost term is just one."}]}]}]},{"client_msg_id":"bb73b3b5-75cc-4f47-a1fd-d80d58cde28d","type":"message","text":"yes, but that's not the issue","user":"U69BL50BF","ts":"1612431955.248800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vKhNq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, but that's not the issue"}]}]}]},{"client_msg_id":"72599d40-c2b5-45a4-817b-93e9d7c4eff5","type":"message","text":"you're saying you're \"pre-allocating\"","user":"U69BL50BF","ts":"1612431961.249000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xXSm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you're saying you're \"pre-allocating\""}]}]}]},{"client_msg_id":"0d537dd2-6cfc-43f4-ac95-c38d987221e5","type":"message","text":"you're pre-allocating 128 bits and want to store 640 bits in it.","user":"U69BL50BF","ts":"1612431987.249800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xbUnW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you're pre-allocating 128 bits and want to store 640 bits in it."}]}]}]},{"client_msg_id":"3b7e1dd2-fd7c-454d-887f-ea75a9ccc54b","type":"message","text":"so there's two pieces to it","user":"U69BL50BF","ts":"1612432045.250100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7Tgl1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so there's two pieces to it"}]}]}]},{"client_msg_id":"d3d90447-6698-4c7a-b3fe-11ec7581e568","type":"message","text":"1 is that reverse mode needs to delay computation, so it's not just an implementation thing but rather it's impossible to not use memory in reverse mode AD because it needs to be stored for a potentially indefinitely later time (unless you're using reversible computing). 2 is that in forward mode it doesn't need to delay computation because it eagerly pushes forward, but by doing so the bits associated with given operations grows to hold all of the dual dimensions","user":"U69BL50BF","ts":"1612432143.252000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nhm3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1 is that reverse mode needs to delay computation, so it's not just an implementation thing but rather it's impossible to not use memory in reverse mode AD because it needs to be stored for a potentially indefinitely later time (unless you're using reversible computing). 2 is that in forward mode it doesn't need to delay computation because it eagerly pushes forward, but by doing so the bits associated with given operations grows to hold all of the dual dimensions"}]}]}]},{"client_msg_id":"a366d055-cd5c-4ea3-adc8-92f5ac807d31","type":"message","text":"(2) can be handled by the trick I posted above which allows you to define arrays which use dispatch to change sizes depending on whether it's in the AD context or not","user":"U69BL50BF","ts":"1612432182.252700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8i=3s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(2) can be handled by the trick I posted above which allows you to define arrays which use dispatch to change sizes depending on whether it's in the AD context or not"}]}]}]},{"client_msg_id":"61c80fc8-f366-4d0c-851a-fad0c0f2abce","type":"message","text":"but 1 that's just how reverse mode AD works. You can \"let mutation work\" in reverse mode, and that would just amount to behind the scenes allocating the values for when one reverses.","user":"U69BL50BF","ts":"1612432222.253700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FNP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but 1 that's just how reverse mode AD works. You can \"let mutation work\" in reverse mode, and that would just amount to behind the scenes allocating the values for when one reverses."}]}]}]},{"client_msg_id":"de07a8bb-0d4c-4167-8503-02c61ec4c935","type":"message","text":"unless it's a fully scalarized compile time reverse mode AD","user":"U69BL50BF","ts":"1612432266.253900","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1612432281.000000"},"blocks":[{"type":"rich_text","block_id":"mE0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"unless it's a fully scalarized compile time reverse mode AD"}]}]}]},{"client_msg_id":"92f34c48-7371-4064-9e27-f6e41e38cd2d","type":"message","text":"in which case it wouldn't use you preallocation","user":"U69BL50BF","ts":"1612432294.254500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"28fg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in which case it wouldn't use you preallocation"}]}]}]},{"client_msg_id":"deb756e0-a4e3-4763-bee3-c1e7dcc23cf4","type":"message","text":"hmm, ok, so I guess long story short I just have to allocate new vectors in the step function","user":"U01H36BUDJB","ts":"1612432300.254700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kM99","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm, ok, so I guess long story short I just have to allocate new vectors in the step function"}]}]}]},{"client_msg_id":"e14b598c-8054-4dcf-a6a2-ada3ffe7c0cc","type":"message","text":"or use this trick with forward diff","user":"U01H36BUDJB","ts":"1612432315.255100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z6IVP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or use this trick with forward diff"}]}]}]},{"client_msg_id":"06132291-d469-4623-914e-d6f81ddecba4","type":"message","text":"if you don't allocate and you're doing reverse mode, what's going to happen is equivalent to it anyways","user":"U69BL50BF","ts":"1612432346.255600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Og06","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you don't allocate and you're doing reverse mode, what's going to happen is equivalent to it anyways"}]}]}]},{"client_msg_id":"67975308-a17a-4b45-b543-e8436e46e713","type":"message","text":"it's why ML libraries have much less emphasis on performance in the front end","user":"U69BL50BF","ts":"1612432369.256100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7/t8e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's why ML libraries have much less emphasis on performance in the front end"}]}]}]},{"client_msg_id":"d5e7fe31-1775-4717-976f-5d941381f43f","type":"message","text":"you mean why I never once thought about memory allocation while using tensorflow? :sweat_smile:","user":"U01H36BUDJB","ts":"1612432420.256600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+gRnS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you mean why I never once thought about memory allocation while using tensorflow? "},{"type":"emoji","name":"sweat_smile"}]}]}]},{"client_msg_id":"53bfac5a-531b-48eb-980d-07db41671aac","type":"message","text":"tensorflow is completely different","user":"U69BL50BF","ts":"1612432433.256800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u=J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"tensorflow is completely different"}]}]}]},{"client_msg_id":"3e6d2deb-09f1-44fc-bf56-3770eb0062cb","type":"message","text":"it's a declarative programming language","user":"U69BL50BF","ts":"1612432443.257100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zif","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's a declarative programming language"}]}]}]},{"client_msg_id":"01f95b74-6dca-422d-9965-567bc55c2498","type":"message","text":"I mean... 2.0 isn't","user":"U01H36BUDJB","ts":"1612432459.257300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"veT+T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean... 2.0 isn't"}]}]}]},{"client_msg_id":"f5a02e7c-bc10-4eeb-92bb-b81da67730f3","type":"message","text":"under the hood I guess it still is because it does all of this crazy graph building with `@tf.function` but...","user":"U01H36BUDJB","ts":"1612432492.258000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IYXBY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"under the hood I guess it still is because it does all of this crazy graph building with "},{"type":"text","text":"@tf.function","style":{"code":true}},{"type":"text","text":" but..."}]}]}]},{"client_msg_id":"857a1968-ab2f-41ae-8c29-0d00b2b9061f","type":"message","text":"it just has dynamic nodes and a way to disable a lot of the optimizations","user":"U69BL50BF","ts":"1612432517.258300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uBuT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it just has dynamic nodes and a way to disable a lot of the optimizations"}]}]}]},{"client_msg_id":"87fa1783-62da-4fba-a0b3-bbda8108c12e","type":"message","text":"that 100 parameters rule-of-thumb for forward diff in the documentation, does that mean sensitivity parameters or also the number of ODEs (i.e. size of `u` )?","user":"U01H36BUDJB","ts":"1612432621.259500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ssq=z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that 100 parameters rule-of-thumb for forward diff in the documentation, does that mean sensitivity parameters or also the number of ODEs (i.e. size of "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":" )?"}]}]}]},{"client_msg_id":"3a15a522-dedc-4655-975f-54c6825ae898","type":"message","text":"we saw the same thing in ODE cases","user":"U69BL50BF","ts":"1612432681.259800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XlQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we saw the same thing in ODE cases"}]}]}]},{"client_msg_id":"d01a1aa0-49e7-48a9-8432-8f694710307b","type":"message","text":"but there's a bunch of caveats","user":"U69BL50BF","ts":"1612432688.260100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vZE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but there's a bunch of caveats"}]}]}]},{"client_msg_id":"12ddb971-b610-44e3-b831-37d0cbbe2ab5","type":"message","text":"so if I have say 10 \"trained\" parameters but 200 ODEs (from a discretized PDE), then you would expect reverse-diff to be more efficient, per your benchmarks?","user":"U01H36BUDJB","ts":"1612432776.261100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GtfY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so if I have say 10 \"trained\" parameters but 200 ODEs (from a discretized PDE), then you would expect reverse-diff to be more efficient, per your benchmarks?"}]}]}]}]}