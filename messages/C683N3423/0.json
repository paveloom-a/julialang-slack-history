{"cursor": 0, "messages": [{"client_msg_id":"502654a4-6036-4af1-9ee2-ca153fac31b5","type":"message","text":"Is there a list of the breaking changes between HTTP 0.8 and 0.9? Got a bunch of microservices that I'd like to update but not sure what I need to change. Cheers!","user":"U017FUJDBT7","ts":"1608017397.282600","team":"T68168MUP","edited":{"user":"U017FUJDBT7","ts":"1608017409.000000"},"blocks":[{"type":"rich_text","block_id":"YI4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a list of the breaking changes between HTTP 0.8 and 0.9? Got a bunch of microservices that I'd like to update but not sure what I need to change. Cheers!"}]}]}]},{"client_msg_id":"70e4501c-55a2-4b2c-9aee-de23d3272a59","type":"message","text":"There were none; I mistakenly bumped the minor version thinking two breaking PRs had been merged, but they hadn't. Sorry for the hassle.","user":"U681ELA87","ts":"1608017614.283300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HMtA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There were none; I mistakenly bumped the minor version thinking two breaking PRs had been merged, but they hadn't. Sorry for the hassle."}]}]}]},{"client_msg_id":"db282ede-e790-47c6-92e9-3286da4f9f71","type":"message","text":"Ah that's great, no worries at all. Thanks for getting back to me :)","user":"U017FUJDBT7","ts":"1608019898.283800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RF0P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah that's great, no worries at all. Thanks for getting back to me :)"}]}]}]},{"client_msg_id":"d06f0411-0d63-4d19-bff3-f84a0e45f541","type":"message","text":"<https://discourse.julialang.org/t/techempower-frameworkbenchmarks-r20-deadline-12-28-first-julia-json-serialization-results/51936|https://discourse.julialang.org/t/techempower-frameworkbenchmarks-r20-deadline-12-28-first-julia-json-serialization-results/51936>","user":"UDGT4PM41","ts":"1608133106.284000","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"TechEmpower/FrameworkBenchmarks R20 deadline 12/28 + first julia \"JSON serialization\" results","title_link":"https://discourse.julialang.org/t/techempower-frameworkbenchmarks-r20-deadline-12-28-first-julia-json-serialization-results/51936","text":"TLDR: Techempower Framework benchmarks is a collaborative, open web framework benchmarking project The next release: Round 20 \"Last day for PR review is 12/28. \" First Julia results ( “http.jl” ) … current “rank: 149/166” not the best… :slightly_smiling_face: So if anybody has an experience in performance tuning ; then please check the current code. ( http.jl ) and/or please add a new/better/alternative Julia code Details: The good news, somebody ( not me ) has been added the first Ju...","fallback":"JuliaLang: TechEmpower/FrameworkBenchmarks R20 deadline 12/28 + first julia \"JSON serialization\" results","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/3X/0/3/03bea743f30b3b17cc3fb6b34a12068d13cd5ffb.png","ts":1608131860,"from_url":"https://discourse.julialang.org/t/techempower-frameworkbenchmarks-r20-deadline-12-28-first-julia-json-serialization-results/51936","thumb_width":486,"thumb_height":32,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/techempower-frameworkbenchmarks-r20-deadline-12-28-first-julia-json-serialization-results/51936"}],"blocks":[{"type":"rich_text","block_id":"X34","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://discourse.julialang.org/t/techempower-frameworkbenchmarks-r20-deadline-12-28-first-julia-json-serialization-results/51936","text":"https://discourse.julialang.org/t/techempower-frameworkbenchmarks-r20-deadline-12-28-first-julia-json-serialization-results/51936"}]}]}]},{"client_msg_id":"59a5527e-0801-4ce1-a9de-61e2d8679d6a","type":"message","text":"I'm getting an error when `HTTP.get`ing:\n```┌ Error: error handling request\n│   exception =\n│    HTTP.ExceptionRequest.StatusError(400, \"GET\", \"/pub/l5l039s6ni5uumqbsj9o11lmdc/02o0tnjj13m7b6r616kempdvoo/1608234095000/112059878790981513219/*/e@2PACX-1vQNLWhLfp_iuW68j7SM6Px8ysTmbrfmrP_7ipXK9BkfzBgfqn3Mj7ra177mZyHlY5NLA3SDtfYNTROv?gid=0&amp;single=true&amp;output=csv\", HTTP.Messages.Response:\n│    \"\"\"\n│    HTTP/1.1 400 Bad Request\n│    Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n│    Pragma: no-cache\n│    Expires: Mon, 01 Jan 1990 00:00:00 GMT\n│    Date: Thu, 17 Dec 2020 19:42:36 GMT\n│    Content-Type: text/html; charset=utf-8\n│    x-chromium-appcache-fallback-override: disallow-fallback\n│    Access-Control-Allow-Origin: *\n│    Access-Control-Expose-Headers: Cache-Control,Content-Encoding,Content-Length,Content-Type,Date,Expires,Pragma,Server,Transfer-Encoding\n│    Content-Security-Policy: base-uri 'self';object-src 'self';report-uri <https://docs.google.com/spreadsheets/cspreport;script-src> 'report-sample' 'nonce-v1gYp3UwtFLklcIqjJH0mA' 'unsafe-inline' 'strict-dynamic' https: http: 'unsafe-eval';worker-src 'self'\n│    X-Content-Type-Options: nosniff\n│    X-XSS-Protection: 1; mode=block\n│    Server: GSE\n│    Alt-Svc: h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"\n│    Accept-Ranges: none\n│    Vary: Accept-Encoding\n│    Transfer-Encoding: chunked\n│    \n│    <!DOCTYPE html>&lt;html lang=\"sv\"&gt;&lt;head&gt;&lt;meta name=\"description\" content=\"Ordbehandling, kalkylark och presentationer på webben\"&gt;&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0\"&gt;&lt;link rel=\"shortcut icon\" href=\"//docs.google.com/favicon.ico\"&gt;&lt;title&gt;Sidan hittades inte&lt;/title&gt;&lt;meta name=\"referrer\" content=\"origin\"&gt;&lt;link href=\"//fonts.googleapis.com/css?family=Product+Sans\" rel=\"stylesheet\" type=\"text/css\"&gt;&lt;style nonce=\"v1gYp3UwtFLklcIqjJH0mA\"&gt;/* Copyright 2020 Google Inc. All Rights Reserved. */\n│    .goog-inline-block{position:relative;display:-moz-inline-box;display:inline-block}* html .goog-inline-block{display:inline}*:first-child+html .goog-inline-block{display:inline}#drive-logo{margin:18px 0;position:absolute;white-space:nowrap}.docs-drivelogo-img{background-image:url('//ssl.gstatic.com/images/branding/googlelogo/1x/googlelogo_color_116x41dp.png');background-size:116px 41px;display:inline-block;height:41px;vertic\n│    ⋮\n│    3076-byte body\n│    \"\"\")```\nno idea how to deal/guard/avoid that.\n\nanyone here has some wisdom to share?","user":"U7PGB5DU3","ts":"1608234718.285500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wu1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm getting an error when "},{"type":"text","text":"HTTP.get","style":{"code":true}},{"type":"text","text":"ing:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"┌ Error: error handling request\n│   exception =\n│    HTTP.ExceptionRequest.StatusError(400, \"GET\", \"/pub/l5l039s6ni5uumqbsj9o11lmdc/02o0tnjj13m7b6r616kempdvoo/1608234095000/112059878790981513219/*/e@2PACX-1vQNLWhLfp_iuW68j7SM6Px8ysTmbrfmrP_7ipXK9BkfzBgfqn3Mj7ra177mZyHlY5NLA3SDtfYNTROv?gid=0&single=true&output=csv\", HTTP.Messages.Response:\n│    \"\"\"\n│    HTTP/1.1 400 Bad Request\n│    Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n│    Pragma: no-cache\n│    Expires: Mon, 01 Jan 1990 00:00:00 GMT\n│    Date: Thu, 17 Dec 2020 19:42:36 GMT\n│    Content-Type: text/html; charset=utf-8\n│    x-chromium-appcache-fallback-override: disallow-fallback\n│    Access-Control-Allow-Origin: *\n│    Access-Control-Expose-Headers: Cache-Control,Content-Encoding,Content-Length,Content-Type,Date,Expires,Pragma,Server,Transfer-Encoding\n│    Content-Security-Policy: base-uri 'self';object-src 'self';report-uri "},{"type":"link","url":"https://docs.google.com/spreadsheets/cspreport;script-src"},{"type":"text","text":" 'report-sample' 'nonce-v1gYp3UwtFLklcIqjJH0mA' 'unsafe-inline' 'strict-dynamic' https: http: 'unsafe-eval';worker-src 'self'\n│    X-Content-Type-Options: nosniff\n│    X-XSS-Protection: 1; mode=block\n│    Server: GSE\n│    Alt-Svc: h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"\n│    Accept-Ranges: none\n│    Vary: Accept-Encoding\n│    Transfer-Encoding: chunked\n│    \n│    <!DOCTYPE html><html lang=\"sv\"><head><meta name=\"description\" content=\"Ordbehandling, kalkylark och presentationer på webben\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0\"><link rel=\"shortcut icon\" href=\"//docs.google.com/favicon.ico\"><title>Sidan hittades inte</title><meta name=\"referrer\" content=\"origin\"><link href=\"//fonts.googleapis.com/css?family=Product+Sans\" rel=\"stylesheet\" type=\"text/css\"><style nonce=\"v1gYp3UwtFLklcIqjJH0mA\">/* Copyright 2020 Google Inc. All Rights Reserved. */\n│    .goog-inline-block{position:relative;display:-moz-inline-box;display:inline-block}* html .goog-inline-block{display:inline}*:first-child+html .goog-inline-block{display:inline}#drive-logo{margin:18px 0;position:absolute;white-space:nowrap}.docs-drivelogo-img{background-image:url('//ssl.gstatic.com/images/branding/googlelogo/1x/googlelogo_color_116x41dp.png');background-size:116px 41px;display:inline-block;height:41px;vertic\n│    ⋮\n│    3076-byte body\n│    \"\"\")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"no idea how to deal/guard/avoid that.\n\nanyone here has some wisdom to share?"}]}]}],"thread_ts":"1608234718.285500","reply_count":16,"reply_users_count":3,"latest_reply":"1608251592.289800","reply_users":["U6NFPDBV1","U7PGB5DU3","U66SGEWAC"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"The first one (307) is a redirect to the second one, and it looks like it sets some cookies. That raises an important question for HTTP.jl people: Does HTTP.jl store keep a cookie jar? If it does, then really this should all be taken care of for you.","user":"U6NFPDBV1","ts":"1608239015.288600","thread_ts":"1608234718.285500","root":{"client_msg_id":"59a5527e-0801-4ce1-a9de-61e2d8679d6a","type":"message","text":"I'm getting an error when `HTTP.get`ing:\n```┌ Error: error handling request\n│   exception =\n│    HTTP.ExceptionRequest.StatusError(400, \"GET\", \"/pub/l5l039s6ni5uumqbsj9o11lmdc/02o0tnjj13m7b6r616kempdvoo/1608234095000/112059878790981513219/*/e@2PACX-1vQNLWhLfp_iuW68j7SM6Px8ysTmbrfmrP_7ipXK9BkfzBgfqn3Mj7ra177mZyHlY5NLA3SDtfYNTROv?gid=0&amp;single=true&amp;output=csv\", HTTP.Messages.Response:\n│    \"\"\"\n│    HTTP/1.1 400 Bad Request\n│    Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n│    Pragma: no-cache\n│    Expires: Mon, 01 Jan 1990 00:00:00 GMT\n│    Date: Thu, 17 Dec 2020 19:42:36 GMT\n│    Content-Type: text/html; charset=utf-8\n│    x-chromium-appcache-fallback-override: disallow-fallback\n│    Access-Control-Allow-Origin: *\n│    Access-Control-Expose-Headers: Cache-Control,Content-Encoding,Content-Length,Content-Type,Date,Expires,Pragma,Server,Transfer-Encoding\n│    Content-Security-Policy: base-uri 'self';object-src 'self';report-uri <https://docs.google.com/spreadsheets/cspreport;script-src> 'report-sample' 'nonce-v1gYp3UwtFLklcIqjJH0mA' 'unsafe-inline' 'strict-dynamic' https: http: 'unsafe-eval';worker-src 'self'\n│    X-Content-Type-Options: nosniff\n│    X-XSS-Protection: 1; mode=block\n│    Server: GSE\n│    Alt-Svc: h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"\n│    Accept-Ranges: none\n│    Vary: Accept-Encoding\n│    Transfer-Encoding: chunked\n│    \n│    <!DOCTYPE html>&lt;html lang=\"sv\"&gt;&lt;head&gt;&lt;meta name=\"description\" content=\"Ordbehandling, kalkylark och presentationer på webben\"&gt;&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0\"&gt;&lt;link rel=\"shortcut icon\" href=\"//docs.google.com/favicon.ico\"&gt;&lt;title&gt;Sidan hittades inte&lt;/title&gt;&lt;meta name=\"referrer\" content=\"origin\"&gt;&lt;link href=\"//fonts.googleapis.com/css?family=Product+Sans\" rel=\"stylesheet\" type=\"text/css\"&gt;&lt;style nonce=\"v1gYp3UwtFLklcIqjJH0mA\"&gt;/* Copyright 2020 Google Inc. All Rights Reserved. */\n│    .goog-inline-block{position:relative;display:-moz-inline-box;display:inline-block}* html .goog-inline-block{display:inline}*:first-child+html .goog-inline-block{display:inline}#drive-logo{margin:18px 0;position:absolute;white-space:nowrap}.docs-drivelogo-img{background-image:url('//ssl.gstatic.com/images/branding/googlelogo/1x/googlelogo_color_116x41dp.png');background-size:116px 41px;display:inline-block;height:41px;vertic\n│    ⋮\n│    3076-byte body\n│    \"\"\")```\nno idea how to deal/guard/avoid that.\n\nanyone here has some wisdom to share?","user":"U7PGB5DU3","ts":"1608234718.285500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wu1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm getting an error when "},{"type":"text","text":"HTTP.get","style":{"code":true}},{"type":"text","text":"ing:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"┌ Error: error handling request\n│   exception =\n│    HTTP.ExceptionRequest.StatusError(400, \"GET\", \"/pub/l5l039s6ni5uumqbsj9o11lmdc/02o0tnjj13m7b6r616kempdvoo/1608234095000/112059878790981513219/*/e@2PACX-1vQNLWhLfp_iuW68j7SM6Px8ysTmbrfmrP_7ipXK9BkfzBgfqn3Mj7ra177mZyHlY5NLA3SDtfYNTROv?gid=0&single=true&output=csv\", HTTP.Messages.Response:\n│    \"\"\"\n│    HTTP/1.1 400 Bad Request\n│    Cache-Control: no-cache, no-store, max-age=0, must-revalidate\n│    Pragma: no-cache\n│    Expires: Mon, 01 Jan 1990 00:00:00 GMT\n│    Date: Thu, 17 Dec 2020 19:42:36 GMT\n│    Content-Type: text/html; charset=utf-8\n│    x-chromium-appcache-fallback-override: disallow-fallback\n│    Access-Control-Allow-Origin: *\n│    Access-Control-Expose-Headers: Cache-Control,Content-Encoding,Content-Length,Content-Type,Date,Expires,Pragma,Server,Transfer-Encoding\n│    Content-Security-Policy: base-uri 'self';object-src 'self';report-uri "},{"type":"link","url":"https://docs.google.com/spreadsheets/cspreport;script-src"},{"type":"text","text":" 'report-sample' 'nonce-v1gYp3UwtFLklcIqjJH0mA' 'unsafe-inline' 'strict-dynamic' https: http: 'unsafe-eval';worker-src 'self'\n│    X-Content-Type-Options: nosniff\n│    X-XSS-Protection: 1; mode=block\n│    Server: GSE\n│    Alt-Svc: h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"\n│    Accept-Ranges: none\n│    Vary: Accept-Encoding\n│    Transfer-Encoding: chunked\n│    \n│    <!DOCTYPE html><html lang=\"sv\"><head><meta name=\"description\" content=\"Ordbehandling, kalkylark och presentationer på webben\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0\"><link rel=\"shortcut icon\" href=\"//docs.google.com/favicon.ico\"><title>Sidan hittades inte</title><meta name=\"referrer\" content=\"origin\"><link href=\"//fonts.googleapis.com/css?family=Product+Sans\" rel=\"stylesheet\" type=\"text/css\"><style nonce=\"v1gYp3UwtFLklcIqjJH0mA\">/* Copyright 2020 Google Inc. All Rights Reserved. */\n│    .goog-inline-block{position:relative;display:-moz-inline-box;display:inline-block}* html .goog-inline-block{display:inline}*:first-child+html .goog-inline-block{display:inline}#drive-logo{margin:18px 0;position:absolute;white-space:nowrap}.docs-drivelogo-img{background-image:url('//ssl.gstatic.com/images/branding/googlelogo/1x/googlelogo_color_116x41dp.png');background-size:116px 41px;display:inline-block;height:41px;vertic\n│    ⋮\n│    3076-byte body\n│    \"\"\")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"no idea how to deal/guard/avoid that.\n\nanyone here has some wisdom to share?"}]}]}],"thread_ts":"1608234718.285500","reply_count":16,"reply_users_count":3,"latest_reply":"1608251592.289800","reply_users":["U6NFPDBV1","U7PGB5DU3","U66SGEWAC"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"psO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The first one (307) is a redirect to the second one, and it looks like it sets some cookies. That raises an important question for HTTP.jl people: Does HTTP.jl store keep a cookie jar? If it does, then really this should all be taken care of for you."}]}]}],"client_msg_id":"8526220c-6e0c-43c3-876e-d46b8b362385"},{"client_msg_id":"2422ae35-aa55-4a13-9ddb-fae9198755b2","type":"message","text":"<https://discourse.julialang.org/t/ann-actors-0-2-genservers-and-guards/52056>","user":"UDGT4PM41","ts":"1608323546.290500","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"[ANN] Actors 0.2, GenServers and Guards","title_link":"https://discourse.julialang.org/t/ann-actors-0-2-genservers-and-guards/52056","text":"I’m happy to announce the release of Actors 0.2 together with two actor infrastructure libraries GenServers and Guards. Actors: Concurrency based on the Actor Model Actors implements the classical Actor model in Julia. It builds on Julia’s concurrency primitives, provides a message based programming model for making concurrency easy to understand and reason about and integrates well with Julia’s features for multi-threading and distributed computing. Actors expresses actor behavior as a fun...","fallback":"JuliaLang: [ANN] Actors 0.2, GenServers and Guards","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"3 :heart:","short":true}],"ts":1608308480,"from_url":"https://discourse.julialang.org/t/ann-actors-0-2-genservers-and-guards/52056","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/ann-actors-0-2-genservers-and-guards/52056"}],"blocks":[{"type":"rich_text","block_id":"n=Yr","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://discourse.julialang.org/t/ann-actors-0-2-genservers-and-guards/52056"}]}]}],"thread_ts":"1608323546.290500","reply_count":1,"reply_users_count":1,"latest_reply":"1608337911.290800","reply_users":["ULTB7E6UW"],"subscribed":false},{"client_msg_id":"57c5c9d9-a5d5-48db-9fb9-9319ee37bc62","type":"message","text":"Anyone tried to write Julia servers with JSON-RPC <https://github.com/julia-vscode/JSONRPC.jl> ?","user":"UB2QSHWPN","ts":"1608676230.292000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZhF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyone tried to write Julia servers with JSON-RPC "},{"type":"link","url":"https://github.com/julia-vscode/JSONRPC.jl"},{"type":"text","text":" ?"}]}]}],"thread_ts":"1608676230.292000","reply_count":1,"reply_users_count":1,"latest_reply":"1608676518.292100","reply_users":["UB2QSHWPN"],"subscribed":false},{"client_msg_id":"b518b0ba-ae89-40ca-abf8-3e07ddf7c95f","type":"message","text":"Just FYI I'm registering Mux 0.7.5 so that it supports HTTP 0.9.","user":"U6NFPDBV1","ts":"1608921237.293100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SOLGS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just FYI I'm registering Mux 0.7.5 so that it supports HTTP 0.9."}]}]}]},{"client_msg_id":"88f1d24a-6f6e-4442-9c40-580fdbf64b2d","type":"message","text":"Can someone who maintains GitHub.jl look this over and potentially merge? <https://github.com/JuliaWeb/GitHub.jl/pull/177>","user":"U6NFPDBV1","ts":"1609181526.294000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SOPso","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can someone who maintains GitHub.jl look this over and potentially merge? "},{"type":"link","url":"https://github.com/JuliaWeb/GitHub.jl/pull/177"}]}]}]},{"client_msg_id":"83d2e93f-c633-49b9-aa10-b87f3251f2ef","type":"message","text":"I'm wondering if we might want to relocate <#C683N3423|web> over to Zulip where we could keep history?","user":"ULTB7E6UW","ts":"1609370330.294500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SNCc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm wondering if we might want to relocate "},{"type":"channel","channel_id":"C683N3423"},{"type":"text","text":" over to Zulip where we could keep history?"}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"30486cfc-91cb-4d97-912f-fe6e48280034","type":"message","text":"I have a few questions about direction of HTTP.jl -- in particular, I'm wondering if it'd be useful if Response were parameterized, e.g.  `Response{IO}`, `Response{String}`, etc, where the the current implementation assumes only `Response{Vector{UInt8}}`  I think being able to dispatch on the datatype of the body is kinda important.  A websockets or HTTP/2 implementation, for example, could stream a `Response{File}` into the proper number of frames; while a HTTP/1 server might use chunked transfer encoding.  Currently, while you could write your code at the *stream* level, you're bypassing all of the handy functionality of Response in order to have this functionality.","user":"ULTB7E6UW","ts":"1609370572.298700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m4ami","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a few questions about direction of HTTP.jl -- in particular, I'm wondering if it'd be useful if Response were parameterized, e.g.  "},{"type":"text","text":"Response{IO}","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Response{String}","style":{"code":true}},{"type":"text","text":", etc, where the the current implementation assumes only "},{"type":"text","text":"Response{Vector{UInt8}}","style":{"code":true}},{"type":"text","text":"  I think being able to dispatch on the datatype of the body is kinda important.  A websockets or HTTP/2 implementation, for example, could stream a "},{"type":"text","text":"Response{File}","style":{"code":true}},{"type":"text","text":" into the proper number of frames; while a HTTP/1 server might use chunked transfer encoding.  Currently, while you could write your code at the "},{"type":"text","text":"stream","style":{"bold":true}},{"type":"text","text":" level, you're bypassing all of the handy functionality of Response in order to have this functionality."}]}]}]},{"client_msg_id":"067b22d1-1529-4249-be7f-faf4a6510453","type":"message","text":"There are other topics.  So, I don't have too much time, but I could prototype some of this -- but I don't want to go though the effort if there isn't any enthusiasm of the basic direction.  There are other tickets, like fixing the irritating socket close errors that need a more wholesome touch.","user":"ULTB7E6UW","ts":"1609370745.301400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o14At","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are other topics.  So, I don't have too much time, but I could prototype some of this -- but I don't want to go though the effort if there isn't any enthusiasm of the basic direction.  There are other tickets, like fixing the irritating socket close errors that need a more wholesome touch."}]}]}]},{"client_msg_id":"466F7669-19C5-4A0A-939C-6BBB5AC7D386","type":"message","text":"I don’t really follow zulip ","user":"U681ELA87","ts":"1609402333.302700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kjI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t really follow zulip "}]}]}]},{"client_msg_id":"81b4a77a-0726-4345-9457-0af36bdef487","type":"message","text":"<@U681ELA87> So, if I forked `HTTP.jl` and made `Response{T}` where `body::T` would this be something considered as a pull request? It'd probably break -some- code.  However, it'd be a necessary 1st step towards building streamable response objects.","user":"ULTB7E6UW","ts":"1609546399.304700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Sz","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U681ELA87"},{"type":"text","text":" So, if I forked "},{"type":"text","text":"HTTP.jl","style":{"code":true}},{"type":"text","text":" and made "},{"type":"text","text":"Response{T}","style":{"code":true}},{"type":"text","text":" where "},{"type":"text","text":"body::T","style":{"code":true}},{"type":"text","text":" would this be something considered as a pull request? It'd probably break -some- code.  However, it'd be a necessary 1st step towards building streamable response objects."}]}]}]},{"client_msg_id":"ac291852-e7d1-49ce-9848-7079d8b8083e","type":"message","text":"Why am I seeing a difference in response between `curl -X POST` and `<http://HTTP.post|HTTP.post>`?  Specifically, I’m doing:\n```curl -X POST \"<https://discourse.julialang.org/g/trust_level_3/reports/18/run>\" -H \"Content-Type: multipart/form-data;\" -H \"Api-Key: ...\" -H \"Api-Username: test\"\n<http://HTTP.post|HTTP.post>(\"<https://discourse.julialang.org/g/trust_level_3/reports/18/run>\", [\"Content-Type\"=&gt;\"multipart/form-data;\", \"Api-Key\"=&gt;\"...\", \"Api-Username\"=&gt;\"test\"])```\nThe former works.  The latter spits back a `406 Not Acceptable`. What’s curl doing that HTTP.jl isn’t?","user":"U6740K1SP","ts":"1609875524.307900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XkJp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why am I seeing a difference in response between "},{"type":"text","text":"curl -X POST","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"HTTP.post","style":{"code":true}},{"type":"text","text":"?  Specifically, I’m doing:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"curl -X POST \""},{"type":"link","url":"https://discourse.julialang.org/g/trust_level_3/reports/18/run"},{"type":"text","text":"\" -H \"Content-Type: multipart/form-data;\" -H \"Api-Key: ...\" -H \"Api-Username: test\"\nHTTP.post(\""},{"type":"link","url":"https://discourse.julialang.org/g/trust_level_3/reports/18/run"},{"type":"text","text":"\", [\"Content-Type\"=>\"multipart/form-data;\", \"Api-Key\"=>\"...\", \"Api-Username\"=>\"test\"])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The former works.  The latter spits back a "},{"type":"text","text":"406 Not Acceptable","style":{"code":true}},{"type":"text","text":". What’s curl doing that HTTP.jl isn’t?"}]}]}]},{"client_msg_id":"89083b96-b2d8-4358-9ab7-8ab6a25ba9f3","type":"message","text":"(I could provide the API key if it’s helpful)","user":"U6740K1SP","ts":"1609875647.308500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o9rUB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I could provide the API key if it’s helpful)"}]}]}]},{"client_msg_id":"aef3bb43-e02a-4037-b22b-a91977b292fe","type":"message","text":"HTTP.jl sets a user-agent by default, not sure if that's making a difference. You can do `<http://HTTP.post|HTTP.post>(...; verbose=2)` to see exactly what the request is being sent via HTTP.jl","user":"U681ELA87","ts":"1609875666.308900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fFIa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"HTTP.jl sets a user-agent by default, not sure if that's making a difference. You can do "},{"type":"text","text":"HTTP.post(...; verbose=2)","style":{"code":true}},{"type":"text","text":" to see exactly what the request is being sent via HTTP.jl"}]}]}]},{"client_msg_id":"b1ad3f0b-78ff-4e5b-954f-0cebc9121750","type":"message","text":"Ah, interesting\n\nHTTP:\n```POST /g/trust_level_3/reports/18/run HTTP/1.1\nContent-Type: multipart/form-data;\nApi-Key: ...\nApi-Username: test\nHost: <http://discourse.julialang.org|discourse.julialang.org>\nUser-Agent: HTTP.jl/1.5.0\nContent-Length: 0```\nCurl:\n```&gt; POST /g/trust_level_3/reports/18/run HTTP/2\n&gt; Host: <http://discourse.julialang.org|discourse.julialang.org>\n&gt; User-Agent: curl/7.54.0\n&gt; Accept: */*\n&gt; Content-Type: multipart/form-data;\n&gt; Api-Key: ...\n&gt; Api-Username: test```","user":"U6740K1SP","ts":"1609875806.309500","team":"T68168MUP","edited":{"user":"U6740K1SP","ts":"1609875811.000000"},"blocks":[{"type":"rich_text","block_id":"bS1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, interesting\n\nHTTP:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"POST /g/trust_level_3/reports/18/run HTTP/1.1\nContent-Type: multipart/form-data;\nApi-Key: ...\nApi-Username: test\nHost: discourse.julialang.org\nUser-Agent: HTTP.jl/1.5.0\nContent-Length: 0"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Curl:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"> POST /g/trust_level_3/reports/18/run HTTP/2\n> Host: discourse.julialang.org\n> User-Agent: curl/7.54.0\n> Accept: */*\n> Content-Type: multipart/form-data;\n> Api-Key: ...\n> Api-Username: test"}]}]}]},{"client_msg_id":"0a9a515b-4e03-4267-abe4-67e0860856a4","type":"message","text":"`\"Accept\"=&gt;\"*/*\"` is the ticket!","user":"U6740K1SP","ts":"1609875894.309800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zDJ6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"Accept\"=>\"*/*\"","style":{"code":true}},{"type":"text","text":" is the ticket!"}]}]}]},{"client_msg_id":"e155193e-ec8b-4e66-ba1d-1661ad5b99ec","type":"message","text":"Interesting that curl has that default","user":"U6740K1SP","ts":"1609876144.310100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8n9Jh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting that curl has that default"}]}]}]},{"client_msg_id":"c0172a74-c297-48d7-b091-3daa7a607771","type":"message","text":"it’s not documented in the manpage AFAICS","user":"U6740K1SP","ts":"1609876155.310400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rTP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it’s not documented in the manpage AFAICS"}]}]}]},{"client_msg_id":"043af12a-df8b-4434-ae79-c254399c18c6","type":"message","text":"but also <https://tools.ietf.org/html/rfc7231#section-5.3.2|RFC7231> says that websites should treat empty accepts as `*/*`s, so this is probably also a discourse bug.","user":"U6740K1SP","ts":"1609876243.311100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U9KWa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but also "},{"type":"link","url":"https://tools.ietf.org/html/rfc7231#section-5.3.2","text":"RFC7231"},{"type":"text","text":" says that websites should treat empty accepts as "},{"type":"text","text":"*/*","style":{"code":true}},{"type":"text","text":"s, so this is probably also a discourse bug."}]}]}]},{"client_msg_id":"6a915769-c7fb-4aa8-9c5c-0ae1629b88c6","type":"message","text":"Python’s requests defaults to `Accept: */*`*:* <https://github.com/psf/requests/blob/c2b307dbefe21177af03f9feb37181a89a799fcc/requests/utils.py#L824>","user":"U6740K1SP","ts":"1609876858.311600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ajIV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Python’s requests defaults to "},{"type":"text","text":"Accept: */*","style":{"code":true}},{"type":"text","text":": ","style":{"bold":true}},{"type":"link","url":"https://github.com/psf/requests/blob/c2b307dbefe21177af03f9feb37181a89a799fcc/requests/utils.py#L824"}]}]}]},{"client_msg_id":"fd659056-3e4c-4fb4-bd17-06c536b49aff","type":"message","text":"so does `libcurl`","user":"U6795JH6H","ts":"1609876880.311800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uz8G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so does "},{"type":"text","text":"libcurl","style":{"code":true}}]}]}]},{"client_msg_id":"2b066a44-5875-451e-a081-63ac749512f9","type":"message","text":"maybe we should too?","user":"U6740K1SP","ts":"1609876947.312000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=yMq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe we should too?"}]}]}]},{"client_msg_id":"a35567fe-d965-41a2-b86a-6c95235cafa4","type":"message","text":"yeah, we could do that","user":"U681ELA87","ts":"1609876990.312200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=MVub","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, we could do that"}]}]}]},{"client_msg_id":"8c901587-a210-4e93-acc5-70baea164838","type":"message","text":"<https://github.com/JuliaWeb/HTTP.jl/issues/661>","user":"U6740K1SP","ts":"1609877225.312400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SBkbT","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaWeb/HTTP.jl/issues/661"}]}]}]},{"client_msg_id":"26f010c4-0231-430a-aef3-84bd536ff882","type":"message","text":"thanks for the help","user":"U6740K1SP","ts":"1609877234.312700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ypG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks for the help"}]}]}]},{"client_msg_id":"4fda7ead-90c6-46d1-80fc-76f31ca4ccdd","type":"message","text":"are there any benchmarks comparing `Genie.jl` vs `Flask`  vs other frameworks (requests per second for example) ?","user":"U013V2CFZAN","ts":"1610357615.318600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7tn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are there any benchmarks comparing "},{"type":"text","text":"Genie.jl","style":{"code":true}},{"type":"text","text":" vs "},{"type":"text","text":"Flask","style":{"code":true}},{"type":"text","text":"  vs other frameworks (requests per second for example) ?"}]}]}]},{"type":"message","text":"How does Julia for web dev compare to node js for hiding multi threading/asyncIO complexities?","user":"U9MD78Z9N","ts":"1610494213.319500","team":"T68168MUP"},{"client_msg_id":"13e87062-a3d0-4666-b5c9-f11b94d54960","type":"message","text":"Is there good interoperability between julia and javascript `Dates`? If I feed the result of say `JSON.json(today())` to javascript, it gives weird results:\n```Date.parse(JSON.parse(\"\\\"2021-01-18\\\"\"))\n1610928000000```","user":"U6BJ9E351","ts":"1610979848.006100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QPbUJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there good interoperability between julia and javascript "},{"type":"text","text":"Dates","style":{"code":true}},{"type":"text","text":"? If I feed the result of say "},{"type":"text","text":"JSON.json(today())","style":{"code":true}},{"type":"text","text":" to javascript, it gives weird results:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Date.parse(JSON.parse(\"\\\"2021-01-18\\\"\"))\n1610928000000"}]}]}]},{"client_msg_id":"c15fa7d6-89a9-4986-9f25-3583ff3e8d00","type":"message","text":"(I will need to pass timeseries data between julia and javascript and was hoping for a common format)","user":"U6BJ9E351","ts":"1610979895.006800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yTgh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I will need to pass timeseries data between julia and javascript and was hoping for a common format)"}]}]}]},{"client_msg_id":"3adcf2ae-ff01-4231-849b-539e9610118f","type":"message","text":"EDIT: sorry about the noise, I'm an idiot, getting a date from a string is `Date(str)`, not `Date.parse(str)`, and this works just fine:\n```Date(JSON.parse(\"\\\"2021-01-18\\\"\"))\n\"Mon Jan 18 2021 15:26:13 GMT+0100 (Central European Standard Time)\"```","user":"U6BJ9E351","ts":"1610980030.007800","team":"T68168MUP","edited":{"user":"U6BJ9E351","ts":"1610980226.000000"},"blocks":[{"type":"rich_text","block_id":"CtEM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"EDIT: sorry about the noise, I'm an idiot, getting a date from a string is "},{"type":"text","text":"Date(str)","style":{"code":true}},{"type":"text","text":", not "},{"type":"text","text":"Date.parse(str)","style":{"code":true}},{"type":"text","text":", and this works just fine:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Date(JSON.parse(\"\\\"2021-01-18\\\"\"))\n\"Mon Jan 18 2021 15:26:13 GMT+0100 (Central European Standard Time)\""}]}]}]},{"client_msg_id":"7a318984-5e36-47e7-b2f9-719f04be4fe4","type":"message","text":"Question: Is LazyJSON.jl fairly unmaintained?\n\nI see there haven't been a lot of commits since it was first created:\n<https://github.com/JuliaCloud/LazyJSON.jl/graphs/contributors>\n\nI'm asking because it currently has a rounding bug, and i didn't get any response to my proposal to address it:\n<https://github.com/JuliaCloud/LazyJSON.jl/issues/15#issuecomment-752202843>\n\ndoes anyone watch its issue list these days?","user":"U89GY9W1J","ts":"1611334625.001600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ph+W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Question: Is LazyJSON.jl fairly unmaintained?\n\nI see there haven't been a lot of commits since it was first created:\n"},{"type":"link","url":"https://github.com/JuliaCloud/LazyJSON.jl/graphs/contributors"},{"type":"text","text":"\n\nI'm asking because it currently has a rounding bug, and i didn't get any response to my proposal to address it:\n"},{"type":"link","url":"https://github.com/JuliaCloud/LazyJSON.jl/issues/15#issuecomment-752202843"},{"type":"text","text":"\n\ndoes anyone watch its issue list these days?"}]}]}]},{"client_msg_id":"49BF1C97-C65A-4A86-8642-641AF79D5778","type":"message","text":"This doesn't address your question about maintenance, but maybe it addresses your original question.\n\nIf you use JSON3.jl with the struct mapping, you can read numbers in as strings. Then you can parse them however you want. \n\nExample: <https://quinnj.github.io/JSON3.jl/dev/#JSON3.RawType|https://quinnj.github.io/JSON3.jl/dev/#JSON3.RawType>","user":"U7THT3TM3","ts":"1611334799.003400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jo0v3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This doesn't address your question about maintenance, but maybe it addresses your original question.\n\nIf you use JSON3.jl with the struct mapping, you can read numbers in as strings. Then you can parse them however you want. \n\n"},{"type":"text","text":"Example: "},{"type":"link","url":"https://quinnj.github.io/JSON3.jl/dev/#JSON3.RawType","text":"https://quinnj.github.io/JSON3.jl/dev/#JSON3.RawType"}]}]}],"reactions":[{"name":"thankyou","users":["U89GY9W1J"],"count":1}]},{"client_msg_id":"98081727-3997-4CE1-84ED-E7F12C524FA3","type":"message","text":"And in fact you can use RawTypes to parse numbers however you want ","user":"U7THT3TM3","ts":"1611334913.004100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xLOT6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And in fact you can use RawTypes to parse numbers however you want "}]}]}]},{"client_msg_id":"1c225dac-dbe3-402c-b5c1-87129a76ad3d","type":"message","text":"thanks Dilum! :slightly_smiling_face: I don't really know why we're using LazyJSON; i wasn't part of the team that made the decision early on. But it would be ideal if we didn't have to switch JSON libraries; that would probably be more work than we want to do in the near term.. :confused: (Even though JSON3 does look very nice and shiny!! :slightly_smiling_face:)","user":"U89GY9W1J","ts":"1611335117.005300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LepZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks Dilum! "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" I don't really know why we're using LazyJSON; i wasn't part of the team that made the decision early on. But it would be ideal if we didn't have to switch JSON libraries; that would probably be more work than we want to do in the near term.. "},{"type":"emoji","name":"confused"},{"type":"text","text":" (Even though JSON3 does look very nice and shiny!! "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":")"}]}]}]},{"client_msg_id":"7a6ffbe1-bbef-4950-9a90-52823ecddb0f","type":"message","text":"Yeah, LazyJSON.jl is very unmaintained. I've been meaning to do a little more in JSON3.jl to allow truly lazy reading, but haven't gotten around to it. We already parse objects and arrays in a lazy way, but strings/numbers/bools are parsed immediately into julia values","user":"U681ELA87","ts":"1611335252.006400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0JuMA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, LazyJSON.jl is very unmaintained. I've been meaning to do a little more in JSON3.jl to allow truly lazy reading, but haven't gotten around to it. We already parse objects and arrays in a lazy way, but strings/numbers/bools are parsed immediately into julia values"}]}]}],"reactions":[{"name":"+1","users":["U89GY9W1J","U82LX4ACB"],"count":2},{"name":"heart","users":["U89GY9W1J"],"count":1}]},{"client_msg_id":"7df000f6-9f9e-4094-ade6-6f80b0f81f78","type":"message","text":"yeah, i was just reading about the middle-ground you took in the README. Sounds really nice! :slightly_smiling_face:\nThanks for letting me know, though.","user":"U89GY9W1J","ts":"1611335300.007400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FUJT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, i was just reading about the middle-ground you took in the README. Sounds really nice! "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\nThanks for letting me know, though."}]}]}]},{"client_msg_id":"8f2e9179-69df-4b3d-b0c9-bf86d9543897","type":"message","text":"Luckily, json interfaces tend to be pretty simple, so I wouldn't expect it to be too much work to switch from LazyJSON to JSON3.jl. Happy to help with any questions.","user":"U681ELA87","ts":"1611335356.008100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FN19","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Luckily, json interfaces tend to be pretty simple, so I wouldn't expect it to be too much work to switch from LazyJSON to JSON3.jl. Happy to help with any questions."}]}]}],"reactions":[{"name":"thankyou","users":["U89GY9W1J"],"count":1}]},{"type":"message","text":"Is there a Julia web server library that allows adding/deleting routes/endpoints at run time of the server preferably through a repl?","user":"U9MD78Z9N","ts":"1611530820.008500","team":"T68168MUP","thread_ts":"1611530820.008500","reply_count":1,"reply_users_count":1,"latest_reply":"1611595354.008900","reply_users":["U679VPJ8L"],"subscribed":false},{"client_msg_id":"565d8506-5355-48f6-bd7d-dbad9f1259c7","type":"message","text":"Not that I know of.","user":"U681ELA87","ts":"1611532951.008800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gc1T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not that I know of."}]}]}]},{"client_msg_id":"bfc4218d-96b4-4c8f-887e-efb6d9303b5f","type":"message","text":"<@U9MD78Z9N> you may find <https://github.com/JuliaWeb/HTTP.jl/issues/587#issuecomment-730197706> interesting.","user":"U68EM3QGP","ts":"1611669024.009600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vrYSv","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U9MD78Z9N"},{"type":"text","text":" you may find "},{"type":"link","url":"https://github.com/JuliaWeb/HTTP.jl/issues/587#issuecomment-730197706"},{"type":"text","text":" interesting."}]}]}]},{"client_msg_id":"0df41d50-2fd1-4ffa-bb4c-48e16c6747ab","type":"message","text":"I had interactive editing of routes working there IIRC","user":"U68EM3QGP","ts":"1611669059.010300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mNX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I had interactive editing of routes working there IIRC"}]}]}],"thread_ts":"1611669059.010300","reply_count":1,"reply_users_count":1,"latest_reply":"1611669170.010500","reply_users":["U9MD78Z9N"],"subscribed":false,"reactions":[{"name":"+1","users":["U9MD78Z9N"],"count":1}]},{"client_msg_id":"d4705003-9066-459b-a584-84757fb81768","type":"message","text":"How can I send a response in chunks from an HTTP.jl endpoint function? I want to serve some long-lasting data stream such as slow changing progress bar value, that may take several minutes to change from 0 to 100 before a response is finished.\nFor now I have a server similar to this example with animals: <https://juliaweb.github.io/HTTP.jl/dev/public_interface/#HTTP.Handlers>\nHere, I have HTTP response - request interface for endpoints connected to a router.\nBut what I need is (probably) HTTP stream interface that I can write in chunks with some time intervals between writes. Something like this example with chat: <https://discourse.julialang.org/t/grpc-protobuf-and-http/14547/3>\nCan I combine request-response functions with stream functions on different routes?","user":"UB2QSHWPN","ts":"1611788255.019500","team":"T68168MUP","edited":{"user":"UB2QSHWPN","ts":"1611788261.000000"},"blocks":[{"type":"rich_text","block_id":"aW4r2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can I send a response in chunks from an HTTP.jl endpoint function? I want to serve some long-lasting data stream such as slow changing progress bar value, that may take several minutes to change from 0 to 100 before a response is finished.\nFor now I have a server similar to this example with animals: "},{"type":"link","url":"https://juliaweb.github.io/HTTP.jl/dev/public_interface/#HTTP.Handlers"},{"type":"text","text":"\nHere, I have HTTP response - request interface for endpoints connected to a router.\nBut what I need is (probably) HTTP stream interface that I can write in chunks with some time intervals between writes. Something like this example with chat: "},{"type":"link","url":"https://discourse.julialang.org/t/grpc-protobuf-and-http/14547/3"},{"type":"text","text":"\nCan I combine request-response functions with stream functions on different routes?"}]}]}]},{"client_msg_id":"24954167-c364-4a9c-8881-c28f5f8bb1ad","type":"message","text":"Yes, you can have different routes handled by different handlers, stream or request/response.","user":"U681ELA87","ts":"1611788402.020200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jhvdb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, you can have different routes handled by different handlers, stream or request/response."}]}]}]},{"client_msg_id":"9465394e-3710-40d5-9157-3b4add54a913","type":"message","text":"```using Sockets, HTTP, JSON\n\nconst ROUTER = HTTP.Router()\n\nfunction counter(io::HTTP.Stream)\n    x = 0\n    for _ in 1:5\n        sleep(1.0)\n        write(io, x)\n        x += 1\n    end\n    close(io)\nend\n\nHTTP.@register(ROUTER, \"GET\", \"/api/counter\", counter)\nHTTP.@register(ROUTER, \"/api/counter2\", counter)\n\nip = Sockets.getipaddr()\nport = 8080\nserver = Sockets.listen(ip, port)\n\n@info \"Try:\"\n@info \"$ip:$port/api/counter\"\n@info \"$ip:$port/api/counter2\"\n\n@async HTTP.serve(ROUTER, ip, port; verbose = false, server = server)```\nTrying both routes in browser gives me error:\n```┌ Error: error handling request\n│   exception =\n│    MethodError: no method matching counter(::HTTP.Messages.Request)\n│    Closest candidates are:\n│      counter(::HTTP.Streams.Stream) at c:\\Users\\user\\.julia\\dev\\test_web.jl:5\n│    Stacktrace:\n│     [1] handle(::HTTP.Handlers.RequestHandlerFunction{typeof(counter)}, ::HTTP.Messages.Request) at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Handlers.jl:253\n│     [2] handle(::HTTP.Handlers.RequestHandlerFunction{typeof(counter)}, ::HTTP.Streams.Stream{HTTP.Messages.Request,HTTP.ConnectionPool.Transaction{TCPSocket}}) at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Handlers.jl:276\n│     [3] handle(::HTTP.Handlers.Router{Symbol(\"##253\")}, ::HTTP.Streams.Stream{HTTP.Messages.Request,HTTP.ConnectionPool.Transaction{TCPSocket}}) at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Handlers.jl:466\n│     [4] #4 at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Handlers.jl:345 [inlined]\n│     [5] macro expansion at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Servers.jl:367 [inlined]\n│     [6] (::HTTP.Servers.var\"#13#14\"{HTTP.Handlers.var\"#4#5\"{HTTP.Handlers.Router{Symbol(\"##253\")}},HTTP.ConnectionPool.Transaction{TCPSocket},HTTP.Streams.Stream{HTTP.Messages.Request,HTTP.ConnectionPool.Transaction{TCPSocket}}})() at .\\task.jl:356```\n","user":"UB2QSHWPN","ts":"1611795823.021600","team":"T68168MUP","edited":{"user":"UB2QSHWPN","ts":"1611795842.000000"},"blocks":[{"type":"rich_text","block_id":"driP","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Sockets, HTTP, JSON\n\nconst ROUTER = HTTP.Router()\n\nfunction counter(io::HTTP.Stream)\n    x = 0\n    for _ in 1:5\n        sleep(1.0)\n        write(io, x)\n        x += 1\n    end\n    close(io)\nend\n\nHTTP.@register(ROUTER, \"GET\", \"/api/counter\", counter)\nHTTP.@register(ROUTER, \"/api/counter2\", counter)\n\nip = Sockets.getipaddr()\nport = 8080\nserver = Sockets.listen(ip, port)\n\n@info \"Try:\"\n@info \"$ip:$port/api/counter\"\n@info \"$ip:$port/api/counter2\"\n\n@async HTTP.serve(ROUTER, ip, port; verbose = false, server = server)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nTrying both routes in browser gives me error:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"┌ Error: error handling request\n│   exception =\n│    MethodError: no method matching counter(::HTTP.Messages.Request)\n│    Closest candidates are:\n│      counter(::HTTP.Streams.Stream) at c:\\Users\\user\\.julia\\dev\\test_web.jl:5\n│    Stacktrace:\n│     [1] handle(::HTTP.Handlers.RequestHandlerFunction{typeof(counter)}, ::HTTP.Messages.Request) at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Handlers.jl:253\n│     [2] handle(::HTTP.Handlers.RequestHandlerFunction{typeof(counter)}, ::HTTP.Streams.Stream{HTTP.Messages.Request,HTTP.ConnectionPool.Transaction{TCPSocket}}) at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Handlers.jl:276\n│     [3] handle(::HTTP.Handlers.Router{Symbol(\"##253\")}, ::HTTP.Streams.Stream{HTTP.Messages.Request,HTTP.ConnectionPool.Transaction{TCPSocket}}) at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Handlers.jl:466\n│     [4] #4 at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Handlers.jl:345 [inlined]\n│     [5] macro expansion at C:\\Users\\user\\.julia\\packages\\HTTP\\IAI92\\src\\Servers.jl:367 [inlined]\n│     [6] (::HTTP.Servers.var\"#13#14\"{HTTP.Handlers.var\"#4#5\"{HTTP.Handlers.Router{Symbol(\"##253\")}},HTTP.ConnectionPool.Transaction{TCPSocket},HTTP.Streams.Stream{HTTP.Messages.Request,HTTP.ConnectionPool.Transaction{TCPSocket}}})() at .\\task.jl:356"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1611795823.021600","reply_count":2,"reply_users_count":1,"latest_reply":"1611796769.022200","reply_users":["UB2QSHWPN"],"subscribed":false},{"client_msg_id":"e2dc7d11-a5b8-40e7-be2a-fec5c4465e44","type":"message","text":"How can I run server written with HTTP.jl through secure HTTPS connection, if I have SSL certificate and domain name provided?","user":"UB2QSHWPN","ts":"1611850006.024500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KAvo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can I run server written with HTTP.jl through secure HTTPS connection, if I have SSL certificate and domain name provided?"}]}]}],"thread_ts":"1611850006.024500","reply_count":2,"reply_users_count":2,"latest_reply":"1611850323.024900","reply_users":["U6NFPDBV1","U681ELA87"],"subscribed":false},{"client_msg_id":"468562f6-c5c3-404b-b8c2-9770918c0f2f","type":"message","text":"I'm trying to make a handler that can download a XML file as an attachment. However,  I don't know what I am doing wrong. Could somebody point me in the right direction?\n```function send_xml(request::HTTP.Request) \n    \n    local xmlstring\n    open(\"test.xml\") do fh\n        xmlstring = read(fh, String)\n    end\n    HTTP.header(request, \"Content-Type: text/xml\")\n    HTTP.header(request, \"Content-Length: $(length(xmlstring))\")\n    HTTP.header(request, \"Content-Disposition: attachment; filename=myxml.xml\")\n\n    return xmlstring\nend```","user":"U013V2CFZAN","ts":"1611866632.027200","team":"T68168MUP","edited":{"user":"U013V2CFZAN","ts":"1611866747.000000"},"blocks":[{"type":"rich_text","block_id":"wIr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm trying to make a handler that can download a XML file as an attachment. However,  I don't know what I am doing wrong. Could somebody point me in the right direction?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function send_xml(request::HTTP.Request) \n    \n    local xmlstring\n    open(\"test.xml\") do fh\n        xmlstring = read(fh, String)\n    end\n    HTTP.header(request, \"Content-Type: text/xml\")\n    HTTP.header(request, \"Content-Length: $(length(xmlstring))\")\n    HTTP.header(request, \"Content-Disposition: attachment; filename=myxml.xml\")\n\n    return xmlstring\nend"}]}]}]},{"client_msg_id":"3DBB3CE0-117A-41BA-B77B-67F29661B710","type":"message","text":"You should return a HTTP.Response with xmlstring as the body and set the headers on the response","user":"U681ELA87","ts":"1611867164.028500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tsl4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You should return a HTTP.Response with xmlstring as the body and set the headers on the response"}]}]}]},{"client_msg_id":"d33c9e4c-2112-4ec8-874b-3f87c5ae4d3a","type":"message","text":"Is there a better than a \"global\" try-catch to avoid server-errors leaking to the client in HTTP?\nExample:\n```julia&gt; HTTP.listen(\"0.0.0.0\", 8080) do http\n           error(\"internal error that you are not supposed to see\")\n       end```\nwill return\n```$ curl localhost:8080\ninternal error that you are not supposed to see```","user":"U67SCG4HG","ts":"1611869908.029700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f+VY6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a better than a \"global\" try-catch to avoid server-errors leaking to the client in HTTP?\nExample:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> HTTP.listen(\"0.0.0.0\", 8080) do http\n           error(\"internal error that you are not supposed to see\")\n       end"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"will return\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"$ curl localhost:8080\ninternal error that you are not supposed to see"}]}]}],"thread_ts":"1611869908.029700","reply_count":1,"reply_users_count":1,"latest_reply":"1611870171.030000","reply_users":["U67SCG4HG"],"subscribed":false,"reactions":[{"name":"cry","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"89d58df9-ea0b-4789-b97d-f217bb02be62","type":"message","text":"How can I attach response readers to a handler that works with HTTP.Stream, but not HTTP.Request?","user":"UB2QSHWPN","ts":"1612181271.037000","team":"T68168MUP","edited":{"user":"UB2QSHWPN","ts":"1612181323.000000"},"blocks":[{"type":"rich_text","block_id":"djlb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can I attach response readers to a handler that works with HTTP.Stream, but not HTTP.Request?"}]}]}],"thread_ts":"1612181271.037000","reply_count":1,"reply_users_count":1,"latest_reply":"1612181748.037200","reply_users":["UB2QSHWPN"],"subscribed":false},{"client_msg_id":"efba4be2-96a2-42f6-b5fc-df0f88a4c54e","type":"message","text":"In `HTTP.open(...) do http end`, is it on purpose that the `do` function is called on redirects?","user":"U67SCG4HG","ts":"1612210452.039200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"obhR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In "},{"type":"text","text":"HTTP.open(...) do http end","style":{"code":true}},{"type":"text","text":", is it on purpose that the `do` function is called on redirects?"}]}]}],"thread_ts":"1612210452.039200","reply_count":3,"reply_users_count":1,"latest_reply":"1612215669.039700","reply_users":["U67SCG4HG"],"subscribed":false},{"client_msg_id":"6fd79e15-f847-48ef-b208-7b491878c832","type":"message","text":"Why does this result in bunch of `IOError(\"write: broken pipe (EPIPE)\", -32)`? It is probably related to the question just above since it seems to only happen for redirects. (`<http://pkg.julialang.org/meta|pkg.julialang.org/meta>` redirects to `<http://eu-central.pkg.julialang.org/meta|eu-central.pkg.julialang.org/meta>`):\n```$ cat http_debug.jl \nusing HTTP, URIs\n\nfunction proxy_pass(http::HTTP.Stream, upstream::URI)\n    # Upstream URI\n    proxy_uri = URI(upstream; path=http.message.target)\n\n    # Open connection to upstream\n    HTTP.open(\"GET\", proxy_uri; status_exception=false) do http2\n        # Read status code and headers\n        req = HTTP.startread(http2)\n        if HTTP.isredirect(http2)\n            # TODO: Should this function even be called for redirects?\n            return nothing\n        end\n        # Write response back to http\n        HTTP.setstatus(http, req.status)\n        foreach(h -&gt; HTTP.setheader(http, h), req.headers)\n        HTTP.startwrite(http)\n        HTTP.write(http, http2)\n    end\n    return nothing\nend\n\ntask = @async HTTP.listen(\"0.0.0.0\", 8123) do http\n    return proxy_pass(http, URI(\"<http://pkg.julialang.org>\"))\n    # return proxy_pass(http, URI(\"<http://eu-central.pkg.julialang.org>\"))\nend\n\n\nfor i in 1:20\n    HTTP.get(\"<http://localhost:8123>\")\nend```","user":"U67SCG4HG","ts":"1612218765.041200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MPu2g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why does this result in bunch of "},{"type":"text","text":"IOError(\"write: broken pipe (EPIPE)\", -32)","style":{"code":true}},{"type":"text","text":"? It is probably related to the question just above since it seems to only happen for redirects. ("},{"type":"link","url":"http://pkg.julialang.org/meta","text":"pkg.julialang.org/meta","style":{"code":true}},{"type":"text","text":" redirects to "},{"type":"link","url":"http://eu-central.pkg.julialang.org/meta","text":"eu-central.pkg.julialang.org/meta","style":{"code":true}},{"type":"text","text":"):\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"$ cat http_debug.jl \nusing HTTP, URIs\n\nfunction proxy_pass(http::HTTP.Stream, upstream::URI)\n    # Upstream URI\n    proxy_uri = URI(upstream; path=http.message.target)\n\n    # Open connection to upstream\n    HTTP.open(\"GET\", proxy_uri; status_exception=false) do http2\n        # Read status code and headers\n        req = HTTP.startread(http2)\n        if HTTP.isredirect(http2)\n            # TODO: Should this function even be called for redirects?\n            return nothing\n        end\n        # Write response back to http\n        HTTP.setstatus(http, req.status)\n        foreach(h -> HTTP.setheader(http, h), req.headers)\n        HTTP.startwrite(http)\n        HTTP.write(http, http2)\n    end\n    return nothing\nend\n\ntask = @async HTTP.listen(\"0.0.0.0\", 8123) do http\n    return proxy_pass(http, URI(\""},{"type":"link","url":"http://pkg.julialang.org"},{"type":"text","text":"\"))\n    # return proxy_pass(http, URI(\""},{"type":"link","url":"http://eu-central.pkg.julialang.org"},{"type":"text","text":"\"))\nend\n\n\nfor i in 1:20\n    HTTP.get(\""},{"type":"link","url":"http://localhost:8123"},{"type":"text","text":"\")\nend"}]}]}]}]}