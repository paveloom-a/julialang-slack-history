{"cursor": 0, "messages": [{"client_msg_id":"e7b4db42-66f1-47ab-ae84-be38d7c1b427","type":"message","text":"This looks really nice :heart_eyes: but what do I do if I want to see the actual values of the elements, like in Julia &lt; 1.6?:\n```julia&gt; sparse(A)\n100×100 SparseMatrixCSC{Float64, Int64} with 820 stored entries:\n⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑⢄⠀⠀⠀⠀⢄⠀⠀⠀⠀⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢄⠀⠀⠀⠑⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑⢄⠀⠀⠀⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠀⠀⠀⠀⠑⠀⠀⠀⠀⠑⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿```","user":"UC6LC14MA","ts":"1607933013.023900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IqM=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This looks really nice "},{"type":"emoji","name":"heart_eyes"},{"type":"text","text":" but what do I do if I want to see the actual values of the elements, like in Julia < 1.6?:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> sparse(A)\n100×100 SparseMatrixCSC{Float64, Int64} with 820 stored entries:\n⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑⢄⠀⠀⠀⠀⢄⠀⠀⠀⠀⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢄⠀⠀⠀⠑⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑⢄⠀⠀⠀⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠀⠀⠀⠀⠑⠀⠀⠀⠀⠑⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⣿⣿⣀⡀⠀⠑⢄⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠸⠿⣧⣤⠀⠀⠑⢄⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⠛⣤⣤⠀⠀⠑\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠛⢻⣶⡆⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠀⠀⠑⢄⠀⠈⠉⣿⣿"}]}]}],"thread_ts":"1607933013.023900","reply_count":4,"reply_users_count":3,"latest_reply":"1607936207.024700","reply_users":["U680T6770","UB197FRCL","UC6LC14MA"],"subscribed":false,"reactions":[{"name":"100","users":["U680T6770","UDD5Z7FLZ","UGG8Z375L"],"count":3},{"name":"sparkler","users":["UGU761DU2","U019K6Q9N15","UH8A351DJ"],"count":3}]},{"client_msg_id":"375ceec3-f1e6-4697-a7cf-2e8af4ab997f","type":"message","text":"Is there an `&lt;:AbstractMatrix` type for zero matrices (meaning a matrix whose elements are all zeros)? Like a `UniformScaling(false)`, but hard-coded in the type?\nI have some code with two matrices `A` and `B`, and there are settings where I can guarantee that `B = 0` , in which case I can simplify things a lot.","user":"UCT7E536E","ts":"1608154292.031200","team":"T68168MUP","edited":{"user":"UCT7E536E","ts":"1608154326.000000"},"blocks":[{"type":"rich_text","block_id":"o1u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there an "},{"type":"text","text":"<:AbstractMatrix","style":{"code":true}},{"type":"text","text":" type for zero matrices (meaning a matrix whose elements are all zeros)? Like a "},{"type":"text","text":"UniformScaling(false)","style":{"code":true}},{"type":"text","text":", but hard-coded in the type?\nI have some code with two matrices "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":", and there are settings where I can guarantee that "},{"type":"text","text":"B = 0","style":{"code":true}},{"type":"text","text":" , in which case I can simplify things a lot."}]}]}]},{"client_msg_id":"DE4A45B5-17B5-48BB-9D16-7461A5ED8FE5","type":"message","text":"If you can’t *statically* guarantee at compile time that `B = 0`, it’s likely not worth it unless the matrixes are rather big. ","user":"U8D9768Q6","ts":"1608154436.032400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oXqdW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you can’t "},{"type":"text","text":"statically","style":{"bold":true}},{"type":"text","text":" guarantee at compile time that "},{"type":"text","text":"B = 0","style":{"code":true}},{"type":"text","text":", it’s likely not worth it unless the matrixes are rather big. "}]}]}]},{"client_msg_id":"1B32C6C6-1855-47C5-B384-5851BEF680FE","type":"message","text":"But no, I don’t think there’s a type like that laying around. I would like to have one though. ","user":"U8D9768Q6","ts":"1608154459.033100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VR2g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But no, I don’t think there’s a type like that laying around. I would like to have one though. "}]}]}]},{"client_msg_id":"03C91774-3161-4B02-9750-8C1353D9E7AE","type":"message","text":"There’s been a few discussions of such a concept on GitHub. ","user":"U8D9768Q6","ts":"1608154479.033700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V9o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There’s been a few discussions of such a concept on GitHub. "}]}]}]},{"client_msg_id":"d3328bed-08d7-4e94-a3bb-507c922fa281","type":"message","text":"Yeah, that's precisely the situation I'd be in. That's alright, I'll create my own type; if more are interested we can spin out a small package.","user":"UCT7E536E","ts":"1608154803.035400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2THeQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, that's precisely the situation I'd be in. That's alright, I'll create my own type; if more are interested we can spin out a small package."}]}]}],"reactions":[{"name":"+1","users":["U8D9768Q6"],"count":1}]},{"client_msg_id":"b9b95b21-53da-411d-a675-e65e810d6884","type":"message","text":"Perhaps `FillArrays.Zeros`?","user":"UDXST8ARK","ts":"1608155261.036700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ozxL2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps "},{"type":"text","text":"FillArrays.Zeros","style":{"code":true}},{"type":"text","text":"?"}]}]}],"reactions":[{"name":"+1","users":["U8D9768Q6","UCT7E536E","U6A936746","U881D0W2C","U67G3QRJM","U82RE6STE"],"count":6}]},{"client_msg_id":"e9937da2-9ad4-42ad-bb0b-9a90d8c64b35","type":"message","text":"Forgot about that, nice. It unfortunately allocates a new array when doing addition, but maybe that's okay. Easy PR too if someone wants to tackle it.","user":"U8D9768Q6","ts":"1608155435.037700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0H22","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Forgot about that, nice. It unfortunately allocates a new array when doing addition, but maybe that's okay. Easy PR too if someone wants to tackle it."}]}]}],"thread_ts":"1608155435.037700","reply_count":1,"reply_users_count":1,"latest_reply":"1608200971.038400","reply_users":["U881D0W2C"],"subscribed":false},{"client_msg_id":"ee01fcc3-c352-4d83-8d1c-ba46aceee30a","type":"message","text":"Can anyone help me find the fastest way to do this pseudo code?\n```for i in 1:~50\n    Mᵢ = [A Bᵢ, Bᵢᵀ D]\n    Mᵢ \\ bᵢ\n    Mᵢ \\ cᵢ\n    Mᵢ \\ dᵢ\nend```\n`M` is a block matrix with a size in the low thousands, `A` and `D` stay the same between iterations. Precision is not of the highest priority; I'm already using a iterative solver for the linear equations. `M` is not quite symmetric but the results of a conjugate gradient method work well enough.","user":"UCB7L9W49","ts":"1608320431.041900","team":"T68168MUP","edited":{"user":"UCB7L9W49","ts":"1608320962.000000"},"blocks":[{"type":"rich_text","block_id":"8Bc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can anyone help me find the fastest way to do this pseudo code?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for i in 1:~50\n    Mᵢ = [A Bᵢ, Bᵢᵀ D]\n    Mᵢ \\ bᵢ\n    Mᵢ \\ cᵢ\n    Mᵢ \\ dᵢ\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"M","style":{"code":true}},{"type":"text","text":" is a block matrix with a size in the low thousands, "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"D","style":{"code":true}},{"type":"text","text":" stay the same between iterations. Precision is not of the highest priority; I'm already using a iterative solver for the linear equations. "},{"type":"text","text":"M","style":{"code":true}},{"type":"text","text":" is not quite symmetric but the results of a conjugate gradient method work well enough."}]}]}]},{"client_msg_id":"605114a8-dccc-4e54-9f7c-247fc1a1adf8","type":"message","text":"`A` and `D` are symmetric positive / negative definite?","user":"UGG8Z375L","ts":"1608322672.042800","team":"T68168MUP","edited":{"user":"UGG8Z375L","ts":"1608322849.000000"},"blocks":[{"type":"rich_text","block_id":"l/X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"D","style":{"code":true}},{"type":"text","text":" are symmetric positive / negative definite?"}]}]}]},{"client_msg_id":"d37e8ceb-f55b-4d3f-9cad-d443d03e407c","type":"message","text":"If it's the case you can use `TriCG` or `TriMR` instead of the conjugate gradient method (`CG`).","user":"UGG8Z375L","ts":"1608322775.043700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uck7t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it's the case you can use "},{"type":"text","text":"TriCG","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"TriMR","style":{"code":true}},{"type":"text","text":" instead of the conjugate gradient method ("},{"type":"text","text":"CG","style":{"code":true}},{"type":"text","text":")."}]}]}]},{"client_msg_id":"3e8d2f25-9975-4ad1-adc6-770a86bb548c","type":"message","text":"They are equally \"not quite but close enough for CG\" symmetric positive definite.\nI read the documentation on this but I'm out of my depth here. I should be using it here like `tricg(Bᵢ, b₁, b₂; M = A⁻¹, N = D⁻¹)` ?","user":"UCB7L9W49","ts":"1608325962.046600","team":"T68168MUP","edited":{"user":"UCB7L9W49","ts":"1608326305.000000"},"blocks":[{"type":"rich_text","block_id":"6odf/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They are equally \"not quite but close enough for CG\" symmetric positive definite.\nI read the documentation on this but I'm out of my depth here. I should be using it here like "},{"type":"text","text":"tricg(Bᵢ, b₁, b₂; M = A⁻¹, N = D⁻¹)","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1608325962.046600","reply_count":36,"reply_users_count":2,"latest_reply":"1608330457.061000","reply_users":["UGG8Z375L","UCB7L9W49"],"subscribed":false},{"client_msg_id":"dc906986-6cc8-47cf-9cca-de257bcb5439","type":"message","text":"```llt_A = cholesky(A)\ny = similar(b₁)\nopA⁻¹ = LinearOperator(Float64, size(A,1), size(A,2), true, true, v -&gt; ldiv!(y, llt_A, v))\n\nllt_D = cholesky(D)\nz = similar(b₂)\nopD⁻¹ = LinearOperator(Float64, size(D,1), size(D,2), true, true, v -&gt; ldiv!(z, llt_D, v))\n\ntricg(Bᵢ, b₁, b₂; M = opA⁻¹, N = opD⁻¹, spd=true)\ntrimr(Bᵢ, b₁, b₂; M = opA⁻¹, N = opD⁻¹, spd=true)```","user":"UGG8Z375L","ts":"1608326441.049600","team":"T68168MUP","edited":{"user":"UGG8Z375L","ts":"1608326722.000000"},"blocks":[{"type":"rich_text","block_id":"m9Vno","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"llt_A = cholesky(A)\ny = similar(b₁)\nopA⁻¹ = LinearOperator(Float64, size(A,1), size(A,2), true, true, v -> ldiv!(y, llt_A, v))\n\nllt_D = cholesky(D)\nz = similar(b₂)\nopD⁻¹ = LinearOperator(Float64, size(D,1), size(D,2), true, true, v -> ldiv!(z, llt_D, v))\n\ntricg(Bᵢ, b₁, b₂; M = opA⁻¹, N = opD⁻¹, spd=true)\ntrimr(Bᵢ, b₁, b₂; M = opA⁻¹, N = opD⁻¹, spd=true)"}]}]}]},{"client_msg_id":"9dbcd2ba-4085-4221-9edd-373b72621ac8","type":"message","text":"Is there a special name for a matrix that is banded around the diagonal that passes through its central element? i.e. if matrix `A` has size `(m, n)` for odd `(m, n)`, then the central element is at  `A[(m+1)/2, (n+1)/2]`. Then we call the diagonal the one that passes through this central element and the upper and lower diagonals accordingly. Just wondering if there's a literature on any special properties.","user":"UHDQQ4GN6","ts":"1608593158.068500","team":"T68168MUP","edited":{"user":"UHDQQ4GN6","ts":"1608593657.000000"},"blocks":[{"type":"rich_text","block_id":"lshOA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a special name for a matrix that is banded around the diagonal that passes through its central element? i.e. if matrix "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" has size "},{"type":"text","text":"(m, n)","style":{"code":true}},{"type":"text","text":" for odd "},{"type":"text","text":"(m, n)","style":{"code":true}},{"type":"text","text":", then the central element is at  "},{"type":"text","text":"A[(m+1)/2, (n+1)/2]","style":{"code":true}},{"type":"text","text":". Then we call the diagonal the one that passes through this central element and the upper and lower diagonals accordingly. Just wondering if there's a literature on any special properties."}]}]}],"reactions":[{"name":"+1","users":["U6A936746"],"count":1}]},{"client_msg_id":"19668773-90c1-460f-b909-1851682d5af1","type":"message","text":"if I have a big sparse matrix (2^30 by 2^30) constructed by `foldl(kron, array_of_2x2_matrix)` , is there a way to re-use the big sparse matrix? allocation is a big crazy for me","user":"UH8A351DJ","ts":"1608692536.070700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cAm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if I have a big sparse matrix (2^30 by 2^30) constructed by "},{"type":"text","text":"foldl(kron, array_of_2x2_matrix)","style":{"code":true}},{"type":"text","text":" , is there a way to re-use the big sparse matrix? allocation is a big crazy for me"}]}]}]},{"client_msg_id":"a85fa07c-f3f4-4a1f-a868-6a82f9444cba","type":"message","text":"What is the \"linear expansion of a vector in a basis\"?","user":"U6A936746","ts":"1609082607.072300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uAlmY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the \"linear expansion of a vector in a basis\"?"}]}]}]},{"client_msg_id":"69e66523-3beb-41ef-bbc9-2d4ba455405e","type":"message","text":"writing a vector as an array of coefficients according to some assumed basis","user":"U69BL50BF","ts":"1609082701.072700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hoOBA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"writing a vector as an array of coefficients according to some assumed basis"}]}]}]},{"client_msg_id":"7f007523-a40b-485e-a1ec-a33cfbcd998e","type":"message","text":"normally what you call a \"Vector\" is just the linear expansion of a vector in the basis `{e1,e2,...,en}`","user":"U69BL50BF","ts":"1609082733.073400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uvLv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"normally what you call a \"Vector\" is just the linear expansion of a vector in the basis "},{"type":"text","text":"{e1,e2,...,en}","style":{"code":true}}]}]}]},{"client_msg_id":"9b1acbbe-8498-4fb2-bc54-79fc9636caa3","type":"message","text":"but you can expand it in alternative bases, and in that case the coefficients are different","user":"U69BL50BF","ts":"1609082748.073800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WjI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but you can expand it in alternative bases, and in that case the coefficients are different"}]}]}]},{"client_msg_id":"becd0087-2745-4532-8af3-a3de6a8b114c","type":"message","text":"but it's still the same vector","user":"U69BL50BF","ts":"1609082756.074000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ScC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but it's still the same vector"}]}]}]},{"client_msg_id":"4aff826f-af44-4a6b-9af0-6feca3edab0e","type":"message","text":"Oh so it's just another word for change of basis?","user":"U6A936746","ts":"1609083019.074600","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609083031.000000"},"blocks":[{"type":"rich_text","block_id":"rPGN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh so it's just another word for change of basis?"}]}]}]},{"client_msg_id":"87ce4e28-7519-48a3-99a0-40efeaa7db93","type":"message","text":"It’s the coordinates of the vector with respect to that basis. When you learn linear algebra in the mathy way, they start from the assumption that there are things that satisfy the axioms of a vector space and then show that a vector can be written as a linear combination of basis elements (the definition of a basis is that this is possible), that a basis always exists, and that any two bases have the same cardinality, which is called the dimension of the space. Which is a round about way of explaining that vectors are assumed to exist independent of any basis. Of course, in practice, we almost always work with vectors expressed in terms of some basis, so it’s weird to even think of them independent of a basis, but that’s the perspective a lot of statements in formal linear algebra take.","user":"U6795JH6H","ts":"1609083853.080100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qL=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s the coordinates of the vector with respect to that basis. When you learn linear algebra in the mathy way, they start from the assumption that there are things that satisfy the axioms of a vector space and then show that a vector can be written as a linear combination of basis elements (the definition of a basis is that this is possible), that a basis always exists, and that any two bases have the same cardinality, which is called the dimension of the space. Which is a round about way of explaining that vectors are assumed to exist independent of any basis. Of course, in practice, we almost always work with vectors expressed in terms of some basis, so it’s weird to even think of them independent of a basis, but that’s the perspective a lot of statements in formal linear algebra take."}]}]}]},{"client_msg_id":"26f31a9f-0e2b-4570-b4eb-e59996a66b73","type":"message","text":"well in finite dimensional spaces the representation doesn't really matter and you have a canonical representation so you always tend to represent it in the standard basis","user":"U69BL50BF","ts":"1609085310.088100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ujg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well in finite dimensional spaces the representation doesn't really matter and you have a canonical representation so you always tend to represent it in the standard basis"}]}]}]},{"client_msg_id":"f14688cc-2b65-4ef7-9e9c-a8096b4639d2","type":"message","text":"but infinite dimensional spaces people tend to talk about the vector itself outside of a basis","user":"U69BL50BF","ts":"1609085329.088600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q0g7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but infinite dimensional spaces people tend to talk about the vector itself outside of a basis"}]}]}]},{"client_msg_id":"f96b17ea-008e-477f-927c-af4d74764753","type":"message","text":"a common example is functions","user":"U69BL50BF","ts":"1609085334.088800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+p0F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a common example is functions"}]}]}]},{"client_msg_id":"9e76f84e-dd3d-4b20-b547-50533b3e83f2","type":"message","text":"`f` is an L^2 function, and so it can be represented in the Fourier basis, or etc.","user":"U69BL50BF","ts":"1609085380.089500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E+Rw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" is an L^2 function, and so it can be represented in the Fourier basis, or etc."}]}]}]},{"client_msg_id":"07c88049-3ed7-4950-9bca-087a3c1b1c14","type":"message","text":"but people still call it `f(x) = x^2 + x` while knowing the Sobolev spaces it lives in are vector spaces","user":"U69BL50BF","ts":"1609085418.090200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vYa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but people still call it "},{"type":"text","text":"f(x) = x^2 + x","style":{"code":true}},{"type":"text","text":" while knowing the Sobolev spaces it lives in are vector spaces"}]}]}]},{"client_msg_id":"509e3fca-7805-46ac-84b4-f7be277b5f8d","type":"message","text":"and when doing gradient descent you're doing functional gradient descent on normed vector spaces in some finite dimensional representations, etc.","user":"U69BL50BF","ts":"1609085443.090800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AkZT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and when doing gradient descent you're doing functional gradient descent on normed vector spaces in some finite dimensional representations, etc."}]}]}]},{"client_msg_id":"3f4aab4f-752d-4e66-a5dd-ae8db6130939","type":"message","text":"so it's used quite a bit, just not in \"Linear Algebra\"","user":"U69BL50BF","ts":"1609085458.091200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P9KS6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so it's used quite a bit, just not in \"Linear Algebra\""}]}]}]},{"client_msg_id":"3e3f3652-e09e-45f8-9a02-818d81e90338","type":"message","text":"I did the mathsy unit, one of the ones where you get like 2/3rds if the way through before you get to \"and now we show every vector space is isomorphic to C^n\".\nIdk if I have just forgotten that term or if we called it something else.\nI am going through Trefethen and Bau's \"Numerical Linear Algebra\" book\nAnd they start with `C^n` as a given.\nFirst use of the term linear expansion is  saying `A^-1 b` is the vector of coefficients of the linear expansion of `b`  in the basis of the columns of  `A`","user":"U6A936746","ts":"1609085654.092300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"piB1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I did the mathsy unit, one of the ones where you get like 2/3rds if the way through before you get to \"and now we show every vector space is isomorphic to C^n\".\nIdk if I have just forgotten that term or if we called it something else.\nI am going through Trefethen and Bau's \"Numerical Linear Algebra\" book\nAnd they start with "},{"type":"text","text":"C^n","style":{"code":true}},{"type":"text","text":" as a given.\nFirst use of the term linear expansion is  saying "},{"type":"text","text":"A^-1 b","style":{"code":true}},{"type":"text","text":" is the vector of coefficients of the linear expansion of "},{"type":"text","text":"b ","style":{"code":true}},{"type":"text","text":" in the basis of the columns of  "},{"type":"text","text":"A","style":{"code":true}}]}]}]},{"client_msg_id":"8be38d06-2202-45b3-a74f-c3ee3b2cd2b6","type":"message","text":"Oh the next paragraph says \"Multiplying by `A^-1` is a change of basis operation\"\nI should have kept reading...","user":"U6A936746","ts":"1609086059.094100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FlxT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh the next paragraph says \"Multiplying by "},{"type":"text","text":"A^-1","style":{"code":true}},{"type":"text","text":" is a change of basis operation\"\nI should have kept reading..."}]}]}]},{"client_msg_id":"eb1bac18-05a2-4430-b363-e9dac7feeb06","type":"message","text":"I didn't understand why linear algebra does that \"vectors are independent of a basis\" thing until I learned some differential geometry, and then it became obvious that it has to be this way. Generally there is no canonical way of defining a basis of a tangent space until you pick a chart, and usually there is no canonical chart to pick.","user":"U9AHT3YM7","ts":"1609150613.097700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VyGW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I didn't understand why linear algebra does that \"vectors are independent of a basis\" thing until I learned some differential geometry, and then it became obvious that it has to be this way. Generally there is no canonical way of defining a basis of a tangent space until you pick a chart, and usually there is no canonical chart to pick."}]}]}]},{"client_msg_id":"4f61cbc1-efae-454a-8464-ba567c85b23d","type":"message","text":"Also, just because there exists a \"canonical\" basis (or what you believe is the canonical basis) doesn't mean that this is a good choice. Think of polynomials (up to a given degree), and the problem of polynomial interpolation. Choosing the \"canonical\" monomial basis makes the problem of finding the interpolant's coefficients (as functions of the given values) very ill-conditioned, in dramatic contrast to choosing, e.g., Lagrange's basis. This fact is probably very hard to grasp/teach without understanding that the canonical basis is just one out of many.","user":"U011TRN4QBU","ts":"1609169436.103400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ngb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, just because there exists a \"canonical\" basis (or what you believe is the canonical basis) doesn't mean that this is a good choice. Think of polynomials (up to a given degree), and the problem of polynomial interpolation. Choosing the \"canonical\" monomial basis makes the problem of finding the interpolant's coefficients (as functions of the given values) very ill-conditioned, in dramatic contrast to choosing, e.g., Lagrange's basis. This fact is probably very hard to grasp/teach without understanding that the canonical basis is just one out of many."}]}]}]},{"client_msg_id":"d8286765-04bb-43a1-8f95-e24adbff2ca0","type":"message","text":"is there any reason the `tr` function in <https://github.com/JuliaLang/julia/blob/master/stdlib/LinearAlgebra/src/dense.jl#L332> couldn't be removed where it's at and replace what's in <https://github.com/JuliaLang/julia/blob/master/stdlib/LinearAlgebra/src/generic.jl#L1027> to make the generic case non-allocating? I only noticed because `tr` for a `Symmetric` dense matrix was falling back to the generic.jl method","user":"UDPLCA08H","ts":"1609184689.105000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lW7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there any reason the "},{"type":"text","text":"tr","style":{"code":true}},{"type":"text","text":" function in "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/master/stdlib/LinearAlgebra/src/dense.jl#L332"},{"type":"text","text":" couldn't be removed where it's at and replace what's in "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/master/stdlib/LinearAlgebra/src/generic.jl#L1027"},{"type":"text","text":" to make the generic case non-allocating? I only noticed because "},{"type":"text","text":"tr","style":{"code":true}},{"type":"text","text":" for a "},{"type":"text","text":"Symmetric","style":{"code":true}},{"type":"text","text":" dense matrix was falling back to the generic.jl method"}]}]}],"thread_ts":"1609184689.105000","reply_count":2,"reply_users_count":2,"latest_reply":"1609185794.105300","reply_users":["UM30MT6RF","U680T6770"],"subscribed":false},{"client_msg_id":"83ea5a66-310f-4225-afc5-ea64ca74d10d","type":"message","text":"What is the best way to do matrix multiplications of the form `C .+= A*P*A^T`, where `P` and `C` are `positive definite` matrices. The code should be compatible with `ForwardDiff`, meaning any of the elements of `A`, `P` or `C` could be of `Dual` type.","user":"UQEDP1Q5V","ts":"1609783009.111600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KOYR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the best way to do matrix multiplications of the form "},{"type":"text","text":"C .+= A*P*A^T","style":{"code":true}},{"type":"text","text":", where "},{"type":"text","text":"P","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"C","style":{"code":true}},{"type":"text","text":" are "},{"type":"text","text":"positive definite","style":{"code":true}},{"type":"text","text":" matrices. The code should be compatible with "},{"type":"text","text":"ForwardDiff","style":{"code":true}},{"type":"text","text":", meaning any of the elements of "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"P","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"C","style":{"code":true}},{"type":"text","text":" could be of "},{"type":"text","text":"Dual","style":{"code":true}},{"type":"text","text":" type."}]}]}],"thread_ts":"1609783009.111600","reply_count":6,"reply_users_count":3,"latest_reply":"1609784282.112800","reply_users":["UCT7E536E","UQEDP1Q5V","U6A936746"],"subscribed":false},{"client_msg_id":"102e9e50-9b82-4687-8e1f-aabc9f5ae498","type":"message","text":"Question: if I were to extend `LinearAlgebra.diag` for an arbitrary dimension, what would it look like?  Would it be all of the indices that are the same (thus returning a vector)?  I.e., (1, 1, …, 1), (2, 2, …, 2), …, (n, n, …, n)?  Or would it be a diagonal hyperplane that is one dimension less than the given matrix?","user":"U014LRLJXRP","ts":"1609928080.115300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E8G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Question: if I were to extend "},{"type":"text","text":"LinearAlgebra.diag","style":{"code":true}},{"type":"text","text":" for an arbitrary dimension, what would it look like?  Would it be all of the indices that are the same (thus returning a vector)?  I.e., (1, 1, …, 1), (2, 2, …, 2), …, (n, n, …, n)?  Or would it be a diagonal hyperplane that is one dimension less than the given matrix?"}]}]}],"thread_ts":"1609928080.115300","reply_count":2,"reply_users_count":2,"latest_reply":"1609928795.115600","reply_users":["U014LRLJXRP","UD0NS8PDF"],"subscribed":false}]}