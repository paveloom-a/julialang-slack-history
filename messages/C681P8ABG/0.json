{"cursor": 0, "messages": [{"client_msg_id":"a18b6cbc-89dc-4890-b3d5-c0c6369ae492","type":"message","text":"Wow that's great! I moved to git repository-based output (<https://github.com/tkf/BenchmarkCI.jl#store-benchmark-result-in-a-git-branch-optional-very-experimental>) so I'm not personally annoyed by the comment spamming anymore. But this is a bit more involved to set up so \"inplace\" comment updating like yours is a really nice default. I _think_ it should be possible to write up GitHub API-based solution in BenchmarkCI.  But I wonder if it is better (easier to maintain) to just provide the set of actions you wrote up as a composite action?  <https://docs.github.com/en/free-pro-team@latest/actions/creating-actions/creating-a-composite-run-steps-action>","user":"UC7AF7NSU","ts":"1607911056.074000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UZTN0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow that's great! I moved to git repository-based output ("},{"type":"link","url":"https://github.com/tkf/BenchmarkCI.jl#store-benchmark-result-in-a-git-branch-optional-very-experimental"},{"type":"text","text":") so I'm not personally annoyed by the comment spamming anymore. But this is a bit more involved to set up so \"inplace\" comment updating like yours is a really nice default. I "},{"type":"text","text":"think","style":{"italic":true}},{"type":"text","text":" it should be possible to write up GitHub API-based solution in BenchmarkCI.  But I wonder if it is better (easier to maintain) to just provide the set of actions you wrote up as a composite action?  "},{"type":"link","url":"https://docs.github.com/en/free-pro-team@latest/actions/creating-actions/creating-a-composite-run-steps-action"}]}]}]},{"client_msg_id":"2c3ff1fa-7272-469c-bc97-8a29d34d957b","type":"message","text":"Just as a record: <https://github.com/tkf/BenchmarkCI.jl/issues/91>","user":"UC7AF7NSU","ts":"1607911294.074300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E3g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just as a record: "},{"type":"link","url":"https://github.com/tkf/BenchmarkCI.jl/issues/91"}]}]}]},{"client_msg_id":"904d4ee2-3a89-458b-8de1-e85cc8874b16","type":"message","text":"<@U674T0Y9Z> Can you help me tune some of the BaseBenchmarks better?","user":"U67BXBF99","ts":"1614272848.000900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VD42a","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U674T0Y9Z"},{"type":"text","text":" Can you help me tune some of the BaseBenchmarks better?"}]}]}],"reactions":[{"name":"jarrett","users":["U680THK2S"],"count":1}]},{"client_msg_id":"452dd43d-6253-4297-844c-433baf382477","type":"message","text":"I want to make it take 0.2s for `[\"scalar\", \"sinh\"]` instead of 2s","user":"U67BXBF99","ts":"1614273160.001300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WzK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I want to make it take 0.2s for "},{"type":"text","text":"[\"scalar\", \"sinh\"]","style":{"code":true}},{"type":"text","text":" instead of 2s"}]}]}]},{"client_msg_id":"3bae0060-5883-4a8f-a916-6235fb15c968","type":"message","text":"ah, wait, as I look closer, maybe that is a dumb question","user":"U67BXBF99","ts":"1614273613.001700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vn8pU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, wait, as I look closer, maybe that is a dumb question"}]}]}]},{"client_msg_id":"c3d70c20-6a6c-483d-a07b-5b621ec2dc72","type":"message","text":"Turns out all that time is in the `GC.gc()`, not the test","user":"U67BXBF99","ts":"1614273708.002300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RKCPr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Turns out all that time is in the "},{"type":"text","text":"GC.gc()","style":{"code":true}},{"type":"text","text":", not the test"}]}]}]},{"client_msg_id":"45b4d6fc-af52-46c5-9476-e2890f55bc86","type":"message","text":"you can still make that faster though :troll:","user":"UH24GRBLL","ts":"1614276583.002700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PNo3d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can still make that faster though "},{"type":"emoji","name":"troll"}]}]}]},{"client_msg_id":"33228ebf-759d-4695-bb82-1c5b78de9230","type":"message","text":"Yeah, turns out this package is more of a GC benchmark than anything else","user":"U67BXBF99","ts":"1614279078.003300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jm5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, turns out this package is more of a GC benchmark than anything else"}]}]}]},{"client_msg_id":"15bf4f43-83a6-4f9e-8e0c-c093b2850bc8","type":"message","text":"(running a single benchmark uses about 4MB of overhead)","user":"U67BXBF99","ts":"1614279095.003700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cmq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(running a single benchmark uses about 4MB of overhead)"}]}]}]},{"client_msg_id":"12572335-64fa-49f2-88b7-fa154a983dd8","type":"message","text":"<@U674T0Y9Z> are you okay with <https://github.com/JuliaCI/BenchmarkTools.jl/pull/192>?","user":"U67BXBF99","ts":"1614279103.004000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WW7rs","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U674T0Y9Z"},{"type":"text","text":" are you okay with "},{"type":"link","url":"https://github.com/JuliaCI/BenchmarkTools.jl/pull/192"},{"type":"text","text":"?"}]}]}],"thread_ts":"1614279103.004000","reply_count":8,"reply_users_count":2,"latest_reply":"1614279789.005700","reply_users":["U674T0Y9Z","U67BXBF99"],"subscribed":false},{"client_msg_id":"a26d2699-df46-488a-a5fa-9f3c35482994","type":"message","text":"Could we have different tuning profiles controllable by `@nanosoldier` argument? I’m wondering how much difference it would make to run with, e.g.:","user":"U67BXBF99","ts":"1614291706.007100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J7mJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could we have different tuning profiles controllable by "},{"type":"text","text":"@nanosoldier","style":{"code":true}},{"type":"text","text":" argument? I’m wondering how much difference it would make to run with, e.g.:"}]}]}]},{"client_msg_id":"24096f9a-e3cf-4600-9b0a-29e51bfa6fc1","type":"message","text":"```diff --git a/src/BaseBenchmarks.jl b/src/BaseBenchmarks.jl\nindex ed5ddf4..ed1ecb1 100644\n--- a/src/BaseBenchmarks.jl\n+++ b/src/BaseBenchmarks.jl\n@@ -2,10 +2,15 @@ module BaseBenchmarks\n \n using BenchmarkTools\n \n-BenchmarkTools.DEFAULT_PARAMETERS.seconds = 1.0\n-BenchmarkTools.DEFAULT_PARAMETERS.samples = 10000\n-BenchmarkTools.DEFAULT_PARAMETERS.time_tolerance = 0.15\n-BenchmarkTools.DEFAULT_PARAMETERS.memory_tolerance = 0.01\n+function __init__()\n+    # TODO: scope this to `load!` somehow?\n+    BenchmarkTools.DEFAULT_PARAMETERS.seconds = 0.2\n+    BenchmarkTools.DEFAULT_PARAMETERS.samples = 2000\n+    BenchmarkTools.DEFAULT_PARAMETERS.time_tolerance = 0.15\n+    BenchmarkTools.DEFAULT_PARAMETERS.memory_tolerance = 0.01\n+    BenchmarkTools.DEFAULT_PARAMETERS.gctrial = false\n+    nothing\n+end\n \n const PARAMS_PATH = joinpath(dirname(@__FILE__), \"..\", \"etc\", \"params.json\")\n const SUITE = BenchmarkGroup()```","user":"U67BXBF99","ts":"1614291709.007300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gWxJ","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"diff --git a/src/BaseBenchmarks.jl b/src/BaseBenchmarks.jl\nindex ed5ddf4..ed1ecb1 100644\n--- a/src/BaseBenchmarks.jl\n+++ b/src/BaseBenchmarks.jl\n@@ -2,10 +2,15 @@ module BaseBenchmarks\n \n using BenchmarkTools\n \n-BenchmarkTools.DEFAULT_PARAMETERS.seconds = 1.0\n-BenchmarkTools.DEFAULT_PARAMETERS.samples = 10000\n-BenchmarkTools.DEFAULT_PARAMETERS.time_tolerance = 0.15\n-BenchmarkTools.DEFAULT_PARAMETERS.memory_tolerance = 0.01\n+function __init__()\n+    # TODO: scope this to `load!` somehow?\n+    BenchmarkTools.DEFAULT_PARAMETERS.seconds = 0.2\n+    BenchmarkTools.DEFAULT_PARAMETERS.samples = 2000\n+    BenchmarkTools.DEFAULT_PARAMETERS.time_tolerance = 0.15\n+    BenchmarkTools.DEFAULT_PARAMETERS.memory_tolerance = 0.01\n+    BenchmarkTools.DEFAULT_PARAMETERS.gctrial = false\n+    nothing\n+end\n \n const PARAMS_PATH = joinpath(dirname(@__FILE__), \"..\", \"etc\", \"params.json\")\n const SUITE = BenchmarkGroup()"}]}]}]},{"client_msg_id":"4a380022-358c-4ddf-a599-85a515e6fd98","type":"message","text":"```julia&gt; @time BaseBenchmarks.run(BaseBenchmarks.SUITE[[\"scalar\"]])\n121.342261 seconds (231.33 M allocations: 14.032 GiB, 14.37% gc time, 87.36% compilation time)```","user":"U67BXBF99","ts":"1614291890.007600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vf3Ug","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @time BaseBenchmarks.run(BaseBenchmarks.SUITE[[\"scalar\"]])\n121.342261 seconds (231.33 M allocations: 14.032 GiB, 14.37% gc time, 87.36% compilation time)"}]}]}]},{"client_msg_id":"42e0cff5-e55b-4627-be38-0f3de28f1c28","type":"message","text":"(after retuning)","user":"U67BXBF99","ts":"1614291895.007800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bKNV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(after retuning)"}]}]}]},{"client_msg_id":"18d9aee7-df70-46d2-82e3-0e16e2a3974e","type":"message","text":"vs","user":"U67BXBF99","ts":"1614293117.008000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cQaF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"vs"}]}]}]},{"client_msg_id":"75aded3e-2180-4c58-b146-30c01fb75818","type":"message","text":"```775.401982 seconds (252.19 M allocations: 15.844 GiB, 85.73% gc time, 13.43% compilation time)```","user":"U67BXBF99","ts":"1614293124.008500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0h2MY","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"775.401982 seconds (252.19 M allocations: 15.844 GiB, 85.73% gc time, 13.43% compilation time)"}]}]}]},{"client_msg_id":"fb424e03-d2c1-4638-8137-9407e7e31570","type":"message","text":"(currently)","user":"U67BXBF99","ts":"1614293127.008700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hfH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(currently)"}]}]}]},{"client_msg_id":"4d2fadcd-6f5a-48dc-97f0-a338643ecc9c","type":"message","text":"<@U674T0Y9Z> are you okay with <https://github.com/JuliaCI/Nanosoldier.jl/pull/86>, or who should comment?","user":"U67BXBF99","ts":"1614316041.009100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zqz","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U674T0Y9Z"},{"type":"text","text":" are you okay with "},{"type":"link","url":"https://github.com/JuliaCI/Nanosoldier.jl/pull/86"},{"type":"text","text":", or who should comment?"}]}]}]},{"client_msg_id":"8239fe41-1665-4cfe-8324-ce1de49fe7d3","type":"message","text":"I’m essentially already running that in prod now :joy:","user":"U67BXBF99","ts":"1614316056.009500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cRtu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m essentially already running that in prod now "},{"type":"emoji","name":"joy"}]}]}]}]}