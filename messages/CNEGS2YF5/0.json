{"cursor": 3, "messages": [{"type":"message","subtype":"bot_message","text":"This form natively solvable by some special hardware platforms.  Quantum Annealing, Digital Annealing, Memristor networks, optical networks, <https://arxiv.org/abs/1707.00355>","ts":"1616169057.018900","username":"[gitter] <ccoffrin>","bot_id":"B795XHD0X","attachments":[{"service_name":"arXiv.org","title":"Evaluating Ising Processing Units with Integer Programming","title_link":"https://arxiv.org/abs/1707.00355","text":"The recent emergence of novel computational devices, such as adiabatic quantum computers, CMOS annealers, and optical parametric oscillators, present new opportunities for hybrid-optimization...","fallback":"arXiv.org: Evaluating Ising Processing Units with Integer Programming","from_url":"https://arxiv.org/abs/1707.00355","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/1707.00355"}],"blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"This form natively solvable by some special hardware platforms.  Quantum Annealing, Digital Annealing, Memristor networks, optical networks, <https://arxiv.org/abs/1707.00355>","verbatim":false}}],"edited":{"user":"B795XHD0X","ts":"1616169058.000000"}},{"client_msg_id":"8f2f0e49-0be8-425b-9e40-39a9aebe5a89","type":"message","text":"I will have to read up on QUBO.","user":"U9MD78Z9N","ts":"1616169684.023500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kKC81","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I will have to read up on QUBO."}]}]}]},{"client_msg_id":"aa0b9054-4f64-4162-8bb4-bbc2c51a4aea","type":"message","text":"&gt; If a model has one coefficient whose type can't be inferred in the lowering stage, what do you do? Fall back on a super slow version?","user":"U69BL50BF","ts":"1616170043.023800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rHzk","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If a model has one coefficient whose type can't be inferred in the lowering stage, what do you do? Fall back on a super slow version?"}]}]}]},{"client_msg_id":"fa32bb49-12e5-4ea1-adb1-96bd0fda928d","type":"message","text":"Quasi-static implies (/requires) inference.","user":"U69BL50BF","ts":"1616170054.024100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JeBY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Quasi-static implies (/requires) inference."}]}]}],"thread_ts":"1616170054.024100","reply_count":13,"reply_users_count":2,"latest_reply":"1616171304.026800","reply_users":["U66N673NV","U69BL50BF"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"So yes, the options are to either fall back to a super slow version or error out, correct? What does MTK do?","user":"U66N673NV","ts":"1616170243.024200","thread_ts":"1616170054.024100","root":{"client_msg_id":"fa32bb49-12e5-4ea1-adb1-96bd0fda928d","type":"message","text":"Quasi-static implies (/requires) inference.","user":"U69BL50BF","ts":"1616170054.024100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JeBY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Quasi-static implies (/requires) inference."}]}]}],"thread_ts":"1616170054.024100","reply_count":13,"reply_users_count":2,"latest_reply":"1616171304.026800","reply_users":["U66N673NV","U69BL50BF"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"Eds","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So yes, the options are to either fall back to a super slow version or error out, correct? What does MTK do?"}]}]}],"client_msg_id":"b1ba2b9f-92d6-4039-9143-b6fd8890866f"},{"type":"message","subtype":"bot_message","text":"Looks like Microsoft is using JuMP: <https://github.com/microsoft/OpticSim.jl>","ts":"1616339588.040700","username":"[gitter] <blegat>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-11-13/270732745649_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Looks like Microsoft is using JuMP: <https://github.com/microsoft/OpticSim.jl>","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Nice!!!","ts":"1616344571.040800","username":"[gitter] <ccoffrin>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Nice!!!","verbatim":false}}]},{"type":"message","text":"Is there something like blackbox MILP?\nI sometimes have tons of constrained variables which just represent some internal logic, If i could have a define a blackbox function that evaluates relaxations of the objective over variables and with certain variables and have the inputs of the non linear function constraint that might help or atleast be interesting to try.","user":"U9MD78Z9N","ts":"1616427818.040900","team":"T68168MUP"},{"type":"message","text":"Example, i have a n*m variable problem but in order to define my objective i need to introduce like n*(n-1)*(m+1) additional variables which are constrained in and, or, ... constraints.\n\nSince these constraints basically encodes sum(w[i,j]*x[j,k]*x[i,k]) where w is constant milp actually able to build somewhat non linear functions?","user":"U9MD78Z9N","ts":"1616428043.041000","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1616430550.000000"}},{"client_msg_id":"d6db1a72-1be2-4b4c-a738-1a26431d0217","type":"message","text":"not sure this matches your use case but have you looked at callbacks? Using lazy constraints defined on callbacks, one can add some custom function that gets called to potentially add constraints","user":"U82RE6STE","ts":"1616431440.042700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nHvQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not sure this matches your use case but have you looked at callbacks? Using lazy constraints defined on callbacks, one can add some custom function that gets called to potentially add constraints"}]}]}]},{"type":"message","text":"Thank for the sugestions, callbacks don't really suit my case.","user":"U9MD78Z9N","ts":"1616433158.042800","team":"T68168MUP"},{"type":"message","subtype":"bot_message","text":"Hi there. I am back (again) to interfacing MOI and JuMP with my solver. If my understanding is correct, JuMP variables are only defined through floats. For instance, ``` @variable(model, 1 ≤ x ≤ 9) ``` `1` and `9` are actually considered as floats, isn't it? My real question is, in the actual state of JuMP, I cannot differentiate  `@variable(model, 1 ≤ x ≤ 9)` and `@variable(model, 1 .≤ x ≤ 9.)` ?","ts":"1616470813.043000","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Hi there. I am back (again) to interfacing MOI and JuMP with my solver.\nIf my understanding is correct, JuMP variables are only defined through floats. For instance,\n```\n@variable(model, 1 ≤ x ≤ 9)\n```\n`1` and `9` are actually considered as floats, isn't it?\nMy real question is, in the actual state of JuMP, I cannot differentiate \n`@variable(model, 1 ≤ x ≤ 9)` and `@variable(model, 1 .≤ x ≤ 9.)` ?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Even a workaround such as `@variable(model, 1 ≤ x ≤ 9, IntegeterSet())` is fine.","ts":"1616471308.043100","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Even a workaround such as `@variable(model, 1 ≤ x ≤ 9, IntegeterSet())` is fine.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Maybe I should look on how to define MIP in JuMP, it might give me some clues","ts":"1616471347.043200","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Maybe I should look on how to define MIP in JuMP, it might give me some clues","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"It seems I can write this (which is nice) ``` julia&gt; @variable(model, 1 ≤ x ≤ 9, Int) x  julia&gt; optimize!(model) ┌ Info: interval MOI └   i = MathOptInterface.Interval{Float64}(1.0, Inf) ``` It seems it first decompose the Interval stuff into GreaterThan, which I have to figure out how to handle, but still the type passed to GreaterThan is a float. Any idea of what I should consider to have `@variable(model, 1 ≤ x ≤ 9, Int)` work as I intend?","ts":"1616473310.043300","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"It seems I can write this (which is nice)\n```\njulia&gt; @variable(model, 1 ≤ x ≤ 9, Int)\nx\n\njulia&gt; optimize!(model)\n┌ Info: interval MOI\n└   i = MathOptInterface.Interval{Float64}(1.0, Inf)\n```\nIt seems it first decompose the Interval stuff into GreaterThan, which I have to figure out how to handle, but still the type passed to GreaterThan is a float.\nAny idea of what I should consider to have `@variable(model, 1 ≤ x ≤ 9, Int)` work as I intend?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Sorry for the spam, I think I found where to begin with `MOI.supports_constraint(::Optimizer, ::Type{SVF}, ::Type{&lt;:MOI.Integer}) = true` Please ignore my previous messages (I might be stuck soon though haha)","ts":"1616473757.043400","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Sorry for the spam, I think I found where to begin with `MOI.supports_constraint(::Optimizer, ::Type{SVF}, ::Type{&lt;:MOI.Integer}) = true`\nPlease ignore my previous messages (I might be stuck soon though haha)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"For now, JuMP only supports `Float64` as the coefficient type.","ts":"1616474866.043500","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"For now, JuMP only supports `Float64` as the coefficient type.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"It seems it should be OK. Based on my tests, when `@variable(model, 1 ≤ x ≤ 9, Int)` is used, the integrality constraint is applied first, so I can use this info to handle `1 ≤ x ≤ 9` accordingly","ts":"1616474999.043600","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"It seems it should be OK. Based on my tests, when `@variable(model, 1 ≤ x ≤ 9, Int)` is used, the integrality constraint is applied first, so I can use this info to handle `1 ≤ x ≤ 9` accordingly","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Assuming I have a constraint index such as `MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer}(1)`, how can I check its existence in my `model`? I will try to find in the MOI docs, but in case someone knows and can tell before I find it out ...","ts":"1616476754.043700","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Assuming I have a constraint index such as `MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer}(1)`, how can I check its existence in my `model`?\nI will try to find in the MOI docs, but in case someone knows and can tell before I find it out ...","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I think I am supposed to use `is_valid` but it seems I am missing something about what `ModelLike` is ``` julia&gt; optimize!(model) ┌ Info: integer │   v = MathOptInterface.SingleVariable(MathOptInterface.VariableIndex(1)) └   MOI.ConstraintIndex{SVF, MOI.Integer}(vidx) = MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer}(1) ┌ Info: interval MOI └   i = MathOptInterface.Interval{Float64}(1.0, Inf) ┌ Error: Exception while generating log record in module CBLS at C:\\Users\\jeanf\\.julia\\dev\\CBLS\\src\\variables.jl:71 │   exception = │    MethodError: no method matching is_valid(::typeof(LocalSearchSolvers.model), ::MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer}) │    Closest candidates are: │      is_valid(::Union{MathOptInterface.Utilities.AbstractModelLike{T}, MathOptInterface.Utilities.AbstractOptimizer{T}} where T, ::MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, S}) where S at C:\\Users\\jeanf\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\model.jl:304 │      is_valid(::Union{MathOptInterface.Utilities.AbstractModelLike{T}, MathOptInterface.Utilities.AbstractOptimizer{T}} where T, ::MathOptInterface.ConstraintIndex{F, S}) where {F, S} at C:\\Users\\jeanf\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\model.jl:313 │      is_valid(::MathOptInterface.Utilities.MockOptimizer, ::Union{MathOptInterface.VariableIndex, MathOptInterface.ConstraintIndex}) at C:\\Users\\jeanf\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\mockoptimizer.jl:628 ```","ts":"1616478791.043800","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"I think I am supposed to use `is_valid` but it seems I am missing something about what `ModelLike` is\n```\njulia&gt; optimize!(model)\n┌ Info: integer\n│   v = MathOptInterface.SingleVariable(MathOptInterface.VariableIndex(1))\n└   MOI.ConstraintIndex{SVF, MOI.Integer}(vidx) = MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer}(1)\n┌ Info: interval MOI\n└   i = MathOptInterface.Interval{Float64}(1.0, Inf)\n┌ Error: Exception while generating log record in module CBLS at C:\\Users\\jeanf\\.julia\\dev\\CBLS\\src\\variables.jl:71\n│   exception =\n│    MethodError: no method matching is_valid(::typeof(LocalSearchSolvers.model), ::MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer})\n│    Closest candidates are:\n│      is_valid(::Union{MathOptInterface.Utilities.AbstractModelLike{T}, MathOptInterface.Utilities.AbstractOptimizer{T}} where T, ::MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, S}) where S at C:\\Users\\jeanf\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\model.jl:304\n│      is_valid(::Union{MathOptInterface.Utilities.AbstractModelLike{T}, MathOptInterface.Utilities.AbstractOptimizer{T}} where T, ::MathOptInterface.ConstraintIndex{F, S}) where {F, S} at C:\\Users\\jeanf\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\model.jl:313\n│      is_valid(::MathOptInterface.Utilities.MockOptimizer, ::Union{MathOptInterface.VariableIndex, MathOptInterface.ConstraintIndex}) at C:\\Users\\jeanf\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\mockoptimizer.jl:628\n```","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Isn't the model generated by `JuMP.Model` a ModelLike ?","ts":"1616478867.043900","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Isn't the model generated by `JuMP.Model` a ModelLike ?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"It seems I have to dive into MOI.Utilities!","ts":"1616479148.044000","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"It seems I have to dive into MOI.Utilities!","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"The basic rule is, keep implementing missing methods until the tests pass.","ts":"1616479416.044100","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"The basic rule is, keep implementing missing methods until the tests pass.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"In this case, you need to implement `is_valid(::typeof(LocalSearchSolvers.model), ::MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer})`. It should return `true` if the constraint index is valid (i.e., it refers to an actual constraint), and `false` otherwise.","ts":"1616479473.044200","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"In this case, you need to implement `is_valid(::typeof(LocalSearchSolvers.model), ::MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer})`. It should return `true` if the constraint index is valid (i.e., it refers to an actual constraint), and `false` otherwise.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I've been rewriting the MOI docs, so take a look at the `dev` docs: <https://jump.dev/MathOptInterface.jl/dev/submodules/Utilities/overview/>","ts":"1616479507.044300","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"I've been rewriting the MOI docs, so take a look at the `dev` docs: <https://jump.dev/MathOptInterface.jl/dev/submodules/Utilities/overview/>","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Thanks @odow I will look at the dev docs (and implement this `is_valid` method)","ts":"1616479544.044400","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Thanks @odow I will look at the dev docs (and implement this `is_valid` method)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"OK, it is fixed, but now it seems I run into another trouble. It seems that by default, `MOI.Interval` is deconstructed into `MOI.LessThan` and `MOI.GreaterThan` which doesn't fit the bill here (as I don't handle them in the same way, because of Inf bound). Is that a bridge thing (that I have not yet tried) ?","ts":"1616482190.044500","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"OK, it is fixed, but now it seems I run into another trouble. It seems that by default, `MOI.Interval` is deconstructed into `MOI.LessThan` and `MOI.GreaterThan` which doesn't fit the bill here (as I don't handle them in the same way, because of Inf bound). Is that a bridge thing (that I have not yet tried) ?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"FYI, I haven't defined anything related to LessThan and GreaterThan yet. But it will still not be compatible later (because of Inf bound)","ts":"1616482258.044600","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"FYI, I haven't defined anything related to LessThan and GreaterThan yet. But it will still not be compatible later (because of Inf bound)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"The standard was is to cache the two bounds and add them later, if you can't add one-by-one.","ts":"1616482784.044700","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"The standard was is to cache the two bounds and add them later, if you can't add one-by-one.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"You could also try `@variable(model, x in MOI.Interval(0.0, 1.0))`","ts":"1616482810.044800","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"You could also try `@variable(model, x in MOI.Interval(0.0, 1.0))`","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"And then implement `MOI.add_constrained_variable(model, set::MOI.Interval)`","ts":"1616482830.044900","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"And then implement `MOI.add_constrained_variable(model, set::MOI.Interval)`","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"To give an example more comprehensive than my rumble: ``` julia&gt; @variable(model, 1 ≤ x ≤ 9, Int) # Here the interval is from 1 to 9 x  julia&gt; optimize!(model) ┌ Info: integer │   v = MathOptInterface.SingleVariable(MathOptInterface.VariableIndex(1)) └   MOI.ConstraintIndex{SVF, MOI.Integer}(vidx) = MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer}(1) ┌ Info: interval MOI └   i = MathOptInterface.Interval{Float64}(1.0, Inf) # here the interval is from1 to Inf ```","ts":"1616482844.045000","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"To give an example more comprehensive than my rumble:\n```\njulia&gt; @variable(model, 1 ≤ x ≤ 9, Int) # Here the interval is from 1 to 9\nx\n\njulia&gt; optimize!(model)\n┌ Info: integer\n│   v = MathOptInterface.SingleVariable(MathOptInterface.VariableIndex(1))\n└   MOI.ConstraintIndex{SVF, MOI.Integer}(vidx) = MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.Integer}(1)\n┌ Info: interval MOI\n└   i = MathOptInterface.Interval{Float64}(1.0, Inf) # here the interval is from1 to Inf\n```","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I see. I will try to cache the two bounds as it would allow me to keep the nice syntax.","ts":"1616482993.045100","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"I see. I will try to cache the two bounds as it would allow me to keep the nice syntax.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Ah. It's because you've declared you can't support `GreaterThan`, so then it get's bridged to the `Interval`.","ts":"1616483158.045200","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Ah. It's because you've declared you can't support `GreaterThan`, so then it get's bridged to the `Interval`.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"But it looks like the opposite, I actually want to avoid `GreaterThan` and `LessThan` in the case I use `@variable(model, 1 ≤ x ≤ 9, Int)` I plan to support infinite bounds eventually, but my solver is not ready for it &gt;&lt;","ts":"1616483610.045300","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"But it looks like the opposite, I actually want to avoid `GreaterThan` and `LessThan` in the case I use `@variable(model, 1 ≤ x ≤ 9, Int)`\nI plan to support infinite bounds eventually, but my solver is not ready for it &gt;&lt;","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Let me try with not setting GreaterThan support to false to see the difference","ts":"1616483751.045400","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Let me try with not setting GreaterThan support to false to see the difference","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"It doesn't change much, so by going through the error messages, it seems that things go awry when the default_copy_to function is called. Something like that: ```  [20] add_constraints(b::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, f::Vector{MathOptInterface.SingleVariable}, s::Vector{MathOptInterface.GreaterThan{Float64}})     @ MathOptInterface.Bridges ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Bridges\\bridge_optimizer.jl:1354  [21] copy_constraints(dest::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, src::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, idxmap::MathOptInterface.Utilities.IndexMap, cis_src::Vector{MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.GreaterThan{Float64}}}, filter_constraints::Nothing)     @ MathOptInterface.Utilities ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\copy.jl:416  [22] copy_constraints(dest::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, src::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, idxmap::MathOptInterface.Utilities.IndexMap, cis_src::Vector{MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.GreaterThan{Float64}}})     @ MathOptInterface.Utilities ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\copy.jl:406  [23] pass_constraints(dest::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, src::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, copy_names::Bool, idxmap::MathOptInterface.Utilities.IndexMap, single_variable_types::Vector{Type{var\"#s312\"} where var\"#s312\"&lt;:MathOptInterface.AbstractScalarSet}, single_variable_indices::Vector{Vector{var\"#s280\"} where var\"#s280\"&lt;:(MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, S} where S)}, vector_of_variables_types::Vector{Type{var\"#s319\"} where var\"#s319\"&lt;:MathOptInterface.AbstractVectorSet}, vector_of_variables_indices::Vector{Vector{var\"#s314\"} where var\"#s314\"&lt;:(MathOptInterface.ConstraintIndex{MathOptInterface.VectorOfVariables, S} where S)}, pass_cons::typeof(MathOptInterface.Utilities.copy_constraints), pass_attr::typeof(MathOptInterface.set); filter_constraints::Nothing)     @ MathOptInterface.Utilities ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\copy.jl:443  [24] default_copy_to(dest::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, src::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, copy_names::Bool, filter_constraints::Nothing)     @ MathOptInterface.Utilities ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\copy.jl:652 ``` So, with my limited understanding of bridges, it seems that the LazyBridgeOptimizer calls `GreaterThan`. Is there a way to tell him to avoid this case and to call `Interval`? That is what I tried by setting the support of GreaterThan to false, but it still tried to use it","ts":"1616484053.045500","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"It doesn't change much, so by going through the error messages, it seems that things go awry when the default_copy_to function is called. Something like that:\n```\n [20] add_constraints(b::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, f::Vector{MathOptInterface.SingleVariable}, s::Vector{MathOptInterface.GreaterThan{Float64}})\n    @ MathOptInterface.Bridges ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Bridges\\bridge_optimizer.jl:1354\n [21] copy_constraints(dest::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, src::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, idxmap::MathOptInterface.Utilities.IndexMap, cis_src::Vector{MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.GreaterThan{Float64}}}, filter_constraints::Nothing)\n    @ MathOptInterface.Utilities ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\copy.jl:416\n [22] copy_constraints(dest::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, src::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, idxmap::MathOptInterface.Utilities.IndexMap, cis_src::Vector{MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, MathOptInterface.GreaterThan{Float64}}})\n    @ MathOptInterface.Utilities ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\copy.jl:406\n [23] pass_constraints(dest::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, src::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, copy_names::Bool, idxmap::MathOptInterface.Utilities.IndexMap, single_variable_types::Vector{Type{var\"#s312\"} where var\"#s312\"&lt;:MathOptInterface.AbstractScalarSet}, single_variable_indices::Vector{Vector{var\"#s280\"} where var\"#s280\"&lt;:(MathOptInterface.ConstraintIndex{MathOptInterface.SingleVariable, S} where S)}, vector_of_variables_types::Vector{Type{var\"#s319\"} where var\"#s319\"&lt;:MathOptInterface.AbstractVectorSet}, vector_of_variables_indices::Vector{Vector{var\"#s314\"} where var\"#s314\"&lt;:(MathOptInterface.ConstraintIndex{MathOptInterface.VectorOfVariables, S} where S)}, pass_cons::typeof(MathOptInterface.Utilities.copy_constraints), pass_attr::typeof(MathOptInterface.set); filter_constraints::Nothing)\n    @ MathOptInterface.Utilities ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\copy.jl:443\n [24] default_copy_to(dest::MathOptInterface.Bridges.LazyBridgeOptimizer{CBLS.Optimizer}, src::MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}, copy_names::Bool, filter_constraints::Nothing)\n    @ MathOptInterface.Utilities ~\\.julia\\packages\\MathOptInterface\\5WwpK\\src\\Utilities\\copy.jl:652\n```\nSo, with my limited understanding of bridges, it seems that the LazyBridgeOptimizer calls `GreaterThan`. Is there a way to tell him to avoid this case and to call `Interval`?\nThat is what I tried by setting the support of GreaterThan to false, but it still tried to use it","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"(update: I am trying with a new session, just in case Revise.jl is making a silent mess of my changes)","ts":"1616484193.045600","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"(update: I am trying with a new session, just in case Revise.jl is making a silent mess of my changes)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I confirm that wether or not I set support of `GreaterThan` to false, it still out put the error below (in particular [20] where it calls GreaterThan). Is that an intended behavior?","ts":"1616484446.045700","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"I confirm that wether or not I set support of `GreaterThan` to false, it still out put the error below (in particular [20] where it calls GreaterThan). Is that an intended behavior?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"FYI, I am really trying this to have a nicer syntax, as I already have a handmade structure (thanks to @odow as usual) to handle discrete sets, including integers in a range. I can do `@variable(model, x, DiscreteSet(1:9))` Still, it is not as neat as `@variable(model, 1 ≤ x ≤ 9, Int)` which does not require the user to remember an unusual name (in JuMP) such as DiscreteSet","ts":"1616485014.045800","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"FYI, I am really trying this to have a nicer syntax, as I already have a handmade structure (thanks to @odow as usual) to handle discrete sets, including integers in a range. I can do `@variable(model, x, DiscreteSet(1:9))`\nStill, it is not as neat as `@variable(model, 1 ≤ x ≤ 9, Int)` which does not require the user to remember an unusual name (in JuMP) such as DiscreteSet","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"&gt; I confirm that wether or not I set support of `GreaterThan` to false, it still out put the error below (in particular [20] where it calls GreaterThan). Is that an intended behavior?  Sorry, GreaterThan is called for the first time in [22]","ts":"1616485515.045900","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"&gt; I confirm that wether or not I set support of `GreaterThan` to false, it still out put the error below (in particular [20] where it calls GreaterThan). Is that an intended behavior?\n\nSorry, GreaterThan is called for the first time in [22]","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"If you want to support `1 &lt;= x &lt;= 9, Int`, you need to support adding `GreaterThan`, `LessThan`, and `Integer` constraints individually. ","ts":"1616485853.046000","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"If you want to support `1 &lt;= x &lt;= 9, Int`, you need to support adding `GreaterThan`, `LessThan`, and `Integer` constraints individually. ","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Understood! Guess I'm gonna have to take care of that sooner rather than later! Thanks again @odow ","ts":"1616486714.046100","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Understood! Guess I'm gonna have to take care of that sooner rather than later! Thanks again @odow ","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I could make things work thanks to the previous explanations. There is one more thing (sorry that it never stops ...), is there a way to ensure that some constraints are applied before others? (`Int` first would make things elementary here)","ts":"1616571929.046200","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"I could make things work thanks to the previous explanations. There is one more thing (sorry that it never stops ...), is there a way to ensure that some constraints are applied before others? (`Int` first would make things elementary here)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"If I can't, I will have to cache everything ...","ts":"1616572075.046300","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"If I can't, I will have to cache everything ...","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"You could support only `copy_to` and let JuMP do the caching.","ts":"1616598914.046400","username":"[gitter] <mlubin>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2019-09-29/770521255553_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"You could support only `copy_to` and let JuMP do the caching.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Either you have to accept constraints in any order, or you load the model all at once with `copy_to`","ts":"1616598967.046500","username":"[gitter] <mlubin>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2019-09-29/770521255553_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Either you have to accept constraints in any order, or you load the model all at once with `copy_to`","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I see. I found the related info in the doc. I will try both and see the perf trade-off","ts":"1616620496.046600","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"I see. I found the related info in the doc. I will try both and see the perf trade-off","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Thanks you <@U66N673NV> ","ts":"1616620510.046700","username":"[gitter] <Azzaare>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Thanks you <@U66N673NV> ","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"@/all The monthly developer call will be tomorrow, March 25th at 2pm US Eastern time (Note there was a recent daylight savings shift). Please add items to the agenda. Ping me or @odow for an invite.","ts":"1616633405.046800","username":"[gitter] <mlubin>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2019-09-29/770521255553_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"@/all The monthly developer call will be tomorrow, March 25th at 2pm US Eastern time (Note there was a recent daylight savings shift). Please add items to the agenda. Ping me or @odow for an invite.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Hi all, I have a somewhat odd question on an unusual use of JuMP. So I understand if the answer is “no we can’t do that”. When building large Power Systems problems there is the potential for the model to have bad scaling. Actually it is common to have bad scaling. Many tools do automatic rescaling like Plexos or RPM, but they do it directly on the A matrix before is sent to the solver.   The best thing for us to maintain solver independent modeling would be to resolve this in JuMP. Is there anyway in JuMP to diagnose and potentially resolve scaling problems in the cached problem before it is sent to the solver? Or any ideas to implement at least a check of potential scaling problems? ","ts":"1616693809.046900","username":"[gitter] <jd-lara>","bot_id":"B795XHD0X","thread_ts":"1616693809.046900","reply_count":1,"reply_users_count":1,"latest_reply":"1616693849.047000","reply_users":["UCT7E536E"],"is_locked":false,"subscribed":false,"blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Hi all, I have a somewhat odd question on an unusual use of JuMP. So I understand if the answer is “no we can’t do that”. When building large Power Systems problems there is the potential for the model to have bad scaling. Actually it is common to have bad scaling. Many tools do automatic rescaling like Plexos or RPM, but they do it directly on the A matrix before is sent to the solver. \n\nThe best thing for us to maintain solver independent modeling would be to resolve this in JuMP. Is there anyway in JuMP to diagnose and potentially resolve scaling problems in the cached problem before it is sent to the solver? Or any ideas to implement at least a check of potential scaling problems? ","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"yes","ts":"1616693862.047200","username":"[gitter] <jd-lara>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"yes","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"the solvers even detected but sometimes the automated fixes withing the solvers give up ","ts":"1616693890.047500","username":"[gitter] <jd-lara>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"the solvers even detected but sometimes the automated fixes withing the solvers give up ","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"We recently loaded a model of the whole Western US that is used in other software tools and got a lot numerical scaling warnings. Upon looking into the other tools’ logs it is clear they do rescaling before sending to the solver. We want to do something similar for PSI ","ts":"1616694008.049200","username":"[gitter] <jd-lara>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"We recently loaded a model of the whole Western US that is used in other software tools and got a lot numerical scaling warnings. Upon looking into the other tools’ logs it is clear they do rescaling before sending to the solver. We want to do something similar for PSI ","verbatim":false}}]},{"client_msg_id":"b2113887-9c97-4f1f-ba11-a5d67daf72f1","type":"message","text":"We have a working-basic presolve package here: <https://github.com/mtanneau/MathOptPresolve.jl>\nI would say it is still in an experiment state as of now, but we do have some scaling routines in there (nothing fancy, just very basic stuff).\n\nJoey made an MOI interface, so it should be possible (I use \"should\" because I never tried it myself) to hook to that, and essentially:\n• build the model with JuMP\n• pass it to MathOptPresolve, perform only scaling\n• pass the scaled model to the solver of your choice\nThis would all happen at the MOI level.","user":"UCT7E536E","ts":"1616694106.050800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1TYT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We have a working-basic presolve package here: "},{"type":"link","url":"https://github.com/mtanneau/MathOptPresolve.jl"},{"type":"text","text":"\nI would say it is still in an experiment state as of now, but we do have some scaling routines in there (nothing fancy, just very basic stuff).\n\nJoey made an MOI interface, so it should be possible (I use \"should\" because I never tried it myself) to hook to that, and essentially:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"build the model with JuMP"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"pass it to MathOptPresolve, perform only scaling"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"pass the scaled model to the solver of your choice"}]}],"style":"bullet","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"This would all happen at the MOI level."}]}]}]},{"type":"message","subtype":"bot_message","text":"Thanks, I will give it a try to see how it could work. ","ts":"1616694350.050900","username":"[gitter] <jd-lara>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Thanks, I will give it a try to see how it could work. ","verbatim":false}}]},{"client_msg_id":"aa7c7471-c2be-45c7-9a05-af67a1b9f6b5","type":"message","text":"(there's a very good chance something will break or won't work as expected. If so, do open an issue :slightly_smiling_face: )","user":"UCT7E536E","ts":"1616694514.051500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6zP2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(there's a very good chance something will break or won't work as expected. If so, do open an issue "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" )"}]}]}]},{"type":"message","subtype":"bot_message","text":"Thanks, this is good first step. We have noticed that this a real issue in large real data sets that most commercial tools “fixed” and its the next challenge to keep scaling up. ","ts":"1616694773.051600","username":"[gitter] <jd-lara>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Thanks, this is good first step. We have noticed that this a real issue in large real data sets that most commercial tools “fixed” and its the next challenge to keep scaling up. ","verbatim":false}}]},{"client_msg_id":"cab61be8-6956-4879-bd03-2795efaf9256","type":"message","text":"I am really looking forward to JuMP-Dev workshop when we can have it in person again","user":"U6A936746","ts":"1616701907.051700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"auWNV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am really looking forward to JuMP-Dev workshop when we can have it in person again"}]}]}],"reactions":[{"name":"100","users":["U82RE6STE"],"count":1}]},{"type":"message","subtype":"bot_message","text":"@jd-lara, after working with various models for many years, I am not convinced the root of the issue with  \"bad scaling\", although the problem's numerical scale does present some challenges as the model size increase.","ts":"1616706985.051900","username":"[gitter] <ccoffrin>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"@jd-lara, after working with various models for many years, I am not convinced the root of the issue with  \"bad scaling\", although the problem's numerical scale does present some challenges as the model size increase.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"What I have noticed over the years of building and maintaining PGLib is that every case that initially presents numerical issues was eventually found to have a clear modeling error, when resolved the numerical issue is then resolved","ts":"1616707036.052000","username":"[gitter] <ccoffrin>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"What I have noticed over the years of building and maintaining PGLib is that every case that initially presents numerical issues was eventually found to have a clear modeling error, when resolved the numerical issue is then resolved","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I would suggest focusing initially on data analytics for the input data, rather than the solvers or JuMP models.  When you solve really big power network it becomes a bit of a needle in a hay stack situation, where one incorrect line parameter can result in bad numerics for the whole problem","ts":"1616707157.052100","username":"[gitter] <ccoffrin>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"I would suggest focusing initially on data analytics for the input data, rather than the solvers or JuMP models.  When you solve really big power network it becomes a bit of a needle in a hay stack situation, where one incorrect line parameter can result in bad numerics for the whole problem","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Thanks @ccoffrin we are looking into that too, refining the model and finsing which rows have bad scaling","ts":"1616708169.052200","username":"[gitter] <jd-lara>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Thanks @ccoffrin we are looking into that too, refining the model and finsing which rows have bad scaling","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"and yeah, that data in large models is pretty bad ","ts":"1616708185.052300","username":"[gitter] <jd-lara>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"and yeah, that data in large models is pretty bad ","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"and commercial software obscure data issues often with heuristics on the model ","ts":"1616708203.052400","username":"[gitter] <jd-lara>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"and commercial software obscure data issues often with heuristics on the model ","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"In my experience the commercial software also has  a constant power balance tolerance of 0.01 p.u.,  which can easily hide data errors as well.  For low kV levels this can be similar to ignoring the power balance constraint.","ts":"1616715136.052500","username":"[gitter] <ccoffrin>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"In my experience the commercial software also has  a constant power balance tolerance of 0.01 p.u.,  which can easily hide data errors as well.  For low kV levels this can be similar to ignoring the power balance constraint.","verbatim":false}}]},{"type":"message","text":"Do you have any students for GSOC yet?","user":"U9MD78Z9N","ts":"1616887715.052800","team":"T68168MUP"},{"type":"message","text":"Did someone else eye the multi objective task?","user":"U9MD78Z9N","ts":"1616887751.052900","team":"T68168MUP"},{"type":"message","text":"Bridge down","user":"U9MD78Z9N","ts":"1617527667.053300","team":"T68168MUP"},{"type":"message","subtype":"bot_message","text":"Does JuMP/MOI if it provides one `VariablePrimalStart` and `...DualStart` for some variables/contraints always cover all slots or is it legal to not provide starting values for some slots?  If no guarantees: What am i supposed to do with partial assignment and a local solver? ","ts":"1617588384.053500","username":"[gitter] <freemin7>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c1l3qqkg27iehe2iuovg","text":{"type":"mrkdwn","text":"Does JuMP/MOI if it provides one `VariablePrimalStart` and `...DualStart` for some variables/contraints always cover all slots or is it legal to not provide starting values for some slots?\n\nIf no guarantees: What am i supposed to do with partial assignment and a local solver?\n","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"It's up to you and what experience you want to provide to users. You could throw an error, try to guess the values of the remaining variables, or set them to zero.","ts":"1617591848.053600","username":"[gitter] <mlubin>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2019-09-29/770521255553_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c1l3qqkg27iehe2iuovg","text":{"type":"mrkdwn","text":"It's up to you and what experience you want to provide to users. You could throw an error, try to guess the values of the remaining variables, or set them to zero.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"&gt; Would a constraint on x_1 to x_n, which says xi &lt; x{i+1} be fine?  Yes","ts":"1617610385.053700","username":"[gitter] <blegat>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-11-13/270732745649_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c1l3qqkg27iehe2iuovg","text":{"type":"mrkdwn","text":"&gt; Would a constraint on x_1 to x_n, which says xi &lt; x{i+1} be fine?\n\nYes","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"The function would be VectorOfVariables","ts":"1617610410.053800","username":"[gitter] <blegat>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-11-13/270732745649_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c1l3qqkg27iehe2iuovg","text":{"type":"mrkdwn","text":"The function would be VectorOfVariables","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"And the set would be like StrictlyIncreasing(n)","ts":"1617610475.053900","username":"[gitter] <blegat>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-11-13/270732745649_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c1l3qqkg27iehe2iuovg","text":{"type":"mrkdwn","text":"And the set would be like StrictlyIncreasing(n)","verbatim":false}}]},{"client_msg_id":"2b1bd7a0-56c7-4d30-a052-feef00e46439","type":"message","text":"Hey all - does this package sound like a a good addition to the JuMP ecosystem?\n<https://github.com/jmejia8/Metaheuristics.jl>","user":"U6QGE7S86","ts":"1617654187.054400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"98s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey all - does this package sound like a a good addition to the JuMP ecosystem?\n"},{"type":"link","url":"https://github.com/jmejia8/Metaheuristics.jl"}]}]}]},{"client_msg_id":"a5eece8d-ce69-48e0-8c24-0f03446f0389","type":"message","text":"Don't know how it fits in the optimization ecosystem but the person is new to the Julia online community and it'd be nice for them to get a warm welcome.","user":"U6QGE7S86","ts":"1617654629.055500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JuQK5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Don't know how it fits in the optimization ecosystem but the person is new to the Julia online community and it'd be nice for them to get a warm welcome."}]}]}]},{"client_msg_id":"787915fa-4a00-484e-9e52-6d8ddba1d430","type":"message","text":"It looks like it competes with BlacBoxOptim and with Optim's gradient free methods.","user":"U6A936746","ts":"1617655563.055600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CFU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It looks like it competes with BlacBoxOptim and with Optim's gradient free methods."}]}]}]},{"client_msg_id":"d4f2c7e1-2d3a-45b1-a042-4ccf78dd1b05","type":"message","text":"Oh neat - additional dispatch options I guess.","user":"U6QGE7S86","ts":"1617655819.056700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PI0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh neat - additional dispatch options I guess."}]}]}]}]}