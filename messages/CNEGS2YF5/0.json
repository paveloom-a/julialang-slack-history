{"cursor": 0, "messages": [{"type":"message","subtype":"bot_message","text":"@freemin7 I don't see why not.","ts":"1607904630.070500","username":"[gitter] <mlubin>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2019-09-29/770521255553_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"@freemin7 I don't see why not.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Would a bridge be the right place to implement some presolve features (in particular dependent constraint elimination), or should it be done at a lower level within the solver? I'm implementing a solver which will use a presolve to ensure that the input problem is well-formed, but I don't know what the most elegant place to implement said presolve is.","ts":"1607923631.070600","username":"[gitter] <BenChung>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"Would a bridge be the right place to implement some presolve features (in particular dependent constraint elimination), or should it be done at a lower level within the solver? I'm implementing a solver which will use a presolve to ensure that the input problem is well-formed, but I don't know what the most elegant place to implement said presolve is.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"A meta solver like Dualization.jl would be very nice for a presolver. Bridges are not good for multi constraint transformations.","ts":"1607926376.070700","username":"[gitter] <joaquimg>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"A meta solver like Dualization.jl would be very nice for a presolver.\nBridges are not good for multi constraint transformations.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Makes sense, that's a good approach.","ts":"1607927698.070800","username":"[gitter] <BenChung>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"Makes sense, that's a good approach.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I've been thinking we need to formalize a way to write CVXPY-esque reductions: <https://www.cvxpy.org/api_reference/cvxpy.reductions.html>. We're starting to have a few like Dualization, a hypothetical presolver, <https://github.com/odow/MOO.jl>, there was also the issue of bridging `Complements` needing information of the variable bounds. The idea being a reduction wraps an inner optimizer, and implements a reduce/retrieve API. It would be nice to say, chain `Complementarity.Optimizer(Presolve.Optimizer(Gurobi.Optimizer()))`, to take a MPEC, reformulate with big-M or SOS, presolve, then solve with Gurobi.","ts":"1607928696.070900","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"I've been thinking we need to formalize a way to write CVXPY-esque reductions: <https://www.cvxpy.org/api_reference/cvxpy.reductions.html>. We're starting to have a few like Dualization, a hypothetical presolver, <https://github.com/odow/MOO.jl>, there was also the issue of bridging `Complements` needing information of the variable bounds. The idea being a reduction wraps an inner optimizer, and implements a reduce/retrieve API. It would be nice to say, chain `Complementarity.Optimizer(Presolve.Optimizer(Gurobi.Optimizer()))`, to take a MPEC, reformulate with big-M or SOS, presolve, then solve with Gurobi.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"for presolve operations, there is also: <https://github.com/mtanneau/MathOptPresolve.jl>","ts":"1607946131.071000","username":"[gitter] <frapac>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"for presolve operations, there is also: <https://github.com/mtanneau/MathOptPresolve.jl>","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"MPEC to bigM is in my todo list","ts":"1607950469.071100","username":"[gitter] <joaquimg>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"MPEC to bigM is in my todo list","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"There is also QuadraticToBinary.jl That already works like that. ","ts":"1607950581.071200","username":"[gitter] <joaquimg>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"There is also QuadraticToBinary.jl\nThat already works like that.\n","verbatim":false}}]},{"client_msg_id":"aaae734f-608e-450d-84a8-3bd9b982f52c","type":"message","text":"I was very sad to discover that you can put emojis in a GH action workflow name, but they won't display properly when viewing, say, a CI badge... :cry:","user":"UCT7E536E","ts":"1608059795.072000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GsV83","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was very sad to discover that you can put emojis in a GH action workflow name, but they won't display properly when viewing, say, a CI badge... "},{"type":"emoji","name":"cry"}]}]}]},{"client_msg_id":"ad4d3843-5a07-4c9a-b0c1-46c7c304a44c","type":"message","text":"(namely, I had a :crescent_moon: workflow for nightly builds, but the :crescent_moon: character was hidden by the right-hand side of the badge)","user":"UCT7E536E","ts":"1608059836.072800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nBo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(namely, I had a "},{"type":"emoji","name":"crescent_moon"},{"type":"text","text":" workflow for nightly builds, but the "},{"type":"emoji","name":"crescent_moon"},{"type":"text","text":" character was hidden by the right-hand side of the badge)"}]}]}],"reactions":[{"name":"disappointed","users":["U6A936746"],"count":1}]},{"type":"message","text":"Do we have any evolutionary \"solvers\" for MILP problems already?","user":"U9MD78Z9N","ts":"1608075815.073000","team":"T68168MUP"},{"client_msg_id":"8379bbb6-b6f2-4fd3-99ff-6a70d1b63f14","type":"message","text":"What do you mean by \"evolutionary solvers\"?","user":"UCT7E536E","ts":"1608075857.073300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uky=q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean by \"evolutionary solvers\"?"}]}]}]},{"type":"message","text":"evolutionary algorithms have beaten Gurobi in the \"quality of a solution after solve time t\"-metric in some papers i came across, in addition they are really easy to parallelize even over high latency/low bandwidth links.\nAn evolutionary \"solver\" would be something that eats JuMP models and optimizes them until time limit or it gives up.","user":"U9MD78Z9N","ts":"1608076249.073400","team":"T68168MUP"},{"client_msg_id":"653dd8f6-3698-4261-a1d2-086a4a689c13","type":"message","text":"I don't really know what I'm talking about, but I strongly suspect that in the *vast* majority of cases, Gurobi wins with simplex/von-neumann","user":"U9VG1AYSG","ts":"1608076340.074300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"INPuQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't really know what I'm talking about, but I strongly suspect that in the "},{"type":"text","text":"vast","style":{"bold":true}},{"type":"text","text":" majority of cases, Gurobi wins with simplex/von-neumann"}]}]}]},{"client_msg_id":"5ff4d4f0-b5fb-4aa9-9dfe-baa1b4316300","type":"message","text":"if you have a problem with a particularly nasty branch and bound, it might be worth trying something like that","user":"U9VG1AYSG","ts":"1608076401.074900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y9N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you have a problem with a particularly nasty branch and bound, it might be worth trying something like that"}]}]}]},{"type":"message","text":"I am talking about problem where Gurobi is not fast enough to find the perfect solution it aims to find. It could very much be that enabled with an useful set of operations an evolutionary algorithm comes faster to 90% of optimum.","user":"U9MD78Z9N","ts":"1608076522.075000","team":"T68168MUP"},{"client_msg_id":"28966551-a151-4584-aa11-b296c0d5d56b","type":"message","text":"at the risk of saying something stupid because I'm missing the context, you do realize there are all sorts of options in Gurobi for returning inexact solutions right?","user":"U9VG1AYSG","ts":"1608076581.075700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/=bWu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"at the risk of saying something stupid because I'm missing the context, you do realize there are all sorts of options in Gurobi for returning inexact solutions right?"}]}]}]},{"client_msg_id":"618f4a68-bda4-4ce1-82f4-ac23bbcd6537","type":"message","text":"in particular your gap tolerance may be set too low","user":"U9VG1AYSG","ts":"1608076614.076300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZNVx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in particular your gap tolerance may be set too low"}]}]}]},{"client_msg_id":"a6101072-cca1-409e-b066-30d04e7fb4f2","type":"message","text":"Gurobi may also be running evolutionary algorithms as heuristics for all we know.","user":"U66N673NV","ts":"1608076638.077100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ik=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Gurobi may also be running evolutionary algorithms as heuristics for all we know."}]}]}],"reactions":[{"name":"point_up","users":["U9VG1AYSG","U82RE6STE"],"count":2}]},{"client_msg_id":"eb720628-e4bf-4659-a824-6fedf1220030","type":"message","text":"something I have learned in a few years of working a lot on MILP problems is that the performance characteristics of different problems can vary in really surprising ways.  Gurobi is so good at what it does because it is so good at handling so many different special cases in cleverly fast ways.  Finding something else that seems miraculously fast isn't super surprising, finding something that you can rely on to be that fast when you perturb your problem a bit is much harder","user":"U9VG1AYSG","ts":"1608076758.079100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9rcj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"something I have learned in a few years of working a lot on MILP problems is that the performance characteristics of different problems can vary in really surprising ways.  Gurobi is so good at what it does because it is so good at handling so many different special cases in cleverly fast ways.  Finding something else that seems miraculously fast isn't super surprising, finding something that you can rely on to be that fast when you perturb your problem a bit is much harder"}]}]}]},{"type":"message","text":"I am aware, the problem is that i can't run Gurobi in production and run CBC instead (couldn't install SCIP on Fedora).\nCBC produces not so good solutions in x hours, GLPK fails at well smaller problems, another solver i use via another AMPLwriter doesn't provide partial solutions (or atleast i haven't managed to concince him to do so.\nI am just looking for other options i could try.","user":"U9MD78Z9N","ts":"1608076860.079200","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1608076893.000000"}},{"client_msg_id":"0ed27d62-07c3-4e8c-b41d-101281871e6c","type":"message","text":"yeah, if you're running Cbc beating it is a lot easier, though even with Cbc (especially with cbc?) I'd recommend spending a good amount of time tweaking parameters, which unfortunately involves going through their abysmal (or in  some cases, non-existant) documentation","user":"U9VG1AYSG","ts":"1608076950.081600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ama","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, if you're running Cbc beating it is a lot easier, though even with Cbc (especially with cbc?) I'd recommend spending a good amount of time tweaking parameters, which unfortunately involves going through their abysmal (or in  some cases, non-existant) documentation"}]}]}]},{"client_msg_id":"f0032324-cd7a-46bd-9abd-fc13cf5f8f79","type":"message","text":"Regardless, evolution programming is a perfectly valid way to heuristically solve constrained optimization.\nEspecially non-linear nonconvex mixed integer.\n(Though throwing away a ton of structure including gradients, is a loss)\nI don't the we have any.","user":"U6A936746","ts":"1608077114.085700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QpHL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Regardless, evolution programming is a perfectly valid way to heuristically solve constrained optimization.\nEspecially non-linear nonconvex mixed integer.\n(Though throwing away a ton of structure including gradients, is a loss)\nI don't the we have any."}]}]}]},{"type":"message","text":"There is not much gradient to throw away with ILP ;-)","user":"U9MD78Z9N","ts":"1608077155.085800","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1608077192.000000"}},{"client_msg_id":"043fc650-6b66-47c6-84e3-5155e90f9ffc","type":"message","text":"Oh, it's an LP?","user":"U6A936746","ts":"1608077178.086700","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1608077199.000000"},"blocks":[{"type":"rich_text","block_id":"vGbx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, it's an LP?"}]}]}]},{"client_msg_id":"3d38f2a3-89d6-4b51-84c8-fbeb51ea9f25","type":"message","text":"that's only kind of true; not every evolutionary algorithm necessarily understands that LP has the special structure it does","user":"U9VG1AYSG","ts":"1608077199.087300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3q31","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's only kind of true; not every evolutionary algorithm necessarily understands that LP has the special structure it does"}]}]}],"reactions":[{"name":"point_up","users":["U6A936746"],"count":1}]},{"client_msg_id":"e002deb3-9c8a-43f6-a363-f07f62e82d45","type":"message","text":"saying the gradient is a constant is at least as important as saying it's some complicated mess","user":"U9VG1AYSG","ts":"1608077230.088200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E=jr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"saying the gradient is a constant is at least as important as saying it's some complicated mess"}]}]}]},{"type":"message","text":"So, are you saying it's an bad idea?","user":"U9MD78Z9N","ts":"1608077493.089100","team":"T68168MUP"},{"client_msg_id":"b81a4e7d-8fdd-4966-9e34-69c09d6a107e","type":"message","text":"not necessarily... I'm just very skeptical about what \"more traditional\" options it'll be able to beat.  I personally wouldn't spend much time worrying about that until I've spent a good amount of time messing with Cbc and whatever other simplex/von-neumann solvers I could bring to bear on it","user":"U9VG1AYSG","ts":"1608077549.090100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pyj3q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not necessarily... I'm just very skeptical about what \"more traditional\" options it'll be able to beat.  I personally wouldn't spend much time worrying about that until I've spent a good amount of time messing with Cbc and whatever other simplex/von-neumann solvers I could bring to bear on it"}]}]}],"reactions":[{"name":"+1","users":["U6A936746"],"count":1}]},{"type":"message","text":"Can you recommend a resource on cbc settings or where to get started","user":"U9MD78Z9N","ts":"1608077601.091100","team":"T68168MUP"},{"client_msg_id":"93ac8cff-6732-43d9-b3be-a188ea5b6659","type":"message","text":"actually, I'm just contemplating this a little now as I drink my bourbon... if I had to make a bet, I'd say that a bunch of the commercial solvers use some sort of evolutionary algorithm as a vertex selection algorithm for simplex.  My guess would be that if you want to use an evolutionary algorithm on a MILP, it has to be one that knows the solutions live on the boundary to have any hope of being fast, and that pretty much puts it in the boat of being closely related to simplex","user":"U9VG1AYSG","ts":"1608077669.092300","team":"T68168MUP","edited":{"user":"U9VG1AYSG","ts":"1608077801.000000"},"blocks":[{"type":"rich_text","block_id":"bf6sN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"actually, I'm just contemplating this a little now as I drink my bourbon... if I had to make a bet, I'd say that a bunch of the commercial solvers use some sort of evolutionary algorithm as a vertex selection algorithm for simplex.  My guess would be that if you want to use an evolutionary algorithm on a MILP, it has to be one that knows the solutions live on the boundary to have any hope of being fast, and that pretty much puts it in the boat of being closely related to simplex"}]}]}]},{"client_msg_id":"4c5480ef-c368-4e2a-9d6b-f1927d3b5764","type":"message","text":"uhhh.... the Cbc docs are *really* bad... I'm sure somebody around here will know more :laughing:","user":"U9VG1AYSG","ts":"1608077725.093200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x4UC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uhhh.... the Cbc docs are "},{"type":"text","text":"really","style":{"bold":true}},{"type":"text","text":" bad... I'm sure somebody around here will know more "},{"type":"emoji","name":"laughing"}]}]}]},{"client_msg_id":"c1c319fd-88b8-4da7-b451-70470bab78fe","type":"message","text":"I'd say if it's really easy for you to plug in your evolutionary solver, sure go ahead, try it; but if it's something that takes significant effort, I'd guess your effort is probably better spent elsewhere","user":"U9VG1AYSG","ts":"1608077760.093900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NFdtE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd say if it's really easy for you to plug in your evolutionary solver, sure go ahead, try it; but if it's something that takes significant effort, I'd guess your effort is probably better spent elsewhere"}]}]}]},{"client_msg_id":"01ebccdc-086d-4d6a-90e7-fbfb346f05f8","type":"message","text":"Evolutionary programming is like 90% designing your gene (in this case designing it so it only permits feasible solutions or close to) and 10% on mutation and crossbreading","user":"U6A936746","ts":"1608078113.097000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4AT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Evolutionary programming is like 90% designing your gene (in this case designing it so it only permits feasible solutions or close to) and 10% on mutation and crossbreading"}]}]}]},{"client_msg_id":"2eda3179-b8ee-42f4-b287-6fc6966dafb3","type":"message","text":"So specialized EP solvers must be doing something clever with genome to make it mostly feasible.","user":"U6A936746","ts":"1608078191.098600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UF28","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So specialized EP solvers must be doing something clever with genome to make it mostly feasible."}]}]}],"reactions":[{"name":"correct_answer","users":["U9MD78Z9N"],"count":1}]},{"client_msg_id":"165105dd-6641-4f5f-b107-e229b664edd2","type":"message","text":"But yeah that thing might be that my genome doesn't encode points it encodes instructions for how to do simplex to get points","user":"U6A936746","ts":"1608078250.099800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OcFA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But yeah that thing might be that my genome doesn't encode points it encodes instructions for how to do simplex to get points"}]}]}]},{"type":"message","text":"Here is my take:\nevolutionary algorithms success is mostly depenend on the choice of good mutation primitives.\nIn my case it would be easy to provide some that help stay on feasible points. A Gurobi is probably not aware of those operations (or that the parameter space has a 8!-fold symmetry).\nKnowledge like that might help find solutions.\nIn addition an ILP could run on an part of the genome as mutation to optimize a series of simpler problems while EA handles finding every attractor.","user":"U9MD78Z9N","ts":"1608078277.099900","team":"T68168MUP"},{"type":"message","text":"So anyway it sounds like you are not aware of any JuMP reafy evolutionary algorithms.\n*sigh* looks for cbc docs","user":"U9MD78Z9N","ts":"1608078404.101100","team":"T68168MUP"},{"client_msg_id":"8a7a88d0-144a-4917-8972-c985931a7420","type":"message","text":"well gurobi (and probably others) is really good at finding special symmetries or whatever else that can make solutions really fast, that's what I'm saying","user":"U9VG1AYSG","ts":"1608078432.101600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/2RM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well gurobi (and probably others) is really good at finding special symmetries or whatever else that can make solutions really fast, that's what I'm saying"}]}]}],"thread_ts":"1608078432.101600","reply_count":1,"reply_users_count":1,"latest_reply":"1608078530.103300","reply_users":["U9MD78Z9N"],"subscribed":false},{"client_msg_id":"25f0bf26-6aa0-429a-9fc3-e214f4cb9676","type":"message","text":"these are the kinds of things that I realized when I went through my \"how the fuck can Gurobi be so much faster than Cbc??\" phase","user":"U9VG1AYSG","ts":"1608078474.102200","team":"T68168MUP","edited":{"user":"U9VG1AYSG","ts":"1608078491.000000"},"blocks":[{"type":"rich_text","block_id":"OXfA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"these are the kinds of things that I realized when I went through my \"how the fuck can Gurobi be so much faster than Cbc??\" phase"}]}]}],"thread_ts":"1608078474.102200","reply_count":3,"reply_users_count":3,"latest_reply":"1608078684.107000","reply_users":["UCT7E536E","U9MD78Z9N","U9VG1AYSG"],"subscribed":false},{"type":"message","text":"Any other ideas for free/academia/non-profit friendly solvers?","user":"U9MD78Z9N","ts":"1608078603.105300","team":"T68168MUP"},{"client_msg_id":"cc0e1b32-fe81-4938-8c5c-939537778b67","type":"message","text":"Basically all of them?","user":"U6A936746","ts":"1608078717.108700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Rs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Basically all of them?"}]}]}]},{"client_msg_id":"2441df89-ed3d-4086-9c89-c75e277e7bd1","type":"message","text":"CPLEX","user":"U6A936746","ts":"1608078756.110600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wTgIl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"CPLEX"}]}]}]},{"type":"message","text":"Please name names. GLPK is worse.","user":"U9MD78Z9N","ts":"1608078758.110700","team":"T68168MUP"},{"client_msg_id":"3922d933-204d-431b-b8a9-a4a5f7ef1c84","type":"message","text":"basically all of them have academic licenses if you are academic.  Non-profit is probably a lot harder","user":"U9VG1AYSG","ts":"1608078780.111600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dOq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"basically all of them have academic licenses if you are academic.  Non-profit is probably a lot harder"}]}]}],"reactions":[{"name":"+1","users":["U6A936746"],"count":1}]},{"client_msg_id":"1C3D7DF4-62F2-4244-BA26-837E811A9A61","type":"message","text":"If the question is “can I code a heuristic that outperforms Gurobi/CPLEX at finding good solutions early?”, then the answer is “Yes”. If you know something about your problem, it’ll be even easier.\n\nOf course, MIP solvers do have heuristics, but they are general-purpose ones (not taylored to a particular problem) and typically fit within the B&amp;B framework (eg diving heuristic, RINS, feasibility pump, etc). In addition, they try not only to find a good solution but to prove that it’s optimal. The latter is usually the hard part.","user":"UCT7E536E","ts":"1608078785.111800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Y5/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If the question is “can I code a heuristic that outperforms Gurobi/CPLEX at finding good solutions early?”, then the answer is “Yes”. If you know something about your problem, it’ll be even easier.\n"},{"type":"text","text":"\n"},{"type":"text","text":"Of course, MIP solvers do have heuristics, but they are general-purpose ones (not taylored to a particular problem) and typically fit within the B&B framework (eg diving heuristic, RINS, feasibility pump, etc). In addition, they try not only to find a good solution but to prove that it’s optimal. The latter is usually the hard part."}]}]}],"thread_ts":"1608078785.111800","reply_count":5,"reply_users_count":3,"latest_reply":"1608079987.123100","reply_users":["UCT7E536E","U9MD78Z9N","U014UPHHPM0"],"subscribed":false,"reactions":[{"name":"+1","users":["U9VG1AYSG","U9MD78Z9N"],"count":2}]},{"client_msg_id":"74a7ae27-fd35-474f-8ab0-4b244a053336","type":"message","text":"The list of solvers is\n<https://jump.dev/JuMP.jl/v0.21.1/installation/#Getting-Solvers-1|https://jump.dev/JuMP.jl/v0.21.1/installation/#Getting-Solvers-1>","user":"U6A936746","ts":"1608078869.113400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1paWv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The list of solvers is\n"},{"type":"link","url":"https://jump.dev/JuMP.jl/v0.21.1/installation/#Getting-Solvers-1","text":"https://jump.dev/JuMP.jl/v0.21.1/installation/#Getting-Solvers-1"}]}]}]},{"type":"message","text":"Thanks for the hint with the callback but i am feeling abit overwhelmed already. I will look into it.","user":"U9MD78Z9N","ts":"1608079536.119000","team":"T68168MUP"},{"type":"message","text":"BTW does someone know why all the solver companies don't offer free solvers to non-profits, just academia?","user":"U9MD78Z9N","ts":"1608079706.119300","team":"T68168MUP","thread_ts":"1608079706.119300","reply_count":1,"reply_users_count":1,"latest_reply":"1608130537.131400","reply_users":["U9VG1AYSG"],"subscribed":false},{"client_msg_id":"bc2cd2dc-cfe3-4521-9975-d1f3dfc743a8","type":"message","text":"It's a net positive giving to academia: you lock-in students to their software who then go out into industry and buy your code, and you get academics trying new algorithm tweaks to try and beat your code. Its also a prisoners dilemma: if one company does and the others don't, people quickly move to the one giving free academic licenses.","user":"U014UPHHPM0","ts":"1608079915.122500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UTZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's a net positive giving to academia: you lock-in students to their software who then go out into industry and buy your code, and you get academics trying new algorithm tweaks to try and beat your code. Its also a prisoners dilemma: if one company does and the others don't, people quickly move to the one giving free academic licenses."}]}]}]},{"type":"message","text":"I see. I am not sure my intended use case (calculated optimal class cohorts to reduce covid risk as a public utility (i pay server bills)) is covered under an academic license. It would be in particular good to reduce these bills if i could turn on and off those machines to save on cloud compute billing.\nThe FICO community edition limits itself to problems CBC can handle fast.","user":"U9MD78Z9N","ts":"1608080087.124700","team":"T68168MUP"},{"client_msg_id":"667CACE8-5B5D-43F3-B228-8AD655FF59E4","type":"message","text":"I wouldn’t be surprised if solver companies were accommodating to non-profit as well.","user":"UCT7E536E","ts":"1608080133.124800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/hg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wouldn’t be surprised if solver companies were accommodating to non-profit as well."}]}]}]},{"type":"message","text":"Mhh, i guess i will write with them didn't dear to ask.","user":"U9MD78Z9N","ts":"1608080160.124900","team":"T68168MUP","thread_ts":"1608080160.124900","reply_count":5,"reply_users_count":2,"latest_reply":"1608081643.127800","reply_users":["UCT7E536E","U9MD78Z9N"],"subscribed":false},{"type":"message","text":"Is there a place for a place where we can list solver not yet tied to JuMP and discuss their merit (for example an GitHub issue documentation file)?","user":"U9MD78Z9N","ts":"1608082158.128000","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1608082543.000000"}},{"type":"message","subtype":"bot_message","text":"This channel is an appropriate place to discuss solvers you want to add a JuMP interface to. (I recently clarified this in the documentation. See the note at the bottom of this section: <https://jump.dev/JuMP.jl/dev/installation/#Supported-solvers>)","ts":"1608088284.128500","username":"[gitter] <odow>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"This channel is an appropriate place to discuss solvers you want to add a JuMP interface to. (I recently clarified this in the documentation. See the note at the bottom of this section: <https://jump.dev/JuMP.jl/dev/installation/#Supported-solvers>)","verbatim":false}}]},{"client_msg_id":"d27cf4c6-d772-43b6-9033-06860d2804b4","type":"message","text":"<@U9MD78Z9N> I'm a bit late to the party, but another important aspect is that for many problems, proving optimality is what takes a lot of time, an optimal solution has often been found early in the MILP solution process. So with large enough tolerance gaps, this means you will get high quality solutions (often the best one)","user":"U82RE6STE","ts":"1608108971.130300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ahy","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U9MD78Z9N"},{"type":"text","text":" I'm a bit late to the party, but another important aspect is that for many problems, proving optimality is what takes a lot of time, an optimal solution has often been found early in the MILP solution process. So with large enough tolerance gaps, this means you will get high quality solutions (often the best one)"}]}]}]},{"client_msg_id":"c6922af1-f2d2-4e71-9117-76680395a2cf","type":"message","text":"There is no being late to the party.","user":"U9MD78Z9N","ts":"1608129595.131000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yE5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is no being late to the party."}]}]}],"reactions":[{"name":"party_corgi","users":["U9MD78Z9N"],"count":1}]},{"type":"message","text":" Is there any reasonable explanation why the same ILP problem has two differently good optimas between Gurobi and CBC?\nOk it is just CBC being drunk. CBC gives a different answer (but saying \"Optimal solution found.\") while Gurobi always gives the same.","user":"U9MD78Z9N","ts":"1608136625.131700","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1608137054.000000"},"thread_ts":"1608136625.131700","reply_count":4,"reply_users_count":2,"latest_reply":"1608140921.132700","reply_users":["UCT7E536E","U9MD78Z9N"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"I did ran multi-threaded but there was no time-limit on CBC.\nThe run-to-run difference with CBC was &gt;10% of the gurobi objective.","user":"U9MD78Z9N","ts":"1608139682.132200","thread_ts":"1608136625.131700","root":{"type":"message","text":" Is there any reasonable explanation why the same ILP problem has two differently good optimas between Gurobi and CBC?\nOk it is just CBC being drunk. CBC gives a different answer (but saying \"Optimal solution found.\") while Gurobi always gives the same.","user":"U9MD78Z9N","ts":"1608136625.131700","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1608137054.000000"},"thread_ts":"1608136625.131700","reply_count":4,"reply_users_count":2,"latest_reply":"1608140921.132700","reply_users":["UCT7E536E","U9MD78Z9N"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"lEf=6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I did ran multi-threaded but there was no time-limit on CBC.\nThe run-to-run difference with CBC was >10% of the gurobi objective."}]}]}],"client_msg_id":"78e5bbfd-af98-4bc3-ae5b-6a3e3954ee74"},{"type":"message","subtype":"bot_message","text":"@/all Reminder: The monthly developer call will be tomorrow (Thursday) at 2pm US Eastern time on Zoom. Ping me or @odow for an invite.","ts":"1608163083.132900","username":"[gitter] <mlubin>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2019-09-29/770521255553_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"@/all Reminder: The monthly developer call will be tomorrow (Thursday) at 2pm US Eastern time on Zoom. Ping me or @odow for an invite.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"One small question about the bridges I mentioned yesterday. I was able to simply use the FlipSignBridge for strictly greater than -&gt; strictly less than constraints. Thanks for that. I currently run into a problem when I want to use GreaterThan inside an indicator constraint. The `_build_indicator_constraint` doesn't exist: ``` MethodError: no method matching _build_indicator_constraint(::JuMP.var\"#_error#68\"{Symbol}, ::VariableRef, ::BridgeableConstraint{ScalarConstraint{GenericAffExpr{Float64,VariableRef},ConstraintSolver.GreaterThan{Float64}},UnionAll}, ::Type{MathOptInterface.IndicatorSet{MathOptInterface.ACTIVATE_ON_ONE,S} where S&lt;:MathOptInterface.AbstractScalarSet}) ``` I hoped it would call the indicator constraint with just the already briged ScalarConstraint as a type as  ``` _build_indicator_constraint(     _error::Function, variable::AbstractVariableRef,     constraint::ScalarConstraint, ::Type{MOI.IndicatorSet{A}}) ```  exists. How does this currently work with bridges? ","ts":"1608305335.133700","username":"[gitter] <Wikunia>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2019-11-22/833775262979_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"One small question about the bridges I mentioned yesterday. I was able to simply use the FlipSignBridge for strictly greater than -&gt; strictly less than constraints. Thanks for that. I currently run into a problem when I want to use GreaterThan inside an indicator constraint. The `_build_indicator_constraint` doesn't exist:\n```\nMethodError: no method matching _build_indicator_constraint(::JuMP.var\"#_error#68\"{Symbol}, ::VariableRef, ::BridgeableConstraint{ScalarConstraint{GenericAffExpr{Float64,VariableRef},ConstraintSolver.GreaterThan{Float64}},UnionAll}, ::Type{MathOptInterface.IndicatorSet{MathOptInterface.ACTIVATE_ON_ONE,S} where S&lt;:MathOptInterface.AbstractScalarSet})\n```\nI hoped it would call the indicator constraint with just the already briged ScalarConstraint as a type as \n```\n_build_indicator_constraint(\n    _error::Function, variable::AbstractVariableRef,\n    constraint::ScalarConstraint, ::Type{MOI.IndicatorSet{A}})\n``` \nexists. How does this currently work with bridges? ","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I would like to build an MOI model with a collection of variables constrained to lie in Intervals. I would then like to modify some of the values of the upper/lower bounds in these intervals. Is there a straightforward way to do this using ``modify`` or something similar? Or do I need to use ``delete!`` and then re-add?","ts":"1608312777.133800","username":"[gitter] <joehuchette>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2020-02-27/959471964466_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"I would like to build an MOI model with a collection of variables constrained to lie in Intervals. I would then like to modify some of the values of the upper/lower bounds in these intervals. Is there a straightforward way to do this using ``modify`` or something similar? Or do I need to use ``delete!`` and then re-add?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"If the ser type is the same (Interval) you can just: MOI.set(model, MOI.ConstraintSet(), ci, MOI.Interval{Float64}(lb, ub))","ts":"1608317234.133900","username":"[gitter] <joaquimg>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"If the ser type is the same (Interval) you can just:\nMOI.set(model, MOI.ConstraintSet(), ci, MOI.Interval{Float64}(lb, ub))","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"details here: <https://jump.dev/MathOptInterface.jl/stable/manual/basic_usage/#Replacements>","ts":"1608317264.134000","username":"[gitter] <joaquimg>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"details here: <https://jump.dev/MathOptInterface.jl/stable/manual/basic_usage/#Replacements>","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Perfect, thank you","ts":"1608324683.134100","username":"[gitter] <joehuchette>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2020-02-27/959471964466_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"Perfect, thank you","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"BridgeableConstraint is not an AbstractScalarConstraint","ts":"1608329271.134200","username":"[gitter] <blegat>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-11-13/270732745649_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"BridgeableConstraint is not an AbstractScalarConstraint","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"We should add","ts":"1608329504.134300","username":"[gitter] <blegat>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-11-13/270732745649_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"We should add","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"``` function _build_indicator_constraint(     _error::Function, variable::AbstractVariableRef,     constraint::BridgeableConstraint, I::Type{MOI.IndicatorSet{A}}) where A     return BridgeableConstraint(         _build_indicator_constraint(_error, variable, constraint.constraint, I),         constraint.bidge_type     ) end ```","ts":"1608329524.134400","username":"[gitter] <blegat>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-11-13/270732745649_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bv52hdkg27i8alutjrf0","text":{"type":"mrkdwn","text":"```\nfunction _build_indicator_constraint(\n    _error::Function, variable::AbstractVariableRef,\n    constraint::BridgeableConstraint, I::Type{MOI.IndicatorSet{A}}) where A\n    return BridgeableConstraint(\n        _build_indicator_constraint(_error, variable, constraint.constraint, I),\n        constraint.bidge_type\n    )\nend\n```","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"It would be functionally the same, though a bit uglier. Still trying to work out how much I care about that, though.","ts":"1609426453.134700","username":"[gitter] <joehuchette>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2020-02-27/959471964466_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bvmt0lcg27id0g40lji0","text":{"type":"mrkdwn","text":"It would be functionally the same, though a bit uglier. Still trying to work out how much I care about that, though.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Why does it need to be a scalar set? To be used with indicator?","ts":"1609632977.134800","username":"[gitter] <blegat>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2017-11-13/270732745649_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_bvmt0lcg27id0g40lji0","text":{"type":"mrkdwn","text":"Why does it need to be a scalar set? To be used with indicator?","verbatim":false}}]}]}