{"cursor": 0, "messages": [{"client_msg_id":"15558f9e-8139-43b6-b0bb-61aaf95d66a1","type":"message","text":"`ImageFeatures.jl` has the functions for feature detection and matching between features.  Is there a function of package for estimating the geometric transform, like MATLAB has the `estimageGeometricTransform2D` function.","user":"U7CTYCM4H","ts":"1608216519.111500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LaH4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ImageFeatures.jl","style":{"code":true}},{"type":"text","text":" has the functions for feature detection and matching between features.  Is there a function of package for estimating the geometric transform, like MATLAB has the "},{"type":"text","text":"estimageGeometricTransform2D","style":{"code":true}},{"type":"text","text":" function."}]}]}],"thread_ts":"1608216519.111500","reply_count":3,"reply_users_count":2,"latest_reply":"1608216884.112000","reply_users":["U019078LDND","U7CTYCM4H"],"subscribed":false},{"client_msg_id":"ce409efb-c724-4f0c-8026-4280af6e65d6","type":"message","text":"Hi,\n\nI would like to warp an image by the log-polar transform but I have troubles to make it work. Can someone give me a push please?\n\n```using CoordinateTransformations, ImageTransformations\nstruct Retinotopy &lt;: Transformation; end\nstruct InvRetinotopy &lt;: Transformation; end\nfunction (::Retinotopy)(x)\n    length(x) == 2 || error(\"Polar transform takes a 2D coordinate\")\n\n    Polar(log(hypot(x[1], x[2])), atan(x[2], x[1]))\nend\n\nfunction (::InvRetinotopy)(x::Polar)\n    s,c = sincos(x.θ)\n    SVector(exp(x.r) * c, exp(x.r) * s)\nend\n(t::InvRetinotopy)(x) = t(Polar(x[1], x[2]))\nBase.inv(::Retinotopy) = InvRetinotopy()\n\ntfm = Retinotopy()\nimgw = warp(img, tfm);```","user":"U7GQE9JP9","ts":"1608204279.109700","team":"T68168MUP","edited":{"user":"U7GQE9JP9","ts":"1608204302.000000"},"blocks":[{"type":"rich_text","block_id":"x+jO6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi,\n\nI would like to warp an image by the log-polar transform but I have troubles to make it work. Can someone give me a push please?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using CoordinateTransformations, ImageTransformations\nstruct Retinotopy <: Transformation; end\nstruct InvRetinotopy <: Transformation; end\nfunction (::Retinotopy)(x)\n    length(x) == 2 || error(\"Polar transform takes a 2D coordinate\")\n\n    Polar(log(hypot(x[1], x[2])), atan(x[2], x[1]))\nend\n\nfunction (::InvRetinotopy)(x::Polar)\n    s,c = sincos(x.θ)\n    SVector(exp(x.r) * c, exp(x.r) * s)\nend\n(t::InvRetinotopy)(x) = t(Polar(x[1], x[2]))\nBase.inv(::Retinotopy) = InvRetinotopy()\n\ntfm = Retinotopy()\nimgw = warp(img, tfm);"}]}]}],"thread_ts":"1608204279.109700","reply_count":1,"reply_users_count":1,"latest_reply":"1608292094.112400","reply_users":["UC8821DPY"],"subscribed":false},{"client_msg_id":"e1cc2efb-e428-482f-8925-3b14dfdf78bc","type":"message","text":"It should be pretty good for this. How many channels do you need? If it's something like 16 channels, then I'd recommend using an `SVector{16,T}` as the element type of your arrays and writing your algorithms for that datatype.","user":"UC8821DPY","ts":"1608026229.108300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GWk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It should be pretty good for this. How many channels do you need? If it's something like 16 channels, then I'd recommend using an "},{"type":"text","text":"SVector{16,T}","style":{"code":true}},{"type":"text","text":" as the element type of your arrays and writing your algorithms for that datatype."}]}]}]}]}