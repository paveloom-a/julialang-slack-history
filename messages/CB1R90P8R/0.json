{"cursor": 0, "messages": [{"client_msg_id":"e1cc2efb-e428-482f-8925-3b14dfdf78bc","type":"message","text":"It should be pretty good for this. How many channels do you need? If it's something like 16 channels, then I'd recommend using an `SVector{16,T}` as the element type of your arrays and writing your algorithms for that datatype.","user":"UC8821DPY","ts":"1608026229.108300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GWk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It should be pretty good for this. How many channels do you need? If it's something like 16 channels, then I'd recommend using an "},{"type":"text","text":"SVector{16,T}","style":{"code":true}},{"type":"text","text":" as the element type of your arrays and writing your algorithms for that datatype."}]}]}]},{"client_msg_id":"ce409efb-c724-4f0c-8026-4280af6e65d6","type":"message","text":"Hi,\n\nI would like to warp an image by the log-polar transform but I have troubles to make it work. Can someone give me a push please?\n\n```using CoordinateTransformations, ImageTransformations\nstruct Retinotopy &lt;: Transformation; end\nstruct InvRetinotopy &lt;: Transformation; end\nfunction (::Retinotopy)(x)\n    length(x) == 2 || error(\"Polar transform takes a 2D coordinate\")\n\n    Polar(log(hypot(x[1], x[2])), atan(x[2], x[1]))\nend\n\nfunction (::InvRetinotopy)(x::Polar)\n    s,c = sincos(x.θ)\n    SVector(exp(x.r) * c, exp(x.r) * s)\nend\n(t::InvRetinotopy)(x) = t(Polar(x[1], x[2]))\nBase.inv(::Retinotopy) = InvRetinotopy()\n\ntfm = Retinotopy()\nimgw = warp(img, tfm);```","user":"U7GQE9JP9","ts":"1608204279.109700","team":"T68168MUP","edited":{"user":"U7GQE9JP9","ts":"1608204302.000000"},"blocks":[{"type":"rich_text","block_id":"x+jO6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi,\n\nI would like to warp an image by the log-polar transform but I have troubles to make it work. Can someone give me a push please?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using CoordinateTransformations, ImageTransformations\nstruct Retinotopy <: Transformation; end\nstruct InvRetinotopy <: Transformation; end\nfunction (::Retinotopy)(x)\n    length(x) == 2 || error(\"Polar transform takes a 2D coordinate\")\n\n    Polar(log(hypot(x[1], x[2])), atan(x[2], x[1]))\nend\n\nfunction (::InvRetinotopy)(x::Polar)\n    s,c = sincos(x.θ)\n    SVector(exp(x.r) * c, exp(x.r) * s)\nend\n(t::InvRetinotopy)(x) = t(Polar(x[1], x[2]))\nBase.inv(::Retinotopy) = InvRetinotopy()\n\ntfm = Retinotopy()\nimgw = warp(img, tfm);"}]}]}],"thread_ts":"1608204279.109700","reply_count":1,"reply_users_count":1,"latest_reply":"1608292094.112400","reply_users":["UC8821DPY"],"subscribed":false},{"client_msg_id":"15558f9e-8139-43b6-b0bb-61aaf95d66a1","type":"message","text":"`ImageFeatures.jl` has the functions for feature detection and matching between features.  Is there a function of package for estimating the geometric transform, like MATLAB has the `estimageGeometricTransform2D` function.","user":"U7CTYCM4H","ts":"1608216519.111500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LaH4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ImageFeatures.jl","style":{"code":true}},{"type":"text","text":" has the functions for feature detection and matching between features.  Is there a function of package for estimating the geometric transform, like MATLAB has the "},{"type":"text","text":"estimageGeometricTransform2D","style":{"code":true}},{"type":"text","text":" function."}]}]}],"thread_ts":"1608216519.111500","reply_count":3,"reply_users_count":2,"latest_reply":"1608216884.112000","reply_users":["U019078LDND","U7CTYCM4H"],"subscribed":false},{"client_msg_id":"98971460-9d8a-4670-8edf-645f8ce62d4b","type":"message","text":"There is a bug here with calling `channelview` on the `\"multi-channel-time-series.ome.tif\"` from TestImage. Where does the bug report belong?\n```julia&gt; img = testimage(\"multi-channel-time-series.ome.tif\")\n┌ Warning: ignored the empty prefix for '<http://www.openmicroscopy.org/Schemas/OME/2015-01>'; expected to be non-empty\n└ @ EzXML C:\\Users\\kittisopikulm\\.julia\\packages\\EzXML\\ZNwhK\\src\\xpath.jl:85\nGray ImageMeta with:\n  data: 4-dimensional AxisArray{Gray{N0f8},4,...} with axes:\n    :y, 1:167\n    :x, 1:439\n    :channel, [:C1, :C2, :C3]\n    :time, 1:7\nAnd data, a 167×439×3×7 reshape(reinterpret(Gray{N0f8}, ::Array{Int8,6}), 167, 439, 3, 7) with eltype Gray{Normed{UInt8,8}}\n  properties:\n    Description: \n    Elapsed_Times: Unitful.Quantity{Float64,�,Unitful.FreeUnits{(s,),�,nothing}}[NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s]\n\njulia&gt; channelview( img )\nERROR: ArgumentError: the length of each axis must match the corresponding size of data\nStacktrace:\n [1] AxisArray(::Array{Int8,6}, ::Tuple{Axis{:color,Base.OneTo{Int64}},Axis{:y,UnitRange{Int64}},Axis{:x,UnitRange{Int64}},Axis{:channel,Array{Symbol,1}},Axis{:time,UnitRange{Int64}},Axis{:dim_6,Base.OneTo{Int64}}}) at C:\\Users\\kittisopikulm\\.julia\\packages\\AxisArrays\\IFpjG\\src\\core.jl:229\n [2] AxisArray(::Array{Int8,6}, ::Tuple{Axis{:color,Base.OneTo{Int64}},Axis{:y,UnitRange{Int64}},Axis{:x,UnitRange{Int64}},Axis{:channel,Array{Symbol,1}},Axis{:time,UnitRange{Int64}}}) at C:\\Users\\kittisopikulm\\.julia\\packages\\AxisArrays\\IFpjG\\src\\core.jl:226\n [3] AxisArray at C:\\Users\\kittisopikulm\\.julia\\packages\\AxisArrays\\IFpjG\\src\\core.jl:222 [inlined]\n [4] _channelview at C:\\Users\\kittisopikulm\\.julia\\packages\\ImageAxes\\P5iag\\src\\ImageAxes.jl:126 [inlined]\n [5] channelview at C:\\Users\\kittisopikulm\\.julia\\packages\\ImageAxes\\P5iag\\src\\ImageAxes.jl:121 [inlined]\n [6] channelview(::ImageMeta{Gray{Normed{UInt8,8}},4,AxisArray{Gray{Normed{UInt8,8}},4,Base.ReshapedArray{Gray{Normed{UInt8,8}},4,Base.ReinterpretArray{Gray{Normed{UInt8,8}},6,Int8,Array{Int8,6}},Tuple{}},Tuple{Axis{:y,UnitRange{Int64}},Axis{:x,UnitRange{Int64}},Axis{:channel,Array{Symbol,1}},Axis{:time,UnitRange{Int64}}}},Dict{Symbol,Any}}) at C:\\Users\\kittisopikulm\\.julia\\packages\\ImageMetadata\\gFA3T\\src\\ImageMetadata.jl:252\n [7] top-level scope at REPL[142]:1\n\njulia&gt; axes( img )\n(Base.OneTo(167), Base.OneTo(439), Base.OneTo(3), Base.OneTo(7))\n\njulia&gt; size( img )\n(167, 439, 3, 7)```","user":"USU9FRPEU","ts":"1609171945.114400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RJwcL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is a bug here with calling "},{"type":"text","text":"channelview","style":{"code":true}},{"type":"text","text":" on the "},{"type":"text","text":"\"multi-channel-time-series.ome.tif\"","style":{"code":true}},{"type":"text","text":" from TestImage. Where does the bug report belong?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> img = testimage(\"multi-channel-time-series.ome.tif\")\n┌ Warning: ignored the empty prefix for '"},{"type":"link","url":"http://www.openmicroscopy.org/Schemas/OME/2015-01"},{"type":"text","text":"'; expected to be non-empty\n└ @ EzXML C:\\Users\\kittisopikulm\\.julia\\packages\\EzXML\\ZNwhK\\src\\xpath.jl:85\nGray ImageMeta with:\n  data: 4-dimensional AxisArray{Gray{N0f8},4,...} with axes:\n    :y, 1:167\n    :x, 1:439\n    :channel, [:C1, :C2, :C3]\n    :time, 1:7\nAnd data, a 167×439×3×7 reshape(reinterpret(Gray{N0f8}, ::Array{Int8,6}), 167, 439, 3, 7) with eltype Gray{Normed{UInt8,8}}\n  properties:\n    Description: \n    Elapsed_Times: Unitful.Quantity{Float64,�,Unitful.FreeUnits{(s,),�,nothing}}[NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s]\n\njulia> channelview( img )\nERROR: ArgumentError: the length of each axis must match the corresponding size of data\nStacktrace:\n [1] AxisArray(::Array{Int8,6}, ::Tuple{Axis{:color,Base.OneTo{Int64}},Axis{:y,UnitRange{Int64}},Axis{:x,UnitRange{Int64}},Axis{:channel,Array{Symbol,1}},Axis{:time,UnitRange{Int64}},Axis{:dim_6,Base.OneTo{Int64}}}) at C:\\Users\\kittisopikulm\\.julia\\packages\\AxisArrays\\IFpjG\\src\\core.jl:229\n [2] AxisArray(::Array{Int8,6}, ::Tuple{Axis{:color,Base.OneTo{Int64}},Axis{:y,UnitRange{Int64}},Axis{:x,UnitRange{Int64}},Axis{:channel,Array{Symbol,1}},Axis{:time,UnitRange{Int64}}}) at C:\\Users\\kittisopikulm\\.julia\\packages\\AxisArrays\\IFpjG\\src\\core.jl:226\n [3] AxisArray at C:\\Users\\kittisopikulm\\.julia\\packages\\AxisArrays\\IFpjG\\src\\core.jl:222 [inlined]\n [4] _channelview at C:\\Users\\kittisopikulm\\.julia\\packages\\ImageAxes\\P5iag\\src\\ImageAxes.jl:126 [inlined]\n [5] channelview at C:\\Users\\kittisopikulm\\.julia\\packages\\ImageAxes\\P5iag\\src\\ImageAxes.jl:121 [inlined]\n [6] channelview(::ImageMeta{Gray{Normed{UInt8,8}},4,AxisArray{Gray{Normed{UInt8,8}},4,Base.ReshapedArray{Gray{Normed{UInt8,8}},4,Base.ReinterpretArray{Gray{Normed{UInt8,8}},6,Int8,Array{Int8,6}},Tuple{}},Tuple{Axis{:y,UnitRange{Int64}},Axis{:x,UnitRange{Int64}},Axis{:channel,Array{Symbol,1}},Axis{:time,UnitRange{Int64}}}},Dict{Symbol,Any}}) at C:\\Users\\kittisopikulm\\.julia\\packages\\ImageMetadata\\gFA3T\\src\\ImageMetadata.jl:252\n [7] top-level scope at REPL[142]:1\n\njulia> axes( img )\n(Base.OneTo(167), Base.OneTo(439), Base.OneTo(3), Base.OneTo(7))\n\njulia> size( img )\n(167, 439, 3, 7)"}]}]}]},{"client_msg_id":"25d8887e-4074-4d09-b1d0-9ce6e9f2be78","type":"message","text":"or maybe `channelview` is just not the right thing to call for this image","user":"USU9FRPEU","ts":"1609172623.114800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hnPQB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or maybe "},{"type":"text","text":"channelview","style":{"code":true}},{"type":"text","text":" is just not the right thing to call for this image"}]}]}]},{"type":"message","text":"I just pushed my initial commit of Napari.jl if anyone is interested:\n<https://github.com/mkitti/Napari.jl>","files":[{"id":"F01HH8CQQR4","created":1609182986,"timestamp":1609182986,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"USU9FRPEU","editable":false,"size":1079996,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01HH8CQQR4/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01HH8CQQR4/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01HH8CQQR4-7cb8442fa8/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01HH8CQQR4-7cb8442fa8/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01HH8CQQR4-7cb8442fa8/image_360.png","thumb_360_w":360,"thumb_360_h":161,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01HH8CQQR4-7cb8442fa8/image_480.png","thumb_480_w":480,"thumb_480_h":215,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01HH8CQQR4-7cb8442fa8/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01HH8CQQR4-7cb8442fa8/image_720.png","thumb_720_w":720,"thumb_720_h":322,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01HH8CQQR4-7cb8442fa8/image_800.png","thumb_800_w":800,"thumb_800_h":358,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01HH8CQQR4-7cb8442fa8/image_960.png","thumb_960_w":960,"thumb_960_h":429,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01HH8CQQR4-7cb8442fa8/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":458,"original_w":1638,"original_h":732,"thumb_tiny":"AwAVADCsYZOyGk8mX+4ai6DmmnFAFve+P9Y/T+9SCSTj9454/vGm4+XOT0qQRqQMk9O1DAkWZCRv8wfRzRLMnSNn+pc03ygOOfah1UDlc8dam4FNugplObtTaoCQzEjpT1mfYSDjBAqCpE/1bfUf1oAf5z+tHnOe9R0UAf/Z","permalink":"https://julialang.slack.com/files/USU9FRPEU/F01HH8CQQR4/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01HH8CQQR4-2fff5f3cab","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"B5VCe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just pushed my initial commit of Napari.jl if anyone is interested:\n"},{"type":"link","url":"https://github.com/mkitti/Napari.jl"}]}]}],"user":"USU9FRPEU","display_as_bot":false,"ts":"1609183025.115500","reactions":[{"name":"heart","users":["U7PGB5DU3"],"count":1}]},{"client_msg_id":"a43f0cca-eb89-4a11-875a-90f85788c9af","type":"message","text":"<@USU9FRPEU>, bug reports for `channelview` should go to ImageCore. But for me,\n```julia&gt; img = testimage(\"multi-channel-time-series.ome.tif\")\n┌ Warning: ignored the empty prefix for '<http://www.openmicroscopy.org/Schemas/OME/2015-01>'; expected to be non-empty\n└ @ EzXML ~/.julia/packages/EzXML/ZNwhK/src/xpath.jl:85\nGray ImageMeta with:\n  data: 4-dimensional AxisArray{Gray{N0f8},4,...} with axes:\n    :y, 1:167\n    :x, 1:439\n    :channel, [:C1, :C2, :C3]\n    :time, 1:7\nAnd data, a 167×439×3×7 reshape(reinterpret(Gray{N0f8}, ::Array{Int8, 6}), 167, 439, 3, 7) with eltype Gray{N0f8}\n  properties:\n    Description: \n    Elapsed_Times: Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}[NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s]\n\njulia&gt; channelview(img)\nNormed ImageMeta with:\n  data: 4-dimensional AxisArray{N0f8,4,...} with axes:\n    :y, 1:167\n    :x, 1:439\n    :channel, [:C1, :C2, :C3]\n    :time, 1:7\nAnd data, a 167×439×3×7 reinterpret(reshape, N0f8, reshape(reinterpret(Gray{N0f8}, ::Array{Int8, 6}), 167, 439, 3, 7)) with eltype N0f8\n  properties:\n    Description: \n    Elapsed_Times: Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}[NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s]```\nso please include `versioninfo` and package versions.","user":"UC8821DPY","ts":"1609327868.118800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U87","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":", bug reports for "},{"type":"text","text":"channelview","style":{"code":true}},{"type":"text","text":" should go to ImageCore. But for me,\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> img = testimage(\"multi-channel-time-series.ome.tif\")\n┌ Warning: ignored the empty prefix for '"},{"type":"link","url":"http://www.openmicroscopy.org/Schemas/OME/2015-01"},{"type":"text","text":"'; expected to be non-empty\n└ @ EzXML ~/.julia/packages/EzXML/ZNwhK/src/xpath.jl:85\nGray ImageMeta with:\n  data: 4-dimensional AxisArray{Gray{N0f8},4,...} with axes:\n    :y, 1:167\n    :x, 1:439\n    :channel, [:C1, :C2, :C3]\n    :time, 1:7\nAnd data, a 167×439×3×7 reshape(reinterpret(Gray{N0f8}, ::Array{Int8, 6}), 167, 439, 3, 7) with eltype Gray{N0f8}\n  properties:\n    Description: \n    Elapsed_Times: Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}[NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s]\n\njulia> channelview(img)\nNormed ImageMeta with:\n  data: 4-dimensional AxisArray{N0f8,4,...} with axes:\n    :y, 1:167\n    :x, 1:439\n    :channel, [:C1, :C2, :C3]\n    :time, 1:7\nAnd data, a 167×439×3×7 reinterpret(reshape, N0f8, reshape(reinterpret(Gray{N0f8}, ::Array{Int8, 6}), 167, 439, 3, 7)) with eltype N0f8\n  properties:\n    Description: \n    Elapsed_Times: Unitful.Quantity{Float64, 𝐓, Unitful.FreeUnits{(s,), 𝐓, nothing}}[NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s; NaN s NaN s … NaN s NaN s]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so please include "},{"type":"text","text":"versioninfo","style":{"code":true}},{"type":"text","text":" and package versions."}]}]}]},{"client_msg_id":"b38d893d-ee0b-4066-a046-a37b13deac87","type":"message","text":"My understanding of the type is increasing, so it might even come with a PR. In this specific case, we may want affect the image along the `:channel` axis.","user":"USU9FRPEU","ts":"1609329200.120400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ue+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My understanding of the type is increasing, so it might even come with a PR. In this specific case, we may want affect the image along the "},{"type":"text","text":":channel","style":{"code":true}},{"type":"text","text":" axis."}]}]}]},{"client_msg_id":"a8404cde-9347-4c9e-9208-00b41e2c8818","type":"message","text":"I wrote a small reader package for Phantom high speed video .cine files, and I'm trying to figure out where it fits/which interfaces it should conform to before (/if) I register it","user":"UB2QRMQPN","ts":"1610131955.123500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w=yN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wrote a small reader package for Phantom high speed video .cine files, and I'm trying to figure out where it fits/which interfaces it should conform to before (/if) I register it"}]}]}]},{"client_msg_id":"9fb7226c-40f6-49f7-8c09-738ca2849ed0","type":"message","text":"ffmpeg (and thus VideoIO) supports .cine files, but downgrades them to a bit depth of 8 bits, while I want access to my camera's full 12 bit range. The high framerate also violates the real-time assumptions made by VideoIO (indexing by the time in seconds? I'm dealing with microseconds!), and the files can be many gigabytes, which makes it prohibitively expensive to load them in a non-streaming manner","user":"UB2QRMQPN","ts":"1610132398.127300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pf6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ffmpeg (and thus VideoIO) supports .cine files, but downgrades them to a bit depth of 8 bits, while I want access to my camera's full 12 bit range. The high framerate also violates the real-time assumptions made by VideoIO (indexing by the time in seconds? I'm dealing with microseconds!), and the files can be many gigabytes, which makes it prohibitively expensive to load them in a non-streaming manner"}]}]}]},{"client_msg_id":"e37cafbf-419e-459b-ad92-710fb348a096","type":"message","text":"<https://github.com/stillyslalom/CineFiles.jl>","user":"UB2QRMQPN","ts":"1610133029.127500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q6j","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/stillyslalom/CineFiles.jl"}]}]}]}]}