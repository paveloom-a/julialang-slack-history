{"cursor": 0, "messages": [{"client_msg_id":"45ca4a2b-a470-4580-8bfd-3289459b27b9","type":"message","text":"Hi, I was considering to update IntervalConstraintProgramming.jl to use the new major version of ModelingToolkit (<https://github.com/JuliaIntervals/IntervalConstraintProgramming.jl/issues/172>) -- because we updated LazySets the other day and now it's out of sync with other optional dependencies such as this one.","user":"U9Z3H4H5F","ts":"1610651697.002000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O9mv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, I was considering to update IntervalConstraintProgramming.jl to use the new major version of ModelingToolkit ("},{"type":"link","url":"https://github.com/JuliaIntervals/IntervalConstraintProgramming.jl/issues/172"},{"type":"text","text":") -- because we updated LazySets the other day and now it's out of sync with other optional dependencies such as this one."}]}]}]},{"client_msg_id":"c1d3d10d-1fd7-4a8b-bba9-a873317ff60d","type":"message","text":"(by the way, it's a pity that messages get removed in low-traffic channels such as this one)","user":"U9Z3H4H5F","ts":"1610651767.003400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aLe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(by the way, it's a pity that messages get removed in low-traffic channels such as this one)"}]}]}]},{"client_msg_id":"35857454-61f2-4de3-a582-3673f67afa2b","type":"message","text":"do you know how to update, eg.\n\n```function make_constraint(expr::Operation, constraint, var=[])\n    C = Contractor(var, expr)\n    ex = expr ∈ constraint\n    ConstraintSeparator(constraint, C, ex)\nend```\ni think it's `expr::Term`  but i'm not 100% sure if that covers all relevant cases","user":"U9Z3H4H5F","ts":"1610652210.004400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jK44","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do you know how to update, eg.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function make_constraint(expr::Operation, constraint, var=[])\n    C = Contractor(var, expr)\n    ex = expr ∈ constraint\n    ConstraintSeparator(constraint, C, ex)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"i think it's "},{"type":"text","text":"expr::Term","style":{"code":true}},{"type":"text","text":"  but i'm not 100% sure if that covers all relevant cases"}]}]}]},{"client_msg_id":"cfeca9a8-b94b-495b-800c-b0966f732b80","type":"message","text":"This has been on my list of things to do but I haven’t got round to it yet, and am unlikely to soon…","user":"U67G3QRJM","ts":"1610652982.005300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0NQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This has been on my list of things to do but I haven’t got round to it yet, and am unlikely to soon…"}]}]}]},{"client_msg_id":"54165407-45ad-480b-bcb1-5397afaa59ab","type":"message","text":"The problem is that the internals of MTK are changing again","user":"U67G3QRJM","ts":"1610652999.005600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FhN9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The problem is that the internals of MTK are changing again"}]}]}]},{"client_msg_id":"d7dc2a1c-ab6e-4816-ab6a-c341ec25b500","type":"message","text":"Oh they already did","user":"U67G3QRJM","ts":"1610653012.005800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U6Vxy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh they already did"}]}]}]},{"client_msg_id":"0eefe7b8-ba69-44cf-8fa1-a7f8d781c834","type":"message","text":"<https://github.com/SciML/ModelingToolkit.jl/pull/720#issuecomment-757110672>","user":"U67G3QRJM","ts":"1610653036.006000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AWe","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/SciML/ModelingToolkit.jl/pull/720#issuecomment-757110672"}]}]}]},{"client_msg_id":"f7dff489-ff09-4335-babd-3362f63ada11","type":"message","text":"on master","user":"U67G3QRJM","ts":"1610653091.006200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2+ZA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"on master"}]}]}]},{"client_msg_id":"a9d27f70-deea-478d-a438-7dff3f44dbd5","type":"message","text":"Not released yet","user":"U67G3QRJM","ts":"1610653160.007000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gc9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not released yet"}]}]}]},{"client_msg_id":"c2faa195-249f-4eea-a0ff-11e4d98a62bc","type":"message","text":"I think it’s `expr::Num`","user":"U67G3QRJM","ts":"1610653177.007600","team":"T68168MUP","edited":{"user":"U67G3QRJM","ts":"1610653191.000000"},"blocks":[{"type":"rich_text","block_id":"LZM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it’s "},{"type":"text","text":"expr::Num","style":{"code":true}}]}]}]},{"client_msg_id":"5949cc1b-9634-440a-8c89-6a0c1c8e540c","type":"message","text":"&gt; If you were dispatching on `Term`, now use `istree(x)` to check if `x` is of any of these expression types.\n\nNot sure that I understand this statement -- does it say that `Term` is not tree-like, but the others (`Add`  `Mul` `Pow`  ) are ?","user":"U9Z3H4H5F","ts":"1610653177.007700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yI+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> If you were dispatching on "},{"type":"text","text":"Term","style":{"code":true}},{"type":"text","text":", now use "},{"type":"text","text":"istree(x)","style":{"code":true}},{"type":"text","text":" to check if "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" is of any of these expression types.\n\nNot sure that I understand this statement -- does it say that "},{"type":"text","text":"Term","style":{"code":true}},{"type":"text","text":" is not tree-like, but the others ("},{"type":"text","text":"Add","style":{"code":true}},{"type":"text","text":"  "},{"type":"text","text":"Mul","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"Pow","style":{"code":true}},{"type":"text","text":"  ) are ?"}]}]}]},{"client_msg_id":"900be0fa-76ce-462b-996b-342aafa6c59e","type":"message","text":"Everything is treelike unless it’s something like `x`","user":"U67G3QRJM","ts":"1610653214.008300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tj1JQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Everything is treelike unless it’s something like "},{"type":"text","text":"x","style":{"code":true}}]}]}]},{"client_msg_id":"75caa1ee-4e5a-42e4-b068-b5d0b12d3609","type":"message","text":"i.e. a symbol or a number","user":"U67G3QRJM","ts":"1610653229.008800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8X9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i.e. a symbol or a number"}]}]}]},{"client_msg_id":"43694bbb-9a74-49cf-87f2-8dd55017d2b4","type":"message","text":"ok","user":"U9Z3H4H5F","ts":"1610653263.009800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"94OCs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok"}]}]}]},{"client_msg_id":"7c0acf17-633b-4db5-a49a-70726ac56009","type":"message","text":"The equivalent of `expr::Operation` I belive is now `expr::Num`. But the first thing to do is to unwrap that using `value(expr)`, which will give a `Term` or `Add` or `Mul` or `Pow`","user":"U67G3QRJM","ts":"1610653264.009900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m2wF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The equivalent of "},{"type":"text","text":"expr::Operation","style":{"code":true}},{"type":"text","text":" I belive is now "},{"type":"text","text":"expr::Num","style":{"code":true}},{"type":"text","text":". But the first thing to do is to unwrap that using "},{"type":"text","text":"value(expr)","style":{"code":true}},{"type":"text","text":", which will give a "},{"type":"text","text":"Term","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"Add","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"Mul","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"Pow","style":{"code":true}}]}]}]},{"client_msg_id":"52a7c061-982e-4050-99a7-a5ae6199824c","type":"message","text":"`Num` is a wrapper which is `&lt;: Real` so that it can be passed through arithmetic things from other packages","user":"U67G3QRJM","ts":"1610653307.010600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pw8NV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Num","style":{"code":true}},{"type":"text","text":" is a wrapper which is "},{"type":"text","text":"<: Real","style":{"code":true}},{"type":"text","text":" so that it can be passed through arithmetic things from other packages"}]}]}]},{"client_msg_id":"2b4fae1d-d36a-41d8-8720-47d94de4676b","type":"message","text":"when you do `@variables x y`  now, the elements are of that type (`Num`)","user":"U9Z3H4H5F","ts":"1610653344.011200","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1610653370.000000"},"blocks":[{"type":"rich_text","block_id":"0lm1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"when you do "},{"type":"text","text":"@variables x y","style":{"code":true}},{"type":"text","text":"  now, the elements are of that type ("},{"type":"text","text":"Num","style":{"code":true}},{"type":"text","text":")"}]}]}]},{"client_msg_id":"b4da1867-6fa3-460c-a64d-06f422945070","type":"message","text":"yes, so they can be passed through functions that expect reals","user":"U67G3QRJM","ts":"1610653489.012200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DGT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, so they can be passed through functions that expect reals"}]}]}]},{"client_msg_id":"75570b5b-bafe-492c-8811-218be81a7215","type":"message","text":":thumbsup:  how about `Constant`?","user":"U9Z3H4H5F","ts":"1610653534.012800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cyl","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"thumbsup"},{"type":"text","text":"  how about "},{"type":"text","text":"Constant","style":{"code":true}},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"114a33d4-b858-490d-9427-d1a8517c8fa4","type":"message","text":"But doing `value(x)` will give you the actual object","user":"U67G3QRJM","ts":"1610653538.013000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0iZZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But doing "},{"type":"text","text":"value(x)","style":{"code":true}},{"type":"text","text":" will give you the actual object"}]}]}]},{"client_msg_id":"e4b97a56-841c-4226-a87d-08009e3fc713","type":"message","text":"constants are now just normal Julia Ints, Floats etc","user":"U67G3QRJM","ts":"1610653546.013400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cZt9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"constants are now just normal Julia Ints, Floats etc"}]}]}]},{"client_msg_id":"9ba9ca36-2a72-4dad-8a04-ef6ca0f256a5","type":"message","text":"MTK.Constant has disappeared, in other words","user":"U67G3QRJM","ts":"1610653562.014000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FsSL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"MTK.Constant has disappeared, in other words"}]}]}]},{"client_msg_id":"49e48f98-792a-413f-a8b0-03f0536f30bd","type":"message","text":"Use `operation(ex)` and `arguments(ex)` to get the operation and arguments of a tree-like thing","user":"U67G3QRJM","ts":"1610653653.014900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aMgh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Use "},{"type":"text","text":"operation(ex)","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"arguments(ex)","style":{"code":true}},{"type":"text","text":" to get the operation and arguments of a tree-like thing"}]}]}]},{"client_msg_id":"c32eae49-a9a9-47f5-9a70-378294116ace","type":"message","text":"From <@U68907M46>:\n```f(ex::Num)=f(value(ex))\nf(ex) = istree(ex) ? .... : ....```","user":"U67G3QRJM","ts":"1610653742.015600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Svu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From "},{"type":"user","user_id":"U68907M46"},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"f(ex::Num)=f(value(ex))\nf(ex) = istree(ex) ? .... : ...."}]}]}]},{"type":"message","subtype":"channel_join","ts":"1610653745.015800","user":"U68907M46","text":"<@U68907M46> has joined the channel","inviter":"U67G3QRJM"},{"client_msg_id":"36aaee50-d90b-47cd-bf8f-1996f969569d","type":"message","text":"`value` etc. are not exported from MTK by the way.","user":"U67G3QRJM","ts":"1610653789.016500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2qh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"value","style":{"code":true}},{"type":"text","text":" etc. are not exported from MTK by the way."}]}]}]},{"client_msg_id":"d091a22f-4ab6-43e4-8c4a-de385ca6cbb7","type":"message","text":"```julia&gt; value(x+y)\nx + y\n\njulia&gt; typeof(ans)\nSymbolicUtils.Add{Real, Int64, Dict{Any, Number}}```","user":"U67G3QRJM","ts":"1610653822.017100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1W2+c","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> value(x+y)\nx + y\n\njulia> typeof(ans)\nSymbolicUtils.Add{Real, Int64, Dict{Any, Number}}"}]}]}]},{"client_msg_id":"91642169-b0a6-4fb2-be65-dec64c469ffc","type":"message","text":"&gt;  The equivalent of `expr::Operation` I belive is now `expr::Num`.\nit depends on the context, i believe? for example in the constructor def (<https://github.com/JuliaIntervals/IntervalConstraintProgramming.jl/blob/master/src/contractor.jl#L8>) is it `ex&lt;:Union{Term,Expr}` or maybe `Symbolic` ?","user":"U9Z3H4H5F","ts":"1610653846.017400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i=1i","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" The equivalent of "},{"type":"text","text":"expr::Operation","style":{"code":true}},{"type":"text","text":" I belive is now "},{"type":"text","text":"expr::Num","style":{"code":true}},{"type":"text","text":"."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"it depends on the context, i believe? for example in the constructor def ("},{"type":"link","url":"https://github.com/JuliaIntervals/IntervalConstraintProgramming.jl/blob/master/src/contractor.jl#L8"},{"type":"text","text":") is it "},{"type":"text","text":"ex<:Union{Term,Expr}","style":{"code":true}},{"type":"text","text":" or maybe "},{"type":"text","text":"Symbolic","style":{"code":true}},{"type":"text","text":" ?"}]}]}]},{"client_msg_id":"3d5af262-6557-4928-bf09-97df99c05c47","type":"message","text":"yeah... to be fair though, it's like 100x faster","user":"U69BL50BF","ts":"1610654186.018300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GdC86","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah... to be fair though, it's like 100x faster"}]}]}],"reactions":[{"name":"slightly_smiling_face","users":["U9Z3H4H5F"],"count":1}]},{"client_msg_id":"599bd926-ec07-4331-acaf-d425d2ea43e5","type":"message","text":"```julia&gt; @variables x y\n(x, y)\n\njulia&gt; ModelingToolkit.istree(x)\nfalse\n\njulia&gt; ModelingToolkit.istree(x + y)\nfalse\n\njulia&gt; ModelingToolkit.istree(x + y &lt;= 1)\ntrue```\n","user":"U9Z3H4H5F","ts":"1610655785.019900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ppO","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @variables x y\n(x, y)\n\njulia> ModelingToolkit.istree(x)\nfalse\n\njulia> ModelingToolkit.istree(x + y)\nfalse\n\njulia> ModelingToolkit.istree(x + y <= 1)\ntrue"}]},{"type":"rich_text_section","elements":[]}]}]},{"client_msg_id":"38d827ab-b417-4268-855c-16a18a2f04bb","type":"message","text":"`x + y` is not tree but it is not of the form \"x\"","user":"U9Z3H4H5F","ts":"1610655799.020100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oiV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"x + y","style":{"code":true}},{"type":"text","text":" is not tree but it is not of the form \"x\""}]}]}]},{"client_msg_id":"ea68eb35-568e-41e6-af33-3bb36262a0e8","type":"message","text":"so we can't use the logic that what is not tree is what used to be `Variable` ?","user":"U9Z3H4H5F","ts":"1610655846.020800","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1610655855.000000"},"blocks":[{"type":"rich_text","block_id":"PkFRQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so we can't use the logic that what is not tree is what used to be "},{"type":"text","text":"Variable","style":{"code":true}},{"type":"text","text":" ?"}]}]}]},{"client_msg_id":"5df0a78d-3ff2-4332-a227-6e6de3bb8d6b","type":"message","text":"oh, we are on different versions (i was using the latest released versions), where\n\n```julia&gt; @variables x y\n(x, y)\n\njulia&gt; typeof(ModelingToolkit.value(x + y))\nTerm{Real}```","user":"U9Z3H4H5F","ts":"1610656251.022300","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1610656258.000000"},"blocks":[{"type":"rich_text","block_id":"EX4R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, we are on different versions (i was using the latest released versions), where\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @variables x y\n(x, y)\n\njulia> typeof(ModelingToolkit.value(x + y))\nTerm{Real}"}]}]}]},{"client_msg_id":"51054e46-0b07-428a-8813-709db9d2b5e6","type":"message","text":"in master of MT and SU i still get that both `istree(x + y)` and `istree(x^2 + y^2)` are false","user":"U9Z3H4H5F","ts":"1610656645.023900","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1610656736.000000"},"blocks":[{"type":"rich_text","block_id":"F7p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in master of MT and SU i still get that both "},{"type":"text","text":"istree(x + y)","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"istree(x^2 + y^2)","style":{"code":true}},{"type":"text","text":" are false"}]}]}]},{"client_msg_id":"fd9dc003-886f-461f-9c1b-31d4616d3bc6","type":"message","text":"i can try to send a PR to IntervalConstraintProgramming that works with ModelingToolkit v4.5. does that make sense to you <@U67G3QRJM> ? or you prefer to do otherwise?","user":"U9Z3H4H5F","ts":"1610656859.024700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hTB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i can try to send a PR to IntervalConstraintProgramming that works with ModelingToolkit v4.5. does that make sense to you "},{"type":"user","user_id":"U67G3QRJM"},{"type":"text","text":" ? or you prefer to do otherwise?"}]}]}]},{"client_msg_id":"6d264c45-ec7c-46fb-8016-4aa5811fd802","type":"message","text":"<@U9Z3H4H5F>: You need to take `value(x + y)` before using `istree` on the result","user":"U67G3QRJM","ts":"1610657235.025300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gkRa","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U9Z3H4H5F"},{"type":"text","text":": You need to take "},{"type":"text","text":"value(x + y)","style":{"code":true}},{"type":"text","text":" before using "},{"type":"text","text":"istree","style":{"code":true}},{"type":"text","text":" on the result"}]}]}]},{"client_msg_id":"2cd48687-f059-4a4b-a1be-ab29aaea426b","type":"message","text":"I don’t think that makes too much sense since I think the new version will be released soon","user":"U67G3QRJM","ts":"1610657261.026100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2ab","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t think that makes too much sense since I think the new version will be released soon"}]}]}]},{"client_msg_id":"e6d3dd14-c59b-485f-8382-0c53967b1ffb","type":"message","text":"4.5 doesn’t have all the `Add` stuff, right?","user":"U67G3QRJM","ts":"1610657271.026500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q+aQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"4.5 doesn’t have all the "},{"type":"text","text":"Add","style":{"code":true}},{"type":"text","text":" stuff, right?"}]}]}]},{"client_msg_id":"6df2f3ae-311f-4dcd-bd14-8f26ad525cb2","type":"message","text":"But yes I guess we can do it incrementally","user":"U67G3QRJM","ts":"1610657336.026900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RpR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But yes I guess we can do it incrementally"}]}]}]},{"client_msg_id":"3f97866e-a3ce-4dd2-b6d4-6a4f84427ff0","type":"message","text":"ok, i forgot the `value` around the expression, that way it works thanks","user":"U9Z3H4H5F","ts":"1610658135.027300","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1610658150.000000"},"blocks":[{"type":"rich_text","block_id":"n5ZLH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, i forgot the "},{"type":"text","text":"value","style":{"code":true}},{"type":"text","text":" around the expression, that way it works thanks"}]}]}],"reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"dc941347-c30f-4577-86d5-ea476e144542","type":"message","text":"yes, the current release (4.5) doesn't have those other tree types","user":"U9Z3H4H5F","ts":"1610658182.028100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7tv2e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, the current release (4.5) doesn't have those other tree types"}]}]}],"reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"145f6366-5c38-42ea-899d-cf5ed9a9c617","type":"message","text":"ok so then let's update once the new version is released :)","user":"U9Z3H4H5F","ts":"1610658229.028700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hnZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok so then let's update once the new version is released :)"}]}]}],"reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"7e9c8f57-328b-4844-847e-39112cde9927","type":"message","text":"because ICP does make some extensive use of that stuff","user":"U9Z3H4H5F","ts":"1610658255.029100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Ln","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because ICP does make some extensive use of that stuff"}]}]}]}]}