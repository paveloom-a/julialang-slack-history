{"cursor": 1, "messages": [{"client_msg_id":"b4cd6c5f-0f61-45a6-9f23-34c54815e7a2","type":"message","text":"<@UEP1VHE83>: How are you progressing with updating ICP.jl?","user":"U67G3QRJM","ts":"1612911548.079900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U+ayi","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UEP1VHE83"},{"type":"text","text":": How are you progressing with updating ICP.jl?"}]}]}]},{"client_msg_id":"f15fc771-eced-4af0-a421-a1a27e05866b","type":"message","text":"This looks like an interesting and relevant paper <@U01BZJ2JTML>, <@U9Z3H4H5F>, <@U81PB6N77>: <https://cyber.bibl.u-szeged.hu/index.php/actcybern/article/download/4133/4017>","user":"U67G3QRJM","ts":"1613359333.081400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FaZXV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This looks like an interesting and relevant paper "},{"type":"user","user_id":"U01BZJ2JTML"},{"type":"text","text":", "},{"type":"user","user_id":"U9Z3H4H5F"},{"type":"text","text":", "},{"type":"user","user_id":"U81PB6N77"},{"type":"text","text":": "},{"type":"link","url":"https://cyber.bibl.u-szeged.hu/index.php/actcybern/article/download/4133/4017"}]}]}]},{"type":"message","subtype":"channel_join","ts":"1613359338.081600","user":"U81PB6N77","text":"<@U81PB6N77> has joined the channel","inviter":"U67G3QRJM"},{"client_msg_id":"1739cdad-5a07-4418-a28a-c65715bd06e1","type":"message","text":"interesting! i thought about combining <@U01BZJ2JTML>’s probability boxes with reachability when he posted about the package. then he came up with a proof of concept :slightly_smiling_face:","user":"U9Z3H4H5F","ts":"1613361259.081900","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1613362296.000000"},"blocks":[{"type":"rich_text","block_id":"JhA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting! i thought about combining "},{"type":"user","user_id":"U01BZJ2JTML"},{"type":"text","text":"’s probability boxes with reachability when he posted about the package. then he came up with a proof of concept "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"8a977077-315a-44fa-a8cf-0fad618c5ccf","type":"message","text":"It’s a very nice paper, I’ve never seen clouds being applied like this","user":"U01BZJ2JTML","ts":"1613380960.085400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2te","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s a very nice paper, I’ve never seen clouds being applied like this"}]}]}]},{"client_msg_id":"8cdb91e5-0011-4713-bf08-0402dfd6a473","type":"message","text":"I don’t think it’s possible to perform interval arithmetic directly with the confidence intervals though. The intervals don’t retain their confidence interpretation. I don’t know the exact reason for this, but it comes from Fisher","user":"U01BZJ2JTML","ts":"1613381077.087000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tEom","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t think it’s possible to perform interval arithmetic directly with the confidence intervals though. The intervals don’t retain their confidence interpretation. I don’t know the exact reason for this, but it comes from Fisher"}]}]}]},{"client_msg_id":"8fb6e235-da10-4f5d-aea8-d49303ae3d30","type":"message","text":"You can compute with confidence intervals, but you have to use possibility distributions/fuzzy numbers. Maybe you can with clouds too","user":"U01BZJ2JTML","ts":"1613381115.087900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u7J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can compute with confidence intervals, but you have to use possibility distributions/fuzzy numbers. Maybe you can with clouds too"}]}]}]},{"client_msg_id":"0e4223ef-ef57-4888-8a74-5024043d5bfa","type":"message","text":"Yes :slightly_smiling_face: I think it should be quite easy. You can split up the input space into boxes with probability masses attached. The pbox can then be propagated by propagating the intervals. Assigning the probability masses to the boxes is the tricky bit, you have to use pboxes, copulas and H-volume. Can also be done with randomly sampling correlated intervals from pboxes.","user":"U01BZJ2JTML","ts":"1613381468.090800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=fStp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" I think it should be quite easy. You can split up the input space into boxes with probability masses attached. The pbox can then be propagated by propagating the intervals. Assigning the probability masses to the boxes is the tricky bit, you have to use pboxes, copulas and H-volume. Can also be done with randomly sampling correlated intervals from pboxes."}]}]}]},{"client_msg_id":"0087e370-0703-4bed-93bb-46c6006da074","type":"message","text":"there's the splitting and recomputation of flowpipes in subregions that we shall try to circumvent, because the number of regions increase exponentially with the dimension. you can do it in parallel of course, or maybe (?) do it symbolically. some algorithms give information on subregions with only 1 integration. that is the case of Taylor models as <@UA8FZRM35> knows well.. there are other set representations with this property, see the table in <https://arxiv.org/abs/1910.08354> and the example in sec 3.2 there","user":"U9Z3H4H5F","ts":"1613406239.095200","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Utilizing Dependencies to Obtain Subsets of Reachable Sets","title_link":"https://arxiv.org/abs/1910.08354","text":"Reachability analysis, in general, is a fundamental method that supports formally-correct synthesis, robust model predictive control, set-based observers, fault detection, invariant computation,...","fallback":"arXiv.org: Utilizing Dependencies to Obtain Subsets of Reachable Sets","from_url":"https://arxiv.org/abs/1910.08354","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/1910.08354"}],"blocks":[{"type":"rich_text","block_id":"K2sT/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's the splitting and recomputation of flowpipes in subregions that we shall try to circumvent, because the number of regions increase exponentially with the dimension. you can do it in parallel of course, or maybe (?) do it symbolically. some algorithms give information on subregions with only 1 integration. that is the case of Taylor models as "},{"type":"user","user_id":"UA8FZRM35"},{"type":"text","text":" knows well.. there are other set representations with this property, see the table in "},{"type":"link","url":"https://arxiv.org/abs/1910.08354"},{"type":"text","text":" and the example in sec 3.2 there"}]}]}]},{"client_msg_id":"c20c69f9-1e7c-4bfe-aa47-8ca3db414197","type":"message","text":"I had not considered this approach --\n```A two-step method for interpolating interval data based on cubic hermite polynomial models\n<https://doi.org/10.1016/j.apm.2019.12.013>\n<https://www.sciencedirect.com/science/article/abs/pii/S0307904X19307528>```","user":"U68QW0PUZ","ts":"1613774167.096800","team":"T68168MUP","edited":{"user":"U68QW0PUZ","ts":"1613774267.000000"},"blocks":[{"type":"rich_text","block_id":"nTlfK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I had not considered this approach --\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"A two-step method for interpolating interval data based on cubic hermite polynomial models\n"},{"type":"link","url":"https://doi.org/10.1016/j.apm.2019.12.013"},{"type":"text","text":"\n"},{"type":"link","url":"https://www.sciencedirect.com/science/article/abs/pii/S0307904X19307528"}]}]}]},{"client_msg_id":"bf09b559-7d0f-485c-89f4-5b7a96292485","type":"message","text":"Seems like ICP.jl cannot handle non-strict inequalities if used with ModelingToolkit.\n`\n```julia&gt; Separator(vars, f)\nSeparator:\n  - variables: x, y\n(@v1.5) pkg&gt; st IntervalArithmetic IntervalConstraintProgramming ModelingToolkit\nStatus `C:\\Users\\lucaa\\.julia\\environments\\v1.5\\Project.toml`\n  [d1acc4aa] IntervalArithmetic v0.17.7\n  [138f1668] IntervalConstraintProgramming v0.12.1\n  [961ee093] ModelingToolkit v3.20.1\n\njulia&gt; using IntervalArithmetic, IntervalConstraintProgramming, ModelingToolkit\n\njulia&gt; vars = @variables x y\n(x, y)\n\njulia&gt; Separator(vars, x + y &lt; 1)\nSeparator:\n  - variables: x, y\n  - expression: x + y == [-∞, 1]\n\njulia&gt;\n\njulia&gt; Separator(vars, x + y &lt;= 1)\nERROR: MethodError: no method matching iterate(::Nothing)\nClosest candidates are:\n  iterate(::EzXML.StreamReader) at C:\\Users\\lucaa\\.julia\\packages\\EzXML\\ZNwhK\\src\\streamreader.jl:184\n  iterate(::EzXML.StreamReader, ::Any) at C:\\Users\\lucaa\\.julia\\packages\\EzXML\\ZNwhK\\src\\streamreader.jl:184\n  iterate(::LibGit2.GitBranchIter) at D:\\buildbot\\worker\\package_win64\\build\\usr\\share\\julia\\stdlib\\v1.5\\LibGit2\\src\\reference.jl:343\n  ...\nStacktrace:\n [1] indexed_iterate(::Nothing, ::Int64) at .\\tuple.jl:84\n [2] Separator(::Tuple{Operation,Operation}, ::Operation) at C:\\Users\\lucaa\\.julia\\packages\\IntervalConstraintProgramming\\CQFKf\\src\\separator.jl:199\n [3] top-level scope at REPL[15]:1```\nIs this normal?","user":"U012RPHRSP3","ts":"1614077312.001600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0=k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems like ICP.jl cannot handle non-strict inequalities if used with ModelingToolkit.\n`\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Separator(vars, f)\nSeparator:\n  - variables: x, y\n(@v1.5) pkg> st IntervalArithmetic IntervalConstraintProgramming ModelingToolkit\nStatus `C:\\Users\\lucaa\\.julia\\environments\\v1.5\\Project.toml`\n  [d1acc4aa] IntervalArithmetic v0.17.7\n  [138f1668] IntervalConstraintProgramming v0.12.1\n  [961ee093] ModelingToolkit v3.20.1\n\njulia> using IntervalArithmetic, IntervalConstraintProgramming, ModelingToolkit\n\njulia> vars = @variables x y\n(x, y)\n\njulia> Separator(vars, x + y < 1)\nSeparator:\n  - variables: x, y\n  - expression: x + y == [-∞, 1]\n\njulia>\n\njulia> Separator(vars, x + y <= 1)\nERROR: MethodError: no method matching iterate(::Nothing)\nClosest candidates are:\n  iterate(::EzXML.StreamReader) at C:\\Users\\lucaa\\.julia\\packages\\EzXML\\ZNwhK\\src\\streamreader.jl:184\n  iterate(::EzXML.StreamReader, ::Any) at C:\\Users\\lucaa\\.julia\\packages\\EzXML\\ZNwhK\\src\\streamreader.jl:184\n  iterate(::LibGit2.GitBranchIter) at D:\\buildbot\\worker\\package_win64\\build\\usr\\share\\julia\\stdlib\\v1.5\\LibGit2\\src\\reference.jl:343\n  ...\nStacktrace:\n [1] indexed_iterate(::Nothing, ::Int64) at .\\tuple.jl:84\n [2] Separator(::Tuple{Operation,Operation}, ::Operation) at C:\\Users\\lucaa\\.julia\\packages\\IntervalConstraintProgramming\\CQFKf\\src\\separator.jl:199\n [3] top-level scope at REPL[15]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIs this normal?"}]}]}],"thread_ts":"1614077312.001600","reply_count":1,"reply_users_count":1,"latest_reply":"1614077410.001700","reply_users":["U012RPHRSP3"],"subscribed":false},{"client_msg_id":"e07787b3-2ea5-47f1-b875-cd252d294f81","type":"message","text":"very nice tutorial!\n\ni wrote the example on how to post-process the result using LazySets, <https://github.com/JuliaIntervals/juliaintervals.github.io/pull/3>  , comments /questions welcome","user":"U9Z3H4H5F","ts":"1614091428.004300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2n2WO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"very nice tutorial!\n\ni wrote the example on how to post-process the result using LazySets, "},{"type":"link","url":"https://github.com/JuliaIntervals/juliaintervals.github.io/pull/3"},{"type":"text","text":"  , comments /questions welcome"}]}]}]},{"client_msg_id":"2d501107-2908-469c-a41b-adcb0a743a9f","type":"message","text":"my idea for the post was to make to  use it in the context of a safety verification problem: prove that a dynamical system does not enter an \"unsafe region\"","user":"U9Z3H4H5F","ts":"1614091464.005100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ab9JS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"my idea for the post was to make to  use it in the context of a safety verification problem: prove that a dynamical system does not enter an \"unsafe region\""}]}]}]},{"client_msg_id":"2a541dc3-ba95-4416-b6b8-add703f7ec80","type":"message","text":"the procedure is then: (1) compute the region with ICP, (2) approximate with lazysets using a polyhedron or with the lazy CH array depending on the type of safety property, (3) compute the flowpipe with ReachabilityAnalysis and intersect it with such state.\n\nif you want to write it i can guide you","user":"U9Z3H4H5F","ts":"1614091582.007200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qQC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the procedure is then: (1) compute the region with ICP, (2) approximate with lazysets using a polyhedron or with the lazy CH array depending on the type of safety property, (3) compute the flowpipe with ReachabilityAnalysis and intersect it with such state.\n\nif you want to write it i can guide you"}]}]}],"thread_ts":"1614091582.007200","reply_count":4,"reply_users_count":2,"latest_reply":"1614092696.007900","reply_users":["U012RPHRSP3","U9Z3H4H5F"],"subscribed":false},{"client_msg_id":"f5e9578e-6fdf-4f9d-8e19-7afee1747dec","type":"message","text":"hi, LazySets.jl, has now been updated to use Symbolics.jl as an optional modeling library","user":"U9Z3H4H5F","ts":"1615403127.010200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hyfz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi, LazySets.jl, has now been updated to use Symbolics.jl as an optional modeling library"}]}]}]},{"client_msg_id":"c6d39ecb-7d7b-40d1-b9ac-1d93a5d311eb","type":"message","text":":prism-julia-color-split:","user":"U68QW0PUZ","ts":"1615421107.012300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w/mC","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"prism-julia-color-split"}]}]}]},{"client_msg_id":"d50d85ec-c8eb-4322-9599-ef385703800e","type":"message","text":"is there a simple way to extract the nonlinear part of a `TaylorN`?\n\n`using TaylorSeries`\n\n`x = set_variables(\"x\", numvars=2, order=10)`\n```2-element Array{TaylorN{Float64},1}:\n  1.0 x₁ + 𝒪(‖x‖¹¹)\n  1.0 x₂ + 𝒪(‖x‖¹¹)```\n`p = (1 + x[1] - 2x[2])^2`\n``` 1.0 + 2.0 x₁ - 4.0 x₂ + 1.0 x₁² - 4.0 x₁ x₂ + 4.0 x₂² + 𝒪(‖x‖¹¹)```\n`p - constant_term(p) - linear_polynomial(p)`\n``` 0.0 + 𝒪(‖x‖²)```\ndoesn't work because the order of linear_polynomial(p) is 1.","user":"U9Z3H4H5F","ts":"1616178074.002500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hrLW1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a simple way to extract the nonlinear part of a "},{"type":"text","text":"TaylorN","style":{"code":true}},{"type":"text","text":"?\n\n"},{"type":"text","text":"using TaylorSeries","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"x = set_variables(\"x\", numvars=2, order=10)","style":{"code":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"2-element Array{TaylorN{Float64},1}:\n  1.0 x₁ + 𝒪(‖x‖¹¹)\n  1.0 x₂ + 𝒪(‖x‖¹¹)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"p = (1 + x[1] - 2x[2])^2","style":{"code":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":" 1.0 + 2.0 x₁ - 4.0 x₂ + 1.0 x₁² - 4.0 x₁ x₂ + 4.0 x₂² + 𝒪(‖x‖¹¹)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"p - constant_term(p) - linear_polynomial(p)","style":{"code":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":" 0.0 + 𝒪(‖x‖²)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"doesn't work because the order of linear_polynomial(p) is 1."}]}]}]},{"client_msg_id":"ecc561ae-bac5-41f6-bc52-452378e2965f","type":"message","text":"I thought that kind of thing had got fixed to not truncate like that :confused:","user":"U67G3QRJM","ts":"1616178388.003100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XWpS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought that kind of thing had got fixed to not truncate like that "},{"type":"emoji","name":"confused"}]}]}]},{"client_msg_id":"df368ad7-db6e-404a-8ca3-4739f4dcee14","type":"message","text":"I guess you can manually convert the linear part back to a Taylor with the correct degree","user":"U67G3QRJM","ts":"1616178411.003700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N8=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess you can manually convert the linear part back to a Taylor with the correct degree"}]}]}],"reactions":[{"name":"+1","users":["U9Z3H4H5F"],"count":1}]},{"client_msg_id":"ea3d7154-f3b3-4680-9421-4ecd2fd743a7","type":"message","text":"`pnl = copy(p)`\n`pnl.coeffs[1] = HomogeneousPolynomial([0.], 0)`\n`pnl.coeffs[2] = HomogeneousPolynomial([0], 0)`\n`pnl`","user":"U9Z3H4H5F","ts":"1616178430.003900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q3e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pnl = copy(p)","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"pnl.coeffs[1] = HomogeneousPolynomial([0.], 0)","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"pnl.coeffs[2] = HomogeneousPolynomial([0], 0)","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"pnl","style":{"code":true}}]}]}]},{"client_msg_id":"2a617371-06ec-4678-9f31-7f945c4084f8","type":"message","text":"``` 1.0 x₁² - 4.0 x₁ x₂ + 4.0 x₂² + 𝒪(‖x‖¹¹)```","user":"U9Z3H4H5F","ts":"1616178443.004100","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1616178521.000000"},"blocks":[{"type":"rich_text","block_id":"va8","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":" 1.0 x₁² - 4.0 x₁ x₂ + 4.0 x₂² + 𝒪(‖x‖¹¹)"}]}]}]},{"client_msg_id":"1c718526-6599-4cb1-8b54-efcf204e0c9f","type":"message","text":"how about manually setting to zero the zeroth and first order homogeneous polynomials?","user":"U9Z3H4H5F","ts":"1616178458.004600","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1616178515.000000"},"blocks":[{"type":"rich_text","block_id":"qd6UK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how about manually setting to zero the zeroth and first order homogeneous polynomials?"}]}]}]},{"client_msg_id":"812bbc85-a08f-4a91-b14a-2d1873ddec1c","type":"message","text":"Yes that should work","user":"U67G3QRJM","ts":"1616179444.006700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p+NQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes that should work"}]}]}]},{"client_msg_id":"7b8e8599-f23d-4ebc-adda-6fe2e8f27e65","type":"message","text":"`pnl.coeffs[2:end] = HomogeneousPolynomial(0)` or something?","user":"U67G3QRJM","ts":"1616179470.007200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d78c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pnl.coeffs[2:end] = HomogeneousPolynomial(0)","style":{"code":true}},{"type":"text","text":" or something?"}]}]}]},{"client_msg_id":"f410f773-d12e-46f0-a9c3-c189ba637b89","type":"message","text":"yes. i deleted my last comment because it was wrong -- one needs to do a `deepcopy(p)`","user":"U9Z3H4H5F","ts":"1616179544.007900","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1616179626.000000"},"blocks":[{"type":"rich_text","block_id":"6qI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes. i deleted my last comment because it was wrong -- one needs to do a "},{"type":"text","text":"deepcopy(p)","style":{"code":true}}]}]}],"reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"a569c09b-f66f-4137-8607-4e1dbb2751c2","type":"message","text":"Hey! I see there are multiple different libraries providing interval functionalities. How to know which one to use?","user":"U01MG0TN079","ts":"1617894827.009700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8Sv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey! I see there are multiple different libraries providing interval functionalities. How to know which one to use?"}]}]}]},{"client_msg_id":"a31113b8-a976-4ec4-b9e8-0f0d387609fa","type":"message","text":"What do you need <@U01MG0TN079>","user":"U6QGE7S86","ts":"1617895208.009900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x6T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you need "},{"type":"user","user_id":"U01MG0TN079"}]}]}]},{"client_msg_id":"dc8e4a99-e880-4336-8707-45bd442b5a1a","type":"message","text":"It's best to describe your use-case / problem to solve.","user":"U6QGE7S86","ts":"1617895222.010300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"91xig","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's best to describe your use-case / problem to solve."}]}]}]},{"client_msg_id":"07479ecc-9a92-4a97-a6ab-52d613193a1b","type":"message","text":"I'm working with elements in a number field using Hecke.jl and do a lot of comparisons. This is now the bottleneck in my code, and since actually I only need my comparisons to be exact \"in one direction\", I want to do as many comparisons as possible in an as-cheap-as-possible manner (i.e. using Float64 if possible).","user":"U01MG0TN079","ts":"1617895301.011700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BRhL1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm working with elements in a number field using Hecke.jl and do a lot of comparisons. This is now the bottleneck in my code, and since actually I only need my comparisons to be exact \"in one direction\", I want to do as many comparisons as possible in an as-cheap-as-possible manner (i.e. using Float64 if possible)."}]}]}]},{"client_msg_id":"c2cedec3-0c17-4e71-b811-eb93de9c7127","type":"message","text":"This means, I wil usually be looking for, say, all elements between some two bounds (the elements and the bounds are number field elements). It is no problem to have a few too many elements outside of the bounds, but I need to be sure all those within the bounds will appear.","user":"U01MG0TN079","ts":"1617895391.013600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Of9YT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This means, I wil usually be looking for, say, all elements between some two bounds (the elements and the bounds are number field elements). It is no problem to have a few too many elements outside of the bounds, but I need to be sure all those within the bounds will appear."}]}]}]},{"client_msg_id":"ac65bf8b-d7f8-4308-b6fd-e6155cf80dfd","type":"message","text":"Some code would be useful - but it does sound like IntervalArithmetic.jl could help.","user":"U6QGE7S86","ts":"1617895413.014300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hNF+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some code would be useful - but it does sound like IntervalArithmetic.jl could help."}]}]}]},{"client_msg_id":"d11e2578-85ab-467d-ae2b-719f39a318cc","type":"message","text":"If you have an `x \\in [1, 3]` and do a bunch of operations on it with IntervalArithmetic.jl, you are mathematically guaranteed that `x` is contained in your ending interval.","user":"U6QGE7S86","ts":"1617895509.017300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JYwjx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you have an "},{"type":"text","text":"x \\in [1, 3]","style":{"code":true}},{"type":"text","text":" and do a bunch of operations on it with IntervalArithmetic.jl, you are mathematically guaranteed that "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" is contained in your ending interval."}]}]}]},{"client_msg_id":"78f2d45b-06f4-4591-999f-960be6af7111","type":"message","text":"I started to do some such approximate computations, but I think it might be easier to rely on some interval arithmetic lib to be sure the approximations are safe (enstead of doing everything by hand and probably introducing mistakes). What I'd like, then, is to have a library  which is as fast as possible, but still \"safe\", in that it will provide only mathematically correct intervals. The tightness of the intervals it generates is not a big deal, mainly because I won't do many operations with it I think.","user":"U01MG0TN079","ts":"1617895516.017400","team":"T68168MUP","edited":{"user":"U01MG0TN079","ts":"1617895627.000000"},"blocks":[{"type":"rich_text","block_id":"ArW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I started to do some such approximate computations, but I think it might be easier to rely on some interval arithmetic lib to be sure the approximations are safe (enstead of doing everything by hand and probably introducing mistakes). What I'd like, then, is to have a library  which is as fast as possible, but still \"safe\", in that it will provide only mathematically correct intervals. The tightness of the intervals it generates is not a big deal, mainly because I won't do many operations with it I think."}]}]}]},{"client_msg_id":"e617cf6f-33dc-4d12-be3e-9e29ad6be72e","type":"message","text":"All the code I have is in my github repo… can I link to that?","user":"U01MG0TN079","ts":"1617895547.018100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dt5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"All the code I have is in my github repo… can I link to that?"}]}]}]},{"client_msg_id":"59677e7d-2662-45fe-88f5-e1d755287d36","type":"message","text":"Nah, just check if this seems about right for you:","user":"U6QGE7S86","ts":"1617895619.018500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ff/K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nah, just check if this seems about right for you:"}]}]}]},{"client_msg_id":"73d398d4-d4bd-45cb-b682-f02de7ac10a1","type":"message","text":"```\njulia&gt; using IntervalArithmetic\n\njulia&gt; X = 1..2\n[1, 2]\n\njulia&gt; Y = 3..4\n[3, 4]\n\njulia&gt; @show X ∩ Y # typed \\cap&lt;TAB\nX ∩ Y = ∅\n∅\n\njulia&gt; @show X ∪ Y # TYPED \\cup&lt;TAB&gt;\nX ∪ Y = [1, 4]\n[1, 4]\n\njulia&gt; @show X + Y\nX + Y = [4, 6]\n[4, 6]\n\njulia&gt; @show X*Y\nX * Y = [3, 8]\n[3, 8]\n\njulia&gt; @show X^3\nX ^ 3 = [1, 8]\n[1, 8]\n\njulia&gt; @show X/Y\nX / Y = [0.25, 0.666667]\n[0.25, 0.666667]```","user":"U6QGE7S86","ts":"1617895674.018900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y=1I6","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\njulia> using IntervalArithmetic\n\njulia> X = 1..2\n[1, 2]\n\njulia> Y = 3..4\n[3, 4]\n\njulia> @show X ∩ Y # typed \\cap<TAB\nX ∩ Y = ∅\n∅\n\njulia> @show X ∪ Y # TYPED \\cup<TAB>\nX ∪ Y = [1, 4]\n[1, 4]\n\njulia> @show X + Y\nX + Y = [4, 6]\n[4, 6]\n\njulia> @show X*Y\nX * Y = [3, 8]\n[3, 8]\n\njulia> @show X^3\nX ^ 3 = [1, 8]\n[1, 8]\n\njulia> @show X/Y\nX / Y = [0.25, 0.666667]\n[0.25, 0.666667]"}]}]}]},{"client_msg_id":"6d7cb48e-510b-4597-a391-4951f7fb351f","type":"message","text":"Taken straight from the tutorial site: <https://juliaintervals.github.io/pages/tutorials/tutorialArithmetic/>","user":"U6QGE7S86","ts":"1617895688.019200","team":"T68168MUP","attachments":[{"title":"JuliaIntervals","title_link":"https://juliaintervals.github.io/pages/tutorials/tutorialArithmetic/","text":"Interval computations with Julia","fallback":"JuliaIntervals","image_url":"https://raw.githubusercontent.com/JuliaIntervals/juliaintervals.github.io/master/_assets/juliaintervals-logoTest.png","image_width":250,"image_height":250,"from_url":"https://juliaintervals.github.io/pages/tutorials/tutorialArithmetic/","image_bytes":7319,"service_name":"juliaintervals.github.io","id":1,"original_url":"https://juliaintervals.github.io/pages/tutorials/tutorialArithmetic/"}],"blocks":[{"type":"rich_text","block_id":"DpOda","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Taken straight from the tutorial site: "},{"type":"link","url":"https://juliaintervals.github.io/pages/tutorials/tutorialArithmetic/"}]}]}]},{"client_msg_id":"509262ab-f125-4626-a762-9931fdf46093","type":"message","text":"yeah, that's right. Can I also do `x \\leq y` ?","user":"U01MG0TN079","ts":"1617895722.019700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OOYJ+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, that's right. Can I also do "},{"type":"text","text":"x \\leq y","style":{"code":true}},{"type":"text","text":" ?"}]}]}]},{"client_msg_id":"2ac4daaf-e034-4761-a67a-858323bbd93f","type":"message","text":"and is `IntervalArithmetics` 's performance close to using `Float64` s ?","user":"U01MG0TN079","ts":"1617895745.020400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"av=b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and is "},{"type":"text","text":"IntervalArithmetics","style":{"code":true}},{"type":"text","text":" 's performance close to using "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" s ?"}]}]}]},{"client_msg_id":"ce3ff7e0-4cb5-4b9c-8673-3a9454d8629a","type":"message","text":"```julia&gt; X ≤ Y\ntrue```","user":"U6QGE7S86","ts":"1617895747.020500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7I6H","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> X ≤ Y\ntrue"}]}]}]},{"client_msg_id":"74f53bb2-c78a-4a8a-955d-c215205401e1","type":"message","text":"It's about as good as you can get with Julia, yes.","user":"U6QGE7S86","ts":"1617895760.020800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sp6N=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's about as good as you can get with Julia, yes."}]}]}]},{"client_msg_id":"e5a96afb-1ea2-45b2-becf-0af71a324c6d","type":"message","text":"They were also working on using Float32s + GPUs if you really need to squeeze out the performance.","user":"U6QGE7S86","ts":"1617895786.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ct5h6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They were also working on using Float32s + GPUs if you really need to squeeze out the performance."}]}]}]},{"client_msg_id":"6383de4f-c446-4d4a-95b4-a46dfe018319","type":"message","text":"OK, one last thing then: I've skimmed the doc, but I'm not sure what concrete type these intervals are?","user":"U01MG0TN079","ts":"1617895815.022200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fdRh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, one last thing then: I've skimmed the doc, but I'm not sure what concrete type these intervals are?"}]}]}]},{"client_msg_id":"65fd2335-57dc-4502-a1c2-00a050fbe0cb","type":"message","text":"```\njulia&gt; @btime X ≤ Y\n  17.607 ns (0 allocations: 0 bytes)\ntrue```\n```julia&gt; @btime $X + $Y\n  0.012 ns (0 allocations: 0 bytes)\n[4, 6]```","user":"U6QGE7S86","ts":"1617895835.022500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Tt","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\njulia> @btime X ≤ Y\n  17.607 ns (0 allocations: 0 bytes)\ntrue"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime $X + $Y\n  0.012 ns (0 allocations: 0 bytes)\n[4, 6]"}]}]}]},{"client_msg_id":"a48eea63-ed3e-4c67-a660-1fec68be3254","type":"message","text":"concrete type?","user":"U6QGE7S86","ts":"1617895841.022700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f8s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"concrete type?"}]}]}]},{"client_msg_id":"979aa877-b43c-44d1-a20f-145f64abe6b7","type":"message","text":"```\njulia&gt; X\n[1, 2]\n\njulia&gt; typeof(X)\nInterval{Float64}```","user":"U6QGE7S86","ts":"1617895855.023000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eU=","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\njulia> X\n[1, 2]\n\njulia> typeof(X)\nInterval{Float64}"}]}]}]},{"client_msg_id":"a2bd79ba-93b5-4e3b-8b23-eeb4e5ba034a","type":"message","text":"OK, perfect, I think I'm all set. Thanks for the infos!","user":"U01MG0TN079","ts":"1617895977.023700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/=4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, perfect, I think I'm all set. Thanks for the infos!"}]}]}]},{"client_msg_id":"0fdcbccb-fea6-4cc6-868a-72a8be811f46","type":"message","text":"No worries!","user":"U6QGE7S86","ts":"1617896049.023900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HR3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No worries!"}]}]}]},{"client_msg_id":"5cce0393-64b4-49f7-b9c9-d8eda6f28997","type":"message","text":"You can also get Float32 Intervals and have them behave performantly:","user":"U6QGE7S86","ts":"1617896072.024400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Io5uJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can also get Float32 Intervals and have them behave performantly:"}]}]}]},{"client_msg_id":"10ec61ba-bce9-43ff-9539-20209f893d7c","type":"message","text":"```\njulia&gt; X = Float32(1)..Float32(2)\n[1f0, 2f0]\n\njulia&gt; X^2\n[1f0, 4f0]\n\njulia&gt; typeof(X)\nInterval{Float32}```","user":"U6QGE7S86","ts":"1617896104.025000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+tynF","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\njulia> X = Float32(1)..Float32(2)\n[1f0, 2f0]\n\njulia> X^2\n[1f0, 4f0]\n\njulia> typeof(X)\nInterval{Float32}"}]}]}],"reactions":[{"name":"thumbsup_all","users":["U01MG0TN079"],"count":1}]}]}