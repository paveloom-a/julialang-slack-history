{"cursor": 5, "messages": [{"type":"message","subtype":"bot_message","text":"I have a list of references to objects, and I want to create a new set of objects but preserve the structure of the list","ts":"1615161182.015800","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"I have a list of references to objects, and I want to create a new set of objects but preserve the structure of the list","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I suspect that somewhere along the line i'm going to have to deal with indices into the array anyway","ts":"1615161273.015900","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"I suspect that somewhere along the line i'm going to have to deal with indices into the array anyway","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Starting back from this point, what does it mean to \"immutably change [p1,p2,p3]\"","ts":"1615161313.016000","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Starting back from this point, what does it mean to \"immutably change [p1,p2,p3]\"","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I want to make a copy of the combined data structure [p1,p2,p3] and [[Ref(p1),Ref(p2],[Ref(p2),Ref(p3)]], but changing the values of p1, p2 etc","ts":"1615161406.016100","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"I want to make a copy of the combined data structure [p1,p2,p3] and [[Ref(p1),Ref(p2],[Ref(p2),Ref(p3)]], but changing the values of p1, p2 etc","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"so the structure of the list of references should be preserved, but with a new set of objects","ts":"1615161429.016200","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"so the structure of the list of references should be preserved, but with a new set of objects","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Can you do something like [[Ref(p1), Ref(p2)], ...] and then you manipulate the underlying p1 and p2?","ts":"1615161496.016300","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Can you do something like [[Ref(p1), Ref(p2)], ...] and then you manipulate the underlying p1 and p2?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Well yes, that's the \"deepcopy + mutate\" solution","ts":"1615161516.016400","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Well yes, that's the \"deepcopy + mutate\" solution","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"which requires, among other things, making p1 and p2 mutable","ts":"1615161537.016500","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"which requires, among other things, making p1 and p2 mutable","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"the easy way is to store a list of pairs of Int64s and treat them as indices :p","ts":"1615161580.016600","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"the easy way is to store a list of pairs of Int64s and treat them as indices :p","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"how would you do this with an indexed solution? Hold a vector of indices and change the indices in the original vector when a new point comes along?","ts":"1615161587.016700","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"how would you do this with an indexed solution? Hold a vector of indices and change the indices in the original vector when a new point comes along?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"and do you never destroy old points in C?","ts":"1615161611.016800","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"and do you never destroy old points in C?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"so with an indexed solution it's super easy, you can just say points .+ vector and keep the indices the same - boom, translated copy","ts":"1615161669.016900","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"so with an indexed solution it's super easy, you can just say points .+ vector and keep the indices the same - boom, translated copy","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"and if you want to merge two meshes, you concatenate the list of points and add the length of the first list to each index in the second","ts":"1615161696.017000","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"and if you want to merge two meshes, you concatenate the list of points and add the length of the first list to each index in the second","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"an index is a reference to an abstract place in an array, that still applies if you substitute an entirely different array with the same shape","ts":"1615161742.017100","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"an index is a reference to an abstract place in an array, that still applies if you substitute an entirely different array with the same shape","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"no I don't want to destroy the old points - I'm generating a new transform from the original set on each frame","ts":"1615161875.017200","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"no I don't want to destroy the old points - I'm generating a new transform from the original set on each frame","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I guess the \"right\" way is to store the indices, and then provide an iterator over the thing it indexes so calling functions never have to deal with the implementation detail","ts":"1615161933.017300","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"I guess the \"right\" way is to store the indices, and then provide an iterator over the thing it indexes so calling functions never have to deal with the implementation detail","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Ah, so you append new points onto the old vector of points, and then transform this entire vector of points at once, but your meshes just reference points in this large vector of available points?","ts":"1615161946.017400","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Ah, so you append new points onto the old vector of points, and then transform this entire vector of points at once, but your meshes just reference points in this large vector of available points?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"not neccesarily appending, could just be rotating the mesh for example","ts":"1615161998.017500","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"not neccesarily appending, could just be rotating the mesh for example","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"so all the points move around, but the points are still connected in the same way","ts":"1615162015.017600","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"so all the points move around, but the points are still connected in the same way","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I was quite happy to have struct Line p1::point p2::point end, but then I hit this roadblock","ts":"1615162060.017700","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"I was quite happy to have struct Line p1::point p2::point end, but then I hit this roadblock","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"couldn't you hold the points in a separate vector and have `Line` hold `Ref(Point)` and then just execute your transforms on a vector holding all the `Point`s ?","ts":"1615162097.017800","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"couldn't you hold the points in a separate vector and have `Line` hold `Ref(Point)` and then just execute your transforms on a vector holding all the `Point`s ?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Yes, but without mutating the vector in place, all the Lines will still reference the old points","ts":"1615162133.017900","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Yes, but without mutating the vector in place, all the Lines will still reference the old points","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I guess you don't want the `Point`s in the second vector to be mutable","ts":"1615162133.018000","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"I guess you don't want the `Point`s in the second vector to be mutable","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"No, indeed :)","ts":"1615162140.018100","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"No, indeed :)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Do you need to share `Point`s between meshes?","ts":"1615162276.018200","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Do you need to share `Point`s between meshes?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Nah","ts":"1615162350.018300","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Nah","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Idk in my head I would model this very differently, if I'm understanding this correctly. Indices work and may be beneficial if you're trying to exploit some cache locality, but a more \"naive\" solution for me would be to associate the points of a mesh with the mesh itself, so then operations on the mesh mutate the points specific to the mesh","ts":"1615162376.018400","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Idk in my head I would model this very differently, if I'm understanding this correctly. Indices work and may be beneficial if you're trying to exploit some cache locality, but a more \"naive\" solution for me would be to associate the points of a mesh with the mesh itself, so then operations on the mesh mutate the points specific to the mesh","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":":/ I don't want to mutate anything.","ts":"1615162427.018500","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":":/ I don't want to mutate anything.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I think the 'right' way to do this immutably would be to use <https://juliaobjects.github.io/Accessors.jl/dev/>","ts":"1615162435.018600","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"I think the 'right' way to do this immutably would be to use <https://juliaobjects.github.io/Accessors.jl/dev/>","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"You'd basically want to write a `lens` that causes the edges to be updated if the points are updated","ts":"1615162471.018700","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"You'd basically want to write a `lens` that causes the edges to be updated if the points are updated","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"\"updated\" sounds like mutation again?","ts":"1615162510.018800","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"\"updated\" sounds like mutation again?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Nope. If you look at Setfield and Accessors, the whole point is that they avoid mutation","ts":"1615162540.018900","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Nope. If you look at Setfield and Accessors, the whole point is that they avoid mutation","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Of course, doing this with an array would probably be quite slow. But maybe you can use staticarrays or something?","ts":"1615162576.019000","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Of course, doing this with an array would probably be quite slow. But maybe you can use staticarrays or something?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I'm already using StaticArrays","ts":"1615162588.019100","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"I'm already using StaticArrays","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Ah then yeah, Setfield or it's successor Accessors are definitely what you want","ts":"1615162612.019200","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Ah then yeah, Setfield or it's successor Accessors are definitely what you want","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"All I want to do is calculate a new set of points, but still be able to iterate over the list of pairs of points","ts":"1615162635.019300","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"All I want to do is calculate a new set of points, but still be able to iterate over the list of pairs of points","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Yes, Lenses are a very natural way to do that","ts":"1615162704.019400","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Yes, Lenses are a very natural way to do that","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"How does it work? I'm having trouble grokking it from this, ah, lean documentation :)","ts":"1615162740.019500","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"How does it work? I'm having trouble grokking it from this, ah, lean documentation :)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Or should I just \"watch the video\" :p","ts":"1615162803.019600","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Or should I just \"watch the video\" :p","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"where does Accessors.jl \"store\" its updates? It looks similar to Haskell's lenses, and that just shifts mutations into function application, but function application still has to be stored somewhere","ts":"1615162856.019700","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"where does Accessors.jl \"store\" its updates? It looks similar to Haskell's lenses, and that just shifts mutations into function application, but function application still has to be stored somewhere","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Just checking, you see the rest of the docs, right? There's quite a bit of documentation...","ts":"1615162861.019800","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Just checking, you see the rest of the docs, right? There's quite a bit of documentation...","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"e.g. the left side of this: [image.png](/user_uploads/7178/W5AvAn3rgGXZ8sqTk4HaBkMa/image.png)  has lots of resources","ts":"1615162911.019900","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"e.g. the left side of this: [image.png](/user_uploads/7178/W5AvAn3rgGXZ8sqTk4HaBkMa/image.png)  has lots of resources","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"That upload does not work on Matrix, maybe the IRC bridge does a better job.","ts":"1615162939.020000","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"That upload does not work on Matrix, maybe the IRC bridge does a better job.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":":/","ts":"1615162954.020100","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":":/","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"nope, no domain","ts":"1615162962.020200","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"nope, no domain","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"\"/user_uploads/7178/W5AvAn3rgGXZ8sqTk4HaBkMa/image.png\"","ts":"1615162969.020300","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"\"/user_uploads/7178/W5AvAn3rgGXZ8sqTk4HaBkMa/image.png\"","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Okay, well these are all the doc pages <https://juliaobjects.github.io/Accessors.jl/dev/> <https://juliaobjects.github.io/Accessors.jl/dev/getting_started/> <https://juliaobjects.github.io/Accessors.jl/dev/lenses/> <https://juliaobjects.github.io/Accessors.jl/dev/docstrings/> <https://juliaobjects.github.io/Accessors.jl/dev/examples/custom_optics/> <https://juliaobjects.github.io/Accessors.jl/dev/examples/custom_macros/>","ts":"1615163211.020400","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Okay, well these are all the doc pages\n<https://juliaobjects.github.io/Accessors.jl/dev/>\n<https://juliaobjects.github.io/Accessors.jl/dev/getting_started/>\n<https://juliaobjects.github.io/Accessors.jl/dev/lenses/>\n<https://juliaobjects.github.io/Accessors.jl/dev/docstrings/>\n<https://juliaobjects.github.io/Accessors.jl/dev/examples/custom_optics/>\n<https://juliaobjects.github.io/Accessors.jl/dev/examples/custom_macros/>","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Hm, do all the points in the mesh have the same number of neighbors?","ts":"1615163422.020500","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Hm, do all the points in the mesh have the same number of neighbors?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"yeah no worries, I got it","ts":"1615163423.020600","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"yeah no worries, I got it","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"oh no not at all","ts":"1615163436.020700","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"oh no not at all","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"the only thing you can count on topologically is that an edge consist of two points, which may (will) be shared with other edges","ts":"1615163472.020800","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"the only thing you can count on topologically is that an edge consist of two points, which may (will) be shared with other edges","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"To be honest, after talking it over with you guys, I think I'll just store indices, and hide the implementation detail behind accesory functions","ts":"1615163531.020900","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"To be honest, after talking it over with you guys, I think I'll just store indices, and hide the implementation detail behind accesory functions","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Yeah if I'm thinking about it, indices are probably the best way to get exactly the semantics you want","ts":"1615163666.021000","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Yeah if I'm thinking about it, indices are probably the best way to get exactly the semantics you want","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Fundamentally, the property I want is \"a reference that works on a new, tranformed copy of an array\"","ts":"1615163668.021100","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Fundamentally, the property I want is \"a reference that works on a new, tranformed copy of an array\"","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"(or the original array, as required)","ts":"1615163685.021200","username":"[irc] <dTal>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"(or the original array, as required)","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Yeah, I think that's a reasonable approach.","ts":"1615163694.021300","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Yeah, I think that's a reasonable approach.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"With Haskell's lenses at least you can definitely get ^ property, and you probably can from `Accessors.jl` also, but indices may be simpler for your usecase","ts":"1615163698.021400","username":"[gitter] <meff:sunadokei.party>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"With Haskell's lenses at least you can definitely get ^ property, and you probably can from `Accessors.jl` also, but indices may be simpler for your usecase","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Hm, what if you just stored an `ImmutableDict{Point, ImmutableLinkedList{Point}}`? I think that'd nicely do everything, right @dTal?","ts":"1615168523.021500","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Hm, what if you just stored an `ImmutableDict{Point, ImmutableLinkedList{Point}}`? I think that'd nicely do everything, right @dTal?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"is there no easy way to define a default value for a Dict? say test_dict = Dict{String, Int}, I want the Int to be 0 by default for any value of String","ts":"1615272385.021600","username":"[irc] <deimos_>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"is there no easy way to define a default value for a Dict? say test_dict = Dict{String, Int}, I want the Int to be 0 by default for any value of String","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"sort of like test_dict = Dict{String, Int = 0} or something","ts":"1615272942.021700","username":"[irc] <deimos_>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"sort of like test_dict = Dict{String, Int = 0} or something","verbatim":false}}]},{"client_msg_id":"0b3c7b4e-b146-4622-9c8b-010ec67dca1b","type":"message","text":"Not possible, but DataStructures has a DefaultDict","user":"U7HAYKY9X","ts":"1615275552.022300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mx9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not possible, but DataStructures has a DefaultDict"}]}]}]},{"client_msg_id":"e319296f-de6e-4136-832c-80b76dd3ed4b","type":"message","text":"You could also use `get(d, \"yourkey\", 0)` everywhere","user":"U6BNE7LTZ","ts":"1615280257.022900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kyxrc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could also use "},{"type":"text","text":"get(d, \"yourkey\", 0)","style":{"code":true}},{"type":"text","text":" everywhere"}]}]}]},{"type":"message","subtype":"bot_message","text":"deimos_: get(test_dict, key, default_value), or DataStructures.jl has DefaultDict if you prefer that","ts":"1615283939.023000","username":"[irc] <Andriamanitra>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"deimos_: get(test_dict, key, default_value), or DataStructures.jl has DefaultDict if you prefer that","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"huh, thanks","ts":"1615308050.023100","username":"[irc] <deimos_>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"huh, thanks","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"i ended up working around it with if haskey(String) ? test_dict[String] += 1 : test_dict[String] = 1","ts":"1615308106.023200","username":"[irc] <deimos_>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"i ended up working around it with if haskey(String) ? test_dict[String] += 1 : test_dict[String] = 1","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"well, without the if","ts":"1615308217.023300","username":"[irc] <deimos_>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"well, without the if","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Why not use `get`?","ts":"1615308461.023400","username":"[zulip] <Mason Protter>","icons":{"image_48":"https://s3-us-west-2.amazonaws.com/slack-files2/bot_icons/2021-01-15/1637671884275_48.png"},"bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Why not use `get`?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"because i didn't know about get() until i just read the response","ts":"1615308617.023500","username":"[irc] <deimos_>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"because i didn't know about get() until i just read the response","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"if the intention is to keep track of counts you might also be interested in <https://juliacollections.github.io/DataStructures.jl/latest/accumulators/>","ts":"1615309140.023600","username":"[irc] <Andriamanitra>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"if the intention is to keep track of counts you might also be interested in <https://juliacollections.github.io/DataStructures.jl/latest/accumulators/>","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"thanks","ts":"1615309984.023700","username":"[irc] <deimos_>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"thanks","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"i experimented with StatsBase.countmap() and arrays too, but the arrays consume too much ram for a simple counter","ts":"1615310016.023800","username":"[irc] <deimos_>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"i experimented with StatsBase.countmap() and arrays too, but the arrays consume too much ram for a simple counter","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"if i do `@which push!([], 1)` in the repl it shows me the file where the function is located","ts":"1615503197.023900","username":"[irc] <Andriamanitra>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"if i do `@which push!([], 1)` in the repl it shows me the file where the function is located","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"but if i do `@less push!([], 1)` it says could not find source file for function?","ts":"1615503215.024000","username":"[irc] <Andriamanitra>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"but if i do `@less push!([], 1)` it says could not find source file for function?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"is this a bug or am i not understanding something","ts":"1615503239.024100","username":"[irc] <Andriamanitra>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"is this a bug or am i not understanding something","verbatim":false}}]},{"client_msg_id":"cc8c2f13-0c52-4134-89e6-d954dbf29017","type":"message","text":"works for me on `1.6-rc1`, may be a bug on previous version","user":"UH8A351DJ","ts":"1615508166.024500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7+A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"works for me on "},{"type":"text","text":"1.6-rc1","style":{"code":true}},{"type":"text","text":", may be a bug on previous version"}]}]}]},{"type":"message","subtype":"bot_message","text":"Andriamanitra: I can't reproduce. What version are you using?","ts":"1615520879.024600","username":"[irc] <AnAverageHuman>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c10ikvsg27ic4l1hhss0","text":{"type":"mrkdwn","text":"Andriamanitra: I can't reproduce. What version are you using?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"If I define a module X in a file x.jl, and in another file sibling to it I want to use that module what is the correct method of importing it?   I have tried include(\"./x.jl\")   using X   but it just complains that X isn't found in the current path.","ts":"1615787826.024700","username":"[irc] <zzing>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"If I define a module X in a file x.jl, and in another file sibling to it I want to use that module what is the correct method of importing it?   I have tried include(\"./x.jl\")   using X   but it just complains that X isn't found in the current path.","verbatim":false}}]},{"client_msg_id":"8f32ad58-ac4c-4d5e-8484-af9dbd2648d4","type":"message","text":"Try `using .X`","user":"U6QPTG69E","ts":"1615790434.025300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bwf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Try "},{"type":"text","text":"using .X","style":{"code":true}}]}]}]},{"type":"message","subtype":"bot_message","text":"That worked, thanks <@U6QPTG69E>","ts":"1615792285.025400","username":"[irc] <zzing>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"That worked, thanks <@U6QPTG69E>","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I have to create something like this ```push!(arr, (x) -&gt; x[:y1]) push!(arr, (x) -&gt; x[:y2]) push!(arr, (x) -&gt; x[:y3])```  Is there a  way to dynamically create this? I tried different versions of this: ```for y in [:y1, :y2, :y3]     push!(arr, (x) -&gt; x[y]) end``` but couldn't get it working.","ts":"1615814707.025500","username":"[gitter] <BenediktAllendorf>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"I have to create something like this\n```push!(arr, (x) -&gt; x[:y1])\npush!(arr, (x) -&gt; x[:y2])\npush!(arr, (x) -&gt; x[:y3])```\n\nIs there a  way to dynamically create this? I tried different versions of this:\n```for y in [:y1, :y2, :y3]\n    push!(arr, (x) -&gt; x[y])\nend```\nbut couldn't get it working.","verbatim":false}}]},{"client_msg_id":"5b816ac0-27c2-4d61-a975-4049e763d079","type":"message","text":"It seems to work for me:\n```julia&gt; arr = [];\n\njulia&gt; for y in [:y1, :y2, :y3]\n           push!(arr, (x) -&gt; x[y])\n       end\n\njulia&gt; xx = Dict(:y1 =&gt; 15);\n\njulia&gt; first(arr)(xx)\n15```","user":"U7HAYKY9X","ts":"1615814876.025800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dZPZX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems to work for me:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> arr = [];\n\njulia> for y in [:y1, :y2, :y3]\n           push!(arr, (x) -> x[y])\n       end\n\njulia> xx = Dict(:y1 => 15);\n\njulia> first(arr)(xx)\n15"}]}]}]},{"type":"message","subtype":"bot_message","text":"maybe my error is somewhere else then. I got suspicious because arr will look like ```#420 (generic function with 1 method) #420 (generic function with 1 method) #420 (generic function with 1 method)``` and that might not be right","ts":"1615815384.025900","username":"[gitter] <BenediktAllendorf>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"maybe my error is somewhere else then. I got suspicious because arr will look like\n```#420 (generic function with 1 method)\n#420 (generic function with 1 method)\n#420 (generic function with 1 method)``` and that might not be right","verbatim":false}}]},{"client_msg_id":"5422a3be-686e-42dd-9ada-f627caebfa1e","type":"message","text":"Looks right to me. That's how anonymous functions are printed (little weird name)","user":"U7HAYKY9X","ts":"1615815419.026300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m/Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks right to me. That's how anonymous functions are printed (little weird name)"}]}]}]},{"type":"message","subtype":"bot_message","text":"With the same number, even though they are different anonymous functions?","ts":"1615815457.026400","username":"[gitter] <BenediktAllendorf>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"With the same number, even though they are different anonymous functions?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"I think part of the problem is, that in the underlying code it is assumed that the names are unique and it breaks","ts":"1615815591.026500","username":"[gitter] <BenediktAllendorf>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"I think part of the problem is, that in the underlying code it is assumed that the names are unique and it breaks","verbatim":false}}]},{"client_msg_id":"5da9fff1-af93-47dd-899f-0cd3b86ca4d5","type":"message","text":"Ah. Hm.. you can give the functions a non-anonymous name, then?\n```julia&gt; for y in [:y1, :y2, :y3]\n           name = Symbol(\"fn_\", y)\n           eval(quote\n               function $(name)(x)\n                   x[$(QuoteNode(y))]\n               end\n           end)\n           push!(arr, eval(name))\n       end```","user":"U7HAYKY9X","ts":"1615815826.027100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"guY33","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah. Hm.. you can give the functions a non-anonymous name, then?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> for y in [:y1, :y2, :y3]\n           name = Symbol(\"fn_\", y)\n           eval(quote\n               function $(name)(x)\n                   x[$(QuoteNode(y))]\n               end\n           end)\n           push!(arr, eval(name))\n       end"}]}]}]},{"client_msg_id":"bfee9a6c-fae7-4cae-abb5-5da0b3429870","type":"message","text":"Yeah, they're closures. It's more efficient in this case to generate a single function-like object type that contain the symbol you're using to index, rather than generate 3 actual different functions","user":"U7HAYKY9X","ts":"1615815887.028100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SgS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, they're closures. It's more efficient in this case to generate a single function-like object type that contain the symbol you're using to index, rather than generate 3 actual different functions"}]}]}]},{"type":"message","subtype":"bot_message","text":"Awesome, that works! Many thanks :)","ts":"1615816089.028200","username":"[gitter] <BenediktAllendorf>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Awesome, that works! Many thanks :)","verbatim":false}}],"reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"53b2ef5d-5c81-4d82-8a86-3a281d0e98c9","type":"message","text":"&gt; With the same number, even though they are different anonymous functions?\nThey are different anonymous functions, but have the same \"name\" because they have the same type: under the hood, they are distinct instances of that function type, with fields of different values.","user":"U6QPTG69E","ts":"1615821107.029600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uYfm","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"With the same number, even though they are different anonymous functions?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"They are different anonymous functions, but have the same \"name\" because they have the same type: under the hood, they are distinct instances of that function type, with fields of different values."}]}]}]},{"type":"message","subtype":"bot_message","text":"Hello, I'm looking at using Julia for some modeling and simulation and was wondering if there was an equivalent of the [equationsToMatrix()](<https://www.mathworks.com/help/symbolic/sym.equationstomatrix.html>) in Matlab. Use case for this is combing a set of non-linear equations of motion from the Lagrangian of the system into a mass matrix and right-hand side vector that can then be evaluated at each time step and integrated.","ts":"1616205107.000200","username":"[gitter] <RossSmyth>","bot_id":"B795XHD0X","attachments":[{"title":"Convert linear equations to matrix form - MATLAB equationsToMatrix","title_link":"https://www.mathworks.com/help/symbolic/sym.equationstomatrix.html","text":"This MATLAB function converts equations eqns to matrix form.","fallback":"Convert linear equations to matrix form - MATLAB equationsToMatrix","from_url":"https://www.mathworks.com/help/symbolic/sym.equationstomatrix.html","service_icon":"https://www.mathworks.com/favicon.ico","service_name":"mathworks.com","id":1,"original_url":"https://www.mathworks.com/help/symbolic/sym.equationstomatrix.html"}],"blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Hello, I'm looking at using Julia for some modeling and simulation and was wondering if there was an equivalent of the [equationsToMatrix()](<https://www.mathworks.com/help/symbolic/sym.equationstomatrix.html>) in Matlab. Use case for this is combing a set of non-linear equations of motion from the Lagrangian of the system into a mass matrix and right-hand side vector that can then be evaluated at each time step and integrated.","verbatim":false}}],"edited":{"user":"B795XHD0X","ts":"1616205108.000000"}},{"type":"message","subtype":"bot_message","text":"Perhaps look at Symbolics.jl?","ts":"1616214772.000400","username":"[gitter] <werebear:matrix.org>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Perhaps look at Symbolics.jl?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Hi everyone!","ts":"1616242346.000500","username":"[irc] <[exa]>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Hi everyone!","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"quick question, if I have an abstract type and some \"concrete\" type (say a struct) already defined, is it possible to mark this concrete type as a subtype of the abstract type?","ts":"1616242387.000600","username":"[irc] <[exa]>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"quick question, if I have an abstract type and some \"concrete\" type (say a struct) already defined, is it possible to mark this concrete type as a subtype of the abstract type?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"hm, finding I can just assign to the ConcreteType.super, is that okay?","ts":"1616242890.000700","username":"[irc] <[exa]>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"hm, finding I can just assign to the ConcreteType.super, is that okay?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"meh, seems like I'm confusing this a bit with typeclasses...","ts":"1616243062.000800","username":"[irc] <[exa]>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"meh, seems like I'm confusing this a bit with typeclasses...","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"Hi everyone, I'm trying to run a external program but the program seems to be missing from the PATH when I try to launch it from Julia. It is otherwise present in my path and I can launch it normally. It is specifically programs that were installed with Anaconda that doesn't work when I run them from Julia, programs installed outside of Anaconda work fine, so it seems like Julia doesn't have access to the full path. When I run `which &lt;program&gt;` from Julia, it fails, but when I run it outside of Julia it works like expected (the executable exists and it points me there). Anyone knows what's the issue here? Running Julia 1.5.3 and I'm running Julia inside VSCode.","ts":"1616662036.000900","username":"[gitter] <fethalen>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"Hi everyone, I'm trying to run a external program but the program seems to be missing from the PATH when I try to launch it from Julia. It is otherwise present in my path and I can launch it normally. It is specifically programs that were installed with Anaconda that doesn't work when I run them from Julia, programs installed outside of Anaconda work fine, so it seems like Julia doesn't have access to the full path. When I run `which &lt;program&gt;` from Julia, it fails, but when I run it outside of Julia it works like expected (the executable exists and it points me there). Anyone knows what's the issue here? Running Julia 1.5.3 and I'm running Julia inside VSCode.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"@fethalen if you are running Julia in Jupyter notebooks in VS Code there are some issues in the VS Code which are not yet fixed by VS Code which hamper the work of Julia kernels in Jupyter notebooks. If that's the fault its not the fault of your machine but it's an issue in VS Code.","ts":"1616668786.001000","username":"[gitter] <Saviour1001>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"@fethalen if you are running Julia in Jupyter notebooks in VS Code there are some issues in the VS Code which are not yet fixed by VS Code which hamper the work of Julia kernels in Jupyter notebooks. If that's the fault its not the fault of your machine but it's an issue in VS Code.","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"when does `@async` create a closure? it seems to me that it doesn't capture variables as you'd like it to","ts":"1616745383.001100","username":"[gitter] <synquid:matrix.org>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"when does `@async` create a closure? it seems to me that it doesn't capture variables as you'd like it to","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"as in, the variables are captured when the async block is first run, and not when it is created","ts":"1616745825.001200","username":"[gitter] <synquid:matrix.org>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"as in, the variables are captured when the async block is first run, and not when it is created","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"you might need to use $ to interpolate them, which is pretty underdocumented...","ts":"1616745923.001300","username":"[gitter] <synquid:matrix.org>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"you might need to use $ to interpolate them, which is pretty underdocumented...","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"is anyone experiencing compilation errors on DifferentialEquations in 1.6.0?","ts":"1616749408.001400","username":"[irc] <beeswax>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"is anyone experiencing compilation errors on DifferentialEquations in 1.6.0?","verbatim":false}}]},{"type":"message","subtype":"bot_message","text":"works fine for me","ts":"1616769452.001500","username":"[gitter] <synquid:matrix.org>","bot_id":"B795XHD0X","blocks":[{"type":"section","block_id":"matterbridge_c175804g27iaek8aehs0","text":{"type":"mrkdwn","text":"works fine for me","verbatim":false}}]},{"client_msg_id":"8b395b2f-06c2-4ed3-a84c-7995c708419e","type":"message","text":"does julia have anything like refinement types?","user":"UCAU2R8MU","ts":"1616776756.002200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I7ORg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does julia have anything like refinement types?"}]}]}]},{"client_msg_id":"e7910fd4-a4a8-43bd-abf6-6567cf99b7a7","type":"message","text":"and/or something like runtime contracts, where you can specify a \"contract\" to be enforced at runtime instead of having to manually write a bunch of if/else checks in your functions?","user":"UCAU2R8MU","ts":"1616776900.003200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GWHSR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and/or something like runtime contracts, where you can specify a \"contract\" to be enforced at runtime instead of having to manually write a bunch of if/else checks in your functions?"}]}]}]}]}