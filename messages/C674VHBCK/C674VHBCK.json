{"cursor": 0, "messages": [{"client_msg_id":"375f8322-22fa-48c2-b11b-c67ab52eec85","type":"message","text":"Or wrap it in a `let` block\n\n```@test let\n    insert!(mything, :thing, \"something\")\n    @test mything.thing == \"something\"\n    true\nend```","user":"U8JP5B9T2","ts":"1609099977.081300","team":"T68168MUP","edited":{"user":"U8JP5B9T2","ts":"1609099993.000000"},"blocks":[{"type":"rich_text","block_id":"+ih","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or wrap it in a "},{"type":"text","text":"let","style":{"code":true}},{"type":"text","text":" block\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@test let\n    insert!(mything, :thing, \"something\")\n    @test mything.thing == \"something\"\n    true\nend"}]}]}]},{"client_msg_id":"2b89c5e7-8c52-46f7-acf5-9de4be6642f4","type":"message","text":"Is there an accepted way to just test something like a mutating function works all inside a test? Eg. have a type where I have `insert!` defined, and I want to do something like `@test insert!(mything, \"something\")`, but I end up needing to do the insert outside of a test then test that it was actually inserted, or do something like `@test insert!(mything, \"something\") isa &lt;return type&gt;`","user":"U8JP5B9T2","ts":"1609099807.079900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oK784","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there an accepted way to just test something like a mutating function works all inside a test? Eg. have a type where I have "},{"type":"text","text":"insert!","style":{"code":true}},{"type":"text","text":" defined, and I want to do something like "},{"type":"text","text":"@test insert!(mything, \"something\")","style":{"code":true}},{"type":"text","text":", but I end up needing to do the insert outside of a test then test that it was actually inserted, or do something like "},{"type":"text","text":"@test insert!(mything, \"something\") isa <return type>","style":{"code":true}}]}]}]}]}