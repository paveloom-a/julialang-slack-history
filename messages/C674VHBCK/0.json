{"cursor": 0, "messages": [{"client_msg_id":"2b89c5e7-8c52-46f7-acf5-9de4be6642f4","type":"message","text":"Is there an accepted way to just test something like a mutating function works all inside a test? Eg. have a type where I have `insert!` defined, and I want to do something like `@test insert!(mything, \"something\")`, but I end up needing to do the insert outside of a test then test that it was actually inserted, or do something like `@test insert!(mything, \"something\") isa &lt;return type&gt;`","user":"U8JP5B9T2","ts":"1609099807.079900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oK784","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there an accepted way to just test something like a mutating function works all inside a test? Eg. have a type where I have "},{"type":"text","text":"insert!","style":{"code":true}},{"type":"text","text":" defined, and I want to do something like "},{"type":"text","text":"@test insert!(mything, \"something\")","style":{"code":true}},{"type":"text","text":", but I end up needing to do the insert outside of a test then test that it was actually inserted, or do something like "},{"type":"text","text":"@test insert!(mything, \"something\") isa <return type>","style":{"code":true}}]}]}]},{"client_msg_id":"375f8322-22fa-48c2-b11b-c67ab52eec85","type":"message","text":"Or wrap it in a `let` block\n\n```@test let\n    insert!(mything, :thing, \"something\")\n    @test mything.thing == \"something\"\n    true\nend```","user":"U8JP5B9T2","ts":"1609099977.081300","team":"T68168MUP","edited":{"user":"U8JP5B9T2","ts":"1609099993.000000"},"blocks":[{"type":"rich_text","block_id":"+ih","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or wrap it in a "},{"type":"text","text":"let","style":{"code":true}},{"type":"text","text":" block\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@test let\n    insert!(mything, :thing, \"something\")\n    @test mything.thing == \"something\"\n    true\nend"}]}]}]},{"client_msg_id":"ef258195-3bbf-4d6a-8773-ae1097870cf2","type":"message","text":"I have some trouble with coverage (that should hit 100%) but doesn't.\nI basically test a set of functions through an iteration over a vector (of functions).\nSo it is difficult to believe it is testing just a few functions in the vector.\nI have no other call to those functions, so it can only come from that iteration.\n\nAny idea on how to find why the coverage is going lazy? Is there some typical thing that the coverage cannot cover well ?","user":"U01FR2HFJ7M","ts":"1609228016.087000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QqfBw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have some trouble with coverage (that should hit 100%) but doesn't.\nI basically test a set of functions through an iteration over a vector (of functions).\nSo it is difficult to believe it is testing just a few functions in the vector.\nI have no other call to those functions, so it can only come from that iteration.\n\nAny idea on how to find why the coverage is going lazy? Is there some typical thing that the coverage cannot cover well ?"}]}]}]},{"client_msg_id":"bf138f55-5b42-4dda-9cbb-01584046f0d6","type":"message","text":"It should be much better at that in v1.6","user":"U67BXBF99","ts":"1609278151.087500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0vhTh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It should be much better at that in v1.6"}]}]}],"reactions":[{"name":"heart","users":["U01FR2HFJ7M"],"count":1}]},{"client_msg_id":"8adaa861-d15b-4185-acf6-19a968d9bc7a","type":"message","text":"Ah should testing be done with `--inline=no` to get accurate coverage then?","user":"UEP056STX","ts":"1609282116.088400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dpk=P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah should testing be done with "},{"type":"text","text":"--inline=no","style":{"code":true}},{"type":"text","text":" to get accurate coverage then?"}]}]}]},{"client_msg_id":"ed5be772-d546-4d5f-a1e5-7c88df52e7e7","type":"message","text":"I thought `--inline=no` was the default for `Pkg.test` but apparently not: <https://julialang.github.io/Pkg.jl/v1/api/#Pkg.test>","user":"UEP056STX","ts":"1609282134.088900","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1609282140.000000"},"blocks":[{"type":"rich_text","block_id":"wOAWz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought "},{"type":"text","text":"--inline=no","style":{"code":true}},{"type":"text","text":" was the default for "},{"type":"text","text":"Pkg.test","style":{"code":true}},{"type":"text","text":" but apparently not: "},{"type":"link","url":"https://julialang.github.io/Pkg.jl/v1/api/#Pkg.test"}]}]}]},{"client_msg_id":"c0e36e3a-20a7-43dd-b87e-ceb8bcf19e50","type":"message","text":"no, that’s unnecessary","user":"U67BXBF99","ts":"1609285062.089200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xPnKs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, that’s unnecessary"}]}]}]},{"client_msg_id":"c9670f53-7050-4e15-a020-1145ed00871a","type":"message","text":"For CI: LTS+1.5+nightly? (or a subset?)","user":"U7LC4PFU4","ts":"1609324971.090000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7p6I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For CI: LTS+1.5+nightly? (or a subset?)"}]}]}]},{"client_msg_id":"64bcd098-c57f-4795-9944-497a1be23bb5","type":"message","text":"Hello, is anybody aware of a maintained package that offers BDD (behaviour Driven Development) style of testing? Like a Cucumber tool in Julia?","user":"U012J1E5SFR","ts":"1609515645.091200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OPT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello, is anybody aware of a maintained package that offers BDD (behaviour Driven Development) style of testing? Like a Cucumber tool in Julia?"}]}]}],"thread_ts":"1609515645.091200","reply_count":1,"reply_users_count":1,"latest_reply":"1609516824.091300","reply_users":["U6NFPDBV1"],"subscribed":false}]}