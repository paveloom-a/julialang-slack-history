{"cursor": 2, "messages": [{"client_msg_id":"f674c9c4-734a-425a-94ed-aa88150ec706","type":"message","text":"Of course, `#include \"*.{c|cpp}\"` , too!","user":"UV3KT0AP5","ts":"1613191739.311900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u+HE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Of course, "},{"type":"text","text":"#include \"*.{c|cpp}\"","style":{"code":true}},{"type":"text","text":" , too!"}]}]}]},{"client_msg_id":"1492920d-257c-4516-b5c3-751527a69e57","type":"message","text":"I am still frustrated that we don’t have either: the julia version stored in the Manifest.toml\nOr `Manifest.1_0_5.toml` , `Manifest.1_5_3.toml` , etc.\nit is so annoying that if I want to version control  a Manifest for a application that I want to know we are making conscious changes to the versions, that if someone mistakenly checks in a Manifest generated with 1.6, then CI running julia 1.5 will explode with a confusing error message.\n(and there is no way at all that i can make CI work for multiple julia versions using Manifests)\n\nexample of where i want to version control a Manifest:\n<https://github.com/JuliaDiff/juliadiff.github.io/pull/14>","user":"U6A936746","ts":"1613216500.316600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mq3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am still frustrated that we don’t have either: the julia version stored in the Manifest.toml\nOr "},{"type":"text","text":"Manifest.1_0_5.toml","style":{"code":true}},{"type":"text","text":" , "},{"type":"text","text":"Manifest.1_5_3.toml","style":{"code":true}},{"type":"text","text":" , etc.\nit is so annoying that if I want to version control  a Manifest for a application that I want to know we are making conscious changes to the versions, that if someone mistakenly checks in a Manifest generated with 1.6, then CI running julia 1.5 will explode with a confusing error message.\n(and there is no way at all that i can make CI work for multiple julia versions using Manifests)\n\nexample of where i want to version control a Manifest:\n"},{"type":"link","url":"https://github.com/JuliaDiff/juliadiff.github.io/pull/14"}]}]}],"thread_ts":"1613216500.316600","reply_count":2,"reply_users_count":2,"latest_reply":"1613217028.317700","reply_users":["U7THT3TM3","U67SCG4HG"],"subscribed":false,"reactions":[{"name":"100","users":["U7THT3TM3","UDB26738Q","U9AHT3YM7","UDXST8ARK"],"count":4}]},{"type":"message","text":"how do I stop this deluge of notifications? :worried:","files":[{"id":"F01MLL7JB1D","created":1613238211,"timestamp":1613238211,"name":"2021-02-13-124549_2099x791_scrot.png","title":"2021-02-13-124549_2099x791_scrot.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U9VG1AYSG","editable":false,"size":195196,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01MLL7JB1D/2021-02-13-124549_2099x791_scrot.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01MLL7JB1D/download/2021-02-13-124549_2099x791_scrot.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01MLL7JB1D-76a442b79c/2021-02-13-124549_2099x791_scrot_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01MLL7JB1D-76a442b79c/2021-02-13-124549_2099x791_scrot_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01MLL7JB1D-76a442b79c/2021-02-13-124549_2099x791_scrot_360.png","thumb_360_w":360,"thumb_360_h":136,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01MLL7JB1D-76a442b79c/2021-02-13-124549_2099x791_scrot_480.png","thumb_480_w":480,"thumb_480_h":181,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01MLL7JB1D-76a442b79c/2021-02-13-124549_2099x791_scrot_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01MLL7JB1D-76a442b79c/2021-02-13-124549_2099x791_scrot_720.png","thumb_720_w":720,"thumb_720_h":271,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01MLL7JB1D-76a442b79c/2021-02-13-124549_2099x791_scrot_800.png","thumb_800_w":800,"thumb_800_h":301,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01MLL7JB1D-76a442b79c/2021-02-13-124549_2099x791_scrot_960.png","thumb_960_w":960,"thumb_960_h":362,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01MLL7JB1D-76a442b79c/2021-02-13-124549_2099x791_scrot_1024.png","thumb_1024_w":1024,"thumb_1024_h":386,"original_w":2099,"original_h":791,"thumb_tiny":"AwASADClTad2ptMAooooAKKKKAHdqbTu1NoAKKKKACiiigD/2Q==","permalink":"https://julialang.slack.com/files/U9VG1AYSG/F01MLL7JB1D/2021-02-13-124549_2099x791_scrot.png","permalink_public":"https://slack-files.com/T68168MUP-F01MLL7JB1D-6257405e53","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"9LP8w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how do I stop this deluge of notifications? "},{"type":"emoji","name":"worried"}]}]}],"user":"U9VG1AYSG","display_as_bot":false,"ts":"1613238223.320100","thread_ts":"1613238223.320100","reply_count":7,"reply_users_count":3,"latest_reply":"1613239109.321800","reply_users":["U6C5KSWAC","U9VG1AYSG","UDB26738Q"],"subscribed":false},{"client_msg_id":"ffefd43d-1d33-409a-b51c-1dd7c2d05fe2","type":"message","text":"Heisenbugs that disappear when you add print statements.\nEDIT:\nSeems that it's there in fresh Julia sessions, but forcing the function to recompile makes it go away.\nAlthough it's often not there in fresh Julia sessions that print.","user":"UAUPJLBQX","ts":"1613263285.323100","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1613263742.000000"},"blocks":[{"type":"rich_text","block_id":"Z2rFI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Heisenbugs that disappear when you add print statements.\nEDIT:\nSeems that it's there in fresh Julia sessions, but forcing the function to recompile makes it go away.\nAlthough it's often not there in fresh Julia sessions that print."}]}]}],"thread_ts":"1613263285.323100","reply_count":15,"reply_users_count":4,"latest_reply":"1613266352.328400","reply_users":["U8D9768Q6","U6QGE7S86","UAUPJLBQX","U8T0YV7QC"],"subscribed":false},{"client_msg_id":"00fff026-5363-4cab-8d36-3d09f5236a37","type":"message","text":"People emailing github organization members rather than opening issues :disappointed:","user":"U695B1S2X","ts":"1613346582.331500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Nc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"People emailing github organization members rather than opening issues "},{"type":"emoji","name":"disappointed"}]}]}],"reactions":[{"name":"e-mail","users":["UDB26738Q","U6788D83U"],"count":2},{"name":"spam","users":["UDB26738Q"],"count":1},{"name":"oldman","users":["UDXST8ARK","UGU761DU2"],"count":2},{"name":"ungoogle","users":["U0179G7FG4F","UGU761DU2"],"count":2}]},{"client_msg_id":"697c58b1-75e1-49ad-b7b7-12af4cf48189","type":"message","text":"Do we have a way to fix the old docs problem yet? Can someone help me just slap a silly banner on some old versions or something? The daily barrage of questions which boil down to a 4 year old Documenter issue is getting a little insane and there must be an easy fix.\n\n<https://julialang.slack.com/archives/C7T968HRU/p1613170071490600>\n<https://discourse.julialang.org/t/new-to-julia-using-it-for-dynamic-systems-simulations/55285?u=chrisrackauckas>\netc.","user":"U69BL50BF","ts":"1613383295.335100","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1613383378.000000"},"blocks":[{"type":"rich_text","block_id":"3XH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do we have a way to fix the old docs problem yet? Can someone help me just slap a silly banner on some old versions or something? The daily barrage of questions which boil down to a 4 year old Documenter issue is getting a little insane and there must be an easy fix.\n\n"},{"type":"link","url":"https://julialang.slack.com/archives/C7T968HRU/p1613170071490600"},{"type":"text","text":"\n"},{"type":"link","url":"https://discourse.julialang.org/t/new-to-julia-using-it-for-dynamic-systems-simulations/55285?u=chrisrackauckas"},{"type":"text","text":"\netc."}]}]}]},{"client_msg_id":"d841cf67-b6bf-4594-a0fc-c11d21abd30b","type":"message","text":"Is there some website I can insert text into and get a red HTML banner that I then copy paste onto all old pages?","user":"U69BL50BF","ts":"1613383337.335800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sKc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there some website I can insert text into and get a red HTML banner that I then copy paste onto all old pages?"}]}]}]},{"client_msg_id":"e7bff7b7-86da-438e-a214-e80b6a4f8948","type":"message","text":"And we've already tried to de-index it.","user":"U69BL50BF","ts":"1613383448.336300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eAgEW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And we've already tried to de-index it."}]}]}]},{"client_msg_id":"942e17fd-a587-467e-b0b8-acbe4cf40881","type":"message","text":"<https://github.com/SciML/DiffEqDocs.jl/pull/353>\n<https://github.com/SciML/DiffEqDocs.jl/pull/404>\n<https://github.com/SciML/DiffEqDocs.jl/pull/312>","user":"U69BL50BF","ts":"1613383456.336600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EAGim","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/SciML/DiffEqDocs.jl/pull/353"},{"type":"text","text":"\n"},{"type":"link","url":"https://github.com/SciML/DiffEqDocs.jl/pull/404"},{"type":"text","text":"\n"},{"type":"link","url":"https://github.com/SciML/DiffEqDocs.jl/pull/312"}]}]}]},{"client_msg_id":"d1b36415-5f9e-4195-8e95-45a8fc664c4b","type":"message","text":"am I the only one who can never use Makie?\n\n```(tmp) pkg&gt; build GLMakie\n    Building ModernGL → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/326957556e9cc9253615114c04bb0096a2a69bb8/build.log`\n    Building FFTW ────→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/1b48dbde42f307e48685fa9213d8b9f8c0d87594/build.log`\n    Building GLMakie ─→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/d2b2a34539df91432c3f7ecbb8b432929f75e9b9/build.log`\n  Progress [========================================&gt;]  5/5\n5 dependencies successfully precompiled in 84 seconds (125 already precompiled)\n\n[...]\n\njulia&gt; scene = lines(x, y1, color = :blue)\nError showing value of type AbstractPlotting.FigureAxisPlot:\nERROR: No backend available (GLMakie, CairoMakie, WGLMakie)!\nMaybe you imported GLMakie but it didn't build correctly.\nIn that case, try `]build GLMakie` and watch out for any warnings.\nIf that's not the case, make sure to explicitely import any of the mentioned backends.```\n84 seconds to successfully build and precompile 5 packages and then it doesn't work because building... failed (???)","user":"UDB26738Q","ts":"1613395360.338200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O5C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"am I the only one who can never use Makie?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(tmp) pkg> build GLMakie\n    Building ModernGL → `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/326957556e9cc9253615114c04bb0096a2a69bb8/build.log`\n    Building FFTW ────→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/1b48dbde42f307e48685fa9213d8b9f8c0d87594/build.log`\n    Building GLMakie ─→ `~/.julia/scratchspaces/44cfe95a-1eb2-52ea-b672-e2afdf69b78f/d2b2a34539df91432c3f7ecbb8b432929f75e9b9/build.log`\n  Progress [========================================>]  5/5\n5 dependencies successfully precompiled in 84 seconds (125 already precompiled)\n\n[...]\n\njulia> scene = lines(x, y1, color = :blue)\nError showing value of type AbstractPlotting.FigureAxisPlot:\nERROR: No backend available (GLMakie, CairoMakie, WGLMakie)!\nMaybe you imported GLMakie but it didn't build correctly.\nIn that case, try `]build GLMakie` and watch out for any warnings.\nIf that's not the case, make sure to explicitely import any of the mentioned backends."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"84 seconds to successfully build and precompile 5 packages and then it doesn't work because building... failed (???)"}]}]}]},{"client_msg_id":"a9c97e43-f0d2-405a-bbee-ef7304996a3a","type":"message","text":"Argh. Get an excel sheet with 2 columns of 40 numbers (grades). “My my, they look correlated - let me have  a look. Let me just open Julia”. Open REPL, walk slowly to the folder,  open Pluto, new notebook - open the notebook takes like a full minute, and I’m starting to forget what I wanted to see. `using StatsPlots` - error saying “try `]instantiate`“. Turns out `]` doesn’t work in Pluto. In fact, Pkg operations don’t really work in Pluto. Instantiate has no effect. Open a new REPL, instantiate, status, resolve, no issues. `using StatsPlots` in REPL no issue. Open Pluto again, `using StatsPlots`- error saying “try `]instantiate`“. Open Excel and do the work I wanted to do there.\nFor all it’s beauty, Julia really isn’t very nice for quick stuff.","user":"U73KENNG4","ts":"1613402760.374000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TfvxE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Argh. Get an excel sheet with 2 columns of 40 numbers (grades). “My my, they look correlated - let me have  a look. Let me just open Julia”. Open REPL, walk slowly to the folder,  open Pluto, new notebook - open the notebook takes like a full minute, and I’m starting to forget what I wanted to see. "},{"type":"text","text":"using StatsPlots","style":{"code":true}},{"type":"text","text":" - error saying “try "},{"type":"text","text":"]instantiate","style":{"code":true}},{"type":"text","text":"“. Turns out "},{"type":"text","text":"]","style":{"code":true}},{"type":"text","text":" doesn’t work in Pluto. In fact, Pkg operations don’t really work in Pluto. Instantiate has no effect. Open a new REPL, instantiate, status, resolve, no issues. "},{"type":"text","text":"using StatsPlots","style":{"code":true}},{"type":"text","text":" in REPL no issue. Open Pluto again, "},{"type":"text","text":"using StatsPlots","style":{"code":true}},{"type":"text","text":"- error saying “try "},{"type":"text","text":"]instantiate","style":{"code":true}},{"type":"text","text":"“. Open Excel and do the work I wanted to do there.\nFor all it’s beauty, Julia really isn’t very nice for quick stuff."}]}]}],"thread_ts":"1613402760.374000","reply_count":7,"reply_users_count":5,"latest_reply":"1613405174.376400","reply_users":["U7HAYKY9X","U6QGE7S86","UGU761DU2","U6N6VQE30","U73KENNG4"],"subscribed":false,"reactions":[{"name":"1000","users":["U7HAYKY9X"],"count":1},{"name":"ahhhhhhh","users":["UGU761DU2"],"count":1},{"name":"point_up","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"984d052e-820f-4481-aedf-2d0b404cf2f3","type":"message","text":"many of the links in slack no longer work at all with tridactyl (i.e. not usable from keyboard).  Just when you think it can't get anymore shit, it does","user":"U9VG1AYSG","ts":"1613428310.380900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lglF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"many of the links in slack no longer work at all with tridactyl (i.e. not usable from keyboard).  Just when you think it can't get anymore shit, it does"}]}]}]},{"client_msg_id":"6b902a42-d19b-4e1a-999b-9a069f643dfb","type":"message","text":"Registering a package with 0 lines of code.. (<https://github.com/JuliaRegistries/General/pull/30148>)","user":"UKLKS1WC8","ts":"1613562427.388000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sx+8e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Registering a package with 0 lines of code.. ("},{"type":"link","url":"https://github.com/JuliaRegistries/General/pull/30148"},{"type":"text","text":")"}]}]}],"thread_ts":"1613562427.388000","reply_count":19,"reply_users_count":7,"latest_reply":"1613564854.396500","reply_users":["U85R3JJ8L","UDB26738Q","UH24GRBLL","U67SCG4HG","UD0NS8PDF","U7THT3TM3","UCZ7VBGUD"],"subscribed":false},{"client_msg_id":"0a6462a7-8bc2-46d5-9514-4c328ada8c04","type":"message","text":"Three-Letter Something:grapes:  Transport Layer Security? Thread Level Speculation? No, Thread-Local Storage!","user":"UV3KT0AP5","ts":"1613568234.397500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n5ZkE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Three-Letter Something"},{"type":"emoji","name":"grapes"},{"type":"text","text":"  Transport Layer Security? Thread Level Speculation? No, Thread-Local Storage!"}]}]}]},{"client_msg_id":"3b40d494-3c52-464d-9608-5144ad708ab8","type":"message","text":"HelpDeskBot seems obnoxious.  I can see how it might be perceived negatively by newcomers.  I'm an old timer and perceive it negatively.","user":"U8R9JE0D6","ts":"1613595763.399800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yv3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"HelpDeskBot seems obnoxious.  I can see how it might be perceived negatively by newcomers.  I'm an old timer and perceive it negatively."}]}]}]},{"type":"message","subtype":"thread_broadcast","text":"It is interposing its autoself between my desire to give aor get help and pleasantness.\nTo be the first response to every new posting by all posters is too heavy a hand.\nMOST CRITICALLY: this has made our slack a less welcoming experience and that\n      _plays against the so very many individual efforts that shape the Julia Community_","user":"U68QW0PUZ","ts":"1613601392.401600","thread_ts":"1613595763.399800","root":{"client_msg_id":"3b40d494-3c52-464d-9608-5144ad708ab8","type":"message","text":"HelpDeskBot seems obnoxious.  I can see how it might be perceived negatively by newcomers.  I'm an old timer and perceive it negatively.","user":"U8R9JE0D6","ts":"1613595763.399800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yv3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"HelpDeskBot seems obnoxious.  I can see how it might be perceived negatively by newcomers.  I'm an old timer and perceive it negatively."}]}]}],"thread_ts":"1613595763.399800","reply_count":2,"reply_users_count":2,"latest_reply":"1613601392.401600","reply_users":["U01HD5VFXJM","U68QW0PUZ"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"VekJ3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is interposing its autoself between my desire to give aor get help and pleasantness.\nTo be the first response to every new posting by all posters is too heavy a hand.\nMOST CRITICALLY: this has made our slack a less welcoming experience and that\n"},{"type":"text","text":"      plays against the so very many individual efforts that shape the Julia Community","style":{"italic":true}}]}]}],"client_msg_id":"85c531d3-be03-4d63-8ccb-3209d3a83e59"},{"client_msg_id":"8CE34420-588E-40B1-9083-FF69F06E251D","type":"message","text":"In case I hadn’t said it for folks here, feel free to send me suggestions for other solutions. As mentioned when the helpdesk bot went live, this is v0.1 and we will iterate as needed : ) ","user":"UGR3910CQ","ts":"1613665244.440700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5PQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In case I hadn’t said it for folks here, feel free to send me suggestions for other solutions. As mentioned when the helpdesk bot went live, this is v0.1 and we will iterate as needed : ) "}]}]}],"reactions":[{"name":"+1","users":["U7HAYKY9X","USU9FRPEU","ULDQSHD41","UM8JUNJG7","U6QGE7S86"],"count":5}]},{"client_msg_id":"f8d0a510-a108-4450-933a-d53bf3b781b4","type":"message","text":"I'm still thinking about two suggestions:\n(1) Implementing an active option. I.e. you \"summon\" it deliberately if someone thinks the thread may be worthwhile\n(2) Only threads of a certain length are considered by default. E.g. after 5-10 answers the bot jumps in and asks because this is likely to be an interesting topic","user":"ULMSM9MAL","ts":"1613666251.444100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5S0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm still thinking about two suggestions:\n(1) Implementing an active option. I.e. you \"summon\" it deliberately if someone thinks the thread may be worthwhile\n(2) Only threads of a certain length are considered by default. E.g. after 5-10 answers the bot jumps in and asks because this is likely to be an interesting topic"}]}]}],"thread_ts":"1613666251.444100","reply_count":3,"reply_users_count":3,"latest_reply":"1613667701.445800","reply_users":["UJ7DVTVQ8","ULMSM9MAL","U011V2YN59N"],"subscribed":false,"reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","UFXN8M2FR","U011V2YN59N"],"count":3}]},{"type":"message","subtype":"thread_broadcast","text":"I think one good thing about the way it’s working currently is that by auto-creating a thread on each question it definitely encourages responses to the question to go in that thread","user":"UGU761DU2","ts":"1613668484.446100","thread_ts":"1613665244.440700","root":{"client_msg_id":"8CE34420-588E-40B1-9083-FF69F06E251D","type":"message","text":"In case I hadn’t said it for folks here, feel free to send me suggestions for other solutions. As mentioned when the helpdesk bot went live, this is v0.1 and we will iterate as needed : ) ","user":"UGR3910CQ","ts":"1613665244.440700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5PQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In case I hadn’t said it for folks here, feel free to send me suggestions for other solutions. As mentioned when the helpdesk bot went live, this is v0.1 and we will iterate as needed : ) "}]}]}],"thread_ts":"1613665244.440700","reply_count":2,"reply_users_count":2,"latest_reply":"1613668484.446100","reply_users":["U01HD5VFXJM","UGU761DU2"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"1Pl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think one good thing about the way it’s working currently is that by auto-creating a thread on each question it definitely encourages responses to the question to go in that thread"}]}]}],"client_msg_id":"49419604-200e-4c55-9600-a358d3182ad2","reactions":[{"name":"+1","users":["U01HD5VFXJM","U680THK2S","ULMSM9MAL"],"count":3},{"name":"1000","users":["U9L5Y89H7"],"count":1}]},{"client_msg_id":"6835b2aa-8604-4603-8b79-4b60bb6ea469","type":"message","text":"The docs for `isapprox`  never actually say what `atol` or `rtol` do","user":"U6A936746","ts":"1613752320.461900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/zU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The docs for "},{"type":"text","text":"isapprox","style":{"code":true}},{"type":"text","text":"  never actually say what "},{"type":"text","text":"atol","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"rtol","style":{"code":true}},{"type":"text","text":" do"}]}]}],"thread_ts":"1613752320.461900","reply_count":2,"reply_users_count":2,"latest_reply":"1613752491.462500","reply_users":["UDB26738Q","U6A936746"],"subscribed":false,"reactions":[{"name":"false","users":["U6A936746"],"count":1},{"name":"+1","users":["U66SGEWAC"],"count":1}]},{"type":"message","text":"Can this really be called \"quick format\" when I've been waiting 10 minutes?","files":[{"id":"F01P51ZVC4R","created":1613780942,"timestamp":1613780942,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U8JP5B9T2","editable":false,"size":77225,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01P51ZVC4R/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01P51ZVC4R/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01P51ZVC4R-5e999d9410/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01P51ZVC4R-5e999d9410/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01P51ZVC4R-5e999d9410/image_360.png","thumb_360_w":360,"thumb_360_h":207,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01P51ZVC4R-5e999d9410/image_480.png","thumb_480_w":480,"thumb_480_h":276,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01P51ZVC4R-5e999d9410/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01P51ZVC4R-5e999d9410/image_720.png","thumb_720_w":720,"thumb_720_h":414,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01P51ZVC4R-5e999d9410/image_800.png","thumb_800_w":800,"thumb_800_h":460,"original_w":883,"original_h":508,"thumb_tiny":"AwAbADDSwaMe9LRQAmPej8aWjFACc9qXmiigAqOZzHEWUAnsDUlJQBS+2y/3Yv8Avuj7bJ/dj/77q7gegowPQUAUvtsnZYv++6VL1zIqsqYY4+Vs1cwPQUYHpQB//9k=","permalink":"https://julialang.slack.com/files/U8JP5B9T2/F01P51ZVC4R/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01P51ZVC4R-c59a762db4","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"5H=c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can this really be called \"quick format\" when I've been waiting 10 minutes?"}]}]}],"user":"U8JP5B9T2","display_as_bot":false,"ts":"1613780962.000500"},{"client_msg_id":"cc52ff98-715a-4f40-ba26-e89e7bc55292","type":"message","text":"If github would make me a branch instead of complaining “must be on a branch” when I try to edit the docs, making small corrections would be much less effort. For the readme the edit button works and does this, <https://github.com/JuliaLang/julia/blob/master/README.md>, but for <https://github.com/JuliaLang/julia/blob/715e6264e33a408a576966dc9ca2a75ddc4cc160/base/floatfuncs.jl> it doesn’t…\n\nHa, copying the links I have a suspicion whats going on!","user":"U6C937ENB","ts":"1613840500.007800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s1t3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If github would make me a branch instead of complaining “must be on a branch” when I try to edit the docs, making small corrections would be much less effort. For the readme the edit button works and does this, "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/master/README.md"},{"type":"text","text":", but for "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/715e6264e33a408a576966dc9ca2a75ddc4cc160/base/floatfuncs.jl"},{"type":"text","text":" it doesn’t…\n\nHa, copying the links I have a suspicion whats going on!"}]}]}]},{"client_msg_id":"a6dc4079-15fb-4e10-ba99-f929cd3a2fc1","type":"message","text":"<https://discourse.julialang.org/t/first-try-seems-a-bit-sluggish/55741> Endless rehashing of the same \"first run is slow, don't run Julia scripts from the command line\" advice","user":"UB2QRMQPN","ts":"1613942879.009400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5o3","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://discourse.julialang.org/t/first-try-seems-a-bit-sluggish/55741"},{"type":"text","text":" Endless rehashing of the same \"first run is slow, don't run Julia scripts from the command line\" advice"}]}]}]},{"client_msg_id":"80169b7b-a917-4c3f-89c7-748d218416f7","type":"message","text":"I can't find any mention of why one ought to avoid doing so in either the performance or workflow tips portions of the manual, and it's maybe the most common pitfall for experienced programmers coming from other languages","user":"UB2QRMQPN","ts":"1613943493.011900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6YL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can't find any mention of why one ought to avoid doing so in either the performance or workflow tips portions of the manual, and it's maybe the most common pitfall for experienced programmers coming from other languages"}]}]}],"thread_ts":"1613943493.011900","reply_count":1,"reply_users_count":1,"latest_reply":"1613943633.012700","reply_users":["U7THT3TM3"],"subscribed":false},{"client_msg_id":"cec80f39-2575-47bd-8d03-cc615cd69311","type":"message","text":"imo what now is `String` should be `UnicodeString` (yes, ignoring UTF16) so some of what now is `string` can be `String`.","user":"U68QW0PUZ","ts":"1613977704.015400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WCQE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"imo what now is "},{"type":"text","text":"String","style":{"code":true}},{"type":"text","text":" should be "},{"type":"text","text":"UnicodeString","style":{"code":true}},{"type":"text","text":" (yes, ignoring UTF16) so some of what now is "},{"type":"text","text":"string","style":{"code":true}},{"type":"text","text":" can be "},{"type":"text","text":"String","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"type":"message","text":"","files":[{"id":"F01NX8FLR6F","created":1614007621,"timestamp":1614007621,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U6740K1SP","editable":false,"size":4108,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01NX8FLR6F/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01NX8FLR6F/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01NX8FLR6F-19da06cde5/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01NX8FLR6F-19da06cde5/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01NX8FLR6F-19da06cde5/image_360.png","thumb_360_w":212,"thumb_360_h":84,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01NX8FLR6F-19da06cde5/image_160.png","original_w":212,"original_h":84,"thumb_tiny":"AwATADDTpCwXqcUtIw4zgE0AJvX+8KN64+8Kb8xPMa4+tA3dDGuPrTsA8EHoQaWkAHpilpAFFFFABRRRQAUUUUAf/9k=","permalink":"https://julialang.slack.com/files/U6740K1SP/F01NX8FLR6F/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01NX8FLR6F-02c48227aa","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"U6740K1SP","display_as_bot":false,"ts":"1614007624.015900","thread_ts":"1614007624.015900","reply_count":6,"reply_users_count":1,"latest_reply":"1614007980.018300","reply_users":["U6740K1SP"],"subscribed":false,"reactions":[{"name":"three_button_mouse","users":["UDB26738Q"],"count":1},{"name":"octocat","users":["U6740K1SP","U013B3NSZGB","UCZ7VBGUD","ULDQSHD41","UM30MT6RF"],"count":5}]},{"client_msg_id":"5dbcc748-b385-4052-806c-994a616f011f","type":"message","text":"If you want to pass around a script (not a package), you need `Pkg.activate(\".\")` somewhere, right?\n\nBut this isn't costless, so it's annoying to just `include` over and over again. Is that something that can be changed?","user":"UBF9YRB6H","ts":"1614104100.021500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OS5r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you want to pass around a script (not a package), you need "},{"type":"text","text":"Pkg.activate(\".\")","style":{"code":true}},{"type":"text","text":" somewhere, right?\n\nBut this isn't costless, so it's annoying to just "},{"type":"text","text":"include","style":{"code":true}},{"type":"text","text":" over and over again. Is that something that can be changed?"}]}]}],"thread_ts":"1614104100.021500","reply_count":2,"reply_users_count":1,"latest_reply":"1614104341.021800","reply_users":["UBF9YRB6H"],"subscribed":false},{"client_msg_id":"f5e568ac-2682-49bf-87a4-2b6c83f7ef32","type":"message","text":":grapes:: how easy it is for method signatures in docstrings to bit rot","user":"U8MPCDJAY","ts":"1614108793.025100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"44Vr1","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"grapes"},{"type":"text","text":": how easy it is for method signatures in docstrings to bit rot"}]}]}],"thread_ts":"1614108793.025100","reply_count":6,"reply_users_count":4,"latest_reply":"1614109732.027400","reply_users":["U67SCG4HG","U67D54KS8","U8MPCDJAY","UDB26738Q"],"subscribed":false},{"client_msg_id":"447eb761-b0b1-4b23-825e-af4175cc2ef0","type":"message","text":"I keep getting annoyed that `eltype(map(f, vector))` isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when `Union{T, Nothing}` becomes `Nothing` or `Union{T, Missing}` becomes `Missing`  then we loose all the semantic information that `T` tells us. We can fix it up with `T[f(x) for x in vector]` or similar, having determined the correct output `T` manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of `map` was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?","user":"U66QZ3QF3","ts":"1614125386.034800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8AaKa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I keep getting annoyed that "},{"type":"text","text":"eltype(map(f, vector))","style":{"code":true}},{"type":"text","text":" isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when "},{"type":"text","text":"Union{T, Nothing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Nothing","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"Union{T, Missing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Missing","style":{"code":true}},{"type":"text","text":"  then we loose all the semantic information that "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" tells us. We can fix it up with "},{"type":"text","text":"T[f(x) for x in vector]","style":{"code":true}},{"type":"text","text":" or similar, having determined the correct output "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?"}]}]}],"thread_ts":"1614125386.034800","reply_count":1,"reply_users_count":1,"latest_reply":"1614126750.042300","reply_users":["U72B7LTMX"],"subscribed":false},{"client_msg_id":"7854cf24-0312-4d8f-bbc7-c80ec52c8b0f","type":"message","text":"```julia&gt; eltype(map(sin, Any[1, 2, π]))\nFloat64```\nis a nice property to have","user":"U680THK2S","ts":"1614125613.035300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G+=3","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> eltype(map(sin, Any[1, 2, π]))\nFloat64"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"is a nice property to have"}]}]}],"thread_ts":"1614125613.035300","reply_count":3,"reply_users_count":2,"latest_reply":"1614126174.040700","reply_users":["UH8A351DJ","U680THK2S"],"subscribed":false},{"client_msg_id":"e45909ec-517e-4a6e-872c-500cabe85d16","type":"message","text":"Rather than getting back `Any`","user":"U680THK2S","ts":"1614125627.035600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dGGm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rather than getting back "},{"type":"text","text":"Any","style":{"code":true}}]}]}]},{"client_msg_id":"e3bfbc87-fa5f-4688-b089-2b50dcf3b55d","type":"message","text":"(unless I'm misunderstanding the gripe)","user":"U680THK2S","ts":"1614125736.035800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NNN9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(unless I'm misunderstanding the gripe)"}]}]}]},{"client_msg_id":"36a479ee-dc13-46ef-be0b-e43f0f3348d3","type":"message","text":"Yes that's probably the one case it is helpful - some automatic narrowing from `Any`. It doesn't really come up for me unless I'm scripting, though. You can always use `collect` when you want to narrow, however, like\n```v = Any[1, 2, π]\nmap(sin, collect(v))```\nI'd say the workaround here is a lot easier than the workaround I've resorted to above.","user":"U66QZ3QF3","ts":"1614126058.038800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iNoN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes that's probably the one case it is helpful - some automatic narrowing from "},{"type":"text","text":"Any","style":{"code":true}},{"type":"text","text":". It doesn't really come up for me unless I'm scripting, though. You can always use "},{"type":"text","text":"collect","style":{"code":true}},{"type":"text","text":" when you want to narrow, however, like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"v = Any[1, 2, π]\nmap(sin, collect(v))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I'd say the workaround here is a lot easier than the workaround I've resorted to above."}]}]}]},{"client_msg_id":"c79930f7-8038-4851-9edb-5ad803bac878","type":"message","text":"You could even combine the best of both worlds - e.g. ask for `return_type` and if it returns `Any` than use the value-based narrowing approach, otherwise use it.","user":"U66QZ3QF3","ts":"1614126132.040400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jZV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could even combine the best of both worlds - e.g. ask for "},{"type":"text","text":"return_type","style":{"code":true}},{"type":"text","text":" and if it returns "},{"type":"text","text":"Any","style":{"code":true}},{"type":"text","text":" than use the value-based narrowing approach, otherwise use it."}]}]}],"thread_ts":"1614126132.040400","reply_count":1,"reply_users_count":1,"latest_reply":"1614126408.041900","reply_users":["UH8A351DJ"],"subscribed":false},{"client_msg_id":"1f3cee78-be05-4b10-a517-2b62786e4afc","type":"message","text":"I believe this boils down to a question about to what extent type inference should affect the semantics of julia, versus just playing a role in improving performance. For the empty-collection case, there are no values to query, and so either there's some type inference, or it's always `Any`.","user":"U72B7LTMX","ts":"1614126135.040600","team":"T68168MUP","edited":{"user":"U72B7LTMX","ts":"1614126368.000000"},"blocks":[{"type":"rich_text","block_id":"EHV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe this boils down to a question about to what extent type inference should affect the semantics of julia, versus just playing a role in improving performance. For the empty-collection case, there are no values to query, and so either there's some type inference, or it's always "},{"type":"text","text":"Any","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"1b378b5b-2441-4a84-b240-22a96143a008","type":"message","text":"In my opinion, this is a big wart:\n\n```julia\njulia&gt; f(x) = ifelse(iseven(x), \"even\", :odd)\nf (generic function with 1 method)\n\njulia&gt; map(f, 1:2)\n2-element Vector{Any}:\n :odd\n \"even\"\n\njulia&gt; map(f, 1:1)\n1-element Vector{Symbol}:\n :odd\n\njulia&gt; map(f, 1:0)\nUnion{String, Symbol}[]```","user":"U72B7LTMX","ts":"1614126396.041800","team":"T68168MUP","edited":{"user":"U72B7LTMX","ts":"1614126455.000000"},"blocks":[{"type":"rich_text","block_id":"FbM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In my opinion, this is a big wart:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia\njulia> f(x) = ifelse(iseven(x), \"even\", :odd)\nf (generic function with 1 method)\n\njulia> map(f, 1:2)\n2-element Vector{Any}:\n :odd\n \"even\"\n\njulia> map(f, 1:1)\n1-element Vector{Symbol}:\n :odd\n\njulia> map(f, 1:0)\nUnion{String, Symbol}[]"}]}]}]},{"type":"message","subtype":"thread_broadcast","text":"I wonder if you can elaborate on how losing that a `nothing` corresponds to not-a-`T` causes an issue down the line? I don't doubt it's an issue, but I'd like to see an example if you have one handy.\n\nThere's some (core-to-julia) sense in which functions are supposed to be generic, and so any methods defined for specific types should be conceptually related to any other method. Is there a function with e.g. a method for  `Vector{Nothing}` and a method for `Vector{Union{T, Nothing}}` and these methods \"mean\" different things?","user":"U72B7LTMX","ts":"1614126750.042300","thread_ts":"1614125386.034800","root":{"client_msg_id":"447eb761-b0b1-4b23-825e-af4175cc2ef0","type":"message","text":"I keep getting annoyed that `eltype(map(f, vector))` isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when `Union{T, Nothing}` becomes `Nothing` or `Union{T, Missing}` becomes `Missing`  then we loose all the semantic information that `T` tells us. We can fix it up with `T[f(x) for x in vector]` or similar, having determined the correct output `T` manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of `map` was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?","user":"U66QZ3QF3","ts":"1614125386.034800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8AaKa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I keep getting annoyed that "},{"type":"text","text":"eltype(map(f, vector))","style":{"code":true}},{"type":"text","text":" isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when "},{"type":"text","text":"Union{T, Nothing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Nothing","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"Union{T, Missing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Missing","style":{"code":true}},{"type":"text","text":"  then we loose all the semantic information that "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" tells us. We can fix it up with "},{"type":"text","text":"T[f(x) for x in vector]","style":{"code":true}},{"type":"text","text":" or similar, having determined the correct output "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?"}]}]}],"thread_ts":"1614125386.034800","reply_count":1,"reply_users_count":1,"latest_reply":"1614126750.042300","reply_users":["U72B7LTMX"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"ghHt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder if you can elaborate on how losing that a "},{"type":"text","text":"nothing","style":{"code":true}},{"type":"text","text":" corresponds to not-a-"},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" causes an issue down the line? I don't doubt it's an issue, but I'd like to see an example if you have one handy.\n\nThere's some (core-to-julia) sense in which functions are supposed to be generic, and so any methods defined for specific types should be conceptually related to any other method. Is there a function with e.g. a method for  "},{"type":"text","text":"Vector{Nothing}","style":{"code":true}},{"type":"text","text":" and a method for "},{"type":"text","text":"Vector{Union{T, Nothing}}","style":{"code":true}},{"type":"text","text":" and these methods \"mean\" different things?"}]}]}],"client_msg_id":"2565328d-caf6-4591-b68f-08d2919302b3"},{"type":"message","subtype":"thread_broadcast","text":"```julia&gt; a = Union{Real, Nothing, Missing}[1,2.0,π, missing]\n4-element Vector{Union{Missing, Nothing, Real}}:\n 1\n 2.0\n π = 3.1415926535897...\n  missing\n\njulia&gt; map!(sin, similar(a), a)\n4-element Vector{Union{Missing, Nothing, Real}}:\n 0.8414709848078965\n 0.9092974268256817\n 1.2246467991473532e-16\n  missing```\nmaybe this approach? Using the fact that `similar()` preserves type closely.","user":"UH8A351DJ","ts":"1614127190.042600","thread_ts":"1614126132.040400","root":{"client_msg_id":"c79930f7-8038-4851-9edb-5ad803bac878","type":"message","text":"You could even combine the best of both worlds - e.g. ask for `return_type` and if it returns `Any` than use the value-based narrowing approach, otherwise use it.","user":"U66QZ3QF3","ts":"1614126132.040400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jZV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could even combine the best of both worlds - e.g. ask for "},{"type":"text","text":"return_type","style":{"code":true}},{"type":"text","text":" and if it returns "},{"type":"text","text":"Any","style":{"code":true}},{"type":"text","text":" than use the value-based narrowing approach, otherwise use it."}]}]}],"thread_ts":"1614126132.040400","reply_count":6,"reply_users_count":2,"latest_reply":"1614130156.049100","reply_users":["UH8A351DJ","U66QZ3QF3"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"PBBIP","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a = Union{Real, Nothing, Missing}[1,2.0,π, missing]\n4-element Vector{Union{Missing, Nothing, Real}}:\n 1\n 2.0\n π = 3.1415926535897...\n  missing\n\njulia> map!(sin, similar(a), a)\n4-element Vector{Union{Missing, Nothing, Real}}:\n 0.8414709848078965\n 0.9092974268256817\n 1.2246467991473532e-16\n  missing"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"maybe this approach? Using the fact that "},{"type":"text","text":"similar()","style":{"code":true}},{"type":"text","text":" preserves type closely."}]}]}],"client_msg_id":"4e83bd39-eaba-4c6f-b473-e4a33a8d4947","edited":{"user":"UH8A351DJ","ts":"1614127212.000000"}},{"type":"message","subtype":"thread_broadcast","text":"Yeah! I gotcha. So did you have\n\n`average(v::Vector{Union{Nothing, Float64}})`","user":"U72B7LTMX","ts":"1614129657.045100","thread_ts":"1614125386.034800","root":{"client_msg_id":"447eb761-b0b1-4b23-825e-af4175cc2ef0","type":"message","text":"I keep getting annoyed that `eltype(map(f, vector))` isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when `Union{T, Nothing}` becomes `Nothing` or `Union{T, Missing}` becomes `Missing`  then we loose all the semantic information that `T` tells us. We can fix it up with `T[f(x) for x in vector]` or similar, having determined the correct output `T` manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of `map` was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?","user":"U66QZ3QF3","ts":"1614125386.034800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8AaKa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I keep getting annoyed that "},{"type":"text","text":"eltype(map(f, vector))","style":{"code":true}},{"type":"text","text":" isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when "},{"type":"text","text":"Union{T, Nothing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Nothing","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"Union{T, Missing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Missing","style":{"code":true}},{"type":"text","text":"  then we loose all the semantic information that "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" tells us. We can fix it up with "},{"type":"text","text":"T[f(x) for x in vector]","style":{"code":true}},{"type":"text","text":" or similar, having determined the correct output "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?"}]}]}],"thread_ts":"1614125386.034800","reply_count":10,"reply_users_count":2,"latest_reply":"1614130516.049700","reply_users":["U72B7LTMX","U66QZ3QF3"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"+ZdK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah! I gotcha. So did you have\n\n"},{"type":"text","text":"average(v::Vector{Union{Nothing, Float64}})","style":{"code":true}}]}]}],"client_msg_id":"b8b0e7d6-09d5-43ee-aa60-f61425a9ab70"},{"type":"message","subtype":"thread_broadcast","text":"In any case, this is my guess for what happened in a nutshell:\n\n```julia&gt; average(v::Vector{&lt;:Union{Nothing, Float64}}) = :mean\naverage (generic function with 1 method)\n\njulia&gt; average(v::Vector{&lt;:Union{Nothing, String}}) = :mode\naverage (generic function with 2 methods)\n\njulia&gt; average([1.0, 2.0])\n:mean\n\njulia&gt; average([1.0, 2.0, nothing])\n:mean\n\njulia&gt; average([\"\"])\n:mode\n\njulia&gt; average([\"\", nothing])\n:mode\n\njulia&gt; average([nothing])\nERROR: MethodError: average(::Vector{Nothing}) is ambiguous. Candidates:\n  average(v::Vector{var\"#s24\"} where var\"#s24\"&lt;:Union{Nothing, Float64}) in Main at REPL[21]:1\n  average(v::Vector{var\"#s24\"} where var\"#s24\"&lt;:Union{Nothing, String}) in Main at REPL[22]:1```","user":"U72B7LTMX","ts":"1614129807.046600","thread_ts":"1614125386.034800","root":{"client_msg_id":"447eb761-b0b1-4b23-825e-af4175cc2ef0","type":"message","text":"I keep getting annoyed that `eltype(map(f, vector))` isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when `Union{T, Nothing}` becomes `Nothing` or `Union{T, Missing}` becomes `Missing`  then we loose all the semantic information that `T` tells us. We can fix it up with `T[f(x) for x in vector]` or similar, having determined the correct output `T` manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of `map` was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?","user":"U66QZ3QF3","ts":"1614125386.034800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8AaKa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I keep getting annoyed that "},{"type":"text","text":"eltype(map(f, vector))","style":{"code":true}},{"type":"text","text":" isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when "},{"type":"text","text":"Union{T, Nothing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Nothing","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"Union{T, Missing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Missing","style":{"code":true}},{"type":"text","text":"  then we loose all the semantic information that "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" tells us. We can fix it up with "},{"type":"text","text":"T[f(x) for x in vector]","style":{"code":true}},{"type":"text","text":" or similar, having determined the correct output "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?"}]}]}],"thread_ts":"1614125386.034800","reply_count":10,"reply_users_count":2,"latest_reply":"1614130516.049700","reply_users":["U72B7LTMX","U66QZ3QF3"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"NoP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In any case, this is my guess for what happened in a nutshell:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> average(v::Vector{<:Union{Nothing, Float64}}) = :mean\naverage (generic function with 1 method)\n\njulia> average(v::Vector{<:Union{Nothing, String}}) = :mode\naverage (generic function with 2 methods)\n\njulia> average([1.0, 2.0])\n:mean\n\njulia> average([1.0, 2.0, nothing])\n:mean\n\njulia> average([\"\"])\n:mode\n\njulia> average([\"\", nothing])\n:mode\n\njulia> average([nothing])\nERROR: MethodError: average(::Vector{Nothing}) is ambiguous. Candidates:\n  average(v::Vector{var\"#s24\"} where var\"#s24\"<:Union{Nothing, Float64}) in Main at REPL[21]:1\n  average(v::Vector{var\"#s24\"} where var\"#s24\"<:Union{Nothing, String}) in Main at REPL[22]:1"}]}]}],"client_msg_id":"fc17d274-cb05-449a-9d13-9e87a10e549f","reactions":[{"name":"heavy_check_mark","users":["U66QZ3QF3"],"count":1}]},{"client_msg_id":"7627F6BD-3C3B-40F3-A82A-A91651AA4A6D","type":"message","text":"The “remember the union it came from” part sounds like <https://github.com/MasonProtter/SumTypes.jl|https://github.com/MasonProtter/SumTypes.jl>","user":"UCZ7VBGUD","ts":"1614129818.047000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6r6cg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The “remember the union it came from” part sounds like "},{"type":"link","url":"https://github.com/MasonProtter/SumTypes.jl","text":"https://github.com/MasonProtter/SumTypes.jl"}]}]}],"reactions":[{"name":"point_up","users":["U72B7LTMX","U7THT3TM3"],"count":2}]},{"client_msg_id":"95067122-798d-4f44-9fb0-8db75a5c76f9","type":"message","text":"Yeah - thanks. Perhaps that would be a good use-case for us (we typically have to treat the null value differently anyway so it wouldn't add tonnes of overhead).","user":"U66QZ3QF3","ts":"1614129912.048000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LUN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah - thanks. Perhaps that would be a good use-case for us (we typically have to treat the null value differently anyway so it wouldn't add tonnes of overhead)."}]}]}],"reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"type":"message","subtype":"thread_broadcast","text":"I bet this has been hashed out to some extent in: <https://github.com/JuliaLang/julia/issues/22682>\n\nand perhaps this example should be mentioned at <https://docs.julialang.org/en/v1/manual/types/#Type-Unions> since `Union{Nothing, T}` is really not a perfect replacement for \"Maybe{T}\".","user":"U72B7LTMX","ts":"1614130410.049400","thread_ts":"1614125386.034800","root":{"client_msg_id":"447eb761-b0b1-4b23-825e-af4175cc2ef0","type":"message","text":"I keep getting annoyed that `eltype(map(f, vector))` isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when `Union{T, Nothing}` becomes `Nothing` or `Union{T, Missing}` becomes `Missing`  then we loose all the semantic information that `T` tells us. We can fix it up with `T[f(x) for x in vector]` or similar, having determined the correct output `T` manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of `map` was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?","user":"U66QZ3QF3","ts":"1614125386.034800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8AaKa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I keep getting annoyed that "},{"type":"text","text":"eltype(map(f, vector))","style":{"code":true}},{"type":"text","text":" isn't deterministic. We've got nullable data the output (or it's eltype) will be used in dispatch or other logic elsewhere - and when "},{"type":"text","text":"Union{T, Nothing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Nothing","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"Union{T, Missing}","style":{"code":true}},{"type":"text","text":" becomes "},{"type":"text","text":"Missing","style":{"code":true}},{"type":"text","text":"  then we loose all the semantic information that "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" tells us. We can fix it up with "},{"type":"text","text":"T[f(x) for x in vector]","style":{"code":true}},{"type":"text","text":" or similar, having determined the correct output "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" manually ourselves, but honestly it seems better to me in basically all cases I use it if the output type of "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" was determined solely from the type of the inputs rather than the values.\n\nDoes anyone else feel this way? Or is there something people find particularly useful about the current value-based semantics?"}]}]}],"thread_ts":"1614125386.034800","reply_count":10,"reply_users_count":2,"latest_reply":"1614130516.049700","reply_users":["U72B7LTMX","U66QZ3QF3"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"Wb9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I bet this has been hashed out to some extent in: "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/22682"},{"type":"text","text":"\n\nand perhaps this example should be mentioned at "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/types/#Type-Unions"},{"type":"text","text":" since "},{"type":"text","text":"Union{Nothing, T}","style":{"code":true}},{"type":"text","text":" is really not a perfect replacement for \"Maybe{T}\"."}]}]}],"client_msg_id":"0f6837f3-f788-41d9-b92a-eeb368f434f5"},{"client_msg_id":"4ea891ba-e90d-4c7d-8143-692827d241a2","type":"message","text":"If I may self-advertise a bit, I made ErrorTypes.jl for exactly that, and use it in my own code. It's built on Mason's SumTypes, and is intended to ape Rust's Result and Option.","user":"U7HAYKY9X","ts":"1614152198.052400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mfqf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I may self-advertise a bit, I made ErrorTypes.jl for exactly that, and use it in my own code. It's built on Mason's SumTypes, and is intended to ape Rust's Result and Option."}]}]}]},{"client_msg_id":"9cfb5d78-d90f-4286-84d4-e2df7f3376da","type":"message","text":"```ERROR: MethodError: no method matching Array{Float64, 1}(::Vector{Float64})```\nWhen the literal `1` is a `Int64` on a 32bit julia version.\nThis happens when reconstructing type signatures from JLD2 files\n<https://github.com/JuliaIO/JLD2.jl/issues/281>","user":"U9769MVA7","ts":"1614155176.054000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XuqLj","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: MethodError: no method matching Array{Float64, 1}(::Vector{Float64})"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"When the literal "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" is a "},{"type":"text","text":"Int64","style":{"code":true}},{"type":"text","text":" on a 32bit julia version.\nThis happens when reconstructing type signatures from JLD2 files\n"},{"type":"link","url":"https://github.com/JuliaIO/JLD2.jl/issues/281"}]}]}],"thread_ts":"1614155176.054000","reply_count":6,"reply_users_count":2,"latest_reply":"1614156557.055100","reply_users":["U9769MVA7","U6A936746"],"subscribed":false},{"client_msg_id":"2a5925a5-139a-46b3-9c77-b7c55ef48487","type":"message","text":"We need to do more to educate people about not tagging breaking changes for not breaking things.\nNot to pick on Lasso in particular, but it is such an example of this.\n<https://github.com/JuliaStats/Lasso.jl/releases>\nv0.6.0 not only had no breaking changes, it had no user facing API changes at all.\nIt had an improved docstring, and a change to the tests, and changed the compat","user":"U6A936746","ts":"1614167469.058400","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1614168132.000000"},"blocks":[{"type":"rich_text","block_id":"LrRr6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We need to do more to educate people about not tagging breaking changes for not breaking things.\nNot to pick on Lasso in particular, but it is such an example of this.\n"},{"type":"link","url":"https://github.com/JuliaStats/Lasso.jl/releases"},{"type":"text","text":"\nv0.6.0 not only had no breaking changes, it had no user facing API changes at all.\nIt had an improved docstring, and a change to the tests, and changed the compat"}]}]}],"thread_ts":"1614167469.058400","reply_count":6,"reply_users_count":2,"latest_reply":"1614168475.059600","reply_users":["U6A936746","U67D54KS8"],"subscribed":false},{"client_msg_id":"d7942200-32ef-4252-915e-63f5a4af43c5","type":"message","text":"<@U6A936746> About that, I had several discussions with people to whom it was unclear whever changing julia compat bounds (eg from 1.0 to 1.3) is a breaking change or not. I believe that changing compat bounds is not breaking, but never managed to convince anybody.\nI think if someone _autoritative_ wrote it somewhere, it would help me me make my case.","user":"UAJH2818E","ts":"1614180657.061900","team":"T68168MUP","edited":{"user":"UAJH2818E","ts":"1614180703.000000"},"blocks":[{"type":"rich_text","block_id":"HvGz","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6A936746"},{"type":"text","text":" About that, I had several discussions with people to whom it was unclear whever changing julia compat bounds (eg from 1.0 to 1.3) is a breaking change or not. I believe that changing compat bounds is not breaking, but never managed to convince anybody.\nI think if someone "},{"type":"text","text":"autoritative","style":{"italic":true}},{"type":"text","text":" wrote it somewhere, it would help me me make my case."}]}]}],"thread_ts":"1614180657.061900","reply_count":20,"reply_users_count":5,"latest_reply":"1614181067.066300","reply_users":["UDB26738Q","UAJH2818E","U7HAYKY9X","UDXST8ARK","U6A936746"],"subscribed":false},{"client_msg_id":"d4c664a2-f6df-4b07-9eea-55cc47f085e3","type":"message","text":"Trying to do some image recognition demos, and VGG9 thinks my room is a \"barber shop\"","user":"U679VPJ8L","ts":"1614348821.068700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rQpT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Trying to do some image recognition demos, and VGG9 thinks my room is a \"barber shop\""}]}]}],"thread_ts":"1614348821.068700","reply_count":1,"reply_users_count":1,"latest_reply":"1614348846.068800","reply_users":["UDB26738Q"],"subscribed":false},{"client_msg_id":"c461bc57-e68d-4ecb-ba07-5000b86f4920","type":"message","text":":github_unicorn:","user":"UDB26738Q","ts":"1614362609.073200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xr5s","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"github_unicorn"}]}]}]},{"type":"message","text":"Is this normal? I already did `]gc`. This computer has a 128GB SSD so it’s pretty significant.","files":[{"id":"F01PCKQ4AEA","created":1614377062,"timestamp":1614377062,"name":"Screenshot 2021-02-23 at 16.36.46.png","title":"Screenshot 2021-02-23 at 16.36.46.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U73KENNG4","editable":false,"size":262702,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01PCKQ4AEA/screenshot_2021-02-23_at_16.36.46.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01PCKQ4AEA/download/screenshot_2021-02-23_at_16.36.46.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01PCKQ4AEA-de27d5c2c9/screenshot_2021-02-23_at_16.36.46_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01PCKQ4AEA-de27d5c2c9/screenshot_2021-02-23_at_16.36.46_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01PCKQ4AEA-de27d5c2c9/screenshot_2021-02-23_at_16.36.46_360.png","thumb_360_w":360,"thumb_360_h":205,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01PCKQ4AEA-de27d5c2c9/screenshot_2021-02-23_at_16.36.46_480.png","thumb_480_w":480,"thumb_480_h":273,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01PCKQ4AEA-de27d5c2c9/screenshot_2021-02-23_at_16.36.46_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01PCKQ4AEA-de27d5c2c9/screenshot_2021-02-23_at_16.36.46_720.png","thumb_720_w":720,"thumb_720_h":410,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01PCKQ4AEA-de27d5c2c9/screenshot_2021-02-23_at_16.36.46_800.png","thumb_800_w":800,"thumb_800_h":456,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01PCKQ4AEA-de27d5c2c9/screenshot_2021-02-23_at_16.36.46_960.png","thumb_960_w":960,"thumb_960_h":547,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01PCKQ4AEA-de27d5c2c9/screenshot_2021-02-23_at_16.36.46_1024.png","thumb_1024_w":1024,"thumb_1024_h":583,"original_w":1594,"original_h":908,"thumb_tiny":"AwAbADClRSgZPb8aupBD5Qd2HHXnOKYm7FGirNxDGqh4z8p71WoAcw4zQtITmgHFAxKswtEsDB+WIyRn8qrUUhMvsQ9tiPKoOuOoqiwweufel3tjGTgjkU2gErBRRRTGf//Z","permalink":"https://julialang.slack.com/files/U73KENNG4/F01PCKQ4AEA/screenshot_2021-02-23_at_16.36.46.png","permalink_public":"https://slack-files.com/T68168MUP-F01PCKQ4AEA-835558138e","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"WWrV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this normal? I already did "},{"type":"text","text":"]gc","style":{"code":true}},{"type":"text","text":". This computer has a 128GB SSD so it’s pretty significant."}]}]}],"user":"U73KENNG4","display_as_bot":false,"ts":"1614377067.078300","thread_ts":"1614377067.078300","reply_count":5,"reply_users_count":3,"latest_reply":"1614377464.080300","reply_users":["UDB26738Q","UEP056STX","U67D54KS8"],"subscribed":false},{"client_msg_id":"49eaf432-6761-4b38-8ed4-86e02bafb1ba","type":"message","text":"I think I get why this happens, but anyone know a way to avoid it?\n```julia&gt; float = 3.333338333335e17\n3.333338333335e17\n\njulia&gt; int = Int64(float)\n333333833333500032 # oof\n\njulia&gt; int == float\ntrue # double oof```","user":"U681ELA87","ts":"1614400198.082600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rl7TS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I get why this happens, but anyone know a way to avoid it?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> float = 3.333338333335e17\n3.333338333335e17\n\njulia> int = Int64(float)\n333333833333500032 # oof\n\njulia> int == float\ntrue # double oof"}]}]}],"thread_ts":"1614400198.082600","reply_count":5,"reply_users_count":2,"latest_reply":"1614400637.083600","reply_users":["U0179G7FG4F","U681ELA87"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"oof indeed","user":"U68QW0PUZ","ts":"1614428827.085100","thread_ts":"1614400198.082600","root":{"client_msg_id":"49eaf432-6761-4b38-8ed4-86e02bafb1ba","type":"message","text":"I think I get why this happens, but anyone know a way to avoid it?\n```julia&gt; float = 3.333338333335e17\n3.333338333335e17\n\njulia&gt; int = Int64(float)\n333333833333500032 # oof\n\njulia&gt; int == float\ntrue # double oof```","user":"U681ELA87","ts":"1614400198.082600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rl7TS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I get why this happens, but anyone know a way to avoid it?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> float = 3.333338333335e17\n3.333338333335e17\n\njulia> int = Int64(float)\n333333833333500032 # oof\n\njulia> int == float\ntrue # double oof"}]}]}],"thread_ts":"1614400198.082600","reply_count":6,"reply_users_count":3,"latest_reply":"1614428827.085100","reply_users":["U0179G7FG4F","U681ELA87","U68QW0PUZ"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"wx2Sb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oof indeed"}]}]}],"client_msg_id":"d4f6b2e9-8258-4f27-8ead-a1b365db60f4"},{"client_msg_id":"c23fc45f-1a84-44a2-b707-c73c1d7d5b2f","type":"message","text":"Python package management is a utter mess.\nI am trying to run JuPyTer, which is installed in Python 3.9.\nIt is failing because it tries to start the kernel in Python 3.7 (which doesn’t have have jupyter installed).\nWhy is it trying to use 3.7? I am not entirely sure, but i think it is something to do with them trying to escape the virtual enviroment.\n\nTurns out stacked enviroments are really useful.","user":"U6A936746","ts":"1614604633.091100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rzK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Python package management is a utter mess.\nI am trying to run JuPyTer, which is installed in Python 3.9.\nIt is failing because it tries to start the kernel in Python 3.7 (which doesn’t have have jupyter installed).\nWhy is it trying to use 3.7? I am not entirely sure, but i think it is something to do with them trying to escape the virtual enviroment.\n\nTurns out stacked enviroments are really useful."}]}]}],"thread_ts":"1614604633.091100","reply_count":19,"reply_users_count":4,"latest_reply":"1614607923.096000","reply_users":["U6A936746","UDB26738Q","UPSSPPBFV","U7HAYKY9X"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"I give up.\nI am just never going to be able to run a python program.","user":"U6A936746","ts":"1614605243.092300","thread_ts":"1614604633.091100","root":{"client_msg_id":"c23fc45f-1a84-44a2-b707-c73c1d7d5b2f","type":"message","text":"Python package management is a utter mess.\nI am trying to run JuPyTer, which is installed in Python 3.9.\nIt is failing because it tries to start the kernel in Python 3.7 (which doesn’t have have jupyter installed).\nWhy is it trying to use 3.7? I am not entirely sure, but i think it is something to do with them trying to escape the virtual enviroment.\n\nTurns out stacked enviroments are really useful.","user":"U6A936746","ts":"1614604633.091100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rzK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Python package management is a utter mess.\nI am trying to run JuPyTer, which is installed in Python 3.9.\nIt is failing because it tries to start the kernel in Python 3.7 (which doesn’t have have jupyter installed).\nWhy is it trying to use 3.7? I am not entirely sure, but i think it is something to do with them trying to escape the virtual enviroment.\n\nTurns out stacked enviroments are really useful."}]}]}],"thread_ts":"1614604633.091100","reply_count":19,"reply_users_count":4,"latest_reply":"1614607923.096000","reply_users":["U6A936746","UDB26738Q","UPSSPPBFV","U7HAYKY9X"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"K4RK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I give up.\nI am just never going to be able to run a python program."}]}]}],"client_msg_id":"62fd5d51-bebb-40fe-a684-cea5c21f7625","reactions":[{"name":"unpython","users":["UDB26738Q","U6C5KSWAC","UDXST8ARK"],"count":3}]},{"client_msg_id":"9005df1a-d73a-4a3e-b925-6f875bfbd27b","type":"message","text":"The old “Juno bakes in its own sometimes-outdated versions of key packages” issue strikes again: <https://github.com/quinnj/JSON3.jl/issues/126>","user":"U681ELA87","ts":"1614626531.103900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GvW1e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The old “Juno bakes in its own sometimes-outdated versions of key packages” issue strikes again: "},{"type":"link","url":"https://github.com/quinnj/JSON3.jl/issues/126"}]}]}],"thread_ts":"1614626531.103900","reply_count":1,"reply_users_count":1,"latest_reply":"1614626698.104300","reply_users":["U6BNE7LTZ"],"subscribed":false,"reactions":[{"name":"juno","users":["UDB26738Q","U0179G7FG4F","U6BNE7LTZ","UGU761DU2"],"count":4}]},{"client_msg_id":"9e7f8f18-7842-489c-8a4f-1ead5ea90440","type":"message","text":"Methods can be added to constructors without module qualification\n```julia&gt; using Base: Int, run\n\njulia&gt; run(x) = 1\nERROR: error in method definition: function Base.run must be explicitly imported to be extended\nStacktrace:\n [1] top-level scope at none:0\n [2] top-level scope at REPL[2]:1\n\njulia&gt; Int(::String) = 99\nInt64\n\njulia&gt; Int(1)\n1\n\njulia&gt; Int(\"1\")\n99```","user":"UDXST8ARK","ts":"1614707940.112400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c+L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Methods can be added to constructors without module qualification\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Base: Int, run\n\njulia> run(x) = 1\nERROR: error in method definition: function Base.run must be explicitly imported to be extended\nStacktrace:\n [1] top-level scope at none:0\n [2] top-level scope at REPL[2]:1\n\njulia> Int(::String) = 99\nInt64\n\njulia> Int(1)\n1\n\njulia> Int(\"1\")\n99"}]}]}],"reactions":[{"name":"bug","users":["U6740K1SP","U8D9768Q6","U019K6Q9N15"],"count":3}]},{"client_msg_id":"58458160-b12b-4aad-baa0-45d91e4d0d85","type":"message","text":"You can also make types callable without qualification.\n```julia&gt; (::String)(x) = println(\"boo!\")\n\njulia&gt; \"hello\"(1)\nboo!```","user":"U8D9768Q6","ts":"1614708472.113200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R0Oa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can also make types callable without qualification.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> (::String)(x) = println(\"boo!\")\n\njulia> \"hello\"(1)\nboo!"}]}]}],"reactions":[{"name":"supervillain","users":["UDXST8ARK","U019K6Q9N15"],"count":2}]},{"client_msg_id":"4056759f-a6c6-4bb6-851e-c469dd65611a","type":"message","text":"```julia&gt; (::typeof(run))(x) = 1\n\njulia&gt; run(1)\n1```","user":"U8D9768Q6","ts":"1614708529.113600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j1x1H","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> (::typeof(run))(x) = 1\n\njulia> run(1)\n1"}]}]}],"thread_ts":"1614708529.113600","reply_count":1,"reply_users_count":1,"latest_reply":"1614708754.115100","reply_users":["UDXST8ARK"],"subscribed":false,"reactions":[{"name":"scream","users":["U7HAYKY9X","U011V2YN59N","U019K6Q9N15"],"count":3},{"name":"joy","users":["UDXST8ARK","U6NFPDBV1"],"count":2},{"name":"linkrun","users":["UDB26738Q"],"count":1}]},{"client_msg_id":"2fa30597-d84a-477b-a9fd-9108c6d419fe","type":"message","text":"I really want to do a magic show sometime where I violate all sorts of julia interfaces that people assume are enforced.","user":"U8D9768Q6","ts":"1614708673.114800","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1614708689.000000"},"blocks":[{"type":"rich_text","block_id":"wqvgq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I really want to do a magic show sometime where I violate all sorts of julia interfaces that people assume are enforced."}]}]}],"thread_ts":"1614708673.114800","reply_count":2,"reply_users_count":2,"latest_reply":"1614708759.115500","reply_users":["U011V2YN59N","U0179G7FG4F"],"subscribed":false},{"client_msg_id":"4af0f956-7480-49d2-b6df-d8ede3183902","type":"message","text":"I wish there was a way to organize stared repos in GitHub","user":"UP95S4864","ts":"1614776870.125300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6+1f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wish there was a way to organize stared repos in GitHub"}]}]}]},{"client_msg_id":"498fcb0e-7546-43cb-8b5a-d48a371bd9dd","type":"message","text":"```julia&gt; s = Set{String}([\"asd\"])\njulia&gt; in(s, \"asd\")\nfalse\njulia&gt; in(\"asd\", s\")\ntrue```\nI know the argument order is meant to be read as `\"asd\" in s`, but it's still an easy mistake to make - and the fact that the alternative definition also exists, and returns false, is very dangerous!","user":"UCNPT22MQ","ts":"1614807221.130000","team":"T68168MUP","edited":{"user":"UCNPT22MQ","ts":"1614807300.000000"},"blocks":[{"type":"rich_text","block_id":"lMq","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> s = Set{String}([\"asd\"])\njulia> in(s, \"asd\")\nfalse\njulia> in(\"asd\", s\")\ntrue"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I know the argument order is meant to be read as "},{"type":"text","text":"\"asd\" in s","style":{"code":true}},{"type":"text","text":", but it's still an easy mistake to make - and the fact that the alternative definition also exists, and returns false, is very dangerous!"}]}]}],"thread_ts":"1614807221.130000","reply_count":1,"reply_users_count":1,"latest_reply":"1614808162.131100","reply_users":["UDB26738Q"],"subscribed":false},{"client_msg_id":"861ea6ee-0706-4d37-a9be-43d1da2ed76a","type":"message","text":"Seems pretty unavoidable.","user":"U8D9768Q6","ts":"1614808155.131000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MxE3T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems pretty unavoidable."}]}]}],"reactions":[{"name":"+1","users":["UB197FRCL"],"count":1}]},{"client_msg_id":"57b416f1-a7aa-417a-abd6-505e40b7dee2","type":"message","text":"Writing half a presentation in Pluto before realizing that macros don't necessarily work so I can't show several code examples. (Love Pluto in general, but now I've got to convert to Jupyter or such...)","user":"UFTJ2UDEW","ts":"1614808938.132500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WQo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Writing half a presentation in Pluto before realizing that macros don't necessarily work so I can't show several code examples. (Love Pluto in general, but now I've got to convert to Jupyter or such...)"}]}]}],"thread_ts":"1614808938.132500","reply_count":10,"reply_users_count":2,"latest_reply":"1614809753.135900","reply_users":["U8D9768Q6","UFTJ2UDEW"],"subscribed":false},{"client_msg_id":"f96d76d9-b86d-4e65-9871-f448b0a7a54e","type":"message","text":"reporting a gripe from Twitter: <https://twitter.com/austinbenson/status/1367584694376620033> I can confirm, it's going on for at least 5 minutes, I'll tell you when it finishes... if it finishes....","user":"UDB26738Q","ts":"1614907715.001100","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/austinbenson|@austinbenson>: I love #julialang but sometimes it just seems to be trying too hard. Case in point today while prepping a notebook for a lecture on QR.\n\nA = randn(1000, 100)\nQ, R = qr(A)\n@ time Q' * Q   # ungodly slow\n@ time Array(Q)' * Array(Q) # instant\n\nwas it that bad having full=false?","ts":1614892574,"author_name":"Austin Benson","author_link":"https://twitter.com/austinbenson/status/1367584694376620033","author_icon":"https://pbs.twimg.com/profile_images/1091537318073286656/gnmgj5kj_normal.jpg","author_subname":"@austinbenson","text":"I love #julialang but sometimes it just seems to be trying too hard. Case in point today while prepping a notebook for a lecture on QR.\n\nA = randn(1000, 100)\nQ, R = qr(A)\n@ time Q' * Q   # ungodly slow\n@ time Array(Q)' * Array(Q) # instant\n\nwas it that bad having full=false?","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/austinbenson/status/1367584694376620033","id":1,"original_url":"https://twitter.com/austinbenson/status/1367584694376620033","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"cAhiV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reporting a gripe from Twitter: "},{"type":"link","url":"https://twitter.com/austinbenson/status/1367584694376620033"},{"type":"text","text":" I can confirm, it's going on for at least 5 minutes, I'll tell you when it finishes... if it finishes...."}]}]}],"thread_ts":"1614907715.001100","reply_count":4,"reply_users_count":2,"latest_reply":"1614908386.001900","reply_users":["UDB26738Q","U674T3KB3"],"subscribed":false}]}