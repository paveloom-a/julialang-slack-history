{"cursor": 1, "messages": [{"client_msg_id":"b3a39695-d157-4744-b2d0-c263ffe64e30","type":"message","text":"<@U9EDKCNBF> for getting <https://juliacon.org/2021/> refactored using Franklin (and all of the other sites you have helped with)!","user":"UGR3910CQ","ts":"1612455726.228100","team":"T68168MUP","attachments":[{"title":"JuliaCon 2021","title_link":"https://juliacon.org/2021/","text":"JuliaCon 2021, Everywhere on Earth","fallback":"JuliaCon 2021","thumb_url":"https://raw.githubusercontent.com/cormullion/graphics/master/juliacon2021/old/juliacon-2021-ideas-5.png","from_url":"https://juliacon.org/2021/","thumb_width":700,"thumb_height":255,"service_icon":"https://juliacon.org/assets/favicon.png","service_name":"juliacon.org","id":1,"original_url":"https://juliacon.org/2021/"}],"blocks":[{"type":"rich_text","block_id":"VIDU0","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U9EDKCNBF"},{"type":"text","text":" for getting "},{"type":"link","url":"https://juliacon.org/2021/"},{"type":"text","text":" refactored using Franklin (and all of the other sites you have helped with)!"}]}]}]},{"client_msg_id":"2e9eccce-d14f-4471-8eea-98f38d21c482","type":"message","text":"`Optim.optimize(..., autodiff=:forward)` now that is a Feature with a capital F! So much going on under the hood, so simple to use, so efficient.","user":"UJ7DVTVQ8","ts":"1612467445.236100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oRu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"`Optim.optimize(..., autodiff=:forward)` now that is a Feature with a capital F! So much going on under the hood, so simple to use, so efficient."}]}]}],"reactions":[{"name":"science_parrot","users":["UGU761DU2","U9VG1AYSG","UGR3910CQ"],"count":3}]},{"client_msg_id":"dfe22de0-2846-483d-a1e7-f623f536663f","type":"message","text":"Finally finished the Exercism Julia track! Thanks a million to the mentors and contributors, I learned loads and it was a decent challenge to know more about different parts of Julia. Special shoutouts to <@UAUCGGD6C>, <@U6C5KSWAC> and <@UB7JS9CHF> who do great mentoring over there.","user":"U6QGE7S86","ts":"1612540088.240600","team":"T68168MUP","edited":{"user":"U6QGE7S86","ts":"1612540162.000000"},"blocks":[{"type":"rich_text","block_id":"WgpY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Finally finished the Exercism Julia track! Thanks a million to the mentors and contributors, I learned loads and it was a decent challenge to know more about different parts of Julia. Special shoutouts to "},{"type":"user","user_id":"UAUCGGD6C"},{"type":"text","text":", "},{"type":"user","user_id":"U6C5KSWAC"},{"type":"text","text":" and "},{"type":"user","user_id":"UB7JS9CHF"},{"type":"text","text":" who do great mentoring over there."}]}]}],"reactions":[{"name":"heart","users":["UGR3910CQ","UAUCGGD6C","U8T0YV7QC"],"count":3},{"name":"tada","users":["UAUCGGD6C","UBG5JAHS7","U01724Q3PGW","U6A936746","U8T0YV7QC","U67G3QRJM"],"count":6}]},{"type":"message","text":"","files":[{"id":"F01LQP18F7Z","created":1612540092,"timestamp":1612540092,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U6QGE7S86","editable":false,"size":54204,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01LQP18F7Z/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01LQP18F7Z/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01LQP18F7Z-bb01ffbedb/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01LQP18F7Z-bb01ffbedb/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01LQP18F7Z-bb01ffbedb/image_360.png","thumb_360_w":360,"thumb_360_h":205,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01LQP18F7Z-bb01ffbedb/image_480.png","thumb_480_w":480,"thumb_480_h":273,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01LQP18F7Z-bb01ffbedb/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01LQP18F7Z-bb01ffbedb/image_720.png","thumb_720_w":720,"thumb_720_h":410,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01LQP18F7Z-bb01ffbedb/image_800.png","thumb_800_w":800,"thumb_800_h":455,"original_w":909,"original_h":517,"thumb_tiny":"AwAbADBMx9PKXH1NH7r/AJ4p+ZqyLQgffH5UG0PTzB+VXoY2mVf3X/PFPzNH7r/nin5mrP2M/wB8flR9jP8AfH5UaBaZW/df88U/M0v7v/nin5mrH2M/3x+VH2M/3x+VGgWmWDu8zGRtx070+m7FMm7HOKd0qDVDRv3nONvancUUUDGru53Y/CncUUUAf//Z","permalink":"https://julialang.slack.com/files/U6QGE7S86/F01LQP18F7Z/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01LQP18F7Z-4987901567","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"U6QGE7S86","display_as_bot":false,"ts":"1612540095.240700"},{"client_msg_id":"bf933a38-4a45-4cb7-a0a4-aaa23bd159a4","type":"message","text":"<@U89GY9W1J> for a truly excellent bug report (and also for showing me how to use `Vararg{}` which I've never been able to figure out...) <https://github.com/JuliaStats/StatsModels.jl/issues/213>","user":"U66M57AN4","ts":"1612543599.243400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"axE","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U89GY9W1J"},{"type":"text","text":" for a truly excellent bug report (and also for showing me how to use "},{"type":"text","text":"Vararg{}","style":{"code":true}},{"type":"text","text":" which I've never been able to figure out...) "},{"type":"link","url":"https://github.com/JuliaStats/StatsModels.jl/issues/213"}]}]}],"reactions":[{"name":"heart","users":["U89GY9W1J","U67G3QRJM","U680THK2S"],"count":3},{"name":"+1","users":["U89GY9W1J"],"count":1},{"name":"relationalai","users":["ULDQSHD41"],"count":1}]},{"client_msg_id":"e1a4673d-9d9b-4d0b-94e3-4012f66e3c08","type":"message","text":"<@U695B1S2X> for FilePathsBase.  It's not very useful if you're only ever dealing with local file system paths, but as soon as you have to start dealing with remote stuff, it's absolutely wonderful.  A huge part of my job is fetching and stashing data, and being able to deal with stuff on an S3 bucket with the same code, and same `Base` file system interface as if it were just local is wonderful.  Also testing is way easier, because you can test code normally used for remote stuff with local stuff","user":"U9VG1AYSG","ts":"1612547843.246300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g3q","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U695B1S2X"},{"type":"text","text":" for FilePathsBase.  It's not very useful if you're only ever dealing with local file system paths, but as soon as you have to start dealing with remote stuff, it's absolutely wonderful.  A huge part of my job is fetching and stashing data, and being able to deal with stuff on an S3 bucket with the same code, and same "},{"type":"text","text":"Base","style":{"code":true}},{"type":"text","text":" file system interface as if it were just local is wonderful.  Also testing is way easier, because you can test code normally used for remote stuff with local stuff"}]}]}],"reactions":[{"name":"100","users":["U6A936746"],"count":1}]},{"client_msg_id":"b6a3fc5a-4454-4eb3-818a-1a1dd6cc8bdd","type":"message","text":"```julia&gt; using Revise\n\njulia&gt; Revise.track(Core.Compiler)```\n<@UC8821DPY> I still marvel at the fact that this works so well in practice","user":"U67BJLYCS","ts":"1612575754.249500","team":"T68168MUP","edited":{"user":"U67BJLYCS","ts":"1612576259.000000"},"blocks":[{"type":"rich_text","block_id":"mjj","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Revise\n\njulia> Revise.track(Core.Compiler)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"},{"type":"user","user_id":"UC8821DPY"},{"type":"text","text":" I still marvel at the fact that this works so well in practice"}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"f2c21e6a-7e34-41c1-b340-cb3b1465cdaa","type":"message","text":"Sometimes <@UDB26738Q> turns up in your PR. And  pushes a commit that fixes CI. And leaves. All without saying a word.\n:ninja: \n<https://github.com/JuliaMath/SpecialFunctions.jl/pull/300|https://github.com/JuliaMath/SpecialFunctions.jl/pull/300>","user":"U6A936746","ts":"1612651639.255100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ql5pN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sometimes "},{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" turns up in your PR. And  pushes a commit that fixes CI. And leaves. All without saying a word.\n"},{"type":"emoji","name":"ninja"},{"type":"text","text":" \n"},{"type":"link","url":"https://github.com/JuliaMath/SpecialFunctions.jl/pull/300","text":"https://github.com/JuliaMath/SpecialFunctions.jl/pull/300"}]}]}],"reactions":[{"name":"mose-mosaic","users":["UM30MT6RF"],"count":1},{"name":"heart","users":["UDB26738Q"],"count":1}]},{"type":"message","text":"<@UP3EZCERW> for making <https://github.com/jipolanco/PencilFFTs.jl|PencilFFTs.jl> so easy-to-use and keeping it well-documented!","files":[{"id":"F01M97YUDRQ","created":1612698895,"timestamp":1612698895,"name":"mpi_turbulence.mp4","title":"mpi_turbulence.mp4","mimetype":"video/mp4","filetype":"mp4","pretty_type":"MPEG 4 Video","user":"UEP056STX","editable":false,"size":37101753,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01M97YUDRQ/mpi_turbulence.mp4","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01M97YUDRQ/download/mpi_turbulence.mp4","thumb_video":"https://files.slack.com/files-tmb/T68168MUP-F01M97YUDRQ-2d306b3090/mpi_turbulence_thumb_video.jpeg","permalink":"https://julialang.slack.com/files/UEP056STX/F01M97YUDRQ/mpi_turbulence.mp4","permalink_public":"https://slack-files.com/T68168MUP-F01M97YUDRQ-d77266c693","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"HuO","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UP3EZCERW"},{"type":"text","text":" for making "},{"type":"link","url":"https://github.com/jipolanco/PencilFFTs.jl","text":"PencilFFTs.jl"},{"type":"text","text":" so easy-to-use and keeping it well-documented!"}]}]}],"user":"UEP056STX","display_as_bot":false,"ts":"1612698990.262100","thread_ts":"1612698990.262100","reply_count":1,"reply_users_count":1,"latest_reply":"1612699918.262700","reply_users":["U7PGB5DU3"],"subscribed":false,"reactions":[{"name":"star-struck","users":["UB197FRCL","U7PGB5DU3"],"count":2},{"name":"hypnotoad","users":["U7PGB5DU3"],"count":1}]},{"client_msg_id":"209984f7-9734-4c03-abec-47a90f96b826","type":"message","text":"props to Jeffrey Sarnoff for putting a \"set ext Rabbits\" function in ArbNumerics","user":"U01BHRKRJPQ","ts":"1612714265.266000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p62","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"props to Jeffrey Sarnoff for putting a \"set ext Rabbits\" function in ArbNumerics"}]}]}]},{"client_msg_id":"33fe3fcc-92dc-4137-92d4-12872f633473","type":"message","text":"`@NamedTuple{}` (<https://docs.julialang.org/en/v1/base/base/#Base.@NamedTuple>) is really nice syntax for creating NamedTuple types; I especially appreciate it for easily making vector-of-namedtuple row tables (e.g. initialize with `table = @NamedTuple{path::String, hash::UInt32, dir::String}[]`, then just `push!` namedtuples in). Thanks Steven G. Johnson!","user":"UCZ7VBGUD","ts":"1612721688.268500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vugXt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@NamedTuple{}","style":{"code":true}},{"type":"text","text":" ("},{"type":"link","url":"https://docs.julialang.org/en/v1/base/base/#Base.@NamedTuple"},{"type":"text","text":") is really nice syntax for creating NamedTuple types; I especially appreciate it for easily making vector-of-namedtuple row tables (e.g. initialize with "},{"type":"text","text":"table = @NamedTuple{path::String, hash::UInt32, dir::String}[]","style":{"code":true}},{"type":"text","text":", then just "},{"type":"text","text":"push!","style":{"code":true}},{"type":"text","text":" namedtuples in). Thanks Steven G. Johnson!"}]}]}]},{"client_msg_id":"1f9852a6-a572-478d-876c-831e841677ff","type":"message","text":"＠ma-laforge(creator of Plots's InspectDR backend, who doesn't seem to be on slack)\n\nFor responding to my request and implementing custom ticks, and fixing the ticks in Plots's InspectDR backend, fast!","user":"U01AJUF2GEP","ts":"1612802995.280100","team":"T68168MUP","edited":{"user":"U01AJUF2GEP","ts":"1612803125.000000"},"blocks":[{"type":"rich_text","block_id":"5Drc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"＠ma-laforge(creator of Plots's InspectDR backend, who doesn't seem to be on slack)\n\nFor responding to my request and implementing custom ticks, and fixing the ticks in Plots's InspectDR backend, fast!"}]}]}]},{"client_msg_id":"84ecabe8-a7ac-444d-857e-5455a3c97da8","type":"message","text":"The enthusiasm of <https://github.com/JuliaFolds/BangBang.jl>","user":"UDGT4PM41","ts":"1612835405.282000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wcN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The enthusiasm of "},{"type":"link","url":"https://github.com/JuliaFolds/BangBang.jl"}]}]}],"reactions":[{"name":"bangbang","users":["UDB26738Q","UDGT4PM41","U6A936746"],"count":3}]},{"client_msg_id":"3A0B4FC0-CDED-47B8-A33C-BF05811215CF","type":"message","text":"<@U8MPCDJAY> for his incredible persistence in getting the Pkg.jl tests to pass on GitHub Actions on Windows","user":"U7THT3TM3","ts":"1612932723.285900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4ga40","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8MPCDJAY"},{"type":"text","text":" for his incredible persistence in getting the Pkg.jl tests to pass on GitHub Actions on Windows"}]}]}],"thread_ts":"1612932723.285900","reply_count":1,"reply_users_count":1,"latest_reply":"1612933043.286000","reply_users":["U8MPCDJAY"],"subscribed":false},{"client_msg_id":"6fc49cec-a89e-4ade-9155-9fc2541d1d13","type":"message","text":"<@UK1BNFHFV> In general for tirelessly helping people with Makie and in particular for the resizing of CairoMakie SVG in VSCode julia plot pane. That was a most pleasant surprise.","user":"U017LQ3A59U","ts":"1612996496.291500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D6Vsl","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UK1BNFHFV"},{"type":"text","text":" In general for tirelessly helping people with Makie and in particular for the resizing of CairoMakie SVG in VSCode julia plot pane. That was a most pleasant surprise."}]}]}],"reactions":[{"name":"tada","users":["U7QLM6E2E","U6QGE7S86","U6A936746","UCZ7VBGUD","U680THK2S","U66SGEWAC","UH9KWTTD3","U7PGB5DU3","U7R243N1W","UNJ1EG11C"],"count":10},{"name":"100","users":["U66SGEWAC","UH9KWTTD3","U7R243N1W"],"count":3}]},{"client_msg_id":"2e47c1c6-6458-42a3-b2cc-77cfefc58495","type":"message","text":"<https://julialang.slack.com/archives/C674ELDNX/p1613019854422800?thread_ts=1613018811.422100&amp;cid=C674ELDNX|https://julialang.slack.com/archives/C674ELDNX/p1613019854422800?thread_ts=1613018811.422100&amp;cid=C674ELDNX>","user":"U67BJLYCS","ts":"1613021975.294400","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/C674ELDNX/p1613019854422800?thread_ts=1613018811.422100&amp;cid=C674ELDNX","fallback":"[February 10th, 2021 9:04 PM] omus: Woo, finally will have LibCURL_jll working natively for Apple Silicon: <https://github.com/JuliaPackaging/Yggdrasil/pull/2439>","ts":"1613019854.422800","author_id":"U679T6QF7","author_subname":"Curtis Vogt","channel_id":"C674ELDNX","channel_name":"binarybuilder","is_msg_unfurl":true,"is_reply_unfurl":true,"text":"Woo, finally will have LibCURL_jll working natively for Apple Silicon: <https://github.com/JuliaPackaging/Yggdrasil/pull/2439>","author_name":"Curtis Vogt","author_link":"https://julialang.slack.com/team/U679T6QF7","author_icon":"https://secure.gravatar.com/avatar/60415fb31a024b7ec4e87aa32e0605d1.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-48.png","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/C674ELDNX/p1613019854422800?thread_ts=1613018811.422100&amp;cid=C674ELDNX","footer":"From a thread in #binarybuilder"}],"blocks":[{"type":"rich_text","block_id":"+S+","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://julialang.slack.com/archives/C674ELDNX/p1613019854422800?thread_ts=1613018811.422100&cid=C674ELDNX","text":"https://julialang.slack.com/archives/C674ELDNX/p1613019854422800?thread_ts=1613018811.422100&cid=C674ELDNX"}]}]}]},{"client_msg_id":"499491d2-1db3-4ee5-bc00-06c66160d873","type":"message","text":"<@U679T6QF7> did some really nice detective work to get Clang 11 to work for Apple Silicon in Yggdrasil","user":"U67BJLYCS","ts":"1613022036.295900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q4jH","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U679T6QF7"},{"type":"text","text":" did some really nice detective work to get Clang 11 to work for Apple Silicon in Yggdrasil"}]}]}],"reactions":[{"name":"keyboard","users":["U68QW0PUZ"],"count":1}]},{"client_msg_id":"7bd5f7ae-5c58-4612-94f1-b53edc283f17","type":"message","text":"`JuliaMono` by <@U69EQD0CD> looks great on 1920x1080 in Windows Terminal, setting\n    `\"fontSize\": 19, \"fontWeight\": 300` or\n  `\"fontSize\": 20, \"fontWeight\": 200` (to taste)","user":"U68QW0PUZ","ts":"1613040393.302100","team":"T68168MUP","edited":{"user":"U68QW0PUZ","ts":"1613040430.000000"},"blocks":[{"type":"rich_text","block_id":"cUo+C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"JuliaMono","style":{"code":true}},{"type":"text","text":" by "},{"type":"user","user_id":"U69EQD0CD"},{"type":"text","text":" looks great on 1920x1080 in Windows Terminal, setting\n    "},{"type":"text","text":"\"fontSize\": 19, \"fontWeight\": 300","style":{"code":true}},{"type":"text","text":" or\n"},{"type":"text","text":"  \"fontSize\": 20, \"fontWeight\": 200","style":{"code":true}},{"type":"text","text":" (to taste)"}]}]}]},{"client_msg_id":"5292f9c0-f750-486e-80ab-a7e547ac316d","type":"message","text":"I'm really excited about <@U6BJ9E351> AlgebraOfGraphics.jl and the work planned for it. Definitely a package I'd like to learn and contribute to when I free up a bit of bandwidth after my dissertation!","user":"UM4TSHKF1","ts":"1613065022.310700","team":"T68168MUP","edited":{"user":"UM4TSHKF1","ts":"1613065773.000000"},"blocks":[{"type":"rich_text","block_id":"c=k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm really excited about "},{"type":"user","user_id":"U6BJ9E351"},{"type":"text","text":" AlgebraOfGraphics.jl and the work planned for it. Definitely a package I'd like to learn and contribute to when I free up a bit of bandwidth after my dissertation!"}]}]}],"reactions":[{"name":"heart","users":["U7PGB5DU3","UHDQQ4GN6"],"count":2}]},{"client_msg_id":"abd662ec-10a9-470c-9d5d-f8c49c8e8ea6","type":"message","text":"<@UMY1LV01G> for sniffing out so many close-able issues/PR on Flux","user":"UH9KWTTD3","ts":"1613080490.313600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fMv82","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UMY1LV01G"},{"type":"text","text":" for sniffing out so many close-able issues/PR on Flux"}]}]}]},{"client_msg_id":"94d1e2c8-1c1c-4e9c-b149-88f60322bbf7","type":"message","text":"<@UDB26738Q> for watching me struggle with CI and having all the right ideas","user":"U67BJLYCS","ts":"1613092493.315800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2pqM","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" for watching me struggle with CI and having all the right ideas"}]}]}],"reactions":[{"name":"heart","users":["U680THK2S","UDB26738Q","U7THT3TM3"],"count":3},{"name":"mose-mosaic","users":["U680THK2S","U66M57AN4","U7THT3TM3"],"count":3}]},{"client_msg_id":"6d8f644d-ae3b-4cf5-a8ec-9a7ef74d9a46","type":"message","text":"I love when we get async quality-of-life improvements (thanks <@U67BXBF99>) <https://github.com/JuliaLang/julia/pull/39518>","user":"U69J94HT9","ts":"1613101513.318700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dDD6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I love when we get async quality-of-life improvements (thanks "},{"type":"user","user_id":"U67BXBF99"},{"type":"text","text":") "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/39518"}]}]}]},{"client_msg_id":"4ffdcb15-42ec-4096-be1e-57f6a17ae411","type":"message","text":"During debugging in vscode, variable values are displayed when the mouse is hovering above the variable, awesome :)","user":"UJ7DVTVQ8","ts":"1613132430.326000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F7Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"During debugging in vscode, variable values are displayed when the mouse is hovering above the variable, awesome :)"}]}]}],"thread_ts":"1613132430.326000","reply_count":1,"reply_users_count":1,"latest_reply":"1613132515.326100","reply_users":["UJ7DVTVQ8"],"subscribed":false},{"client_msg_id":"af8cb987-3759-4960-aadf-d24c530d139b","type":"message","text":"The people at <https://github.com/JuliaData/Parsers.jl|Parsers.jl> for making easy to use parsing machinery in pure julia that’s way faster than vanilla julia parsing.","user":"U01ECBX4MB7","ts":"1613153672.328800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ehd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The people at "},{"type":"link","url":"https://github.com/JuliaData/Parsers.jl","text":"Parsers.jl"},{"type":"text","text":" for making easy to use parsing machinery in pure julia that’s way faster than vanilla julia parsing."}]}]}]},{"client_msg_id":"4a378ad4-b63b-4c7f-8eeb-10528672d4c2","type":"message","text":"What would we do without <@U6A936746>?","user":"UPUBAM63X","ts":"1613230256.332500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nvk1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What would we do without "},{"type":"user","user_id":"U6A936746"},{"type":"text","text":"?"}]}]}],"thread_ts":"1613230256.332500","reply_count":3,"reply_users_count":3,"latest_reply":"1613232450.334500","reply_users":["U6A936746","UB7JS9CHF","U69BL50BF"],"subscribed":false,"reactions":[{"name":"oxinabox","users":["UDB26738Q","UPUBAM63X","U6C5KSWAC","UM30MT6RF","UGU761DU2","U8MPCDJAY","UGR3910CQ","U681ELA87"],"count":8}]},{"client_msg_id":"f2a4440c-6ab3-498f-9a1f-a82b2b4b34ff","type":"message","text":"<@U8D9768Q6> for being eminently and frequently   helpful with questions spanning from esoteric to  beginner","user":"UDGT4PM41","ts":"1613351381.344400","team":"T68168MUP","edited":{"user":"UDGT4PM41","ts":"1613351426.000000"},"blocks":[{"type":"rich_text","block_id":"bbXE","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8D9768Q6"},{"type":"text","text":" for being eminently and frequently   helpful with questions spanning from esoteric to  beginner"}]}]}],"thread_ts":"1613351381.344400","reply_count":1,"reply_users_count":1,"latest_reply":"1613351930.345000","reply_users":["U8D9768Q6"],"subscribed":false,"reactions":[{"name":"100","users":["U6QGE7S86","U0179G7FG4F"],"count":2},{"name":"heart","users":["U8D9768Q6"],"count":1}]},{"client_msg_id":"4c31453e-ffe9-4fde-bfc1-0e68b040c1a4","type":"message","text":"everyone who worked on [MutableArithmetics](<https://github.com/jump-dev/MutableArithmetics.jl>) for letting me formulate absolutely gargantuan MILP's with JuMP in just a couple of seconds.  Meanwhile people are doing this in python with PuLP and it's taking them literally hours","user":"U9VG1AYSG","ts":"1613492563.353300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PuhZ0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"everyone who worked on [MutableArithmetics]("},{"type":"link","url":"https://github.com/jump-dev/MutableArithmetics.jl"},{"type":"text","text":") for letting me formulate absolutely gargantuan MILP's with JuMP in just a couple of seconds.  Meanwhile people are doing this in python with PuLP and it's taking them literally hours"}]}]}],"thread_ts":"1613492563.353300","reply_count":2,"reply_users_count":2,"latest_reply":"1613492719.354000","reply_users":["UBVE598BC","U9VG1AYSG"],"subscribed":false},{"client_msg_id":"616f5ba9-bab5-414d-ad28-f58d393c3618","type":"message","text":"(and yes, MutableArithmetics really does seem like it was a lot of work)","user":"U9VG1AYSG","ts":"1613492628.353700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d6G6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and yes, MutableArithmetics really does seem like it was a lot of work)"}]}]}]},{"client_msg_id":"95db2bd9-19ad-4a71-b630-4b43d4e06ff9","type":"message","text":"Appreciating <@UUTL3EKN3> for this Pluto webpage that is magically alive <https://computationalthinking.mit.edu/Spring21/week1/>","user":"U68907M46","ts":"1613556019.363500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e7+U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Appreciating "},{"type":"user","user_id":"UUTL3EKN3"},{"type":"text","text":" for this Pluto webpage that is magically alive "},{"type":"link","url":"https://computationalthinking.mit.edu/Spring21/week1/"}]}]}],"reactions":[{"name":"balloon","users":["UDB26738Q"],"count":1}]},{"client_msg_id":"5E150562-887A-4A74-9E2D-9D7D9B401767","type":"message","text":"<@U6NFPDBV1> for the wonderful BrokenRecord.jl","user":"U7THT3TM3","ts":"1613581253.367500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TeeD","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6NFPDBV1"},{"type":"text","text":" for the wonderful BrokenRecord.jl"}]}]}],"thread_ts":"1613581253.367500","reply_count":1,"reply_users_count":1,"latest_reply":"1613581261.367800","reply_users":["U7THT3TM3"],"subscribed":false,"reactions":[{"name":"heart","users":["U6NFPDBV1","U6QGE7S86","UGR3910CQ"],"count":3},{"name":"vhs","users":["U9VG1AYSG","U6QGE7S86","UGR3910CQ"],"count":3}]},{"client_msg_id":"7DBADD0A-47BD-4FB9-A75C-60C30A9784B8","type":"message","text":"Meta appreciation for <#C6FGJ8REC|appreciation> without which I would not learn about all these cool packages!","user":"U6795JH6H","ts":"1613581919.369900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kxyxB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Meta appreciation for "},{"type":"channel","channel_id":"C6FGJ8REC"},{"type":"text","text":" without which I would not learn about all these cool packages!"}]}]}],"reactions":[{"name":"+1","users":["U6A936746","UGU761DU2","ULDQSHD41","U9VG1AYSG","U0179G7FG4F","U7THT3TM3","U69J94HT9","ULUC3K6M6","UGR3910CQ"],"count":9},{"name":"meta","users":["ULDQSHD41","U7THT3TM3","ULUC3K6M6","UGR3910CQ"],"count":4}]},{"client_msg_id":"00000224-dc6d-4f21-b860-a1f8007a9e81","type":"message","text":"<@U6BQL000Z> for Genie and co. How do people have the time, dedication, and expertise to build such excellent infrastructure...?! Amazing. Thank you!!!","user":"U7PGB5DU3","ts":"1613650620.385500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cW9","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6BQL000Z"},{"type":"text","text":" for Genie and co. How do people have the time, dedication, and expertise to build such excellent infrastructure...?! Amazing. Thank you!!!"}]}]}]},{"client_msg_id":"44455823-4d19-4fff-b9b2-591eca01c7b1","type":"message","text":"Thanks <@U8D9768Q6> for acts of high treason (<https://github.com/andyferris/Traitor.jl/pull/10>)","user":"U66QZ3QF3","ts":"1613695724.388200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9pfV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks "},{"type":"user","user_id":"U8D9768Q6"},{"type":"text","text":" for acts of high treason ("},{"type":"link","url":"https://github.com/andyferris/Traitor.jl/pull/10"},{"type":"text","text":")"}]}]}],"thread_ts":"1613695724.388200","reply_count":2,"reply_users_count":2,"latest_reply":"1613697554.388800","reply_users":["U6QGE7S86","U66QZ3QF3"],"subscribed":false,"reactions":[{"name":"grin","users":["U8D9768Q6"],"count":1},{"name":"100","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"9bad9dfc-6824-4281-95a5-c96255a1c035","type":"message","text":"Appreciation for <@UH1BLK14H>’s work on <https://github.com/JuliaLang/julia/pull/38905> - I just learned about it a few days ago here on Slack, and since then I've found multiple places where this seemingly small compiler optimization will make my code noticably more efficient. For example, I just now struggled with making a `FilterMap` iterator that can gain some efficiency over filter + map by fusing the operations, but it turns out if that PR is merged, the chaining the lazy filter and map from `Iterators` lead to optimal codegen. So I just scrapped that work and wait for the PR to come through. :+1:","user":"U7HAYKY9X","ts":"1613722266.392900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lBOI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Appreciation for "},{"type":"user","user_id":"UH1BLK14H"},{"type":"text","text":"’s work on "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/38905"},{"type":"text","text":" - I just learned about it a few days ago here on Slack, and since then I've found multiple places where this seemingly small compiler optimization will make my code noticably more efficient. For example, I just now struggled with making a "},{"type":"text","text":"FilterMap","style":{"code":true}},{"type":"text","text":" iterator that can gain some efficiency over filter + map by fusing the operations, but it turns out if that PR is merged, the chaining the lazy filter and map from "},{"type":"text","text":"Iterators","style":{"code":true}},{"type":"text","text":" lead to optimal codegen. So I just scrapped that work and wait for the PR to come through. "},{"type":"emoji","name":"+1"}]}]}]},{"client_msg_id":"16c19dde-086d-41cd-9585-c7698cf48634","type":"message","text":"KernelAbstractions (and the GPU code generation infrastructure in general). I don't really have a good grasp of the limitations yet, but it's impressive how much regular julia code can be used in a `KernelAbstractions.@kernel`  (the fact that one can pass in lazy iterators is what prompted this appreciation)","user":"U6BJ9E351","ts":"1613727122.395700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RRf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"KernelAbstractions (and the GPU code generation infrastructure in general). I don't really have a good grasp of the limitations yet, but it's impressive how much regular julia code can be used in a "},{"type":"text","text":"KernelAbstractions.@kernel","style":{"code":true}},{"type":"text","text":"  (the fact that one can pass in lazy iterators is what prompted this appreciation)"}]}]}]},{"client_msg_id":"cf698dcd-ba8f-44db-8748-636f9f9df375","type":"message","text":"Thanks to <@U010XUS4MT7> for FluxTraining.jl and DataLoaders.jl. Helps eliminate lots of boilerplate and makes Flux so pleasant and fun to work with.","user":"UGQRDMRCG","ts":"1613728090.396700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Emm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks to "},{"type":"user","user_id":"U010XUS4MT7"},{"type":"text","text":" for FluxTraining.jl and DataLoaders.jl. Helps eliminate lots of boilerplate and makes Flux so pleasant and fun to work with."}]}]}]},{"client_msg_id":"315ff1b7-ce66-423a-82ef-6e2958e4b8cc","type":"message","text":"<@UD0NS8PDF> KeyedArrays are such a thing of beauty.\nI am deleting so much\n```foo_inds = findall(in(the_index), bars)\nbar_data = data[foo_inds]```\nand replacing it with just:\n```bar_data = data(foo=bars)```\n","user":"U6A936746","ts":"1613749998.401100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QZF","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UD0NS8PDF"},{"type":"text","text":" KeyedArrays are such a thing of beauty.\nI am deleting so much\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"foo_inds = findall(in(the_index), bars)\nbar_data = data[foo_inds]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and replacing it with just:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bar_data = data(foo=bars)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613749998.401100","reply_count":4,"reply_users_count":3,"latest_reply":"1613751137.402800","reply_users":["UBF9YRB6H","U7PGB5DU3","U6A936746"],"subscribed":false,"reactions":[{"name":"heavy_check_mark","users":["UBF9YRB6H","UGR3910CQ","U695B1S2X"],"count":3}]},{"client_msg_id":"36fa394f-4e15-4272-a540-f06962bc9501","type":"message","text":"Julia is a gateway drug to machine assembly. A year after starting to work with Julia, I've now got IDA (Interactive Disassembler) open looking through a DLL. After occasionally using `@code_native` , this doesn't seem so hard...","user":"USU9FRPEU","ts":"1613753524.404100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fPE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia is a gateway drug to machine assembly. A year after starting to work with Julia, I've now got IDA (Interactive Disassembler) open looking through a DLL. After occasionally using "},{"type":"text","text":"@code_native","style":{"code":true}},{"type":"text","text":" , this doesn't seem so hard..."}]}]}],"reactions":[{"name":"heart","users":["U687RKK0E"],"count":1}]},{"client_msg_id":"be4a7c50-7088-41ff-a743-4af90ee881a8","type":"message","text":"You could have stopped with “Julia is a gateway drug” :rolling_on_the_floor_laughing:\n(Scheme, back in the day, was that for me, exposing me to a ton of concepts that weren’t a part of other languages, such as closures, recursion, metaprogramming, etc.)","user":"UB7JS9CHF","ts":"1613783871.004600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7L+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could have stopped with “Julia is a gateway drug” "},{"type":"emoji","name":"rolling_on_the_floor_laughing"},{"type":"text","text":"\n(Scheme, back in the day, was that for me, exposing me to a ton of concepts that weren’t a part of other languages, such as closures, recursion, metaprogramming, etc.)"}]}]}]},{"client_msg_id":"05354cc3-be8f-4768-8cb8-fef2e02f5703","type":"message","text":"I already did this on discourse but I feel the need to do it again cause my mind is just blown away. Live updating the learned decision boundary of a neural network in Makie:\n```modeltrace = Node(m)\ndecisionboundary!(axis, m)\n\n# whenever I want an updated boundary\nmodeltrace[] = m```\nAnd it all works adding a simple `@lift` to my previously static `decisionboundary!` plotting function! Makie is so seriously cool. Thanks <@U66SGEWAC> <@UK1BNFHFV> <@UFSU69PGR> and everyone working on Makie!","user":"UH9KWTTD3","ts":"1613786424.008500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dgzQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I already did this on discourse but I feel the need to do it again cause my mind is just blown away. Live updating the learned decision boundary of a neural network in Makie:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"modeltrace = Node(m)\ndecisionboundary!(axis, m)\n\n# whenever I want an updated boundary\nmodeltrace[] = m"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"And it all works adding a simple "},{"type":"text","text":"@lift","style":{"code":true}},{"type":"text","text":" to my previously static "},{"type":"text","text":"decisionboundary!","style":{"code":true}},{"type":"text","text":" plotting function! Makie is so seriously cool. Thanks "},{"type":"user","user_id":"U66SGEWAC"},{"type":"text","text":" "},{"type":"user","user_id":"UK1BNFHFV"},{"type":"text","text":" "},{"type":"user","user_id":"UFSU69PGR"},{"type":"text","text":" and everyone working on Makie!"}]}]}],"reactions":[{"name":"heart","users":["UGR3910CQ"],"count":1},{"name":"tada","users":["UGR3910CQ"],"count":1}]},{"client_msg_id":"60dc71aa-085c-43d3-8a85-773416326e9e","type":"message","text":"I appreciate that this works: <https://computationalthinking.mit.edu/Spring21/abstraction/>","user":"U01CQTKB86N","ts":"1613850195.014800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2iH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I appreciate that this works: "},{"type":"link","url":"https://computationalthinking.mit.edu/Spring21/abstraction/"}]}]}],"thread_ts":"1613850195.014800","reply_count":1,"reply_users_count":1,"latest_reply":"1613850339.015300","reply_users":["UGR3910CQ"],"subscribed":false,"reactions":[{"name":"heart","users":["UGR3910CQ"],"count":1},{"name":"+1","users":["U6A936746"],"count":1},{"name":"franklin","users":["UHDQQ4GN6"],"count":1},{"name":"pluto","users":["UHDQQ4GN6"],"count":1}]},{"client_msg_id":"05eb575d-ad19-44f1-9323-46d3d81f0692","type":"message","text":"<@UC8821DPY> for always being <https://github.com/JuliaDebug/JuliaInterpreter.jl/pull/467|welcoming and helpful>, particularly in very complex codebases that encourages more amazing contributions. It can <https://twitter.com/kdwkshh/status/1363458777454956547?s=20|really make someone's day> :relaxed: .","user":"U681ELA87","ts":"1613923656.021900","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/kdwkshh|@kdwkshh>: 昨日自分が参加してるOSSについて、早とちりしてバカなPRを作ったものの、全く理解が足りてなくて、他のメンテナから指摘をもらって早々にそのPRをcloseしたっていうことがあって、恥ずかしいなって思ってたんだけど、後から「心配ない、自分もこれで迷ったことある」みたいなfollow upをもらって","ts":1613908879,"author_name":"Shuhei Kadowaki","author_link":"https://twitter.com/kdwkshh/status/1363458777454956547","author_icon":"https://pbs.twimg.com/profile_images/1198268126942482432/K96_6cWt_normal.jpg","author_subname":"@kdwkshh","text":"昨日自分が参加してるOSSについて、早とちりしてバカなPRを作ったものの、全く理解が足りてなくて、他のメンテナから指摘をもらって早々にそのPRをcloseしたっていうことがあって、恥ずかしいなって思ってたんだけど、後から「心配ない、自分もこれで迷ったことある」みたいなfollow upをもらって","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/kdwkshh/status/1363458777454956547?s=20","id":1,"original_url":"https://twitter.com/kdwkshh/status/1363458777454956547?s=20","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"xna","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UC8821DPY"},{"type":"text","text":" for always being "},{"type":"link","url":"https://github.com/JuliaDebug/JuliaInterpreter.jl/pull/467","text":"welcoming and helpful"},{"type":"text","text":", particularly in very complex codebases that encourages more amazing contributions. It can "},{"type":"link","url":"https://twitter.com/kdwkshh/status/1363458777454956547?s=20","text":"really make someone's day"},{"type":"text","text":" "},{"type":"emoji","name":"relaxed"},{"type":"text","text":" ."}]}]}],"reactions":[{"name":"timholy","users":["UDB26738Q","U681ELA87","U8JAMQGQY","UCZ7VBGUD","UM30MT6RF","UGR3910CQ"],"count":6},{"name":"heart","users":["UCZ7VBGUD","UM30MT6RF","UGR3910CQ"],"count":3}]},{"type":"message","subtype":"thread_broadcast","text":"&gt; Is there a cogent summary of advantages/disadvantages anywhere?\nI asked exactly for that <https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc|on discourse> a couple days ago... It's been about a year since <https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253|the last post on the status of xarray-like packages>, so it would be timely — and very appreciated IMHO — to get an update soon (from knowledgable peeps preferably)!","user":"UB197FRCL","ts":"1613952005.026800","thread_ts":"1613749998.401100","root":{"client_msg_id":"315ff1b7-ce66-423a-82ef-6e2958e4b8cc","type":"message","text":"<@UD0NS8PDF> KeyedArrays are such a thing of beauty.\nI am deleting so much\n```foo_inds = findall(in(the_index), bars)\nbar_data = data[foo_inds]```\nand replacing it with just:\n```bar_data = data(foo=bars)```\n","user":"U6A936746","ts":"1613749998.401100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QZF","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UD0NS8PDF"},{"type":"text","text":" KeyedArrays are such a thing of beauty.\nI am deleting so much\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"foo_inds = findall(in(the_index), bars)\nbar_data = data[foo_inds]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and replacing it with just:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bar_data = data(foo=bars)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613749998.401100","reply_count":20,"reply_users_count":8,"latest_reply":"1613952005.026800","reply_users":["UBF9YRB6H","U7PGB5DU3","U6A936746","U9L5Y89H7","U8JP5B9T2","UD0NS8PDF","UHDQQ4GN6","UB197FRCL"],"subscribed":false},"attachments":[{"service_name":"JuliaLang","title":"Converting between AxisArray like packages?","title_link":"https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc","text":"FWIW, I think it would be timely for the main AxisArray-like-package devs to re-address the state of the ecosystem. This could be done, IMHO: by directly digging up and updating the The fate of DimensionalArrays / AxisArrays in Julia, and which to actually use discussion, by writing up a short blog entry that could serve as a reference, or maybe by having a little write-up in the docs of AxisArrayConversion.jl. To give context to this comment, I recently tried to answer a related question on...","fallback":"JuliaLang: Converting between AxisArray like packages?","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1613706634,"from_url":"https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc"},{"service_name":"JuliaLang","title":"The fate of DimensionalArrays / AxisArrays in Julia, and which to actually use","title_link":"https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253","text":"I wasn’t sure whether I should open this at “Domains” or “Community”, given how many different areas it touches So, as far as I can tell, at the moment the story of using array data coupled with information about dimensions is not at all settled in Julia, as is evident from the existence of numerous in-use or under-development collections like e.g. AxisArrays, AxisArraysFuture, NamedDims.jl, DimensionalData.jl (and its derivatives), NamedArrays.jl to name a few (there are probably more, and I’l...","fallback":"JuliaLang: The fate of DimensionalArrays / AxisArrays in Julia, and which to actually use","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"2 mins :clock2:","short":true},{"title":"Likes","value":"13 :heart:","short":true}],"ts":1578786760,"from_url":"https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":2,"original_url":"https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253"}],"blocks":[{"type":"rich_text","block_id":"0ErA3","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Is there a cogent summary of advantages/disadvantages anywhere?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I asked exactly for that "},{"type":"link","url":"https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc","text":"on discourse"},{"type":"text","text":" a couple days ago... It's been about a year since "},{"type":"link","url":"https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253","text":"the last post on the status of xarray-like packages"},{"type":"text","text":", so it would be timely — and very appreciated IMHO — to get an update soon (from knowledgable peeps preferably)!"}]}]}],"client_msg_id":"f8a2ddb7-36e2-4991-ac64-ab4df76e82b6"},{"client_msg_id":"12bd1bda-1e59-41cc-9ac7-6bd568bb68ba","type":"message","text":"PyCall: I don't know who is involved the most probably <@UBTLBECD7> &amp; <@UC7AF7NSU> based on GitHub.\nIt just feels unreal :magicwand:","user":"U7K185TUN","ts":"1614102461.030900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/cr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"PyCall: I don't know who is involved the most probably "},{"type":"user","user_id":"UBTLBECD7"},{"type":"text","text":" & "},{"type":"user","user_id":"UC7AF7NSU"},{"type":"text","text":" based on GitHub.\nIt just feels unreal "},{"type":"emoji","name":"magicwand"}]}]}],"reactions":[{"name":"party_wizard","users":["US64J0NPQ"],"count":1}]},{"client_msg_id":"425394f4-ad98-46aa-bc0a-42e3304eddcc","type":"message","text":"even better, the Julia ecosystem is so thriving that I haven't had to use PyCall for anything in years (though I agree it's a really good package)","user":"U9VG1AYSG","ts":"1614103772.031600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cs8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"even better, the Julia ecosystem is so thriving that I haven't had to use PyCall for anything in years (though I agree it's a really good package)"}]}]}],"reactions":[{"name":"juliagrower","users":["ULDQSHD41","U0179G7FG4F","U6A936746"],"count":3}]},{"type":"message","subtype":"thread_broadcast","text":"I only tweaked things a bit. The core is by stevengj. And I'd guess yuyichao did some tricky magic there too.","user":"UC7AF7NSU","ts":"1614107739.033900","thread_ts":"1614102461.030900","root":{"client_msg_id":"12bd1bda-1e59-41cc-9ac7-6bd568bb68ba","type":"message","text":"PyCall: I don't know who is involved the most probably <@UBTLBECD7> &amp; <@UC7AF7NSU> based on GitHub.\nIt just feels unreal :magicwand:","user":"U7K185TUN","ts":"1614102461.030900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/cr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"PyCall: I don't know who is involved the most probably "},{"type":"user","user_id":"UBTLBECD7"},{"type":"text","text":" & "},{"type":"user","user_id":"UC7AF7NSU"},{"type":"text","text":" based on GitHub.\nIt just feels unreal "},{"type":"emoji","name":"magicwand"}]}]}],"thread_ts":"1614102461.030900","reply_count":2,"reply_users_count":2,"latest_reply":"1614107739.033900","reply_users":["U6795JH6H","UC7AF7NSU"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"cCrG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I only tweaked things a bit. The core is by stevengj. And I'd guess yuyichao did some tricky magic there too."}]}]}],"client_msg_id":"60e572d7-b8ab-4070-850f-dd3ca343ce6d","reactions":[{"name":"+1","users":["U7K185TUN","UM30MT6RF","UGU761DU2","UKG4WF8PJ","U67G3QRJM","U881D0W2C"],"count":6}]},{"client_msg_id":"a7950ce3-0ce9-4aa8-9941-26d69f66da7c","type":"message","text":"Multiple dispatch. Sometimes I get a little dumbfounded at how trivial it makes writing something.","user":"UH9KWTTD3","ts":"1614285808.040800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rwREn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Multiple dispatch. Sometimes I get a little dumbfounded at how trivial it makes writing something."}]}]}],"reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","U9VG1AYSG","U7K185TUN"],"count":3},{"name":"100","users":["U6A936746","U01HD5VFXJM","U9VG1AYSG","U7K185TUN"],"count":4},{"name":"1000","users":["U881D0W2C"],"count":1}]},{"client_msg_id":"2a9bb6ba-fb87-468c-85f4-c7fe795f2760","type":"message","text":"<https://github.com/chriselrod/LoopVectorization.jl/issues/201> Thank <@UAUPJLBQX> (author of LoopVectorization) for helping  me implementing a tropical `gemm` . I appreciate his endless patient. His packages LoopVectorization and Octavian are super fast and well tested.","user":"UCD4Z3NJZ","ts":"1614295205.043400","team":"T68168MUP","edited":{"user":"UCD4Z3NJZ","ts":"1614295266.000000"},"blocks":[{"type":"rich_text","block_id":"KMqB","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/chriselrod/LoopVectorization.jl/issues/201"},{"type":"text","text":" Thank "},{"type":"user","user_id":"UAUPJLBQX"},{"type":"text","text":" (author of LoopVectorization) for helping  me implementing a tropical "},{"type":"text","text":"gemm","style":{"code":true}},{"type":"text","text":" . I appreciate his endless patient. His packages LoopVectorization and Octavian are super fast and well tested."}]}]}],"reactions":[{"name":"100","users":["UH8A351DJ","U7THT3TM3","U0179G7FG4F","U69BK8S74"],"count":4},{"name":"heart","users":["UAUPJLBQX","UCZ7VBGUD"],"count":2}]},{"client_msg_id":"061af08a-4603-4bdf-8611-6fa3270bdc2a","type":"message","text":"Thanks also to <@U66GD0880>, <@U67461GUB>, <@U679T6QF7>, <@UDB26738Q>, <@U67431ELR>, <@U67D54KS8>, <@U68P09RFZ> and <@U67SCG4HG> for bringing the future of numerical linear algebra one crucial step closer!\n<https://github.com/JuliaLang/julia/pull/39455>","user":"U6G4M02N4","ts":"1614332024.050000","team":"T68168MUP","edited":{"user":"U6G4M02N4","ts":"1614332604.000000"},"blocks":[{"type":"rich_text","block_id":"mWVP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks also to "},{"type":"user","user_id":"U66GD0880"},{"type":"text","text":", "},{"type":"user","user_id":"U67461GUB"},{"type":"text","text":", "},{"type":"user","user_id":"U679T6QF7"},{"type":"text","text":", "},{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":", "},{"type":"user","user_id":"U67431ELR"},{"type":"text","text":", "},{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":", "},{"type":"user","user_id":"U68P09RFZ"},{"type":"text","text":" and "},{"type":"user","user_id":"U67SCG4HG"},{"type":"text","text":" for bringing the future of numerical linear algebra one crucial step closer!\n"},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/39455"}]}]}],"reactions":[{"name":"tada","users":["U6A936746","U6G4M02N4","UCZ7VBGUD","UAUPJLBQX"],"count":4},{"name":"julia-bounces-gravity","users":["U6A936746"],"count":1}]},{"client_msg_id":"4e4de803-e01b-4618-9604-8810abd2b7a9","type":"message","text":"<@U681ELA87> for re-architecting plumbing in the Julia datasphere that I’ll never understand in order to add my pet feature request. Thanks to his hard work, JSON3.jl (via Strapping.jl) now supports importing of nested JSON structures in the manner of Panda’s `pd.json_normalize()` and is faster than Python to boot!","user":"ULY5YL9F1","ts":"1614378259.056800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fv7S","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U681ELA87"},{"type":"text","text":" for re-architecting plumbing in the Julia datasphere that I’ll never understand in order to add my pet feature request. Thanks to his hard work, JSON3.jl (via Strapping.jl) now supports importing of nested JSON structures in the manner of Panda’s "},{"type":"text","text":"pd.json_normalize()","style":{"code":true}},{"type":"text","text":" and is faster than Python to boot!"}]}]}],"reactions":[{"name":"quinnj","users":["U7THT3TM3","U6A936746","U9YTNSWCA","UDXST8ARK","UCAFZ51L3","U9VG1AYSG","UGR3910CQ","U687RKK0E"],"count":8}]},{"type":"message","subtype":"thread_broadcast","text":"Ok, let's nerd out for a second, not only does all the functionality give a faster equivalent as `pd.json_normalize`, but it:\n• Works generically on any nesting `AbstractDict` (including `JSON3.Object`) _or_ custom Julia struct that has `StructTypes.Struct` or `StructTypes.Mutable` defined\n• If the object (AbstractDict or struct) has a `StructTypes.ArrayType` field (like any `AbstractArray` or `JSON3.Array`), `Strapping.deconstruct` will also \"unroll\" the collection field, one row per collection element, automatically repeating non-collection fields (this is a typical database normalization feature)\n• The normalized data can be materialized by _any_ Tables.jl-compatible sink; not just `DataFrame`. You could send the data to any compatible database, file format (arrow, csv, etc.), or in-memory table (DataFrame, TypedTable, JuliaDB.Table, etc.).\nAnd yes, it took some refactoring of several packages involved, but it was all accomplished in a couple of days by one developer. I just think exercises like this are such a huge selling point of ecosystem development for Julia.","user":"U681ELA87","ts":"1614381621.057800","thread_ts":"1614378259.056800","root":{"client_msg_id":"4e4de803-e01b-4618-9604-8810abd2b7a9","type":"message","text":"<@U681ELA87> for re-architecting plumbing in the Julia datasphere that I’ll never understand in order to add my pet feature request. Thanks to his hard work, JSON3.jl (via Strapping.jl) now supports importing of nested JSON structures in the manner of Panda’s `pd.json_normalize()` and is faster than Python to boot!","user":"ULY5YL9F1","ts":"1614378259.056800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fv7S","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U681ELA87"},{"type":"text","text":" for re-architecting plumbing in the Julia datasphere that I’ll never understand in order to add my pet feature request. Thanks to his hard work, JSON3.jl (via Strapping.jl) now supports importing of nested JSON structures in the manner of Panda’s "},{"type":"text","text":"pd.json_normalize()","style":{"code":true}},{"type":"text","text":" and is faster than Python to boot!"}]}]}],"thread_ts":"1614378259.056800","reply_count":1,"reply_users_count":1,"latest_reply":"1614381621.057800","reply_users":["U681ELA87"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"bDr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, let's nerd out for a second, not only does all the functionality give a faster equivalent as "},{"type":"text","text":"pd.json_normalize","style":{"code":true}},{"type":"text","text":", but it:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Works generically on any nesting "},{"type":"text","text":"AbstractDict","style":{"code":true}},{"type":"text","text":" (including "},{"type":"text","text":"JSON3.Object","style":{"code":true}},{"type":"text","text":") "},{"type":"text","text":"or","style":{"italic":true}},{"type":"text","text":" custom Julia struct that has "},{"type":"text","text":"StructTypes.Struct","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"StructTypes.Mutable","style":{"code":true}},{"type":"text","text":" defined"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"If the object (AbstractDict or struct) has a "},{"type":"text","text":"StructTypes.ArrayType","style":{"code":true}},{"type":"text","text":" field (like any "},{"type":"text","text":"AbstractArray","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"JSON3.Array","style":{"code":true}},{"type":"text","text":"), "},{"type":"text","text":"Strapping.deconstruct","style":{"code":true}},{"type":"text","text":" will also \"unroll\" the collection field, one row per collection element, automatically repeating non-collection fields (this is a typical database normalization feature)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The normalized data can be materialized by "},{"type":"text","text":"any","style":{"italic":true}},{"type":"text","text":" Tables.jl-compatible sink; not just "},{"type":"text","text":"DataFrame","style":{"code":true}},{"type":"text","text":". You could send the data to any compatible database, file format (arrow, csv, etc.), or in-memory table (DataFrame, TypedTable, JuliaDB.Table, etc.)."}]}],"style":"bullet","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAnd yes, it took some refactoring of several packages involved, but it was all accomplished in a couple of days by one developer. I just think exercises like this are such a huge selling point of ecosystem development for Julia."}]}]}],"client_msg_id":"14a580c2-b02c-48f8-8b54-6d682c345faf","reactions":[{"name":"heart","users":["U6A936746","ULY5YL9F1","U01HD5VFXJM","UDXST8ARK","U017J1FHTSA","U6C5KSWAC","UM30MT6RF","U01724Q3PGW"],"count":8}]},{"type":"message","text":"i randomly tried this syntax and it actually works :purple_heart:","files":[{"id":"F01PDFBBDKQ","created":1614421307,"timestamp":1614421307,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UUTL3EKN3","editable":false,"size":273032,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01PDFBBDKQ/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01PDFBBDKQ/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01PDFBBDKQ-f7d981557b/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01PDFBBDKQ-f7d981557b/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01PDFBBDKQ-f7d981557b/image_360.png","thumb_360_w":360,"thumb_360_h":193,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01PDFBBDKQ-f7d981557b/image_480.png","thumb_480_w":480,"thumb_480_h":257,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01PDFBBDKQ-f7d981557b/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01PDFBBDKQ-f7d981557b/image_720.png","thumb_720_w":720,"thumb_720_h":386,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01PDFBBDKQ-f7d981557b/image_800.png","thumb_800_w":800,"thumb_800_h":428,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01PDFBBDKQ-f7d981557b/image_960.png","thumb_960_w":960,"thumb_960_h":514,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01PDFBBDKQ-f7d981557b/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":548,"original_w":1128,"original_h":604,"thumb_tiny":"AwAZADDSP1oB/wA5pr8DOOaYCTzkZ+lAEuaM+9RjkkZH5U4DjoDQA7NGaAB6ClwB2FADTRmnUUAJk+lGTjpS0UAJ+FGT6UtFAH//2Q==","permalink":"https://julialang.slack.com/files/UUTL3EKN3/F01PDFBBDKQ/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01PDFBBDKQ-1a012aa7f1","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"eC4iO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i randomly tried this syntax and it actually works "},{"type":"emoji","name":"purple_heart"}]}]}],"user":"UUTL3EKN3","display_as_bot":false,"ts":"1614421432.062800","thread_ts":"1614421432.062800","reply_count":3,"reply_users_count":3,"latest_reply":"1614422897.063700","reply_users":["UUTL3EKN3","U6N6VQE30","UH24GRBLL"],"subscribed":false,"reactions":[{"name":"ok_hand","users":["U6N6VQE30","UCZ7VBGUD"],"count":2},{"name":"party_corgi","users":["U01CQTKB86N"],"count":1}]},{"client_msg_id":"49442389-a462-4e43-85bb-a6cd443e7b3e","type":"message","text":"I did a job interview task over the weekend. Did it in R because that's what I have been using in my job for the past 4 years and I'm just a lot more fluent in it right now. The second task was a nice little one about simulating some computing resource requirement, based on log data and some rules for when resources got allocated. I thought \"I'll just write it in R because I'm working in it right now. The runtime doesn't matter and it can't be THAT slow, right?\" It ran half the night – when I rewrote it in Julia the next day it took like 3 seconds","user":"U7EF5AWHW","ts":"1614787558.072500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9DlG5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I did a job interview task over the weekend. Did it in R because that's what I have been using in my job for the past 4 years and I'm just a lot more fluent in it right now. The second task was a nice little one about simulating some computing resource requirement, based on log data and some rules for when resources got allocated. I thought \"I'll just write it in R because I'm working in it right now. The runtime doesn't matter and it can't be THAT slow, right?\" It ran half the night – when I rewrote it in Julia the next day it took like 3 seconds"}]}]}],"thread_ts":"1614787558.072500","reply_count":8,"reply_users_count":3,"latest_reply":"1614788712.074700","reply_users":["U6QGE7S86","U7EF5AWHW","U0179G7FG4F"],"subscribed":false,"reactions":[{"name":"+1::skin-tone-5","users":["U6QGE7S86"],"count":1},{"name":"fast_parrot","users":["U6740K1SP","U8T0YV7QC"],"count":2}]},{"client_msg_id":"9578690e-50a3-48b5-a9b5-138623bca1a1","type":"message","text":"Cthulhu.jl :heart:","user":"U69LK3CRJ","ts":"1614791819.076000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OoqRB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cthulhu.jl "},{"type":"emoji","name":"heart"}]}]}],"reactions":[{"name":"julia-cthulhu","users":["UM30MT6RF","UDB26738Q","UGR3910CQ","U6QGE7S86","U6BNE7LTZ"],"count":5}]},{"type":"message","text":"Me: \"running shell commands in julia is really great, it would be nice to be able to split them over multiple lines. Probably should just be able to use newlines with 3 backticks... maybe I'll open an issue\"\n\n```&lt;goes to see what current result is&gt;```\n","files":[{"id":"F01Q7948DFV","created":1614879230,"timestamp":1614879230,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U8JP5B9T2","editable":false,"size":6271,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01Q7948DFV/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01Q7948DFV/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01Q7948DFV-952f6345a8/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01Q7948DFV-952f6345a8/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01Q7948DFV-952f6345a8/image_360.png","thumb_360_w":360,"thumb_360_h":102,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01Q7948DFV-952f6345a8/image_160.png","original_w":367,"original_h":104,"thumb_tiny":"AwANADCju46D8qU9KN2eoP50DGOn60ANop3GOn60mR6frQAlFLken60EjsP1oA//2Q==","permalink":"https://julialang.slack.com/files/U8JP5B9T2/F01Q7948DFV/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01Q7948DFV-cc217bef93","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"ohq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Me: \"running shell commands in julia is really great, it would be nice to be able to split them over multiple lines. Probably should just be able to use newlines with 3 backticks... maybe I'll open an issue\"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"<goes to see what current result is>"}]},{"type":"rich_text_section","elements":[]}]}],"user":"U8JP5B9T2","display_as_bot":false,"ts":"1614879234.085400","thread_ts":"1614879234.085400","reply_count":5,"reply_users_count":3,"latest_reply":"1614881135.088200","reply_users":["U8JP5B9T2","U8D9768Q6","U0138UTB7A4"],"subscribed":false,"reactions":[{"name":"juliaspinner","users":["UGU761DU2","ULUC3K6M6","U67G3QRJM","U0138UTB7A4","U6C5KSWAC"],"count":5}]},{"client_msg_id":"54F80A01-EE6B-45E4-8EBE-4F42D27C39A0","type":"message","text":"Congrats to all of the Julia Computing folks, excited to see some 1000x speed ups: <https://juliacomputing.com/media/2021/03/darpa-ditto/|https://juliacomputing.com/media/2021/03/darpa-ditto/>","user":"UGR3910CQ","ts":"1614890209.090000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"srCmj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Congrats to all of the Julia Computing folks, excited to see some 1000x speed ups: "},{"type":"link","url":"https://juliacomputing.com/media/2021/03/darpa-ditto/","text":"https://juliacomputing.com/media/2021/03/darpa-ditto/"}]}]}],"thread_ts":"1614890209.090000","reply_count":2,"reply_users_count":2,"latest_reply":"1614891589.096400","reply_users":["U6QGE7S86","U6CF3AA5Q"],"subscribed":false,"reactions":[{"name":"chart_with_upwards_trend","users":["U66GD0880","U9VG1AYSG","UCZ7VBGUD","U6QGE7S86","UGR3910CQ","UH9KWTTD3","UPUBAM63X"],"count":7},{"name":"sonic","users":["U66GD0880","U9VG1AYSG","UCZ7VBGUD","U6QGE7S86","UGR3910CQ","UAVMYR0F4","U01CQTKB86N","UCAFZ51L3","UEP056STX","UH9KWTTD3","UPUBAM63X","U6CF3AA5Q"],"count":12}]},{"client_msg_id":"d7a3586d-0d06-4f34-a6af-1bbc94cbd370","type":"message","text":"I find it really awesome that Julia Computing is getting funding from doing cool stuff like this.  Lots of other open source projects pick up some funding doing some \"big data\" nonsense or whatever but Julia computing, no, they are doing real stuff","user":"U9VG1AYSG","ts":"1614890422.092400","team":"T68168MUP","edited":{"user":"U9VG1AYSG","ts":"1614890479.000000"},"blocks":[{"type":"rich_text","block_id":"YDvOk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I find it really awesome that Julia Computing is getting funding from doing cool stuff like this.  Lots of other open source projects pick up some funding doing some \"big data\" nonsense or whatever but Julia computing, no, they are doing real stuff"}]}]}]},{"client_msg_id":"f282ae14-a67f-4a1d-8eb2-5b63e5f95f06","type":"message","text":"Doing real stuff is more fun","user":"U674T3KB3","ts":"1614890743.093400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XycRr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Doing real stuff is more fun"}]}]}],"reactions":[{"name":"visionary_keno","users":["UDB26738Q","U6BNE7LTZ","U6QGE7S86","U9VG1AYSG","UCZ7VBGUD","UH9KWTTD3","UM30MT6RF","UPUBAM63X","U6740K1SP","UEP056STX"],"count":10},{"name":"juliaspinner","users":["U9769MVA7","UPUBAM63X"],"count":2}]},{"client_msg_id":"485a959b-3fae-4d1e-8bb3-65263487a2b7","type":"message","text":"So I had to write some R today at work. Used JuliaCall. It worked perfectly fine. Almost nothing on computers works perfectly fine without effort. Therefore I must share my appreciation.","user":"UPUBAM63X","ts":"1614891425.096000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bOk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I had to write some R today at work. Used JuliaCall. It worked perfectly fine. Almost nothing on computers works perfectly fine without effort. Therefore I must share my appreciation."}]}]}],"reactions":[{"name":"joy","users":["U01CQTKB86N"],"count":1},{"name":"r","users":["UDB26738Q"],"count":1},{"name":"call_me_hand","users":["UDB26738Q"],"count":1},{"name":"julia","users":["UDB26738Q"],"count":1}]},{"client_msg_id":"75ed2763-4098-4e13-978e-096ce540626f","type":"message","text":"The DataFrames test suite is extraordinarily extensive.","user":"U6740K1SP","ts":"1614953876.103400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F76","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The DataFrames test suite is extraordinarily extensive."}]}]}],"thread_ts":"1614953876.103400","reply_count":1,"reply_users_count":1,"latest_reply":"1614953880.103500","reply_users":["U6740K1SP"],"subscribed":false,"reactions":[{"name":"heart","users":["U8JAMQGQY"],"count":1},{"name":"bogumil","users":["U6740K1SP","U6A936746","UDB26738Q","U01CQTKB86N","UCZ7VBGUD"],"count":5}]},{"client_msg_id":"debf6200-a861-494b-a47c-663bed9a24a7","type":"message","text":"The Agents.jl logo/animation :slightly_smiling_face:\n<https://juliadynamics.github.io/Agents.jl/stable/>","user":"U881D0W2C","ts":"1614962278.105900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eQDt8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The Agents.jl logo/animation "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\n"},{"type":"link","url":"https://juliadynamics.github.io/Agents.jl/stable/"}]}]}],"thread_ts":"1614962278.105900","reply_count":1,"reply_users_count":1,"latest_reply":"1614962331.106000","reply_users":["U881D0W2C"],"subscribed":false,"reactions":[{"name":"+1","users":["U8JAMQGQY","U6QGE7S86"],"count":2},{"name":"cool","users":["U01724Q3PGW","U6A936746","U6QGE7S86"],"count":3}]},{"client_msg_id":"f7b0b3b5-5fb1-4854-9514-0ddf0020542e","type":"message","text":"<@U8J1KET6K> today gave a very nice presentation of Agents.jl at SGH Warsaw School of Economics. The maturity and design of the package (and visualization in particular) is amazing.","user":"U8JAMQGQY","ts":"1614967963.109600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e/yjJ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8J1KET6K"},{"type":"text","text":" today gave a very nice presentation of Agents.jl at SGH Warsaw School of Economics. The maturity and design of the package (and visualization in particular) is amazing."}]}]}],"thread_ts":"1614967963.109600","reply_count":1,"reply_users_count":1,"latest_reply":"1614967999.110000","reply_users":["U8JAMQGQY"],"subscribed":false},{"type":"message","subtype":"channel_join","ts":"1614967970.109800","user":"U8J1KET6K","text":"<@U8J1KET6K> has joined the channel","inviter":"U8JAMQGQY"},{"client_msg_id":"dbf2d7c6-9a65-4cd4-bc67-8c857fc231b9","type":"message","text":"Appreciation: <@U68907M46>, <@U6788D83U> and <@U69BL50BF> for fantastic symbolic manipulation capabilities in pure Julia with <https://github.com/JuliaSymbolics/Symbolics.jl>.","user":"U67G3QRJM","ts":"1614969044.111800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"00A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Appreciation: "},{"type":"user","user_id":"U68907M46"},{"type":"text","text":", "},{"type":"user","user_id":"U6788D83U"},{"type":"text","text":" and "},{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" for fantastic symbolic manipulation capabilities in pure Julia with "},{"type":"link","url":"https://github.com/JuliaSymbolics/Symbolics.jl"},{"type":"text","text":"."}]}]}],"thread_ts":"1614969044.111800","reply_count":1,"reply_users_count":1,"latest_reply":"1614970778.113900","reply_users":["U69BL50BF"],"subscribed":false,"reactions":[{"name":"+1","users":["U8HHPBKQR","UEP056STX","UM30MT6RF","U8JAMQGQY"],"count":4},{"name":"symbols","users":["UEP056STX","U67G3QRJM","U8JAMQGQY"],"count":3}]},{"type":"message","subtype":"thread_broadcast","text":"Give most of the credit to <@U68907M46> and <@U6788D83U>. I did a lot of the documentation and the high level interfaces. They are the ones that made it 1000x faster than my original representation and \"rewrite system\".","user":"U69BL50BF","ts":"1614970778.113900","thread_ts":"1614969044.111800","root":{"client_msg_id":"dbf2d7c6-9a65-4cd4-bc67-8c857fc231b9","type":"message","text":"Appreciation: <@U68907M46>, <@U6788D83U> and <@U69BL50BF> for fantastic symbolic manipulation capabilities in pure Julia with <https://github.com/JuliaSymbolics/Symbolics.jl>.","user":"U67G3QRJM","ts":"1614969044.111800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"00A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Appreciation: "},{"type":"user","user_id":"U68907M46"},{"type":"text","text":", "},{"type":"user","user_id":"U6788D83U"},{"type":"text","text":" and "},{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" for fantastic symbolic manipulation capabilities in pure Julia with "},{"type":"link","url":"https://github.com/JuliaSymbolics/Symbolics.jl"},{"type":"text","text":"."}]}]}],"thread_ts":"1614969044.111800","reply_count":1,"reply_users_count":1,"latest_reply":"1614970778.113900","reply_users":["U69BL50BF"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"Bnae4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Give most of the credit to "},{"type":"user","user_id":"U68907M46"},{"type":"text","text":" and "},{"type":"user","user_id":"U6788D83U"},{"type":"text","text":". I did a lot of the documentation and the high level interfaces. They are the ones that made it 1000x faster than my original representation and \"rewrite system\"."}]}]}],"client_msg_id":"80cf682a-d474-4c9b-a83a-119d173d1906"},{"client_msg_id":"45ddfc6f-d143-4a74-916a-7c270e965e60","type":"message","text":"Thank you kind sirs <@U881D0W2C> and <@U8JAMQGQY> !!!","user":"U8J1KET6K","ts":"1614973230.116000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qxRhX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you kind sirs "},{"type":"user","user_id":"U881D0W2C"},{"type":"text","text":" and "},{"type":"user","user_id":"U8JAMQGQY"},{"type":"text","text":" !!!"}]}]}]},{"client_msg_id":"72dee6ba-6504-40ef-bfca-3e5da9ec924c","type":"message","text":"Oh my gosh this is so cool <https://github.com/andyferris/Dictionaries.jl>","user":"UM4TSHKF1","ts":"1615043039.120800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9JQ4O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh my gosh this is so cool "},{"type":"link","url":"https://github.com/andyferris/Dictionaries.jl"}]}]}]},{"client_msg_id":"1787f150-7474-4c22-88b7-bd6e8b40c473","type":"message","text":"<@UDP5WL2RX> for helping migrate so many Julia sites to Franklin and of course for franklin.jl itself!","user":"U67461GUB","ts":"1615068433.124500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UL33","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDP5WL2RX"},{"type":"text","text":" for helping migrate so many Julia sites to Franklin and of course for franklin.jl itself!"}]}]}],"reactions":[{"name":"franklin","users":["UDB26738Q","UGR3910CQ","U67D54KS8","U6A936746"],"count":4}]},{"type":"message","subtype":"thread_broadcast","text":"&gt; Also comes with great documentations\nIt's funny - I always feel a \"pressure\" to use Documenter.jl or similar, rather than a long README and high docstring coverage as done in Dictionaries.jl. I'm not really sure what the ideal solution is - what do other people think?","user":"U66QZ3QF3","ts":"1615103569.127300","thread_ts":"1615043039.120800","root":{"client_msg_id":"72dee6ba-6504-40ef-bfca-3e5da9ec924c","type":"message","text":"Oh my gosh this is so cool <https://github.com/andyferris/Dictionaries.jl>","user":"UM4TSHKF1","ts":"1615043039.120800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9JQ4O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh my gosh this is so cool "},{"type":"link","url":"https://github.com/andyferris/Dictionaries.jl"}]}]}],"thread_ts":"1615043039.120800","reply_count":5,"reply_users_count":3,"latest_reply":"1615103569.127300","reply_users":["U8T0YV7QC","UM4TSHKF1","U66QZ3QF3"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"Bvnps","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Also comes with great documentations"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It's funny - I always feel a \"pressure\" to use Documenter.jl or similar, rather than a long README and high docstring coverage as done in Dictionaries.jl. I'm not really sure what the ideal solution is - what do other people think?"}]}]}],"client_msg_id":"e84cf48c-08f7-4267-881b-509595b2dd95","reactions":[{"name":"point_up","users":["U6A936746"],"count":1}]},{"client_msg_id":"8543f6d1-81ee-4cc7-8acd-9b40c1de53d5","type":"message","text":"<@U6BNE7LTZ> for the \"old version of documentation\" banner on DiffEq. See <https://diffeq.sciml.ai/v2.1/>","user":"U69BL50BF","ts":"1615218122.132500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tiX","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6BNE7LTZ"},{"type":"text","text":" for the \"old version of documentation\" banner on DiffEq. See "},{"type":"link","url":"https://diffeq.sciml.ai/v2.1/"}]}]}],"thread_ts":"1615218122.132500","reply_count":1,"reply_users_count":1,"latest_reply":"1615218540.132800","reply_users":["U6A936746"],"subscribed":false,"reactions":[{"name":"tada","users":["U6A936746","UDXST8ARK","UKG4WF8PJ","UEGRU91B2","UEP056STX","U6QF223TN","U6740K1SP"],"count":7}]},{"client_msg_id":"6f5117a0-63f2-4a1e-b852-f0cae3a5b4af","type":"message","text":"<@UK1BNFHFV> for Chain.jl.\n\nIt's a really nice example of having existing workflows that were limiting, someone coming along and understanding the pain points, and creating a really nice solution that fills all needs. See this issue in DataFramesMeta recently: <https://github.com/JuliaData/DataFramesMeta.jl/issues/232>","user":"UBF9YRB6H","ts":"1615246041.137900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yon","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UK1BNFHFV"},{"type":"text","text":" for Chain.jl.\n\nIt's a really nice example of having existing workflows that were limiting, someone coming along and understanding the pain points, and creating a really nice solution that fills all needs. See this issue in DataFramesMeta recently: "},{"type":"link","url":"https://github.com/JuliaData/DataFramesMeta.jl/issues/232"}]}]}],"thread_ts":"1615246041.137900","reply_count":2,"reply_users_count":2,"latest_reply":"1615246335.138600","reply_users":["UBF9YRB6H","U6C937ENB"],"subscribed":false,"reactions":[{"name":"heavy_plus_sign","users":["U019K6Q9N15"],"count":1}]},{"client_msg_id":"d6a72589-fe11-48ec-94a8-6183a77f39d7","type":"message","text":"<https://github.com/JuliaGPU/CUDA.jl/pull/750|https://github.com/JuliaGPU/CUDA.jl/pull/750>","user":"UDGT4PM41","ts":"1615247825.139200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/7eb","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaGPU/CUDA.jl/pull/750","text":"https://github.com/JuliaGPU/CUDA.jl/pull/750"}]}]}],"thread_ts":"1615247825.139200","reply_count":1,"reply_users_count":1,"latest_reply":"1615248384.139300","reply_users":["U0179G7FG4F"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"Thanks :) the macro makes a let block, so your variable doesn't escape, but you can get the variable out of the let block with the usual tricks I think. For example by writing `local n`before to declare the variable","user":"UK1BNFHFV","ts":"1615254742.003100","thread_ts":"1615246041.137900","root":{"client_msg_id":"6f5117a0-63f2-4a1e-b852-f0cae3a5b4af","type":"message","text":"<@UK1BNFHFV> for Chain.jl.\n\nIt's a really nice example of having existing workflows that were limiting, someone coming along and understanding the pain points, and creating a really nice solution that fills all needs. See this issue in DataFramesMeta recently: <https://github.com/JuliaData/DataFramesMeta.jl/issues/232>","user":"UBF9YRB6H","ts":"1615246041.137900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yon","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UK1BNFHFV"},{"type":"text","text":" for Chain.jl.\n\nIt's a really nice example of having existing workflows that were limiting, someone coming along and understanding the pain points, and creating a really nice solution that fills all needs. See this issue in DataFramesMeta recently: "},{"type":"link","url":"https://github.com/JuliaData/DataFramesMeta.jl/issues/232"}]}]}],"thread_ts":"1615246041.137900","reply_count":7,"reply_users_count":3,"latest_reply":"1615255756.010600","reply_users":["UBF9YRB6H","U6C937ENB","UK1BNFHFV"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"TME+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks :) the macro makes a let block, so your variable doesn't escape, but you can get the variable out of the let block with the usual tricks I think. For example by writing "},{"type":"text","text":"local ","style":{"code":true}},{"type":"text","text":"n","style":{"code":true}},{"type":"text","text":"before to declare the variable"}]}]}],"client_msg_id":"C6B59BEF-15CF-4455-9F4B-F4BB99038190","edited":{"user":"UK1BNFHFV","ts":"1615254876.000000"}},{"client_msg_id":"c15db2ad-0dce-4f94-80cb-ca2d1115c922","type":"message","text":"```]activate --temp```\n:italian-chef-kiss:","user":"U8JP5B9T2","ts":"1615316374.001300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aKRE","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"]activate --temp"}]},{"type":"rich_text_section","elements":[{"type":"emoji","name":"italian-chef-kiss"}]}]}],"reactions":[{"name":"pinched_fingers","users":["U019K6Q9N15","UBF9YRB6H","U8D9768Q6","U0179G7FG4F","UGR3910CQ","ULDQSHD41","U01724Q3PGW"],"count":7},{"name":"100","users":["U6A936746","UDB26738Q","U66SR8JHX"],"count":3}]},{"client_msg_id":"5101dfdc-4b27-4f3f-bb6c-13c6c79b118c","type":"message","text":"Everybody on discourse for not feeding the troll, and mods for spectacular detective work","user":"UMDEUKM29","ts":"1615358272.010500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e53v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Everybody on discourse for not feeding the troll, and mods for spectacular detective work"}]}]}],"reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","U7THT3TM3"],"count":2}]},{"client_msg_id":"3d4a204a-c9f5-451b-a23c-291e7fe3b36e","type":"message","text":"Appreciation for `Folds.jl` providing such easy-to-use multithreading. I wanted to do threaded list-comprehension, and ended up doing this\n```result = Vector{SomeVeryLongParameterizedResultType}(undef, length(xs))\nThreads.@threads for (i, x) in collect(enumerate(xs))\n    result[i] = calc_stuff(x)\nend```\nwith Transducers and Folds, it becomes:\n`result = xs |&gt; Map(calc_stuff) |&gt; Folds.collect`\n:italian-chef-kiss:","user":"U7HAYKY9X","ts":"1615376649.015700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XX34","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Appreciation for "},{"type":"text","text":"Folds.jl","style":{"code":true}},{"type":"text","text":" providing such easy-to-use multithreading. I wanted to do threaded list-comprehension, and ended up doing this\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"result = Vector{SomeVeryLongParameterizedResultType}(undef, length(xs))\nThreads.@threads for (i, x) in collect(enumerate(xs))\n    result[i] = calc_stuff(x)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"with Transducers and Folds, it becomes:\n"},{"type":"text","text":"result = xs |> Map(calc_stuff) |> Folds.collect","style":{"code":true}},{"type":"text","text":"\n"},{"type":"emoji","name":"italian-chef-kiss"}]}]}],"reactions":[{"name":"100","users":["U82RE6STE"],"count":1}]},{"client_msg_id":"5a83f9b6-98ac-44b5-a77f-d29fdca70353","type":"message","text":":juliacomputing: 's monthly \"good news about julia\" email keeps getting longer and more interesting.","user":"UFZKRQ867","ts":"1615469063.025200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eZSU1","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"juliacomputing"},{"type":"text","text":" 's monthly \"good news about julia\" email keeps getting longer and more interesting."}]}]}],"thread_ts":"1615469063.025200","reply_count":3,"reply_users_count":2,"latest_reply":"1615471622.025900","reply_users":["UH24GRBLL","UDB26738Q"],"subscribed":false,"reactions":[{"name":"+1","users":["U7K185TUN","U9MED583T"],"count":2}]},{"type":"message","text":"<@U7HAYKY9X> For cleaning house over at BioJulia","files":[{"id":"F01R5507G3W","created":1615484187,"timestamp":1615484187,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U8JP5B9T2","editable":false,"size":195724,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01R5507G3W/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01R5507G3W/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01R5507G3W-3ff9e79cf5/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01R5507G3W-3ff9e79cf5/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01R5507G3W-3ff9e79cf5/image_360.png","thumb_360_w":320,"thumb_360_h":360,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01R5507G3W-3ff9e79cf5/image_480.png","thumb_480_w":426,"thumb_480_h":480,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01R5507G3W-3ff9e79cf5/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01R5507G3W-3ff9e79cf5/image_720.png","thumb_720_w":640,"thumb_720_h":720,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01R5507G3W-3ff9e79cf5/image_800.png","thumb_800_w":800,"thumb_800_h":900,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01R5507G3W-3ff9e79cf5/image_960.png","thumb_960_w":853,"thumb_960_h":960,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01R5507G3W-3ff9e79cf5/image_1024.png","thumb_1024_w":910,"thumb_1024_h":1024,"original_w":996,"original_h":1121,"thumb_tiny":"AwAwACqh2pKWkIpgGaM0lKOtABRRRSAWkpaQmmAlKKSgUALRR6UUgFpCaWkpgJQOtFA60AL2FFHYUUgP/9k=","permalink":"https://julialang.slack.com/files/U8JP5B9T2/F01R5507G3W/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01R5507G3W-8902a764ea","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"7qy7","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" For cleaning house over at BioJulia"}]}]}],"user":"U8JP5B9T2","display_as_bot":false,"ts":"1615484190.027800","reactions":[{"name":"broom","users":["UDB26738Q","UM30MT6RF","UH8A351DJ","UCAFZ51L3","U0179G7FG4F"],"count":5},{"name":"house","users":["UM30MT6RF","UDB26738Q","UH8A351DJ","U0179G7FG4F"],"count":4},{"name":"heart","users":["U7HAYKY9X"],"count":1},{"name":"+1","users":["UPNRULT51"],"count":1}]},{"client_msg_id":"0ef37ef4-37ad-492d-ab88-7899d8bf017f","type":"message","text":"<@U67D54KS8> <@U680THK2S> for being a kick-ass release team! RC2 here we come :wink:","user":"U67BJLYCS","ts":"1615488213.031000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8Xgk8","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":" "},{"type":"user","user_id":"U680THK2S"},{"type":"text","text":" for being a kick-ass release team! RC2 here we come "},{"type":"emoji","name":"wink"}]}]}],"reactions":[{"name":"heart","users":["U680THK2S","U0179G7FG4F","U66SR8JHX","UM30MT6RF","U6788D83U","ULUC3K6M6","UEN48T0BT","U01724Q3PGW","U90JR0C80","U881D0W2C","ULP7K652M","UC6SUUPRC","UEP056STX","U9VG1AYSG","U7THT3TM3","UC7AF7NSU"],"count":16},{"name":"kristoffer","users":["U680THK2S","U0179G7FG4F","U66SR8JHX","UM30MT6RF","U6788D83U","ULUC3K6M6","U6A936746","U90JR0C80","UC6SUUPRC","U9VG1AYSG","U7THT3TM3","UC7AF7NSU"],"count":12},{"name":"alex_arslan","users":["UM30MT6RF","U6788D83U","ULUC3K6M6","U6A936746","U90JR0C80","UC6SUUPRC","U9VG1AYSG","U7THT3TM3","UC7AF7NSU"],"count":9},{"name":"v","users":["U66M57AN4","UC6SUUPRC","U7THT3TM3"],"count":3}]},{"client_msg_id":"7318b4db-44fb-4c82-a20e-eefa110ee84a","type":"message","text":"<@UM30MT6RF> <@U687RKK0E> <@U6740K1SP> for their patience and feedback on my multidimensional concatenation syntax PR as I stumbled through the iterations, and tolerance of probably too many GitHub notifications.","user":"U01HD5VFXJM","ts":"1615496508.041900","team":"T68168MUP","edited":{"user":"U01HD5VFXJM","ts":"1615496535.000000"},"blocks":[{"type":"rich_text","block_id":"qOQ0","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UM30MT6RF"},{"type":"text","text":" "},{"type":"user","user_id":"U687RKK0E"},{"type":"text","text":" "},{"type":"user","user_id":"U6740K1SP"},{"type":"text","text":" for their patience and feedback on my multidimensional concatenation syntax PR as I stumbled through the iterations, and tolerance of probably too many GitHub notifications."}]}]}],"reactions":[{"name":"julia","users":["U0179G7FG4F"],"count":1}]},{"client_msg_id":"8caa8619-8369-4530-82a0-ccd31b17a1b2","type":"message","text":"<@U679T6QF7> <@U674T3KB3> <@U66GD0880> for getting us close to native Apple M1 support!","user":"U85JBUGGP","ts":"1615496844.043500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q7p","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U679T6QF7"},{"type":"text","text":" "},{"type":"user","user_id":"U674T3KB3"},{"type":"text","text":" "},{"type":"user","user_id":"U66GD0880"},{"type":"text","text":" for getting us close to native Apple M1 support!"}]}]}],"reactions":[{"name":"julia","users":["U0179G7FG4F","UDGT4PM41"],"count":2}]},{"client_msg_id":"79040526-c616-4a80-bac5-8032f03ba2e7","type":"message","text":"Gave an intro to Julia for spanish speakers talk today.\nSecond speaker goes to show an amazing juggling act of Python generators and yielding and other fun stuff so as to not bork the computer when...\nloading a 240MB CSV file.\nJulia managed it in ~6 seconds.\nKudos to all the <#C674VR0HH|data> team!\n<https://asciinema.org/a/M1xRaojdVLGyUIDYXTmfr5tYY>","user":"U6QGE7S86","ts":"1615603264.055900","team":"T68168MUP","edited":{"user":"U6QGE7S86","ts":"1615603511.000000"},"attachments":[{"service_name":"asciinema.org","title":"untitled","title_link":"https://asciinema.org/a/M1xRaojdVLGyUIDYXTmfr5tYY","text":"Recorded by miguelraz","fallback":"asciinema.org: untitled","image_url":"https://asciinema.org/a/M1xRaojdVLGyUIDYXTmfr5tYY.png","from_url":"https://asciinema.org/a/M1xRaojdVLGyUIDYXTmfr5tYY","image_width":278,"image_height":250,"image_bytes":63392,"service_icon":"https://asciinema.org/images/favicon-2d62dafa447cf018340b7121007568e3.png?vsn=d","id":1,"original_url":"https://asciinema.org/a/M1xRaojdVLGyUIDYXTmfr5tYY"}],"blocks":[{"type":"rich_text","block_id":"C+K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Gave an intro to Julia for spanish speakers talk today.\nSecond speaker goes to show an amazing juggling act of Python generators and yielding and other fun stuff so as to not bork the computer when...\nloading a 240MB CSV file.\nJulia managed it in ~6 seconds.\nKudos to all the "},{"type":"channel","channel_id":"C674VR0HH"},{"type":"text","text":" team!\n"},{"type":"link","url":"https://asciinema.org/a/M1xRaojdVLGyUIDYXTmfr5tYY"}]}]}],"thread_ts":"1615603264.055900","reply_count":3,"reply_users_count":2,"latest_reply":"1615603525.057100","reply_users":["U67G3QRJM","U6QGE7S86"],"subscribed":false,"reactions":[{"name":"+1","users":["U67G3QRJM","UGR3910CQ","UC7FP1MQV"],"count":3}]},{"type":"message","text":"","user":"U7V6YNG04","ts":"1615657739.060400","team":"T68168MUP","attachments":[{"fallback":"[March 14th, 2021 1:45 AM] tianjun.cpp: I really appreciate <@U01BG0NN34J>’s comments/suggestions on ReinforcementLearning.jl","ts":"1615657557.039800","author_id":"U7V6YNG04","author_subname":"Jun","channel_id":"CG4AX37J8","channel_name":"reinforcement-learnin","is_msg_unfurl":true,"text":"I really appreciate <@U01BG0NN34J>’s comments/suggestions on ReinforcementLearning.jl","author_name":"Jun","author_link":"https://julialang.slack.com/team/U7V6YNG04","author_icon":"https://avatars.slack-edge.com/2018-06-05/374949769760_b4823546d607a5787de6_48.jpg","mrkdwn_in":["text"],"files":[{"id":"F01RJF07933","created":1615657506,"timestamp":1615657506,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U7V6YNG04","editable":false,"size":78604,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01RJF07933/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01RJF07933/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01RJF07933-76310d085f/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01RJF07933-76310d085f/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01RJF07933-76310d085f/image_360.png","thumb_360_w":360,"thumb_360_h":315,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01RJF07933-76310d085f/image_480.png","thumb_480_w":480,"thumb_480_h":420,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01RJF07933-76310d085f/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01RJF07933-76310d085f/image_720.png","thumb_720_w":720,"thumb_720_h":629,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01RJF07933-76310d085f/image_800.png","thumb_800_w":800,"thumb_800_h":699,"original_w":883,"original_h":772,"thumb_tiny":"AwApADDS57Uc+1BA700ADof1oAdz7UU0DHf8zTufagAooooADjvTPk9vyqT8Kbn/AGWoAb8nt+VKCo7/AKUo57EfWnYoAKKKKADntTAT6LT6KAGZPov50oJ9F/OnUUAJ83oPzoGe4A/GlooA/9k=","permalink":"https://julialang.slack.com/files/U7V6YNG04/F01RJF07933/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01RJF07933-cdd4b08396","is_starred":false,"has_rich_preview":false}],"color":"D0D0D0","from_url":"https://julialang.slack.com/archives/CG4AX37J8/p1615657557039800","is_share":true,"footer":"Posted in #reinforcement-learnin"}]},{"type":"message","subtype":"channel_join","ts":"1615657757.060700","user":"U01BG0NN34J","text":"<@U01BG0NN34J> has joined the channel","inviter":"U7V6YNG04"},{"client_msg_id":"db84dc1d-a6d7-4149-a2d2-0f4ac8988919","type":"message","text":"Started out a simple computation using SymPy today and noticed that it took a while. Spent the time I was waiting for SymPy to return to read the docs for Symbolics.jl, reimplemented the same thing using Symbolics and 20 minutes later I had the answer, before SymPy was done. The same computation using Symbolics.jl took\n```1.552 ms (10755 allocations: 424.75 KiB)```\n(admittedly, after the time-to-first simplify of about 5 seconds :slightly_smiling_face:)\nSymbolics.jl may be a bit rough around the edges, but sure looks promising!","user":"UJ7DVTVQ8","ts":"1615834926.068000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DU0Yi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Started out a simple computation using SymPy today and noticed that it took a while. Spent the time I was waiting for SymPy to return to read the docs for Symbolics.jl, reimplemented the same thing using Symbolics and 20 minutes later I had the answer, before SymPy was done. The same computation using Symbolics.jl took\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1.552 ms (10755 allocations: 424.75 KiB)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(admittedly, after the time-to-first simplify of about 5 seconds "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":")\nSymbolics.jl may be a bit rough around the edges, but sure looks promising!"}]}]}],"thread_ts":"1615834926.068000","reply_count":4,"reply_users_count":3,"latest_reply":"1615835259.071600","reply_users":["U8JAMQGQY","UJ7DVTVQ8","U8D9768Q6"],"subscribed":false,"reactions":[{"name":"100","users":["U8JAMQGQY","U85JBUGGP"],"count":2},{"name":"heart","users":["U8D9768Q6","U85JBUGGP","UM30MT6RF"],"count":3}]},{"client_msg_id":"d5c194ac-91e0-4ed9-8892-3ab504809207","type":"message","text":"JuliaCon for actually describing what proposal are for and how they are reviewed. I thought it was standard, but I'm currently writing an abstract for a conference and the only document I can find only describe the text layout the proposal must follow :confused:","user":"U017LQ3A59U","ts":"1615845774.079000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SsO+g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"JuliaCon for actually describing what proposal are for and how they are reviewed. I thought it was standard, but I'm currently writing an abstract for a conference and the only document I can find only describe the text layout the proposal must follow "},{"type":"emoji","name":"confused"}]}]}],"reactions":[{"name":"heart","users":["UGR3910CQ"],"count":1}]},{"type":"message","text":"Hop into Rust's science and AI chatroom and see love for JuliaLang. What a nice thing :)","files":[{"id":"F01QWMLTBUP","created":1615846142,"timestamp":1615846142,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UPUBAM63X","editable":false,"size":134874,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01QWMLTBUP/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01QWMLTBUP/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01QWMLTBUP-8f92384840/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01QWMLTBUP-8f92384840/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01QWMLTBUP-8f92384840/image_360.png","thumb_360_w":360,"thumb_360_h":264,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01QWMLTBUP-8f92384840/image_480.png","thumb_480_w":480,"thumb_480_h":352,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01QWMLTBUP-8f92384840/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01QWMLTBUP-8f92384840/image_720.png","thumb_720_w":720,"thumb_720_h":527,"original_w":770,"original_h":564,"thumb_tiny":"AwAjADCvkEDaCOOc+tJilO042gjjnJ70n40wDHvRikwPWjA9aAFx70Hj0pMe9GKAAUvNG0rjIIyMijP1oAQ5NGDS5o3UAJikp240hOaQCg0UgpaAFoopKACg0UGgD//Z","permalink":"https://julialang.slack.com/files/UPUBAM63X/F01QWMLTBUP/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01QWMLTBUP-a9cc577ae5","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"gAEQd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hop into Rust's science and AI chatroom and see love for JuliaLang. What a nice thing :)"}]}]}],"user":"UPUBAM63X","display_as_bot":false,"ts":"1615846169.080100","reactions":[{"name":"heart","users":["U0179G7FG4F","UGU761DU2","U680THK2S"],"count":3},{"name":"rust","users":["UGU761DU2","U680THK2S"],"count":2},{"name":"julia","users":["UGU761DU2","U680THK2S"],"count":2}]},{"client_msg_id":"0f0fb661-2eac-4ae5-9811-f49aec8a3752","type":"message","text":"`map(.*, A, B)` in 1.6","user":"U9MED583T","ts":"1615855027.085200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xj/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"map(.*, A, B)","style":{"code":true}},{"type":"text","text":" in 1.6"}]}]}],"reactions":[{"name":"heart","users":["UHDQQ4GN6","U0179G7FG4F","UH108BJB1","UKG4WF8PJ","UEN48T0BT"],"count":5},{"name":"juliaspinner","users":["UGU761DU2","U9MED583T","UH108BJB1"],"count":3},{"name":"broadcast","users":["U9MED583T","U6QGE7S86","UH108BJB1","U6740K1SP"],"count":4}]},{"client_msg_id":"c912dd32-523f-42ad-8765-136345484066","type":"message","text":"<https://github.com/JuliaDebug/Debugger.jl> really just knocked my socks off","user":"UM8JUNJG7","ts":"1615872472.004200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Crc","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaDebug/Debugger.jl"},{"type":"text","text":" really just knocked my socks off"}]}]}],"reactions":[{"name":"heart","users":["U6795JH6H"],"count":1}]},{"client_msg_id":"de151ff8-7bd2-44cc-a20f-66139cac02ed","type":"message","text":"We all know how much work was put into it broadcasting and views, but it still surprised me today when a custom setter achieved the very same performance as a simple `setindex!` call\n\n```function setter(x)\n  for i in eachindex(x)\n    x[i] = 1.0\n  end\nend\n\nfunction fancy_setter(x)\n  s = i -&gt; @views x[i:i]\n  for i in eachindex(x)\n     s(i) .= 1.0\n  end\nend```\n```julia&gt; @btime setter(x) setup=(x=rand(1000))\n  462.589 ns (0 allocations: 0 bytes)\njulia&gt; @btime fancy_setter(x) setup=(x=rand(1000))\n  464.919 ns (0 allocations: 0 bytes)```\nIncredible!","user":"U01PLQWQXPV","ts":"1615985200.014400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VEfT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We all know how much work was put into it broadcasting and views, but it still surprised me today when a custom setter achieved the very same performance as a simple "},{"type":"text","text":"setindex!","style":{"code":true}},{"type":"text","text":" call\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function setter(x)\n  for i in eachindex(x)\n    x[i] = 1.0\n  end\nend\n\nfunction fancy_setter(x)\n  s = i -> @views x[i:i]\n  for i in eachindex(x)\n     s(i) .= 1.0\n  end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime setter(x) setup=(x=rand(1000))\n  462.589 ns (0 allocations: 0 bytes)\njulia> @btime fancy_setter(x) setup=(x=rand(1000))\n  464.919 ns (0 allocations: 0 bytes)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIncredible!"}]}]}],"thread_ts":"1615985200.014400","reply_count":2,"reply_users_count":2,"latest_reply":"1615987030.014800","reply_users":["U7HAYKY9X","U01PLQWQXPV"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"Yeah, I think there is often an expectation (presumably in part coming from experience with Python/R/Matlab/etc.) that broadcasting will be faster than loops, which is I think probably also driven in part by the overloaded multiple uses of the term “vectorization” in CS: there *is* a thing called vectorization in Julia that will speed up your code, but it’s not ~related to~ ^[equivalent to] broadcasting (in contrast to use of the term in these other languages).\n\nInstead it’s about properly filling up your SIMD vector registers, either by the Julia compiler itself (with encouragement from `@inbounds` and/or `@simd`) or by using `@avx` from LoopVectorization.jl","user":"UGU761DU2","ts":"1615994492.016100","thread_ts":"1615985200.014400","root":{"client_msg_id":"de151ff8-7bd2-44cc-a20f-66139cac02ed","type":"message","text":"We all know how much work was put into it broadcasting and views, but it still surprised me today when a custom setter achieved the very same performance as a simple `setindex!` call\n\n```function setter(x)\n  for i in eachindex(x)\n    x[i] = 1.0\n  end\nend\n\nfunction fancy_setter(x)\n  s = i -&gt; @views x[i:i]\n  for i in eachindex(x)\n     s(i) .= 1.0\n  end\nend```\n```julia&gt; @btime setter(x) setup=(x=rand(1000))\n  462.589 ns (0 allocations: 0 bytes)\njulia&gt; @btime fancy_setter(x) setup=(x=rand(1000))\n  464.919 ns (0 allocations: 0 bytes)```\nIncredible!","user":"U01PLQWQXPV","ts":"1615985200.014400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VEfT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We all know how much work was put into it broadcasting and views, but it still surprised me today when a custom setter achieved the very same performance as a simple "},{"type":"text","text":"setindex!","style":{"code":true}},{"type":"text","text":" call\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function setter(x)\n  for i in eachindex(x)\n    x[i] = 1.0\n  end\nend\n\nfunction fancy_setter(x)\n  s = i -> @views x[i:i]\n  for i in eachindex(x)\n     s(i) .= 1.0\n  end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime setter(x) setup=(x=rand(1000))\n  462.589 ns (0 allocations: 0 bytes)\njulia> @btime fancy_setter(x) setup=(x=rand(1000))\n  464.919 ns (0 allocations: 0 bytes)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIncredible!"}]}]}],"thread_ts":"1615985200.014400","reply_count":10,"reply_users_count":7,"latest_reply":"1615997958.017500","reply_users":["U7HAYKY9X","U01PLQWQXPV","UPSSPPBFV","UBEF50B7C","UGU761DU2","U66GD0880","UH9KWTTD3"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"=9w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I think there is often an expectation (presumably in part coming from experience with Python/R/Matlab/etc.) that broadcasting will be faster than loops, which is I think probably also driven in part by the overloaded multiple uses of the term “vectorization” in CS: there "},{"type":"text","text":"is","style":{"bold":true}},{"type":"text","text":" a thing called vectorization in Julia that will speed up your code, but it’s not "},{"type":"text","text":"related to","style":{"strike":true}},{"type":"text","text":" ^[equivalent to] broadcasting (in contrast to use of the term in these other languages).\n\nInstead it’s about properly filling up your SIMD vector registers, either by the Julia compiler itself (with encouragement from "},{"type":"text","text":"@inbounds","style":{"code":true}},{"type":"text","text":" and/or "},{"type":"text","text":"@simd","style":{"code":true}},{"type":"text","text":") or by using "},{"type":"text","text":"@avx","style":{"code":true}},{"type":"text","text":" from LoopVectorization.jl"}]}]}],"client_msg_id":"20b87416-6f4a-43d3-8092-ee6f15f1f67f","edited":{"user":"UGU761DU2","ts":"1615995286.000000"}},{"client_msg_id":"0cefd09b-2115-4d20-95bc-841cd80c7c45","type":"message","text":"<@U66GD0880> was explaining all our binary building and package distribution setup to some R people earlier and they were quite impressed. Loved listening to the whole story. It's really come together","user":"U674T3KB3","ts":"1616012804.021400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"65196","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U66GD0880"},{"type":"text","text":" was explaining all our binary building and package distribution setup to some R people earlier and they were quite impressed. Loved listening to the whole story. It's really come together"}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3","UM30MT6RF","UEP056STX","U6A936746","U85JBUGGP","U67BJLYCS","U680THK2S","UGR3910CQ","U9MED583T","U66SR8JHX"],"count":10},{"name":"staticfloat","users":["UDB26738Q","UM30MT6RF","UEP056STX","U674T3KB3","U6A936746","U85JBUGGP","U67BJLYCS","U680THK2S","U66M57AN4","UGR3910CQ","U9MED583T","UGU761DU2","USU9FRPEU","U66SR8JHX"],"count":14},{"name":"100","users":["U680THK2S","UGR3910CQ","UGU761DU2","U66SR8JHX"],"count":4},{"name":"r","users":["U680THK2S","U66M57AN4","UGR3910CQ","UGU761DU2","UDB26738Q"],"count":5}]},{"client_msg_id":"cd81aa5b-4b6a-4103-8cc7-7a917d13e1ea","type":"message","text":"<@UUJ6L8N8P>'s work on Flux is awesome. Consistently pushing us forward.","user":"U6A936746","ts":"1616059448.032500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hPA","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UUJ6L8N8P"},{"type":"text","text":"'s work on Flux is awesome. Consistently pushing us forward."}]}]}],"thread_ts":"1616059448.032500","reply_count":1,"reply_users_count":1,"latest_reply":"1616061469.032900","reply_users":["U6N6VQE30"],"subscribed":false,"reactions":[{"name":"100","users":["U85JBUGGP"],"count":1},{"name":"clapping","users":["U85JBUGGP"],"count":1}]},{"client_msg_id":"6e557f01-8a16-4b37-bb7b-73f5ae784cf0","type":"message","text":"Interactive Gadfly plots: panning, zooming, toggle-able coordinates are _so_ nice for exploratory data work","user":"U73ACR3TQ","ts":"1616080480.038600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FJe/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interactive Gadfly plots: panning, zooming, toggle-able coordinates are "},{"type":"text","text":"so ","style":{"italic":true}},{"type":"text","text":"nice for exploratory data work"}]}]}]},{"client_msg_id":"a63a7934-6a56-4c84-b080-5d46f46b3b6f","type":"message","text":"<@U9Q2CBDMZ> for a very thoughtful and <https://github.com/JuliaData/Tables.jl/pull/234|well-researched PR>, as well as a willingness to dig into a core data library to figure out a performance problem and, in the end, a simple solution, with me.","user":"U681ELA87","ts":"1616126824.044400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JS5F","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U9Q2CBDMZ"},{"type":"text","text":" for a very thoughtful and "},{"type":"link","url":"https://github.com/JuliaData/Tables.jl/pull/234","text":"well-researched PR"},{"type":"text","text":", as well as a willingness to dig into a core data library to figure out a performance problem and, in the end, a simple solution, with me."}]}]}],"reactions":[{"name":"heart","users":["UGR3910CQ"],"count":1}]},{"type":"message","subtype":"channel_join","ts":"1616126827.044600","user":"U9Q2CBDMZ","text":"<@U9Q2CBDMZ> has joined the channel","inviter":"U681ELA87"},{"client_msg_id":"e4f80e73-68dc-4b87-aade-44a67beacb0a","type":"message","text":"I have new appreciation for how easy Blosc.jl is to use.\n\nToday someone asked me for help with python-blosc. For `a` a NumPy array, the most efficient compression call apparently looks like this:\n```blosc.compress_ptr(a.__array_interface__['data'][0], a.size, a.dtype.itemsize, 9,cname= 'lz4')```\nI think numcodecs is probably easier to use, but this was a bit shocking.","user":"USU9FRPEU","ts":"1616201430.050700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=LX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have new appreciation for how easy Blosc.jl is to use.\n\nToday someone asked me for help with python-blosc. For "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" a NumPy array, the most efficient compression call apparently looks like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"blosc.compress_ptr(a.__array_interface__['data'][0], a.size, a.dtype.itemsize, 9,cname= 'lz4')"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I think numcodecs is probably easier to use, but this was a bit shocking."}]}]}],"thread_ts":"1616201430.050700","reply_count":6,"reply_users_count":3,"latest_reply":"1616202075.051900","reply_users":["U6QGE7S86","USU9FRPEU","U0179G7FG4F"],"subscribed":false},{"type":"message","text":"I think this is such a valuable lesson. I just watched The Bit Player, about Claude Shannon and information, and someone speculates on how important it is for a young person, especially one with a mind like buddy Claude, to be in a community that _builds_ things. And I generally feel so positively about the Julia community, and I think overall it's a great lesson for a student to learn that there are actual real people behind, well, everything.","user":"U72B7LTMX","ts":"1616230975.052700","team":"T68168MUP","attachments":[{"fallback":"[March 17th, 2021 6:08 PM] jessebett: great! thanks again I’ve shared this context too! Will be nice for students to see how gripes can turn to package development and community engagement!","ts":"1616018898.020400","author_id":"U90JR0C80","author_subname":"Jesse Bettencourt","channel_id":"C67TK21LJ","channel_name":"gripes","is_msg_unfurl":true,"is_reply_unfurl":true,"text":"great! thanks again I’ve shared this context too! Will be nice for students to see how gripes can turn to package development and community engagement!","author_name":"Jesse Bettencourt","author_link":"https://julialang.slack.com/team/U90JR0C80","author_icon":"https://avatars.slack-edge.com/2018-01-30/307291696386_d856e2350ce251cee88a_48.jpg","mrkdwn_in":["text"],"color":"D0D0D0","from_url":"https://julialang.slack.com/archives/C67TK21LJ/p1616018898020400?thread_ts=1616017682018500&cid=C67TK21LJ","is_share":true,"footer":"From a thread in #gripes"}],"blocks":[{"type":"rich_text","block_id":"=QW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think this is such a valuable lesson. I just watched The Bit Player, about Claude Shannon and information, and someone speculates on how important it is for a young person, especially one with a mind like buddy Claude, to be in a community that "},{"type":"text","text":"builds","style":{"italic":true}},{"type":"text","text":" things. And I generally feel so positively about the Julia community, and I think overall it's a great lesson for a student to learn that there are actual real people behind, well, everything."}]}]}]},{"client_msg_id":"2eab5109-1005-485b-91ce-ce907cbeb2cb","type":"message","text":"<@UB4KR33H9> <@UBVKC24EA> for JuliaSmoothOptimizers and <@UGPLDS333> for Percival.jl. A beautifully designed package ecosystem.","user":"U85JBUGGP","ts":"1616271091.054900","team":"T68168MUP","edited":{"user":"U85JBUGGP","ts":"1616271172.000000"},"blocks":[{"type":"rich_text","block_id":"uM+A","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UB4KR33H9"},{"type":"text","text":" "},{"type":"user","user_id":"UBVKC24EA"},{"type":"text","text":" for JuliaSmoothOptimizers and "},{"type":"user","user_id":"UGPLDS333"},{"type":"text","text":" for Percival.jl. A beautifully designed package ecosystem."}]}]}],"reactions":[{"name":"heart","users":["UBVKC24EA"],"count":1}]},{"type":"message","subtype":"channel_join","ts":"1616271094.055100","user":"UB4KR33H9","text":"<@UB4KR33H9> has joined the channel","inviter":"U85JBUGGP"},{"type":"message","subtype":"channel_join","ts":"1616271094.055300","user":"UBVKC24EA","text":"<@UBVKC24EA> has joined the channel","inviter":"U85JBUGGP"},{"type":"message","subtype":"channel_join","ts":"1616271095.055500","user":"UGPLDS333","text":"<@UGPLDS333> has joined the channel","inviter":"U85JBUGGP"},{"client_msg_id":"42292bb2-85c5-4771-9a5a-3742d0312360","type":"message","text":"`julia ] add SomePackage`. Looking at installation/build instructions elsewhere feels a little less appealing every day.","user":"UEN48T0BT","ts":"1616423835.059900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7nWK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"julia ] add SomePackage","style":{"code":true}},{"type":"text","text":". Looking at installation/build instructions elsewhere feels a little less appealing every day."}]}]}],"thread_ts":"1616423835.059900","reply_count":1,"reply_users_count":1,"latest_reply":"1616425144.061000","reply_users":["U6N6VQE30"],"subscribed":false,"reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","U6QGE7S86","UEP056STX","UGR3910CQ","UCZ7VBGUD","U8JAMQGQY","UPSSPPBFV","U01SFUPBJ9E","U6N6VQE30","UKG4WF8PJ"],"count":10},{"name":"point_up","users":["UGR3910CQ"],"count":1}]},{"client_msg_id":"8d639bb4-f82b-4440-ba92-d3a7cb5fa3a2","type":"message","text":"<@U680THK2S> for signing the RMS open letter and representing Julia <https://rms-open-letter.github.io/|https://rms-open-letter.github.io/>","user":"U677NAWV8","ts":"1616620365.067300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pDT","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U680THK2S"},{"type":"text","text":" for signing the RMS open letter and representing Julia "},{"type":"link","url":"https://rms-open-letter.github.io/","text":"https://rms-open-letter.github.io/"}]}]}],"thread_ts":"1616620365.067300","reply_count":4,"reply_users_count":2,"latest_reply":"1616620791.068500","reply_users":["U680THK2S","U6NFPDBV1"],"is_locked":false,"subscribed":false,"reactions":[{"name":"heart","users":["UM30MT6RF"],"count":1},{"name":"diversity","users":["UM30MT6RF"],"count":1}]},{"type":"message","subtype":"thread_broadcast","text":"(btw the above thread is pretty much the most positive interaction on these subjects I've had with other people in my entire life [well, only relevant in the last few years, but still]; so appreciation to the Julia community for that)","user":"U9VG1AYSG","ts":"1616623535.083500","thread_ts":"1616620365.067300","root":{"client_msg_id":"8d639bb4-f82b-4440-ba92-d3a7cb5fa3a2","type":"message","text":"<@U680THK2S> for signing the RMS open letter at <https://rms-open-letter.github.io/>","user":"U677NAWV8","ts":"1616620365.067300","team":"T68168MUP","edited":{"user":"U677NAWV8","ts":"1616621225.000000"},"blocks":[{"type":"rich_text","block_id":"3=ei","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U680THK2S"},{"type":"text","text":" for signing the RMS open letter at "},{"type":"link","url":"https://rms-open-letter.github.io/"}]}]}],"thread_ts":"1616620365.067300","reply_count":23,"reply_users_count":8,"latest_reply":"1616624372.087800","reply_users":["U680THK2S","U6NFPDBV1","U677NAWV8","U7HAYKY9X","U9VG1AYSG","U6QGE7S86","UB7JS9CHF","U67D54KS8"],"is_locked":false,"subscribed":false},"blocks":[{"type":"rich_text","block_id":"Z0mY8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(btw the above thread is pretty much the most positive interaction on these subjects I've had with other people in my entire life [well, only relevant in the last few years, but still]; so appreciation to the Julia community for that)"}]}]}],"client_msg_id":"258d5e9f-3b7e-46b7-8776-00b75f42bc21","reactions":[{"name":"heart","users":["U680THK2S","U7HAYKY9X"],"count":2},{"name":"100","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"1e7f6634-76b7-4b14-957a-a0d00237a0ea","type":"message","text":"NamedTupleTools :pray:","user":"U69CJGKEY","ts":"1616684984.180600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V8Jh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NamedTupleTools "},{"type":"emoji","name":"pray"}]}]}]},{"client_msg_id":"accdc303-1fba-4d37-bba8-3d8a9d2974c6","type":"message","text":"a tiny, but nevertheless hugely useful feature if you ever have to deal with `NamedTuple` in 1.6 is that the constructor is now more reasonable and works over any iterator of appropriately typed pairs\n```julia&gt; NamedTuple([:a=&gt;1])\n(a = 1,)\n\njulia&gt; NamedTuple(Symbol(string(a))=&gt; a for a ∈ 1:3)\n(1 = 1, 2 = 2, 3 = 3)\n\njulia&gt; NamedTuple(Dict(:a=&gt;1))\n(a = 1,)```","user":"U9VG1AYSG","ts":"1616690494.183900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eKK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a tiny, but nevertheless hugely useful feature if you ever have to deal with "},{"type":"text","text":"NamedTuple","style":{"code":true}},{"type":"text","text":" in 1.6 is that the constructor is now more reasonable and works over any iterator of appropriately typed pairs\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> NamedTuple([:a=>1])\n(a = 1,)\n\njulia> NamedTuple(Symbol(string(a))=> a for a ∈ 1:3)\n(1 = 1, 2 = 2, 3 = 3)\n\njulia> NamedTuple(Dict(:a=>1))\n(a = 1,)"}]}]}],"thread_ts":"1616690494.183900","reply_count":9,"reply_users_count":3,"latest_reply":"1616690959.186600","reply_users":["US64J0NPQ","U9VG1AYSG","UDB26738Q"],"is_locked":false,"subscribed":false,"reactions":[{"name":"heart","users":["US64J0NPQ","U82LX4ACB","U69CJGKEY"],"count":3},{"name":"1000","users":["US64J0NPQ","U66M57AN4"],"count":2}]},{"client_msg_id":"df807d56-4008-49b7-ad91-c1b3474c9967","type":"message","text":"this replaces the rather horrendous `(;(x for x \\in y)...)` constructors","user":"U9VG1AYSG","ts":"1616690532.184400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1P1pP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this replaces the rather horrendous "},{"type":"text","text":"(;(x for x \\in y)...)","style":{"code":true}},{"type":"text","text":" constructors"}]}]}]},{"client_msg_id":"FC09778E-C8C1-4D4F-A4D2-EE73551CAD7D","type":"message","text":":heart: to all of the contributors to all the amazing performance improvements and new features in 1.6!","user":"UGU761DU2","ts":"1616695064.189900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JrG","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"heart"},{"type":"text","text":" to all of the contributors to all the amazing performance improvements and new features in 1.6!"}]}]}],"reactions":[{"name":"julia","users":["U0179G7FG4F","U66SGEWAC","U9VG1AYSG","U0138UTB7A4","U017D621ELC","UDXST8ARK","UEGRU91B2","U66M57AN4","UCZ7VBGUD","UEN48T0BT","UBVKC24EA","UEP056STX","UB7JS9CHF","U01SFUPBJ9E","ULUC3K6M6"],"count":15}]},{"client_msg_id":"7ee0546a-b6ff-485c-8ab1-298ae16616dc","type":"message","text":"Don’t forget about <@UK1BNFHFV> and ClearStacktraces.jl! is not a performance improvement but a quality of life improvement still!","user":"UEGRU91B2","ts":"1616695265.192200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1WJCZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Don’t forget about "},{"type":"user","user_id":"UK1BNFHFV"},{"type":"text","text":" and ClearStacktraces.jl! is not a performance improvement but a quality of life improvement still!"}]}]}],"reactions":[{"name":"+1","users":["U6A936746","UEP056STX","UB7JS9CHF"],"count":3}]},{"client_msg_id":"66F4810F-3B92-4E52-B31B-B4ED238FFCCF","type":"message","text":"Love the new stack traces!","user":"UGU761DU2","ts":"1616695308.192800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f3pN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Love the new stack traces!"}]}]}]},{"client_msg_id":"3274b728-80b9-42a1-b97a-4b9b1ae45f8f","type":"message","text":"The 1.6 parallel precompilation is of course great! but the UI is also oddly satisfying, watching all the names pop up as my laptop fan throttles up","user":"U011QC7QLPL","ts":"1616698265.197700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bNIoc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The 1.6 parallel precompilation is of course great! but the UI is also oddly satisfying, watching all the names pop up as my laptop fan throttles up"}]}]}],"reactions":[{"name":"point_up::skin-tone-5","users":["UH9KWTTD3"],"count":1},{"name":"100","users":["U67D54KS8","UEN48T0BT","U7HAYKY9X","ULG5V164A","UM30MT6RF"],"count":5},{"name":"point_up","users":["U9VG1AYSG","U881D0W2C","UB7JS9CHF","U7HAYKY9X","UEP056STX"],"count":5},{"name":"+1","users":["U6A936746"],"count":1}]},{"client_msg_id":"516a23b9-94bb-42b6-89e6-5b5d9e11a8c8","type":"message","text":"it’s amazing how powerful progress bars (and animations and the like) are on our psyche","user":"U6740K1SP","ts":"1616699607.200000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KELB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it’s amazing how powerful progress bars (and animations and the like) are on our psyche"}]}]}],"reactions":[{"name":"100","users":["U6A936746","UDSU53PEG","U680THK2S","U7HAYKY9X","U6QGE7S86","UEP056STX","UEN48T0BT","U0179G7FG4F","UM30MT6RF"],"count":9},{"name":"heavy_check_mark","users":["U8D9768Q6"],"count":1}]},{"client_msg_id":"bbc86d21-0040-438e-8e1d-328a0ff5ea93","type":"message","text":"I love how everytime some random person on the internet says \"julia is slow\" then someone has either an example, random package, or whips something up in 10 min., thats like \"no it's not\". Even if its like some weird esolang interpretter.","user":"UPUBAM63X","ts":"1616705116.207100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eaE/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I love how everytime some random person on the internet says \"julia is slow\" then someone has either an example, random package, or whips something up in 10 min., thats like \"no it's not\". Even if its like some weird esolang interpretter."}]}]}],"thread_ts":"1616705116.207100","reply_count":2,"reply_users_count":2,"latest_reply":"1616705935.210500","reply_users":["UPUBAM63X","UH24GRBLL"],"is_locked":false,"subscribed":false,"reactions":[{"name":"point_up","users":["UB7JS9CHF","UGR3910CQ"],"count":2}]},{"type":"message","subtype":"thread_broadcast","text":"transpiler, please :p what runs in the end is native :juliabouncing:","user":"UH24GRBLL","ts":"1616705935.210500","thread_ts":"1616705116.207100","root":{"client_msg_id":"bbc86d21-0040-438e-8e1d-328a0ff5ea93","type":"message","text":"I love how everytime some random person on the internet says \"julia is slow\" then someone has either an example, random package, or whips something up in 10 min., thats like \"no it's not\". Even if its like some weird esolang interpretter.","user":"UPUBAM63X","ts":"1616705116.207100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eaE/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I love how everytime some random person on the internet says \"julia is slow\" then someone has either an example, random package, or whips something up in 10 min., thats like \"no it's not\". Even if its like some weird esolang interpretter."}]}]}],"thread_ts":"1616705116.207100","reply_count":2,"reply_users_count":2,"latest_reply":"1616705935.210500","reply_users":["UPUBAM63X","UH24GRBLL"],"is_locked":false,"subscribed":false},"blocks":[{"type":"rich_text","block_id":"uW5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"transpiler, please :p what runs in the end is native "},{"type":"emoji","name":"juliabouncing"}]}]}],"client_msg_id":"5b03fea0-5fd1-4bb9-95ca-40deb5dada62","edited":{"user":"UH24GRBLL","ts":"1616705942.000000"}},{"client_msg_id":"9dc0ba74-c076-459f-87ff-1f5085ea8e9a","type":"message","text":"We (over at CliMA) are _stoked_ to be upgrading to Julia 1.6 soon.\n\n```julia&gt; @time using ClimateMachine # Julia 1.5.4\n[ Info: Precompiling ClimateMachine [777c4786-024f-11e9-21a3-85d5d4106250]\n209.253125 seconds (76.28 M allocations: 4.394 GiB, 0.69% gc time)```\n```julia&gt; @time using ClimateMachine # Julia 1.6\n 11.711064 seconds (25.37 M allocations: 1.863 GiB, 5.02% gc time, 0.03% compilation time)```\nThank you, everyone responsible, for making this release awesome! :rocket:","user":"UEN48T0BT","ts":"1616711199.218700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oxL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We (over at CliMA) are "},{"type":"text","text":"stoked","style":{"italic":true}},{"type":"text","text":" to be upgrading to Julia 1.6 soon.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @time using ClimateMachine # Julia 1.5.4\n[ Info: Precompiling ClimateMachine [777c4786-024f-11e9-21a3-85d5d4106250]\n209.253125 seconds (76.28 M allocations: 4.394 GiB, 0.69% gc time)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @time using ClimateMachine # Julia 1.6\n 11.711064 seconds (25.37 M allocations: 1.863 GiB, 5.02% gc time, 0.03% compilation time)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you, everyone responsible, for making this release awesome! "},{"type":"emoji","name":"rocket"}]}]}],"thread_ts":"1616711199.218700","reply_count":6,"reply_users_count":3,"latest_reply":"1616711937.221000","reply_users":["U881D0W2C","U6N6VQE30","UEN48T0BT"],"is_locked":false,"subscribed":false,"reactions":[{"name":"open_mouth","users":["U0138UTB7A4","UPUBAM63X","U7THT3TM3","UE4DPAS4W","UGR3910CQ","U6795JH6H","U0179G7FG4F","UB7JS9CHF","UCZ7VBGUD"],"count":9},{"name":"rocket","users":["U0138UTB7A4","UDB26738Q","UPUBAM63X","UFHGN6TJ8","U680THK2S","U7THT3TM3","U66M57AN4","UE4DPAS4W","UGR3910CQ","UGU761DU2","U6788D83U","U6795JH6H","U0179G7FG4F","UB7JS9CHF","UHDQQ4GN6","UCZ7VBGUD"],"count":16}]},{"type":"message","text":"","files":[{"id":"F01SR0M4ZGU","created":1616770719,"timestamp":1616770719,"name":"Screenshot_20210326-105807.png","title":"Image from Android","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UDGT4PM41","editable":false,"size":199203,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01SR0M4ZGU/screenshot_20210326-105807.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01SR0M4ZGU/download/screenshot_20210326-105807.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_360.png","thumb_360_w":353,"thumb_360_h":360,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_480.png","thumb_480_w":470,"thumb_480_h":480,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_720.png","thumb_720_w":705,"thumb_720_h":720,"original_w":760,"original_h":776,"thumb_tiny":"AwAwAC++5IxjnNN3H0/nTpO1R49v0/8ArUAP3t6CjecdBTcH0/z+VGPb9P8A61AD1Yk84FPpihew/MU+gBrjOOP5Unlj1/lSvwuaj3HpkfpQA8RjPr+Apdi/3R+VM3HtilBc89fyoAdtX0H5U6mgt3Gfxp1ADWzt4zn2pnzZ/i/Wnt07fiaTavr+tABtf1/Wja/r+tG1fX9aXYPf86AAKe7GnU3YPf8AOnUAf//Z","permalink":"https://julialang.slack.com/files/UDGT4PM41/F01SR0M4ZGU/screenshot_20210326-105807.png","permalink_public":"https://slack-files.com/T68168MUP-F01SR0M4ZGU-c3de96b6d3","is_starred":false,"has_rich_preview":false}],"upload":true,"user":"UDGT4PM41","display_as_bot":false,"ts":"1616770720.233800","client_msg_id":"8e1b00b0-b0e8-4d90-b64f-47e4b487be8c"},{"type":"message","subtype":"thread_broadcast","text":"I know the phrase might be somewhat a bit overused by now, but I think the whole mantra of \"Runs like C, reads like Python\" is actually much much closer to reality with this release. Huge appreciation to everyone involved with Julia 1.6. :tada:","user":"US64J0NPQ","ts":"1616776423.235000","thread_ts":"1616770720.233800","root":{"type":"message","text":"","files":[{"id":"F01SR0M4ZGU","created":1616770719,"timestamp":1616770719,"name":"Screenshot_20210326-105807.png","title":"Image from Android","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UDGT4PM41","editable":false,"size":199203,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01SR0M4ZGU/screenshot_20210326-105807.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01SR0M4ZGU/download/screenshot_20210326-105807.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_360.png","thumb_360_w":353,"thumb_360_h":360,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_480.png","thumb_480_w":470,"thumb_480_h":480,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01SR0M4ZGU-247b5f8bf8/screenshot_20210326-105807_720.png","thumb_720_w":705,"thumb_720_h":720,"original_w":760,"original_h":776,"thumb_tiny":"AwAwAC++5IxjnNN3H0/nTpO1R49v0/8ArUAP3t6CjecdBTcH0/z+VGPb9P8A61AD1Yk84FPpihew/MU+gBrjOOP5Unlj1/lSvwuaj3HpkfpQA8RjPr+Apdi/3R+VM3HtilBc89fyoAdtX0H5U6mgt3Gfxp1ADWzt4zn2pnzZ/i/Wnt07fiaTavr+tABtf1/Wja/r+tG1fX9aXYPf86AAKe7GnU3YPf8AOnUAf//Z","permalink":"https://julialang.slack.com/files/UDGT4PM41/F01SR0M4ZGU/screenshot_20210326-105807.png","permalink_public":"https://slack-files.com/T68168MUP-F01SR0M4ZGU-c3de96b6d3","is_starred":false,"has_rich_preview":false}],"upload":true,"user":"UDGT4PM41","display_as_bot":false,"ts":"1616770720.233800","client_msg_id":"8e1b00b0-b0e8-4d90-b64f-47e4b487be8c","thread_ts":"1616770720.233800","reply_count":1,"reply_users_count":1,"latest_reply":"1616776423.235000","reply_users":["US64J0NPQ"],"is_locked":false,"subscribed":false},"blocks":[{"type":"rich_text","block_id":"Qy=FD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I know the phrase might be somewhat a bit overused by now, but I think the whole mantra of \"Runs like C, reads like Python\" is actually much much closer to reality with this release. Huge appreciation to everyone involved with Julia 1.6. "},{"type":"emoji","name":"tada"}]}]}],"client_msg_id":"a1c018e3-50ba-48f3-b28a-30281e126c73"},{"client_msg_id":"2a96bc33-646f-4d45-ba45-2d3138191618","type":"message","text":"Oh my goodness, 1.6 is ::chefs kiss::\nLove(!) the new precompile info. These stacktraces are amazing. The REPL is so snappy!","user":"UM4TSHKF1","ts":"1616897429.246500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s/1O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh my goodness, 1.6 is ::chefs kiss::\nLove(!) the new precompile info. These stacktraces are amazing. The REPL is so snappy!"}]}]}],"reactions":[{"name":"precomp_spinner","users":["UDB26738Q","U011V2YN59N","U0138UTB7A4","UEN48T0BT","U8MPCDJAY"],"count":5}]}]}