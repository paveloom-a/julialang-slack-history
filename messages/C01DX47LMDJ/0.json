{"cursor": 1, "messages": [{"client_msg_id":"b707b8c5-5bc7-4466-8c63-f51c5bd94c8f","type":"message","text":"So I've written code for those environments but passed them off to a 3rd party for final validation. I basically had to write hundreds of unit tests and display all mathematics","user":"UPUBAM63X","ts":"1613605354.098000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B3jP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I've written code for those environments but passed them off to a 3rd party for final validation. I basically had to write hundreds of unit tests and display all mathematics"}]}]}]},{"client_msg_id":"852681df-0e18-4e90-84c9-113e397c140c","type":"message","text":"Yeah, unit tests are good for catching some types of bugs. Contracts are good for catching bugs more on the design side.","user":"U6QGE7S86","ts":"1613605386.098600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=th","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, unit tests are good for catching some types of bugs. Contracts are good for catching bugs more on the design side."}]}]}]},{"client_msg_id":"a41bac1f-526b-4741-870f-27a03f63d01c","type":"message","text":"interesting thanks for explaining","user":"UPUBAM63X","ts":"1613605407.098800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XrJu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting thanks for explaining"}]}]}]},{"client_msg_id":"9b6b1e7e-fede-4c53-9c49-f687cb46294a","type":"message","text":"Specifically, unit tests are good for chcking that your implementation says it does aka, verifying your footgon \"shoots straight\".","user":"U6QGE7S86","ts":"1613605631.099600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ex/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Specifically, unit tests are good for chcking that your implementation says it does aka, verifying your footgon \"shoots straight\"."}]}]}]},{"client_msg_id":"281e4b1f-c962-41c4-8a66-9f738a279f60","type":"message","text":"Contracts and formal verification try to test \"You are aiming at the right thing with that.\"","user":"U6QGE7S86","ts":"1613605669.100400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"juoK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Contracts and formal verification try to test \"You are aiming at the right thing with that.\""}]}]}]},{"client_msg_id":"39ae6800-f0c2-42e8-bbc7-cc16d1207a21","type":"message","text":"I think I'll have to look into cases where it does something a unit test couldn't","user":"UPUBAM63X","ts":"1613605723.100800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"acXV+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I'll have to look into cases where it does something a unit test couldn't"}]}]}]},{"client_msg_id":"63aa7284-2acf-4674-9353-a85aff810e55","type":"message","text":"TLA+ isn't formally called \"design by contracts\" but it's a formal verification tool that was invaluable at production in AWS - they wrote a paper on it","user":"U6QGE7S86","ts":"1613605856.101700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c6s=Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"TLA+ isn't formally called \"design by contracts\" but it's a formal verification tool that was invaluable at production in AWS - they wrote a paper on it"}]}]}]},{"client_msg_id":"79fed1dc-8ce0-4916-829d-572435e79b36","type":"message","text":"```Side Benefit: A Better Way to Design SystemsTLA+ has been helping us shift to a better way of designing systems. Engineers naturally focus on designing the 'happy case' for a system, i.e. the processing pathin which no errors occur. This is understandable, as the happy case is by far the most common case. That codepath must solve the customer's problem, perform well, make efficient use of resources, and scale with the business; these are all significant challenges in their own right. Once the design for the happy case is done, the engineer then tries to think of \"what might go wrong?\",based on personalexperience and that of colleagues and reviewers. The engineer then adds mitigations for these classes of scenarios,prioritized by intuition and perhaps some statistics on the probability of occurrence. Almost always,the engineer stopswell short of handling 'extremely rare' combinations of events, as thereare too many such scenarios to imagine.```","user":"U6QGE7S86","ts":"1613605876.102000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+aQj","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Side Benefit: A Better Way to Design SystemsTLA+ has been helping us shift to a better way of designing systems. Engineers naturally focus on designing the 'happy case' for a system, i.e. the processing pathin which no errors occur. This is understandable, as the happy case is by far the most common case. That codepath must solve the customer's problem, perform well, make efficient use of resources, and scale with the business; these are all significant challenges in their own right. Once the design for the happy case is done, the engineer then tries to think of \"what might go wrong?\",based on personalexperience and that of colleagues and reviewers. The engineer then adds mitigations for these classes of scenarios,prioritized by intuition and perhaps some statistics on the probability of occurrence. Almost always,the engineer stopswell short of handling 'extremely rare' combinations of events, as thereare too many such scenarios to imagine."}]}]}]},{"client_msg_id":"e93ad06d-2b79-491a-b52b-3e406cb16faa","type":"message","text":"<https://lamport.azurewebsites.net/tla/formal-methods-amazon.pdf>","user":"U6QGE7S86","ts":"1613605883.102200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DtVdP","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://lamport.azurewebsites.net/tla/formal-methods-amazon.pdf"}]}]}]},{"client_msg_id":"3ebc88be-724b-4cb4-9d24-cce815d6bd3a","type":"message","text":"This is also a decent presentation on it","user":"U6QGE7S86","ts":"1613605910.102500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Zvp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is also a decent presentation on it"}]}]}]},{"client_msg_id":"981d99aa-7f57-4092-9787-1e883f788943","type":"message","text":"<https://www.youtube.com/watch?v=MYucYon2-lk>","user":"U6QGE7S86","ts":"1613605913.102700","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"Hillel Wayne - Beyond Unit Tests: Taking Your Testing to the Next Level - PyCon 2018","title_link":"https://www.youtube.com/watch?v=MYucYon2-lk","author_name":"PyCon 2018","author_link":"https://www.youtube.com/c/pycon2018","thumb_url":"https://i.ytimg.com/vi/MYucYon2-lk/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: Hillel Wayne - Beyond Unit Tests: Taking Your Testing to the Next Level - PyCon 2018","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/MYucYon2-lk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://www.youtube.com/watch?v=MYucYon2-lk","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://www.youtube.com/watch?v=MYucYon2-lk"}],"blocks":[{"type":"rich_text","block_id":"v9W=c","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.youtube.com/watch?v=MYucYon2-lk"}]}]}]},{"client_msg_id":"edcdaf1e-55ac-4bfa-af13-0d7723778295","type":"message","text":"okay I get it now","user":"UPUBAM63X","ts":"1613605973.103100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h83Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay I get it now"}]}]}]},{"client_msg_id":"e0d24b7c-e373-43e9-9cec-0259043d155f","type":"message","text":"For one, Rust's compiler can protect you against data races - but not livelocks, deadlocks or guarantee fault tolerance. You can validate those designs with TLA+ within ~80 lines of code.","user":"U6QGE7S86","ts":"1613606046.105400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EZ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For one, Rust's compiler can protect you against data races - but not livelocks, deadlocks or guarantee fault tolerance. You can validate those designs with TLA+ within ~80 lines of code."}]}]}]},{"client_msg_id":"e1b047ff-3fa6-47da-bb57-5b005e230744","type":"message","text":"so the idea is you might unit test that something is true, and that's cool, but in combination with 100k lines of code running it's possible that something else mutates state, or something, and the code isn't doing whats intended, despite the function working fine in the first place. So if you put bounds around the function via these contract things it's stronger than just testing lifeless code.","user":"UPUBAM63X","ts":"1613606062.106100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fvB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so the idea is you might unit test that something is true, and that's cool, but in combination with 100k lines of code running it's possible that something else mutates state, or something, and the code isn't doing whats intended, despite the function working fine in the first place. So if you put bounds around the function via these contract things it's stronger than just testing lifeless code."}]}]}],"reactions":[{"name":"100","users":["U6QGE7S86"],"count":1}]},{"client_msg_id":"0fe83d78-56b0-4b89-a0a9-607862d491a6","type":"message","text":"Famously, they have a line that goes like \"Why spend a couple hours learning TLA+ when you could spend months debugging production?\"","user":"U6QGE7S86","ts":"1613606111.106400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zUR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Famously, they have a line that goes like \"Why spend a couple hours learning TLA+ when you could spend months debugging production?\""}]}]}],"reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"4662bafa-7a98-40db-9a95-319190031ea0","type":"message","text":"Combing back to contarcts, yes, it's one of the tools that you can use. I don't know that you can specify global properties like \"no deadlocks will happen\" via contracts because I think those only reason locally about functions, but that's one of the benenfits.","user":"U6QGE7S86","ts":"1613606167.108000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oi61","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Combing back to contarcts, yes, it's one of the tools that you can use. I don't know that you can specify global properties like \"no deadlocks will happen\" via contracts because I think those only reason locally about functions, but that's one of the benenfits."}]}]}]},{"client_msg_id":"695a0c99-9e73-4503-b440-9457789dfd7c","type":"message","text":"so does Prusti mitigate the need for TLA+ or should it be used in conjunction?","user":"UPUBAM63X","ts":"1613606178.108300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"et5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so does Prusti mitigate the need for TLA+ or should it be used in conjunction?"}]}]}]},{"client_msg_id":"2a1a5d2d-237a-4ff8-8df3-1a21ff3e2933","type":"message","text":"Sorry the phrase is \"Weeks of debugging can save you hours of TLA+!\"","user":"U6QGE7S86","ts":"1613606206.108600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EJ9r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry the phrase is \"Weeks of debugging can save you hours of TLA+!\""}]}]}],"reactions":[{"name":"laughing","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"9eff3ad6-a3c0-4946-8ff8-a76db151d5aa","type":"message","text":"<https://www.youtube.com/watch?v=wjsI0lTSjIo&amp;t=708s>","user":"U6QGE7S86","ts":"1613606207.108800","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"SREcon20 Americas - Weeks of Debugging Can Save You Hours of TLA+","title_link":"https://www.youtube.com/watch?v=wjsI0lTSjIo&amp;t=708s","author_name":"USENIX","author_link":"https://www.youtube.com/c/UsenixOrg","thumb_url":"https://i.ytimg.com/vi/wjsI0lTSjIo/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: SREcon20 Americas - Weeks of Debugging Can Save You Hours of TLA+","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/wjsI0lTSjIo?feature=oembed&start=708&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://www.youtube.com/watch?v=wjsI0lTSjIo&amp;t=708s","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://www.youtube.com/watch?v=wjsI0lTSjIo&amp;t=708s"}],"blocks":[{"type":"rich_text","block_id":"IdHM","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.youtube.com/watch?v=wjsI0lTSjIo&t=708s"}]}]}]},{"client_msg_id":"1508960b-ce30-4bc2-9d15-772ab13f8b62","type":"message","text":"<@UPUBAM63X> Well, they're all different tools with different purposes.","user":"U6QGE7S86","ts":"1613606239.109500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ueeO","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" Well, they're all different tools with different purposes."}]}]}]},{"client_msg_id":"f75ddef0-74fa-4050-a03b-dfe4b215826f","type":"message","text":"It's good to verify a design with TLA+, but that doesn't guarantee your specification is correct. Actually checking that you implemented what you wanted to is a good case for unit testing.","user":"U6QGE7S86","ts":"1613606279.110400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lCLW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's good to verify a design with TLA+, but that doesn't guarantee your specification is correct. Actually checking that you implemented what you wanted to is a good case for unit testing."}]}]}]},{"client_msg_id":"00a27aff-d585-45f1-a4e4-7feff8302641","type":"message","text":"That's kinda the gist of HIllel Wayne's talk above, there's no one method that can solve all computer bugs, and no one prog language that can do it","user":"U6QGE7S86","ts":"1613606305.111000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hOU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's kinda the gist of HIllel Wayne's talk above, there's no one method that can solve all computer bugs, and no one prog language that can do it"}]}]}]},{"client_msg_id":"e4f5b7e1-8b40-432a-886d-625cd5b3910a","type":"message","text":"If you actually measure what helps most, it's minimizing stress and sleep deprivation for your programmers.","user":"U6QGE7S86","ts":"1613606323.111500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vRr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you actually measure what helps most, it's minimizing stress and sleep deprivation for your programmers."}]}]}]},{"client_msg_id":"6e197879-8f18-4b4f-a077-7bcac3a5c3a5","type":"message","text":"The rest are empirically measure to be ... a wash.","user":"U6QGE7S86","ts":"1613606333.111800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Viq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The rest are empirically measure to be ... a wash."}]}]}]},{"client_msg_id":"b04ef0db-e04e-4469-b721-338008230cd6","type":"message","text":"makes sense","user":"UPUBAM63X","ts":"1613606353.112000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NEg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"makes sense"}]}]}]},{"client_msg_id":"fc2c4edb-00e2-41e7-ae12-816a0b83deb2","type":"message","text":"I'll check these talks out later for sure :slightly_smiling_face:","user":"UPUBAM63X","ts":"1613606363.112300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YWOxB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll check these talks out later for sure "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"ca1b76c6-6085-4133-a4cd-b4ab3cd8c21c","type":"message","text":"HIllel is a great speaker, and he talsk about tests, fuzzing, contracts and TLA+ in that talk as a nice and brief overview","user":"U6QGE7S86","ts":"1613606387.112800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"39l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"HIllel is a great speaker, and he talsk about tests, fuzzing, contracts and TLA+ in that talk as a nice and brief overview"}]}]}]},{"client_msg_id":"2c401d85-e3f9-47ac-a88c-063cd88fbc39","type":"message","text":"the one about \"Weeks of Debugging\" is more of a live demo of using TLA+ to debug a multiple producer multiple consumer queue code written in C.","user":"U6QGE7S86","ts":"1613606413.113500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h=l+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the one about \"Weeks of Debugging\" is more of a live demo of using TLA+ to debug a multiple producer multiple consumer queue code written in C."}]}]}]},{"client_msg_id":"7efb1452-e72f-4c60-bd7b-40af7058ef88","type":"message","text":"Haskell using Rust as a watermark: <https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/>","user":"UDSU53PEG","ts":"1613649230.115600","team":"T68168MUP","attachments":[{"service_name":"Haskell Community","title":"[Call for Ideas] Forming a Technical Agenda","title_link":"https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/","text":"Hi all, With the Haskell Foundation’s board and executive director established and fundraising going well, it is time to pin down an agenda of technical priorities which the Foundation’s resources should support. In this thread I am asking for your help in brainstorming ideas for this agenda. Since its introduction Haskell Foundation has been framed primarily as an enabling institution. The Foundation is primarily to facilitate, not supplant, existing community efforts; while the Foundation ca...","fallback":"Haskell Community: [Call for Ideas] Forming a Technical Agenda","thumb_url":"https://discourse.haskell.org/uploads/default/original/1X/89166504e40f4869ea825dd70048017861ec8578.png","fields":[{"title":"Reading time","value":"6 mins :clock2:","short":true},{"title":"Likes","value":"34 :heart:","short":true}],"ts":1613523163,"from_url":"https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/","thumb_width":512,"thumb_height":512,"service_icon":"https://discourse.haskell.org/uploads/default/optimized/1X/8df5f8aba60b473c9ac204abffa76879e8c09229_2_180x180.png","id":1,"original_url":"https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/"}],"blocks":[{"type":"rich_text","block_id":"KKYt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haskell using Rust as a watermark: "},{"type":"link","url":"https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/"}]}]}]},{"client_msg_id":"87282be5-44db-4658-937b-b8031b27f517","type":"message","text":"<https://security.googleblog.com/2021/02/mitigating-memory-safety-issues-in-open.html>","user":"UDSU53PEG","ts":"1613752552.117000","team":"T68168MUP","attachments":[{"service_name":"Google Online Security Blog","title":"Mitigating Memory Safety Issues in Open Source Software","title_link":"https://security.googleblog.com/2021/02/mitigating-memory-safety-issues-in-open.html","text":"Posted by Dan Lorenc, Infrastructure Security Team Memory-safety vulnerabilities have dominated the security field for years and often lead ...","fallback":"Google Online Security Blog: Mitigating Memory Safety Issues in Open Source Software","thumb_url":"http://2.bp.blogspot.com/-7bZ5EziliZQ/VynIS9F7OAI/AAAAAAAASQ0/BJFntXCAntstZe6hQuo5KTrhi5Dyz9yHgCK4B/s1600/googlelogo_color_200x200.png","from_url":"https://security.googleblog.com/2021/02/mitigating-memory-safety-issues-in-open.html","thumb_width":200,"thumb_height":200,"service_icon":"https://security.googleblog.com/favicon.ico","id":1,"original_url":"https://security.googleblog.com/2021/02/mitigating-memory-safety-issues-in-open.html"}],"blocks":[{"type":"rich_text","block_id":"lg1Yd","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://security.googleblog.com/2021/02/mitigating-memory-safety-issues-in-open.html"}]}]}]},{"client_msg_id":"288e2282-a2b0-41b0-9927-88f1576d40a6","type":"message","text":"<@U6QGE7S86> is there something like this for Julia?","user":"U013V2CFZAN","ts":"1613767130.117900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cCU","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6QGE7S86"},{"type":"text","text":" is there something like this for Julia?"}]}]}],"thread_ts":"1613767130.117900","reply_count":2,"reply_users_count":2,"latest_reply":"1613769372.118200","reply_users":["U013V2CFZAN","U6QGE7S86"],"subscribed":false},{"client_msg_id":"3c8d4878-c9ec-435d-b8ff-0b84f7297b09","type":"message","text":"Pretty interesting discussion about Rust vs Julia for science here on the Rust subreddit: <https://www.reddit.com/r/rust/comments/lo6buo/advice_needed_is_rust_worth_learning_for_me/>","user":"U7HAYKY9X","ts":"1613901486.000700","team":"T68168MUP","attachments":[{"service_name":"reddit","title":"Advice needed: is Rust worth learning (for me)?","title_link":"https://www.reddit.com/r/rust/comments/lo6buo/advice_needed_is_rust_worth_learning_for_me/","text":"Dear Rustaceans, first a quick background. I'm a computational chemist by trade which means I spend my working time in front of a screen. A few...","fallback":"reddit: Advice needed: is Rust worth learning (for me)?","thumb_url":"https://www.redditstatic.com/new-icon.png","from_url":"https://www.reddit.com/r/rust/comments/lo6buo/advice_needed_is_rust_worth_learning_for_me/","thumb_width":256,"thumb_height":256,"service_icon":"http://www.redditstatic.com/desktop2x/img/favicon/apple-icon-57x57.png","id":1,"original_url":"https://www.reddit.com/r/rust/comments/lo6buo/advice_needed_is_rust_worth_learning_for_me/"}],"blocks":[{"type":"rich_text","block_id":"E46j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pretty interesting discussion about Rust vs Julia for science here on the Rust subreddit: "},{"type":"link","url":"https://www.reddit.com/r/rust/comments/lo6buo/advice_needed_is_rust_worth_learning_for_me/"}]}]}]},{"client_msg_id":"dd3926d6-541b-4dd5-9847-d1b0e0ce8139","type":"message","text":"```Darksonn\n19 hours ago\nI have worked with both Rust and Julia, so I can probably give some perspective. Generally Julia is very good for simple scripts and data manipulation, but as your project becomes more and more serious, I find that Rust becomes a better and better choice, whereas Julia scales poorly to larger projects.```\n:face_with_raised_eyebrow:","user":"U01CQTKB86N","ts":"1613902385.001400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9e4b","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Darksonn\n19 hours ago\nI have worked with both Rust and Julia, so I can probably give some perspective. Generally Julia is very good for simple scripts and data manipulation, but as your project becomes more and more serious, I find that Rust becomes a better and better choice, whereas Julia scales poorly to larger projects."}]},{"type":"rich_text_section","elements":[{"type":"emoji","name":"face_with_raised_eyebrow"}]}]}]},{"client_msg_id":"3a43f3bc-9ef5-4ba2-9cdb-61b9dca97a3d","type":"message","text":"Isn't that true, though? Static analysis gets more and more important the larger your project is","user":"U7HAYKY9X","ts":"1613903876.002200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z5ZM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Isn't that true, though? Static analysis gets more and more important the larger your project is"}]}]}]},{"client_msg_id":"4332ecf8-de50-4a1e-aedf-89f72395e376","type":"message","text":"You’re probably right, but does the problem come from having too large monolithic programs? Maybe they could be written as a collection of microservices written in a dynamic language?","user":"U01CQTKB86N","ts":"1613907377.004000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wo=M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You’re probably right, but does the problem come from having too large monolithic programs? Maybe they could be written as a collection of microservices written in a dynamic language?"}]}]}]},{"client_msg_id":"0c915e1c-53ba-4845-8c47-1563248ac4ee","type":"message","text":"I have a counter-example to me: Adobe Photoshop. You probably couldn’t write that efficiently as microservices because there would be additional (host internal) network overhead.","user":"U01CQTKB86N","ts":"1613907465.006900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4TPfj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a counter-example to me: Adobe Photoshop. You probably couldn’t write that efficiently as microservices because there would be additional (host internal) network overhead."}]}]}]},{"client_msg_id":"c1ea50f6-a041-4894-9ecc-dd7c24b92401","type":"message","text":"I think it comes from just having a large code base that it becomes hard to have an overview over. You make a change, and if you have static analysis, you immediately get a list of places to fix after that change. Not needed if the codebase is so small you can keep it all in your head.","user":"U7HAYKY9X","ts":"1613907480.007400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rjt=l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it comes from just having a large code base that it becomes hard to have an overview over. You make a change, and if you have static analysis, you immediately get a list of places to fix after that change. Not needed if the codebase is so small you can keep it all in your head."}]}]}]},{"client_msg_id":"fdc914bb-bd69-4bde-bc86-1e1b7325a7c0","type":"message","text":"So I'm pretty new to Rust but enjoying it so far(take it with a grain of salt).\n\nFor making failure resilient products operating at scale - it seems like Rust has a serious edge despite its weaknesses (weakish ecosystem). I'm not convinced Rust would be an \"easy\" choice for those tasks, but it is a good one. It's fast as sin, and doesn't let you down. It manages complexity very well and let's you statically link subprojects.\n\nJulia is amazing for this domain of \"we have a serious mathy thing, 1-2 people, and we need it to be delivered quickly and be performant\". Pretty confident there isn't better tool for those scenarios. It's a dreamboat for academia, and small lone wolfs in industry.","user":"UPUBAM63X","ts":"1613909111.013200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tSQ5H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I'm pretty new to Rust but enjoying it so far(take it with a grain of salt).\n\nFor making failure resilient products operating at scale - it seems like Rust has a serious edge despite its weaknesses (weakish ecosystem). I'm not convinced Rust would be an \"easy\" choice for those tasks, but it is a good one. It's fast as sin, and doesn't let you down. It manages complexity very well and let's you statically link subprojects.\n\nJulia is amazing for this domain of \"we have a serious mathy thing, 1-2 people, and we need it to be delivered quickly and be performant\". Pretty confident there isn't better tool for those scenarios. It's a dreamboat for academia, and small lone wolfs in industry."}]}]}]},{"client_msg_id":"c1685b6a-7947-4844-97d4-0806ce7d7635","type":"message","text":"As it currently stands there are cases where you would prefer C++ to Julia in industry, no doubt about it. Doesn't mean Julia is bad or something. But in those cases, it seems more and more like Rust is a better choice than C++ because its less verbose, and doesn't let you do bad things unless you tell it you're smarter than the compiler (most people probably aren't - at least not on average).","user":"UPUBAM63X","ts":"1613909409.015300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X/Rv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As it currently stands there are cases where you would prefer C++ to Julia in industry, no doubt about it. Doesn't mean Julia is bad or something. But in those cases, it seems more and more like Rust is a better choice than C++ because its less verbose, and doesn't let you do bad things unless you tell it you're smarter than the compiler (most people probably aren't - at least not on average)."}]}]}]},{"client_msg_id":"980948E6-094A-4F7B-AC7F-94EA4ACFA03F","type":"message","text":"I think static analysis becomes more important when there are few unit tests. And that sadly is the problem with a lot of software. What Julia taught me is that I must write small functions and build a good test coverage in order to scale. And to me that’s a good thing. ","user":"U8T0YV7QC","ts":"1613929260.018600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lFH8z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think static analysis becomes more important when there are few unit tests. And that sadly is the problem with a lot of software. What Julia taught me is that I must write small functions and build a good test coverage in order to scale. And to me that’s a good thing. "}]}]}],"reactions":[{"name":"100","users":["U013V2CFZAN"],"count":1}]},{"client_msg_id":"044cd99c-e91b-4ead-b995-821985704798","type":"message","text":"I think I figured out Rust a bit... So 90% of the pain with rust is in choosing data structures and abstractions. But once you move past that its actually really easy and fun to write.","user":"UPUBAM63X","ts":"1613995317.020600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UCd7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I figured out Rust a bit... So 90% of the pain with rust is in choosing data structures and abstractions. But once you move past that its actually really easy and fun to write."}]}]}]},{"client_msg_id":"7f34f15c-8f31-4d22-a26d-b76af899d995","type":"message","text":"Current top comment which I agree with:\n```lzutao 2 days ago\nI'm a Rust advocate but julia might fit your usecases better in data analysis.```","user":"UDSU53PEG","ts":"1614018993.021300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n+h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Current top comment which I agree with:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"lzutao 2 days ago\nI'm a Rust advocate but julia might fit your usecases better in data analysis."}]}]}],"thread_ts":"1614018993.021300","reply_count":1,"reply_users_count":1,"latest_reply":"1614020054.025300","reply_users":["U6QGE7S86"],"subscribed":false},{"client_msg_id":"08a3e81e-f4a4-4a2c-bb87-f4ae78be5040","type":"message","text":"I think it's interesting how in modern time we expect the \"weirdest\" languages to do everything. A lot of the older professors in CS had backgrounds in Prolog, LISP, and Perl which at the time were precise almost task-specific takes on research programming. A lot of them are genuinely surprised when it was Python and C++ to become widely used for everything conceivable in science. So I think it's a very modern view to think we can find the next ideal language for research when in reality the framework for selecting a language should probably be much more individual project focused. Especially I think researchers should be very selfish in choosing the tools they will rely on to succeed or not.","user":"UDSU53PEG","ts":"1614020236.028100","team":"T68168MUP","edited":{"user":"UDSU53PEG","ts":"1614020255.000000"},"blocks":[{"type":"rich_text","block_id":"WuEbd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it's interesting how in modern time we expect the \"weirdest\" languages to do everything. A lot of the older professors in CS had backgrounds in Prolog, LISP, and Perl which at the time were precise almost task-specific takes on research programming. A lot of them are genuinely surprised when it was Python and C++ to become widely used for everything conceivable in science. So I think it's a very modern view to think we can find the next ideal language for research when in reality the framework for selecting a language should probably be much more individual project focused. Especially I think researchers should be very selfish in choosing the tools they will rely on to succeed or not."}]}]}],"thread_ts":"1614020236.028100","reply_count":5,"reply_users_count":2,"latest_reply":"1614021213.031400","reply_users":["U7HAYKY9X","UDSU53PEG"],"subscribed":false},{"client_msg_id":"b57b205f-71dd-412b-8453-4ffb3431ac33","type":"message","text":"P.S. Ruby is a famous example of a dynamically typed language where large teams of developers had problems scaling out growing apps, it's probably a major contributor of what essentially killed it, as well a lot of Ruby devs are now interested in Rust.","user":"UDSU53PEG","ts":"1614020858.030600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SH1x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"P.S. Ruby is a famous example of a dynamically typed language where large teams of developers had problems scaling out growing apps, it's probably a major contributor of what essentially killed it, as well a lot of Ruby devs are now interested in Rust."}]}]}]},{"client_msg_id":"ae46812f-6e16-4a0b-a37a-cdd0d77dc269","type":"message","text":"<https://news.ycombinator.com/item?id=26203853>","user":"UC81ESVH6","ts":"1614104305.032900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eCrc6","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://news.ycombinator.com/item?id=26203853"}]}]}]},{"client_msg_id":"6d67412d-4717-45b0-8dd0-d4b003104b0f","type":"message","text":"It links to <https://blogs.gentoo.org/mgorny/2021/02/19/the-modern-packagers-security-nightmare/> which is a tirade against static linking, pinning dependencies, and vendering dependencies","user":"URVFJB60N","ts":"1614104759.033500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nP39p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It links to "},{"type":"link","url":"https://blogs.gentoo.org/mgorny/2021/02/19/the-modern-packagers-security-nightmare/"},{"type":"text","text":" which is a tirade against static linking, pinning dependencies, and vendering dependencies"}]}]}]},{"client_msg_id":"4527b716-9798-4038-b954-c50770783b55","type":"message","text":"I mean sure package managers introduce security issues. So does downloading software. I don't really care, to be honest. People who are that worried about it lock down everything and inspect machine code on airgapped computers. Everyone else is like \"thank the dieties I didn't have to manually install 400 deps with Make\"","user":"UPUBAM63X","ts":"1614111124.040000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2fPOq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean sure package managers introduce security issues. So does downloading software. I don't really care, to be honest. People who are that worried about it lock down everything and inspect machine code on airgapped computers. Everyone else is like \"thank the dieties I didn't have to manually install 400 deps with Make\""}]}]}],"thread_ts":"1614111124.040000","reply_count":1,"reply_users_count":1,"latest_reply":"1614111796.040100","reply_users":["U7HAYKY9X"],"subscribed":false},{"client_msg_id":"a205ecba-e7d8-479b-b579-323fb01c9b0e","type":"message","text":"These are the same people who have no answer to Julia's problem, which is that LLVM doesn't backport fixes but also doesn't maintain the performance of ORC-JIT so Julia can't freely upgrade and has to ship with LLVM patches.","user":"U69J94HT9","ts":"1614182337.043200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kV5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"These are the same people who have no answer to Julia's problem, which is that LLVM doesn't backport fixes but also doesn't maintain the performance of ORC-JIT so Julia can't freely upgrade and has to ship with LLVM patches."}]}]}]},{"client_msg_id":"a018aff1-42db-4a2f-b6dc-bdf6b082bcf3","type":"message","text":"<@UPUBAM63X> to reignite the previous topic <https://twitter.com/FerrousSystems/status/1364647693096779778?s=19|https://twitter.com/FerrousSystems/status/1364647693096779778?s=19>","user":"UUCN877U5","ts":"1614193033.044000","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/FerrousSystems|@FerrousSystems>: We are happy to fully announce our effort around <https://twitter.com/rustlang|@rustlang> for mission and safety-critical environments: it is now called Ferrocene and created by our co-company <https://twitter.com/criticalsection|@criticalsection>. <https://twitter.com/criticalsection/status/1364647424577466372>","ts":1614192338,"author_name":"FerrousSystems","author_link":"https://twitter.com/FerrousSystems/status/1364647693096779778","author_icon":"https://pbs.twimg.com/profile_images/1121784110173659136/1PAf0_9F_normal.png","author_subname":"@FerrousSystems","text":"We are happy to fully announce our effort around <https://twitter.com/rustlang|@rustlang> for mission and safety-critical environments: it is now called Ferrocene and created by our co-company <https://twitter.com/criticalsection|@criticalsection>. <https://twitter.com/criticalsection/status/1364647424577466372>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/FerrousSystems/status/1364647693096779778?s=19","id":1,"original_url":"https://twitter.com/FerrousSystems/status/1364647693096779778?s=19","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"},{"fallback":"<https://twitter.com/criticalsection|@criticalsection>: Let's make safe even safer: Ferrocene, a toolchain for <https://twitter.com/rustlang|@rustlang> in mission and safety-critical environments has started its engines and driving towards the first qualification targets! Read our full update here: <https://ferrous-systems.com/blog/ferrocene-update-three-the-road/>","ts":1614192274,"author_name":"Critical Section","author_link":"https://twitter.com/criticalsection/status/1364647424577466372","author_icon":"https://pbs.twimg.com/profile_images/1348040151252008960/f45P-taA_normal.jpg","author_subname":"@criticalsection","text":"Let's make safe even safer: Ferrocene, a toolchain for <https://twitter.com/rustlang|@rustlang> in mission and safety-critical environments has started its engines and driving towards the first qualification targets! Read our full update here: <https://ferrous-systems.com/blog/ferrocene-update-three-the-road/>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/criticalsection/status/1364647424577466372","indent":true,"color":"32BBF3","id":2,"footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"WBo","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" to reignite the previous topic "},{"type":"link","url":"https://twitter.com/FerrousSystems/status/1364647693096779778?s=19","text":"https://twitter.com/FerrousSystems/status/1364647693096779778?s=19"}]}]}]},{"client_msg_id":"1eb2af1f-bcb0-4a35-841d-444d695661e3","type":"message","text":"<https://fosdem.org/2021/schedule/event/a_journey_to_performance/>","user":"UDSU53PEG","ts":"1614946261.048000","team":"T68168MUP","attachments":[{"title":"FOSDEM 2021 - A journey to performance","title_link":"https://fosdem.org/2021/schedule/event/a_journey_to_performance/","fallback":"FOSDEM 2021 - A journey to performance","image_url":"https://fosdem.org/2021/assets/style/logo-gear-7204a6874eb0128932db10ff4030910401ac06f4e907f8b4a40da24ba592b252.png","from_url":"https://fosdem.org/2021/schedule/event/a_journey_to_performance/","image_width":200,"image_height":200,"image_bytes":9557,"service_icon":"https://fosdem.org/2021/apple-touch-icon.png","service_name":"fosdem.org","id":1,"original_url":"https://fosdem.org/2021/schedule/event/a_journey_to_performance/"}],"blocks":[{"type":"rich_text","block_id":"P06+=","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://fosdem.org/2021/schedule/event/a_journey_to_performance/"}]}]}]},{"client_msg_id":"3aebf8c6-8bc9-45d6-a8eb-9ef366e4c042","type":"message","text":"are people still using Mercurial? :thinking_face:","user":"U013V2CFZAN","ts":"1614952197.048500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lXi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are people still using Mercurial? "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1614952197.048500","reply_count":1,"reply_users_count":1,"latest_reply":"1614953434.049800","reply_users":["U014QLCKTDE"],"subscribed":false},{"client_msg_id":"074e7ac4-91c5-430d-b59d-d22592b38899","type":"message","text":"\"running `hg status` in a Mozilla working copy moved from 1.1s to 0.04s, a ×25 improvement\" I guess at least Mozilla","user":"UDSU53PEG","ts":"1614952396.049700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AWF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"running "},{"type":"text","text":"hg status","style":{"code":true}},{"type":"text","text":" in a Mozilla working copy moved from 1.1s to 0.04s, a ×25 improvement\" I guess at least Mozilla"}]}]}]},{"client_msg_id":"e8a01944-1941-465e-9349-9de6110139e3","type":"message","text":"wrote my first Rust application for work today. Felt weird but good. Pretty verbose for what it does, but I have zero worries about it. Like... It won't memory leak everywhere, I didn't screw up any pointers...","user":"UPUBAM63X","ts":"1615595965.002200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PJl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"wrote my first Rust application for work today. Felt weird but good. Pretty verbose for what it does, but I have zero worries about it. Like... It won't memory leak everywhere, I didn't screw up any pointers..."}]}]}]},{"client_msg_id":"65036354-15f9-436c-b2a4-6f236323ed2f","type":"message","text":"Yeah there's definitely a nice \"empowerment\" feel that Rust gives.","user":"U6QGE7S86","ts":"1615599663.002600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R4MC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah there's definitely a nice \"empowerment\" feel that Rust gives."}]}]}]},{"client_msg_id":"dcc7bccc-3f06-41cd-9872-d5033a325b95","type":"message","text":"Kinda similar to Julia when it comes to code composability, but oriented towards safety and performance.","user":"U6QGE7S86","ts":"1615599681.003100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JBv2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Kinda similar to Julia when it comes to code composability, but oriented towards safety and performance."}]}]}]},{"client_msg_id":"cd9fcfbf-452f-4cf4-8ab1-9b78cf01037e","type":"message","text":"<@UPUBAM63X> could you explain roughly what it does?","user":"U011V2YN59N","ts":"1615605566.004200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vf8","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" could you explain roughly what it does?"}]}]}]},{"client_msg_id":"e9ecc864-de6a-4b02-9c91-3a5f4c242275","type":"message","text":"rust is a lot of things, and \"verbose\" is definitely one of them","user":"U011V2YN59N","ts":"1615605586.004900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"klWCq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"rust is a lot of things, and \"verbose\" is definitely one of them"}]}]}]},{"client_msg_id":"6f2479b7-2d91-4207-93cf-d5ee91135153","type":"message","text":"I hear some of that verbosity is nice when having to refactor code though","user":"U6QGE7S86","ts":"1615606447.005200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P7dnt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I hear some of that verbosity is nice when having to refactor code though"}]}]}]},{"client_msg_id":"6371284c-7cd8-465e-8ac2-9ba473b3c948","type":"message","text":"makes it easier to organize code and tests to pass","user":"U6QGE7S86","ts":"1615606467.005600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VBM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"makes it easier to organize code and tests to pass"}]}]}]},{"client_msg_id":"34980a03-c2a7-4a36-b70e-c71917f11ee3","type":"message","text":"I can't say much other than it's a CLI tool for emulating some basic IO (nothing really cool). Really its a tool I needed to stand up a demo. I have to present a bunch of futile crap to some C level employees of a few big companies, and in order to do that I have to emulate a lot of things otherwise I risk splosions during the demo.","user":"UPUBAM63X","ts":"1615634331.007700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G/wF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can't say much other than it's a CLI tool for emulating some basic IO (nothing really cool). Really its a tool I needed to stand up a demo. I have to present a bunch of futile crap to some C level employees of a few big companies, and in order to do that I have to emulate a lot of things otherwise I risk splosions during the demo."}]}]}]},{"client_msg_id":"44018f08-8018-41a9-afa6-323111abb9e2","type":"message","text":"Yea so the verbosity thing is a little bit of a \"cope\" as in people are just coping with it and finding positive things in my opinion. The nice thing about the verbosity, is, Rust doesn't have an insane amount of syntax features, so yea even if chunks of code get verbose it's not hard to refactor.","user":"UPUBAM63X","ts":"1615634495.009200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dbi0K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea so the verbosity thing is a little bit of a \"cope\" as in people are just coping with it and finding positive things in my opinion. The nice thing about the verbosity, is, Rust doesn't have an insane amount of syntax features, so yea even if chunks of code get verbose it's not hard to refactor."}]}]}]},{"client_msg_id":"2336fc93-a7ad-4f8b-b56f-6b40f73a9832","type":"message","text":"TIL you can match on tuples and add if statements :open_mouth:\nIE:`(FnState::Unknown, Token::BackPipe) if unknown_vec.len() == 1 =&gt; {`\nis a valid match branch :open_mouth: :open_mouth: :open_mouth: . Love it.","user":"UPUBAM63X","ts":"1615655720.011800","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1615655734.000000"},"blocks":[{"type":"rich_text","block_id":"kBPdC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"TIL you can match on tuples and add if statements "},{"type":"emoji","name":"open_mouth"},{"type":"text","text":"\nIE:"},{"type":"text","text":"(FnState::Unknown, Token::BackPipe) if unknown_vec.len() == 1 => {","style":{"code":true}},{"type":"text","text":"\nis a valid match branch "},{"type":"emoji","name":"open_mouth"},{"type":"text","text":" "},{"type":"emoji","name":"open_mouth"},{"type":"text","text":" "},{"type":"emoji","name":"open_mouth"},{"type":"text","text":" . Love it."}]}]}]},{"client_msg_id":"cc513936-fb8d-4f08-9365-5082a6ab9d87","type":"message","text":"<https://nikomatsakis.github.io/wg-async-foundations/vision/how_to_vision/status_quo.html>","user":"UDSU53PEG","ts":"1616015191.000300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0Hw","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://nikomatsakis.github.io/wg-async-foundations/vision/how_to_vision/status_quo.html"}]}]}]},{"client_msg_id":"ffcbf986-816c-43fb-9b98-3835e50f3336","type":"message","text":"<https://blog.rust-lang.org/2021/03/18/async-vision-doc.html>","user":"UDSU53PEG","ts":"1616088233.000500","team":"T68168MUP","attachments":[{"title":"Building a shared vision for Async Rust | Rust Blog","title_link":"https://blog.rust-lang.org/2021/03/18/async-vision-doc.html","text":"Empowering everyone to build reliable and efficient software.","fallback":"Building a shared vision for Async Rust | Rust Blog","thumb_url":"https://www.rust-lang.org/static/images/rust-social.jpg","from_url":"https://blog.rust-lang.org/2021/03/18/async-vision-doc.html","thumb_width":1024,"thumb_height":1024,"service_icon":"https://blog.rust-lang.org/images/apple-touch-icon.png","service_name":"blog.rust-lang.org","id":1,"original_url":"https://blog.rust-lang.org/2021/03/18/async-vision-doc.html"}],"blocks":[{"type":"rich_text","block_id":"WNRR","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://blog.rust-lang.org/2021/03/18/async-vision-doc.html"}]}]}]},{"client_msg_id":"543ba3bd-4477-4f5d-ac3e-8bc9689ad424","type":"message","text":"The crabs are coming!","user":"U6QGE7S86","ts":"1616120658.001700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YY/xu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The crabs are coming!"}]}]}]},{"client_msg_id":"5f011721-3b87-41bc-8b79-fbd31b347e68","type":"message","text":"<https://mobile.twitter.com/chvest/status/1372538475665297410|https://mobile.twitter.com/chvest/status/1372538475665297410>","user":"U6QGE7S86","ts":"1616120662.001900","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/chvest|@chvest>: Looks like support for Rust kernel modules has been merged to linux-next: <https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git/tree/rust> (check out the comment in module\\.rs) /via <https://twitter.com/Lukasaoz|@Lukasaoz>","ts":1616073647,"author_name":"Chris Vest","author_link":"https://twitter.com/chvest/status/1372538475665297410","author_icon":"https://pbs.twimg.com/profile_images/1207208211062890496/o9kYaufC_normal.jpg","author_subname":"@chvest","text":"Looks like support for Rust kernel modules has been merged to linux-next: <https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git/tree/rust> (check out the comment in module\\.rs) /via <https://twitter.com/Lukasaoz|@Lukasaoz>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://mobile.twitter.com/chvest/status/1372538475665297410","id":1,"original_url":"https://mobile.twitter.com/chvest/status/1372538475665297410","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"jcIy","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://mobile.twitter.com/chvest/status/1372538475665297410","text":"https://mobile.twitter.com/chvest/status/1372538475665297410"}]}]}]},{"type":"message","text":"","files":[{"id":"F01RSGP49RT","created":1616169588,"timestamp":1616169588,"name":"155387209f4cd09b.png","title":"155387209f4cd09b.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UDSU53PEG","editable":false,"size":523804,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01RSGP49RT/155387209f4cd09b.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01RSGP49RT/download/155387209f4cd09b.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01RSGP49RT-7bd73f3f37/155387209f4cd09b_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01RSGP49RT-7bd73f3f37/155387209f4cd09b_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01RSGP49RT-7bd73f3f37/155387209f4cd09b_360.png","thumb_360_w":360,"thumb_360_h":352,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01RSGP49RT-7bd73f3f37/155387209f4cd09b_480.png","thumb_480_w":480,"thumb_480_h":469,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01RSGP49RT-7bd73f3f37/155387209f4cd09b_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01RSGP49RT-7bd73f3f37/155387209f4cd09b_720.png","thumb_720_w":720,"thumb_720_h":704,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01RSGP49RT-7bd73f3f37/155387209f4cd09b_800.png","thumb_800_w":800,"thumb_800_h":782,"original_w":802,"original_h":784,"thumb_tiny":"AwAuADCf5vUflSYbH3vyFJv+Yrlcjtnml+bPVaYhMnHJf8qUMoHX86Oe7D8qUDn7x+lAC7l9RRkeoo49qTK57ZzigCJoondiScnrzSeTF0z+tLuG85I/KgEeq474FAxPIiOQP51J5a71fnKjA5pu7ABBX64pQzN0YflQAn2ePGOfTrQkCIwIzkepp+cDnrilzQBEx5wSfyoJ75PPTinbec5P50bP9pvzpACnsck/SgvhwOOvejZ/tN+dJ5YznJoYA7Fm+XqPQ08HEYyeajdVB6c03J4yelToM//Z","permalink":"https://julialang.slack.com/files/UDSU53PEG/F01RSGP49RT/155387209f4cd09b.png","permalink_public":"https://slack-files.com/T68168MUP-F01RSGP49RT-caa32a2fda","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"UDSU53PEG","display_as_bot":false,"ts":"1616169594.002400"},{"type":"message","text":"","files":[{"id":"F01S87VE3L1","created":1616169627,"timestamp":1616169627,"name":"a5b7083d20ceff7f.jpg","title":"a5b7083d20ceff7f.jpg","mimetype":"image/jpeg","filetype":"jpg","pretty_type":"JPEG","user":"UDSU53PEG","editable":false,"size":31950,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01S87VE3L1/a5b7083d20ceff7f.jpg","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01S87VE3L1/download/a5b7083d20ceff7f.jpg","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01S87VE3L1-1e1976c78c/a5b7083d20ceff7f_64.jpg","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01S87VE3L1-1e1976c78c/a5b7083d20ceff7f_80.jpg","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01S87VE3L1-1e1976c78c/a5b7083d20ceff7f_360.jpg","thumb_360_w":360,"thumb_360_h":206,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01S87VE3L1-1e1976c78c/a5b7083d20ceff7f_480.jpg","thumb_480_w":480,"thumb_480_h":274,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01S87VE3L1-1e1976c78c/a5b7083d20ceff7f_160.jpg","original_w":700,"original_h":400,"thumb_tiny":"AwAbADC+zkMRSb29P0pH+8acWFAhPMb2o8xvakbljQuAeaAF8xvalVyWANJuWhf9ZxQAOOTjrUeH/H9Ks0YoKIgBjkc01gdvygZqfFGKBFYB8jjI75qVQNwp+B6UYA7UAf/Z","permalink":"https://julialang.slack.com/files/UDSU53PEG/F01S87VE3L1/a5b7083d20ceff7f.jpg","permalink_public":"https://slack-files.com/T68168MUP-F01S87VE3L1-a19816fc2c","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"UDSU53PEG","display_as_bot":false,"ts":"1616169646.002700"},{"client_msg_id":"a6d7b589-f62a-4a40-acc3-fefde03387d0","type":"message","text":"In the long run, we will all turn into crabs: <https://en.wikipedia.org/wiki/Carcinisation>","user":"UGKHXS9J6","ts":"1616170379.003300","team":"T68168MUP","attachments":[{"image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/South_eastern_Pacific_species_of_Petrolisthes%2C_Allopetrolisthes%2C_and_Liopetrolisthes_%28Porcellanidae%29.jpg/1200px-South_eastern_Pacific_species_of_Petrolisthes%2C_Allopetrolisthes%2C_and_Liopetrolisthes_%28Porcellanidae%29.jpg","image_width":1200,"image_height":830,"image_bytes":217031,"title":"Carcinisation","title_link":"https://en.wikipedia.org/wiki/Carcinisation","from_url":"https://en.wikipedia.org/wiki/Carcinisation","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"Carcinisation (or carcinization) is an example of convergent evolution in which a crustacean evolves into a crab-like form from a non-crab-like form. The term was introduced into evolutionary biology by L. A. Borradaile, who described it as \"one of the many attempts of Nature to evolve a crab\". Most carcinised crustaceans belong to the order Anomura.","fallback":"wikipedia: Carcinisation","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.wikipedia.org/wiki/Carcinisation"}],"blocks":[{"type":"rich_text","block_id":"FAFn2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the long run, we will all turn into crabs: "},{"type":"link","url":"https://en.wikipedia.org/wiki/Carcinisation"}]}]}],"reactions":[{"name":"exploding_head","users":["UDSU53PEG"],"count":1}]},{"client_msg_id":"440db925-91e9-4681-b577-e903aeb567ca","type":"message","text":"A new Rust and a new Julia on the same day, how exciting!","user":"URVFJB60N","ts":"1616686654.007100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aX/t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A new Rust and a new Julia on the same day, how exciting!"}]}]}]},{"client_msg_id":"521e345a-facf-4423-b4b6-4f8ae78688bd","type":"message","text":"yeah const generics is a big deal","user":"UDSU53PEG","ts":"1616699214.007600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cvca","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah const generics is a big deal"}]}]}]},{"client_msg_id":"be9e18f0-7e6b-4d08-bd91-2e6a09eb2c43","type":"message","text":"yeah they kinda just got a compile time generated function for ints, chars and bools.","user":"U6QGE7S86","ts":"1616699346.007900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dR=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah they kinda just got a compile time generated function for ints, chars and bools."}]}]}]},{"client_msg_id":"6e743572-e54d-4b9b-85f8-d45ff72d05f7","type":"message","text":"pretty neat","user":"U6QGE7S86","ts":"1616699350.008100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HOG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pretty neat"}]}]}]},{"client_msg_id":"7f23fa74-0529-40fd-bb35-df4d5d38a703","type":"message","text":":rocket:","user":"UDSU53PEG","ts":"1616699366.008300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7HFnt","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"rocket"}]}]}]},{"client_msg_id":"0719a892-a9c8-4bed-823b-45a2679a85f5","type":"message","text":"here was the announcement with links to the release notes: <https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html>","user":"UDSU53PEG","ts":"1616699456.008700","team":"T68168MUP","attachments":[{"title":"Announcing Rust 1.51.0 | Rust Blog","title_link":"https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html","text":"Empowering everyone to build reliable and efficient software.","fallback":"Announcing Rust 1.51.0 | Rust Blog","thumb_url":"https://www.rust-lang.org/static/images/rust-social.jpg","from_url":"https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html","thumb_width":1024,"thumb_height":1024,"service_icon":"https://blog.rust-lang.org/images/apple-touch-icon.png","service_name":"blog.rust-lang.org","id":1,"original_url":"https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html"}],"blocks":[{"type":"rich_text","block_id":"Fer","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"here was the announcement with links to the release notes: "},{"type":"link","url":"https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html"}]}]}]},{"client_msg_id":"2cb1d51b-2024-4021-92f4-14f5693ebc43","type":"message","text":"<https://blog.adamchalmers.com/grids-2/>","user":"UDSU53PEG","ts":"1616700622.009000","team":"T68168MUP","attachments":[{"title":"Grids in Rust, part 2: const generics","title_link":"https://blog.adamchalmers.com/grids-2/","text":"Thoughts, mostly about tech","fallback":"Grids in Rust, part 2: const generics","from_url":"https://blog.adamchalmers.com/grids-2/","service_name":"blog.adamchalmers.com","id":1,"original_url":"https://blog.adamchalmers.com/grids-2/"}],"blocks":[{"type":"rich_text","block_id":"N6=","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://blog.adamchalmers.com/grids-2/"}]}]}]},{"client_msg_id":"15185665-aae0-4d95-8189-0a313af54ee5","type":"message","text":"<https://www.youtube.com/watch?v=N4mZn9ZczDM>","user":"UDSU53PEG","ts":"1616700824.009300","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"Walkthrough + Demo of my Browser-Based FM Synthesizer","title_link":"https://www.youtube.com/watch?v=N4mZn9ZczDM","author_name":"CaseyC104","author_link":"https://www.youtube.com/user/CaseyC104","thumb_url":"https://i.ytimg.com/vi/N4mZn9ZczDM/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: Walkthrough + Demo of my Browser-Based FM Synthesizer","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/N4mZn9ZczDM?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://www.youtube.com/watch?v=N4mZn9ZczDM","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://www.youtube.com/watch?v=N4mZn9ZczDM"}],"blocks":[{"type":"rich_text","block_id":"rZZ0s","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.youtube.com/watch?v=N4mZn9ZczDM"}]}]}]},{"client_msg_id":"2840e0a2-74ef-42b5-a609-2988f1eea14b","type":"message","text":"In Rust, there are several crates that yields a generational arena; How is this solved in Julia?\nMy interpretation of it: A container that yields keys that are valid forever, even when resized and shuffled.","user":"UUCN877U5","ts":"1616762636.011100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PRErI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In Rust, there are several crates that yields a generational arena; How is this solved in Julia?\nMy interpretation of it: A container that yields keys that are valid forever, even when resized and shuffled."}]}]}]},{"client_msg_id":"57f63f20-fa71-43a0-9c44-e7236c02cdf1","type":"message","text":"New fasterthanlime article for the weekend","user":"U6QGE7S86","ts":"1616899270.013000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"keP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"New fasterthanlime article for the weekend"}]}]}]},{"client_msg_id":"c69bce98-a843-4984-a241-a830c2633103","type":"message","text":"<https://fasterthanli.me/articles/pin-and-suffering|https://fasterthanli.me/articles/pin-and-suffering>","user":"U6QGE7S86","ts":"1616899274.013100","team":"T68168MUP","attachments":[{"service_name":"fasterthanli.me","title":"Pin and suffering - fasterthanli.me","title_link":"https://fasterthanli.me/articles/pin-and-suffering","text":"I'd like to think that my understanding of &amp;quot;async Rust&amp;quot; has increased over the past year or so. I'm 100% onboard with the basic principle: I would like to handle tho...","fallback":"fasterthanli.me: Pin and suffering - fasterthanli.me","thumb_url":"https://fasterthanli.me/img/logo-square.png","from_url":"https://fasterthanli.me/articles/pin-and-suffering","thumb_width":256,"thumb_height":256,"service_icon":"https://fasterthanli.me/img/logo-round.png","id":1,"original_url":"https://fasterthanli.me/articles/pin-and-suffering"}],"blocks":[{"type":"rich_text","block_id":"rJ2r","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://fasterthanli.me/articles/pin-and-suffering","text":"https://fasterthanli.me/articles/pin-and-suffering"}]}]}]},{"client_msg_id":"f13a4716-ff39-4279-8b4f-d982a1e09167","type":"message","text":"<https://www.vortexa.com/insight/using-rust-to-corrode-insane-python-run-times>","user":"UDSU53PEG","ts":"1617275425.015200","team":"T68168MUP","attachments":[{"title":"Using Rust to corrode insane Python run-times","title_link":"https://www.vortexa.com/insight/using-rust-to-corrode-insane-python-run-times","text":"There are times when adopting a standard approach just isn’t good enough. This post is about making minimal changes for maximum effect where it matters.","fallback":"Using Rust to corrode insane Python run-times","image_url":"https://www.vortexa.com/hubfs/faris-mohammed-nYGVN45DOHg-unsplash.jpg#keepProtocol","image_width":333,"image_height":250,"from_url":"https://www.vortexa.com/insight/using-rust-to-corrode-insane-python-run-times","image_bytes":2645114,"service_icon":"https://www.vortexa.com/favicon.ico","service_name":"vortexa.com","id":1,"original_url":"https://www.vortexa.com/insight/using-rust-to-corrode-insane-python-run-times"}],"blocks":[{"type":"rich_text","block_id":"7IMo","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.vortexa.com/insight/using-rust-to-corrode-insane-python-run-times"}]}]}]},{"client_msg_id":"a56da3be-c3dd-4ee1-a769-e1c2b7cf4fbd","type":"message","text":"<https://pypi.org/project/result/>","user":"UDSU53PEG","ts":"1617629073.019300","team":"T68168MUP","attachments":[{"service_name":"PyPI","title":"result","title_link":"https://pypi.org/project/result/","text":"A rust-like result type for Python","fallback":"PyPI: result","image_url":"https://pypi.org/static/images/twitter.90915068.jpg","from_url":"https://pypi.org/project/result/","image_width":250,"image_height":250,"image_bytes":13245,"service_icon":"https://pypi.org/static/images/favicon.6a76275d.ico","id":1,"original_url":"https://pypi.org/project/result/"}],"blocks":[{"type":"rich_text","block_id":"iDVEp","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://pypi.org/project/result/"}]}]}]},{"client_msg_id":"cd002a33-750d-4e70-91fb-00e73ce39bea","type":"message","text":"\"As this is Python and not Rust, you will lose some of the advantages that it brings, like elegant combinations with the match statement. On the other side, you don’t have to return semantically unclear tuples anymore.\"","user":"UDSU53PEG","ts":"1617629573.019600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gb+O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"As this is Python and not Rust, you will lose some of the advantages that it brings, like elegant combinations with the match statement. On the other side, you don’t have to return semantically unclear tuples anymore.\""}]}]}]},{"client_msg_id":"b0b3084b-3cf2-4f49-978a-f12ca8d0627d","type":"message","text":"so it's a lose-win situation with Python :laughing:","user":"UDSU53PEG","ts":"1617629598.020200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qyF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so it's a lose-win situation with Python "},{"type":"emoji","name":"laughing"}]}]}]},{"client_msg_id":"2fc7edcb-2c5d-4822-a3e8-c289153fad85","type":"message","text":"It is, but atleast it allows for more state-ful thinking in python code.","user":"UUCN877U5","ts":"1617631908.020700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dsjw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is, but atleast it allows for more state-ful thinking in python code."}]}]}]},{"client_msg_id":"3922302e-9cfa-4af4-90fa-73c4fb9049d9","type":"message","text":"I was thinking of ways to implement the `?`  operator in Julia last night. Wasn't super fruitful tbh, but man it would be really nice for handling missing values","user":"UPUBAM63X","ts":"1617633111.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8IOC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was thinking of ways to implement the "},{"type":"text","text":"?","style":{"code":true}},{"type":"text","text":"  operator in Julia last night. Wasn't super fruitful tbh, but man it would be really nice for handling missing values"}]}]}]},{"client_msg_id":"aa562f1f-4dcd-41a2-9cce-2fe26eb57869","type":"message","text":"might make for an interesting RFC in Julia lang though... Is there a low cost way to handle result/option types of situations conveniently? Like yea good Julia design does let you have this for free - but, is there something syntactically worth investing in. I'm kind of on the fence about it tbh","user":"UPUBAM63X","ts":"1617634183.026000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N25Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"might make for an interesting RFC in Julia lang though... Is there a low cost way to handle result/option types of situations conveniently? Like yea good Julia design does let you have this for free - but, is there something syntactically worth investing in. I'm kind of on the fence about it tbh"}]}]}]},{"client_msg_id":"bdb948d9-4c85-473d-843a-1d54bcdffb7c","type":"message","text":"I was thinking of just dumping macros that wrap default cases or jump steps in a compute DAG if a missing get's hit...","user":"UPUBAM63X","ts":"1617634273.027400","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1617634280.000000"},"blocks":[{"type":"rich_text","block_id":"eNv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was thinking of just dumping macros that wrap default cases or jump steps in a compute DAG if a missing get's hit..."}]}]}]},{"client_msg_id":"9da3697b-c9c2-403f-a558-4b43a89662c9","type":"message","text":"realistically `Result` is Rust's answer to `NULL` and since Julia doesn't rely on that in the sense it's used in C/C++/systems the outcome for Julia might not be that great","user":"UDSU53PEG","ts":"1617634292.027800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xLJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"realistically "},{"type":"text","text":"Result","style":{"code":true}},{"type":"text","text":" is Rust's answer to "},{"type":"text","text":"NULL","style":{"code":true}},{"type":"text","text":" and since Julia doesn't rely on that in the sense it's used in C/C++/systems the outcome for Julia might not be that great"}]}]}]},{"client_msg_id":"a3a0595f-ec14-47df-9e6c-eda5703ce2a9","type":"message","text":"I completely agree with that. My reasoning is, if I am doing a bunch of data horking and a missing value flys in, in a place it hasn't before, I now have to write branches in MD to handle it. nothing major but it does happen, and sometimes it stinks.","user":"UPUBAM63X","ts":"1617634346.029100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gthYE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I completely agree with that. My reasoning is, if I am doing a bunch of data horking and a missing value flys in, in a place it hasn't before, I now have to write branches in MD to handle it. nothing major but it does happen, and sometimes it stinks."}]}]}]},{"client_msg_id":"918cec4b-e813-4f10-8ebe-2cb8e87b1ab4","type":"message","text":"`NULL` isn't specific to missing data, it's more fundamental to the CPU than regular data","user":"UDSU53PEG","ts":"1617634411.029800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0tE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NULL","style":{"code":true}},{"type":"text","text":" isn't specific to missing data, it's more fundamental to the CPU than regular data"}]}]}]},{"client_msg_id":"8c72c2e7-c373-431e-8731-17644f078e47","type":"message","text":"I'm aware of that","user":"UPUBAM63X","ts":"1617634418.030000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EfWNP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm aware of that"}]}]}]},{"client_msg_id":"bee63052-e703-45fb-9d26-d068ec354175","type":"message","text":"of course jus' saying","user":"UDSU53PEG","ts":"1617634433.030200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nvt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"of course jus' saying"}]}]}]},{"client_msg_id":"86052ec1-1efa-4420-85e2-b72cb6888ec7","type":"message","text":"So instead of Result, consider the `Option` type. So we don't capture an error we capture a `None`","user":"UPUBAM63X","ts":"1617634471.031100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hmDqT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So instead of Result, consider the "},{"type":"text","text":"Option","style":{"code":true}},{"type":"text","text":" type. So we don't capture an error we capture a "},{"type":"text","text":"None","style":{"code":true}}]}]}]},{"client_msg_id":"bfaa3690-4a28-4c4c-ba85-a3e6e8777b60","type":"message","text":"None is kinda close to Missing, not identical, but similar","user":"UPUBAM63X","ts":"1617634499.031500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AV3M=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"None is kinda close to Missing, not identical, but similar"}]}]}]},{"client_msg_id":"d0fe25e5-ace6-456d-9f08-4b91c719af77","type":"message","text":"both `Option` and `Result` are enums, I think the complication is in FFI where you have C-libs passing `NULL`","user":"UDSU53PEG","ts":"1617634585.032300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KO6rH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"both "},{"type":"text","text":"Option","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Result","style":{"code":true}},{"type":"text","text":" are enums, I think the complication is in FFI where you have C-libs passing "},{"type":"text","text":"NULL","style":{"code":true}}]}]}]},{"client_msg_id":"ab4db3f6-0d5c-40cd-9856-734c12ebb917","type":"message","text":"you never use `NULL` in Rust but you have two types specifically designed to handle it","user":"UDSU53PEG","ts":"1617634620.032900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YFD8S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you never use "},{"type":"text","text":"NULL","style":{"code":true}},{"type":"text","text":" in Rust but you have two types specifically designed to handle it"}]}]}]},{"client_msg_id":"69628c01-84d4-41b3-8de0-e2d0fe7152a9","type":"message","text":"because at the systems level `NULL` is being propagated by C/C++","user":"UDSU53PEG","ts":"1617634647.033400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wovmu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because at the systems level "},{"type":"text","text":"NULL","style":{"code":true}},{"type":"text","text":" is being propagated by C/C++"}]}]}]},{"client_msg_id":"c89cd958-18f6-4997-b1e5-6b134c7f9fed","type":"message","text":"`None`  being an enum-variant of the `Option`","user":"UDSU53PEG","ts":"1617634698.034200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+GY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"None","style":{"code":true}},{"type":"text","text":"  being an enum-variant of the "},{"type":"text","text":"Option","style":{"code":true}}]}]}]},{"client_msg_id":"1b7402da-200e-4a72-bc89-edfa7259ea16","type":"message","text":"Yea and I appreciate that but ignoring FFI, I'm talking about a means to handle missing values with a monad control buddy","user":"UPUBAM63X","ts":"1617634703.034400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jxVG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea and I appreciate that but ignoring FFI, I'm talking about a means to handle missing values with a monad control buddy"}]}]}]},{"client_msg_id":"15365ede-39df-46fb-8f2f-26d7d4da30a4","type":"message","text":"which is a common pattern in Rust IE: `Some` and `None`","user":"UPUBAM63X","ts":"1617634725.035000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BkZ7a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which is a common pattern in Rust IE: "},{"type":"text","text":"Some","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"None","style":{"code":true}}]}]}]},{"client_msg_id":"dc609725-174e-46db-bbd6-8fbf268d570c","type":"message","text":"right but a variant is not data or a type","user":"UDSU53PEG","ts":"1617634734.035200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PSD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right but a variant is not data or a type"}]}]}],"reactions":[{"name":"heavy_check_mark","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"da1b3619-d720-43fd-b918-16be4887c314","type":"message","text":"and it's `Some(T)` and `None` where `T` is a generic data type","user":"UDSU53PEG","ts":"1617634765.035900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YpV3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it's "},{"type":"text","text":"Some(T)","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"None","style":{"code":true}},{"type":"text","text":" where "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" is a generic data type"}]}]}]},{"client_msg_id":"6a773d22-48dc-4b57-856a-63555c742b6d","type":"message","text":"Sure, now is that paradigm useful to Julia? For instance we currently have to support union types of `Missing`  + `whatever_other_types` to thwart those issues. This leads to sometimes slightly awkward promotion mechanisms","user":"UPUBAM63X","ts":"1617634852.037200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7TtKZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure, now is that paradigm useful to Julia? For instance we currently have to support union types of "},{"type":"text","text":"Missing","style":{"code":true}},{"type":"text","text":"  + "},{"type":"text","text":"whatever_other_types","style":{"code":true}},{"type":"text","text":" to thwart those issues. This leads to sometimes slightly awkward promotion mechanisms"}]}]}]},{"client_msg_id":"b71d959e-b0dc-4f96-8699-b047730aa0b0","type":"message","text":"yeah, it would be a step towards making Julia less expressive at least","user":"UDSU53PEG","ts":"1617634916.037800","team":"T68168MUP","edited":{"user":"UDSU53PEG","ts":"1617634931.000000"},"blocks":[{"type":"rich_text","block_id":"VuC9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, it would be a step towards making Julia less expressive at least"}]}]}]},{"client_msg_id":"007ead6c-9033-4f38-a667-64f6370cabf2","type":"message","text":"but I could be missing something","user":"UDSU53PEG","ts":"1617634964.039100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SC=A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I could be missing something"}]}]}]},{"client_msg_id":"d939f046-0ada-4dab-a155-e3cae8a7e4b7","type":"message","text":"thats kinda what I'm worried about, would it just be a one off that wrecks some of the \"do whatever fast\" mentality.  But I dunno, sometimes handling real data flying down the line leads to things popping and breaking in places you really wished it wouldn't","user":"UPUBAM63X","ts":"1617634990.039600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B3Ed","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thats kinda what I'm worried about, would it just be a one off that wrecks some of the \"do whatever fast\" mentality.  But I dunno, sometimes handling real data flying down the line leads to things popping and breaking in places you really wished it wouldn't"}]}]}]},{"client_msg_id":"d181cffe-e25a-4bfa-9ada-fdbb7f14f9af","type":"message","text":"and then you break idiomatic julia by having to boilerplate weird types for large operations. Like not the end of the world at all","user":"UPUBAM63X","ts":"1617635019.040200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xmf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and then you break idiomatic julia by having to boilerplate weird types for large operations. Like not the end of the world at all"}]}]}]},{"client_msg_id":"1be9ab69-c4ec-49f9-bf2c-bfd5f6225d22","type":"message","text":"but it does make me think \"is there a better way?\"","user":"UPUBAM63X","ts":"1617635030.040500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tcs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but it does make me think \"is there a better way?\""}]}]}]},{"client_msg_id":"9966b817-1a08-4df4-b07e-0bda456acde8","type":"message","text":"and I don't have an answer to that lol","user":"UPUBAM63X","ts":"1617635040.040800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KzM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and I don't have an answer to that lol"}]}]}]},{"client_msg_id":"8125a508-e8bc-41b9-99c9-c8a8f9111b42","type":"message","text":"huh... seems like 1.6 smoothed out some of the Missing types conversion complaints I used to have? maybe its a moot point anyways...","user":"UPUBAM63X","ts":"1617635451.041800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6lp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"huh... seems like 1.6 smoothed out some of the Missing types conversion complaints I used to have? maybe its a moot point anyways..."}]}]}]},{"client_msg_id":"18e1f8e8-dbc8-4c4f-b938-772266c12072","type":"message","text":"reads the release notes","user":"UDSU53PEG","ts":"1617635905.042000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s+V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reads the release notes"}]}]}]},{"client_msg_id":"5e48cdf4-a7cb-4eac-ae27-1a139664128d","type":"message","text":"<https://doc.rust-lang.org/reference/expressions/enum-variant-expr.html>","user":"UDSU53PEG","ts":"1617636177.042200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"evy","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://doc.rust-lang.org/reference/expressions/enum-variant-expr.html"}]}]}]},{"client_msg_id":"6e9a2b3b-f606-4f16-af1a-ca859b874f56","type":"message","text":"enums are ZCA in Rust like structs","user":"UDSU53PEG","ts":"1617636263.042900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l0f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"enums are ZCA in Rust like structs"}]}]}]},{"client_msg_id":"12da0f97-cc26-4de1-8f15-c88b193b5a7c","type":"message","text":"`Result` and `Option` are also enums","user":"UDSU53PEG","ts":"1617636290.043200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f+MJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Result","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Option","style":{"code":true}},{"type":"text","text":" are also enums"}]}]}]},{"client_msg_id":"117cfc12-1313-41a7-a890-ffb2f633a561","type":"message","text":"<https://doc.rust-lang.org/beta/embedded-book/static-guarantees/zero-cost-abstractions.html>","user":"UDSU53PEG","ts":"1617636330.043400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mlhi","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://doc.rust-lang.org/beta/embedded-book/static-guarantees/zero-cost-abstractions.html"}]}]}]},{"client_msg_id":"3551f947-2c6a-492a-863f-7523abacf540","type":"message","text":"this is all compiler not runtime","user":"UDSU53PEG","ts":"1617636378.043700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"204","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is all compiler not runtime"}]}]}]},{"client_msg_id":"ff3a8c31-6153-4691-880c-8ee3b46664c8","type":"message","text":"<https://www.youtube.com/watch?v=imbZbGnnNd4>","user":"UDSU53PEG","ts":"1617640113.044000","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"Const generics and compile time code","title_link":"https://www.youtube.com/watch?v=imbZbGnnNd4","author_name":"Context Free","author_link":"https://www.youtube.com/c/ContextFree","thumb_url":"https://i.ytimg.com/vi/imbZbGnnNd4/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: Const generics and compile time code","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/imbZbGnnNd4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://www.youtube.com/watch?v=imbZbGnnNd4","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://www.youtube.com/watch?v=imbZbGnnNd4"}],"blocks":[{"type":"rich_text","block_id":"DP0U","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.youtube.com/watch?v=imbZbGnnNd4"}]}]}]}]}