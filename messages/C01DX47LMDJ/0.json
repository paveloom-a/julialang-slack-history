{"cursor": 0, "messages": [{"client_msg_id":"c32a87f0-8b79-448c-ab17-7063b9976016","type":"message","text":"Rusts type system is pretty slick.... Still learning it but its pretty dang flexible","user":"UPUBAM63X","ts":"1607910160.161100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gWm1O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rusts type system is pretty slick.... Still learning it but its pretty dang flexible"}]}]}]},{"client_msg_id":"4cc1169f-c71d-444e-bf71-8dc7da3985ce","type":"message","text":"a lot of Rust seems to be sharing ideas with Julia - pretty nice.","user":"UPUBAM63X","ts":"1607910269.161500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kbck","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a lot of Rust seems to be sharing ideas with Julia - pretty nice."}]}]}]},{"client_msg_id":"585ebe4d-c872-483b-a993-8351d9965b15","type":"message","text":"but iter_mut = :heart:","user":"UPUBAM63X","ts":"1607910314.161900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qE8o9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but iter_mut = "},{"type":"emoji","name":"heart"}]}]}]},{"client_msg_id":"ff5b0181-4f67-4472-a870-cfe9159c8fe2","type":"message","text":"and these docs are the best docs I have legitimately ever seen.","user":"UPUBAM63X","ts":"1607910512.162500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dk/w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and these docs are the best docs I have legitimately ever seen."}]}]}],"thread_ts":"1607910512.162500","reply_count":9,"reply_users_count":4,"latest_reply":"1607990372.165200","reply_users":["U6QGE7S86","UPUBAM63X","U7HAYKY9X","U69J94HT9"],"subscribed":false},{"client_msg_id":"fdc27d8d-d2f0-4b67-baca-03a34acbcf07","type":"message","text":"Has anybody had any luck with using rust for numerics? I've started a project to solve the Schrodinger equation in 2D using a finite difference method. I've managed to get it to render in the browser via wasm-pack, but the problem I am having is that the solution doesn't seem to be stable. I don't know much in terms of numerical methods, can someone throw me a link on how to debug numerical code?","user":"U01DVH6K1SS","ts":"1608003200.176800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6wii/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Has anybody had any luck with using rust for numerics? I've started a project to solve the Schrodinger equation in 2D using a finite difference method. I've managed to get it to render in the browser via wasm-pack, but the problem I am having is that the solution doesn't seem to be stable. I don't know much in terms of numerical methods, can someone throw me a link on how to debug numerical code?"}]}]}]},{"client_msg_id":"fa655475-932f-45f7-a56a-95aa9f5419de","type":"message","text":"`-Zself-profile` always good or `-Z dump-mir={all,MIR-body of interest} -Z dump-mir-dataflow` to see desugared code, maybe `-Zsplit-dwarf=split` , also you can play around with `-Zmir-opt-level` for the above","user":"UDSU53PEG","ts":"1608010073.181100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bFs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"-Zself-profile","style":{"code":true}},{"type":"text","text":" always good or "},{"type":"text","text":"-Z dump-mir={all,MIR-body of interest} -Z dump-mir-dataflow","style":{"code":true}},{"type":"text","text":" to see desugared code, maybe "},{"type":"text","text":"-Zsplit-dwarf=split","style":{"code":true}},{"type":"text","text":" , also you can play around with "},{"type":"text","text":"-Zmir-opt-level","style":{"code":true}},{"type":"text","text":" for the above"}]}]}]},{"client_msg_id":"f4ab80e1-e8b8-4109-9398-8ac903eaebe8","type":"message","text":"You can always view the MIR in the playpen as well","user":"UDSU53PEG","ts":"1608010305.181500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mryci","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can always view the MIR in the playpen as well"}]}]}]},{"client_msg_id":"894cd4da-3f8c-4b1e-aca6-5d24bf1ce9bb","type":"message","text":"or the LLVM what ever is better for you","user":"UDSU53PEG","ts":"1608010678.181900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"90p9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or the LLVM what ever is better for you"}]}]}]},{"client_msg_id":"1ebd5b97-7bae-437d-acd7-dc5f60c171ca","type":"message","text":"assuming you're not using cranelift in which case I don't think playpen has the ability to view the lowered representation","user":"UDSU53PEG","ts":"1608011731.182700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fe=w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"assuming you're not using cranelift in which case I don't think playpen has the ability to view the lowered representation"}]}]}]},{"client_msg_id":"288eafb5-4ebd-473b-bd8e-a12a5227e0ca","type":"message","text":"anyone know how to make an impl with trait bounds on one parameter of a multiply parameteric struct? something like this?\n```impl&lt;T: i16+i32+i64, U:anything&gt; NewImplDooDad&lt;T, U&gt; {\n}```","user":"UPUBAM63X","ts":"1608033410.182900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pTL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"anyone know how to make an impl with trait bounds on one parameter of a multiply parameteric struct? something like this?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"impl<T: i16+i32+i64, U:anything> NewImplDooDad<T, U> {\n}"}]}]}],"thread_ts":"1608033410.182900","reply_count":7,"reply_users_count":3,"latest_reply":"1608219287.198900","reply_users":["U7HAYKY9X","UPUBAM63X","UUCN877U5"],"subscribed":false},{"client_msg_id":"a9057324-81b2-40cb-8728-11a24323ab49","type":"message","text":"`U` is not a parameter it's a generic data type","user":"UDSU53PEG","ts":"1608062713.185200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sGkI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"U","style":{"code":true}},{"type":"text","text":" is not a parameter it's a generic data type"}]}]}]},{"client_msg_id":"91e17142-06a9-4733-b755-e5337b1f77d2","type":"message","text":"`T` is also not a parameter","user":"UDSU53PEG","ts":"1608062726.185400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=S3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" is also not a parameter"}]}]}],"reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"acd7ca58-dc25-404d-a0b0-ba2295f54957","type":"message","text":"man I am fighting with how to do control flow in rust... Not having mutlidispatch is fine, but I'm really struggling with how to cope with generic types... You can't dispatch on them, you can't bound them.","user":"UPUBAM63X","ts":"1608083366.188400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XxXJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"man I am fighting with how to do control flow in rust... Not having mutlidispatch is fine, but I'm really struggling with how to cope with generic types... You can't dispatch on them, you can't bound them."}]}]}],"thread_ts":"1608083366.188400","reply_count":16,"reply_users_count":2,"latest_reply":"1608086414.192500","reply_users":["UGKHXS9J6","UPUBAM63X"],"subscribed":false},{"client_msg_id":"36ed9b44-8d34-43f2-b74f-607c48fee014","type":"message","text":"Rust is starting to come off as the most complicated programming language I've ever tried to learn","user":"UPUBAM63X","ts":"1608168774.193600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y3U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rust is starting to come off as the most complicated programming language I've ever tried to learn"}]}]}],"thread_ts":"1608168774.193600","reply_count":17,"reply_users_count":4,"latest_reply":"1608237218.205000","reply_users":["U8R9JE0D6","UPUBAM63X","U6QGE7S86","U7HAYKY9X"],"subscribed":false},{"client_msg_id":"3dc7c68d-b93d-4463-b569-eef08bc2a0fa","type":"message","text":"Thanks for all the help everyone, I think I decided to switch over to GoLang for learning. It seems to hit a sweet spot between developer ease, and performance. Eventually I may go back to trying to learn Rust - but, its just extremely difficult for me to learn.","user":"UPUBAM63X","ts":"1608202432.198300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U6ErC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for all the help everyone, I think I decided to switch over to GoLang for learning. It seems to hit a sweet spot between developer ease, and performance. Eventually I may go back to trying to learn Rust - but, its just extremely difficult for me to learn."}]}]}],"thread_ts":"1608202432.198300","reply_count":22,"reply_users_count":5,"latest_reply":"1608237515.205200","reply_users":["UUCN877U5","U013V2CFZAN","UPUBAM63X","U8R9JE0D6","UDSU53PEG"],"subscribed":false},{"client_msg_id":"324a73c0-8efa-4ae8-9668-bda410550086","type":"message","text":"<https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html>","user":"UDSU53PEG","ts":"1608231223.202000","team":"T68168MUP","attachments":[{"title":"Rust Survey 2020 Results | Rust Blog","title_link":"https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html","text":"Empowering everyone to build reliable and efficient software.","fallback":"Rust Survey 2020 Results | Rust Blog","thumb_url":"https://www.rust-lang.org/static/images/rust-social.jpg","from_url":"https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html","thumb_width":1024,"thumb_height":1024,"service_icon":"https://blog.rust-lang.org/images/apple-touch-icon.png","service_name":"blog.rust-lang.org","id":1,"original_url":"https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html"}],"blocks":[{"type":"rich_text","block_id":"DUkEH","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html"}]}]}]},{"client_msg_id":"eaa14bf4-31b5-4c43-8b1d-315221421700","type":"message","text":"<https://arxiv.org/abs/2012.08961>","user":"UDSU53PEG","ts":"1608233011.202300","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Verified Rust Monitors for Lola Specifications","title_link":"https://arxiv.org/abs/2012.08961","text":"The safety of cyber-physical systems rests on the correctness of their monitoring mechanisms. This is problematic if the specification of the monitor is implemented manually or interpreted by...","fallback":"arXiv.org: Verified Rust Monitors for Lola Specifications","from_url":"https://arxiv.org/abs/2012.08961","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/2012.08961"}],"blocks":[{"type":"rich_text","block_id":"hoY9","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://arxiv.org/abs/2012.08961"}]}]}],"reactions":[{"name":"cool","users":["U8R9JE0D6","UUCN877U5"],"count":2}]},{"type":"message","subtype":"thread_broadcast","text":"I can't think of any benefits to learning Golang other then in the case where it's a specific job requirement, there are dozens of more interesting learning languages, Rust included","user":"UDSU53PEG","ts":"1608233390.202600","thread_ts":"1608202432.198300","root":{"client_msg_id":"3dc7c68d-b93d-4463-b569-eef08bc2a0fa","type":"message","text":"Thanks for all the help everyone, I think I decided to switch over to GoLang for learning. It seems to hit a sweet spot between developer ease, and performance. Eventually I may go back to trying to learn Rust - but, its just extremely difficult for me to learn.","user":"UPUBAM63X","ts":"1608202432.198300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U6ErC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for all the help everyone, I think I decided to switch over to GoLang for learning. It seems to hit a sweet spot between developer ease, and performance. Eventually I may go back to trying to learn Rust - but, its just extremely difficult for me to learn."}]}]}],"thread_ts":"1608202432.198300","reply_count":22,"reply_users_count":5,"latest_reply":"1608237515.205200","reply_users":["UUCN877U5","U013V2CFZAN","UPUBAM63X","U8R9JE0D6","UDSU53PEG"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"/SD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can't think of any benefits to learning Golang other then in the case where it's a specific job requirement, there are dozens of more interesting learning languages, Rust included"}]}]}],"client_msg_id":"ebd826f7-0a65-4bba-ba28-69e048401eae"},{"client_msg_id":"be8185bb-ff77-496c-a9b3-f29bd99fb9ff","type":"message","text":"Okay I want you all to see what made me start to 180 from Rust.\n\nHere's some code I wrote, figure, if I can't make a graph, I can't use a language.\n```struct SaturatedEdge&lt;T1, T2&gt;{\n    from: T1, to: T1, wt: T2,\n}\nstruct Edge&lt;T&gt;{\n    from: T, to: T,\n}\ntrait SimpleGraph&lt;T&gt; {\n    fn addNode(&amp;self, e: T);\n}\nstruct Graph&lt;T&gt;{\n    nodes: i64, adj: Vec&lt;Vec&lt;T&gt;&gt;,\n}\nimpl SimpleGraph&lt;T&gt; for Graph&lt;T&gt;{\n    fn addNode(&amp;self, e: Edge&lt;T&gt;) {\n        self.adj[e.from].push(<http://e.to|e.to>);\n    }\n}```\nHere's how someone fixed it.\n```trait SimpleGraph&lt;T&gt; {\n    fn add_node(&amp;mut self, e: T);\n}\nimpl&lt;T&gt; SimpleGraph&lt;T&gt; for Graph&lt;T&gt;\n    where T:Copy, usize: From&lt;T&gt;\n    {\n    fn add_node(&amp;mut self, e: T) {\n        self.adj[usize::from(e)].push(e);\n    }\n}```\nBasically my brain exploded. I don't think I am at a place where I can think like this right now(&amp;mut is fine but the Copy, usize thing is :exploding_head::ahhhhhhh:)","user":"UPUBAM63X","ts":"1608237925.207100","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1608238021.000000"},"blocks":[{"type":"rich_text","block_id":"CQQU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay I want you all to see what made me start to 180 from Rust.\n\nHere's some code I wrote, figure, if I can't make a graph, I can't use a language.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct SaturatedEdge<T1, T2>{\n    from: T1, to: T1, wt: T2,\n}\nstruct Edge<T>{\n    from: T, to: T,\n}\ntrait SimpleGraph<T> {\n    fn addNode(&self, e: T);\n}\nstruct Graph<T>{\n    nodes: i64, adj: Vec<Vec<T>>,\n}\nimpl SimpleGraph<T> for Graph<T>{\n    fn addNode(&self, e: Edge<T>) {\n        self.adj[e.from].push(e.to);\n    }\n}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Here's how someone fixed it.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"trait SimpleGraph<T> {\n    fn add_node(&mut self, e: T);\n}\nimpl<T> SimpleGraph<T> for Graph<T>\n    where T:Copy, usize: From<T>\n    {\n    fn add_node(&mut self, e: T) {\n        self.adj[usize::from(e)].push(e);\n    }\n}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Basically my brain exploded. I don't think I am at a place where I can think like this right now(&mut is fine but the Copy, usize thing is "},{"type":"emoji","name":"exploding_head"},{"type":"emoji","name":"ahhhhhhh"},{"type":"text","text":")"}]}]}],"thread_ts":"1608237925.207100","reply_count":2,"reply_users_count":1,"latest_reply":"1608300587.219000","reply_users":["UUCN877U5"],"subscribed":false,"reactions":[{"name":"mind_blown","users":["U8R9JE0D6","UPUBAM63X"],"count":2}]},{"client_msg_id":"ba55627f-03a2-47f2-84a2-7f1c6224e7a5","type":"message","text":"well ... graphs can usually be represented using arrays or hashmaps","user":"UDSU53PEG","ts":"1608238079.208200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FTbbf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well ... graphs can usually be represented using arrays or hashmaps"}]}]}],"thread_ts":"1608238079.208200","reply_count":23,"reply_users_count":4,"latest_reply":"1608247194.217600","reply_users":["UPUBAM63X","UDSU53PEG","UUCN877U5","U014QLCKTDE"],"subscribed":false},{"client_msg_id":"d69a939f-af03-430f-938a-6f7006d6ae24","type":"message","text":"because nobody likes rude requests: <https://crates.io/crates/pleaser> :rolling_on_the_floor_laughing:","user":"UDSU53PEG","ts":"1608244156.214300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tel","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because nobody likes rude requests: "},{"type":"link","url":"https://crates.io/crates/pleaser"},{"type":"text","text":" "},{"type":"emoji","name":"rolling_on_the_floor_laughing"}]}]}]},{"client_msg_id":"b46158e3-cac6-42d1-9e81-2fddc9562941","type":"message","text":"Check this out, folks\n<https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620|https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620>","user":"U014QLCKTDE","ts":"1608331177.220900","team":"T68168MUP","attachments":[{"service_name":"Rust Internals","title":"A Potential Rust Learning Project Group","title_link":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620","text":"We, @rylev and @ekuber (with @nikomatsakis as lang team liaison), propose an initiative to better understand how people learn Rust with the goal of helping the Rust project continue to make learning the language and core tooling easier. This is an open call for feedback on this idea. Motivation Rust is well known for its somewhat steep learning curve. In the latest Rust annual survey, many pointed out that making Rust easier to learn would directly help promote the adoption of the language. O...","fallback":"Rust Internals: A Potential Rust Learning Project Group","thumb_url":"https://aws1.discourse-cdn.com/business6/uploads/rustlang/original/2X/b/b71959a2097ce0b5c3a193ce0a6466a42d4c4952.png","fields":[{"title":"Reading time","value":"5 mins :clock2:","short":true},{"title":"Likes","value":"39 :heart:","short":true}],"ts":1608298116,"from_url":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620","thumb_width":512,"thumb_height":512,"service_icon":"https://aws1.discourse-cdn.com/business6/uploads/rustlang/optimized/1X/e260a60b8dca4dae6ce7db98c45bb5008e6fdc62_2_180x180.png","id":1,"original_url":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620"}],"blocks":[{"type":"rich_text","block_id":"5C3A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Check this out, folks\n"},{"type":"link","url":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620","text":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620"}]}]}],"reactions":[{"name":"+1","users":["UGD4K0Z25"],"count":1}]},{"client_msg_id":"5cf70597-8c55-45ba-8622-b86f04987d1f","type":"message","text":"nice to see Will and Steve staying involved","user":"UDSU53PEG","ts":"1608332947.221800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v7IdE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nice to see Will and Steve staying involved"}]}]}]},{"client_msg_id":"de6ca4b1-4156-432f-977b-2e76a7ea26fb","type":"message","text":"<@UPUBAM63X> I found this to be the best course to get someone up to speed on being productive with Rust without getting too stuck with all the drawbacks - it's an entire course from Stanford and really gets into the security and parallelism benefits.\n<https://reberhardt.com/cs110l/spring-2020/>\nI understand you might not be interested anymore but if you do decide to pick it up again I recommend this.","user":"U6QGE7S86","ts":"1608499171.223500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N9g","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" I found this to be the best course to get someone up to speed on being productive with Rust without getting too stuck with all the drawbacks - it's an entire course from Stanford and really gets into the security and parallelism benefits.\n"},{"type":"link","url":"https://reberhardt.com/cs110l/spring-2020/"},{"type":"text","text":"\nI understand you might not be interested anymore but if you do decide to pick it up again I recommend this."}]}]}],"thread_ts":"1608499171.223500","reply_count":1,"reply_users_count":1,"latest_reply":"1608554967.226200","reply_users":["UUCN877U5"],"subscribed":false,"reactions":[{"name":"+1","users":["UPUBAM63X","UUCN877U5"],"count":2},{"name":"pray","users":["UQG7Y0XCP","UUCN877U5"],"count":2}]},{"client_msg_id":"a4dd2f3e-408a-4975-8d77-0eb90e51a9b8","type":"message","text":"I'll try at least try it. Don't take my whining and moping to be a lack of interest - pretty much the opposite. I want to learn but sometimes have to hedge. Long term I think I'll need to learn Rust. So thank you!","user":"UPUBAM63X","ts":"1608499319.224900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nw1A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll try at least try it. Don't take my whining and moping to be a lack of interest - pretty much the opposite. I want to learn but sometimes have to hedge. Long term I think I'll need to learn Rust. So thank you!"}]}]}]},{"client_msg_id":"fcf9bf24-e321-4dad-9693-fef5d1ec7d7b","type":"message","text":"oh wow its a 100 level course I can do this hahaha. Thank you!","user":"UPUBAM63X","ts":"1608499407.225300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WPe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh wow its a 100 level course I can do this hahaha. Thank you!"}]}]}]},{"client_msg_id":"63e496fb-f44d-4ac6-8d57-e7023ce08271","type":"message","text":"yeah no worries. There's a git repo with all the notes and projects and video are 50 minutes ish.","user":"U6QGE7S86","ts":"1608503190.225800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Ef","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah no worries. There's a git repo with all the notes and projects and video are 50 minutes ish."}]}]}]},{"client_msg_id":"9d503928-37dc-4ec9-ac9a-0cfe88e40ee9","type":"message","text":"<https://arxiv.org/abs/2009.13619>","user":"UDSU53PEG","ts":"1608587240.226500","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Ferrite: A Judgmental Embedding of Session Types in Rust","title_link":"https://arxiv.org/abs/2009.13619","text":"This article introduces Ferrite, a shallow embedding of session types in Rust. In contrast to existing session type libraries and embeddings for mainstram languages Ferrite not only supports...","fallback":"arXiv.org: Ferrite: A Judgmental Embedding of Session Types in Rust","from_url":"https://arxiv.org/abs/2009.13619","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/2009.13619"}],"blocks":[{"type":"rich_text","block_id":"QLh8","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://arxiv.org/abs/2009.13619"}]}]}]},{"client_msg_id":"644a8837-7315-4abb-a9dc-fdd2ed767039","type":"message","text":"huzzah! <https://github.com/rust-lang/rfcs/pull/2000>","user":"UDSU53PEG","ts":"1609209320.227300","team":"T68168MUP","edited":{"user":"UDSU53PEG","ts":"1609209388.000000"},"blocks":[{"type":"rich_text","block_id":"yfbH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"huzzah! "},{"type":"link","url":"https://github.com/rust-lang/rfcs/pull/2000"}]}]}]},{"client_msg_id":"9dc5e706-7877-4e4a-a1f0-9e66be92d160","type":"message","text":"this will have a big effect on matrix'y type operations going forward","user":"UDSU53PEG","ts":"1609209693.228000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ldY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this will have a big effect on matrix'y type operations going forward"}]}]}]},{"client_msg_id":"9c19c961-8f72-496b-ae89-95a201834e37","type":"message","text":"<https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html>","user":"UDSU53PEG","ts":"1609441807.230500","team":"T68168MUP","attachments":[{"title":"Announcing Rust 1.49.0 | Rust Blog","title_link":"https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html","text":"Empowering everyone to build reliable and efficient software.","fallback":"Announcing Rust 1.49.0 | Rust Blog","thumb_url":"https://www.rust-lang.org/static/images/rust-social.jpg","from_url":"https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html","thumb_width":1024,"thumb_height":1024,"service_icon":"https://blog.rust-lang.org/images/apple-touch-icon.png","service_name":"blog.rust-lang.org","id":1,"original_url":"https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html"}],"blocks":[{"type":"rich_text","block_id":"RCex","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html"}]}]}]},{"client_msg_id":"ed0d4fd4-2ceb-4cb0-ba2a-d669154166f9","type":"message","text":"Rust now overall faster than C in synthetic benchmarks\n<https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fastest.svg>","user":"UDSU53PEG","ts":"1609702531.232000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1O0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rust now overall faster than C in synthetic benchmarks\n"},{"type":"link","url":"https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fastest.svg"}]}]}]},{"client_msg_id":"752f00e3-b6d4-4aa2-be99-06cfc1d85e20","type":"message","text":"<https://lborb.github.io/book/> Rust project is getting pretty meta lately :joy:","user":"UDSU53PEG","ts":"1610564317.235300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m54wp","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://lborb.github.io/book/"},{"type":"text","text":" Rust project is getting pretty meta lately "},{"type":"emoji","name":"joy"}]}]}]},{"client_msg_id":"31bea630-7635-4747-9406-7d00b87ba549","type":"message","text":"the best part is that this book has itself in the list of unofficial books","user":"U011V2YN59N","ts":"1610564906.235800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=paxA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the best part is that this book has itself in the list of unofficial books"}]}]}]},{"client_msg_id":"0a21730b-864a-4e91-9ce9-d570dc1bea65","type":"message","text":"it's recursive in that way","user":"UDSU53PEG","ts":"1610565277.236200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tXuxT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's recursive in that way"}]}]}]},{"type":"message","text":"","user":"U7HAYKY9X","ts":"1611152174.025100","team":"T68168MUP","attachments":[{"fallback":"[January 20th, 2021 3:16 PM] jakobnybonissen: I took a shot at implementing Rust-like error types in Julia: <https://github.com/jakobnissen/ErrorTypes.jl> Any feedback is welcome :)","ts":"1611152162.202800","author_id":"U7HAYKY9X","author_subname":"Jakob Nissen","channel_id":"C67910KEH","channel_name":"general","is_msg_unfurl":true,"text":"I took a shot at implementing Rust-like error types in Julia: <https://github.com/jakobnissen/ErrorTypes.jl> Any feedback is welcome :)","author_name":"Jakob Nissen","author_link":"https://julialang.slack.com/team/U7HAYKY9X","author_icon":"https://avatars.slack-edge.com/2020-03-26/1018242990963_8485be866228a17960a3_48.jpg","mrkdwn_in":["text"],"color":"D0D0D0","from_url":"https://julialang.slack.com/archives/C67910KEH/p1611152162202800","is_share":true,"footer":"Posted in #general"}],"thread_ts":"1611152174.025100","reply_count":3,"reply_users_count":1,"latest_reply":"1611406797.001400","reply_users":["UPUBAM63X"],"subscribed":false,"reactions":[{"name":"+1","users":["UPUBAM63X","UUCN877U5"],"count":2}]},{"client_msg_id":"a164bbac-38eb-484e-8a54-f846eaf9692d","type":"message","text":"This looks cool <@U7HAYKY9X>!","user":"U6QGE7S86","ts":"1611165312.025700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EqLE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This looks cool "},{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":"!"}]}]}],"reactions":[{"name":"pray","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"7b42d62c-af90-4540-9549-9a40c28cb435","type":"message","text":"what crates are you all using for linear algebra? There's like 20 of them and I don't see much clarity in why one over another. Benchmarks are also elusive.Maybe <@U69J94HT9> would have a suggestion?","user":"UPUBAM63X","ts":"1611406320.000800","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1611406892.000000"},"blocks":[{"type":"rich_text","block_id":"+YN3c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what crates are you all using for linear algebra? There's like 20 of them and I don't see much clarity in why one over another. Benchmarks are also elusive.Maybe "},{"type":"user","user_id":"U69J94HT9"},{"type":"text","text":" would have a suggestion?"}]}]}],"thread_ts":"1611406320.000800","reply_count":7,"reply_users_count":4,"latest_reply":"1611593856.015500","reply_users":["URVFJB60N","UPUBAM63X","UDSU53PEG","U69J94HT9"],"subscribed":false},{"client_msg_id":"e124ee6e-4093-41ca-b56d-2648f4b2d2e8","type":"message","text":"Utterly depressing realization #92928364646266: Rust has no language specification, and has zero certifications for industrial usage.","user":"UPUBAM63X","ts":"1611409967.002200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HVB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Utterly depressing realization #92928364646266: Rust has no language specification, and has zero certifications for industrial usage."}]}]}],"thread_ts":"1611409967.002200","reply_count":16,"reply_users_count":4,"latest_reply":"1611436916.011000","reply_users":["UUCN877U5","UPUBAM63X","U01CQTKB86N","UDSU53PEG"],"subscribed":false},{"client_msg_id":"511ca377-01eb-4e2d-9a02-68485002f522","type":"message","text":"Do language specs actually matter?","user":"U7HAYKY9X","ts":"1611410953.002600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8iRRt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do language specs actually matter?"}]}]}],"thread_ts":"1611410953.002600","reply_count":2,"reply_users_count":1,"latest_reply":"1611412775.004300","reply_users":["UPUBAM63X"],"subscribed":false},{"client_msg_id":"f3ba2027-fad5-40c4-b8d3-ff247961c000","type":"message","text":"I think a lot of people fail to realize that the reason why a lot of these newer technologies/languages do not succeed to adoption is - they don't even try to speak to the audience they are targetting.\n\nWho wants memory safety? Everyone\nWho needs it? Regulated industries and large projects.\n\nIf you want to target regulated industries you probably need too... Address regulations.","user":"UPUBAM63X","ts":"1611413141.005600","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1611413204.000000"},"blocks":[{"type":"rich_text","block_id":"w3a9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think a lot of people fail to realize that the reason why a lot of these newer technologies/languages do not succeed to adoption is - they don't even try to speak to the audience they are targetting.\n\nWho wants memory safety? Everyone\nWho needs it? Regulated industries and large projects.\n\nIf you want to target regulated industries you probably need too... Address regulations."}]}]}]},{"client_msg_id":"57349a17-b0cd-4a9c-8526-45535c0523c5","type":"message","text":"<#C01JR0X1CSJ|caseyknealestreamofconsciousness>?","user":"UDSU53PEG","ts":"1611433197.009800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=yROm","elements":[{"type":"rich_text_section","elements":[{"type":"channel","channel_id":"C01JR0X1CSJ"},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"05630361-5f5e-493f-bd3e-68e6eea17831","type":"message","text":"Right sorry","user":"UPUBAM63X","ts":"1611436829.010900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RbV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right sorry"}]}]}]},{"client_msg_id":"eb5d02dd-ac90-4fec-a926-d24a943efa10","type":"message","text":"<https://i.imgflip.com/2v22n0.jpg> :laughing:","user":"UDSU53PEG","ts":"1611437694.011300","team":"T68168MUP","attachments":[{"fallback":"534x467px image","image_url":"https://i.imgflip.com/2v22n0.jpg","image_width":534,"image_height":467,"image_bytes":44774,"from_url":"https://i.imgflip.com/2v22n0.jpg","id":1,"original_url":"https://i.imgflip.com/2v22n0.jpg"}],"blocks":[{"type":"rich_text","block_id":"rzlW","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://i.imgflip.com/2v22n0.jpg"},{"type":"text","text":" "},{"type":"emoji","name":"laughing"}]}]}],"reactions":[{"name":"rolling_on_the_floor_laughing","users":["UPUBAM63X","UGU761DU2","UUCN877U5"],"count":3}]},{"client_msg_id":"0047ae33-4fad-47bd-9d1c-517b9dc7221c","type":"message","text":"it's from: <https://danielhenrymantilla.github.io/posts/2019-02-24-mutation-part-2-to-mut-or-not-to-mut/#2-mut-references>","user":"UDSU53PEG","ts":"1611437720.011600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A9K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's from: "},{"type":"link","url":"https://danielhenrymantilla.github.io/posts/2019-02-24-mutation-part-2-to-mut-or-not-to-mut/#2-mut-references"}]}]}]},{"client_msg_id":"5a0bf840-e290-4b92-8522-f61bb1d5dce6","type":"message","text":"This is impressive: <https://github.com/weld-project/weld>","user":"UPUBAM63X","ts":"1611502879.012300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DTg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is impressive: "},{"type":"link","url":"https://github.com/weld-project/weld"}]}]}],"thread_ts":"1611502879.012300","reply_count":6,"reply_users_count":3,"latest_reply":"1611527880.014200","reply_users":["UGD4K0Z25","UPUBAM63X","U01CQTKB86N"],"subscribed":false},{"client_msg_id":"5315492e-2c54-4095-bda3-5669f821aa88","type":"message","text":"like total game changer","user":"UPUBAM63X","ts":"1611503067.012500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ATL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like total game changer"}]}]}]},{"client_msg_id":"e63931d1-b9ce-4995-9156-aa8314c3ca8a","type":"message","text":"what all are you peoples using for numerical optimization? <https://docs.rs/numopt/0.2.1/numopt/#modules> looks okay","user":"UPUBAM63X","ts":"1611620838.016200","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1611620858.000000"},"blocks":[{"type":"rich_text","block_id":"ol72J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what all are you peoples using for numerical optimization? "},{"type":"link","url":"https://docs.rs/numopt/0.2.1/numopt/#modules"},{"type":"text","text":" looks okay"}]}]}]},{"client_msg_id":"1fdfafc0-a46a-412e-820d-a6af0b9ed37f","type":"message","text":"this is super slick: <https://alphaville.github.io/optimization-engine/> has really nice docs too: <https://alphaville.github.io/optimization-engine/docs/openrust-basic>","user":"UPUBAM63X","ts":"1611620911.016600","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1611621065.000000"},"attachments":[{"title":"OpEn · Fast and Accurate Nonconvex Optimization","title_link":"https://alphaville.github.io/optimization-engine/","text":"Fast and Accurate Nonconvex Optimization","fallback":"OpEn · Fast and Accurate Nonconvex Optimization","from_url":"https://alphaville.github.io/optimization-engine/","service_icon":"https://alphaville.github.io/optimization-engine/img/box.png","service_name":"alphaville.github.io","id":1,"original_url":"https://alphaville.github.io/optimization-engine/"}],"blocks":[{"type":"rich_text","block_id":"GY=5v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is super slick: "},{"type":"link","url":"https://alphaville.github.io/optimization-engine/"},{"type":"text","text":" has really nice docs too: "},{"type":"link","url":"https://alphaville.github.io/optimization-engine/docs/openrust-basic"}]}]}],"thread_ts":"1611620911.016600","reply_count":7,"reply_users_count":2,"latest_reply":"1611662245.019000","reply_users":["UGD4K0Z25","UPUBAM63X"],"subscribed":false},{"client_msg_id":"a06bb1ad-0f1f-446a-9384-5df25b7d2379","type":"message","text":"Polars dataframes looks slick: <https://h2oai.github.io/db-benchmark/>\n<https://github.com/ritchie46/polars>","user":"UPUBAM63X","ts":"1611627227.018200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j0e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Polars dataframes looks slick: "},{"type":"link","url":"https://h2oai.github.io/db-benchmark/"},{"type":"text","text":"\n"},{"type":"link","url":"https://github.com/ritchie46/polars"}]}]}],"reactions":[{"name":"100","users":["U017J1FHTSA"],"count":1}]},{"client_msg_id":"66d761d5-6aa8-4e90-b891-b9a13b15a820","type":"message","text":"<https://github.com/google/evcxr>\n\nthere's a Jupyter kernel for rust now","user":"U69J94HT9","ts":"1611770396.019600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lAtA8","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/google/evcxr"},{"type":"text","text":"\n\nthere's a Jupyter kernel for rust now"}]}]}]},{"client_msg_id":"1768c889-ea69-4aec-8026-4c4fb6455388","type":"message","text":"Is it just me, or does that sound awful?","user":"U7HAYKY9X","ts":"1611771134.019900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XTtv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it just me, or does that sound awful?"}]}]}],"thread_ts":"1611771134.019900","reply_count":2,"reply_users_count":2,"latest_reply":"1611778643.022100","reply_users":["UGD4K0Z25","UUCN877U5"],"subscribed":false},{"client_msg_id":"9499bdde-3cbe-45f0-b8fe-88213e414e0e","type":"message","text":"Why would it be awful?\n\na rust REPL is neat IMO, and useful for experimentation","user":"U69J94HT9","ts":"1611778584.022000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x2L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why would it be awful?\n\na rust REPL is neat IMO, and useful for experimentation"}]}]}]},{"client_msg_id":"8b9f3f12-b9e2-48a1-9ae1-1ffef8bc182a","type":"message","text":"I agree with Eric I think a Rust REPL would be welcome. Sometimes I just want to hack at some basic syntax without my IDE lighting up with red errors","user":"UPUBAM63X","ts":"1611799701.023400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KYtk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree with Eric I think a Rust REPL would be welcome. Sometimes I just want to hack at some basic syntax without my IDE lighting up with red errors"}]}]}]},{"client_msg_id":"533423f2-5704-41b9-9b3d-7fc0326d16a3","type":"message","text":"also... it implies something about calling Rust code from dynamic languages - maybe?","user":"UPUBAM63X","ts":"1611799730.023800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uZUkC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also... it implies something about calling Rust code from dynamic languages - maybe?"}]}]}]},{"client_msg_id":"bf19df5d-bb23-412f-b13f-b5bfcda09063","type":"message","text":"I'm finding myself relying on the compiler comments more than I should. Like I'm not remembering syntax as well as I should because it's almost too helpful","user":"UPUBAM63X","ts":"1611799944.024500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Npa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm finding myself relying on the compiler comments more than I should. Like I'm not remembering syntax as well as I should because it's almost too helpful"}]}]}]},{"client_msg_id":"0d2e4a2c-b863-4b10-992f-23ee10bad67e","type":"message","text":"<https://twitter.com/timClicks/status/1351247765851017216>","user":"UDSU53PEG","ts":"1611853591.025800","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/timClicks|@timClicks>: Describing Rust as a systems programming language in 2021 is like describing Microsoft as Windows or Google as search. Yes, Rust is equipped for systems programming, but its applicability is much wider. #rustlang","ts":1610997547,"author_name":"Tim McNamara","author_link":"https://twitter.com/timClicks/status/1351247765851017216","author_icon":"https://pbs.twimg.com/profile_images/1386345589/eightbit-c63b8599-e720-4e63-bd4a-327991dc1bf1_normal.png","author_subname":"@timClicks","text":"Describing Rust as a systems programming language in 2021 is like describing Microsoft as Windows or Google as search. Yes, Rust is equipped for systems programming, but its applicability is much wider. #rustlang","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/timClicks/status/1351247765851017216","id":1,"original_url":"https://twitter.com/timClicks/status/1351247765851017216","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"FRm04","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/timClicks/status/1351247765851017216"}]}]}]},{"client_msg_id":"e081d03c-edba-4b41-9313-897308ea4fd8","type":"message","text":"I'm realizing some divergences between Rust and Julia's mentality and it's interesting. So Rust likes Monolithic Crates, but julia likes fundamental Packages.\nI was in camp fundamental for a while! But, now I'm starting to wonder what the power of monoliths is.","user":"UPUBAM63X","ts":"1611869316.028200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7xxi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm realizing some divergences between Rust and Julia's mentality and it's interesting. So Rust likes Monolithic Crates, but julia likes fundamental Packages.\nI was in camp fundamental for a while! But, now I'm starting to wonder what the power of monoliths is."}]}]}]},{"type":"message","text":"<@UPUBAM63X>","files":[{"id":"F01LBUA6KU5","created":1612036382,"timestamp":1612036382,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UDSU53PEG","editable":false,"size":156884,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01LBUA6KU5/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01LBUA6KU5/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_360.png","thumb_360_w":358,"thumb_360_h":360,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_480.png","thumb_480_w":477,"thumb_480_h":480,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_160.png","original_w":602,"original_h":606,"thumb_tiny":"AwAwAC+1ge9KAMjIzS/JvKhTkDJPanKFbHykexoAYR8xpAB3qRkGM9z70oRc4/rQAxlJIIwPqaAp5xt6djUnyr8uPpTVYEHC4I45FACjbu3cZxQNo289KQrk8YH1pfn/ALy0AO4KjkUDAbIxTfn/ALwoILYyefagBTtJ5x1pvA5z3NNwAcN+n/6qcNvYkn6UAKyhsZOKY6pGMu4APrT84I5GD702QK8fzKDjoDQAoTIBDAgjjApQMd+gpEXyoVUEEqMfWncZx14oAaxUEDcdx6Z70oUjNG37vOcU7gIBnpQB/9k=","permalink":"https://julialang.slack.com/files/UDSU53PEG/F01LBUA6KU5/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01LBUA6KU5-108eeb2df3","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"ezSG+","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPUBAM63X"}]}]}],"user":"UDSU53PEG","display_as_bot":false,"ts":"1612036387.034500","thread_ts":"1612036387.034500","reply_count":2,"reply_users_count":2,"latest_reply":"1612090589.035000","reply_users":["UPUBAM63X","U014QLCKTDE"],"subscribed":false},{"client_msg_id":"fba4abdb-3c33-4063-8ed2-accbad05b119","type":"message","text":"Looks like Microsoft has recently made some hires to support their internal Rust compiler team. Very interesting stuff. Getting a major company directly driving it's development could mean huge improvements in the short and far term. Also a sign that rust is \"winning\" some OSS \"market\"share.","user":"UPUBAM63X","ts":"1612093804.035800","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1612094155.000000"},"blocks":[{"type":"rich_text","block_id":"OXM5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks like Microsoft has recently made some hires to support their internal Rust compiler team. Very interesting stuff. Getting a major company directly driving it's development could mean huge improvements in the short and far term. Also a sign that rust is \"winning\" some OSS \"market\"share."}]}]}]},{"client_msg_id":"34a63438-8c5f-4974-b1df-8d68f4be4e7a","type":"message","text":"Amazon too has made a bunch of Rust hires for both internal products and ecosystem/compiler development. I wouldn't be surprised if in 5-7 years Rust is _the_ language for cloud infrastructure.","user":"URVFJB60N","ts":"1612100761.039200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ebCkT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Amazon too has made a bunch of Rust hires for both internal products and ecosystem/compiler development. I wouldn't be surprised if in 5-7 years Rust is "},{"type":"text","text":"the","style":{"italic":true}},{"type":"text","text":" language for cloud infrastructure."}]}]}],"thread_ts":"1612100761.039200","reply_count":4,"reply_users_count":2,"latest_reply":"1612203356.042000","reply_users":["UPUBAM63X","U69J94HT9"],"subscribed":false,"reactions":[{"name":"+1","users":["UPUBAM63X","UGU761DU2","UAREE2NMD","U6QGE7S86"],"count":4}]},{"client_msg_id":"eca7e6f4-3dc6-4111-8007-88c5111197ef","type":"message","text":"The Amazon and Microsoft cases are interesting but very different I think. Amazon appears to be writing a lot of new infrastructure tooling in Rust, while I think Microsoft is looking to use Rust to rewrite or replace parts of Windows.","user":"U69J94HT9","ts":"1612203050.041900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uwqLO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The Amazon and Microsoft cases are interesting but very different I think. Amazon appears to be writing a lot of new infrastructure tooling in Rust, while I think Microsoft is looking to use Rust to rewrite or replace parts of Windows."}]}]}],"reactions":[{"name":"+1","users":["UPUBAM63X","UAREE2NMD"],"count":2}]},{"client_msg_id":"34592710-f3fa-4162-91fa-c0480ffcd5d9","type":"message","text":"I don't think the borrowchecker gives any tools to reason about distributed code - why is Rust a better tool for new infra there? Or is it for the concurrency/parallelism story?","user":"U6QGE7S86","ts":"1612310636.043800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BvcL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think the borrowchecker gives any tools to reason about distributed code - why is Rust a better tool for new infra there? Or is it for the concurrency/parallelism story?"}]}]}]},{"client_msg_id":"6ea10f47-ba88-4a9e-8365-6a11f4b2cdb9","type":"message","text":"I think the main story is the safety. which helps concurrency and parallelism. That same paradigm extends to distributed computation.","user":"UPUBAM63X","ts":"1612312864.044500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eqT0S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the main story is the safety. which helps concurrency and parallelism. That same paradigm extends to distributed computation."}]}]}]},{"client_msg_id":"63e68b45-18fc-4674-8aec-bb8dcb28b855","type":"message","text":"IE: if something breaks, it's not something somewhere else, or some deeply weird bug somewhere. It's just you authored code incorrectly.","user":"UPUBAM63X","ts":"1612312894.045100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8jZv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IE: if something breaks, it's not something somewhere else, or some deeply weird bug somewhere. It's just you authored code incorrectly."}]}]}]},{"client_msg_id":"aa60b43d-b21b-4a38-8e91-1d6368b813c7","type":"message","text":"I just landed my first ever (smol, but neat) Rust PR to an open source project","user":"U6QGE7S86","ts":"1612315468.045600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pi2b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just landed my first ever (smol, but neat) Rust PR to an open source project"}]}]}],"thread_ts":"1612315468.045600","reply_count":1,"reply_users_count":1,"latest_reply":"1612387349.046600","reply_users":["UPUBAM63X"],"subscribed":false,"reactions":[{"name":"100","users":["UPUBAM63X"],"count":1},{"name":"party_wizard","users":["UPUBAM63X"],"count":1},{"name":"dancingunicorn","users":["UPUBAM63X"],"count":1},{"name":"tada","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"338df84f-2cc0-4cb4-b8c5-20ab78675866","type":"message","text":"<https://github.com/rust-lang/stdsimd/pull/55>","user":"U6QGE7S86","ts":"1612315477.045800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8WtF","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/rust-lang/stdsimd/pull/55"}]}]}]},{"client_msg_id":"2673ce4b-221a-4179-9c9a-77a22a4233ec","type":"message","text":"(tons of help by some very kind folks over at <http://rust-lang.zulipchat.com|rust-lang.zulipchat.com>)","user":"U6QGE7S86","ts":"1612315507.046300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M7Gm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(tons of help by some very kind folks over at "},{"type":"link","url":"http://rust-lang.zulipchat.com","text":"rust-lang.zulipchat.com"},{"type":"text","text":")"}]}]}]},{"client_msg_id":"95732d53-6997-4d30-b8f4-570b3f7876d5","type":"message","text":"<https://www.wolfssl.com/isrg-partner-webinar/>","user":"UDSU53PEG","ts":"1612466525.047300","team":"T68168MUP","attachments":[{"title":"Please join us for our upcoming ISRG Partner Webinar! - wolfSSL","title_link":"https://www.wolfssl.com/isrg-partner-webinar/","text":"wolfSSL's Daniel Stenberg will be joined by Josh Aas and Sean McArthur for this ISRG Partner Webinar. They will cover what the project is about, how it will improve curl and Hyper, how it was done, lessons to be learned, and what to expect in the future. When: Feb 11, 2021 10:00 AM Pacific Time","fallback":"Please join us for our upcoming ISRG Partner Webinar! - wolfSSL","ts":1612362531,"from_url":"https://www.wolfssl.com/isrg-partner-webinar/","service_icon":"https://www.wolfssl.com/wordpress/wp-content/uploads/2017/07/cropped-wolf-square-180x180.png","service_name":"wolfssl.com","id":1,"original_url":"https://www.wolfssl.com/isrg-partner-webinar/"}],"blocks":[{"type":"rich_text","block_id":"iBNUU","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.wolfssl.com/isrg-partner-webinar/"}]}]}]},{"client_msg_id":"cdc550ca-9617-44a2-919e-469925328c33","type":"message","text":"Anyone know how ndarray works at it's core? I see it has some backends to BLAS, etc. But is it SIMD'ing?","user":"UPUBAM63X","ts":"1612643998.048900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UvJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyone know how ndarray works at it's core? I see it has some backends to BLAS, etc. But is it SIMD'ing?"}]}]}]},{"client_msg_id":"5e0d1741-1281-4d67-babb-c0603138451e","type":"message","text":"Trying to find sweet spots between Rayon parallelism and just plainold SIMD","user":"UPUBAM63X","ts":"1612644026.049400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SIJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Trying to find sweet spots between Rayon parallelism and just plainold SIMD"}]}]}]}]}