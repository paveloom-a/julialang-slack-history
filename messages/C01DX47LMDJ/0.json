{"cursor": 0, "messages": [{"client_msg_id":"c32a87f0-8b79-448c-ab17-7063b9976016","type":"message","text":"Rusts type system is pretty slick.... Still learning it but its pretty dang flexible","user":"UPUBAM63X","ts":"1607910160.161100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gWm1O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rusts type system is pretty slick.... Still learning it but its pretty dang flexible"}]}]}]},{"client_msg_id":"4cc1169f-c71d-444e-bf71-8dc7da3985ce","type":"message","text":"a lot of Rust seems to be sharing ideas with Julia - pretty nice.","user":"UPUBAM63X","ts":"1607910269.161500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kbck","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a lot of Rust seems to be sharing ideas with Julia - pretty nice."}]}]}]},{"client_msg_id":"585ebe4d-c872-483b-a993-8351d9965b15","type":"message","text":"but iter_mut = :heart:","user":"UPUBAM63X","ts":"1607910314.161900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qE8o9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but iter_mut = "},{"type":"emoji","name":"heart"}]}]}]},{"client_msg_id":"ff5b0181-4f67-4472-a870-cfe9159c8fe2","type":"message","text":"and these docs are the best docs I have legitimately ever seen.","user":"UPUBAM63X","ts":"1607910512.162500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dk/w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and these docs are the best docs I have legitimately ever seen."}]}]}],"thread_ts":"1607910512.162500","reply_count":9,"reply_users_count":4,"latest_reply":"1607990372.165200","reply_users":["U6QGE7S86","UPUBAM63X","U7HAYKY9X","U69J94HT9"],"subscribed":false},{"client_msg_id":"fdc27d8d-d2f0-4b67-baca-03a34acbcf07","type":"message","text":"Has anybody had any luck with using rust for numerics? I've started a project to solve the Schrodinger equation in 2D using a finite difference method. I've managed to get it to render in the browser via wasm-pack, but the problem I am having is that the solution doesn't seem to be stable. I don't know much in terms of numerical methods, can someone throw me a link on how to debug numerical code?","user":"U01DVH6K1SS","ts":"1608003200.176800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6wii/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Has anybody had any luck with using rust for numerics? I've started a project to solve the Schrodinger equation in 2D using a finite difference method. I've managed to get it to render in the browser via wasm-pack, but the problem I am having is that the solution doesn't seem to be stable. I don't know much in terms of numerical methods, can someone throw me a link on how to debug numerical code?"}]}]}]},{"client_msg_id":"fa655475-932f-45f7-a56a-95aa9f5419de","type":"message","text":"`-Zself-profile` always good or `-Z dump-mir={all,MIR-body of interest} -Z dump-mir-dataflow` to see desugared code, maybe `-Zsplit-dwarf=split` , also you can play around with `-Zmir-opt-level` for the above","user":"UDSU53PEG","ts":"1608010073.181100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bFs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"-Zself-profile","style":{"code":true}},{"type":"text","text":" always good or "},{"type":"text","text":"-Z dump-mir={all,MIR-body of interest} -Z dump-mir-dataflow","style":{"code":true}},{"type":"text","text":" to see desugared code, maybe "},{"type":"text","text":"-Zsplit-dwarf=split","style":{"code":true}},{"type":"text","text":" , also you can play around with "},{"type":"text","text":"-Zmir-opt-level","style":{"code":true}},{"type":"text","text":" for the above"}]}]}]},{"client_msg_id":"f4ab80e1-e8b8-4109-9398-8ac903eaebe8","type":"message","text":"You can always view the MIR in the playpen as well","user":"UDSU53PEG","ts":"1608010305.181500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mryci","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can always view the MIR in the playpen as well"}]}]}]},{"client_msg_id":"894cd4da-3f8c-4b1e-aca6-5d24bf1ce9bb","type":"message","text":"or the LLVM what ever is better for you","user":"UDSU53PEG","ts":"1608010678.181900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"90p9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or the LLVM what ever is better for you"}]}]}]},{"client_msg_id":"1ebd5b97-7bae-437d-acd7-dc5f60c171ca","type":"message","text":"assuming you're not using cranelift in which case I don't think playpen has the ability to view the lowered representation","user":"UDSU53PEG","ts":"1608011731.182700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fe=w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"assuming you're not using cranelift in which case I don't think playpen has the ability to view the lowered representation"}]}]}]},{"client_msg_id":"288eafb5-4ebd-473b-bd8e-a12a5227e0ca","type":"message","text":"anyone know how to make an impl with trait bounds on one parameter of a multiply parameteric struct? something like this?\n```impl&lt;T: i16+i32+i64, U:anything&gt; NewImplDooDad&lt;T, U&gt; {\n}```","user":"UPUBAM63X","ts":"1608033410.182900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pTL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"anyone know how to make an impl with trait bounds on one parameter of a multiply parameteric struct? something like this?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"impl<T: i16+i32+i64, U:anything> NewImplDooDad<T, U> {\n}"}]}]}],"thread_ts":"1608033410.182900","reply_count":7,"reply_users_count":3,"latest_reply":"1608219287.198900","reply_users":["U7HAYKY9X","UPUBAM63X","UUCN877U5"],"subscribed":false},{"client_msg_id":"a9057324-81b2-40cb-8728-11a24323ab49","type":"message","text":"`U` is not a parameter it's a generic data type","user":"UDSU53PEG","ts":"1608062713.185200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sGkI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"U","style":{"code":true}},{"type":"text","text":" is not a parameter it's a generic data type"}]}]}]},{"client_msg_id":"91e17142-06a9-4733-b755-e5337b1f77d2","type":"message","text":"`T` is also not a parameter","user":"UDSU53PEG","ts":"1608062726.185400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=S3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" is also not a parameter"}]}]}],"reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"acd7ca58-dc25-404d-a0b0-ba2295f54957","type":"message","text":"man I am fighting with how to do control flow in rust... Not having mutlidispatch is fine, but I'm really struggling with how to cope with generic types... You can't dispatch on them, you can't bound them.","user":"UPUBAM63X","ts":"1608083366.188400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XxXJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"man I am fighting with how to do control flow in rust... Not having mutlidispatch is fine, but I'm really struggling with how to cope with generic types... You can't dispatch on them, you can't bound them."}]}]}],"thread_ts":"1608083366.188400","reply_count":16,"reply_users_count":2,"latest_reply":"1608086414.192500","reply_users":["UGKHXS9J6","UPUBAM63X"],"subscribed":false},{"client_msg_id":"36ed9b44-8d34-43f2-b74f-607c48fee014","type":"message","text":"Rust is starting to come off as the most complicated programming language I've ever tried to learn","user":"UPUBAM63X","ts":"1608168774.193600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y3U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rust is starting to come off as the most complicated programming language I've ever tried to learn"}]}]}],"thread_ts":"1608168774.193600","reply_count":17,"reply_users_count":4,"latest_reply":"1608237218.205000","reply_users":["U8R9JE0D6","UPUBAM63X","U6QGE7S86","U7HAYKY9X"],"subscribed":false},{"client_msg_id":"3dc7c68d-b93d-4463-b569-eef08bc2a0fa","type":"message","text":"Thanks for all the help everyone, I think I decided to switch over to GoLang for learning. It seems to hit a sweet spot between developer ease, and performance. Eventually I may go back to trying to learn Rust - but, its just extremely difficult for me to learn.","user":"UPUBAM63X","ts":"1608202432.198300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U6ErC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for all the help everyone, I think I decided to switch over to GoLang for learning. It seems to hit a sweet spot between developer ease, and performance. Eventually I may go back to trying to learn Rust - but, its just extremely difficult for me to learn."}]}]}],"thread_ts":"1608202432.198300","reply_count":22,"reply_users_count":5,"latest_reply":"1608237515.205200","reply_users":["UUCN877U5","U013V2CFZAN","UPUBAM63X","U8R9JE0D6","UDSU53PEG"],"subscribed":false},{"client_msg_id":"324a73c0-8efa-4ae8-9668-bda410550086","type":"message","text":"<https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html>","user":"UDSU53PEG","ts":"1608231223.202000","team":"T68168MUP","attachments":[{"title":"Rust Survey 2020 Results | Rust Blog","title_link":"https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html","text":"Empowering everyone to build reliable and efficient software.","fallback":"Rust Survey 2020 Results | Rust Blog","thumb_url":"https://www.rust-lang.org/static/images/rust-social.jpg","from_url":"https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html","thumb_width":1024,"thumb_height":1024,"service_icon":"https://blog.rust-lang.org/images/apple-touch-icon.png","service_name":"blog.rust-lang.org","id":1,"original_url":"https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html"}],"blocks":[{"type":"rich_text","block_id":"DUkEH","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://blog.rust-lang.org/2020/12/16/rust-survey-2020.html"}]}]}]},{"client_msg_id":"eaa14bf4-31b5-4c43-8b1d-315221421700","type":"message","text":"<https://arxiv.org/abs/2012.08961>","user":"UDSU53PEG","ts":"1608233011.202300","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Verified Rust Monitors for Lola Specifications","title_link":"https://arxiv.org/abs/2012.08961","text":"The safety of cyber-physical systems rests on the correctness of their monitoring mechanisms. This is problematic if the specification of the monitor is implemented manually or interpreted by...","fallback":"arXiv.org: Verified Rust Monitors for Lola Specifications","from_url":"https://arxiv.org/abs/2012.08961","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/2012.08961"}],"blocks":[{"type":"rich_text","block_id":"hoY9","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://arxiv.org/abs/2012.08961"}]}]}],"reactions":[{"name":"cool","users":["U8R9JE0D6","UUCN877U5"],"count":2}]},{"type":"message","subtype":"thread_broadcast","text":"I can't think of any benefits to learning Golang other then in the case where it's a specific job requirement, there are dozens of more interesting learning languages, Rust included","user":"UDSU53PEG","ts":"1608233390.202600","thread_ts":"1608202432.198300","root":{"client_msg_id":"3dc7c68d-b93d-4463-b569-eef08bc2a0fa","type":"message","text":"Thanks for all the help everyone, I think I decided to switch over to GoLang for learning. It seems to hit a sweet spot between developer ease, and performance. Eventually I may go back to trying to learn Rust - but, its just extremely difficult for me to learn.","user":"UPUBAM63X","ts":"1608202432.198300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U6ErC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for all the help everyone, I think I decided to switch over to GoLang for learning. It seems to hit a sweet spot between developer ease, and performance. Eventually I may go back to trying to learn Rust - but, its just extremely difficult for me to learn."}]}]}],"thread_ts":"1608202432.198300","reply_count":22,"reply_users_count":5,"latest_reply":"1608237515.205200","reply_users":["UUCN877U5","U013V2CFZAN","UPUBAM63X","U8R9JE0D6","UDSU53PEG"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"/SD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can't think of any benefits to learning Golang other then in the case where it's a specific job requirement, there are dozens of more interesting learning languages, Rust included"}]}]}],"client_msg_id":"ebd826f7-0a65-4bba-ba28-69e048401eae"},{"client_msg_id":"be8185bb-ff77-496c-a9b3-f29bd99fb9ff","type":"message","text":"Okay I want you all to see what made me start to 180 from Rust.\n\nHere's some code I wrote, figure, if I can't make a graph, I can't use a language.\n```struct SaturatedEdge&lt;T1, T2&gt;{\n    from: T1, to: T1, wt: T2,\n}\nstruct Edge&lt;T&gt;{\n    from: T, to: T,\n}\ntrait SimpleGraph&lt;T&gt; {\n    fn addNode(&amp;self, e: T);\n}\nstruct Graph&lt;T&gt;{\n    nodes: i64, adj: Vec&lt;Vec&lt;T&gt;&gt;,\n}\nimpl SimpleGraph&lt;T&gt; for Graph&lt;T&gt;{\n    fn addNode(&amp;self, e: Edge&lt;T&gt;) {\n        self.adj[e.from].push(<http://e.to|e.to>);\n    }\n}```\nHere's how someone fixed it.\n```trait SimpleGraph&lt;T&gt; {\n    fn add_node(&amp;mut self, e: T);\n}\nimpl&lt;T&gt; SimpleGraph&lt;T&gt; for Graph&lt;T&gt;\n    where T:Copy, usize: From&lt;T&gt;\n    {\n    fn add_node(&amp;mut self, e: T) {\n        self.adj[usize::from(e)].push(e);\n    }\n}```\nBasically my brain exploded. I don't think I am at a place where I can think like this right now(&amp;mut is fine but the Copy, usize thing is :exploding_head::ahhhhhhh:)","user":"UPUBAM63X","ts":"1608237925.207100","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1608238021.000000"},"blocks":[{"type":"rich_text","block_id":"CQQU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay I want you all to see what made me start to 180 from Rust.\n\nHere's some code I wrote, figure, if I can't make a graph, I can't use a language.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct SaturatedEdge<T1, T2>{\n    from: T1, to: T1, wt: T2,\n}\nstruct Edge<T>{\n    from: T, to: T,\n}\ntrait SimpleGraph<T> {\n    fn addNode(&self, e: T);\n}\nstruct Graph<T>{\n    nodes: i64, adj: Vec<Vec<T>>,\n}\nimpl SimpleGraph<T> for Graph<T>{\n    fn addNode(&self, e: Edge<T>) {\n        self.adj[e.from].push(e.to);\n    }\n}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Here's how someone fixed it.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"trait SimpleGraph<T> {\n    fn add_node(&mut self, e: T);\n}\nimpl<T> SimpleGraph<T> for Graph<T>\n    where T:Copy, usize: From<T>\n    {\n    fn add_node(&mut self, e: T) {\n        self.adj[usize::from(e)].push(e);\n    }\n}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Basically my brain exploded. I don't think I am at a place where I can think like this right now(&mut is fine but the Copy, usize thing is "},{"type":"emoji","name":"exploding_head"},{"type":"emoji","name":"ahhhhhhh"},{"type":"text","text":")"}]}]}],"thread_ts":"1608237925.207100","reply_count":2,"reply_users_count":1,"latest_reply":"1608300587.219000","reply_users":["UUCN877U5"],"subscribed":false,"reactions":[{"name":"mind_blown","users":["U8R9JE0D6","UPUBAM63X"],"count":2}]},{"client_msg_id":"ba55627f-03a2-47f2-84a2-7f1c6224e7a5","type":"message","text":"well ... graphs can usually be represented using arrays or hashmaps","user":"UDSU53PEG","ts":"1608238079.208200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FTbbf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well ... graphs can usually be represented using arrays or hashmaps"}]}]}],"thread_ts":"1608238079.208200","reply_count":23,"reply_users_count":4,"latest_reply":"1608247194.217600","reply_users":["UPUBAM63X","UDSU53PEG","UUCN877U5","U014QLCKTDE"],"subscribed":false},{"client_msg_id":"d69a939f-af03-430f-938a-6f7006d6ae24","type":"message","text":"because nobody likes rude requests: <https://crates.io/crates/pleaser> :rolling_on_the_floor_laughing:","user":"UDSU53PEG","ts":"1608244156.214300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tel","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because nobody likes rude requests: "},{"type":"link","url":"https://crates.io/crates/pleaser"},{"type":"text","text":" "},{"type":"emoji","name":"rolling_on_the_floor_laughing"}]}]}]},{"client_msg_id":"b46158e3-cac6-42d1-9e81-2fddc9562941","type":"message","text":"Check this out, folks\n<https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620|https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620>","user":"U014QLCKTDE","ts":"1608331177.220900","team":"T68168MUP","attachments":[{"service_name":"Rust Internals","title":"A Potential Rust Learning Project Group","title_link":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620","text":"We, @rylev and @ekuber (with @nikomatsakis as lang team liaison), propose an initiative to better understand how people learn Rust with the goal of helping the Rust project continue to make learning the language and core tooling easier. This is an open call for feedback on this idea. Motivation Rust is well known for its somewhat steep learning curve. In the latest Rust annual survey, many pointed out that making Rust easier to learn would directly help promote the adoption of the language. O...","fallback":"Rust Internals: A Potential Rust Learning Project Group","thumb_url":"https://aws1.discourse-cdn.com/business6/uploads/rustlang/original/2X/b/b71959a2097ce0b5c3a193ce0a6466a42d4c4952.png","fields":[{"title":"Reading time","value":"5 mins :clock2:","short":true},{"title":"Likes","value":"39 :heart:","short":true}],"ts":1608298116,"from_url":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620","thumb_width":512,"thumb_height":512,"service_icon":"https://aws1.discourse-cdn.com/business6/uploads/rustlang/optimized/1X/e260a60b8dca4dae6ce7db98c45bb5008e6fdc62_2_180x180.png","id":1,"original_url":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620"}],"blocks":[{"type":"rich_text","block_id":"5C3A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Check this out, folks\n"},{"type":"link","url":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620","text":"https://internals.rust-lang.org/t/a-potential-rust-learning-project-group/13620"}]}]}],"reactions":[{"name":"+1","users":["UGD4K0Z25"],"count":1}]},{"client_msg_id":"5cf70597-8c55-45ba-8622-b86f04987d1f","type":"message","text":"nice to see Will and Steve staying involved","user":"UDSU53PEG","ts":"1608332947.221800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v7IdE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nice to see Will and Steve staying involved"}]}]}]},{"client_msg_id":"de6ca4b1-4156-432f-977b-2e76a7ea26fb","type":"message","text":"<@UPUBAM63X> I found this to be the best course to get someone up to speed on being productive with Rust without getting too stuck with all the drawbacks - it's an entire course from Stanford and really gets into the security and parallelism benefits.\n<https://reberhardt.com/cs110l/spring-2020/>\nI understand you might not be interested anymore but if you do decide to pick it up again I recommend this.","user":"U6QGE7S86","ts":"1608499171.223500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N9g","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" I found this to be the best course to get someone up to speed on being productive with Rust without getting too stuck with all the drawbacks - it's an entire course from Stanford and really gets into the security and parallelism benefits.\n"},{"type":"link","url":"https://reberhardt.com/cs110l/spring-2020/"},{"type":"text","text":"\nI understand you might not be interested anymore but if you do decide to pick it up again I recommend this."}]}]}],"thread_ts":"1608499171.223500","reply_count":1,"reply_users_count":1,"latest_reply":"1608554967.226200","reply_users":["UUCN877U5"],"subscribed":false,"reactions":[{"name":"+1","users":["UPUBAM63X","UUCN877U5"],"count":2},{"name":"pray","users":["UQG7Y0XCP","UUCN877U5"],"count":2}]},{"client_msg_id":"a4dd2f3e-408a-4975-8d77-0eb90e51a9b8","type":"message","text":"I'll try at least try it. Don't take my whining and moping to be a lack of interest - pretty much the opposite. I want to learn but sometimes have to hedge. Long term I think I'll need to learn Rust. So thank you!","user":"UPUBAM63X","ts":"1608499319.224900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nw1A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll try at least try it. Don't take my whining and moping to be a lack of interest - pretty much the opposite. I want to learn but sometimes have to hedge. Long term I think I'll need to learn Rust. So thank you!"}]}]}]},{"client_msg_id":"fcf9bf24-e321-4dad-9693-fef5d1ec7d7b","type":"message","text":"oh wow its a 100 level course I can do this hahaha. Thank you!","user":"UPUBAM63X","ts":"1608499407.225300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WPe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh wow its a 100 level course I can do this hahaha. Thank you!"}]}]}]},{"client_msg_id":"63e496fb-f44d-4ac6-8d57-e7023ce08271","type":"message","text":"yeah no worries. There's a git repo with all the notes and projects and video are 50 minutes ish.","user":"U6QGE7S86","ts":"1608503190.225800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Ef","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah no worries. There's a git repo with all the notes and projects and video are 50 minutes ish."}]}]}]},{"client_msg_id":"9d503928-37dc-4ec9-ac9a-0cfe88e40ee9","type":"message","text":"<https://arxiv.org/abs/2009.13619>","user":"UDSU53PEG","ts":"1608587240.226500","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Ferrite: A Judgmental Embedding of Session Types in Rust","title_link":"https://arxiv.org/abs/2009.13619","text":"This article introduces Ferrite, a shallow embedding of session types in Rust. In contrast to existing session type libraries and embeddings for mainstram languages Ferrite not only supports...","fallback":"arXiv.org: Ferrite: A Judgmental Embedding of Session Types in Rust","from_url":"https://arxiv.org/abs/2009.13619","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/2009.13619"}],"blocks":[{"type":"rich_text","block_id":"QLh8","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://arxiv.org/abs/2009.13619"}]}]}]},{"client_msg_id":"644a8837-7315-4abb-a9dc-fdd2ed767039","type":"message","text":"huzzah! <https://github.com/rust-lang/rfcs/pull/2000>","user":"UDSU53PEG","ts":"1609209320.227300","team":"T68168MUP","edited":{"user":"UDSU53PEG","ts":"1609209388.000000"},"blocks":[{"type":"rich_text","block_id":"yfbH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"huzzah! "},{"type":"link","url":"https://github.com/rust-lang/rfcs/pull/2000"}]}]}]},{"client_msg_id":"9dc5e706-7877-4e4a-a1f0-9e66be92d160","type":"message","text":"this will have a big effect on matrix'y type operations going forward","user":"UDSU53PEG","ts":"1609209693.228000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ldY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this will have a big effect on matrix'y type operations going forward"}]}]}]},{"client_msg_id":"9c19c961-8f72-496b-ae89-95a201834e37","type":"message","text":"<https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html>","user":"UDSU53PEG","ts":"1609441807.230500","team":"T68168MUP","attachments":[{"title":"Announcing Rust 1.49.0 | Rust Blog","title_link":"https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html","text":"Empowering everyone to build reliable and efficient software.","fallback":"Announcing Rust 1.49.0 | Rust Blog","thumb_url":"https://www.rust-lang.org/static/images/rust-social.jpg","from_url":"https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html","thumb_width":1024,"thumb_height":1024,"service_icon":"https://blog.rust-lang.org/images/apple-touch-icon.png","service_name":"blog.rust-lang.org","id":1,"original_url":"https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html"}],"blocks":[{"type":"rich_text","block_id":"RCex","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://blog.rust-lang.org/2020/12/31/Rust-1.49.0.html"}]}]}]},{"client_msg_id":"ed0d4fd4-2ceb-4cb0-ba2a-d669154166f9","type":"message","text":"Rust now overall faster than C in synthetic benchmarks\n<https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fastest.svg>","user":"UDSU53PEG","ts":"1609702531.232000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1O0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rust now overall faster than C in synthetic benchmarks\n"},{"type":"link","url":"https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fastest.svg"}]}]}]},{"client_msg_id":"752f00e3-b6d4-4aa2-be99-06cfc1d85e20","type":"message","text":"<https://lborb.github.io/book/> Rust project is getting pretty meta lately :joy:","user":"UDSU53PEG","ts":"1610564317.235300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m54wp","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://lborb.github.io/book/"},{"type":"text","text":" Rust project is getting pretty meta lately "},{"type":"emoji","name":"joy"}]}]}]},{"client_msg_id":"31bea630-7635-4747-9406-7d00b87ba549","type":"message","text":"the best part is that this book has itself in the list of unofficial books","user":"U011V2YN59N","ts":"1610564906.235800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=paxA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the best part is that this book has itself in the list of unofficial books"}]}]}]},{"client_msg_id":"0a21730b-864a-4e91-9ce9-d570dc1bea65","type":"message","text":"it's recursive in that way","user":"UDSU53PEG","ts":"1610565277.236200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tXuxT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's recursive in that way"}]}]}]},{"type":"message","text":"","user":"U7HAYKY9X","ts":"1611152174.025100","team":"T68168MUP","attachments":[{"fallback":"[January 20th, 2021 3:16 PM] jakobnybonissen: I took a shot at implementing Rust-like error types in Julia: <https://github.com/jakobnissen/ErrorTypes.jl> Any feedback is welcome :)","ts":"1611152162.202800","author_id":"U7HAYKY9X","author_subname":"Jakob Nissen","channel_id":"C67910KEH","channel_name":"general","is_msg_unfurl":true,"text":"I took a shot at implementing Rust-like error types in Julia: <https://github.com/jakobnissen/ErrorTypes.jl> Any feedback is welcome :)","author_name":"Jakob Nissen","author_link":"https://julialang.slack.com/team/U7HAYKY9X","author_icon":"https://avatars.slack-edge.com/2020-03-26/1018242990963_8485be866228a17960a3_48.jpg","mrkdwn_in":["text"],"color":"D0D0D0","from_url":"https://julialang.slack.com/archives/C67910KEH/p1611152162202800","is_share":true,"footer":"Posted in #general"}],"thread_ts":"1611152174.025100","reply_count":3,"reply_users_count":1,"latest_reply":"1611406797.001400","reply_users":["UPUBAM63X"],"subscribed":false,"reactions":[{"name":"+1","users":["UPUBAM63X","UUCN877U5"],"count":2}]},{"client_msg_id":"a164bbac-38eb-484e-8a54-f846eaf9692d","type":"message","text":"This looks cool <@U7HAYKY9X>!","user":"U6QGE7S86","ts":"1611165312.025700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EqLE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This looks cool "},{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":"!"}]}]}],"reactions":[{"name":"pray","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"7b42d62c-af90-4540-9549-9a40c28cb435","type":"message","text":"what crates are you all using for linear algebra? There's like 20 of them and I don't see much clarity in why one over another. Benchmarks are also elusive.Maybe <@U69J94HT9> would have a suggestion?","user":"UPUBAM63X","ts":"1611406320.000800","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1611406892.000000"},"blocks":[{"type":"rich_text","block_id":"+YN3c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what crates are you all using for linear algebra? There's like 20 of them and I don't see much clarity in why one over another. Benchmarks are also elusive.Maybe "},{"type":"user","user_id":"U69J94HT9"},{"type":"text","text":" would have a suggestion?"}]}]}],"thread_ts":"1611406320.000800","reply_count":7,"reply_users_count":4,"latest_reply":"1611593856.015500","reply_users":["URVFJB60N","UPUBAM63X","UDSU53PEG","U69J94HT9"],"subscribed":false},{"client_msg_id":"e124ee6e-4093-41ca-b56d-2648f4b2d2e8","type":"message","text":"Utterly depressing realization #92928364646266: Rust has no language specification, and has zero certifications for industrial usage.","user":"UPUBAM63X","ts":"1611409967.002200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HVB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Utterly depressing realization #92928364646266: Rust has no language specification, and has zero certifications for industrial usage."}]}]}],"thread_ts":"1611409967.002200","reply_count":16,"reply_users_count":4,"latest_reply":"1611436916.011000","reply_users":["UUCN877U5","UPUBAM63X","U01CQTKB86N","UDSU53PEG"],"subscribed":false},{"client_msg_id":"511ca377-01eb-4e2d-9a02-68485002f522","type":"message","text":"Do language specs actually matter?","user":"U7HAYKY9X","ts":"1611410953.002600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8iRRt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do language specs actually matter?"}]}]}],"thread_ts":"1611410953.002600","reply_count":2,"reply_users_count":1,"latest_reply":"1611412775.004300","reply_users":["UPUBAM63X"],"subscribed":false},{"client_msg_id":"f3ba2027-fad5-40c4-b8d3-ff247961c000","type":"message","text":"I think a lot of people fail to realize that the reason why a lot of these newer technologies/languages do not succeed to adoption is - they don't even try to speak to the audience they are targetting.\n\nWho wants memory safety? Everyone\nWho needs it? Regulated industries and large projects.\n\nIf you want to target regulated industries you probably need too... Address regulations.","user":"UPUBAM63X","ts":"1611413141.005600","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1611413204.000000"},"blocks":[{"type":"rich_text","block_id":"w3a9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think a lot of people fail to realize that the reason why a lot of these newer technologies/languages do not succeed to adoption is - they don't even try to speak to the audience they are targetting.\n\nWho wants memory safety? Everyone\nWho needs it? Regulated industries and large projects.\n\nIf you want to target regulated industries you probably need too... Address regulations."}]}]}]},{"client_msg_id":"57349a17-b0cd-4a9c-8526-45535c0523c5","type":"message","text":"<#C01JR0X1CSJ|caseyknealestreamofconsciousness>?","user":"UDSU53PEG","ts":"1611433197.009800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=yROm","elements":[{"type":"rich_text_section","elements":[{"type":"channel","channel_id":"C01JR0X1CSJ"},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"05630361-5f5e-493f-bd3e-68e6eea17831","type":"message","text":"Right sorry","user":"UPUBAM63X","ts":"1611436829.010900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RbV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right sorry"}]}]}]},{"client_msg_id":"eb5d02dd-ac90-4fec-a926-d24a943efa10","type":"message","text":"<https://i.imgflip.com/2v22n0.jpg> :laughing:","user":"UDSU53PEG","ts":"1611437694.011300","team":"T68168MUP","attachments":[{"fallback":"534x467px image","image_url":"https://i.imgflip.com/2v22n0.jpg","image_width":534,"image_height":467,"image_bytes":44774,"from_url":"https://i.imgflip.com/2v22n0.jpg","id":1,"original_url":"https://i.imgflip.com/2v22n0.jpg"}],"blocks":[{"type":"rich_text","block_id":"rzlW","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://i.imgflip.com/2v22n0.jpg"},{"type":"text","text":" "},{"type":"emoji","name":"laughing"}]}]}],"reactions":[{"name":"rolling_on_the_floor_laughing","users":["UPUBAM63X","UGU761DU2","UUCN877U5"],"count":3}]},{"client_msg_id":"0047ae33-4fad-47bd-9d1c-517b9dc7221c","type":"message","text":"it's from: <https://danielhenrymantilla.github.io/posts/2019-02-24-mutation-part-2-to-mut-or-not-to-mut/#2-mut-references>","user":"UDSU53PEG","ts":"1611437720.011600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A9K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's from: "},{"type":"link","url":"https://danielhenrymantilla.github.io/posts/2019-02-24-mutation-part-2-to-mut-or-not-to-mut/#2-mut-references"}]}]}]},{"client_msg_id":"5a0bf840-e290-4b92-8522-f61bb1d5dce6","type":"message","text":"This is impressive: <https://github.com/weld-project/weld>","user":"UPUBAM63X","ts":"1611502879.012300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DTg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is impressive: "},{"type":"link","url":"https://github.com/weld-project/weld"}]}]}],"thread_ts":"1611502879.012300","reply_count":6,"reply_users_count":3,"latest_reply":"1611527880.014200","reply_users":["UGD4K0Z25","UPUBAM63X","U01CQTKB86N"],"subscribed":false},{"client_msg_id":"5315492e-2c54-4095-bda3-5669f821aa88","type":"message","text":"like total game changer","user":"UPUBAM63X","ts":"1611503067.012500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ATL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like total game changer"}]}]}]},{"client_msg_id":"e63931d1-b9ce-4995-9156-aa8314c3ca8a","type":"message","text":"what all are you peoples using for numerical optimization? <https://docs.rs/numopt/0.2.1/numopt/#modules> looks okay","user":"UPUBAM63X","ts":"1611620838.016200","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1611620858.000000"},"blocks":[{"type":"rich_text","block_id":"ol72J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what all are you peoples using for numerical optimization? "},{"type":"link","url":"https://docs.rs/numopt/0.2.1/numopt/#modules"},{"type":"text","text":" looks okay"}]}]}]},{"client_msg_id":"1fdfafc0-a46a-412e-820d-a6af0b9ed37f","type":"message","text":"this is super slick: <https://alphaville.github.io/optimization-engine/> has really nice docs too: <https://alphaville.github.io/optimization-engine/docs/openrust-basic>","user":"UPUBAM63X","ts":"1611620911.016600","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1611621065.000000"},"attachments":[{"title":"OpEn · Fast and Accurate Nonconvex Optimization","title_link":"https://alphaville.github.io/optimization-engine/","text":"Fast and Accurate Nonconvex Optimization","fallback":"OpEn · Fast and Accurate Nonconvex Optimization","from_url":"https://alphaville.github.io/optimization-engine/","service_icon":"https://alphaville.github.io/optimization-engine/img/box.png","service_name":"alphaville.github.io","id":1,"original_url":"https://alphaville.github.io/optimization-engine/"}],"blocks":[{"type":"rich_text","block_id":"GY=5v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is super slick: "},{"type":"link","url":"https://alphaville.github.io/optimization-engine/"},{"type":"text","text":" has really nice docs too: "},{"type":"link","url":"https://alphaville.github.io/optimization-engine/docs/openrust-basic"}]}]}],"thread_ts":"1611620911.016600","reply_count":7,"reply_users_count":2,"latest_reply":"1611662245.019000","reply_users":["UGD4K0Z25","UPUBAM63X"],"subscribed":false},{"client_msg_id":"a06bb1ad-0f1f-446a-9384-5df25b7d2379","type":"message","text":"Polars dataframes looks slick: <https://h2oai.github.io/db-benchmark/>\n<https://github.com/ritchie46/polars>","user":"UPUBAM63X","ts":"1611627227.018200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j0e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Polars dataframes looks slick: "},{"type":"link","url":"https://h2oai.github.io/db-benchmark/"},{"type":"text","text":"\n"},{"type":"link","url":"https://github.com/ritchie46/polars"}]}]}],"reactions":[{"name":"100","users":["U017J1FHTSA"],"count":1}]},{"client_msg_id":"66d761d5-6aa8-4e90-b891-b9a13b15a820","type":"message","text":"<https://github.com/google/evcxr>\n\nthere's a Jupyter kernel for rust now","user":"U69J94HT9","ts":"1611770396.019600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lAtA8","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/google/evcxr"},{"type":"text","text":"\n\nthere's a Jupyter kernel for rust now"}]}]}]},{"client_msg_id":"1768c889-ea69-4aec-8026-4c4fb6455388","type":"message","text":"Is it just me, or does that sound awful?","user":"U7HAYKY9X","ts":"1611771134.019900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XTtv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it just me, or does that sound awful?"}]}]}],"thread_ts":"1611771134.019900","reply_count":2,"reply_users_count":2,"latest_reply":"1611778643.022100","reply_users":["UGD4K0Z25","UUCN877U5"],"subscribed":false},{"client_msg_id":"9499bdde-3cbe-45f0-b8fe-88213e414e0e","type":"message","text":"Why would it be awful?\n\na rust REPL is neat IMO, and useful for experimentation","user":"U69J94HT9","ts":"1611778584.022000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x2L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why would it be awful?\n\na rust REPL is neat IMO, and useful for experimentation"}]}]}]},{"client_msg_id":"8b9f3f12-b9e2-48a1-9ae1-1ffef8bc182a","type":"message","text":"I agree with Eric I think a Rust REPL would be welcome. Sometimes I just want to hack at some basic syntax without my IDE lighting up with red errors","user":"UPUBAM63X","ts":"1611799701.023400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KYtk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree with Eric I think a Rust REPL would be welcome. Sometimes I just want to hack at some basic syntax without my IDE lighting up with red errors"}]}]}]},{"client_msg_id":"533423f2-5704-41b9-9b3d-7fc0326d16a3","type":"message","text":"also... it implies something about calling Rust code from dynamic languages - maybe?","user":"UPUBAM63X","ts":"1611799730.023800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uZUkC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also... it implies something about calling Rust code from dynamic languages - maybe?"}]}]}]},{"client_msg_id":"bf19df5d-bb23-412f-b13f-b5bfcda09063","type":"message","text":"I'm finding myself relying on the compiler comments more than I should. Like I'm not remembering syntax as well as I should because it's almost too helpful","user":"UPUBAM63X","ts":"1611799944.024500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Npa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm finding myself relying on the compiler comments more than I should. Like I'm not remembering syntax as well as I should because it's almost too helpful"}]}]}]},{"client_msg_id":"0d2e4a2c-b863-4b10-992f-23ee10bad67e","type":"message","text":"<https://twitter.com/timClicks/status/1351247765851017216>","user":"UDSU53PEG","ts":"1611853591.025800","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/timClicks|@timClicks>: Describing Rust as a systems programming language in 2021 is like describing Microsoft as Windows or Google as search. Yes, Rust is equipped for systems programming, but its applicability is much wider. #rustlang","ts":1610997547,"author_name":"Tim McNamara","author_link":"https://twitter.com/timClicks/status/1351247765851017216","author_icon":"https://pbs.twimg.com/profile_images/1386345589/eightbit-c63b8599-e720-4e63-bd4a-327991dc1bf1_normal.png","author_subname":"@timClicks","text":"Describing Rust as a systems programming language in 2021 is like describing Microsoft as Windows or Google as search. Yes, Rust is equipped for systems programming, but its applicability is much wider. #rustlang","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/timClicks/status/1351247765851017216","id":1,"original_url":"https://twitter.com/timClicks/status/1351247765851017216","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"FRm04","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/timClicks/status/1351247765851017216"}]}]}]},{"client_msg_id":"e081d03c-edba-4b41-9313-897308ea4fd8","type":"message","text":"I'm realizing some divergences between Rust and Julia's mentality and it's interesting. So Rust likes Monolithic Crates, but julia likes fundamental Packages.\nI was in camp fundamental for a while! But, now I'm starting to wonder what the power of monoliths is.","user":"UPUBAM63X","ts":"1611869316.028200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7xxi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm realizing some divergences between Rust and Julia's mentality and it's interesting. So Rust likes Monolithic Crates, but julia likes fundamental Packages.\nI was in camp fundamental for a while! But, now I'm starting to wonder what the power of monoliths is."}]}]}]},{"type":"message","text":"<@UPUBAM63X>","files":[{"id":"F01LBUA6KU5","created":1612036382,"timestamp":1612036382,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UDSU53PEG","editable":false,"size":156884,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01LBUA6KU5/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01LBUA6KU5/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_360.png","thumb_360_w":358,"thumb_360_h":360,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_480.png","thumb_480_w":477,"thumb_480_h":480,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01LBUA6KU5-2982c7e6c8/image_160.png","original_w":602,"original_h":606,"thumb_tiny":"AwAwAC+1ge9KAMjIzS/JvKhTkDJPanKFbHykexoAYR8xpAB3qRkGM9z70oRc4/rQAxlJIIwPqaAp5xt6djUnyr8uPpTVYEHC4I45FACjbu3cZxQNo289KQrk8YH1pfn/ALy0AO4KjkUDAbIxTfn/ALwoILYyefagBTtJ5x1pvA5z3NNwAcN+n/6qcNvYkn6UAKyhsZOKY6pGMu4APrT84I5GD702QK8fzKDjoDQAoTIBDAgjjApQMd+gpEXyoVUEEqMfWncZx14oAaxUEDcdx6Z70oUjNG37vOcU7gIBnpQB/9k=","permalink":"https://julialang.slack.com/files/UDSU53PEG/F01LBUA6KU5/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01LBUA6KU5-108eeb2df3","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"ezSG+","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPUBAM63X"}]}]}],"user":"UDSU53PEG","display_as_bot":false,"ts":"1612036387.034500","thread_ts":"1612036387.034500","reply_count":2,"reply_users_count":2,"latest_reply":"1612090589.035000","reply_users":["UPUBAM63X","U014QLCKTDE"],"subscribed":false},{"client_msg_id":"fba4abdb-3c33-4063-8ed2-accbad05b119","type":"message","text":"Looks like Microsoft has recently made some hires to support their internal Rust compiler team. Very interesting stuff. Getting a major company directly driving it's development could mean huge improvements in the short and far term. Also a sign that rust is \"winning\" some OSS \"market\"share.","user":"UPUBAM63X","ts":"1612093804.035800","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1612094155.000000"},"blocks":[{"type":"rich_text","block_id":"OXM5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks like Microsoft has recently made some hires to support their internal Rust compiler team. Very interesting stuff. Getting a major company directly driving it's development could mean huge improvements in the short and far term. Also a sign that rust is \"winning\" some OSS \"market\"share."}]}]}]},{"client_msg_id":"34a63438-8c5f-4974-b1df-8d68f4be4e7a","type":"message","text":"Amazon too has made a bunch of Rust hires for both internal products and ecosystem/compiler development. I wouldn't be surprised if in 5-7 years Rust is _the_ language for cloud infrastructure.","user":"URVFJB60N","ts":"1612100761.039200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ebCkT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Amazon too has made a bunch of Rust hires for both internal products and ecosystem/compiler development. I wouldn't be surprised if in 5-7 years Rust is "},{"type":"text","text":"the","style":{"italic":true}},{"type":"text","text":" language for cloud infrastructure."}]}]}],"thread_ts":"1612100761.039200","reply_count":4,"reply_users_count":2,"latest_reply":"1612203356.042000","reply_users":["UPUBAM63X","U69J94HT9"],"subscribed":false,"reactions":[{"name":"+1","users":["UPUBAM63X","UGU761DU2","UAREE2NMD","U6QGE7S86"],"count":4}]},{"client_msg_id":"eca7e6f4-3dc6-4111-8007-88c5111197ef","type":"message","text":"The Amazon and Microsoft cases are interesting but very different I think. Amazon appears to be writing a lot of new infrastructure tooling in Rust, while I think Microsoft is looking to use Rust to rewrite or replace parts of Windows.","user":"U69J94HT9","ts":"1612203050.041900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uwqLO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The Amazon and Microsoft cases are interesting but very different I think. Amazon appears to be writing a lot of new infrastructure tooling in Rust, while I think Microsoft is looking to use Rust to rewrite or replace parts of Windows."}]}]}],"reactions":[{"name":"+1","users":["UPUBAM63X","UAREE2NMD"],"count":2}]},{"client_msg_id":"34592710-f3fa-4162-91fa-c0480ffcd5d9","type":"message","text":"I don't think the borrowchecker gives any tools to reason about distributed code - why is Rust a better tool for new infra there? Or is it for the concurrency/parallelism story?","user":"U6QGE7S86","ts":"1612310636.043800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BvcL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think the borrowchecker gives any tools to reason about distributed code - why is Rust a better tool for new infra there? Or is it for the concurrency/parallelism story?"}]}]}]},{"client_msg_id":"6ea10f47-ba88-4a9e-8365-6a11f4b2cdb9","type":"message","text":"I think the main story is the safety. which helps concurrency and parallelism. That same paradigm extends to distributed computation.","user":"UPUBAM63X","ts":"1612312864.044500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eqT0S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the main story is the safety. which helps concurrency and parallelism. That same paradigm extends to distributed computation."}]}]}]},{"client_msg_id":"63e68b45-18fc-4674-8aec-bb8dcb28b855","type":"message","text":"IE: if something breaks, it's not something somewhere else, or some deeply weird bug somewhere. It's just you authored code incorrectly.","user":"UPUBAM63X","ts":"1612312894.045100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8jZv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IE: if something breaks, it's not something somewhere else, or some deeply weird bug somewhere. It's just you authored code incorrectly."}]}]}]},{"client_msg_id":"aa60b43d-b21b-4a38-8e91-1d6368b813c7","type":"message","text":"I just landed my first ever (smol, but neat) Rust PR to an open source project","user":"U6QGE7S86","ts":"1612315468.045600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pi2b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just landed my first ever (smol, but neat) Rust PR to an open source project"}]}]}],"thread_ts":"1612315468.045600","reply_count":1,"reply_users_count":1,"latest_reply":"1612387349.046600","reply_users":["UPUBAM63X"],"subscribed":false,"reactions":[{"name":"100","users":["UPUBAM63X"],"count":1},{"name":"party_wizard","users":["UPUBAM63X"],"count":1},{"name":"dancingunicorn","users":["UPUBAM63X"],"count":1},{"name":"tada","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"338df84f-2cc0-4cb4-b8c5-20ab78675866","type":"message","text":"<https://github.com/rust-lang/stdsimd/pull/55>","user":"U6QGE7S86","ts":"1612315477.045800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8WtF","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/rust-lang/stdsimd/pull/55"}]}]}]},{"client_msg_id":"2673ce4b-221a-4179-9c9a-77a22a4233ec","type":"message","text":"(tons of help by some very kind folks over at <http://rust-lang.zulipchat.com|rust-lang.zulipchat.com>)","user":"U6QGE7S86","ts":"1612315507.046300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M7Gm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(tons of help by some very kind folks over at "},{"type":"link","url":"http://rust-lang.zulipchat.com","text":"rust-lang.zulipchat.com"},{"type":"text","text":")"}]}]}]},{"client_msg_id":"95732d53-6997-4d30-b8f4-570b3f7876d5","type":"message","text":"<https://www.wolfssl.com/isrg-partner-webinar/>","user":"UDSU53PEG","ts":"1612466525.047300","team":"T68168MUP","attachments":[{"title":"Please join us for our upcoming ISRG Partner Webinar! - wolfSSL","title_link":"https://www.wolfssl.com/isrg-partner-webinar/","text":"wolfSSL's Daniel Stenberg will be joined by Josh Aas and Sean McArthur for this ISRG Partner Webinar. They will cover what the project is about, how it will improve curl and Hyper, how it was done, lessons to be learned, and what to expect in the future. When: Feb 11, 2021 10:00 AM Pacific Time","fallback":"Please join us for our upcoming ISRG Partner Webinar! - wolfSSL","ts":1612362531,"from_url":"https://www.wolfssl.com/isrg-partner-webinar/","service_icon":"https://www.wolfssl.com/wordpress/wp-content/uploads/2017/07/cropped-wolf-square-180x180.png","service_name":"wolfssl.com","id":1,"original_url":"https://www.wolfssl.com/isrg-partner-webinar/"}],"blocks":[{"type":"rich_text","block_id":"iBNUU","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.wolfssl.com/isrg-partner-webinar/"}]}]}]},{"client_msg_id":"cdc550ca-9617-44a2-919e-469925328c33","type":"message","text":"Anyone know how ndarray works at it's core? I see it has some backends to BLAS, etc. But is it SIMD'ing?","user":"UPUBAM63X","ts":"1612643998.048900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UvJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyone know how ndarray works at it's core? I see it has some backends to BLAS, etc. But is it SIMD'ing?"}]}]}]},{"client_msg_id":"5e0d1741-1281-4d67-babb-c0603138451e","type":"message","text":"Trying to find sweet spots between Rayon parallelism and just plainold SIMD","user":"UPUBAM63X","ts":"1612644026.049400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SIJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Trying to find sweet spots between Rayon parallelism and just plainold SIMD"}]}]}]},{"client_msg_id":"7bd28da8-ee5e-4810-b5b0-c2080c7fcd35","type":"message","text":"Have you checked out faster <@UPUBAM63X> <https://doc.rust-lang.org/edition-guide/rust-2018/simd-for-faster-computing.html>","user":"U6QGE7S86","ts":"1612655265.049700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4+Yqy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Have you checked out faster "},{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" "},{"type":"link","url":"https://doc.rust-lang.org/edition-guide/rust-2018/simd-for-faster-computing.html"}]}]}]},{"client_msg_id":"eff97d2a-e07e-4274-a064-7b7676ffbae3","type":"message","text":"ah, better demo here","user":"U6QGE7S86","ts":"1612655309.049900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Voj7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, better demo here"}]}]}]},{"client_msg_id":"876cf1f4-2cd3-43d7-8a8d-7290749d96df","type":"message","text":"<https://github.com/AdamNiederer/faster>","user":"U6QGE7S86","ts":"1612655372.050100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lB8o","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/AdamNiederer/faster"}]}]}]},{"client_msg_id":"28581295-af38-4e9d-945b-c93f5cc0490f","type":"message","text":"main branch right now but don't know why","user":"U6QGE7S86","ts":"1612655761.050500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kyye","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"main branch right now but don't know why"}]}]}]},{"client_msg_id":"8ee88409-86b8-42ef-9503-ee4eac59f55f","type":"message","text":"Nice! I just tested ndarray against julia for columnwise means of a smallish array(1000x2000), and its 2x slower than julia without trying","user":"UPUBAM63X","ts":"1612655947.051200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ViCMu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice! I just tested ndarray against julia for columnwise means of a smallish array(1000x2000), and its 2x slower than julia without trying"}]}]}]},{"client_msg_id":"a52820a2-f4e4-4516-b8bf-6d2e739d1548","type":"message","text":"but overall not bad","user":"UPUBAM63X","ts":"1612655954.051400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mOv4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but overall not bad"}]}]}]},{"client_msg_id":"56d0cc68-51d5-4a60-a32e-6bac83c09aa7","type":"message","text":"Does Rust have Fortran or C alignment?","user":"U6QGE7S86","ts":"1612660605.052300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cDyr4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does Rust have Fortran or C alignment?"}]}]}],"thread_ts":"1612660605.052300","reply_count":2,"reply_users_count":2,"latest_reply":"1612660891.052600","reply_users":["URVFJB60N","U6QGE7S86"],"subscribed":false},{"client_msg_id":"7d3b6d17-ef36-43cc-a269-c5539a5f7d5e","type":"message","text":"Are there any obstructions in interfacing Rust libraries from Julia? We are currently thinking about which language to interface to build a gRPC library. And Rust, Python, C++ are the options rn. So I'm wondering if there's a clear \"best option\" :smile:","user":"UMWFZF5DW","ts":"1612728889.055000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MI8G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any obstructions in interfacing Rust libraries from Julia? We are currently thinking about which language to interface to build a gRPC library. And Rust, Python, C++ are the options rn. So I'm wondering if there's a clear \"best option\" "},{"type":"emoji","name":"smile"}]}]}]},{"client_msg_id":"4e275560-3e22-47bb-b80e-589fcd2b6130","type":"message","text":"what's you specific criteria? the foreign function interface?","user":"UDSU53PEG","ts":"1612729851.056400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oP1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what's you specific criteria? the foreign function interface?"}]}]}]},{"client_msg_id":"de300b59-d8dd-4bd3-91f0-1c64a9379d6c","type":"message","text":"For Rust you'd have to write a C-flavored API that Julia could call. With C++ you also have to use a subset of the language at the language interface. Python can integrate best with Julia through PyCall, but if you're writing Python you might as well be writing Julia and get all of the benefits of Julia.","user":"URVFJB60N","ts":"1612731162.060600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tzkv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For Rust you'd have to write a C-flavored API that Julia could call. With C++ you also have to use a subset of the language at the language interface. Python can integrate best with Julia through PyCall, but if you're writing Python you might as well be writing Julia and get all of the benefits of Julia."}]}]}]},{"client_msg_id":"857dee2d-e2b3-463b-a3e4-70ab21f505a6","type":"message","text":"Yea I think you'd have to write a C wrapper to call it in from Julia\n<https://github.com/alexcrichton/rust-ffi-examples/tree/a2ddf21e48b8c907d5a049114698283c2cca7847>\nMaybe going the other way is easier?\n\nThen there's always the question of \"do I _need_ to use Julia\" or \"do I _need_ to use Rust\". I've often found that writing everything in one language is usually easier long term. Calling Julia from X is clunky, and calling Y into Julia is a lot of boiler plate with gauranted hiccups.","user":"UPUBAM63X","ts":"1612733753.063000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m0H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea I think you'd have to write a C wrapper to call it in from Julia\n"},{"type":"link","url":"https://github.com/alexcrichton/rust-ffi-examples/tree/a2ddf21e48b8c907d5a049114698283c2cca7847"},{"type":"text","text":"\nMaybe going the other way is easier?\n\nThen there's always the question of \"do I "},{"type":"text","text":"need","style":{"italic":true}},{"type":"text","text":" to use Julia\" or \"do I "},{"type":"text","text":"need","style":{"italic":true}},{"type":"text","text":" to use Rust\". I've often found that writing everything in one language is usually easier long term. Calling Julia from X is clunky, and calling Y into Julia is a lot of boiler plate with gauranted hiccups."}]}]}]},{"client_msg_id":"03852a86-b4d7-47c3-a9d0-e7fe098f8e28","type":"message","text":"For a lot of applications you can prototype your code in julia than write the code you need in say C++ using some math libraries (Eigen/Armadillo), call OpenMPI if you have too. Performance is usually commensurate and then there's no JIT...","user":"UPUBAM63X","ts":"1612733888.064200","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1612733923.000000"},"blocks":[{"type":"rich_text","block_id":"yGgzc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For a lot of applications you can prototype your code in julia than write the code you need in say C++ using some math libraries (Eigen/Armadillo), call OpenMPI if you have too. Performance is usually commensurate and then there's no JIT..."}]}]}]},{"client_msg_id":"1CCB8061-AF4A-40D6-B0F4-969614F01309","type":"message","text":"One could write microservices in different languages.","user":"U01CQTKB86N","ts":"1612734570.065600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2XlW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One could write microservices in different languages."}]}]}],"thread_ts":"1612734570.065600","reply_count":8,"reply_users_count":2,"latest_reply":"1612735975.073800","reply_users":["UPUBAM63X","U01CQTKB86N"],"subscribed":false},{"client_msg_id":"75e21680-4b63-4da4-9ca5-79b56ad72e92","type":"message","text":"Second post here looks doable :slightly_smiling_face:\n<https://stackoverflow.com/questions/51916904/interaction-between-julia-and-rust>","user":"UPUBAM63X","ts":"1612734698.068100","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1612734704.000000"},"blocks":[{"type":"rich_text","block_id":"wz8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Second post here looks doable "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\n"},{"type":"link","url":"https://stackoverflow.com/questions/51916904/interaction-between-julia-and-rust"}]}]}],"thread_ts":"1612734698.068100","reply_count":1,"reply_users_count":1,"latest_reply":"1612735057.070400","reply_users":["URVFJB60N"],"subscribed":false},{"client_msg_id":"85bca828-9606-4eba-ae60-2d51f0381852","type":"message","text":"As an extension to what <@URVFJB60N> said, you can write a C-flavored API and write a corresponding C header file (e.g.: `library.h`) and use Clang.jl to generate the Julia code to call into rust shared library with a C ABI. I've had success doing this.","user":"ULGMQ3LCB","ts":"1612889841.077000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2pFA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As an extension to what "},{"type":"user","user_id":"URVFJB60N"},{"type":"text","text":" said, you can write a C-flavored API and write a corresponding C header file (e.g.: "},{"type":"text","text":"library.h","style":{"code":true}},{"type":"text","text":") and use Clang.jl to generate the Julia code to call into rust shared library with a C ABI. I've had success doing this."}]}]}]},{"client_msg_id":"90494184-cd4f-429f-8e59-de45d5bd2504","type":"message","text":"hot damn","user":"U6QGE7S86","ts":"1612980053.077500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HUv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hot damn"}]}]}]},{"client_msg_id":"3ffdeaa2-a576-4422-864b-f5943d8f83f1","type":"message","text":"<https://twitter.com/RanjitJhala/status/1359256720401338370>","user":"U6QGE7S86","ts":"1612980056.077700","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/RanjitJhala|@RanjitJhala>: On the bright side, v. excited about these recent developments due to <https://twitter.com/nilehmann|@nilehmann> &amp; <https://twitter.com/cao_sh|@cao_sh> <https://pbs.twimg.com/media/Et0MO6JVoAA_Aek.png>","ts":1612907030,"author_name":"Ranjit Jhala","author_link":"https://twitter.com/RanjitJhala/status/1359256720401338370","author_icon":"https://pbs.twimg.com/profile_images/798637616849526784/NYICNuSO_normal.jpg","author_subname":"@RanjitJhala","text":"On the bright side, v. excited about these recent developments due to <https://twitter.com/nilehmann|@nilehmann> &amp; <https://twitter.com/cao_sh|@cao_sh> <https://pbs.twimg.com/media/Et0MO6JVoAA_Aek.png>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/RanjitJhala/status/1359256720401338370","image_url":"https://pbs.twimg.com/media/Et0MO6JVoAA_Aek.png","image_width":637,"image_height":239,"image_bytes":53915,"id":1,"original_url":"https://twitter.com/RanjitJhala/status/1359256720401338370","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"JAdCq","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/RanjitJhala/status/1359256720401338370"}]}]}],"thread_ts":"1612980056.077700","reply_count":1,"reply_users_count":1,"latest_reply":"1612980869.077900","reply_users":["U7HAYKY9X"],"subscribed":false},{"client_msg_id":"72c6d67f-9fab-4b8f-b648-904c6fa6c187","type":"message","text":"made my first suggestion to rust lang:\n<https://internals.rust-lang.org/t/type-constraint-dispatch/14052>\nmight be entertaining to see how hard I get smacked :P","user":"UPUBAM63X","ts":"1613319636.079200","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1613319715.000000"},"blocks":[{"type":"rich_text","block_id":"8fYhx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"made my first suggestion to rust lang:\n"},{"type":"link","url":"https://internals.rust-lang.org/t/type-constraint-dispatch/14052"},{"type":"text","text":"\nmight be entertaining to see how hard I get smacked :P"}]}]}]},{"client_msg_id":"402124f7-d7dd-433e-8f67-74d8ce7329bf","type":"message","text":"I thought your first suggestion was to make the lang fully specified? :stuck_out_tongue:","user":"UDSU53PEG","ts":"1613331588.080000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4=/X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought your first suggestion was to make the lang fully specified? "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1613331588.080000","reply_count":3,"reply_users_count":1,"latest_reply":"1613332649.080500","reply_users":["UPUBAM63X"],"subscribed":false},{"client_msg_id":"e49a30e5-19bc-40ef-935f-eea773f7f929","type":"message","text":"At least once a week I think \"Why don't I code more in Rust? I should code something up quick to get better at it\", and then, 30 minutes later, I'm like, \"Oh, that was why\".","user":"U7HAYKY9X","ts":"1613332828.081500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IeJyW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"At least once a week I think \"Why don't I code more in Rust? I should code something up quick to get better at it\", and then, 30 minutes later, I'm like, \"Oh, that was why\"."}]}]}],"thread_ts":"1613332828.081500","reply_count":2,"reply_users_count":1,"latest_reply":"1613333865.081800","reply_users":["UPUBAM63X"],"subscribed":false},{"type":"message","text":"We all know which one we really use.","files":[{"id":"F01MMPTL2KZ","created":1613334633,"timestamp":1613334633,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UPUBAM63X","editable":false,"size":5141,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01MMPTL2KZ/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01MMPTL2KZ/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01MMPTL2KZ-13f85a32af/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01MMPTL2KZ-13f85a32af/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01MMPTL2KZ-13f85a32af/image_360.png","thumb_360_w":277,"thumb_360_h":48,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01MMPTL2KZ-13f85a32af/image_160.png","original_w":277,"original_h":48,"thumb_tiny":"AwAIADCnijvQetJTAXv/APXo/wA9aSigBeMdBQcHoMUlFID/2Q==","permalink":"https://julialang.slack.com/files/UPUBAM63X/F01MMPTL2KZ/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01MMPTL2KZ-d27cc041bb","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"5eV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We all know which one we really use."}]}]}],"user":"UPUBAM63X","display_as_bot":false,"ts":"1613334645.082600"},{"client_msg_id":"d7c7b95d-5266-4595-a00f-9bedb2a7950d","type":"message","text":"today I learned <https://doc.rust-lang.org/edition-guide/rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html>","user":"UPUBAM63X","ts":"1613520677.089100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WwDHI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"today I learned "},{"type":"link","url":"https://doc.rust-lang.org/edition-guide/rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html"}]}]}]},{"client_msg_id":"48ab64b0-0e3c-4ef2-b229-468a4fefdc46","type":"message","text":"Not 100% what to make of this. Static verification of Rust?\n<https://viperproject.github.io/prusti-dev/user-guide/basic.html>\nBut why?","user":"UPUBAM63X","ts":"1613604492.091100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"53KQt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not 100% what to make of this. Static verification of Rust?\n"},{"type":"link","url":"https://viperproject.github.io/prusti-dev/user-guide/basic.html"},{"type":"text","text":"\nBut why?"}]}]}]},{"client_msg_id":"d1917aca-d34c-4434-8a47-1806443295f6","type":"message","text":"Some programs require the utmost rigor for correctness - think medical, aerospace, water treatment, nuclear reactors, critical infrasctructure. If there are bugs, people can die.","user":"U6QGE7S86","ts":"1613604996.092000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yum","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some programs require the utmost rigor for correctness - think medical, aerospace, water treatment, nuclear reactors, critical infrasctructure. If there are bugs, people can die."}]}]}]},{"client_msg_id":"c63a1ae7-3347-4aec-9522-d9770f44f028","type":"message","text":"In that world, writing code where you prove that each piece of code\n1. Starts with inputs that you know are correct\n2. maintains a certain invariant in the piece of code\n3. An exit condition is satisfied\nIs (handwaving) basically enough to ensure the proper behavior.","user":"U6QGE7S86","ts":"1613605080.093600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rbVD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In that world, writing code where you prove that each piece of code\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Starts with inputs that you know are correct"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"maintains a certain invariant in the piece of code"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"An exit condition is satisfied"}]}],"style":"ordered","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"Is (handwaving) basically enough to ensure the proper behavior."}]}]}]},{"client_msg_id":"735b5581-b278-40b9-80b6-953ce8bdbf67","type":"message","text":"Those 3 conditions are called the precondition, invariant, and the postcondition are called Hoare triplets if you're interested.","user":"U6QGE7S86","ts":"1613605108.094200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y26do","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Those 3 conditions are called the precondition, invariant, and the postcondition are called Hoare triplets if you're interested."}]}]}]},{"client_msg_id":"06062332-f4a5-49eb-a811-ab8ed568c726","type":"message","text":"What makes it also really useful is for post-mortems once an incredibly complex systems like these failed.","user":"U6QGE7S86","ts":"1613605123.094600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mHP1K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What makes it also really useful is for post-mortems once an incredibly complex systems like these failed."}]}]}]},{"client_msg_id":"0c2282ba-3702-4e83-99a0-aeb8020a2756","type":"message","text":"As a quick example, make a graph with 5ish nodes in your mind and directed vertexes.\nThese nodes represent pieces of code, and the vertexes are the control flow handoffs.\nIf you're entire system is using these Hoare triplets (or at least the critical section part that is most necessary) then whenever something fails you get a much more clear picture of which invariants where violated where and between which pieces of code.","user":"U6QGE7S86","ts":"1613605212.096300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MVq0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As a quick example, make a graph with 5ish nodes in your mind and directed vertexes.\nThese nodes represent pieces of code, and the vertexes are the control flow handoffs.\nIf you're entire system is using these Hoare triplets (or at least the critical section part that is most necessary) then whenever something fails you get a much more clear picture of which invariants where violated where and between which pieces of code."}]}]}]},{"client_msg_id":"afaae6da-e1fd-4d85-b52f-cc718868db19","type":"message","text":"That library is facilitating that type of design called \"design by contract\" and is popular in some languages.","user":"U6QGE7S86","ts":"1613605245.096900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pAqL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That library is facilitating that type of design called \"design by contract\" and is popular in some languages."}]}]}]},{"client_msg_id":"b707b8c5-5bc7-4466-8c63-f51c5bd94c8f","type":"message","text":"So I've written code for those environments but passed them off to a 3rd party for final validation. I basically had to write hundreds of unit tests and display all mathematics","user":"UPUBAM63X","ts":"1613605354.098000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B3jP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I've written code for those environments but passed them off to a 3rd party for final validation. I basically had to write hundreds of unit tests and display all mathematics"}]}]}]},{"client_msg_id":"852681df-0e18-4e90-84c9-113e397c140c","type":"message","text":"Yeah, unit tests are good for catching some types of bugs. Contracts are good for catching bugs more on the design side.","user":"U6QGE7S86","ts":"1613605386.098600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=th","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, unit tests are good for catching some types of bugs. Contracts are good for catching bugs more on the design side."}]}]}]},{"client_msg_id":"a41bac1f-526b-4741-870f-27a03f63d01c","type":"message","text":"interesting thanks for explaining","user":"UPUBAM63X","ts":"1613605407.098800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XrJu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting thanks for explaining"}]}]}]},{"client_msg_id":"9b6b1e7e-fede-4c53-9c49-f687cb46294a","type":"message","text":"Specifically, unit tests are good for chcking that your implementation says it does aka, verifying your footgon \"shoots straight\".","user":"U6QGE7S86","ts":"1613605631.099600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ex/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Specifically, unit tests are good for chcking that your implementation says it does aka, verifying your footgon \"shoots straight\"."}]}]}]},{"client_msg_id":"281e4b1f-c962-41c4-8a66-9f738a279f60","type":"message","text":"Contracts and formal verification try to test \"You are aiming at the right thing with that.\"","user":"U6QGE7S86","ts":"1613605669.100400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"juoK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Contracts and formal verification try to test \"You are aiming at the right thing with that.\""}]}]}]},{"client_msg_id":"39ae6800-f0c2-42e8-bbc7-cc16d1207a21","type":"message","text":"I think I'll have to look into cases where it does something a unit test couldn't","user":"UPUBAM63X","ts":"1613605723.100800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"acXV+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I'll have to look into cases where it does something a unit test couldn't"}]}]}]},{"client_msg_id":"63aa7284-2acf-4674-9353-a85aff810e55","type":"message","text":"TLA+ isn't formally called \"design by contracts\" but it's a formal verification tool that was invaluable at production in AWS - they wrote a paper on it","user":"U6QGE7S86","ts":"1613605856.101700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c6s=Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"TLA+ isn't formally called \"design by contracts\" but it's a formal verification tool that was invaluable at production in AWS - they wrote a paper on it"}]}]}]},{"client_msg_id":"79fed1dc-8ce0-4916-829d-572435e79b36","type":"message","text":"```Side Benefit: A Better Way to Design SystemsTLA+ has been helping us shift to a better way of designing systems. Engineers naturally focus on designing the 'happy case' for a system, i.e. the processing pathin which no errors occur. This is understandable, as the happy case is by far the most common case. That codepath must solve the customer's problem, perform well, make efficient use of resources, and scale with the business; these are all significant challenges in their own right. Once the design for the happy case is done, the engineer then tries to think of \"what might go wrong?\",based on personalexperience and that of colleagues and reviewers. The engineer then adds mitigations for these classes of scenarios,prioritized by intuition and perhaps some statistics on the probability of occurrence. Almost always,the engineer stopswell short of handling 'extremely rare' combinations of events, as thereare too many such scenarios to imagine.```","user":"U6QGE7S86","ts":"1613605876.102000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+aQj","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Side Benefit: A Better Way to Design SystemsTLA+ has been helping us shift to a better way of designing systems. Engineers naturally focus on designing the 'happy case' for a system, i.e. the processing pathin which no errors occur. This is understandable, as the happy case is by far the most common case. That codepath must solve the customer's problem, perform well, make efficient use of resources, and scale with the business; these are all significant challenges in their own right. Once the design for the happy case is done, the engineer then tries to think of \"what might go wrong?\",based on personalexperience and that of colleagues and reviewers. The engineer then adds mitigations for these classes of scenarios,prioritized by intuition and perhaps some statistics on the probability of occurrence. Almost always,the engineer stopswell short of handling 'extremely rare' combinations of events, as thereare too many such scenarios to imagine."}]}]}]},{"client_msg_id":"e93ad06d-2b79-491a-b52b-3e406cb16faa","type":"message","text":"<https://lamport.azurewebsites.net/tla/formal-methods-amazon.pdf>","user":"U6QGE7S86","ts":"1613605883.102200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DtVdP","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://lamport.azurewebsites.net/tla/formal-methods-amazon.pdf"}]}]}]},{"client_msg_id":"3ebc88be-724b-4cb4-9d24-cce815d6bd3a","type":"message","text":"This is also a decent presentation on it","user":"U6QGE7S86","ts":"1613605910.102500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Zvp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is also a decent presentation on it"}]}]}]},{"client_msg_id":"981d99aa-7f57-4092-9787-1e883f788943","type":"message","text":"<https://www.youtube.com/watch?v=MYucYon2-lk>","user":"U6QGE7S86","ts":"1613605913.102700","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"Hillel Wayne - Beyond Unit Tests: Taking Your Testing to the Next Level - PyCon 2018","title_link":"https://www.youtube.com/watch?v=MYucYon2-lk","author_name":"PyCon 2018","author_link":"https://www.youtube.com/c/pycon2018","thumb_url":"https://i.ytimg.com/vi/MYucYon2-lk/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: Hillel Wayne - Beyond Unit Tests: Taking Your Testing to the Next Level - PyCon 2018","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/MYucYon2-lk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://www.youtube.com/watch?v=MYucYon2-lk","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://www.youtube.com/watch?v=MYucYon2-lk"}],"blocks":[{"type":"rich_text","block_id":"v9W=c","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.youtube.com/watch?v=MYucYon2-lk"}]}]}]},{"client_msg_id":"edcdaf1e-55ac-4bfa-af13-0d7723778295","type":"message","text":"okay I get it now","user":"UPUBAM63X","ts":"1613605973.103100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h83Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay I get it now"}]}]}]},{"client_msg_id":"e0d24b7c-e373-43e9-9cec-0259043d155f","type":"message","text":"For one, Rust's compiler can protect you against data races - but not livelocks, deadlocks or guarantee fault tolerance. You can validate those designs with TLA+ within ~80 lines of code.","user":"U6QGE7S86","ts":"1613606046.105400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EZ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For one, Rust's compiler can protect you against data races - but not livelocks, deadlocks or guarantee fault tolerance. You can validate those designs with TLA+ within ~80 lines of code."}]}]}]},{"client_msg_id":"e1b047ff-3fa6-47da-bb57-5b005e230744","type":"message","text":"so the idea is you might unit test that something is true, and that's cool, but in combination with 100k lines of code running it's possible that something else mutates state, or something, and the code isn't doing whats intended, despite the function working fine in the first place. So if you put bounds around the function via these contract things it's stronger than just testing lifeless code.","user":"UPUBAM63X","ts":"1613606062.106100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fvB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so the idea is you might unit test that something is true, and that's cool, but in combination with 100k lines of code running it's possible that something else mutates state, or something, and the code isn't doing whats intended, despite the function working fine in the first place. So if you put bounds around the function via these contract things it's stronger than just testing lifeless code."}]}]}],"reactions":[{"name":"100","users":["U6QGE7S86"],"count":1}]},{"client_msg_id":"0fe83d78-56b0-4b89-a0a9-607862d491a6","type":"message","text":"Famously, they have a line that goes like \"Why spend a couple hours learning TLA+ when you could spend months debugging production?\"","user":"U6QGE7S86","ts":"1613606111.106400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zUR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Famously, they have a line that goes like \"Why spend a couple hours learning TLA+ when you could spend months debugging production?\""}]}]}],"reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"4662bafa-7a98-40db-9a95-319190031ea0","type":"message","text":"Combing back to contarcts, yes, it's one of the tools that you can use. I don't know that you can specify global properties like \"no deadlocks will happen\" via contracts because I think those only reason locally about functions, but that's one of the benenfits.","user":"U6QGE7S86","ts":"1613606167.108000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oi61","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Combing back to contarcts, yes, it's one of the tools that you can use. I don't know that you can specify global properties like \"no deadlocks will happen\" via contracts because I think those only reason locally about functions, but that's one of the benenfits."}]}]}]},{"client_msg_id":"695a0c99-9e73-4503-b440-9457789dfd7c","type":"message","text":"so does Prusti mitigate the need for TLA+ or should it be used in conjunction?","user":"UPUBAM63X","ts":"1613606178.108300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"et5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so does Prusti mitigate the need for TLA+ or should it be used in conjunction?"}]}]}]},{"client_msg_id":"2a1a5d2d-237a-4ff8-8df3-1a21ff3e2933","type":"message","text":"Sorry the phrase is \"Weeks of debugging can save you hours of TLA+!\"","user":"U6QGE7S86","ts":"1613606206.108600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EJ9r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry the phrase is \"Weeks of debugging can save you hours of TLA+!\""}]}]}],"reactions":[{"name":"laughing","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"9eff3ad6-a3c0-4946-8ff8-a76db151d5aa","type":"message","text":"<https://www.youtube.com/watch?v=wjsI0lTSjIo&amp;t=708s>","user":"U6QGE7S86","ts":"1613606207.108800","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"SREcon20 Americas - Weeks of Debugging Can Save You Hours of TLA+","title_link":"https://www.youtube.com/watch?v=wjsI0lTSjIo&amp;t=708s","author_name":"USENIX","author_link":"https://www.youtube.com/c/UsenixOrg","thumb_url":"https://i.ytimg.com/vi/wjsI0lTSjIo/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: SREcon20 Americas - Weeks of Debugging Can Save You Hours of TLA+","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/wjsI0lTSjIo?feature=oembed&start=708&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://www.youtube.com/watch?v=wjsI0lTSjIo&amp;t=708s","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://www.youtube.com/watch?v=wjsI0lTSjIo&amp;t=708s"}],"blocks":[{"type":"rich_text","block_id":"IdHM","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.youtube.com/watch?v=wjsI0lTSjIo&t=708s"}]}]}]},{"client_msg_id":"1508960b-ce30-4bc2-9d15-772ab13f8b62","type":"message","text":"<@UPUBAM63X> Well, they're all different tools with different purposes.","user":"U6QGE7S86","ts":"1613606239.109500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ueeO","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" Well, they're all different tools with different purposes."}]}]}]},{"client_msg_id":"f75ddef0-74fa-4050-a03b-dfe4b215826f","type":"message","text":"It's good to verify a design with TLA+, but that doesn't guarantee your specification is correct. Actually checking that you implemented what you wanted to is a good case for unit testing.","user":"U6QGE7S86","ts":"1613606279.110400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lCLW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's good to verify a design with TLA+, but that doesn't guarantee your specification is correct. Actually checking that you implemented what you wanted to is a good case for unit testing."}]}]}]},{"client_msg_id":"00a27aff-d585-45f1-a4e4-7feff8302641","type":"message","text":"That's kinda the gist of HIllel Wayne's talk above, there's no one method that can solve all computer bugs, and no one prog language that can do it","user":"U6QGE7S86","ts":"1613606305.111000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hOU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's kinda the gist of HIllel Wayne's talk above, there's no one method that can solve all computer bugs, and no one prog language that can do it"}]}]}]},{"client_msg_id":"e4f5b7e1-8b40-432a-886d-625cd5b3910a","type":"message","text":"If you actually measure what helps most, it's minimizing stress and sleep deprivation for your programmers.","user":"U6QGE7S86","ts":"1613606323.111500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vRr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you actually measure what helps most, it's minimizing stress and sleep deprivation for your programmers."}]}]}]},{"client_msg_id":"6e197879-8f18-4b4f-a077-7bcac3a5c3a5","type":"message","text":"The rest are empirically measure to be ... a wash.","user":"U6QGE7S86","ts":"1613606333.111800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Viq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The rest are empirically measure to be ... a wash."}]}]}]},{"client_msg_id":"b04ef0db-e04e-4469-b721-338008230cd6","type":"message","text":"makes sense","user":"UPUBAM63X","ts":"1613606353.112000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NEg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"makes sense"}]}]}]},{"client_msg_id":"fc2c4edb-00e2-41e7-ae12-816a0b83deb2","type":"message","text":"I'll check these talks out later for sure :slightly_smiling_face:","user":"UPUBAM63X","ts":"1613606363.112300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YWOxB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll check these talks out later for sure "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"ca1b76c6-6085-4133-a4cd-b4ab3cd8c21c","type":"message","text":"HIllel is a great speaker, and he talsk about tests, fuzzing, contracts and TLA+ in that talk as a nice and brief overview","user":"U6QGE7S86","ts":"1613606387.112800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"39l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"HIllel is a great speaker, and he talsk about tests, fuzzing, contracts and TLA+ in that talk as a nice and brief overview"}]}]}]},{"client_msg_id":"2c401d85-e3f9-47ac-a88c-063cd88fbc39","type":"message","text":"the one about \"Weeks of Debugging\" is more of a live demo of using TLA+ to debug a multiple producer multiple consumer queue code written in C.","user":"U6QGE7S86","ts":"1613606413.113500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h=l+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the one about \"Weeks of Debugging\" is more of a live demo of using TLA+ to debug a multiple producer multiple consumer queue code written in C."}]}]}]},{"client_msg_id":"7efb1452-e72f-4c60-bd7b-40af7058ef88","type":"message","text":"Haskell using Rust as a watermark: <https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/>","user":"UDSU53PEG","ts":"1613649230.115600","team":"T68168MUP","attachments":[{"service_name":"Haskell Community","title":"[Call for Ideas] Forming a Technical Agenda","title_link":"https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/","text":"Hi all, With the Haskell Foundation’s board and executive director established and fundraising going well, it is time to pin down an agenda of technical priorities which the Foundation’s resources should support. In this thread I am asking for your help in brainstorming ideas for this agenda. Since its introduction Haskell Foundation has been framed primarily as an enabling institution. The Foundation is primarily to facilitate, not supplant, existing community efforts; while the Foundation ca...","fallback":"Haskell Community: [Call for Ideas] Forming a Technical Agenda","thumb_url":"https://discourse.haskell.org/uploads/default/original/1X/89166504e40f4869ea825dd70048017861ec8578.png","fields":[{"title":"Reading time","value":"6 mins :clock2:","short":true},{"title":"Likes","value":"34 :heart:","short":true}],"ts":1613523163,"from_url":"https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/","thumb_width":512,"thumb_height":512,"service_icon":"https://discourse.haskell.org/uploads/default/optimized/1X/8df5f8aba60b473c9ac204abffa76879e8c09229_2_180x180.png","id":1,"original_url":"https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/"}],"blocks":[{"type":"rich_text","block_id":"KKYt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haskell using Rust as a watermark: "},{"type":"link","url":"https://discourse.haskell.org/t/call-for-ideas-forming-a-technical-agenda/1901/"}]}]}]}]}