{"cursor": 0, "messages": [{"type":"message","subtype":"channel_join","ts":"1616066468.000200","user":"U67SCG4HG","text":"<@U67SCG4HG> has joined the channel"},{"type":"message","subtype":"channel_purpose","ts":"1616066468.000300","user":"U67SCG4HG","text":"<@U67SCG4HG> set the channel purpose: Discussion related to the finite element toolbox Ferrite.jl (<https://github.com/Ferrite-FEM/Ferrite.jl>)","purpose":"Discussion related to the finite element toolbox Ferrite.jl (<https://github.com/Ferrite-FEM/Ferrite.jl>)"},{"type":"message","subtype":"channel_join","ts":"1616066537.000500","user":"UMJPZQ4RM","text":"<@UMJPZQ4RM> has joined the channel","inviter":"U67SCG4HG"},{"type":"message","subtype":"channel_join","ts":"1616066538.000700","user":"U67D54KS8","text":"<@U67D54KS8> has joined the channel","inviter":"U67SCG4HG"},{"type":"message","subtype":"channel_join","ts":"1616066538.000900","user":"U7624B5U7","text":"<@U7624B5U7> has joined the channel","inviter":"U67SCG4HG"},{"type":"message","subtype":"channel_join","ts":"1616066538.001100","user":"U014A5E6L3V","text":"<@U014A5E6L3V> has joined the channel","inviter":"U67SCG4HG"},{"type":"message","subtype":"channel_join","ts":"1616066538.001300","user":"UUS6GL8BH","text":"<@UUS6GL8BH> has joined the channel","inviter":"U67SCG4HG"},{"type":"message","subtype":"channel_join","ts":"1616066539.001500","user":"UJW01KDBJ","text":"<@UJW01KDBJ> has joined the channel","inviter":"U67SCG4HG"},{"client_msg_id":"8cc761d6-7857-4406-a314-245b33e8d6d9","type":"message","text":"renaming was just in time:","user":"UUS6GL8BH","ts":"1616066732.001900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3ytd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"renaming was just in time:"}]}]}]},{"type":"message","text":"","files":[{"id":"F01RVHC7ZJ8","created":1616066733,"timestamp":1616066733,"name":"grafik.png","title":"grafik.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UUS6GL8BH","editable":false,"size":231814,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01RVHC7ZJ8/grafik.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01RVHC7ZJ8/download/grafik.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01RVHC7ZJ8-251adb0335/grafik_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01RVHC7ZJ8-251adb0335/grafik_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01RVHC7ZJ8-251adb0335/grafik_360.png","thumb_360_w":360,"thumb_360_h":269,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01RVHC7ZJ8-251adb0335/grafik_480.png","thumb_480_w":480,"thumb_480_h":358,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01RVHC7ZJ8-251adb0335/grafik_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01RVHC7ZJ8-251adb0335/grafik_720.png","thumb_720_w":720,"thumb_720_h":537,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01RVHC7ZJ8-251adb0335/grafik_800.png","thumb_800_w":800,"thumb_800_h":597,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01RVHC7ZJ8-251adb0335/grafik_960.png","thumb_960_w":960,"thumb_960_h":716,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01RVHC7ZJ8-251adb0335/grafik_1024.png","thumb_1024_w":1024,"thumb_1024_h":764,"original_w":1245,"original_h":929,"thumb_tiny":"AwAjADDQO7seKMP6/wCfypW6Cm4oAXD+o/P/AOtQdwPX/P5Uo69vypHoAN3q+KcDkdc0wU5OhoAMjgVXkvFRyqgEDirDLuU4JUkYyO1Zi6fOSQXQAd85zRa41bqXre4MzEBRgdTUpOD0plvCsEQQHJ6k+tPYZNCExf8AgNH4Ypm4DggZp4/DHtQAx2K4wab27Usvak/hpiF79B0pyAFeQKb3/Cnx/doGIYkJ5H607AAwKWg9KQH/2Q==","permalink":"https://julialang.slack.com/files/UUS6GL8BH/F01RVHC7ZJ8/grafik.png","permalink_public":"https://slack-files.com/T68168MUP-F01RVHC7ZJ8-f04aa76585","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"UUS6GL8BH","display_as_bot":false,"ts":"1616066737.002000","reactions":[{"name":"fast_parrot","users":["U67SCG4HG"],"count":1},{"name":"otter","users":["UMJPZQ4RM"],"count":1}]},{"client_msg_id":"89367235-110f-4ca4-9e3f-57b17fb0ed94","type":"message","text":"For the GAMM conference?","user":"U67SCG4HG","ts":"1616067093.002700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OMig","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For the GAMM conference?"}]}]}]},{"client_msg_id":"d64b6a87-9bbf-408e-84c0-256e9eed5366","type":"message","text":"yep :slightly_smiling_face:","user":"UUS6GL8BH","ts":"1616067115.002900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DO2ad","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yep "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"a59e488b-32a8-4519-aae3-4e1a08582cc3","type":"message","text":"`L2Projector` doesn't work for scalar fields?","user":"U67SCG4HG","ts":"1616073531.003700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LIFE3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"L2Projector","style":{"code":true}},{"type":"text","text":" doesn't work for scalar fields?"}]}]}]},{"client_msg_id":"c773197a-0568-4239-9010-e7737f2e0871","type":"message","text":"It doesn't?","user":"UMJPZQ4RM","ts":"1616073577.003900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S6ue","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It doesn't?"}]}]}]},{"client_msg_id":"b6c0e684-c052-491a-8c82-1dac0cd417fb","type":"message","text":"Do you have an example?","user":"UMJPZQ4RM","ts":"1616073593.004200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nvSo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you have an example?"}]}]}]},{"client_msg_id":"f7948006-56df-4961-b48c-b68edcbf4652","type":"message","text":"<https://github.com/Ferrite-FEM/Ferrite.jl/blob/eed794d336b0fba115dc584b2e67402932e65cf4/src/L2_projection.jl#L102> restricts to `T &lt;: Tensor`","user":"U67SCG4HG","ts":"1616073613.004500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cTvs","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/Ferrite-FEM/Ferrite.jl/blob/eed794d336b0fba115dc584b2e67402932e65cf4/src/L2_projection.jl#L102"},{"type":"text","text":" restricts to "},{"type":"text","text":"T <: Tensor","style":{"code":true}}]}]}]},{"client_msg_id":"672b9388-1346-46cb-9737-55b0fe8eb865","type":"message","text":"I'll check why","user":"UMJPZQ4RM","ts":"1616073798.005200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gn7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll check why"}]}]}]},{"type":"message","subtype":"channel_join","ts":"1616074533.005400","user":"U01RH49QLKY","text":"<@U01RH49QLKY> has joined the channel","inviter":"U67SCG4HG"},{"type":"message","subtype":"channel_join","ts":"1616074606.005600","user":"U01RLR0LPUM","text":"<@U01RLR0LPUM> has joined the channel","inviter":"U67SCG4HG"},{"client_msg_id":"ba3c7f0b-9d5b-427f-af3d-94b0259260ff","type":"message","text":"Thanks. It is for Henrik and Daniel (master thesis workers) that wan't to project the von Mises stress (scalar field).","user":"U67SCG4HG","ts":"1616074762.006300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5n=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. It is for Henrik and Daniel (master thesis workers) that wan't to project the von Mises stress (scalar field)."}]}]}]},{"client_msg_id":"d41ab6ea-09d0-4a59-93ad-61ee5afc17ea","type":"message","text":"Its due to the fact that the L2 projection treats Tensors element wise. It has some `T.data[i]`  in it. But I agree that it should take scalar fields, I'll fix one of these days. In the meanwhile they can maybe as a work-around convert their von Mises values to Tensor{1,1} for the L2 Projection?","user":"UMJPZQ4RM","ts":"1616075019.010300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NUt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its due to the fact that the L2 projection treats Tensors element wise. It has some "},{"type":"text","text":"T.data[i]","style":{"code":true}},{"type":"text","text":"  in it. But I agree that it should take scalar fields, I'll fix one of these days. In the meanwhile they can maybe as a work-around convert their von Mises values to Tensor{1,1} for the L2 Projection?"}]}]}]},{"client_msg_id":"c641d574-ce85-454b-834f-ad9de2b8ba2f","type":"message","text":"Yea, they had already tried that, but I don't think that worked for some other reason. What was the error you got in that case Henrik or Daniel?","user":"U67SCG4HG","ts":"1616075069.010900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"08/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea, they had already tried that, but I don't think that worked for some other reason. What was the error you got in that case Henrik or Daniel?"}]}]}]},{"client_msg_id":"ab33ebda-47fc-4d22-bd91-2ce83ef329d4","type":"message","text":"IIRC it was a dof-number-mismatch, but maybe some other input to the projector was wrong in that case.","user":"U67SCG4HG","ts":"1616075143.011300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q3l3i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IIRC it was a dof-number-mismatch, but maybe some other input to the projector was wrong in that case."}]}]}]},{"client_msg_id":"017ff5c1-26be-441b-a904-e8768f29ade2","type":"message","text":"The projector should maybe also get a bit of documentation and an example...","user":"UMJPZQ4RM","ts":"1616075181.012000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1nx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The projector should maybe also get a bit of documentation and an example..."}]}]}]},{"client_msg_id":"3ccc35cf-c4e8-476f-9624-5461d386b939","type":"message","text":"Yes please :)))","user":"U67SCG4HG","ts":"1616075188.012300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+LuCF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes please :)))"}]}]}]},{"client_msg_id":"d56a160e-6006-4252-a33a-60908c7aee2a","type":"message","text":"But if you send me an example <@U01RH49QLKY> and <@U01RLR0LPUM>, I can check why it didn't work.","user":"UMJPZQ4RM","ts":"1616075284.013400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gq80Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But if you send me an example "},{"type":"user","user_id":"U01RH49QLKY"},{"type":"text","text":" and "},{"type":"user","user_id":"U01RLR0LPUM"},{"type":"text","text":", I can check why it didn't work."}]}]}]},{"client_msg_id":"7ae763d5-1566-4510-9055-4de22b47bf04","type":"message","text":"I have a working example for cookes membrane in 2D","user":"UUS6GL8BH","ts":"1616075300.013700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Mh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a working example for cookes membrane in 2D"}]}]}]},{"client_msg_id":"404a67b2-ad73-4493-8b1c-7a0d7c8711ec","type":"message","text":"needed it for the fem course","user":"UUS6GL8BH","ts":"1616075304.013900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ido","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"needed it for the fem course"}]}]}]},{"client_msg_id":"daf5fe5b-96cc-4cdd-9b40-12996dadd98f","type":"message","text":"in case you don't want to start from scratch","user":"UUS6GL8BH","ts":"1616075319.014300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oeGM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in case you don't want to start from scratch"}]}]}]},{"client_msg_id":"0d70774c-5a2b-4af1-bc31-01423d70123f","type":"message","text":"That sounds good Maxi! Where can I find it?","user":"UMJPZQ4RM","ts":"1616075356.014800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2B5s4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That sounds good Maxi! Where can I find it?"}]}]}]},{"client_msg_id":"95cee9e6-e3c6-4d56-aa29-4c76a9e979f1","type":"message","text":"I'll share it after my talk :slightly_smiling_face:","user":"UUS6GL8BH","ts":"1616075371.015100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vwgn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll share it after my talk "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"df063603-80e4-423e-a92d-47050ab4855b","type":"message","text":"What is the intended cellvalues for the projector?","user":"U67SCG4HG","ts":"1616075426.015500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zBrk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the intended cellvalues for the projector?"}]}]}]},{"client_msg_id":"94c0559a-6bbb-430f-aca2-577f782c295a","type":"message","text":"Better use this constructor <https://github.com/Ferrite-FEM/Ferrite.jl/blob/eed794d336b0fba115dc584b2e67402932e65cf4/src/L2_projection.jl#L29>","user":"UMJPZQ4RM","ts":"1616075509.016600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MVpeb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Better use this constructor "},{"type":"link","url":"https://github.com/Ferrite-FEM/Ferrite.jl/blob/eed794d336b0fba115dc584b2e67402932e65cf4/src/L2_projection.jl#L29"}]}]}]},{"client_msg_id":"1caa1d3d-61aa-4e6e-a97a-c97b8f4bf8f9","type":"message","text":"I only left the first constructor when I updated it for not breaking stuff in case someone was using it.","user":"UMJPZQ4RM","ts":"1616075570.017600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SCNGx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I only left the first constructor when I updated it for not breaking stuff in case someone was using it."}]}]}]},{"client_msg_id":"6c2aa540-bc5e-491f-b0bd-20171dc959a7","type":"message","text":"Okay, the example should be updated then I think.","user":"U67SCG4HG","ts":"1616075592.018300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cLFTV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, the example should be updated then I think."}]}]}],"reactions":[{"name":"thumbsup_all","users":["UMJPZQ4RM"],"count":1}]},{"client_msg_id":"3631800e-f355-4d96-9707-6e72a378594e","type":"message","text":"The quadrature rule should then be the same as the one that was used for computing the e.g. von Mises stresses.","user":"UMJPZQ4RM","ts":"1616075618.018800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2hMTA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The quadrature rule should then be the same as the one that was used for computing the e.g. von Mises stresses."}]}]}]},{"client_msg_id":"a1d5237e-a045-4ea7-8b89-df4543df28f8","type":"message","text":"Yes.","user":"U67SCG4HG","ts":"1616075645.019100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vA7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes."}]}]}]},{"client_msg_id":"63797b3a-8395-49a9-a811-030b45ef9137","type":"message","text":"Okay so I think they problem might have been that they used the CellVectorValues from their vector-valued problem when the projector expects a scalar thingy?","user":"U67SCG4HG","ts":"1616075705.020400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h8QY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay so I think they problem might have been that they used the CellVectorValues from their vector-valued problem when the projector expects a scalar thingy?"}]}]}]},{"client_msg_id":"b3e5b0b8-2a10-48f6-a7f1-9bf9a0289546","type":"message","text":"Yes, that sounds like something that won't work.","user":"UMJPZQ4RM","ts":"1616075744.020900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sm3qm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, that sounds like something that won't work."}]}]}]},{"client_msg_id":"79d11318-ceb3-4a8a-93b4-2c6482e3f1f9","type":"message","text":"(It's actually why I wrote a new constructor. Maybe I should remove the old one after all.)","user":"UMJPZQ4RM","ts":"1616075826.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DaF08","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(It's actually why I wrote a new constructor. Maybe I should remove the old one after all.)"}]}]}]},{"client_msg_id":"0a2e8ce9-3b22-4887-a031-53e6139fa29a","type":"message","text":"Yea, or you could add an in put check in the constructor maybe","user":"U67SCG4HG","ts":"1616075864.022300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"URv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea, or you could add an in put check in the constructor maybe"}]}]}]},{"client_msg_id":"1fb07b5a-bbf1-4daf-9651-d790a89445e2","type":"message","text":"```julia&gt; using Ferrite\n\njulia&gt; grid = generate_grid(Triangle, (2, 2));\n\njulia&gt; qr = QuadratureRule{2,RefTetrahedron}(1);\n\njulia&gt; interp = Lagrange{2,RefTetrahedron,1}();\n\njulia&gt; cvv = CellVectorValues(qr, interp);\n\njulia&gt; mise = [[rand(Vec{1})] for _ in 1:8];\n\njulia&gt; proj = L2Projector(cvv, interp, grid);\n\njulia&gt; project(mise, proj)\nERROR: AssertionError: length(global_dofs) == ndofs_per_cell(dh, i)\nStacktrace:```","user":"U67SCG4HG","ts":"1616076317.023100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sYpIt","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Ferrite\n\njulia> grid = generate_grid(Triangle, (2, 2));\n\njulia> qr = QuadratureRule{2,RefTetrahedron}(1);\n\njulia> interp = Lagrange{2,RefTetrahedron,1}();\n\njulia> cvv = CellVectorValues(qr, interp);\n\njulia> mise = [[rand(Vec{1})] for _ in 1:8];\n\njulia> proj = L2Projector(cvv, interp, grid);\n\njulia> project(mise, proj)\nERROR: AssertionError: length(global_dofs) == ndofs_per_cell(dh, i)\nStacktrace:"}]}]}]},{"client_msg_id":"8e848d92-ce67-482e-a08d-f2d412f00260","type":"message","text":"<@U01RLR0LPUM> <@U01RH49QLKY> this is what you need:\n```julia&gt; grid = generate_grid(Triangle, (2, 2));\n\njulia&gt; qr = QuadratureRule{2,RefTetrahedron}(1);\n\njulia&gt; interp = Lagrange{2,RefTetrahedron,1}();\n\njulia&gt; mise = [[rand(Vec{1})] for _ in 1:8];\n\njulia&gt; qr_lhs = QuadratureRule{2,RefTetrahedron}(2);\n\njulia&gt; proj = L2Projector(qr, interp, grid, 1:getncells(grid), qr_lhs);\n\njulia&gt; project(mise, proj)\n9-element Vector{Vec{1, Float64}}:\n [0.9403829600642892]\n [0.4901393121743038]\n [0.2851740393039776]\n [1.2911483505576056]\n [0.6063308971097039]\n [0.7695867750940183]\n [0.4674787750492808]\n [0.09011422720770261]\n [0.13576746918096969]```\nNote in particular that we need a higher order quadrature rule for the left hand side, since that integrates a \"mass matrix\" where there are no derivates on the shape functions. So for CST interpolation you integrate linear x linear and thus need a higher order quad rule.","user":"U67SCG4HG","ts":"1616076717.024900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pCb","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01RLR0LPUM"},{"type":"text","text":" "},{"type":"user","user_id":"U01RH49QLKY"},{"type":"text","text":" this is what you need:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> grid = generate_grid(Triangle, (2, 2));\n\njulia> qr = QuadratureRule{2,RefTetrahedron}(1);\n\njulia> interp = Lagrange{2,RefTetrahedron,1}();\n\njulia> mise = [[rand(Vec{1})] for _ in 1:8];\n\njulia> qr_lhs = QuadratureRule{2,RefTetrahedron}(2);\n\njulia> proj = L2Projector(qr, interp, grid, 1:getncells(grid), qr_lhs);\n\njulia> project(mise, proj)\n9-element Vector{Vec{1, Float64}}:\n [0.9403829600642892]\n [0.4901393121743038]\n [0.2851740393039776]\n [1.2911483505576056]\n [0.6063308971097039]\n [0.7695867750940183]\n [0.4674787750492808]\n [0.09011422720770261]\n [0.13576746918096969]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Note in particular that we need a higher order quadrature rule for the left hand side, since that integrates a \"mass matrix\" where there are no derivates on the shape functions. So for CST interpolation you integrate linear x linear and thus need a higher order quad rule."}]}]}]},{"client_msg_id":"eda25795-bc87-4770-94d4-be0c823b4785","type":"message","text":"<@U67SCG4HG> Thank you! Now it works. I guess then that for LST qr_lhs must be of even higher order?","user":"U01RLR0LPUM","ts":"1616079453.028200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cMY","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U67SCG4HG"},{"type":"text","text":" Thank you! Now it works. I guess then that for LST qr_lhs must be of even higher order?"}]}]}]},{"client_msg_id":"ae05fe1f-9f47-4dd4-9001-a593f0ba7007","type":"message","text":"Hmm yea that's true. Unless you still project to a linear function (which seems fine since this is just for visualization).","user":"U67SCG4HG","ts":"1616080619.029500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yxP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm yea that's true. Unless you still project to a linear function (which seems fine since this is just for visualization)."}]}]}]},{"client_msg_id":"26cb788f-bc49-45ba-abe0-0d0788909d1f","type":"message","text":"So `interp` in my example above can still be `Lagrange{2,RefTetrahedron,1}()` even though you have used quadratic functions for your solution.","user":"U67SCG4HG","ts":"1616080765.030100","team":"T68168MUP","edited":{"user":"U67SCG4HG","ts":"1616080770.000000"},"blocks":[{"type":"rich_text","block_id":"yv26","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So "},{"type":"text","text":"interp","style":{"code":true}},{"type":"text","text":" in my example above can still be "},{"type":"text","text":"Lagrange{2,RefTetrahedron,1}()","style":{"code":true}},{"type":"text","text":" even though you have used quadratic functions for your solution."}]}]}]},{"client_msg_id":"ea42349c-b65e-4606-b9f7-beb5f7139418","type":"message","text":"Okay, it will then still handle the multiple quadrature points?","user":"U01RLR0LPUM","ts":"1616081468.030900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hWFH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, it will then still handle the multiple quadrature points?"}]}]}]},{"client_msg_id":"115de598-2110-4f6e-99ae-e269484ae17e","type":"message","text":"Yes, since `qr` in that case would be of higher order (so in that case the same qr rule could be used).","user":"U67SCG4HG","ts":"1616082906.032500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TJZ7/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, since "},{"type":"text","text":"qr","style":{"code":true}},{"type":"text","text":" in that case would be of higher order (so in that case the same qr rule could be used)."}]}]}]},{"client_msg_id":"125eb77b-d606-420f-8465-e989ad856539","type":"message","text":"So `qr` either as in the example or with a higher order?","user":"U01RLR0LPUM","ts":"1616083246.033600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z0pcx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So "},{"type":"text","text":"qr","style":{"code":true}},{"type":"text","text":" either as in the example or with a higher order?"}]}]}]},{"client_msg_id":"71cbc956-aa57-4af7-929c-855fe5ee1f73","type":"message","text":"Or you mean `qr` and `qr_lhs` would be the same?","user":"U01RLR0LPUM","ts":"1616084018.034300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xTW78","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or you mean "},{"type":"text","text":"qr","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"qr_lhs","style":{"code":true}},{"type":"text","text":" would be the same?"}]}]}]},{"client_msg_id":"ae400376-10ec-4e2b-a5fa-e35f7c835ba6","type":"message","text":"I mean that the first `qr` should always correspond to the quadrature rule used to solve for the quantity you want to project, and the second one should always be sufficient for integrating the order which you project for, if that makes sense.","user":"U67SCG4HG","ts":"1616090955.036000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IxQN5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean that the first "},{"type":"text","text":"qr","style":{"code":true}},{"type":"text","text":" should always correspond to the quadrature rule used to solve for the quantity you want to project, and the second one should always be sufficient for integrating the order which you project for, if that makes sense."}]}]}]},{"client_msg_id":"e266bc89-0147-4bbd-a092-815caa8b3460","type":"message","text":"do you guys want that in the org and maybe join efforts on it (whenever you need something about gmsh inputs)? <https://github.com/koehlerson/JuAFEMGmsh.jl>","user":"UUS6GL8BH","ts":"1616092207.036700","team":"T68168MUP","edited":{"user":"UUS6GL8BH","ts":"1616092297.000000"},"blocks":[{"type":"rich_text","block_id":"9Z9G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do you guys want that in the org and maybe join efforts on it (whenever you need something about gmsh inputs)? "},{"type":"link","url":"https://github.com/koehlerson/JuAFEMGmsh.jl"}]}]}]},{"client_msg_id":"0bc1a17a-55fc-4568-9bb3-0aced017c6fa","type":"message","text":"Yeah, that makes sense. Thank you!","user":"U01RLR0LPUM","ts":"1616095187.037700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6SS9v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, that makes sense. Thank you!"}]}]}]},{"type":"message","subtype":"channel_join","ts":"1616488612.038800","user":"UNJ3U7TRB","text":"<@UNJ3U7TRB> has joined the channel"},{"client_msg_id":"10a7a54c-461a-42a8-904c-75805fd750d3","type":"message","text":"Our former post doc is now professor of continuum mechanics in Hannover as the successor of Peter Wriggers. He will teach in the same way I did with Pluto.jl and Ferrite.jl :rocket:","user":"UUS6GL8BH","ts":"1616590536.040200","team":"T68168MUP","edited":{"user":"UUS6GL8BH","ts":"1616590570.000000"},"blocks":[{"type":"rich_text","block_id":"KVhF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Our former post doc is now professor of continuum mechanics in Hannover as the successor of Peter Wriggers. He will teach in the same way I did with Pluto.jl and Ferrite.jl "},{"type":"emoji","name":"rocket"}]}]}]},{"client_msg_id":"1bb76478-325b-4afc-826b-f1437bf11dc1","type":"message","text":"Ferrite goes brrrrrrrrrrrr","user":"UUS6GL8BH","ts":"1616590539.040400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"phc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ferrite goes brrrrrrrrrrrr"}]}]}],"reactions":[{"name":"rocket","users":["UMJPZQ4RM","U67D54KS8","U67SCG4HG"],"count":3}]},{"client_msg_id":"d57d073b-a648-4be1-82ba-28e03bec2767","type":"message","text":"Nice, what's his name?","user":"U67SCG4HG","ts":"1616590989.041100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jd8C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice, what's his name?"}]}]}],"thread_ts":"1616590989.041100","reply_count":1,"reply_users_count":1,"latest_reply":"1616591115.041400","reply_users":["UUS6GL8BH"],"is_locked":false,"subscribed":false},{"client_msg_id":"ac423809-ad05-4cd8-83e8-2c02a6d72c9f","type":"message","text":"Philipp Junker","user":"UUS6GL8BH","ts":"1616591086.041300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bEkO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Philipp Junker"}]}]}]},{"client_msg_id":"0c5766ac-8338-4cf0-a38a-61cdf73235d0","type":"message","text":"Nice, he was part of the course where you used this I assume?","user":"U67SCG4HG","ts":"1616591229.041900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2Z3z9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice, he was part of the course where you used this I assume?"}]}]}]},{"client_msg_id":"86c23732-c460-4a87-9cd5-9130fbf881a1","type":"message","text":"He was the lecturer of an introductory course in material modeling. The course was last semester and we used jupyter notebooks for plain material model implementations, he liked it pretty much. This semester he wasn't the lecturer of \"Basics of FEM\", however he noticed the new course material since every exercise is recorded and available as VOD in youtube","user":"UUS6GL8BH","ts":"1616591411.045000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d5QGJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"He was the lecturer of an introductory course in material modeling. The course was last semester and we used jupyter notebooks for plain material model implementations, he liked it pretty much. This semester he wasn't the lecturer of \"Basics of FEM\", however he noticed the new course material since every exercise is recorded and available as VOD in youtube"}]}]}]},{"client_msg_id":"2f3dcee3-d348-45f5-80e7-cfd65e72feca","type":"message","text":"Ah nice. Is that material publicly available?","user":"U67SCG4HG","ts":"1616591484.045400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"agIU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah nice. Is that material publicly available?"}]}]}],"thread_ts":"1616591484.045400","reply_count":3,"reply_users_count":2,"latest_reply":"1616591755.047100","reply_users":["UUS6GL8BH","U67SCG4HG"],"is_locked":false,"subscribed":false},{"client_msg_id":"989856b5-a755-4498-996c-8d89cb415064","type":"message","text":"Partially, the notebooks are available in github, videos are not listed","user":"UUS6GL8BH","ts":"1616591565.046600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"up+XV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Partially, the notebooks are available in github, videos are not listed"}]}]}]},{"type":"message","text":":tada::tada::tada:","files":[{"id":"F01T4AMQFBJ","created":1616683758,"timestamp":1616683758,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UMJPZQ4RM","editable":false,"size":23860,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01T4AMQFBJ/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01T4AMQFBJ/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01T4AMQFBJ-a683d82527/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01T4AMQFBJ-a683d82527/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01T4AMQFBJ-a683d82527/image_360.png","thumb_360_w":360,"thumb_360_h":188,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01T4AMQFBJ-a683d82527/image_480.png","thumb_480_w":480,"thumb_480_h":251,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01T4AMQFBJ-a683d82527/image_160.png","original_w":654,"original_h":342,"thumb_tiny":"AwAZADCoOlKaQdKKBAcDtSZHpS5+tJn60xhkelJS5+tJQA7HFFNooELj2owaSigYuDRg+lJRQB//2Q==","permalink":"https://julialang.slack.com/files/UMJPZQ4RM/F01T4AMQFBJ/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01T4AMQFBJ-cb4d21650e","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"jCaD","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"tada"},{"type":"emoji","name":"tada"},{"type":"emoji","name":"tada"}]}]}],"user":"UMJPZQ4RM","display_as_bot":false,"ts":"1616683795.047500","reactions":[{"name":"otter","users":["U014A5E6L3V","UUS6GL8BH","U67D54KS8","UJW01KDBJ","UMJPZQ4RM"],"count":5}]},{"client_msg_id":"d27a1241-8418-4b39-ab4f-ad31d21811e1","type":"message","text":"Ha, you are probably the first one :slightly_smiling_face:","user":"U67SCG4HG","ts":"1616684179.048400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/9Xc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ha, you are probably the first one "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"type":"message","subtype":"channel_join","ts":"1616873077.048900","user":"U01TB5WSTKJ","text":"<@U01TB5WSTKJ> has joined the channel"},{"client_msg_id":"4ddd1bee-7a4e-43cb-bd8b-cf91e0e3b550","type":"message","text":"It's a bit of a shame that we don't specialize the `Values` object on the interpolations so that the number of base functions / geometric base functions is known at compile time. Could be interesting experiement to do that and run some benchmark of e.g. `reinit!`","user":"U67D54KS8","ts":"1617020771.050000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gpJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's a bit of a shame that we don't specialize the "},{"type":"text","text":"Values","style":{"code":true}},{"type":"text","text":" object on the interpolations so that the number of base functions / geometric base functions is known at compile time. Could be interesting experiement to do that and run some benchmark of e.g. "},{"type":"text","text":"reinit!","style":{"code":true}}]}]}]},{"client_msg_id":"6ba3c010-9c42-4ad9-bd3d-0d8baa776cc0","type":"message","text":"147ns -&gt; 116ns in 3d, 43ns -&gt; 27ns in 2d.","user":"U67D54KS8","ts":"1617021205.050500","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1617021217.000000"},"blocks":[{"type":"rich_text","block_id":"AZf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"147ns -> 116ns in 3d, 43ns -> 27ns in 2d."}]}]}],"reactions":[{"name":"sonic","users":["UUS6GL8BH"],"count":1}]},{"client_msg_id":"42f08766-e33e-4fec-88d9-6921724e5514","type":"message","text":"Is that when having `CellValues{dim,T,refshape,func_interpol,geom_interpol}` instead of `CellValues{dim,T,refshape}` ?","user":"UMJPZQ4RM","ts":"1617021580.051800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zIM/Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is that when having "},{"type":"text","text":"CellValues{dim,T,refshape,func_interpol,geom_interpol}","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"CellValues{dim,T,refshape}","style":{"code":true}},{"type":"text","text":" ?"}]}]}]},{"client_msg_id":"a81b3821-312e-4867-ac8d-87468f0c27e0","type":"message","text":"Yeah","user":"U67D54KS8","ts":"1617021603.052100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fjh4h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah"}]}]}]},{"client_msg_id":"8ee64e6b-ade4-41d2-91aa-fa918c3b99e9","type":"message","text":"Could be nice even just for practicality. I remember wanting to retrieve the interpolation (or quadrature rule) a few times. Unfortunately I don't have an example why exactly now.","user":"UMJPZQ4RM","ts":"1617022084.054300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fu+33","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could be nice even just for practicality. I remember wanting to retrieve the interpolation (or quadrature rule) a few times. Unfortunately I don't have an example why exactly now."}]}]}]},{"client_msg_id":"614e7bc4-c1ce-4325-ba51-0268b72012be","type":"message","text":"Well I had a PR to do it. Then I `git reset --hard` it away. So I guess I will just do it again. Practice makes perfect.","user":"U67D54KS8","ts":"1617025139.054700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pwaf+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well I had a PR to do it. Then I "},{"type":"text","text":"git reset --hard","style":{"code":true}},{"type":"text","text":" it away. So I guess I will just do it again. Practice makes perfect."}]}]}]},{"client_msg_id":"bf5ca902-9b90-4e54-ac43-f20c20fad031","type":"message","text":"<https://github.com/Ferrite-FEM/Ferrite.jl/pull/339>, there it is, again..","user":"U67D54KS8","ts":"1617027112.054900","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1617027199.000000"},"blocks":[{"type":"rich_text","block_id":"a9fv+","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/Ferrite-FEM/Ferrite.jl/pull/339"},{"type":"text","text":", there it is, again.."}]}]}]},{"client_msg_id":"5eb274f2-b200-42e5-b587-353fa67b56d9","type":"message","text":"What makes this faster? Loop-unrolling? I guess we get the best effect for interpolations with a small number of base functions?","user":"U7624B5U7","ts":"1617046342.055500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+yD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What makes this faster? Loop-unrolling? I guess we get the best effect for interpolations with a small number of base functions?"}]}]}]},{"client_msg_id":"1a294b64-566e-49a8-8656-00fa267eaad9","type":"message","text":"&gt; What makes this faster? Loop-unrolling?\nYes, for example.\n\n&gt; I guess we get the best effect for interpolations with a small number of base functions?\nYep","user":"U67D54KS8","ts":"1617046417.056100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qhO","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"What makes this faster? Loop-unrolling?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYes, for example.\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"I guess we get the best effect for interpolations with a small number of base functions?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYep"}]}]}]},{"client_msg_id":"1fde92a2-e2cd-4bf5-95db-7fa23a2db321","type":"message","text":"But we only calculate scalar equations with linear triangles anyway so that should be good though :wink:","user":"U67D54KS8","ts":"1617046449.056700","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1617046459.000000"},"blocks":[{"type":"rich_text","block_id":"btv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But we only calculate scalar equations with linear triangles anyway so that should be good though "},{"type":"emoji","name":"wink"}]}]}]},{"client_msg_id":"84c510f7-aa69-4531-935b-695b1351db6c","type":"message","text":"I have 3d iga solids with 1000 dofs, so not to much gain for me :wink:","user":"U7624B5U7","ts":"1617046619.056900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iU3+c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have 3d iga solids with 1000 dofs, so not to much gain for me "},{"type":"emoji","name":"wink"}]}]}],"reactions":[{"name":"joy","users":["UJW01KDBJ","U67D54KS8"],"count":2}]},{"client_msg_id":"ef22433d-369e-4fc0-b76c-9f1f34c684e0","type":"message","text":"Why are all CI checks cancelled after the one on nightly failed? <https://github.com/Ferrite-FEM/Ferrite.jl/pull/340> :anguished:","user":"UMJPZQ4RM","ts":"1617097418.058000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bRL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why are all CI checks cancelled after the one on nightly failed? "},{"type":"link","url":"https://github.com/Ferrite-FEM/Ferrite.jl/pull/340"},{"type":"text","text":" "},{"type":"emoji","name":"anguished"}]}]}],"thread_ts":"1617097418.058000","reply_count":2,"reply_users_count":2,"latest_reply":"1617098951.058300","reply_users":["U67SCG4HG","U7624B5U7"],"is_locked":false,"subscribed":false},{"client_msg_id":"afd27ae7-67d3-4f74-8254-0ff0570603af","type":"message","text":"Now that Ferrite is registered, we can still just merge stuff into master anytime, but for the updates to be obtainable via the package manager we need to tag a new version, right?","user":"UMJPZQ4RM","ts":"1617182150.060300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qUqGt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Now that Ferrite is registered, we can still just merge stuff into master anytime, but for the updates to be obtainable via the package manager we need to tag a new version, right?"}]}]}]},{"client_msg_id":"0a9c5506-c58d-4275-b2c0-ea6497869dd0","type":"message","text":"What's the best way to go when I know that I'll be computing a possibly long `Vector{Tensor}`? I would want to preallocate it, but Tensors don't have undef methods I think (and of course they're immutable). Pushing many Tensors into a Vector even though I know how many entries it will have seems wastefull. But initializing many Tensors just for replacing them one by one in a vector doesn't seem great either. Am I missing a good way to do this?","user":"UMJPZQ4RM","ts":"1617720062.066200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SNRqu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's the best way to go when I know that I'll be computing a possibly long "},{"type":"text","text":"Vector{Tensor}","style":{"code":true}},{"type":"text","text":"? I would want to preallocate it, but Tensors don't have undef methods I think (and of course they're immutable). Pushing many Tensors into a Vector even though I know how many entries it will have seems wastefull. But initializing many Tensors just for replacing them one by one in a vector doesn't seem great either. Am I missing a good way to do this?"}]}]}]},{"client_msg_id":"84e0d6be-da61-4e59-a52d-596409f25ba4","type":"message","text":"Pushing is surprisingly efficient. Julia doubles the space whenever it has to grow so you don't need to reallocate in every push. If you know how many elements you are going to end up with you can use `sizehint!` to allocate space \"under the hood\" so pushing never need to allocate more memory. Finally, you can do `undef` Tensors, just:\n\n```julia&gt; Vector{Vec{2, Float64}}(undef, 5)\n5-element Vector{Vec{2, Float64}}:\n [6.94314957519873e-310, 0.0]\n [6.9432405185839e-310, 6.9432405185839e-310]\n [0.0, 6.9432405185839e-310]\n [6.9431495341146e-310, 0.0]\n [6.9432405185839e-310, 6.9432405087018e-310]```\n(you get uninitialized memory) and then you `setindex!` on that.","user":"U67D54KS8","ts":"1617720616.068000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8ujhJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pushing is surprisingly efficient. Julia doubles the space whenever it has to grow so you don't need to reallocate in every push. If you know how many elements you are going to end up with you can use "},{"type":"text","text":"sizehint!","style":{"code":true}},{"type":"text","text":" to allocate space \"under the hood\" so pushing never need to allocate more memory. Finally, you can do "},{"type":"text","text":"undef","style":{"code":true}},{"type":"text","text":" Tensors, just:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Vector{Vec{2, Float64}}(undef, 5)\n5-element Vector{Vec{2, Float64}}:\n [6.94314957519873e-310, 0.0]\n [6.9432405185839e-310, 6.9432405185839e-310]\n [0.0, 6.9432405185839e-310]\n [6.9431495341146e-310, 0.0]\n [6.9432405185839e-310, 6.9432405087018e-310]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n(you get uninitialized memory) and then you "},{"type":"text","text":"setindex!","style":{"code":true}},{"type":"text","text":" on that."}]}]}]},{"client_msg_id":"c6cab250-4102-4723-bf9e-59dd44ea5079","type":"message","text":"Oh I wasn't aware that undef Tensors actually work, thanks!","user":"UMJPZQ4RM","ts":"1617720820.068800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5468","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh I wasn't aware that undef Tensors actually work, thanks!"}]}]}]},{"client_msg_id":"203bbcdc-e319-4873-be74-a06a2be16691","type":"message","text":"It works with anything. If it is a \"bits value\" (types that are allocated inline in an array) you will get garbage data, otherwise you will get `#undef` which is similar to a null pointer (but checked upon access).","user":"U67D54KS8","ts":"1617720871.069600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tTo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It works with anything. If it is a \"bits value\" (types that are allocated inline in an array) you will get garbage data, otherwise you will get "},{"type":"text","text":"#undef","style":{"code":true}},{"type":"text","text":" which is similar to a null pointer (but checked upon access)."}]}]}]},{"client_msg_id":"e5925c72-2751-452d-bbe2-4c4c39e7b269","type":"message","text":"When introduce a new subtype of `CellValues` in my own package, is there a way to add it to the `VectorValues`?","user":"UMJPZQ4RM","ts":"1617964045.072300","team":"T68168MUP","edited":{"user":"UMJPZQ4RM","ts":"1617964096.000000"},"blocks":[{"type":"rich_text","block_id":"segS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When introduce a new subtype of "},{"type":"text","text":"CellValues","style":{"code":true}},{"type":"text","text":" in my own package, is there a way to add it to the "},{"type":"text","text":"VectorValues","style":{"code":true}},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"f6fe2dad-3b9b-4d55-9a41-e4fdde5a5ac5","type":"message","text":"I have had this problem aswell...I think we should have a AbstractVectorValues","user":"U7624B5U7","ts":"1617964115.073400","team":"T68168MUP","edited":{"user":"U7624B5U7","ts":"1617964121.000000"},"blocks":[{"type":"rich_text","block_id":"pl3A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have had this problem aswell...I think we should have a AbstractVectorValues"}]}]}]},{"client_msg_id":"078277b6-2969-473f-96d1-f883659752c4","type":"message","text":"I think we don't have `AbstractVectorValues` because VectorValues types have different supertypes. But I agree that having AbstractVectorValues would be nice!","user":"UMJPZQ4RM","ts":"1617964200.074600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0cp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think we don't have "},{"type":"text","text":"AbstractVectorValues","style":{"code":true}},{"type":"text","text":" because VectorValues types have different supertypes. But I agree that having AbstractVectorValues would be nice!"}]}]}]},{"client_msg_id":"e2ca98e2-7ccb-45c5-9751-614a0d1ce603","type":"message","text":"Hmm you are right... Should `FaceVectorValues` be subtype of `FaceValues` or `VectorValues`? Isent this the classic problem for OOP ? :stuck_out_tongue:","user":"U7624B5U7","ts":"1617964386.075600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Gt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm you are right... Should "},{"type":"text","text":"FaceVectorValues","style":{"code":true}},{"type":"text","text":" be subtype of "},{"type":"text","text":"FaceValues","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"VectorValues","style":{"code":true}},{"type":"text","text":"? Isent this the classic problem for OOP ? "},{"type":"emoji","name":"stuck_out_tongue"}]}]}]},{"client_msg_id":"6a3c2567-178a-4d75-995c-18d84826cbad","type":"message","text":"<@U67D54KS8> Can you add multiple inheritance to julia? :wink:","user":"U7624B5U7","ts":"1617964464.076200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D9o","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":" Can you add multiple inheritance to julia? "},{"type":"emoji","name":"wink"}]}]}]},{"client_msg_id":"2ee6028c-37da-4c0f-95ce-e1b1a1677e19","type":"message","text":"I think the problem is that we have two different concept (Cell vs Face, and Vector vs Scalar) and we encode those both via inheritance.","user":"U67D54KS8","ts":"1617964985.077700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kvs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the problem is that we have two different concept (Cell vs Face, and Vector vs Scalar) and we encode those both via inheritance."}]}]}]},{"client_msg_id":"d37dd9d0-3469-4903-a066-879eab9ba980","type":"message","text":"What you instead can do is to encode the properties via e.g. traits. This has some discussion about it <https://ahsmart.com/pub/holy-traits-design-patterns-and-best-practice-book/#implementing_the_holy_traits_pattern>","user":"U67D54KS8","ts":"1617965065.078100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JVrR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What you instead can do is to encode the properties via e.g. traits. This has some discussion about it "},{"type":"link","url":"https://ahsmart.com/pub/holy-traits-design-patterns-and-best-practice-book/#implementing_the_holy_traits_pattern"}]}]}],"thread_ts":"1617965065.078100","reply_count":2,"reply_users_count":2,"latest_reply":"1617965614.083700","reply_users":["U7624B5U7","U67D54KS8"],"is_locked":false,"subscribed":false},{"client_msg_id":"2605a5f0-789f-42e8-b22f-9de7b05c18d0","type":"message","text":"Do you actually gain anything here from subtyping?","user":"U67SCG4HG","ts":"1617965184.078500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c3t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you actually gain anything here from subtyping?"}]}]}]},{"client_msg_id":"86fbffe4-a1fb-43ce-8864-cb6878aa1f16","type":"message","text":"What do you mean <@U67SCG4HG>?","user":"UMJPZQ4RM","ts":"1617965229.079100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l6TE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean "},{"type":"user","user_id":"U67SCG4HG"},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"2f19681d-ba4c-40b0-a741-151ff570bb6a","type":"message","text":"I mean, whats the point of having your own struct be `&lt;: CellValues`?","user":"U67SCG4HG","ts":"1617965249.079500","team":"T68168MUP","edited":{"user":"U67SCG4HG","ts":"1617965252.000000"},"blocks":[{"type":"rich_text","block_id":"Lbbwr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, whats the point of having your own struct be "},{"type":"text","text":"<: CellValues","style":{"code":true}},{"type":"text","text":"?"}]}]}]},{"client_msg_id":"99063545-9f25-4717-bba8-fcf82245fdd5","type":"message","text":"<@U7624B5U7> and me both use it for implementing cohesive elements. There is a subtyped interpolation and a `&lt;:CellValues` (because we need e.g. custom `reinit!` functions). Then we can use all the `function_value` etc. stuff from Ferrite.","user":"UMJPZQ4RM","ts":"1617965376.081800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Fe","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7624B5U7"},{"type":"text","text":" and me both use it for implementing cohesive elements. There is a subtyped interpolation and a "},{"type":"text","text":"<:CellValues","style":{"code":true}},{"type":"text","text":" (because we need e.g. custom "},{"type":"text","text":"reinit!","style":{"code":true}},{"type":"text","text":" functions). Then we can use all the "},{"type":"text","text":"function_value","style":{"code":true}},{"type":"text","text":" etc. stuff from Ferrite."}]}]}]},{"client_msg_id":"802935e1-58a2-48f8-9c40-bfdaa96ea37d","type":"message","text":"Ah okay. When I have done custom values like that I have not been able to reuse existing functions at all, and then there isn't really a point in subtyping.","user":"U67SCG4HG","ts":"1617965551.082800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jSfr1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah okay. When I have done custom values like that I have not been able to reuse existing functions at all, and then there isn't really a point in subtyping."}]}]}]},{"client_msg_id":"5a03263b-46f7-45cf-9ab3-cbf58de01e24","type":"message","text":"Do you store a values object in the struct? IN that case you can just define forwarding like this\n```Ferrite.function_value(v::CustomValues, args...) = function_values(v.fev, args...)```","user":"U67SCG4HG","ts":"1617965656.084700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uf5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you store a values object in the struct? IN that case you can just define forwarding like this\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Ferrite.function_value(v::CustomValues, args...) = function_values(v.fev, args...)"}]}]}]},{"client_msg_id":"528da2c5-0ab4-4d66-b1b5-766ff6a84407","type":"message","text":"Actually `function_value` is a bad example. That one doesn't work because my `SurfaceVectorValues` are not recognized as `VectorValues` and then then `n_base_funcs` is wrong. (<https://github.com/Ferrite-FEM/Ferrite.jl/blob/a7feea04ff1a7f4d8ab4c980e81ba9a6c31f9b95/src/FEValues/common_values.jl#L108>) But I literally have a copy of it that only changes the `n_base_funcs` computation. So it's sort of stupid that it can't be reused.","user":"UMJPZQ4RM","ts":"1617966176.087800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vtj0l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually "},{"type":"text","text":"function_value","style":{"code":true}},{"type":"text","text":" is a bad example. That one doesn't work because my "},{"type":"text","text":"SurfaceVectorValues","style":{"code":true}},{"type":"text","text":" are not recognized as "},{"type":"text","text":"VectorValues","style":{"code":true}},{"type":"text","text":" and then then "},{"type":"text","text":"n_base_funcs","style":{"code":true}},{"type":"text","text":" is wrong. ("},{"type":"link","url":"https://github.com/Ferrite-FEM/Ferrite.jl/blob/a7feea04ff1a7f4d8ab4c980e81ba9a6c31f9b95/src/FEValues/common_values.jl#L108"},{"type":"text","text":") But I literally have a copy of it that only changes the "},{"type":"text","text":"n_base_funcs","style":{"code":true}},{"type":"text","text":" computation. So it's sort of stupid that it can't be reused."}]}]}]},{"client_msg_id":"2b9ff7b8-44bf-44be-a141-b3e267407b43","type":"message","text":"Changes in <https://github.com/Ferrite-FEM/Ferrite.jl/pull/339/files> should fix this though, as long as `getnbasefunctions` returns the right thing (which it won't by default).","user":"UMJPZQ4RM","ts":"1617966372.088600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PWeaC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Changes in "},{"type":"link","url":"https://github.com/Ferrite-FEM/Ferrite.jl/pull/339/files"},{"type":"text","text":" should fix this though, as long as "},{"type":"text","text":"getnbasefunctions","style":{"code":true}},{"type":"text","text":" returns the right thing (which it won't by default)."}]}]}]},{"client_msg_id":"e431a59a-b832-4a9f-a1ae-2d3c56e3f369","type":"message","text":"Instead of using `const VectorValues{dim,T,shape} = Union{CellVectorValues{dim,T,shape},FaceVectorValues{dim,T,shape}}` in `function_value`, we should have some trait-system which Kristoffer linked to above...","user":"U7624B5U7","ts":"1617966994.089400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hw4U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Instead of using "},{"type":"text","text":"const VectorValues{dim,T,shape} = Union{CellVectorValues{dim,T,shape},FaceVectorValues{dim,T,shape}}","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"function_value","style":{"code":true}},{"type":"text","text":", we should have some trait-system which Kristoffer linked to above..."}]}]}],"reactions":[{"name":"+1","users":["UJW01KDBJ"],"count":1},{"name":"thumbsup_all","users":["UMJPZQ4RM"],"count":1}]},{"client_msg_id":"3e24f197-2190-463f-99fa-89037a251748","type":"message","text":"Probably I am missing something, but why don't we encode the `Face*Values`as `Cell*Values`of codimension 1 in first place?","user":"U014A5E6L3V","ts":"1617969393.090800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yg/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Probably I am missing something, but why don't we encode the "},{"type":"text","text":"Face*Values","style":{"code":true}},{"type":"text","text":"as "},{"type":"text","text":"Cell*Values","style":{"code":true}},{"type":"text","text":"of codimension 1 in first place?"}]}]}]},{"client_msg_id":"41ed364a-24c5-4ee4-a611-de0894ba5bb2","type":"message","text":"I.e. smth like `FaceVectorValues{dim,T,shape} = CellVectorValues{dim-1,T,shape}`","user":"U014A5E6L3V","ts":"1617969501.091700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fjuq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I.e. smth like "},{"type":"text","text":"FaceVectorValues{dim,T,shape} = CellVectorValues{dim-1,T,shape}","style":{"code":true}}]}]}]},{"client_msg_id":"7d259443-db3d-479e-ab91-c982f29f7a61","type":"message","text":"`Face*Values` is not really `Cell*Values` in a lower dimension. It also stores face normals and a current face index.","user":"UMJPZQ4RM","ts":"1617970451.093100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"raK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Face*Values","style":{"code":true}},{"type":"text","text":" is not really "},{"type":"text","text":"Cell*Values","style":{"code":true}},{"type":"text","text":" in a lower dimension. It also stores face normals and a current face index."}]}]}]},{"client_msg_id":"a8af44f4-a2c0-4f58-9d72-41213aad972c","type":"message","text":"It computes the \"area\" contribution (detJ) differently as well","user":"U67D54KS8","ts":"1617970708.093200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pMs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It computes the \"area\" contribution (detJ) differently as well"}]}]}]},{"client_msg_id":"aed3935b-97eb-41c3-bd0b-8cb2e9ad9609","type":"message","text":"Good points, thanks for clarifying. :slightly_smiling_face:","user":"U014A5E6L3V","ts":"1617971337.093600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lWTeK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Good points, thanks for clarifying. "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"type":"message","subtype":"channel_join","ts":"1618010935.093800","user":"U011WTFEM3Q","text":"<@U011WTFEM3Q> has joined the channel","inviter":"U67SCG4HG"},{"client_msg_id":"4DB6C14A-0AE2-4D0E-A813-BA704DE2D227","type":"message","text":"Than you Fredrik!","user":"U011WTFEM3Q","ts":"1618011198.094400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Evc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Than you Fredrik!"}]}]}]},{"client_msg_id":"315516A7-27CC-43EC-BE51-99360B507FD8","type":"message","text":"I just discovered Ferrite.jl, I think it is very useful for research.","user":"U011WTFEM3Q","ts":"1618011277.095800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YBA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just discovered Ferrite.jl, I think it is very useful for research."}]}]}]},{"client_msg_id":"1c81dee2-feb7-4f60-9b76-e1232faacb59","type":"message","text":"Is anyone planning on implementing arbitrary order Lagrange bases? (For tensor-product elements)","user":"U014A5E6L3V","ts":"1618235855.096500","team":"T68168MUP","edited":{"user":"U014A5E6L3V","ts":"1618235889.000000"},"blocks":[{"type":"rich_text","block_id":"nXn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is anyone planning on implementing arbitrary order Lagrange bases? (For tensor-product elements)"}]}]}]},{"client_msg_id":"afc678f2-dfe3-4251-be16-4a2741f9b965","type":"message","text":"I have one implemented already :slightly_smiling_face:","user":"U7624B5U7","ts":"1618236013.097300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YphqX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have one implemented already "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"83056a80-479e-4277-8c26-745f4e231e1b","type":"message","text":"...","user":"U7624B5U7","ts":"1618236013.097600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5lpeq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"..."}]}]}]},{"client_msg_id":"8ac6dfb0-5c35-4ecf-95c2-f1b92f035033","type":"message","text":"It is actually a bit tricky with regards to the ordering/numbering of the shape functions (if you want it in the same way as defined in juafem (vertieces, faces, edges, inner).","user":"U7624B5U7","ts":"1618236233.099100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9ceqk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is actually a bit tricky with regards to the ordering/numbering of the shape functions (if you want it in the same way as defined in juafem (vertieces, faces, edges, inner)."}]}]}]},{"client_msg_id":"afe5fd31-1042-4af2-b1ec-32a67c27a66f","type":"message","text":"Also, if you want to have an solid with multiple dofs on each face, Ferrite/the DofHandlers can currently not do this...","user":"U7624B5U7","ts":"1618236279.099800","team":"T68168MUP","edited":{"user":"U7624B5U7","ts":"1618236293.000000"},"blocks":[{"type":"rich_text","block_id":"Jrc38","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, if you want to have an solid with multiple dofs on each face, Ferrite/the DofHandlers can currently not do this..."}]}]}]},{"client_msg_id":"ceb1d001-2df8-4fba-bfa0-45b9762daf38","type":"message","text":"But I can send you the code if you want...","user":"U7624B5U7","ts":"1618236307.100200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FRiMw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I can send you the code if you want..."}]}]}]}]}