{"cursor": 0, "messages": [{"client_msg_id":"a1e31eff-b649-49cf-9d3c-7a09f300c57d","type":"message","text":"Any ideas?\n\n<https://julialang.slack.com/archives/C6A044SQH/p1610174863141400>","user":"UE76KFRFX","ts":"1610194279.024900","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/C6A044SQH/p1610174863141400","fallback":"[January 8th, 2021 10:47 PM] terasakisatoshi.math: Dose anyone try to Build Julia `v1.6.0-beta1` with `USE_BINARYBUILDER=0` ? I try to it, but it fails… on (my 64-bit ubuntu 18.04 machine.)","ts":"1610174863.141400","author_id":"UE76KFRFX","author_subname":"Satoshi Terasaki","channel_id":"C6A044SQH","channel_name":"helpdesk","is_msg_unfurl":true,"is_thread_root_unfurl":true,"text":"Dose anyone try to Build Julia `v1.6.0-beta1` with `USE_BINARYBUILDER=0` ? I try to it, but it fails… on (my 64-bit ubuntu 18.04 machine.)","author_name":"Satoshi Terasaki","author_link":"https://julialang.slack.com/team/UE76KFRFX","author_icon":"https://avatars.slack-edge.com/2020-01-17/909549518864_df05ebbb8221cd4d792a_48.png","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/C6A044SQH/p1610174863141400","footer":"Thread in #helpdesk"}],"blocks":[{"type":"rich_text","block_id":"WPFwQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any ideas?\n\n"},{"type":"link","url":"https://julialang.slack.com/archives/C6A044SQH/p1610174863141400"}]}]}]},{"type":"message","subtype":"thread_broadcast","text":"Maybe this is an issue related to OpenBLAS or gfortran???\n\n```/usr/bin/ld: cannot find -lgfortran\ncollect2: error: ld returned 1 exit status\nMakefile:165: recipe for target '../libopenblas64_p-r0.3.10.so' failed\nmake[3]: *** [../libopenblas64_p-r0.3.10.so] Error 1\nMakefile:116: recipe for target 'shared' failed\nmake[2]: *** [shared] Error 2\n*** Clean the OpenBLAS build with 'make -C deps clean-openblas'. Rebuild with 'make OPENBLAS_USE_THREAD=0' if OpenBLAS had trouble linking libpthread.so, and with 'make OPENBLAS_TARGET_ARCH=NEHALEM' if there were errors building SandyBridge support. Both these options can also be used simultaneously. ***```\nI’m also trying set `export LDFLAGS=-L/usr/lib/gcc/x86_64-linux-gnu/7/` according to this doc:\n\n<https://github.com/JuliaLang/julia/blob/master/doc/build/linux.md>\n\nbut, this does not solve my issue… :sob:","user":"UE76KFRFX","ts":"1610201181.025300","thread_ts":"1610194279.024900","root":{"client_msg_id":"a1e31eff-b649-49cf-9d3c-7a09f300c57d","type":"message","text":"Any ideas?\n\n<https://julialang.slack.com/archives/C6A044SQH/p1610174863141400>","user":"UE76KFRFX","ts":"1610194279.024900","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/C6A044SQH/p1610174863141400","fallback":"[January 8th, 2021 10:47 PM] terasakisatoshi.math: Dose anyone try to Build Julia `v1.6.0-beta1` with `USE_BINARYBUILDER=0` ? I try to it, but it fails… on (my 64-bit ubuntu 18.04 machine.)","ts":"1610174863.141400","author_id":"UE76KFRFX","author_subname":"Satoshi Terasaki","channel_id":"C6A044SQH","channel_name":"helpdesk","is_msg_unfurl":true,"is_thread_root_unfurl":true,"text":"Dose anyone try to Build Julia `v1.6.0-beta1` with `USE_BINARYBUILDER=0` ? I try to it, but it fails… on (my 64-bit ubuntu 18.04 machine.)","author_name":"Satoshi Terasaki","author_link":"https://julialang.slack.com/team/UE76KFRFX","author_icon":"https://avatars.slack-edge.com/2020-01-17/909549518864_df05ebbb8221cd4d792a_48.png","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/C6A044SQH/p1610174863141400","footer":"Thread in #helpdesk"}],"blocks":[{"type":"rich_text","block_id":"WPFwQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any ideas?\n\n"},{"type":"link","url":"https://julialang.slack.com/archives/C6A044SQH/p1610174863141400"}]}]}],"thread_ts":"1610194279.024900","reply_count":2,"reply_users_count":2,"latest_reply":"1610201181.025300","reply_users":["U67SCG4HG","UE76KFRFX"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"J0FY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe this is an issue related to OpenBLAS or gfortran???\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"/usr/bin/ld: cannot find -lgfortran\ncollect2: error: ld returned 1 exit status\nMakefile:165: recipe for target '../libopenblas64_p-r0.3.10.so' failed\nmake[3]: *** [../libopenblas64_p-r0.3.10.so] Error 1\nMakefile:116: recipe for target 'shared' failed\nmake[2]: *** [shared] Error 2\n*** Clean the OpenBLAS build with 'make -C deps clean-openblas'. Rebuild with 'make OPENBLAS_USE_THREAD=0' if OpenBLAS had trouble linking libpthread.so, and with 'make OPENBLAS_TARGET_ARCH=NEHALEM' if there were errors building SandyBridge support. Both these options can also be used simultaneously. ***"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI’m also trying set "},{"type":"text","text":"export LDFLAGS=-L/usr/lib/gcc/x86_64-linux-gnu/7/","style":{"code":true}},{"type":"text","text":" according to this doc:\n\n"},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/master/doc/build/linux.md"},{"type":"text","text":"\n\nbut, this does not solve my issue… "},{"type":"emoji","name":"sob"}]}]}],"client_msg_id":"83073871-8017-46b4-b0f6-f23f6714cede"},{"type":"message","subtype":"thread_broadcast","text":"I’ve reinstalled system and bump to 20.04. Then, I’ve succeeded to build Julia-1.6.0-dev with `USE_BINARYBUILDER=0`. Thank you :tada: .","user":"UE76KFRFX","ts":"1610269809.031200","thread_ts":"1610194279.024900","root":{"client_msg_id":"a1e31eff-b649-49cf-9d3c-7a09f300c57d","type":"message","text":"Any ideas?\n\n<https://julialang.slack.com/archives/C6A044SQH/p1610174863141400>","user":"UE76KFRFX","ts":"1610194279.024900","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/C6A044SQH/p1610174863141400","fallback":"[January 8th, 2021 10:47 PM] terasakisatoshi.math: Dose anyone try to Build Julia `v1.6.0-beta1` with `USE_BINARYBUILDER=0` ? I try to it, but it fails… on (my 64-bit ubuntu 18.04 machine.)","ts":"1610174863.141400","author_id":"UE76KFRFX","author_subname":"Satoshi Terasaki","channel_id":"C6A044SQH","channel_name":"helpdesk","is_msg_unfurl":true,"is_thread_root_unfurl":true,"text":"Dose anyone try to Build Julia `v1.6.0-beta1` with `USE_BINARYBUILDER=0` ? I try to it, but it fails… on (my 64-bit ubuntu 18.04 machine.)","author_name":"Satoshi Terasaki","author_link":"https://julialang.slack.com/team/UE76KFRFX","author_icon":"https://avatars.slack-edge.com/2020-01-17/909549518864_df05ebbb8221cd4d792a_48.png","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/C6A044SQH/p1610174863141400","footer":"Thread in #helpdesk"}],"blocks":[{"type":"rich_text","block_id":"WPFwQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any ideas?\n\n"},{"type":"link","url":"https://julialang.slack.com/archives/C6A044SQH/p1610174863141400"}]}]}],"thread_ts":"1610194279.024900","reply_count":30,"reply_users_count":3,"latest_reply":"1610269809.031200","reply_users":["U67SCG4HG","UE76KFRFX","UDB26738Q"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"zzn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ve reinstalled system and bump to 20.04. Then, I’ve succeeded to build Julia-1.6.0-dev with "},{"type":"text","text":"USE_BINARYBUILDER=0","style":{"code":true}},{"type":"text","text":". Thank you "},{"type":"emoji","name":"tada"},{"type":"text","text":" ."}]}]}],"client_msg_id":"93471cc3-ebee-4cf7-be96-d9b6bb68e0f6"},{"client_msg_id":"79e0eb4f-144e-43e7-8835-24d26ab9ea73","type":"message","text":"Does anyone know why `make docs` would automatically rebuild the Julia executable if I make any changes to base? Doesn't look like base shows up as a build dependency in the Makefile at all: <https://github.com/JuliaLang/julia/blob/46a0e3e6dd143e012a7fe33b3d50fa12dbe74260/doc/Makefile#L44>","user":"UM30MT6RF","ts":"1610398620.033500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B32s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know why "},{"type":"text","text":"make docs","style":{"code":true}},{"type":"text","text":" would automatically rebuild the Julia executable if I make any changes to base? Doesn't look like base shows up as a build dependency in the Makefile at all: "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/46a0e3e6dd143e012a7fe33b3d50fa12dbe74260/doc/Makefile#L44"}]}]}]},{"client_msg_id":"31E2F3B3-97E7-4D60-8B5F-B60943015A54","type":"message","text":"<https://github.com/JuliaLang/julia/blob/46a0e3e6dd143e012a7fe33b3d50fa12dbe74260/Makefile#L94|https://github.com/JuliaLang/julia/blob/46a0e3e6dd143e012a7fe33b3d50fa12dbe74260/Makefile#L94>\n\ndocs requires Julia-sysimage. Julia-sysimage requires Julia-base","user":"U7THT3TM3","ts":"1610398945.034300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i3N","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/blob/46a0e3e6dd143e012a7fe33b3d50fa12dbe74260/Makefile#L94","text":"https://github.com/JuliaLang/julia/blob/46a0e3e6dd143e012a7fe33b3d50fa12dbe74260/Makefile#L94"},{"type":"text","text":"\n"},{"type":"text","text":"\ndocs requires Julia-sysimage. Julia-sysimage requires Julia-base"}]}]}]},{"client_msg_id":"8f9c3b7b-8f42-48df-9c07-232ec2e89441","type":"message","text":"Ah, thanks! I think I confused `make docs` with `make -C docs`","user":"UM30MT6RF","ts":"1610399110.035200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z3Rtx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, thanks! I think I confused "},{"type":"text","text":"make docs","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"make -C docs","style":{"code":true}}]}]}]},{"client_msg_id":"9e5c0ec6-1617-48bf-a64c-496ba64f08ac","type":"message","text":"I'd like to build julia from source but adding an upstream patch, to see if it solves an issue I'm having. It is a patch to OpenBLAS.","user":"U6G4M02N4","ts":"1611735839.001500","team":"T68168MUP","edited":{"user":"U6G4M02N4","ts":"1611748578.000000"},"blocks":[{"type":"rich_text","block_id":"qr=+1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd like to build julia from source but adding an upstream patch, to see if it solves an issue I'm having. It is a patch to OpenBLAS."}]}]}]},{"client_msg_id":"ab4f6536-fc17-4f8c-afc8-d4a04fd08a08","type":"message","text":"Question: how can I incorporate this patch into the Julia build process?","user":"U6G4M02N4","ts":"1611735857.001900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zf=d0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Question: how can I incorporate this patch into the Julia build process?"}]}]}]},{"client_msg_id":"defb3c38-1aff-402a-ab6e-0745b8291731","type":"message","text":"Do I just save it to the deps/patches folder? Does the patch filename matter? How do I tell the build system to apply it to OpenBLAS?","user":"U6G4M02N4","ts":"1611735938.003000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hl2A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do I just save it to the deps/patches folder? Does the patch filename matter? How do I tell the build system to apply it to OpenBLAS?"}]}]}],"thread_ts":"1611735938.003000","reply_count":30,"reply_users_count":2,"latest_reply":"1611749471.009300","reply_users":["U67SCG4HG","U6G4M02N4"],"subscribed":false},{"client_msg_id":"4c9be90d-eaac-4c14-8f77-e92b275596d4","type":"message","text":"The original question above has mutated into a more basic one. I repost as a new thread in case anybody has any suggestion. How can one build Julia + OpenBLAS from source these days? The make incantation `make USE_BINARYBUILDER_OBJCONV=0 USE_BINARYBUILDER_OPENBLAS=0` on Julia master fails with a `make[5]: *** [lapacke_cggsvp_work.o] Error 1` on macos. Is there any further `make` options required? Can one learn how to build external dependencies by examining the BinaryBuilder and associated repos somehow? I tried, but I could not make progress...","user":"U6G4M02N4","ts":"1611750602.012900","team":"T68168MUP","edited":{"user":"U6G4M02N4","ts":"1611750665.000000"},"blocks":[{"type":"rich_text","block_id":"tx4no","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The original question above has mutated into a more basic one. I repost as a new thread in case anybody has any suggestion. How can one build Julia + OpenBLAS from source these days? The make incantation "},{"type":"text","text":"make USE_BINARYBUILDER_OBJCONV=0 USE_BINARYBUILDER_OPENBLAS=0","style":{"code":true}},{"type":"text","text":" on Julia master fails with a "},{"type":"text","text":"make[5]: *** [lapacke_cggsvp_work.o] Error 1","style":{"code":true}},{"type":"text","text":" on macos. Is there any further "},{"type":"text","text":"make","style":{"code":true}},{"type":"text","text":" options required? Can one learn how to build external dependencies by examining the BinaryBuilder and associated repos somehow? I tried, but I could not make progress..."}]}]}],"thread_ts":"1611750602.012900","reply_count":3,"reply_users_count":1,"latest_reply":"1611783393.013800","reply_users":["U66GD0880"],"subscribed":false}]}