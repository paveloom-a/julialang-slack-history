{"cursor": 0, "messages": [{"client_msg_id":"65878fb9-c825-496d-9f28-5ebb2c5e200b","type":"message","text":"<https://ai.facebook.com/blog/ppl-bench-creating-a-standard-for-benchmarking-probabilistic-programming-languages/|https://ai.facebook.com/blog/ppl-bench-creating-a-standard-for-benchmarking-probabilistic-programming-languages/>","user":"UDGT4PM41","ts":"1608004645.405100","team":"T68168MUP","attachments":[{"title":"PPL Bench: Creating a standard for benchmarking probabilistic programming languages","title_link":"https://ai.facebook.com/blog/ppl-bench-creating-a-standard-for-benchmarking-probabilistic-programming-languages/","text":"PPL Bench is an open-source, standardized benchmarking framework for measuring inference performance in probabilistic programming languages.","fallback":"PPL Bench: Creating a standard for benchmarking probabilistic programming languages","thumb_url":"https://scontent-iad3-1.xx.fbcdn.net/v/t39.2365-6/122174564_823527068401904_6421496198039070291_n.png?_nc_cat=101&ccb=2&_nc_sid=ad8a9d&_nc_ohc=LLIQ4Qo4DU4AX8GoIF6&_nc_ht=scontent-iad3-1.xx&oh=3df55048ed07e801738638cef4e0721d&oe=5FFD90E3","from_url":"https://ai.facebook.com/blog/ppl-bench-creating-a-standard-for-benchmarking-probabilistic-programming-languages/","thumb_width":4756,"thumb_height":1427,"service_icon":"https://static.xx.fbcdn.net/rsrc.php/v3/yh/r/5ZP3mZo0oAE.png","service_name":"ai.facebook.com","id":1,"original_url":"https://ai.facebook.com/blog/ppl-bench-creating-a-standard-for-benchmarking-probabilistic-programming-languages/"}],"blocks":[{"type":"rich_text","block_id":"Xe/2w","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://ai.facebook.com/blog/ppl-bench-creating-a-standard-for-benchmarking-probabilistic-programming-languages/","text":"https://ai.facebook.com/blog/ppl-bench-creating-a-standard-for-benchmarking-probabilistic-programming-languages/"}]}]}]},{"client_msg_id":"7e3ac5c3-de82-4035-8502-2899a61c2dfa","type":"message","text":"I am now convinced that the Markov kernel is the fundamental conceptional unit of functional probabilistic programming. So what is it’s equivalent in imperative code? A randomized instruction?","user":"U6C937ENB","ts":"1608125575.406900","team":"T68168MUP","edited":{"user":"U6C937ENB","ts":"1608125590.000000"},"blocks":[{"type":"rich_text","block_id":"ybkW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am now convinced that the Markov kernel is the fundamental conceptional unit of functional probabilistic programming. So what is it’s equivalent in imperative code? A randomized instruction?"}]}]}]},{"client_msg_id":"bdfb95a4-0475-4a04-a45e-557f5a179263","type":"message","text":"I think form this perspective functional and imperative are not so different. FP is a way of programming that makes code very easy to reason about, but it's not the only way. Imperative code that takes `f(x)` and returns `y` is like functional code that takes `f*(x, world1)` and returns `(y, world2)`. The biggest difference is a given \"world\" can only be referenced once, but this can be put in terms of linear logic. The Clean programming language, for example, is functional but handled IO in this way.","user":"U81PB6N77","ts":"1608129436.410800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"avQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think form this perspective functional and imperative are not so different. FP is a way of programming that makes code very easy to reason about, but it's not the only way. Imperative code that takes "},{"type":"text","text":"f(x)","style":{"code":true}},{"type":"text","text":" and returns "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" is like functional code that takes "},{"type":"text","text":"f*(x, world1)","style":{"code":true}},{"type":"text","text":" and returns "},{"type":"text","text":"(y, world2)","style":{"code":true}},{"type":"text","text":". The biggest difference is a given \"world\" can only be referenced once, but this can be put in terms of linear logic. The Clean programming language, for example, is functional but handled IO in this way."}]}]}]},{"client_msg_id":"85cedea3-c527-4218-8561-21aed007df8b","type":"message","text":"Some imperative code is very easy to reason about. For example, check out the reversible computing paradigm in  NiLang. Even SSA can be really nice :slightly_smiling_face:","user":"U81PB6N77","ts":"1608129507.412000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sdf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some imperative code is very easy to reason about. For example, check out the reversible computing paradigm in  NiLang. Even SSA can be really nice "},{"type":"emoji","name":"slightly_smiling_face"}]}]}]},{"client_msg_id":"32637c8c-3ee8-461d-af17-baba43c149dc","type":"message","text":"So I guess my answer is, with the right abstraction it's probably still a Markov kernel","user":"U81PB6N77","ts":"1608129556.412600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1YM2G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I guess my answer is, with the right abstraction it's probably still a Markov kernel"}]}]}]},{"client_msg_id":"1f35521d-5819-4328-a28b-31771f30ed51","type":"message","text":"Oops I mean uniqueness typing, not quite the same as linear logic:\n<https://en.wikipedia.org/wiki/Uniqueness_type>","user":"U81PB6N77","ts":"1608129696.413100","team":"T68168MUP","attachments":[{"title":"Uniqueness type","title_link":"https://en.wikipedia.org/wiki/Uniqueness_type","from_url":"https://en.wikipedia.org/wiki/Uniqueness_type","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"In computing, a unique type guarantees that an object is used in a single-threaded way, with at most a single reference to it. If a value has a unique type, a function applied to it can be optimized to update the value in-place in the object code. Such in-place updates improve the efficiency of functional languages while maintaining referential transparency. Unique types can also be used to integrate functional and imperative programming.","fallback":"wikipedia: Uniqueness type","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.wikipedia.org/wiki/Uniqueness_type"}],"blocks":[{"type":"rich_text","block_id":"wdoJg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oops I mean uniqueness typing, not quite the same as linear logic:\n"},{"type":"link","url":"https://en.wikipedia.org/wiki/Uniqueness_type"}]}]}]},{"client_msg_id":"c7b6ace4-02a7-4159-93ef-fe43c66a9f71","type":"message","text":"<@U6C937ENB> how does a markov kernel handle a transition like `P(x) -&gt; P(z, y | x)` ?","user":"UKA81L34J","ts":"1608131212.413800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WMQ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6C937ENB"},{"type":"text","text":" how does a markov kernel handle a transition like "},{"type":"text","text":"P(x) -> P(z, y | x)","style":{"code":true}},{"type":"text","text":" ?"}]}]}]},{"client_msg_id":"e380c247-6f4a-40cb-b675-19f7fd86580a","type":"message","text":"Unless you’re describing a Markov kernel as any pure transformation from distribution to distribution. In which case I basically agree, but it’s sort of a tautology no ? If you have a transformation which is pure and measure preserving - that almost by definition describes functional PP.","user":"UKA81L34J","ts":"1608131317.415500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pB7Y4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Unless you’re describing a Markov kernel as any pure transformation from distribution to distribution. In which case I basically agree, but it’s sort of a tautology no ? If you have a transformation which is pure and measure preserving - that almost by definition describes functional PP."}]}]}]},{"client_msg_id":"4b18f51d-81e6-4304-a1c0-ae11618cf04f","type":"message","text":"My understanding of it (<@U6C937ENB> correct me if your take is different):\nProbability distributions form a monad, so for any type `a` we can form `Prob a` (haskell notation), \"probability distributions over `a`).\n\nMonads can be described in terms of *Kleisli arrows*, which are just functions `a -&gt; Prob b`.\n\nAs I understand it, a Markov kernel is just this, a function that takes a value and returns a distribution over values of some (generally different) type.","user":"U81PB6N77","ts":"1608132224.419100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MoeBD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My understanding of it ("},{"type":"user","user_id":"U6C937ENB"},{"type":"text","text":" correct me if your take is different):\nProbability distributions form a monad, so for any type "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" we can form "},{"type":"text","text":"Prob a","style":{"code":true}},{"type":"text","text":" (haskell notation), \"probability distributions over "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":").\n\nMonads can be described in terms of "},{"type":"text","text":"Kleisli arrows","style":{"bold":true}},{"type":"text","text":", which are just functions "},{"type":"text","text":"a -> Prob b","style":{"code":true}},{"type":"text","text":".\n\nAs I understand it, a Markov kernel is just this, a function that takes a value and returns a distribution over values of some (generally different) type."}]}]}],"thread_ts":"1608132224.419100","reply_count":5,"reply_users_count":3,"latest_reply":"1608298989.431300","reply_users":["UN45LV5K6","U81PB6N77","U6C937ENB"],"subscribed":false,"reactions":[{"name":"point_up","users":["UCNCMAZ6E"],"count":1}]},{"client_msg_id":"9ca3f5da-585c-44a9-83fb-97813b3d6560","type":"message","text":"Yes, and if you want you can write `P(x | 🌒)` instead of `P(x)` for some formal element :waxing_crescent_moon: of a 1-element set {:waxing_crescent_moon:}","user":"U6C937ENB","ts":"1608133728.420300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rbg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, and if you want you can write "},{"type":"text","text":"P(x | 🌒)","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"P(x)","style":{"code":true}},{"type":"text","text":" for some formal element "},{"type":"emoji","name":"waxing_crescent_moon"},{"type":"text","text":" of a 1-element set {"},{"type":"emoji","name":"waxing_crescent_moon"},{"type":"text","text":"}"}]}]}],"reactions":[{"name":"+1","users":["UCNCMAZ6E"],"count":1}]},{"client_msg_id":"b659c660-8ad4-456b-8584-c2338c908564","type":"message","text":"Just like we usually consider `f()` a function","user":"U6C937ENB","ts":"1608133863.420600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wpVT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just like we usually consider "},{"type":"text","text":"f()","style":{"code":true}},{"type":"text","text":" a function"}]}]}]},{"client_msg_id":"8dfe1ae2-cad2-4bd4-be8c-f89a4bdb3222","type":"message","text":"Normally my latents don’t depend on the phases of the moon.","user":"UKA81L34J","ts":"1608136922.421000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9TM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Normally my latents don’t depend on the phases of the moon."}]}]}],"thread_ts":"1608136922.421000","reply_count":1,"reply_users_count":1,"latest_reply":"1608141794.429900","reply_users":["U81PB6N77"],"subscribed":false,"reactions":[{"name":"joy","users":["UN97XTLCV","UPUBAM63X"],"count":2}]},{"client_msg_id":"4e203595-0651-43a2-9629-5c3f60e87cac","type":"message","text":"{:waxing_crescent_moon:}  is unique, but only up to unique isomorphism :P","user":"UN45LV5K6","ts":"1608139325.424400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lmiPz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"{"},{"type":"emoji","name":"waxing_crescent_moon"},{"type":"text","text":"}  is unique, but only up to unique isomorphism :P"}]}]}]},{"client_msg_id":"5EBE4665-F77C-46F5-BE04-09E606B5577D","type":"message","text":"We have to be careful now, I have a formal set theory book where the author bootstraps the theory setting {} = :waxing_crescent_moon: but I can’t remember why ","user":"U6C937ENB","ts":"1608140273.428800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GOiC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We have to be careful now, I have a formal set theory book where the author bootstraps the theory setting {} = "},{"type":"emoji","name":"waxing_crescent_moon"},{"type":"text","text":" but I can’t remember why "}]}]}]},{"client_msg_id":"f21fdbee-4008-4dd2-90e0-57c3e3856b38","type":"message","text":"Got this recursive keysort for nested named tuples working pretty well:\n```julia&gt; nt\n(p = (m = (d = :d, u = :u, h = :h), j = (p = :p, j = :j, b = :b), k = (y = :y, s = :s, c = :c)), j = (l = (a = :a, f = :f, e = :e), f = (o = :o, y = :y, q = :q), p = (g = :g, k = :k, p = :p)), a = (s = (n = :n, h = :h, i = :i), m = (i = :i, w = :w, e = :e), o = (x = :x, t = :t, r = :r)))\n\njulia&gt; @btime keysort($nt)\n  5.520 ns (0 allocations: 0 bytes)\n(a = (m = (e = :e, i = :i, w = :w), o = (r = :r, t = :t, x = :x), s = (h = :h, i = :i, n = :n)), j = (f = (o = :o, q = :q, y = :y), l = (a = :a, e = :e, f = :f), p = (g = :g, k = :k, p = :p)), p = (j = (b = :b, j = :j, p = :p), k = (c = :c, s = :s, y = :y), m = (d = :d, h = :h, u = :u)))```","user":"U81PB6N77","ts":"1608313780.433000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YBO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Got this recursive keysort for nested named tuples working pretty well:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> nt\n(p = (m = (d = :d, u = :u, h = :h), j = (p = :p, j = :j, b = :b), k = (y = :y, s = :s, c = :c)), j = (l = (a = :a, f = :f, e = :e), f = (o = :o, y = :y, q = :q), p = (g = :g, k = :k, p = :p)), a = (s = (n = :n, h = :h, i = :i), m = (i = :i, w = :w, e = :e), o = (x = :x, t = :t, r = :r)))\n\njulia> @btime keysort($nt)\n  5.520 ns (0 allocations: 0 bytes)\n(a = (m = (e = :e, i = :i, w = :w), o = (r = :r, t = :t, x = :x), s = (h = :h, i = :i, n = :n)), j = (f = (o = :o, q = :q, y = :y), l = (a = :a, e = :e, f = :f), p = (g = :g, k = :k, p = :p)), p = (j = (b = :b, j = :j, p = :p), k = (c = :c, s = :s, y = :y), m = (d = :d, h = :h, u = :u)))"}]}]}],"thread_ts":"1608313780.433000","reply_count":8,"reply_users_count":2,"latest_reply":"1608435203.438300","reply_users":["U81PB6N77","U9JNHB83X"],"subscribed":false},{"client_msg_id":"a34fdc15-dccf-4b3b-8617-bc108ae4f545","type":"message","text":"I vaguely recall an announcement on discourse a couple of months ago, of a package that attempted to provide a posterior distribution over the optimal solution to an optimization problem after it had been solved, using only the loss function and the optimal solution. I can't seem to find the post announcing it, and wonder if anyone here might know what I'm talking about?","user":"UJ7DVTVQ8","ts":"1608374014.436300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ynsp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I vaguely recall an announcement on discourse a couple of months ago, of a package that attempted to provide a posterior distribution over the optimal solution to an optimization problem after it had been solved, using only the loss function and the optimal solution. I can't seem to find the post announcing it, and wonder if anyone here might know what I'm talking about?"}]}]}],"thread_ts":"1608374014.436300","reply_count":2,"reply_users_count":2,"latest_reply":"1608399128.437200","reply_users":["UJ7DVTVQ8","U81PB6N77"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"I've had some weirdness come up in Soss once in a while that traces back to named tuples being ordered.\n\n<https://github.com/simonbyrne/KeywordDispatch.jl> has a nice trick here, basically sort the named tuple before passing to the call. For small named tuples that works great, but with a few levels of nesting there's a fair amount of overhead.\n\nSo the idea here is to instead just sort once, recursively, and then use that in all calls. I expect this will also allow a recursive merge to be faster, since we can walk linearly through both arguments.","user":"U81PB6N77","ts":"1608435203.438300","thread_ts":"1608313780.433000","root":{"client_msg_id":"f21fdbee-4008-4dd2-90e0-57c3e3856b38","type":"message","text":"Got this recursive keysort for nested named tuples working pretty well:\n```julia&gt; nt\n(p = (m = (d = :d, u = :u, h = :h), j = (p = :p, j = :j, b = :b), k = (y = :y, s = :s, c = :c)), j = (l = (a = :a, f = :f, e = :e), f = (o = :o, y = :y, q = :q), p = (g = :g, k = :k, p = :p)), a = (s = (n = :n, h = :h, i = :i), m = (i = :i, w = :w, e = :e), o = (x = :x, t = :t, r = :r)))\n\njulia&gt; @btime keysort($nt)\n  5.520 ns (0 allocations: 0 bytes)\n(a = (m = (e = :e, i = :i, w = :w), o = (r = :r, t = :t, x = :x), s = (h = :h, i = :i, n = :n)), j = (f = (o = :o, q = :q, y = :y), l = (a = :a, e = :e, f = :f), p = (g = :g, k = :k, p = :p)), p = (j = (b = :b, j = :j, p = :p), k = (c = :c, s = :s, y = :y), m = (d = :d, h = :h, u = :u)))```","user":"U81PB6N77","ts":"1608313780.433000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YBO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Got this recursive keysort for nested named tuples working pretty well:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> nt\n(p = (m = (d = :d, u = :u, h = :h), j = (p = :p, j = :j, b = :b), k = (y = :y, s = :s, c = :c)), j = (l = (a = :a, f = :f, e = :e), f = (o = :o, y = :y, q = :q), p = (g = :g, k = :k, p = :p)), a = (s = (n = :n, h = :h, i = :i), m = (i = :i, w = :w, e = :e), o = (x = :x, t = :t, r = :r)))\n\njulia> @btime keysort($nt)\n  5.520 ns (0 allocations: 0 bytes)\n(a = (m = (e = :e, i = :i, w = :w), o = (r = :r, t = :t, x = :x), s = (h = :h, i = :i, n = :n)), j = (f = (o = :o, q = :q, y = :y), l = (a = :a, e = :e, f = :f), p = (g = :g, k = :k, p = :p)), p = (j = (b = :b, j = :j, p = :p), k = (c = :c, s = :s, y = :y), m = (d = :d, h = :h, u = :u)))"}]}]}],"thread_ts":"1608313780.433000","reply_count":8,"reply_users_count":2,"latest_reply":"1608435203.438300","reply_users":["U81PB6N77","U9JNHB83X"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"o=4a0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've had some weirdness come up in Soss once in a while that traces back to named tuples being ordered.\n\n"},{"type":"link","url":"https://github.com/simonbyrne/KeywordDispatch.jl"},{"type":"text","text":" has a nice trick here, basically sort the named tuple before passing to the call. For small named tuples that works great, but with a few levels of nesting there's a fair amount of overhead.\n\nSo the idea here is to instead just sort once, recursively, and then use that in all calls. I expect this will also allow a recursive merge to be faster, since we can walk linearly through both arguments."}]}]}],"client_msg_id":"5a9bb67a-f820-4d5d-a2ae-92108b87dee5"},{"client_msg_id":"a4c42033-d468-43d3-95ff-2493b3dbe25e","type":"message","text":"<@U66G4838Q> I'm reading through your paper: <http://www.zenna.org/publications/rcd.pdf>\n\nVery interesting. I had vaguely similar thoughts for dealing with higher order uncertainty. What do you think about possibility theory/fuzzysetz/ p-boxes for dealing with the same? <https://en.wikipedia.org/wiki/Probability_box>","user":"UDGT4PM41","ts":"1608750122.440100","team":"T68168MUP","edited":{"user":"UDGT4PM41","ts":"1608750129.000000"},"blocks":[{"type":"rich_text","block_id":"TWGk","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U66G4838Q"},{"type":"text","text":" I'm reading through your paper: "},{"type":"link","url":"http://www.zenna.org/publications/rcd.pdf"},{"type":"text","text":"\n\nVery interesting. I had vaguely similar thoughts for dealing with higher order uncertainty. What do you think about possibility theory/fuzzysetz/ p-boxes for dealing with the same? "},{"type":"link","url":"https://en.wikipedia.org/wiki/Probability_box"}]}]}]},{"client_msg_id":"3715e32d-b49a-45e7-a99b-271ba33cb41b","type":"message","text":"<https://github.com/AnderGray/ProbabilityBoundsAnalysis.jl>","user":"UDGT4PM41","ts":"1608750153.440600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oa0","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/AnderGray/ProbabilityBoundsAnalysis.jl"}]}]}]},{"client_msg_id":"59628e66-2984-4e12-a858-2987af003650","type":"message","text":"<@U01BZJ2JTML> what do you think about zenna's approach to epistemic uncertainty? Do you think it could provide a fully bayesian solution to prob dilution or is additivity still a problem? (<https://arxiv.org/pdf/1706.08565.pdf#:~:text=Over%20the%20past%2015%20years,probability%20of%20collision%20eventually%20decreases><https://arxiv.org/pdf/1706.08565.pdf#:~:text=Over%20the%20past%2015%20years,probability%20of%20collision%20eventually%20decreases.|.>)","user":"UDGT4PM41","ts":"1608750177.441100","team":"T68168MUP","edited":{"user":"UDGT4PM41","ts":"1608750266.000000"},"blocks":[{"type":"rich_text","block_id":"Lff","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01BZJ2JTML"},{"type":"text","text":" what do you think about zenna's approach to epistemic uncertainty? Do you think it could provide a fully bayesian solution to prob dilution or is additivity still a problem? ("},{"type":"link","url":"https://arxiv.org/pdf/1706.08565.pdf#:~:text=Over%20the%20past%2015%20years,probability%20of%20collision%20eventually%20decreases"},{"type":"link","url":"https://arxiv.org/pdf/1706.08565.pdf#:~:text=Over%20the%20past%2015%20years,probability%20of%20collision%20eventually%20decreases.","text":"."},{"type":"text","text":")"}]}]}]},{"client_msg_id":"c2bf6027-f4c3-493a-be29-42462113d801","type":"message","text":"cc: <@U01FUDH45LN>","user":"UDGT4PM41","ts":"1608750533.441800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"thJj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cc: "},{"type":"user","user_id":"U01FUDH45LN"}]}]}]},{"client_msg_id":"5D97E390-435F-4AD1-9713-44911A27C9AF","type":"message","text":"I have an updated version of that paper in progress which is better written; I”ll upload it soon..  Do you mean to extract p-boxes from a model or define a model in terms of p-boxes?. ","user":"U66G4838Q","ts":"1608759129.460100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dx1n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have an updated version of that paper in progress which is better written; I”ll upload it soon..  Do you mean to extract p-boxes from a model or define a model in terms of p-boxes?. "}]}]}]},{"client_msg_id":"9c03060f-9073-4987-9236-4405675d4047","type":"message","text":"<@UDGT4PM41> <@U66G4838Q>  to really understand this i need a toy example of a classifier that doesn't satisfy expression (1) and a demonstration of what the ||-operator does to it to make expression (2) hold\n\na typo i noticed on page 3 right hand column two thirds of the way down:\n&gt; with P being uniform a uniform measure over that hypercube\npage 4:\n&gt; However, this is a special case; for most distributional properties, most models do not possess a corresponding variable.\nif a model is parameterized then fixing a distributional property is tantamount to constraining the parameters to take values in some subset _S_, right? and if the parameters themselves have Bayesian-style prior distributions then conditioning on the distributional property taking that fixed value is tantamount to truncating the support of the prior to just _S_, right? what am i missing? i mean, this is a pain to do in particular cases so if all Omega does is make it easy in general that's fantastic, but i don't think this is going beyond what can already be expressed in Bayesian probability theory/data analysis\n\nif i'm right about that, then p-boxes are strictly more expressive since possibility theory is a generalization of probability theory (but i have yet to find myself reaching for that extra expressive power and am so far content being a Bayesian)","user":"U01FUDH45LN","ts":"1608759431.462600","team":"T68168MUP","edited":{"user":"U01FUDH45LN","ts":"1608759569.000000"},"blocks":[{"type":"rich_text","block_id":"kvFZ5","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDGT4PM41"},{"type":"text","text":" "},{"type":"user","user_id":"U66G4838Q"},{"type":"text","text":"  to really understand this i need a toy example of a classifier that doesn't satisfy expression (1) and a demonstration of what the ||-operator does to it to make expression (2) hold\n\na typo i noticed on page 3 right hand column two thirds of the way down:\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"with P being uniform a uniform measure over that hypercube"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\npage 4:\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"However, this is a special case; for most distributional properties, most models do not possess a corresponding variable."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"if a model is parameterized then fixing a distributional property is tantamount to constraining the parameters to take values in some subset "},{"type":"text","text":"S","style":{"italic":true}},{"type":"text","text":", right? and if the parameters themselves have Bayesian-style prior distributions then conditioning on the distributional property taking that fixed value is tantamount to truncating the support of the prior to just "},{"type":"text","text":"S","style":{"italic":true}},{"type":"text","text":", right? what am i missing? i mean, this is a pain to do in particular cases so if all Omega does is make it easy in general that's fantastic, but i don't think this is going beyond what can already be expressed in Bayesian probability theory/data analysis\n\nif i'm right about that, then p-boxes are strictly more expressive since possibility theory is a generalization of probability theory (but i have yet to find myself reaching for that extra expressive power and am so far content being a Bayesian)"}]}]}]},{"client_msg_id":"376933AA-64DF-47D9-993B-B798897DFBEF","type":"message","text":"Most classifiers are not fair.  This is the field of algorithmic fairness.  It would be good to show a toy example of that.  That said, I use a different example in a new version in the introduction of the paper","user":"U66G4838Q","ts":"1608759735.465000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7g1+t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Most classifiers are not fair.  This is the field of algorithmic fairness.  It would be good to show a toy example of that.  That said, I use a different example in a new version in the introduction of the paper"}]}]}]},{"client_msg_id":"3DB349B4-E6FA-4908-9724-C9EBF069606E","type":"message","text":"Thanks for the typo","user":"U66G4838Q","ts":"1608759760.465200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hd6mW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for the typo"}]}]}]},{"client_msg_id":"813D6C56-05EE-4EC4-8973-F6B5B55DFB9E","type":"message","text":"I’m not sure how I feel about possibility theory","user":"U66G4838Q","ts":"1608760340.467200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s50","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m not sure how I feel about possibility theory"}]}]}]},{"client_msg_id":"FC4815EC-3FB8-4E94-991E-197F9F034EDB","type":"message","text":"In some ways, the random conditional distribution is the modern realisation of a bunch of arguments people had in the 80s about the necessity of possibilistic reasoning","user":"U66G4838Q","ts":"1608760632.469400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"64xm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In some ways, the random conditional distribution is the modern realisation of a bunch of arguments people had in the 80s about the necessity of possibilistic reasoning"}]}]}]},{"client_msg_id":"4e130987-1e5e-4e32-9a25-4d9657c43750","type":"message","text":"I like the approach. It’s 2nd order probability right? In UQ we call them 2nd order distributions (some people meta-distributions), and simulating them 2nd order Monte Carlo. They should definitely be considered in Probabilistic Programming, and also does fit into the Imprecise Probabilities picture, although some of my colleges would disagree and usually they’re not discussed in IP. Computations with them can be quite expensive, and correlations/dependencies can be troublesome. But they’re nonetheless a very flexible way to express uncertainty about a probability measure.\n\nI would say:\n• Random sets: generic sets probability measures\n• P-boxes: cdf shaped random sets\n• Possibility distributions: consonant random sets\n• 2nd order distributions: probability measures which are distributions\nI would consider it as an extension of Bayesian inference. You can calibrate for them with bayesian updating but you need to modify the likelihood using a stochastic distance metric:\n<https://www.rpsonline.com.sg/proceedings/esrel2020/pdf/5520.pdf>\n<https://www.sciencedirect.com/science/article/pii/S0888327018304837?casa_token=88aISmlFIcwAAAAA:8oNovWKbMr4RDirEQ8zamR30gU5iAIHt6HKN34QXOfNOAJgrBzM4fAsu7KStGO5XM-iR1X608Y9D|https://www.sciencedirect.com/science/article/pii/S0888327018304837?casa_token=88aISmlF[…]zamR30gU5iAIHt6HKN34QXOfNOAJgrBzM4fAsu7KStGO5XM-iR1X608Y9D>","user":"U01BZJ2JTML","ts":"1610047970.489100","team":"T68168MUP","attachments":[{"title":"The role of the Bhattacharyya distance in stochastic model updating","title_link":"https://www.sciencedirect.com/science/article/pii/S0888327018304837?casa_token=88aISmlFIcwAAAAA:8oNovWKbMr4RDirEQ8zamR30gU5iAIHt6HKN34QXOfNOAJgrBzM4fAsu7KStGO5XM-iR1X608Y9D","text":"The Bhattacharyya distance is a stochastic measurement between two samples and taking into account their probability distributions. The objective of t…","fallback":"The role of the Bhattacharyya distance in stochastic model updating","from_url":"https://www.sciencedirect.com/science/article/pii/S0888327018304837?casa_token=88aISmlFIcwAAAAA:8oNovWKbMr4RDirEQ8zamR30gU5iAIHt6HKN34QXOfNOAJgrBzM4fAsu7KStGO5XM-iR1X608Y9D","thumb_url":"https://ars.els-cdn.com/content/image/1-s2.0-S0888327018X00132-cov150h.gif","thumb_width":109,"thumb_height":150,"service_icon":"https://www.sciencedirect.com/favicon.ico","service_name":"sciencedirect.com","id":1,"original_url":"https://www.sciencedirect.com/science/article/pii/S0888327018304837?casa_token=88aISmlFIcwAAAAA:8oNovWKbMr4RDirEQ8zamR30gU5iAIHt6HKN34QXOfNOAJgrBzM4fAsu7KStGO5XM-iR1X608Y9D"}],"blocks":[{"type":"rich_text","block_id":"7=9E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I like the approach. It’s 2nd order probability right? In UQ we call them 2nd order distributions (some people meta-distributions), and simulating them 2nd order Monte Carlo. They should definitely be considered in Probabilistic Programming, and also does fit into the Imprecise Probabilities picture, although some of my colleges would disagree and usually they’re not discussed in IP. Computations with them can be quite expensive, and correlations/dependencies can be troublesome. But they’re nonetheless a very flexible way to express uncertainty about a probability measure.\n\nI would say:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Random sets: generic sets probability measures"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"P-boxes: cdf shaped random sets"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Possibility distributions: consonant random sets"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"2nd order distributions: probability measures which are distributions"}]}],"style":"bullet","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI would consider it as an extension of Bayesian inference. You can calibrate for them with bayesian updating but you need to modify the likelihood using a stochastic distance metric:\n"},{"type":"link","url":"https://www.rpsonline.com.sg/proceedings/esrel2020/pdf/5520.pdf"},{"type":"text","text":"\n"},{"type":"link","url":"https://www.sciencedirect.com/science/article/pii/S0888327018304837?casa_token=88aISmlFIcwAAAAA:8oNovWKbMr4RDirEQ8zamR30gU5iAIHt6HKN34QXOfNOAJgrBzM4fAsu7KStGO5XM-iR1X608Y9D","text":"https://www.sciencedirect.com/science/article/pii/S0888327018304837?casa_token=88aISmlF[…]zamR30gU5iAIHt6HKN34QXOfNOAJgrBzM4fAsu7KStGO5XM-iR1X608Y9D"}]}]}]},{"client_msg_id":"ae50fb87-b334-4122-ba6e-1ea699726529","type":"message","text":"I don’t think they’d suffer from probability dilation in the satellite problem, as long as you increase the dispersion of the upper level the more epistemic uncertainty you have","user":"U01BZJ2JTML","ts":"1610048129.490400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xU+S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t think they’d suffer from probability dilation in the satellite problem, as long as you increase the dispersion of the upper level the more epistemic uncertainty you have"}]}]}]},{"client_msg_id":"e86cdbdf-f52d-499d-a8db-8206f24a77b7","type":"message","text":"We usually have the lower level being stochastic and the upper level being epistemic, but they could be both. I guess in a fully bayesian version would have both levels as epistemic","user":"U01BZJ2JTML","ts":"1610048179.491400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D=E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We usually have the lower level being stochastic and the upper level being epistemic, but they could be both. I guess in a fully bayesian version would have both levels as epistemic"}]}]}]},{"client_msg_id":"c8cbb012-03d7-48bb-bdad-72f605cf2c39","type":"message","text":"<@U01FN74CNCX> What do you think of the above as a bayesian solution to the false confidence theorem^ (<@U01BZJ2JTML> Michael is the author of the satellite paper )","user":"UDGT4PM41","ts":"1610063679.494900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UYqf","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01FN74CNCX"},{"type":"text","text":" What do you think of the above as a bayesian solution to the false confidence theorem^ ("},{"type":"user","user_id":"U01BZJ2JTML"},{"type":"text","text":" Michael is the author of the satellite paper )"}]}]}]},{"type":"message","subtype":"thread_broadcast","text":"<@U66G4838Q> use this link: <https://drive.google.com/drive/folders/1iFXo6tq5JWbG6HpJWXyLNupX4J30TaMq?usp=sharing>  I extracted even more history from my phone","user":"UDGT4PM41","ts":"1610063891.495200","thread_ts":"1610048179.491400","root":{"client_msg_id":"e86cdbdf-f52d-499d-a8db-8206f24a77b7","type":"message","text":"We usually have the lower level being stochastic and the upper level being epistemic, but they could be both epistemic. I guess in a fully bayesian version would be like this","user":"U01BZJ2JTML","ts":"1610048179.491400","team":"T68168MUP","edited":{"user":"U01BZJ2JTML","ts":"1610048273.000000"},"blocks":[{"type":"rich_text","block_id":"f++b8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We usually have the lower level being stochastic and the upper level being epistemic, but they could be both epistemic. I guess in a fully bayesian version would be like this"}]}]}],"thread_ts":"1610048179.491400","reply_count":28,"reply_users_count":4,"latest_reply":"1610066869.499600","reply_users":["UDGT4PM41","U01BZJ2JTML","U66G4838Q","U81PB6N77"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"3Go","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U66G4838Q"},{"type":"text","text":" use this link: "},{"type":"link","url":"https://drive.google.com/drive/folders/1iFXo6tq5JWbG6HpJWXyLNupX4J30TaMq?usp=sharing"},{"type":"text","text":"  I extracted even more history from my phone"}]}]}],"client_msg_id":"cd05583e-66fe-4e0f-8cb4-b8ee201c04a2"},{"client_msg_id":"6f28d1f5-ca44-4e35-aa44-68a489554eae","type":"message","text":"I have no idea how visible the discussions tab of a repo is, so just to be sure the number of people who see it isn't zero...\n<https://github.com/cscherrer/MeasureTheory.jl/discussions/37>","user":"U81PB6N77","ts":"1610076514.001100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DCLj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have no idea how visible the discussions tab of a repo is, so just to be sure the number of people who see it isn't zero...\n"},{"type":"link","url":"https://github.com/cscherrer/MeasureTheory.jl/discussions/37"}]}]}]},{"type":"message","subtype":"thread_broadcast","text":"<@U81PB6N77> does Soss support interventions?","user":"UKA81L34J","ts":"1610081974.007900","thread_ts":"1610048179.491400","root":{"client_msg_id":"e86cdbdf-f52d-499d-a8db-8206f24a77b7","type":"message","text":"We usually have the lower level being stochastic and the upper level being epistemic, but they could be both epistemic. I guess in a fully bayesian version would be like this","user":"U01BZJ2JTML","ts":"1610048179.491400","team":"T68168MUP","edited":{"user":"U01BZJ2JTML","ts":"1610048273.000000"},"blocks":[{"type":"rich_text","block_id":"f++b8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We usually have the lower level being stochastic and the upper level being epistemic, but they could be both epistemic. I guess in a fully bayesian version would be like this"}]}]}],"thread_ts":"1610048179.491400","reply_count":47,"reply_users_count":5,"latest_reply":"1610083153.008200","reply_users":["UDGT4PM41","U01BZJ2JTML","U66G4838Q","U81PB6N77","UKA81L34J"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"x7w","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U81PB6N77"},{"type":"text","text":" does Soss support interventions?"}]}]}],"client_msg_id":"2E63D9D2-7353-4C2B-9BBC-CEE3A986C81E"},{"client_msg_id":"3f94456d-aec3-4c42-98e5-b18938ad3555","type":"message","text":"Hi, I would like to give a talk on probabilistic programming for my group (AI/bioinformatics). Any suggestions for simple but non-trivial examples I can implement that still spark people's imagination?","user":"UC8MP6UN8","ts":"1610112461.010700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=Fm0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, I would like to give a talk on probabilistic programming for my group (AI/bioinformatics). Any suggestions for simple but non-trivial examples I can implement that still spark people's imagination?"}]}]}],"thread_ts":"1610112461.010700","reply_count":1,"reply_users_count":1,"latest_reply":"1610113230.010900","reply_users":["U69BL50BF"],"subscribed":false},{"client_msg_id":"93b4bd53-d560-458c-b147-babb26537624","type":"message","text":"Interesting page on probabilistic dilation: <https://sites.google.com/site/probabilisticdilation/>","user":"U01BZJ2JTML","ts":"1610365219.017500","team":"T68168MUP","attachments":[{"title":"Dilation","title_link":"https://sites.google.com/site/probabilisticdilation/","text":"Dilation is a phenomenon in which learning more information necessarily increases your uncertainty","fallback":"Dilation","from_url":"https://sites.google.com/site/probabilisticdilation/","service_icon":"https://ssl.gstatic.com/sites/p/04b6db/system/app/images/apple-touch-icon.png","service_name":"sites.google.com","id":1,"original_url":"https://sites.google.com/site/probabilisticdilation/"}],"blocks":[{"type":"rich_text","block_id":"qhm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting page on probabilistic dilation: "},{"type":"link","url":"https://sites.google.com/site/probabilisticdilation/"}]}]}]},{"client_msg_id":"e5c6e916-e834-4205-bfff-1c55f0152eee","type":"message","text":"<https://sites.google.com/site/abuncertainty/>","user":"U01BZJ2JTML","ts":"1610365611.017800","team":"T68168MUP","attachments":[{"title":"Applied Biomathematics Uncertainty","title_link":"https://sites.google.com/site/abuncertainty/","text":"Roundup of public websites related to uncertainty from research at Applied Biomathematics","fallback":"Applied Biomathematics Uncertainty","from_url":"https://sites.google.com/site/abuncertainty/","service_icon":"https://ssl.gstatic.com/sites/p/04b6db/system/app/images/apple-touch-icon.png","service_name":"sites.google.com","id":1,"original_url":"https://sites.google.com/site/abuncertainty/"}],"blocks":[{"type":"rich_text","block_id":"7lbt","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://sites.google.com/site/abuncertainty/"}]}]}]},{"client_msg_id":"96140631-1421-4c92-8423-e46579ec509e","type":"message","text":"Cool thanks","user":"UDGT4PM41","ts":"1610369890.018100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XCY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool thanks"}]}]}]},{"client_msg_id":"61b96905-294f-41ec-a575-9fc108e4fcff","type":"message","text":"In case anyone here's interested, we're making some good progress with MeasureTheory.jl, and it should be registered in a few days. It's getting to be pretty usable, but there's clearly still lots to do. We have discussions set up here:\n<https://github.com/cscherrer/MeasureTheory.jl/discussions>","user":"U81PB6N77","ts":"1610634408.001900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ap5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In case anyone here's interested, we're making some good progress with MeasureTheory.jl, and it should be registered in a few days. It's getting to be pretty usable, but there's clearly still lots to do. We have discussions set up here:\n"},{"type":"link","url":"https://github.com/cscherrer/MeasureTheory.jl/discussions"}]}]}],"reactions":[{"name":"tada","users":["U9AHT3YM7","UE98VNG4U"],"count":2}]},{"client_msg_id":"a7a1bd68-37e3-45a6-b4d4-ce4b3b23440e","type":"message","text":"<@UFU63RJRY> since you had mentioned Stan...\n<https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282>\n\nOn Twitter, I asked Ivan about using this to call Stan from Julia. His response:\n&gt; Yep, that's the plan! For now I'm going to try piping it through cppyy and PyCall and sometime later write direct Julia-C++ wrappers.","user":"U81PB6N77","ts":"1610975930.007600","team":"T68168MUP","attachments":[{"service_name":"The Stan Forums","title":"Interface to Stan's algorithms from C++ and beyond","title_link":"https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282","text":"Hello everyone! I wanted to share with you my work on trying to use Stan algorithms without Stan-Math and .stan files. Not relying on .stan files is relatively easy, just code up a header that looks similar to what stanc generates using stan::math::var in log_prob and done. Nothing much gained at this step. Stan-Math obviously intervenes into Stan a bit more deeply but luckily not so much. Stan is really a great example of modular development. I really enjoyed (and learned a lot) navigating t...","fallback":"The Stan Forums: Interface to Stan's algorithms from C++ and beyond","thumb_url":"https://aws1.discourse-cdn.com/standard14/uploads/mc_stan/original/2X/7/71f59fcb2f604f4a152dae417f8cc17739aa7b50.png","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"4 :heart:","short":true}],"ts":1610920383,"from_url":"https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282","thumb_width":375,"thumb_height":376,"service_icon":"https://aws1.discourse-cdn.com/standard14/uploads/mc_stan/optimized/2X/b/b7b51b4b69d8d91ab67fe1889d27fd94f338d9ee_2_180x180.png","id":1,"original_url":"https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282"}],"blocks":[{"type":"rich_text","block_id":"HUB","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UFU63RJRY"},{"type":"text","text":" since you had mentioned Stan...\n"},{"type":"link","url":"https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282"},{"type":"text","text":"\n\nOn Twitter, I asked Ivan about using this to call Stan from Julia. His response:\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Yep, that's the plan! For now I'm going to try piping it through cppyy and PyCall and sometime later write direct Julia-C++ wrappers."}]}]}],"thread_ts":"1610975930.007600","reply_count":1,"reply_users_count":1,"latest_reply":"1611065603.010400","reply_users":["UFU63RJRY"],"subscribed":false,"reactions":[{"name":"star-struck","users":["UDSU53PEG","U01A08JMUKT"],"count":2}]},{"client_msg_id":"a685fbfa-2905-4e29-ae48-9cdabbabd29c","type":"message","text":"Another fun little example:\n<https://github.com/cscherrer/MeasureTheory.jl/discussions/48>\n\nCheck it out <@UKA81L34J> :point_up_2: Radon-Nikodym derivatives!","user":"U81PB6N77","ts":"1610998748.009100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+qeOw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Another fun little example:\n"},{"type":"link","url":"https://github.com/cscherrer/MeasureTheory.jl/discussions/48"},{"type":"text","text":"\n\nCheck it out "},{"type":"user","user_id":"UKA81L34J"},{"type":"text","text":" "},{"type":"emoji","name":"point_up_2"},{"type":"text","text":" Radon-Nikodym derivatives!"}]}]}]},{"client_msg_id":"345CB6DA-7A59-44BD-B810-85A0550F1EB3","type":"message","text":"I will have to revive the shirts","user":"UKA81L34J","ts":"1611000240.009500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"slyH8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I will have to revive the shirts"}]}]}],"reactions":[{"name":"joy","users":["U81PB6N77"],"count":1}]},{"client_msg_id":"58D27EF4-C7BF-4760-87E0-B8793D3B7F46","type":"message","text":"Been busy recently but excited to take a look","user":"UKA81L34J","ts":"1611000257.009900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WqhJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Been busy recently but excited to take a look"}]}]}]},{"client_msg_id":"e6f44151-c2d2-400c-990a-539c002daec8","type":"message","text":"Question about `rand!` in MeasureTheory, I'd appreciate any feedback:\n<https://github.com/cscherrer/MeasureTheory.jl/discussions/49>","user":"U81PB6N77","ts":"1611182191.012200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1zlU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Question about "},{"type":"text","text":"rand!","style":{"code":true}},{"type":"text","text":" in MeasureTheory, I'd appreciate any feedback:\n"},{"type":"link","url":"https://github.com/cscherrer/MeasureTheory.jl/discussions/49"}]}]}],"reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"48b95aaf-8fb7-412b-b89e-ec012661b739","type":"message","text":"Not quite done yet, but\n<https://informativeprior.com/blog/2021/01-25-symbolic-simplification/>","user":"U81PB6N77","ts":"1611624095.003500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yy2KR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not quite done yet, but\n"},{"type":"link","url":"https://informativeprior.com/blog/2021/01-25-symbolic-simplification/"}]}]}],"reactions":[{"name":"100","users":["UGU761DU2","UE98VNG4U","U9AHT3YM7","UGB3MK8MC","UCZ7VBGUD","UPH1M2MB2","U85JBUGGP","UF6T1632L","UDSU53PEG"],"count":9}]},{"client_msg_id":"70c49516-ca66-41ab-8068-135fcf261a89","type":"message","text":"Damn that is impressive","user":"U9JNHB83X","ts":"1611627349.003700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4kRI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Damn that is impressive"}]}]}]},{"client_msg_id":"caf6a237-1cd7-434a-97cc-ea4c41c5a7d9","type":"message","text":"Thanks!","user":"U81PB6N77","ts":"1611627360.003900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"our","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks!"}]}]}]},{"client_msg_id":"02b82333-59f1-4b73-bf76-a83e1579d5a7","type":"message","text":"I'm pretty excited about it, Bayes should really be able to compete. Big data, etc","user":"U81PB6N77","ts":"1611627417.004700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GPlEq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm pretty excited about it, Bayes should really be able to compete. Big data, etc"}]}]}],"reactions":[{"name":"bayes","users":["UKA81L34J","U66M57AN4","UHDQQ4GN6","U010ZCVMTT6","UDSU53PEG"],"count":5},{"name":"julia-illuminati","users":["UKA81L34J","UDSU53PEG"],"count":2}]},{"client_msg_id":"1e41fe57-bc12-4953-8276-2aef13a24596","type":"message","text":"BTW Franklin is pretty great once you get the hang of it","user":"U81PB6N77","ts":"1611627452.005100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nti9p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW Franklin is pretty great once you get the hang of it"}]}]}],"reactions":[{"name":"franklin","users":["UHDQQ4GN6","UGU761DU2","UMQME35EV","U7QLM6E2E","UDSU53PEG"],"count":5}]},{"client_msg_id":"BEFA7624-6B77-4133-AD29-25342E057754","type":"message","text":"Nice work <@U81PB6N77> ","user":"U66G4838Q","ts":"1611731051.007100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kmJ5x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice work "},{"type":"user","user_id":"U81PB6N77"},{"type":"text","text":" "}]}]}],"thread_ts":"1611731051.007100","reply_count":1,"reply_users_count":1,"latest_reply":"1611746750.009400","reply_users":["U81PB6N77"],"subscribed":false},{"client_msg_id":"d88ad074-0687-4257-add7-09c865d7f67f","type":"message","text":"Probably a stupid question but, since the markov chain created by the Metropolis-Hastings algorithm is ergodic, why can't we sample many chains in parallel for just few steps and then join the results together?","user":"UGB3MK8MC","ts":"1611745393.009200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MZwVn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Probably a stupid question but, since the markov chain created by the Metropolis-Hastings algorithm is ergodic, why can't we sample many chains in parallel for just few steps and then join the results together?"}]}]}],"thread_ts":"1611745393.009200","reply_count":9,"reply_users_count":3,"latest_reply":"1611781923.014200","reply_users":["UJ7DVTVQ8","U81PB6N77","UGB3MK8MC"],"subscribed":false},{"client_msg_id":"9b3795af-d64a-46d9-ba1e-1b05d971f8a3","type":"message","text":"You can totally do that! And it’s a good idea I think","user":"U01BZJ2JTML","ts":"1611748965.010200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ra3A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can totally do that! And it’s a good idea I think"}]}]}],"reactions":[{"name":"100","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"d371090d-f5aa-453d-8b9d-e08bd09f0374","type":"message","text":"A variant of mcmc called Transitional mcmc which we use quite abit does just that","user":"U01BZJ2JTML","ts":"1611748999.010800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/rK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A variant of mcmc called Transitional mcmc which we use quite abit does just that"}]}]}]},{"client_msg_id":"8e03376d-119f-4ac6-ad13-24aaf9b50cf0","type":"message","text":"<https://ascelibrary.org/doi/pdf/10.1061/(ASCE)0733-9399(2007)133%3A7(816)?casa_token=nO73uuBY0XwAAAAA:dm_lQV9VTvmUZj3Am0S82MrZvA7CdQqDYQ84egGvf2sEXxJccfn3XB9J3m8XjQxAXoyCQkW2j1qbqA|https://ascelibrary.org/doi/pdf/10.1061/(ASCE)0733-9399(2007)133%3A7(816)?casa_token[…]0S82MrZvA7CdQqDYQ84egGvf2sEXxJccfn3XB9J3m8XjQxAXoyCQkW2j1qbqA>","user":"U01BZJ2JTML","ts":"1611749032.011000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WGUxG","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://ascelibrary.org/doi/pdf/10.1061/(ASCE)0733-9399(2007)133%3A7(816)?casa_token=nO73uuBY0XwAAAAA:dm_lQV9VTvmUZj3Am0S82MrZvA7CdQqDYQ84egGvf2sEXxJccfn3XB9J3m8XjQxAXoyCQkW2j1qbqA","text":"https://ascelibrary.org/doi/pdf/10.1061/(ASCE)0733-9399(2007)133%3A7(816)?casa_token[…]0S82MrZvA7CdQqDYQ84egGvf2sEXxJccfn3XB9J3m8XjQxAXoyCQkW2j1qbqA"}]}]}],"thread_ts":"1611749032.011000","reply_count":1,"reply_users_count":1,"latest_reply":"1611756385.012300","reply_users":["UGB3MK8MC"],"subscribed":false},{"client_msg_id":"8c321978-0126-4a9b-a007-ec8cfab38aaf","type":"message","text":"Does this seem like a fair test?\n```μ = randn(1000)\nσ = rand(1000)\nx = randn(1000)\ny = randn(1000)\n\nusing BenchmarkTools\nfunction time_normal(f)\n    function go(f, μ, σ, x, y)\n        for i in eachindex(x)\n            @inbounds y[i] = logdensity(f(μ[i], σ[i]), x[i])\n        end\n    end\n\n    @belapsed $go($f, $μ, $σ, $x, $y)\nend```\n```julia&gt; sμσ =  time_normal((μ,σ) -&gt; Dists.Normal(μ,σ; check_args=false)) / time_normal((μ,σ) -&gt; Normal(μ,σ))\n1.3814563928873838\n\njulia&gt; sμ1 =  time_normal((μ,σ) -&gt; Dists.Normal(μ,1.0; check_args=false)) / time_normal((μ,σ) -&gt; Normal(μ=μ))\n40.1426842474043\n\njulia&gt; s0σ =  time_normal((μ,σ) -&gt; Dists.Normal(0.0,σ; check_args=false)) / time_normal((μ,σ) -&gt; Normal(σ=σ))\n1.4177335229966808\n\njulia&gt; s01 =  time_normal((μ,σ) -&gt; Dists.Normal()) / time_normal((μ,σ) -&gt; Normal())\n42.33345406856929```\n`s` is for \"speedup\" (that's good enough for me!)","user":"U81PB6N77","ts":"1611956947.028900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"69dIH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does this seem like a fair test?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"μ = randn(1000)\nσ = rand(1000)\nx = randn(1000)\ny = randn(1000)\n\nusing BenchmarkTools\nfunction time_normal(f)\n    function go(f, μ, σ, x, y)\n        for i in eachindex(x)\n            @inbounds y[i] = logdensity(f(μ[i], σ[i]), x[i])\n        end\n    end\n\n    @belapsed $go($f, $μ, $σ, $x, $y)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> sμσ =  time_normal((μ,σ) -> Dists.Normal(μ,σ; check_args=false)) / time_normal((μ,σ) -> Normal(μ,σ))\n1.3814563928873838\n\njulia> sμ1 =  time_normal((μ,σ) -> Dists.Normal(μ,1.0; check_args=false)) / time_normal((μ,σ) -> Normal(μ=μ))\n40.1426842474043\n\njulia> s0σ =  time_normal((μ,σ) -> Dists.Normal(0.0,σ; check_args=false)) / time_normal((μ,σ) -> Normal(σ=σ))\n1.4177335229966808\n\njulia> s01 =  time_normal((μ,σ) -> Dists.Normal()) / time_normal((μ,σ) -> Normal())\n42.33345406856929"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"},{"type":"text","text":"s","style":{"code":true}},{"type":"text","text":" is for \"speedup\" (that's good enough for me!)"}]}]}],"thread_ts":"1611956947.028900","reply_count":38,"reply_users_count":4,"latest_reply":"1612217001.040500","reply_users":["U81PB6N77","U019K6Q9N15","UHDQQ4GN6","U8T9JUA5R"],"subscribed":false},{"type":"message","text":"","files":[{"id":"F01LE4WKHQT","created":1611962621,"timestamp":1611962621,"name":"normal.png","title":"normal.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U81PB6N77","editable":false,"size":39078,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01LE4WKHQT/normal.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01LE4WKHQT/download/normal.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01LE4WKHQT-f324b99370/normal_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01LE4WKHQT-f324b99370/normal_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01LE4WKHQT-f324b99370/normal_360.png","thumb_360_w":360,"thumb_360_h":234,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01LE4WKHQT-f324b99370/normal_480.png","thumb_480_w":480,"thumb_480_h":312,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01LE4WKHQT-f324b99370/normal_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01LE4WKHQT-f324b99370/normal_720.png","thumb_720_w":720,"thumb_720_h":469,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01LE4WKHQT-f324b99370/normal_800.png","thumb_800_w":800,"thumb_800_h":521,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01LE4WKHQT-f324b99370/normal_960.png","thumb_960_w":960,"thumb_960_h":625,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01LE4WKHQT-f324b99370/normal_1024.png","thumb_1024_w":1024,"thumb_1024_h":666,"original_w":1034,"original_h":673,"thumb_tiny":"AwAfADDSbOODg9qYokx8zAmnE8E9xmorV2dW3HOKdtLivrYElZrkpn5QOlSNKqOFJOT04qmzFbhypwcmnOSZYSepA/nVWV7eRN2o38ya6dkQFSRzUsZzGpPUgVDef6tfrTbQksQSelJ7IaV5MsPwp+hqCy+631qwwJGKihiaLIBBz6ihPRoGtUyrJ/r3+pp7f6yH6D+dSPbEyFs9TnpStAdyEH7oA6U7rmv5Cs+W3mF5/q1+tMs/vn6VLLG0qAEgYOeKIITGc5zxipeyLjo2f//Z","permalink":"https://julialang.slack.com/files/U81PB6N77/F01LE4WKHQT/normal.png","permalink_public":"https://slack-files.com/T68168MUP-F01LE4WKHQT-5d3858300d","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"U81PB6N77","display_as_bot":false,"ts":"1611962633.029200","thread_ts":"1611956947.028900","parent_user_id":"U81PB6N77","subtype":"thread_broadcast","root":{"client_msg_id":"8c321978-0126-4a9b-a007-ec8cfab38aaf","type":"message","text":"Does this seem like a fair test?\n```μ = randn(1000)\nσ = rand(1000)\nx = randn(1000)\ny = randn(1000)\n\nusing BenchmarkTools\nfunction time_normal(f)\n    function go(f, μ, σ, x, y)\n        for i in eachindex(x)\n            @inbounds y[i] = logdensity(f(μ[i], σ[i]), x[i])\n        end\n    end\n\n    @belapsed $go($f, $μ, $σ, $x, $y)\nend```\n```julia&gt; sμσ =  time_normal((μ,σ) -&gt; Dists.Normal(μ,σ; check_args=false)) / time_normal((μ,σ) -&gt; Normal(μ,σ))\n1.3814563928873838\n\njulia&gt; sμ1 =  time_normal((μ,σ) -&gt; Dists.Normal(μ,1.0; check_args=false)) / time_normal((μ,σ) -&gt; Normal(μ=μ))\n40.1426842474043\n\njulia&gt; s0σ =  time_normal((μ,σ) -&gt; Dists.Normal(0.0,σ; check_args=false)) / time_normal((μ,σ) -&gt; Normal(σ=σ))\n1.4177335229966808\n\njulia&gt; s01 =  time_normal((μ,σ) -&gt; Dists.Normal()) / time_normal((μ,σ) -&gt; Normal())\n42.33345406856929```\n`s` is for \"speedup\" (that's good enough for me!)","user":"U81PB6N77","ts":"1611956947.028900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"69dIH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does this seem like a fair test?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"μ = randn(1000)\nσ = rand(1000)\nx = randn(1000)\ny = randn(1000)\n\nusing BenchmarkTools\nfunction time_normal(f)\n    function go(f, μ, σ, x, y)\n        for i in eachindex(x)\n            @inbounds y[i] = logdensity(f(μ[i], σ[i]), x[i])\n        end\n    end\n\n    @belapsed $go($f, $μ, $σ, $x, $y)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> sμσ =  time_normal((μ,σ) -> Dists.Normal(μ,σ; check_args=false)) / time_normal((μ,σ) -> Normal(μ,σ))\n1.3814563928873838\n\njulia> sμ1 =  time_normal((μ,σ) -> Dists.Normal(μ,1.0; check_args=false)) / time_normal((μ,σ) -> Normal(μ=μ))\n40.1426842474043\n\njulia> s0σ =  time_normal((μ,σ) -> Dists.Normal(0.0,σ; check_args=false)) / time_normal((μ,σ) -> Normal(σ=σ))\n1.4177335229966808\n\njulia> s01 =  time_normal((μ,σ) -> Dists.Normal()) / time_normal((μ,σ) -> Normal())\n42.33345406856929"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"},{"type":"text","text":"s","style":{"code":true}},{"type":"text","text":" is for \"speedup\" (that's good enough for me!)"}]}]}],"thread_ts":"1611956947.028900","reply_count":38,"reply_users_count":4,"latest_reply":"1612217001.040500","reply_users":["U81PB6N77","U019K6Q9N15","UHDQQ4GN6","U8T9JUA5R"],"subscribed":false}},{"type":"message","subtype":"thread_broadcast","text":"Still tweaking it a bit but\n<https://informativeprior.com/blog/2021/01-28-measure-theory/>","user":"U81PB6N77","ts":"1611965213.033400","thread_ts":"1611956947.028900","root":{"client_msg_id":"8c321978-0126-4a9b-a007-ec8cfab38aaf","type":"message","text":"Does this seem like a fair test?\n```μ = randn(1000)\nσ = rand(1000)\nx = randn(1000)\ny = randn(1000)\n\nusing BenchmarkTools\nfunction time_normal(f)\n    function go(f, μ, σ, x, y)\n        for i in eachindex(x)\n            @inbounds y[i] = logdensity(f(μ[i], σ[i]), x[i])\n        end\n    end\n\n    @belapsed $go($f, $μ, $σ, $x, $y)\nend```\n```julia&gt; sμσ =  time_normal((μ,σ) -&gt; Dists.Normal(μ,σ; check_args=false)) / time_normal((μ,σ) -&gt; Normal(μ,σ))\n1.3814563928873838\n\njulia&gt; sμ1 =  time_normal((μ,σ) -&gt; Dists.Normal(μ,1.0; check_args=false)) / time_normal((μ,σ) -&gt; Normal(μ=μ))\n40.1426842474043\n\njulia&gt; s0σ =  time_normal((μ,σ) -&gt; Dists.Normal(0.0,σ; check_args=false)) / time_normal((μ,σ) -&gt; Normal(σ=σ))\n1.4177335229966808\n\njulia&gt; s01 =  time_normal((μ,σ) -&gt; Dists.Normal()) / time_normal((μ,σ) -&gt; Normal())\n42.33345406856929```\n`s` is for \"speedup\" (that's good enough for me!)","user":"U81PB6N77","ts":"1611956947.028900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"69dIH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does this seem like a fair test?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"μ = randn(1000)\nσ = rand(1000)\nx = randn(1000)\ny = randn(1000)\n\nusing BenchmarkTools\nfunction time_normal(f)\n    function go(f, μ, σ, x, y)\n        for i in eachindex(x)\n            @inbounds y[i] = logdensity(f(μ[i], σ[i]), x[i])\n        end\n    end\n\n    @belapsed $go($f, $μ, $σ, $x, $y)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> sμσ =  time_normal((μ,σ) -> Dists.Normal(μ,σ; check_args=false)) / time_normal((μ,σ) -> Normal(μ,σ))\n1.3814563928873838\n\njulia> sμ1 =  time_normal((μ,σ) -> Dists.Normal(μ,1.0; check_args=false)) / time_normal((μ,σ) -> Normal(μ=μ))\n40.1426842474043\n\njulia> s0σ =  time_normal((μ,σ) -> Dists.Normal(0.0,σ; check_args=false)) / time_normal((μ,σ) -> Normal(σ=σ))\n1.4177335229966808\n\njulia> s01 =  time_normal((μ,σ) -> Dists.Normal()) / time_normal((μ,σ) -> Normal())\n42.33345406856929"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"},{"type":"text","text":"s","style":{"code":true}},{"type":"text","text":" is for \"speedup\" (that's good enough for me!)"}]}]}],"thread_ts":"1611956947.028900","reply_count":38,"reply_users_count":4,"latest_reply":"1612217001.040500","reply_users":["U81PB6N77","U019K6Q9N15","UHDQQ4GN6","U8T9JUA5R"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"507Zq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Still tweaking it a bit but\n"},{"type":"link","url":"https://informativeprior.com/blog/2021/01-28-measure-theory/"}]}]}],"client_msg_id":"4d124591-b343-4081-92d3-96c7c119c0fc","reactions":[{"name":"+1","users":["UHDQQ4GN6","UE98VNG4U"],"count":2}]},{"client_msg_id":"8ea56287-ed5f-49fe-b7c7-c8059599c09a","type":"message","text":"I think Turing uses `FillArrays` a lot, right? Has anyone compared this with `MappedArrays`? I'm finding that to be much faster, which really surprises me. Not sure why that would be.\n<https://github.com/cscherrer/MeasureTheory.jl/issues/52>","user":"U81PB6N77","ts":"1612119420.039200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oTESz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think Turing uses "},{"type":"text","text":"FillArrays","style":{"code":true}},{"type":"text","text":" a lot, right? Has anyone compared this with "},{"type":"text","text":"MappedArrays","style":{"code":true}},{"type":"text","text":"? I'm finding that to be much faster, which really surprises me. Not sure why that would be.\n"},{"type":"link","url":"https://github.com/cscherrer/MeasureTheory.jl/issues/52"}]}]}]},{"type":"message","subtype":"thread_broadcast","text":"My goal with the performance comparison was to compare times _as people actually use the code_. I appreciate the suggestions you made earlier, but with those caveats I think it's now a fair comparison.\n\nReal fixes outside of Distributions.jl aren't possible, because the types are restricted in the structs themselves. I agree that a lot of this should really be fixed in Distributions itself. It seems to me packages like DistributionsAD come about because Distributions is so large and widely-used that even small changes require lots of negotiation, which slows down development.\n\n&gt; There's no good reason why Distributions couldn't be AD-friendly even without unnormalized densities.\nOf course Distributions _could_ be AD-friendly. Lots of things could be improved. It seems a little bit like the state of R before Hadley Wickham came along. Sure, you could get things to work, but it usually felt find of like a patchwork.\n\nMaybe that's what Distributions needs, corporate funding to fork the repo and smooth out all of the bumps. That would be great, but we don't currently have resources like that.","user":"U81PB6N77","ts":"1612191613.039500","thread_ts":"1611956947.028900","root":{"client_msg_id":"8c321978-0126-4a9b-a007-ec8cfab38aaf","type":"message","text":"Does this seem like a fair test?\n```μ = randn(1000)\nσ = rand(1000)\nx = randn(1000)\ny = randn(1000)\n\nusing BenchmarkTools\nfunction time_normal(f)\n    function go(f, μ, σ, x, y)\n        for i in eachindex(x)\n            @inbounds y[i] = logdensity(f(μ[i], σ[i]), x[i])\n        end\n    end\n\n    @belapsed $go($f, $μ, $σ, $x, $y)\nend```\n```julia&gt; sμσ =  time_normal((μ,σ) -&gt; Dists.Normal(μ,σ; check_args=false)) / time_normal((μ,σ) -&gt; Normal(μ,σ))\n1.3814563928873838\n\njulia&gt; sμ1 =  time_normal((μ,σ) -&gt; Dists.Normal(μ,1.0; check_args=false)) / time_normal((μ,σ) -&gt; Normal(μ=μ))\n40.1426842474043\n\njulia&gt; s0σ =  time_normal((μ,σ) -&gt; Dists.Normal(0.0,σ; check_args=false)) / time_normal((μ,σ) -&gt; Normal(σ=σ))\n1.4177335229966808\n\njulia&gt; s01 =  time_normal((μ,σ) -&gt; Dists.Normal()) / time_normal((μ,σ) -&gt; Normal())\n42.33345406856929```\n`s` is for \"speedup\" (that's good enough for me!)","user":"U81PB6N77","ts":"1611956947.028900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"69dIH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does this seem like a fair test?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"μ = randn(1000)\nσ = rand(1000)\nx = randn(1000)\ny = randn(1000)\n\nusing BenchmarkTools\nfunction time_normal(f)\n    function go(f, μ, σ, x, y)\n        for i in eachindex(x)\n            @inbounds y[i] = logdensity(f(μ[i], σ[i]), x[i])\n        end\n    end\n\n    @belapsed $go($f, $μ, $σ, $x, $y)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> sμσ =  time_normal((μ,σ) -> Dists.Normal(μ,σ; check_args=false)) / time_normal((μ,σ) -> Normal(μ,σ))\n1.3814563928873838\n\njulia> sμ1 =  time_normal((μ,σ) -> Dists.Normal(μ,1.0; check_args=false)) / time_normal((μ,σ) -> Normal(μ=μ))\n40.1426842474043\n\njulia> s0σ =  time_normal((μ,σ) -> Dists.Normal(0.0,σ; check_args=false)) / time_normal((μ,σ) -> Normal(σ=σ))\n1.4177335229966808\n\njulia> s01 =  time_normal((μ,σ) -> Dists.Normal()) / time_normal((μ,σ) -> Normal())\n42.33345406856929"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"},{"type":"text","text":"s","style":{"code":true}},{"type":"text","text":" is for \"speedup\" (that's good enough for me!)"}]}]}],"thread_ts":"1611956947.028900","reply_count":38,"reply_users_count":4,"latest_reply":"1612217001.040500","reply_users":["U81PB6N77","U019K6Q9N15","UHDQQ4GN6","U8T9JUA5R"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"POLBG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My goal with the performance comparison was to compare times "},{"type":"text","text":"as people actually use the code","style":{"italic":true}},{"type":"text","text":". I appreciate the suggestions you made earlier, but with those caveats I think it's now a fair comparison.\n\nReal fixes outside of Distributions.jl aren't possible, because the types are restricted in the structs themselves. I agree that a lot of this should really be fixed in Distributions itself. It seems to me packages like DistributionsAD come about because Distributions is so large and widely-used that even small changes require lots of negotiation, which slows down development.\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"There's no good reason why Distributions couldn't be AD-friendly even without unnormalized densities."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nOf course Distributions "},{"type":"text","text":"could","style":{"italic":true}},{"type":"text","text":" be AD-friendly. Lots of things could be improved. It seems a little bit like the state of R before Hadley Wickham came along. Sure, you could get things to work, but it usually felt find of like a patchwork.\n\nMaybe that's what Distributions needs, corporate funding to fork the repo and smooth out all of the bumps. That would be great, but we don't currently have resources like that."}]}]}],"client_msg_id":"6402671d-6599-41f7-9eca-8a67aa564ac7"},{"client_msg_id":"212237a0-4d62-4522-917a-fb683ab1fd32","type":"message","text":"<https://statmodeling.stat.columbia.edu/2021/01/31/bayesian-inference-completely-solves-the-multiple-comparisons-problem-2/>\n\nI don't understand this. If the prior has to be \"correct\" , how is this practical at all?","user":"UDGT4PM41","ts":"1612280276.041800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CQh","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://statmodeling.stat.columbia.edu/2021/01/31/bayesian-inference-completely-solves-the-multiple-comparisons-problem-2/"},{"type":"text","text":"\n\nI don't understand this. If the prior has to be \"correct\" , how is this practical at all?"}]}]}]},{"client_msg_id":"6e6b1f72-9c60-492e-a8a4-5ea375692659","type":"message","text":"Even andrew goes on to say in the comments\n&gt; \n&gt;  \"You say, “we hardly ever know the correct priors.” I’ll go one step further and say that we never know the correct priors. Or one step further than that and say that there is no correct prior. Actually one step further than that and say that there’s no correct data model eithe\"","user":"UDGT4PM41","ts":"1612280319.042200","team":"T68168MUP","edited":{"user":"UDGT4PM41","ts":"1612280365.000000"},"blocks":[{"type":"rich_text","block_id":"K4gz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Even andrew goes on to say in the comments\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"\n \"You say, “we hardly ever know the correct priors.” I’ll go one step further and say that we never know the correct priors. Or one step further than that and say that there is no correct prior. Actually one step further than that and say that there’s no correct data model eithe\""}]}]}]},{"client_msg_id":"9302a2bd-d9fb-4add-a3fe-480631bc4a61","type":"message","text":"and\n\n&gt; think it would be a great research project for someone to assess the methods of the above post, averaging over various alternative prior distributions to see where things go wrong. Indeed, one reason I post these things is to inspire researchers to study these topics in further depth.","user":"UDGT4PM41","ts":"1612280427.042900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wfz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"think it would be a great research project for someone to assess the methods of the above post, averaging over various alternative prior distributions to see where things go wrong. Indeed, one reason I post these things is to inspire researchers to study these topics in further depth."}]}]}]},{"client_msg_id":"fe32f9ff-be13-4103-9224-2c83fdcb6063","type":"message","text":"so this is essentially theoretical. Flat priors won't work either.","user":"UDGT4PM41","ts":"1612280454.043500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QcD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so this is essentially theoretical. Flat priors won't work either."}]}]}]},{"client_msg_id":"ecfdb9a8-4d24-4175-886d-878841c5775a","type":"message","text":"Currently ArviZ.jl only supports plotting using PyPlot.jl (and sort of bokeh). I think it will be much more useful to hook it into Julia's native plotting packages. Some thoughts on how to do this here, but I'm interested in suggestions from the community, especially from ArviZ.jl users. <https://github.com/arviz-devs/ArviZ.jl/issues/108>","user":"UHDQQ4GN6","ts":"1612481825.050000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8+OU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Currently ArviZ.jl only supports plotting using PyPlot.jl (and sort of bokeh). I think it will be much more useful to hook it into Julia's native plotting packages. Some thoughts on how to do this here, but I'm interested in suggestions from the community, especially from ArviZ.jl users. "},{"type":"link","url":"https://github.com/arviz-devs/ArviZ.jl/issues/108"}]}]}]},{"client_msg_id":"698e73ab-ebeb-4666-afc3-02937251f557","type":"message","text":"<https://hopin.com/events/solving-odes|https://hopin.com/events/solving-odes>","user":"U81PB6N77","ts":"1612966223.050500","team":"T68168MUP","attachments":[{"title":"Some Outstanding Challenges when Solving ODEs in a Bayesian context | Hopin","title_link":"https://hopin.com/events/solving-odes","text":"Bayesian ODE","fallback":"Some Outstanding Challenges when Solving ODEs in a Bayesian context | Hopin","image_url":"https://quiin.s3.us-east-1.amazonaws.com/events/pictures/000/144/894/large/Screen_Shot_2021-02-09_at_11.22.59_AM.png?1612887795","from_url":"https://hopin.com/events/solving-odes","image_width":592,"image_height":250,"image_bytes":73748,"service_icon":"https://hopin.com/assets/apple-touch-icon-66e7cc89931d0546b89318de2abea89cb71f4709a114888d7379de0e1d7c6544.png","service_name":"hopin.com","id":1,"original_url":"https://hopin.com/events/solving-odes"}],"blocks":[{"type":"rich_text","block_id":"5N3","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://hopin.com/events/solving-odes","text":"https://hopin.com/events/solving-odes"}]}]}]},{"client_msg_id":"55774351-1f9f-4fbb-b216-9b2e2e90ed1a","type":"message","text":"<https://twitter.com/vincefort/status/1361621180269154304>","user":"UDGT4PM41","ts":"1613521910.051400","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/vincefort|@vincefort>: Have you ever wondered whether isotropic Gaussian priors are good enough for your Bayesian neural network weights? They are often used in practice, but we find in our new paper (<https://arxiv.org/abs/2102.06571>) that they are indeed suboptimal! Details in thread. 1/13 <https://pbs.twimg.com/media/EuVw9j2WYAMM-Qy.png>","ts":1613470761,"author_name":"Vincent Fortuin","author_link":"https://twitter.com/vincefort/status/1361621180269154304","author_icon":"https://pbs.twimg.com/profile_images/926552956953960448/tNPsynme_normal.jpg","author_subname":"@vincefort","text":"Have you ever wondered whether isotropic Gaussian priors are good enough for your Bayesian neural network weights? They are often used in practice, but we find in our new paper (<https://arxiv.org/abs/2102.06571>) that they are indeed suboptimal! Details in thread. 1/13 <https://pbs.twimg.com/media/EuVw9j2WYAMM-Qy.png>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/vincefort/status/1361621180269154304","image_url":"https://pbs.twimg.com/media/EuVw9j2WYAMM-Qy.png","image_width":769,"image_height":505,"image_bytes":72879,"id":1,"original_url":"https://twitter.com/vincefort/status/1361621180269154304","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"9DA3b","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/vincefort/status/1361621180269154304"}]}]}]},{"client_msg_id":"d2dad21a-51f2-46aa-9296-5965fbd5bb15","type":"message","text":"Hi all,\n\nWould it be useful for there to be a package implementing analytic variational inference? Using, for example, a factorised posterior of a full multivariate normal for model parameters and gamma for precision.\nI suppose the use case for this would be very fast and accurate inference for small-ish models, potentially useful for exploratory analysis.","user":"U01M641BZEY","ts":"1613557012.054800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2bfp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all,\n\nWould it be useful for there to be a package implementing analytic variational inference? Using, for example, a factorised posterior of a full multivariate normal for model parameters and gamma for precision.\nI suppose the use case for this would be very fast and accurate inference for small-ish models, potentially useful for exploratory analysis."}]}]}]},{"client_msg_id":"ac04b37c-91d2-4713-af88-14a368bb1ee9","type":"message","text":"(i’m not aware that such a package already exists?)","user":"U01M641BZEY","ts":"1613557049.055100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+kf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(i’m not aware that such a package already exists?)"}]}]}]},{"client_msg_id":"4f3d0d33-f157-44f8-9a3f-48f31e09cd71","type":"message","text":"Some interesting concerns on why you should be careful when using Float32 in probabilistic programming : <https://youtu.be/bit6webKLIo>","user":"U7QLM6E2E","ts":"1613585460.066100","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"Roundoff Error in Metropolis-Hastings Accept-Reject Steps","title_link":"https://youtu.be/bit6webKLIo","author_name":"Matthew D. Hoffman","author_link":"https://www.youtube.com/channel/UCHFR8SHE5UWgw7XkzAgjNZw","thumb_url":"https://i.ytimg.com/vi/bit6webKLIo/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: Roundoff Error in Metropolis-Hastings Accept-Reject Steps","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/bit6webKLIo?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://youtu.be/bit6webKLIo","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://youtu.be/bit6webKLIo"}],"blocks":[{"type":"rich_text","block_id":"3og4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some interesting concerns on why you should be careful when using Float32 in probabilistic programming : "},{"type":"link","url":"https://youtu.be/bit6webKLIo"}]}]}]},{"client_msg_id":"25996e54-cdfb-491b-a081-8d5dc18f1eb7","type":"message","text":"This is for representing MCMC samples, any ideas?\n<https://discourse.julialang.org/t/show-methods-for-arrays/55623>","user":"U81PB6N77","ts":"1613752096.068700","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"`show` methods for arrays","title_link":"https://discourse.julialang.org/t/show-methods-for-arrays/55623","text":"I’m working on something I’m currently calling a TupleVector for representing an MCMC chain where each sample is a NamedTuple. Internally the structure is something like julia&gt; unwrap(tv) (a = [1, 3, 4, 5], b = [[0.36932704908184055, 0.38928341185135773, 0.531478384195232], [1.1206308130858036, 0.186852988457207, -0.7630326680035839], [-0.36521261611586725, -1.2910950683384825, -1.3507690793756433], [1.8710082871859233, 1.8902622784110135, 0.542632944187108]]) But instead of 4 samples, it’s ty...","fallback":"JuliaLang: `show` methods for arrays","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1613747340,"from_url":"https://discourse.julialang.org/t/show-methods-for-arrays/55623","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/show-methods-for-arrays/55623"}],"blocks":[{"type":"rich_text","block_id":"2d5U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is for representing MCMC samples, any ideas?\n"},{"type":"link","url":"https://discourse.julialang.org/t/show-methods-for-arrays/55623"}]}]}]},{"client_msg_id":"65fb51c3-e331-448d-b445-0d8aea89f53b","type":"message","text":"`SampleChains.jl`:\n<https://discourse.julialang.org/t/samplechains/55937>","user":"U81PB6N77","ts":"1614180444.000800","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"SampleChains","title_link":"https://discourse.julialang.org/t/samplechains/55937","text":"I’m working on a new interface for chains from MCMC sampling: I’ve copied the README below. I’d love any feedback on the interface, or ideas for making it more useful and/or powerful. Gratuitous @-ing… @Tamas_Papp there’s an interface to DynamicHMC here. More back-ends on the way @theogf we should come up with a nice way to incorporate callbacks so this works well with Turkie.jl @baggepinnen I think I had been stretching MonteCarloMeasurements.jl beyond its intended use. Now we should be...","fallback":"JuliaLang: SampleChains","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1614180272,"from_url":"https://discourse.julialang.org/t/samplechains/55937","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/samplechains/55937"}],"blocks":[{"type":"rich_text","block_id":"fLy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"SampleChains.jl","style":{"code":true}},{"type":"text","text":":\n"},{"type":"link","url":"https://discourse.julialang.org/t/samplechains/55937"}]}]}]},{"client_msg_id":"c4d3eea5-ca56-4fe7-81f3-0adf66487647","type":"message","text":"A PPL in Dex\n<https://github.com/google-research/dex-lang/pull/502>","user":"U6A936746","ts":"1614209291.001400","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1614209318.000000"},"blocks":[{"type":"rich_text","block_id":"pwrQK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A PPL in Dex\n"},{"type":"link","url":"https://github.com/google-research/dex-lang/pull/502"}]}]}],"thread_ts":"1614209291.001400","reply_count":3,"reply_users_count":2,"latest_reply":"1614213019.002100","reply_users":["U81PB6N77","U6A936746"],"subscribed":false,"reactions":[{"name":"mind_blown","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"83e11596-491e-4705-9155-fa6105004f7c","type":"message","text":"I made something: <https://twitter.com/MoritzSchauer/status/1367031112552378369?s=20>","user":"U6C937ENB","ts":"1614862665.003500","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/MoritzSchauer|@MoritzSchauer>: Let's do a beautiful #science #randomwalk  It starts at a lake and in a moment raindrops will fall making little ripples <https://pbs.twimg.com/media/EvirV0LXYAEWVA0.png>","ts":1614760590,"author_name":"Moritz Schauer","author_link":"https://twitter.com/MoritzSchauer/status/1367031112552378369","author_icon":"https://pbs.twimg.com/profile_images/953669655595573248/mPD1le9__normal.jpg","author_subname":"@MoritzSchauer","text":"Let's do a beautiful #science #randomwalk  It starts at a lake and in a moment raindrops will fall making little ripples <https://pbs.twimg.com/media/EvirV0LXYAEWVA0.png>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/MoritzSchauer/status/1367031112552378369?s=20","image_url":"https://pbs.twimg.com/media/EvirV0LXYAEWVA0.png","image_width":604,"image_height":389,"image_bytes":21935,"id":1,"original_url":"https://twitter.com/MoritzSchauer/status/1367031112552378369?s=20","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"c4ma","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I made something: "},{"type":"link","url":"https://twitter.com/MoritzSchauer/status/1367031112552378369?s=20"}]}]}],"reactions":[{"name":"star-struck","users":["UDSU53PEG"],"count":1}]},{"client_msg_id":"5c24f13b-5e7f-49b9-acd1-b1b4c9f57985","type":"message","text":"<https://towardsdatascience.com/cdsm-casual-inference-using-deep-bayesian-dynamic-survival-models-7d9f9ec7c989|https://towardsdatascience.com/cdsm-casual-inference-using-deep-bayesian-dynamic-survival-models-7d9f9ec7c989>","user":"UDGT4PM41","ts":"1614885374.004400","team":"T68168MUP","attachments":[{"service_name":"Medium","title":"CDSM — Casual Inference using Deep Bayesian Dynamic Survival Models","title_link":"https://towardsdatascience.com/cdsm-casual-inference-using-deep-bayesian-dynamic-survival-models-7d9f9ec7c989","text":"A causal Bayesian recurrent sub-networks to estimate the survival treatment effects.","fallback":"Medium: CDSM — Casual Inference using Deep Bayesian Dynamic Survival Models","image_url":"https://miro.medium.com/max/763/1*hRMDkQZO3zZoADAoQve4RQ.png","fields":[{"title":"Reading time","value":"7 min read","short":true}],"ts":1614820348,"from_url":"https://towardsdatascience.com/cdsm-casual-inference-using-deep-bayesian-dynamic-survival-models-7d9f9ec7c989","image_width":306,"image_height":250,"image_bytes":111860,"service_icon":"https://miro.medium.com/fit/c/152/152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png","id":1,"original_url":"https://towardsdatascience.com/cdsm-casual-inference-using-deep-bayesian-dynamic-survival-models-7d9f9ec7c989"}],"blocks":[{"type":"rich_text","block_id":"KtmRG","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://towardsdatascience.com/cdsm-casual-inference-using-deep-bayesian-dynamic-survival-models-7d9f9ec7c989","text":"https://towardsdatascience.com/cdsm-casual-inference-using-deep-bayesian-dynamic-survival-models-7d9f9ec7c989"}]}]}]},{"client_msg_id":"825c2a5e-bd6e-4696-8653-55e977ede4a5","type":"message","text":"<https://twitter.com/andrewgwils/status/1367614872578580480>","user":"UDGT4PM41","ts":"1614910175.005300","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/andrewgwils|@andrewgwils>: In our new #AISTATS2021 paper, \"Kernel Interpolation for Scalable Online Gaussian Processes\", we show how to do O(1) streaming Bayesian updates, while retaining exact inference! <https://arxiv.org/abs/2103.01454>\nwith <https://twitter.com/samscub|@samscub>, W. Maddox, <https://twitter.com/DelbridgeIan|@DelbridgeIan>. 1/6 <https://pbs.twimg.com/media/Evq8sy4XEAIRIY4.jpg>","ts":1614899769,"author_name":"Andrew Gordon Wilson","author_link":"https://twitter.com/andrewgwils/status/1367614872578580480","author_icon":"https://pbs.twimg.com/profile_images/509450660127858688/FueGJ3Ok_normal.jpeg","author_subname":"@andrewgwils","text":"In our new #AISTATS2021 paper, \"Kernel Interpolation for Scalable Online Gaussian Processes\", we show how to do O(1) streaming Bayesian updates, while retaining exact inference! <https://arxiv.org/abs/2103.01454>\nwith <https://twitter.com/samscub|@samscub>, W. Maddox, <https://twitter.com/DelbridgeIan|@DelbridgeIan>. 1/6 <https://pbs.twimg.com/media/Evq8sy4XEAIRIY4.jpg>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/andrewgwils/status/1367614872578580480","image_url":"https://pbs.twimg.com/media/Evq8sy4XEAIRIY4.jpg","image_width":1199,"image_height":518,"image_bytes":70929,"id":1,"original_url":"https://twitter.com/andrewgwils/status/1367614872578580480","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"KY2tY","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/andrewgwils/status/1367614872578580480"}]}]}],"reactions":[{"name":"clapping","users":["U81PB6N77"],"count":1}]},{"client_msg_id":"d007624d-b88e-4da4-ae69-705000106135","type":"message","text":"<https://twitter.com/jwvdm/status/1367492022555279367?s=19|https://twitter.com/jwvdm/status/1367492022555279367?s=19>","user":"UDGT4PM41","ts":"1614919371.005900","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/jwvdm|@jwvdm>: New working paper: Learning Proposals for Probabilistic Programs with Inference Combinators\n\nArXiv: <https://arxiv.org/abs/2103.00668> \n\nJoint work, several years in the making, by Sam Stites* (<https://twitter.com/SamStites|@SamStites>), Heiko Zimmermann* (<https://twitter.com/zmheiko|@zmheiko>), Hao Wu (<https://twitter.com/Hao_Wu_|@Hao_Wu_>), and Eli Sennesh (<https://twitter.com/EliSennesh|@EliSennesh>) [1/] <https://pbs.twimg.com/media/Evo2sfEXYAIC2_2.jpg>","ts":1614870479,"author_name":"Jan-Willem","author_link":"https://twitter.com/jwvdm/status/1367492022555279367","author_icon":"https://pbs.twimg.com/profile_images/778934995662606336/gvPjY6jS_normal.jpg","author_subname":"@jwvdm","text":"New working paper: Learning Proposals for Probabilistic Programs with Inference Combinators\n\nArXiv: <https://arxiv.org/abs/2103.00668> \n\nJoint work, several years in the making, by Sam Stites* (<https://twitter.com/SamStites|@SamStites>), Heiko Zimmermann* (<https://twitter.com/zmheiko|@zmheiko>), Hao Wu (<https://twitter.com/Hao_Wu_|@Hao_Wu_>), and Eli Sennesh (<https://twitter.com/EliSennesh|@EliSennesh>) [1/] <https://pbs.twimg.com/media/Evo2sfEXYAIC2_2.jpg>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/jwvdm/status/1367492022555279367?s=19","image_url":"https://pbs.twimg.com/media/Evo2sfEXYAIC2_2.jpg","image_width":1200,"image_height":675,"image_bytes":106374,"id":1,"original_url":"https://twitter.com/jwvdm/status/1367492022555279367?s=19","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"Kr3","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/jwvdm/status/1367492022555279367?s=19","text":"https://twitter.com/jwvdm/status/1367492022555279367?s=19"}]}]}]},{"client_msg_id":"6f21b715-d1b4-4170-bba8-e1bbc263f0e9","type":"message","text":"<https://discourse.mc-stan.org/t/stan-general-meeting-mar-04-2021-11-am-est/21049/6>","user":"UDSU53PEG","ts":"1615039533.006700","team":"T68168MUP","attachments":[{"service_name":"The Stan Forums","title":"Stan General Meeting, Mar 04, 2021, 11 am EST","title_link":"https://discourse.mc-stan.org/t/stan-general-meeting-mar-04-2021-11-am-est/21049/6","text":"Here’s a short summary of what we talked about in the meeting. Jonah reported in about further MRP developments and that its almost ready to be tested by users he’s just working on some more testing and documentation. There were also some additions to Bayesplot that Aki had come up with that should be implemented soon. Charles mentioned working more on laplace with autodiff and that it’s still a little hard to work through. Also, we talked about the possibility of moving from Slack to other...","fallback":"The Stan Forums: Stan General Meeting, Mar 04, 2021, 11 am EST","thumb_url":"https://aws1.discourse-cdn.com/standard14/uploads/mc_stan/original/2X/7/71f59fcb2f604f4a152dae417f8cc17739aa7b50.png","ts":1615039309,"from_url":"https://discourse.mc-stan.org/t/stan-general-meeting-mar-04-2021-11-am-est/21049/6","thumb_width":375,"thumb_height":376,"service_icon":"https://aws1.discourse-cdn.com/standard14/uploads/mc_stan/optimized/2X/b/b7b51b4b69d8d91ab67fe1889d27fd94f338d9ee_2_180x180.png","id":1,"original_url":"https://discourse.mc-stan.org/t/stan-general-meeting-mar-04-2021-11-am-est/21049/6"}],"blocks":[{"type":"rich_text","block_id":"=RS","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://discourse.mc-stan.org/t/stan-general-meeting-mar-04-2021-11-am-est/21049/6"}]}]}]},{"type":"message","text":"Hello! Can I ask for advises regarding <https://github.com/probcomp/GenViz|GenViz> here? I want to use it on a Jupyter notebook hosted in a remote Google Compute Engine instance but I got an error as attached... First off I have to host such docker which runs Jupyter and Gen/GenViz locally? Any advises would be appreciated and it would be great I can know if there are experts on Gen/GenViz here :slightly_smiling_face:","files":[{"id":"F01QYGA2XT6","created":1615376696,"timestamp":1615376696,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01QWSTL6TE","editable":false,"size":157028,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01QYGA2XT6/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01QYGA2XT6/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01QYGA2XT6-1d2602e1e7/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01QYGA2XT6-1d2602e1e7/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01QYGA2XT6-1d2602e1e7/image_360.png","thumb_360_w":360,"thumb_360_h":168,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01QYGA2XT6-1d2602e1e7/image_480.png","thumb_480_w":480,"thumb_480_h":224,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01QYGA2XT6-1d2602e1e7/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01QYGA2XT6-1d2602e1e7/image_720.png","thumb_720_w":720,"thumb_720_h":336,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01QYGA2XT6-1d2602e1e7/image_800.png","thumb_800_w":800,"thumb_800_h":373,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01QYGA2XT6-1d2602e1e7/image_960.png","thumb_960_w":960,"thumb_960_h":447,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01QYGA2XT6-1d2602e1e7/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":477,"original_w":2270,"original_h":1058,"thumb_tiny":"AwAWADDRb2NNp56Cm0AH4il/GkooAX8aWm0o60AKeRSYpaKAExRilooATFAFLRQB/9k=","permalink":"https://julialang.slack.com/files/U01QWSTL6TE/F01QYGA2XT6/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01QYGA2XT6-2d9b26da14","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"RUn6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello! Can I ask for advises regarding "},{"type":"link","url":"https://github.com/probcomp/GenViz","text":"GenViz"},{"type":"text","text":" here? I want to use it on a Jupyter notebook hosted in a remote Google Compute Engine instance but I got an error as attached... First off I have to host such docker which runs Jupyter and Gen/GenViz locally? Any advises would be appreciated and it would be great I can know if there are experts on Gen/GenViz here "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"user":"U01QWSTL6TE","display_as_bot":false,"ts":"1615377099.013800"},{"client_msg_id":"28be1a1c-65f8-4014-bf60-3dcc56dac9cc","type":"message","text":"Some fun discussion here:\n<https://julialang.zulipchat.com/#narrow/stream/259730-measuretheory.2Ejl/topic/Deterministic.20base.20measures/near/229779283>","user":"U81PB6N77","ts":"1615469907.014900","team":"T68168MUP","attachments":[{"service_name":"Zulip","title":"JuliaLang","title_link":"https://julialang.zulipchat.com/#narrow/stream/259730-measuretheory.2Ejl/topic/Deterministic.20base.20measures/near/229779283","text":"This is the Zulip server for the Julia programming language community. We ask anyone joining to adhere to the Julia Code of Conduct. | To learn more about Julia, check out <https://julialang.org/>, or just come ask us here! | You can reach out to the admins of this Zulip by sending a direct message to @zulip-admins.","fallback":"Zulip: JuliaLang","thumb_url":"https://zulip-avatars.s3.amazonaws.com/7178/realm/icon.png?version=6","from_url":"https://julialang.zulipchat.com/#narrow/stream/259730-measuretheory.2Ejl/topic/Deterministic.20base.20measures/near/229779283","thumb_width":100,"thumb_height":100,"id":1,"original_url":"https://julialang.zulipchat.com/#narrow/stream/259730-measuretheory.2Ejl/topic/Deterministic.20base.20measures/near/229779283"}],"blocks":[{"type":"rich_text","block_id":"pkDd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some fun discussion here:\n"},{"type":"link","url":"https://julialang.zulipchat.com/#narrow/stream/259730-measuretheory.2Ejl/topic/Deterministic.20base.20measures/near/229779283"}]}]}]},{"client_msg_id":"cc83b79f-1b0e-47ad-9b29-cb0d4f889a73","type":"message","text":"I wonder what is the state of the art in say High Performance HMC.\nWhat kind of problem sizes, number of parameters can people do?","user":"U6C937ENB","ts":"1615559989.017300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6sru","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder what is the state of the art in say High Performance HMC.\nWhat kind of problem sizes, number of parameters can people do?"}]}]}]},{"type":"message","text":"So this is about a 100000 dimensional 90% sparse problem, I am running a single chain for 2 minutes  and these are the samples of 3 of those coordinates (two  blue and red are close because they correspond to neighbouring pixels)","files":[{"id":"F01QN84FH4P","created":1615562294,"timestamp":1615562294,"name":"Screenshot 2021-03-12 at 16.16.37.png","title":"Screenshot 2021-03-12 at 16.16.37.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U6C937ENB","editable":false,"size":84636,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01QN84FH4P/screenshot_2021-03-12_at_16.16.37.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01QN84FH4P/download/screenshot_2021-03-12_at_16.16.37.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01QN84FH4P-fd57340c73/screenshot_2021-03-12_at_16.16.37_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01QN84FH4P-fd57340c73/screenshot_2021-03-12_at_16.16.37_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01QN84FH4P-fd57340c73/screenshot_2021-03-12_at_16.16.37_360.png","thumb_360_w":360,"thumb_360_h":229,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01QN84FH4P-fd57340c73/screenshot_2021-03-12_at_16.16.37_480.png","thumb_480_w":480,"thumb_480_h":305,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01QN84FH4P-fd57340c73/screenshot_2021-03-12_at_16.16.37_160.png","original_w":714,"original_h":454,"thumb_tiny":"AwAeADDSOBTdy9uv0pxxnjGaTDeo/KgBNy+h/Kjevv8AlS4brmjDDuDQAm4dh+lKCp6UYb1FAGO9AC5GaWg0YoAKKQD1oIPY0ALRRikA45oA/9k=","permalink":"https://julialang.slack.com/files/U6C937ENB/F01QN84FH4P/screenshot_2021-03-12_at_16.16.37.png","permalink_public":"https://slack-files.com/T68168MUP-F01QN84FH4P-09569f5b32","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"1IC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So this is about a 100000 dimensional 90% sparse problem, I am running a single chain for 2 minutes  and these are the samples of 3 of those coordinates (two  blue and red are close because they correspond to neighbouring pixels)"}]}]}],"user":"U6C937ENB","display_as_bot":false,"ts":"1615562487.019400"},{"type":"message","text":"Data and posterior mean","files":[{"id":"F01R97FMGUC","created":1615562771,"timestamp":1615562771,"name":"heart.png","title":"heart.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U6C937ENB","editable":false,"size":407265,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01R97FMGUC/heart.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01R97FMGUC/download/heart.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01R97FMGUC-a8f5279c37/heart_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01R97FMGUC-a8f5279c37/heart_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01R97FMGUC-a8f5279c37/heart_360.png","thumb_360_w":360,"thumb_360_h":225,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01R97FMGUC-a8f5279c37/heart_480.png","thumb_480_w":480,"thumb_480_h":300,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01R97FMGUC-a8f5279c37/heart_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01R97FMGUC-a8f5279c37/heart_720.png","thumb_720_w":720,"thumb_720_h":450,"original_w":720,"original_h":450,"thumb_tiny":"AwAeADC5dSNHFlDg5Haqf2qb+/8AoKtX2fI6dxWfQBN9qm/v/oKPtU39/wDQU2NVbgnmnNEqjJNAB9qm/v8A6Cpbe4ledVZsg+1ValtP+PlPx/lQBavv9T+IrPrXdFcYYZHoaZ9mh/55rQBl0pJPU1p/Zov+ea0fZos/cX8qAMuprT/j5T8f5VeNtF2RfypVgjRgyoAR3oA//9k=","permalink":"https://julialang.slack.com/files/U6C937ENB/F01R97FMGUC/heart.png","permalink_public":"https://slack-files.com/T68168MUP-F01R97FMGUC-7a980ddfb3","is_starred":false,"has_rich_preview":false},{"id":"F01RSSVM76U","created":1615562774,"timestamp":1615562774,"name":"heartpostmeanb.png","title":"heartpostmeanb.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U6C937ENB","editable":false,"size":141363,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01RSSVM76U/heartpostmeanb.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01RSSVM76U/download/heartpostmeanb.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01RSSVM76U-b53213eaed/heartpostmeanb_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01RSSVM76U-b53213eaed/heartpostmeanb_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01RSSVM76U-b53213eaed/heartpostmeanb_360.png","thumb_360_w":360,"thumb_360_h":225,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01RSSVM76U-b53213eaed/heartpostmeanb_480.png","thumb_480_w":480,"thumb_480_h":300,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01RSSVM76U-b53213eaed/heartpostmeanb_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01RSSVM76U-b53213eaed/heartpostmeanb_720.png","thumb_720_w":720,"thumb_720_h":450,"original_w":720,"original_h":450,"thumb_tiny":"AwAeADC3eytFDmM4bI7Vn/bbj/np+gq7qWfs3T+IVl0AT/bbj/np+go+23H/AD0/QU2CNJDhmwe1SvapEhLv9KAGfbbj/np+gqa0uppLlFd8qc5GB6VSqex/4+0/H+VAF3Uv+Pb/AIEKy63ZI1kGHAI9DUf2SD/nkv5UAY1KzM33iTitj7JB/wA8l/Kj7JBn/VL+VAGNU9j/AMfafj/KtI2kHaJfypUt4UYMkagjuKAP/9k=","permalink":"https://julialang.slack.com/files/U6C937ENB/F01RSSVM76U/heartpostmeanb.png","permalink_public":"https://slack-files.com/T68168MUP-F01RSSVM76U-1a921cfff3","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"2jj//","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Data and posterior mean"}]}]}],"user":"U6C937ENB","ts":"1615562782.019900"},{"client_msg_id":"1f49d767-a9ac-45c1-a8f9-6395550c9430","type":"message","text":"<https://projecteuclid.org/journals/bernoulli/volume-7/issue-3/Infinite-hierarchies-and-prior-distributions/bj/1080004760.full|https://projecteuclid.org/journals/bernoulli/volume-7/issue-3/Infinite-hierarchies-and-prior-distributions/bj/1080004760.full>","user":"UDGT4PM41","ts":"1615577367.021300","team":"T68168MUP","attachments":[{"service_name":"EUCLID","title":"Infinite hierarchies and prior distributions","title_link":"https://projecteuclid.org/journals/bernoulli/volume-7/issue-3/Infinite-hierarchies-and-prior-distributions/bj/1080004760.full","text":"This paper introduces a way of constructing non-informative priors for Bayesian analysis, by taking a limit of priors arising from hierarchical constructions as the number of levels in the hierarchy converges to infinity. Results are proved showing that for location families, and other related cases, limits are often not dependent on the exact form of the increment distribution used.","fallback":"EUCLID: Infinite hierarchies and prior distributions","from_url":"https://projecteuclid.org/journals/bernoulli/volume-7/issue-3/Infinite-hierarchies-and-prior-distributions/bj/1080004760.full","service_icon":"https://projecteuclid.org/apple-touch-icon.png","id":1,"original_url":"https://projecteuclid.org/journals/bernoulli/volume-7/issue-3/Infinite-hierarchies-and-prior-distributions/bj/1080004760.full"}],"blocks":[{"type":"rich_text","block_id":"DMHJ","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://projecteuclid.org/journals/bernoulli/volume-7/issue-3/Infinite-hierarchies-and-prior-distributions/bj/1080004760.full","text":"https://projecteuclid.org/journals/bernoulli/volume-7/issue-3/Infinite-hierarchies-and-prior-distributions/bj/1080004760.full"}]}]}]},{"client_msg_id":"e412bbe4-fe58-4786-b679-81dad638e6a2","type":"message","text":"Yodawgmeme.jpg","user":"UDGT4PM41","ts":"1615577376.021800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JxLC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yodawgmeme.jpg"}]}]}]}]}