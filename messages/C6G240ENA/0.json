{"cursor": 2, "messages": [{"client_msg_id":"c52247f9-e8d7-4cf3-91dc-891134d47558","type":"message","text":"&gt; ZygoteRules already made us go through standards proliferation once. \nZygoteRules was an issue and we knew that from the start.","user":"U69BL50BF","ts":"1612549014.194700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KSMLy","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"ZygoteRules already made us go through standards proliferation once. "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"ZygoteRules was an issue and we knew that from the start."}]}]}],"thread_ts":"1612549014.194700","reply_count":1,"reply_users_count":1,"latest_reply":"1612549226.201500","reply_users":["U6A936746"],"subscribed":false},{"client_msg_id":"86c034e5-37bb-4342-bd6a-fe25252680d9","type":"message","text":"I think we know we need to center around something ChainRules does or else it's AD-specific","user":"U69BL50BF","ts":"1612549033.195400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"paJXi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think we know we need to center around something ChainRules does or else it's AD-specific"}]}]}]},{"client_msg_id":"d7667176-2547-4d73-9468-ce7fe409086c","type":"message","text":"and ChainRules needs to agree to it in order to ever hope to solve the higher order AD problem","user":"U69BL50BF","ts":"1612549047.196300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cz12","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and ChainRules needs to agree to it in order to ever hope to solve the higher order AD problem"}]}]}]},{"client_msg_id":"eb9aa792-69ef-4d2d-8abc-52b2493d956a","type":"message","text":"For those issues <@U6A936746> perhaps it makes sense for ChainRulesCore to depend on the API package.","user":"U85JBUGGP","ts":"1612549048.196400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d18","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For those issues "},{"type":"user","user_id":"U6A936746"},{"type":"text","text":" perhaps it makes sense for ChainRulesCore to depend on the API package."}]}]}]},{"client_msg_id":"eb5fc992-2e63-44ba-ab23-cd79813ca1d2","type":"message","text":"But the API package is useful on its own as well.","user":"U85JBUGGP","ts":"1612549071.197000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JMLo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But the API package is useful on its own as well."}]}]}]},{"client_msg_id":"0638abaf-db2d-48b0-8807-d886a2a3d5b4","type":"message","text":"so that packages can implement the API without relying on ChainRules?","user":"U69BL50BF","ts":"1612549095.197900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tAM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so that packages can implement the API without relying on ChainRules?"}]}]}]},{"client_msg_id":"ba326535-6365-484c-84a4-01a284073f82","type":"message","text":"yes","user":"U85JBUGGP","ts":"1612549099.198300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O7Npo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}]},{"client_msg_id":"847daff3-dbd0-42ea-b86b-98f97bbfd5bd","type":"message","text":"&gt; we can throw in parallelism support to make it fancier and more useful\nYeah that whole issue.","user":"U69BL50BF","ts":"1612549100.198400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H6N","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"we can throw in parallelism support to make it fancier and more useful"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah that whole issue."}]}]}]},{"client_msg_id":"1d6f0e40-618c-473f-bec6-455888e5a244","type":"message","text":"I do want a parallel ForwardDiff.gradient but probably can't add it to the package, and can't add it out of the package :scream:","user":"U69BL50BF","ts":"1612549117.199100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PjfE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I do want a parallel ForwardDiff.gradient but probably can't add it to the package, and can't add it out of the package "},{"type":"emoji","name":"scream"}]}]}]},{"client_msg_id":"c512b058-555b-4a86-b7bb-f6271adee4a5","type":"message","text":"I guess one thing can do is like Tables.jl and TablesInterfaces.jl\nwhere you *could* implement TableInterfaces.jl directly.\nOr you could just implement Tables.jl and get TablesInterfaces.jl for free.\n\nSImilarly, you could provides a `ConfiguredRRule` for ChainRulesCore,\nand get your `AbstractAD.jacobean`, `AbstractAD.gradient` etc for free.","user":"U6A936746","ts":"1612549161.200300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y0XNo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess one thing can do is like Tables.jl and TablesInterfaces.jl\nwhere you "},{"type":"text","text":"could","style":{"bold":true}},{"type":"text","text":" implement TableInterfaces.jl directly.\nOr you could just implement Tables.jl and get TablesInterfaces.jl for free.\n\nSImilarly, you could provides a "},{"type":"text","text":"ConfiguredRRule","style":{"code":true}},{"type":"text","text":" for ChainRulesCore,\nand get your "},{"type":"text","text":"AbstractAD.jacobean","style":{"code":true}},{"type":"text","text":", `AbstractAD.gradient` etc for free."}]}]}]},{"client_msg_id":"462f4951-77c7-4e65-a2af-9640de5315e6","type":"message","text":"&gt; I do want a parallel ForwardDiff.gradient but probably can’t add it to the package, and can’t add it out of the package :scream:\nwe can have parametric AD backends :slightly_smiling_face: `ParallelAD{&lt;:AbstractForwardMode}`","user":"U85JBUGGP","ts":"1612549165.200400","team":"T68168MUP","edited":{"user":"U85JBUGGP","ts":"1612549181.000000"},"blocks":[{"type":"rich_text","block_id":"qLSMz","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I do want a parallel ForwardDiff.gradient but probably can’t add it to the package, and can’t add it out of the package "},{"type":"emoji","name":"scream"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"we can have parametric AD backends "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" "},{"type":"text","text":"ParallelAD{<:AbstractForwardMode}","style":{"code":true}}]}]}]},{"client_msg_id":"890c1853-b078-47f5-989b-f0f0e839dcbb","type":"message","text":"yeah","user":"U69BL50BF","ts":"1612549175.200600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rs28","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah"}]}]}]},{"client_msg_id":"ffda5edd-e934-4e87-91ed-6de0d1d2d327","type":"message","text":"that would just require","user":"U69BL50BF","ts":"1612549179.200800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZFUpA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that would just require"}]}]}]},{"client_msg_id":"379d7808-8a3b-4a48-9899-b0be1669e10c","type":"message","text":"`jacobian(f,x,ForwardDiffJL(),cache_stuff;color,sparsity,...)`","user":"U69BL50BF","ts":"1612549189.201100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"joZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"jacobian(f,x,ForwardDiffJL(),cache_stuff;color,sparsity,...)","style":{"code":true}}]}]}]},{"client_msg_id":"ef64c795-5d65-48fb-9d52-286ac2c047be","type":"message","text":"because then as an instance it can have a default","user":"U69BL50BF","ts":"1612549196.201400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pnWyu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because then as an instance it can have a default"}]}]}]},{"client_msg_id":"73ad28af-461c-4a39-a1aa-72bece525346","type":"message","text":"&gt; SImilarly, you could provides a `ConfiguredRRule` for ChainRulesCore,\n&gt; and get your `AbstractAD.jacobean`, `AbstractAD.gradient` etc for free.","user":"U69BL50BF","ts":"1612549237.202000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nbw","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"SImilarly, you could provides a "},{"type":"text","text":"ConfiguredRRule","style":{"code":true}},{"type":"text","text":" for ChainRulesCore,\nand get your "},{"type":"text","text":"AbstractAD.jacobean","style":{"code":true}},{"type":"text","text":", `AbstractAD.gradient` etc for free."}]}]}]},{"client_msg_id":"66e1959a-35b9-4d35-a0ac-1df84c2e993a","type":"message","text":"I think we need a bit more","user":"U69BL50BF","ts":"1612549239.202200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N4v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think we need a bit more"}]}]}]},{"client_msg_id":"65cc9550-e4ac-4b37-971c-d884597ae49f","type":"message","text":"because this context object will be needed in the rule definitions","user":"U69BL50BF","ts":"1612549249.202800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hfi8J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because this context object will be needed in the rule definitions"}]}]}]},{"client_msg_id":"8efb4a0d-92de-4804-a063-f2a853f5b4b9","type":"message","text":"I think it'll need to get pasted in there somehow","user":"U69BL50BF","ts":"1612549262.203300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/wq5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it'll need to get pasted in there somehow"}]}]}]},{"client_msg_id":"92e6e617-4d75-4b0e-90de-fdf9561cc962","type":"message","text":"so you can know the type that comes from the current differentiator","user":"U69BL50BF","ts":"1612549271.203700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aMly","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you can know the type that comes from the current differentiator"}]}]}]},{"client_msg_id":"ee78b8c4-8a13-4106-96b9-bde3d09b5f96","type":"message","text":"to put it into the higher order AD call","user":"U69BL50BF","ts":"1612549277.204100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z58","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to put it into the higher order AD call"}]}]}]},{"client_msg_id":"9750ccc3-1e75-4199-b702-daa8497ce138","type":"message","text":"but that would be a breaking change :shrug:","user":"U69BL50BF","ts":"1612549284.204400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aWdOY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but that would be a breaking change "},{"type":"emoji","name":"shrug"}]}]}]},{"client_msg_id":"8d51836a-4252-4142-a76e-003c3ae50a03","type":"message","text":"`ConfiguredRRule`  is almost certainly an abstract type that you can put whatever junk your AD needs into.","user":"U6A936746","ts":"1612549317.205200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3lJoZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ConfiguredRRule","style":{"code":true}},{"type":"text","text":"  is almost certainly an abstract type that you can put whatever junk your AD needs into."}]}]}]},{"client_msg_id":"74a60654-1e14-4768-b9b0-21173c55d778","type":"message","text":"It’s whole point is to provide more-or-less AD specific stuff into the `rrule` definitions.","user":"U6A936746","ts":"1612549391.206400","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1612549397.000000"},"blocks":[{"type":"rich_text","block_id":"ZW5S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s whole point is to provide more-or-less AD specific stuff into the "},{"type":"text","text":"rrule","style":{"code":true}},{"type":"text","text":" definitions."}]}]}]},{"client_msg_id":"539d7276-491b-4466-94d3-3afdeb6d70cb","type":"message","text":"while abstracting it enough that you are not just making rules for one AD","user":"U6A936746","ts":"1612549413.207300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"992","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"while abstracting it enough that you are not just making rules for one AD"}]}]}]},{"client_msg_id":"adccc0b9-c0dc-4f45-963b-a68f8758dffe","type":"message","text":"So I am not too familiar with the ChainRules story and technical requirements here but the idea of a unified AD API is reinvented over and over again in so many packages in Julia. This is the main problem I want to solve. If we can cater to the needs of ChainRulesCore as well with that package, then great. I think it’s not impossible with some coordination.","user":"U85JBUGGP","ts":"1612549481.208400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"clqV1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I am not too familiar with the ChainRules story and technical requirements here but the idea of a unified AD API is reinvented over and over again in so many packages in Julia. This is the main problem I want to solve. If we can cater to the needs of ChainRulesCore as well with that package, then great. I think it’s not impossible with some coordination."}]}]}]},{"client_msg_id":"3974411a-edfc-49b7-906d-2f5523186675","type":"message","text":"I don’t think you can cater to the needs of ChainRulesCore with such a package","user":"U6A936746","ts":"1612549509.208900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j7O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t think you can cater to the needs of ChainRulesCore with such a package"}]}]}]},{"client_msg_id":"bf874d17-f80f-4dcb-80b6-126687bf322a","type":"message","text":"it has the direction backwards","user":"U6A936746","ts":"1612549530.209400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0H7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it has the direction backwards"}]}]}]},{"client_msg_id":"94e8f22a-71ca-412e-8c57-6c5f69db527b","type":"message","text":"ChainRulesCore can cater to the needs of such a package","user":"U6A936746","ts":"1612549532.209600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0=3X5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ChainRulesCore can cater to the needs of such a package"}]}]}]},{"client_msg_id":"53888585-ddeb-4a0a-8137-447818c6b696","type":"message","text":"it can define an API, and then ForwardDiff.jl, FiniteDiff.jl, FiniteDifferences.jl, Zygote.jl, etc. can go on that API","user":"U69BL50BF","ts":"1612549557.210400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6d7dw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it can define an API, and then ForwardDiff.jl, FiniteDiff.jl, FiniteDifferences.jl, Zygote.jl, etc. can go on that API"}]}]}]},{"client_msg_id":"aad73bc4-4cca-43aa-ac93-73709bbab910","type":"message","text":"yes then ChainRulesCore only needs to “deal with” a single API","user":"U85JBUGGP","ts":"1612549576.211200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8SjGE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes then ChainRulesCore only needs to “deal with” a single API"}]}]}]},{"client_msg_id":"bf568a84-0aff-4925-8d66-3b1b9c8c44cf","type":"message","text":"no, still backwards","user":"U6A936746","ts":"1612549582.211600","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1612549591.000000"},"blocks":[{"type":"rich_text","block_id":"Wrjwq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, still backwards"}]}]}]},{"client_msg_id":"569b7125-8d76-455a-9420-1f6b1cff288e","type":"message","text":"most of the packages are in JuliaDiff so there is some ability to move everything in tandem (and not break the old APIs)","user":"U69BL50BF","ts":"1612549583.211700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zx6x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"most of the packages are in JuliaDiff so there is some ability to move everything in tandem (and not break the old APIs)"}]}]}]},{"client_msg_id":"fec9f1c6-9849-4f29-8e81-4e823f2c8b12","type":"message","text":"&gt; no, still backwards\nIf so, then perhaps it makes sense to have 2 implementations initially and see if we can combine them later. The abstract AD package can be &lt; 50 locs. So rewriting it a few times is not hard.","user":"U85JBUGGP","ts":"1612549655.213500","team":"T68168MUP","edited":{"user":"U85JBUGGP","ts":"1612549666.000000"},"blocks":[{"type":"rich_text","block_id":"O7y","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"no, still backwards"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"If so, then perhaps it makes sense to have 2 implementations initially and see if we can combine them later. The abstract AD package can be < 50 locs. So rewriting it a few times is not hard."}]}]}],"reactions":[{"name":"+1","users":["U69BL50BF","U6A936746"],"count":2}]},{"client_msg_id":"43268366-326a-42dc-97e6-fe58831dcf1b","type":"message","text":"perfect is the enemy of the good here.","user":"U69BL50BF","ts":"1612549726.215200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QTK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"perfect is the enemy of the good here."}]}]}]},{"client_msg_id":"8745e29f-b584-4bb2-a0da-ec5dfee5471b","type":"message","text":"To be clear why ChainRulesCore can’t benefit from such a package\nIt is because you need more information in a `ConfiguredRRule` than `vjp` (rrule-like) or `jvp` (frule-like)\nyou need both (or to say you won’t provide one)\nyou need a bunch of traits about what rules should be allowed to be loaded (no mutation for Zygote).","user":"U6A936746","ts":"1612549774.216000","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1612549848.000000"},"blocks":[{"type":"rich_text","block_id":"dsq0B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To be clear why ChainRulesCore can’t benefit from such a package\nIt is because you need more information in a "},{"type":"text","text":"ConfiguredRRule","style":{"code":true}},{"type":"text","text":" than "},{"type":"text","text":"vjp","style":{"code":true}},{"type":"text","text":" (rrule-like) or "},{"type":"text","text":"jvp","style":{"code":true}},{"type":"text","text":" (frule-like)\nyou need both (or to say you won’t provide one)\nyou need a bunch of traits about what rules should be allowed to be loaded (no mutation for Zygote)."}]}]}]},{"client_msg_id":"dc18b870-d2e9-4815-b4d6-06e3db3b2d2d","type":"message","text":"In contrast you only *need* frule-like or rrule-like to implement jacobian, gradient, hessian, etc. (though might be some wins from doing them directly )","user":"U6A936746","ts":"1612549832.217600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RVYZk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In contrast you only "},{"type":"text","text":"need","style":{"bold":true}},{"type":"text","text":" frule-like or rrule-like to implement jacobian, gradient, hessian, etc. (though might be some wins from doing them directly )"}]}]}]},{"client_msg_id":"c965c1c3-eb67-412e-9ab6-0f7e623ff7c0","type":"message","text":"I see. These sounds like features that only ChainRules-compatible AD packages can define anyways. So the scope here is different. Because I am targeting all AD packages with the API package.","user":"U85JBUGGP","ts":"1612549842.217900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yx=lC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see. These sounds like features that only ChainRules-compatible AD packages can define anyways. So the scope here is different. Because I am targeting all AD packages with the API package."}]}]}]},{"client_msg_id":"cd2543a5-c203-44ed-a5ef-97c5261c9357","type":"message","text":"No, not really, such rules don’t actually depend using anything from ChainRules except when dealing with structs.\nThough the extra stuff is not useful if not defining rules.","user":"U6A936746","ts":"1612549886.218900","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1612549982.000000"},"blocks":[{"type":"rich_text","block_id":"0VV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, not really, such rules don’t actually depend using anything from ChainRules except when dealing with structs.\nThough the extra stuff is not useful if not defining rules."}]}]}]},{"client_msg_id":"94c14ea2-7ed1-45b7-8585-d1d77a94531e","type":"message","text":"It's similar. Step 1 is to get everyone onto the same API. Step 2 is get traits to differentiate methods (pun intended). Step 3 is to start writing AD-unaware high order rules.","user":"U69BL50BF","ts":"1612549895.219400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mger2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's similar. Step 1 is to get everyone onto the same API. Step 2 is get traits to differentiate methods (pun intended). Step 3 is to start writing AD-unaware high order rules."}]}]}]},{"client_msg_id":"02130127-08ea-4c51-a1ef-98fb98b29ea0","type":"message","text":"I stand by this statement\n<https://julialang.slack.com/archives/C6G240ENA/p1612549161200300>","user":"U6A936746","ts":"1612549999.221200","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/C6G240ENA/p1612549161200300","fallback":"[February 5th, 2021 10:19 AM] oxinabox: I guess one thing can do is like Tables.jl and TablesInterfaces.jl\nwhere you *could* implement TableInterfaces.jl directly.\nOr you could just implement Tables.jl and get TablesInterfaces.jl for free.\n\nSImilarly, you could provides a `ConfiguredRRule` for ChainRulesCore,\nand get your `AbstractAD.jacobean`, `AbstractAD.gradient` etc for free.","ts":"1612549161.200300","author_id":"U6A936746","author_subname":"Lyndon White","channel_id":"C6G240ENA","channel_name":"autodiff","is_msg_unfurl":true,"text":"I guess one thing can do is like Tables.jl and TablesInterfaces.jl\nwhere you *could* implement TableInterfaces.jl directly.\nOr you could just implement Tables.jl and get TablesInterfaces.jl for free.\n\nSImilarly, you could provides a `ConfiguredRRule` for ChainRulesCore,\nand get your `AbstractAD.jacobean`, `AbstractAD.gradient` etc for free.","author_name":"Lyndon White","author_link":"https://julialang.slack.com/team/U6A936746","author_icon":"https://avatars.slack-edge.com/2017-07-25/216502576448_36aaf550196bfa49acdc_48.jpg","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/C6G240ENA/p1612549161200300","footer":"Posted in #autodiff"}],"blocks":[{"type":"rich_text","block_id":"/hl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I stand by this statement\n"},{"type":"link","url":"https://julialang.slack.com/archives/C6G240ENA/p1612549161200300"}]}]}]},{"client_msg_id":"ae7ca0a0-3f45-4899-b7e3-826aa1bc49f8","type":"message","text":"&gt; No, not really\n&gt; you need a bunch of traits about what rules should be allowed to be loaded (no mutation for Zygote).\nThese traits can only be defined for a package and be visible to ChainRulesCore if the AD package depends on ChainRulesCore. But I suppose that’s your plan anyways.","user":"U85JBUGGP","ts":"1612550004.221500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7nz","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"No, not really"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"you need a bunch of traits about what rules should be allowed to be loaded (no mutation for Zygote)."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThese traits can only be defined for a package and be visible to ChainRulesCore if the AD package depends on ChainRulesCore. But I suppose that’s your plan anyways."}]}]}],"thread_ts":"1612550004.221500","reply_count":6,"reply_users_count":2,"latest_reply":"1612550109.222900","reply_users":["U6A936746","U85JBUGGP"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"I see. I think we don’t disagree that a common API is needed. We just disagree on where it should live.","user":"U85JBUGGP","ts":"1612550077.222300","thread_ts":"1612550004.221500","root":{"client_msg_id":"ae7ca0a0-3f45-4899-b7e3-826aa1bc49f8","type":"message","text":"&gt; No, not really\n&gt; you need a bunch of traits about what rules should be allowed to be loaded (no mutation for Zygote).\nThese traits can only be defined for a package and be visible to ChainRulesCore if the AD package depends on ChainRulesCore. But I suppose that’s your plan anyways.","user":"U85JBUGGP","ts":"1612550004.221500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7nz","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"No, not really"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"you need a bunch of traits about what rules should be allowed to be loaded (no mutation for Zygote)."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThese traits can only be defined for a package and be visible to ChainRulesCore if the AD package depends on ChainRulesCore. But I suppose that’s your plan anyways."}]}]}],"thread_ts":"1612550004.221500","reply_count":6,"reply_users_count":2,"latest_reply":"1612550109.222900","reply_users":["U6A936746","U85JBUGGP"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"wOGCW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see. I think we don’t disagree that a common API is needed. We just disagree on where it should live."}]}]}],"client_msg_id":"d34e5c9c-5f43-4a97-919b-17999445d568","edited":{"user":"U85JBUGGP","ts":"1612550088.000000"}},{"client_msg_id":"48293c24-7cdd-4b98-8c76-1d55302a332c","type":"message","text":"<@U85JBUGGP> I have bumped your privs up to owner on JuliaDiff. So you can create a repo there.\n(Plus :bus: factor)","user":"U6A936746","ts":"1612550291.226200","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1612550305.000000"},"blocks":[{"type":"rich_text","block_id":"8QoNC","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U85JBUGGP"},{"type":"text","text":" I have bumped your privs up to owner on JuliaDiff. So you can create a repo there.\n(Plus "},{"type":"emoji","name":"bus"},{"type":"text","text":" factor)"}]}]}],"reactions":[{"name":"heart","users":["U85JBUGGP"],"count":1}]},{"client_msg_id":"45e82003-af32-4d65-9eec-4f212b4113ab","type":"message","text":"So the main reason for wanting a separate package is that `ChainRulesCore` is more ambitious and targets a different layer of abstraction than the one I have in mind. This means that it can develop in ways, albeit great, that are not really necessary for a package like ~`FiniteDifferences`~ `ForwardDiff` to do its job. So I don’t think ~`FiniteDifferences`~ `ForwardDiff` should depend on a moving target like `ChainRulesCore` when the AD API component can be as static as a rock living in its own distant package that no one really needs to touch. Just summarising my thoughts.","user":"U85JBUGGP","ts":"1612550366.227300","team":"T68168MUP","edited":{"user":"U85JBUGGP","ts":"1612550464.000000"},"blocks":[{"type":"rich_text","block_id":"QLGZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the main reason for wanting a separate package is that "},{"type":"text","text":"ChainRulesCore","style":{"code":true}},{"type":"text","text":" is more ambitious and targets a different layer of abstraction than the one I have in mind. This means that it can develop in ways, albeit great, that are not really necessary for a package like "},{"type":"text","text":"FiniteDifferences","style":{"strike":true,"code":true}},{"type":"text","text":" "},{"type":"text","text":"ForwardDiff","style":{"code":true}},{"type":"text","text":" to do its job. So I don’t think "},{"type":"text","text":"FiniteDifferences","style":{"strike":true,"code":true}},{"type":"text","text":" "},{"type":"text","text":"ForwardDiff","style":{"code":true}},{"type":"text","text":" should depend on a moving target like "},{"type":"text","text":"ChainRulesCore","style":{"code":true}},{"type":"text","text":" when the AD API component can be as static as a rock living in its own distant package that no one really needs to touch. Just summarising my thoughts."}]}]}],"thread_ts":"1612550366.227300","reply_count":18,"reply_users_count":2,"latest_reply":"1612551173.234700","reply_users":["U6A936746","U85JBUGGP"],"subscribed":false},{"client_msg_id":"1effc0a8-a27d-452c-bc47-0f88a9211f60","type":"message","text":"For context:\n<https://github.com/JuliaDiff/ChainRulesCore.jl/issues/68> is the main blocker for ChainRulesCore 1.0\nWhich is the issue that will build the ConfiguredRRule.\nI don’t know how breaking it will be, probably not very, if at all.","user":"U6A936746","ts":"1612550971.233800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pjHz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For context:\n"},{"type":"link","url":"https://github.com/JuliaDiff/ChainRulesCore.jl/issues/68"},{"type":"text","text":" is the main blocker for ChainRulesCore 1.0\nWhich is the issue that will build the ConfiguredRRule.\nI don’t know how breaking it will be, probably not very, if at all."}]}]}]},{"client_msg_id":"a8df7a48-18b5-4a06-8f59-31775d3bea37","type":"message","text":"Name bikeshedding for the API package? `AbstractAD`?","user":"U85JBUGGP","ts":"1612551248.236100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tysOK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Name bikeshedding for the API package? "},{"type":"text","text":"AbstractAD","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1612551248.236100","reply_count":21,"reply_users_count":4,"latest_reply":"1612552183.242800","reply_users":["U6A936746","U85JBUGGP","UM30MT6RF","U69BL50BF"],"subscribed":false},{"client_msg_id":"1a89d73e-878a-45dc-8c25-2a773b998385","type":"message","text":"Unrelated: I am still annoyed `Zygote` called `Zygote.pullback` pullback.\nWe had a discusion a week before that where literally  everyone agreed the name for that operations could be many things, so long as it wasn’t `pullback`","user":"U6A936746","ts":"1612551383.237600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7cr=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Unrelated: I am still annoyed "},{"type":"text","text":"Zygote","style":{"code":true}},{"type":"text","text":" called "},{"type":"text","text":"Zygote.pullback","style":{"code":true}},{"type":"text","text":" pullback.\nWe had a discusion a week before that where literally  everyone agreed the name for that operations could be many things, so long as it wasn’t "},{"type":"text","text":"pullback","style":{"code":true}}]}]}]},{"client_msg_id":"be8064ff-505e-4f42-803a-fbcc3df9de61","type":"message","text":"I am also annoyed that someone registered a package called `HigherOrderDerivatives.jl` that is just a simple forward-mode AD that suffers from perturbation confusion if you try to nest it.","user":"U6A936746","ts":"1612551535.239500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UQpl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am also annoyed that someone registered a package called "},{"type":"text","text":"HigherOrderDerivatives.jl","style":{"code":true}},{"type":"text","text":" that is just a simple forward-mode AD that suffers from perturbation confusion if you try to nest it."}]}]}]},{"type":"message","subtype":"thread_broadcast","text":"Requesting:\n\n\n• gradient\n• jacobian\n• hessian\n• value_and_directional_derivative (not, jvp)\n• directional_derivative (for just the send return)\n• value_and_pullback (returns a pullback function)\n• pullback_at\n","user":"U6A936746","ts":"1612552250.243500","thread_ts":"1612548723.186800","root":{"client_msg_id":"cb824fc5-0fef-4d95-8d0b-44433b831b72","type":"message","text":"I think it should just define stub functions for:\n\n• gradient\n• jacobian\n• hessian\n• jvp\n• pullback","user":"U69BL50BF","ts":"1612548723.186800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4OCgT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it should just define stub functions for:\n\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"gradient"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"jacobian"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"hessian"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"jvp"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"pullback"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1612548723.186800","reply_count":1,"reply_users_count":1,"latest_reply":"1612552250.243500","reply_users":["U6A936746"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"=x8ba","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Requesting:\n\n\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"gradient"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"jacobian"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"hessian"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"value_and_directional_derivative (not, jvp)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"directional_derivative (for just the send return)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"value_and_pullback (returns a pullback function)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"pullback_at"}]}],"style":"bullet","indent":0},{"type":"rich_text_section","elements":[]}]}],"client_msg_id":"0d317e30-a907-4a71-a6a7-f40bb15cfd4b"},{"type":"message","subtype":"thread_broadcast","text":"Also got to have test suites so can be certain everything implements API the same.\n\nI would also suggest that such test-suite should use reflection to ensure that  extra kwarg and positional args that are not common to everything are not present\nSo that changing ADs is just a matter of changing out an object that holds *everything* that makes an AD special.\n(including e.g. caches if its using its own special caches)","user":"U6A936746","ts":"1612553246.246600","thread_ts":"1612548723.186800","root":{"client_msg_id":"cb824fc5-0fef-4d95-8d0b-44433b831b72","type":"message","text":"I think it should just define stub functions for:\n\n• gradient\n• jacobian\n• hessian\n• jvp\n• pullback","user":"U69BL50BF","ts":"1612548723.186800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4OCgT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it should just define stub functions for:\n\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"gradient"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"jacobian"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"hessian"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"jvp"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"pullback"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1612548723.186800","reply_count":4,"reply_users_count":2,"latest_reply":"1612553246.246600","reply_users":["U6A936746","U85JBUGGP"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"owqZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also got to have test suites so can be certain everything implements API the same.\n\nI would also suggest that such test-suite should use reflection to ensure that  extra kwarg and positional args that are not common to everything are not present\nSo that changing ADs is just a matter of changing out an object that holds "},{"type":"text","text":"everything","style":{"bold":true}},{"type":"text","text":" that makes an AD special.\n(including e.g. caches if its using its own special caches)"}]}]}],"client_msg_id":"12ef4f3d-9186-4fe0-ba45-600193e6b74a","edited":{"user":"U6A936746","ts":"1612553279.000000"}},{"client_msg_id":"a0783663-cfaa-4e10-b820-1625cdf32d8a","type":"message","text":"Can I use Coloring Vectors with ForwardDiff without needing SparseDiffTools?\nOr is one of SparseDiffTools key feature supporting that easily in ForwardDiff","user":"U6A936746","ts":"1612567975.249700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yiI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can I use Coloring Vectors with ForwardDiff without needing SparseDiffTools?\nOr is one of SparseDiffTools key feature supporting that easily in ForwardDiff"}]}]}]},{"client_msg_id":"95081eed-fab5-4a9d-ab22-cc7f51baa2e8","type":"message","text":"---\nInstead of sleeping I rewrote <http://JuliaDiff.org|JuliaDiff.org>\n<https://github.com/JuliaDiff/juliadiff.github.io/pull/13>\nbecause it has been annoying me for *years*","user":"U6A936746","ts":"1612570919.250400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"taJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"---\nInstead of sleeping I rewrote "},{"type":"link","url":"http://JuliaDiff.org","text":"JuliaDiff.org"},{"type":"text","text":"\n"},{"type":"link","url":"https://github.com/JuliaDiff/juliadiff.github.io/pull/13"},{"type":"text","text":"\nbecause it has been annoying me for "},{"type":"text","text":"years","style":{"bold":true}}]}]}],"reactions":[{"name":"heart","users":["UH8A351DJ","UHDQQ4GN6","UCZ7VBGUD"],"count":3}]},{"client_msg_id":"6657221f-84f2-43ca-993f-10d314040a8a","type":"message","text":"&gt; Or is one of SparseDiffTools key feature supporting that easily in ForwardDiff\nIn theory it can get upstreamed","user":"U69BL50BF","ts":"1612577176.251300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TCsB","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Or is one of SparseDiffTools key feature supporting that easily in ForwardDiff"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"In theory it can get upstreamed"}]}]}]},{"client_msg_id":"65a1f82a-b066-4bc4-9321-2411afd78b87","type":"message","text":"in practice, ForwardDiff's seeding code is really wierd","user":"U69BL50BF","ts":"1612577186.251600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b5M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in practice, ForwardDiff's seeding code is really wierd"}]}]}],"reactions":[{"name":"+1","users":["U6A936746"],"count":1}]},{"client_msg_id":"8c4536fd-eea1-41ab-bfec-9e23f44a1840","type":"message","text":"<@U85JBUGGP> problem with `value_and_pushforward_function`\nis that it is not as efficient to implement as  the function that returns `value_and_tangent`  and takes in a primal value and input tangent.\n:thread:","user":"U6A936746","ts":"1612613042.258900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fLmD","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U85JBUGGP"},{"type":"text","text":" problem with "},{"type":"text","text":"value_and_pushforward_function","style":{"code":true}},{"type":"text","text":"\nis that it is not as efficient to implement as  the function that returns "},{"type":"text","text":"value_and_tangent","style":{"code":true}},{"type":"text","text":"  and takes in a primal value and input tangent.\n"},{"type":"emoji","name":"thread"}]}]}],"thread_ts":"1612613042.258900","reply_count":2,"reply_users_count":1,"latest_reply":"1612613178.260900","reply_users":["U6A936746"],"subscribed":false},{"client_msg_id":"104b6ec4-22da-4ce3-bd29-032b11ff02e6","type":"message","text":"Continuing off of <https://julialang.slack.com/archives/C6G240ENA/p1612612982258400?thread_ts=1612548723.186800&amp;cid=C6G240ENA>. Yes but I think the most basic high level interface is `jacobian` and `primalvalue`. A package can implement `jacobian` internally using pullbacks or pushforwards to apply the chain rules efficiently. But we can also derive those functions at a higher level using only `jacobian` and `primalvalue`.","user":"U85JBUGGP","ts":"1612613174.260700","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/C6G240ENA/p1612612982258400?thread_ts=1612548723.186800&amp;cid=C6G240ENA","fallback":"[February 6th, 2021 4:03 AM] oxinabox: not simpler to me, but maybe i broke my mind.\n\nWe should, I think, have jacobian fallback to them. Fiddly to avoid an infinite loop but I think we can do it.","ts":"1612612982.258400","author_id":"U6A936746","author_subname":"Lyndon White","channel_id":"C6G240ENA","channel_name":"autodiff","is_msg_unfurl":true,"is_reply_unfurl":true,"text":"not simpler to me, but maybe i broke my mind.\n\nWe should, I think, have jacobian fallback to them. Fiddly to avoid an infinite loop but I think we can do it.","author_name":"Lyndon White","author_link":"https://julialang.slack.com/team/U6A936746","author_icon":"https://avatars.slack-edge.com/2017-07-25/216502576448_36aaf550196bfa49acdc_48.jpg","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/C6G240ENA/p1612612982258400?thread_ts=1612548723.186800&amp;cid=C6G240ENA","footer":"From a thread in #autodiff"}],"blocks":[{"type":"rich_text","block_id":"Smc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Continuing off of "},{"type":"link","url":"https://julialang.slack.com/archives/C6G240ENA/p1612612982258400?thread_ts=1612548723.186800&cid=C6G240ENA"},{"type":"text","text":". Yes but I think the most basic high level interface is "},{"type":"text","text":"jacobian","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"primalvalue","style":{"code":true}},{"type":"text","text":". A package can implement "},{"type":"text","text":"jacobian","style":{"code":true}},{"type":"text","text":" internally using pullbacks or pushforwards to apply the chain rules efficiently. But we can also derive those functions at a higher level using only "},{"type":"text","text":"jacobian","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"primalvalue","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1612613174.260700","reply_count":1,"reply_users_count":1,"latest_reply":"1612613328.263100","reply_users":["U6A936746"],"subscribed":false},{"client_msg_id":"2a9e794e-d39b-41da-a893-0b02b70df900","type":"message","text":"So when I implement `AbstractDifferentiation` (`AD`), autodiff package authors only really need to define `jacobian` and `primalvalue` for their backend. The rest of the functionality from the standard `AD` API comes for free. It will all eventually call the package’s internal `pullback` or `pushforward` but it will all just work iiuc.","user":"U85JBUGGP","ts":"1612613304.263000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bMKqg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So when I implement "},{"type":"text","text":"AbstractDifferentiation","style":{"code":true}},{"type":"text","text":" ("},{"type":"text","text":"AD","style":{"code":true}},{"type":"text","text":"), autodiff package authors only really need to define "},{"type":"text","text":"jacobian","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"primalvalue","style":{"code":true}},{"type":"text","text":" for their backend. The rest of the functionality from the standard "},{"type":"text","text":"AD","style":{"code":true}},{"type":"text","text":" API comes for free. It will all eventually call the package’s internal "},{"type":"text","text":"pullback","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"pushforward","style":{"code":true}},{"type":"text","text":" but it will all just work iiuc."}]}]}]},{"client_msg_id":"55ed46d0-d6c2-42a1-ac00-af2160a30e73","type":"message","text":"I think it’s best to wait for my PR to have something concrete to discuss.","user":"U85JBUGGP","ts":"1612613378.263700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HV9J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it’s best to wait for my PR to have something concrete to discuss."}]}]}],"thread_ts":"1612613378.263700","reply_count":2,"reply_users_count":1,"latest_reply":"1612613495.264400","reply_users":["U6A936746"],"subscribed":false,"reactions":[{"name":"ok_hand","users":["U6A936746"],"count":1}]},{"client_msg_id":"55c19b20-0e0d-4e1c-ba53-911ae31877ff","type":"message","text":"Interesting that `jacobian` as a concept kind of sums up the essence of all of differentiation. It basically differentiates many things wrt many other things. I don’t think it gets more generic than this!","user":"U85JBUGGP","ts":"1612613738.266000","team":"T68168MUP","edited":{"user":"U85JBUGGP","ts":"1612613772.000000"},"blocks":[{"type":"rich_text","block_id":"GH5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting that "},{"type":"text","text":"jacobian","style":{"code":true}},{"type":"text","text":" as a concept kind of sums up the essence of all of differentiation. It basically differentiates many things wrt many other things. I don’t think it gets more generic than this!"}]}]}],"thread_ts":"1612613738.266000","reply_count":1,"reply_users_count":1,"latest_reply":"1612613879.266200","reply_users":["U6A936746"],"subscribed":false}]}