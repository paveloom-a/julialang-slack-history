[{"client_msg_id":"416788ac-626f-4a29-8fe8-140a38e48f9c","type":"message","text":"Alright people, cloudflare has written some C to calculate euclidean distances in 144 dimensions for UInt8 Coordinates. Blog &amp; Code is in the Thread. Their fastest version is `mmdist-short-inv-avx2.c`, is ~200 LOC and runs in ~0.728ms per query on their system. Can we make this as fast (or maybe faster? :eyes:) with less code that is more readable?","user":"UH24GRBLL","ts":"1608303251.168800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MwGSq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alright people, cloudflare has written some C to calculate euclidean distances in 144 dimensions for UInt8 Coordinates. Blog & Code is in the Thread. Their fastest version is "},{"type":"text","text":"mmdist-short-inv-avx2.c","style":{"code":true}},{"type":"text","text":", is ~200 LOC and runs in ~0.728ms per query on their system. Can we make this as fast (or maybe faster? "},{"type":"emoji","name":"eyes"},{"type":"text","text":") with less code that is more readable?"}]}]}],"thread_ts":"1608303251.168800","reply_count":24,"reply_users_count":6,"latest_reply":"1608399035.192600","reply_users":["UH24GRBLL","UDB26738Q","UAUPJLBQX","U6795JH6H","U67431ELR","UB7JS9CHF"],"subscribed":false},{"client_msg_id":"eaff1f4c-2456-4787-848e-eec8d15a8a7b","type":"message","text":"BLOG: <https://blog.cloudflare.com/computing-euclidean-distance-on-144-dimensions/>","user":"UH24GRBLL","ts":"1608303258.168900","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1608303384.000000"},"blocks":[{"type":"rich_text","block_id":"vjZm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BLOG: "},{"type":"link","url":"https://blog.cloudflare.com/computing-euclidean-distance-on-144-dimensions/"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"9d56b64d-f6d7-4290-8b31-f2308e607e36","type":"message","text":"CODE: <https://github.com/cloudflare/cloudflare-blog/tree/master/2020-12-mmdist>","user":"UH24GRBLL","ts":"1608303265.169100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qgghP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"CODE: "},{"type":"link","url":"https://github.com/cloudflare/cloudflare-blog/tree/master/2020-12-mmdist"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"7e186c6a-c7ef-4779-90da-6d0d171d3a7b","type":"message","text":"_...and without using intrinsics..._","user":"UDB26738Q","ts":"1608303398.169500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ep+H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"...and without using intrinsics...","style":{"italic":true}}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"3459e525-438a-41ae-a21c-ed4d9060b89e","type":"message","text":"well they do `#include &lt;x86intrin.h&gt;`","user":"UH24GRBLL","ts":"1608303629.169700","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1608303632.000000"},"blocks":[{"type":"rich_text","block_id":"9l4Ej","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well they do "},{"type":"text","text":"#include <x86intrin.h>","style":{"code":true}}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"056f2a05-341b-4fbb-a6fa-1bdace2ac60a","type":"message","text":"I mean, it'd be nice to have a julia implementation that doesn't need to use intrinsics :slightly_smiling_face:","user":"UDB26738Q","ts":"1608303661.170000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tQii","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, it'd be nice to have a julia implementation that doesn't need to use intrinsics "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"a8adcaa3-8bf4-412d-9010-dd274600ef4b","type":"message","text":"does `@avx` count as an intrinsic? :p","user":"UH24GRBLL","ts":"1608304032.170200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0mr0e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does "},{"type":"text","text":"@avx","style":{"code":true}},{"type":"text","text":" count as an intrinsic? :p"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"d6236b0a-6f89-4158-bc4c-4a8a1ffbef33","type":"message","text":"Is it cheating to use a computer with AVX512?\nAVX2 intrinsics shouldn't be hard to beat.\n\nWhich is why writing explicitly with intrinsics isn't great: not portable.","user":"UAUPJLBQX","ts":"1608307919.171200","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1608308000.000000"},"blocks":[{"type":"rich_text","block_id":"Z5y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it cheating to use a computer with AVX512?\nAVX2 intrinsics shouldn't be hard to beat.\n\nWhich is why writing explicitly with intrinsics isn't great: not portable."}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"c22cacfe-962d-471f-8a02-30ca6d42ecab","type":"message","text":"&gt; We settled on using AVX2, with 256 bit vectors. We did this for a simple reason — newer AVX versions are not supported by our AMD CPUs. Additionally, in the past, we were not thrilled by the AVX-512 frequency scaling.\napparently yes :/","user":"UH24GRBLL","ts":"1608308040.171500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=ks","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"We settled on using AVX2, with 256 bit vectors. We did this for a simple reason — newer AVX versions are not supported by our AMD CPUs. Additionally, in the past, we were not thrilled by the AVX-512 frequency scaling."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\napparently yes :/"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"e239e283-5066-4458-a987-b1c82e67dd8f","type":"message","text":"Because they don't work on AMD CPUs?\nFWIW, the code I'd write would at least be portable to run on either.","user":"UAUPJLBQX","ts":"1608308138.171700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IITA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because they don't work on AMD CPUs?\nFWIW, the code I'd write would at least be portable to run on either."}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"a0ef7889-d8e4-4f13-9210-aba80ee1f87b","type":"message","text":"Looking at the code though, `main` doesn't look like it'd be much fun to translate.","user":"UAUPJLBQX","ts":"1608308253.171900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8HO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looking at the code though, "},{"type":"text","text":"main","style":{"code":true}},{"type":"text","text":" doesn't look like it'd be much fun to translate."}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"e3d5a563-a5fb-4eab-81c5-b096f36f1206","type":"message","text":"I'd be happy to help if someone else wants to take a stab at it.","user":"UAUPJLBQX","ts":"1608308303.172100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FHunc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd be happy to help if someone else wants to take a stab at it."}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"87621817-ecd2-4445-b12b-61188f170a1d","type":"message","text":"yeah, their fastest version is a little tricky, but it's basically incremental improvements","user":"UH24GRBLL","ts":"1608308409.172300","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1608308412.000000"},"blocks":[{"type":"rich_text","block_id":"dzCqs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, their fastest version is a little tricky, but it's basically incremental improvements"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"3e0d703e-1c47-4e10-902d-0361e2ec698c","type":"message","text":"they basically extract some short hash from the full hash and only if they're close do they calculate the full check","user":"UH24GRBLL","ts":"1608308451.172600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q6P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"they basically extract some short hash from the full hash and only if they're close do they calculate the full check"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"965fb64f-734d-41e1-9d40-94e9908b82e5","type":"message","text":"&gt; The proposed algorithm works as follows:\n&gt; 1. Take the query hash and extract a 32-byte short hash from it\n&gt; 2. Go over all the 1 million 32-byte short hashes from the database. They must be densely packed in the memory to allow the CPU to perform good prefetching and avoid reading data we won't need.\n&gt; 3. If the distance of the 32-byte short hash is greater or equal a best score so far, move on\n&gt; 4. Otherwise, investigate the hash thoroughly and compute the full distance.","user":"UH24GRBLL","ts":"1608308509.172800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T9mvV","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"The proposed algorithm works as follows:\n1. Take the query hash and extract a 32-byte short hash from it\n2. Go over all the 1 million 32-byte short hashes from the database. They must be densely packed in the memory to allow the CPU to perform good prefetching and avoid reading data we won't need.\n3. If the distance of the 32-byte short hash is greater or equal a best score so far, move on\n4. Otherwise, investigate the hash thoroughly and compute the full distance."}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"1c7c913b-36fa-4359-9f7a-3853829d7bad","type":"message","text":"as long as our version does basically the same, I don't see why we'd have to directly translate the C code :man-shrugging:","user":"UH24GRBLL","ts":"1608308537.173000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/KCg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as long as our version does basically the same, I don't see why we'd have to directly translate the C code "},{"type":"emoji","name":"man-shrugging"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"f3e9189b-1449-4a49-ac3d-f419be4ff5e1","type":"message","text":"The blogpost itself is pretty insightful, so I don't think there are speed gains to be had","user":"UH24GRBLL","ts":"1608308661.173200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"33CMr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The blogpost itself is pretty insightful, so I don't think there are speed gains to be had"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"fd0b5829-6881-460b-b26c-c28ce155a114","type":"message","text":"has anyone tried out <https://github.com/JuliaStats/Distances.jl> ?","user":"U6795JH6H","ts":"1608315410.174900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ijf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"has anyone tried out "},{"type":"link","url":"https://github.com/JuliaStats/Distances.jl"},{"type":"text","text":" ?"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"ddbcd897-342c-4c23-856a-dcc2524e197f","type":"message","text":"I believe that there’s a clever trick for computing all pairwise distances that uses matrix multiplication, which can be asymptotically more efficient","user":"U6795JH6H","ts":"1608315467.175100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0raQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe that there’s a clever trick for computing all pairwise distances that uses matrix multiplication, which can be asymptotically more efficient"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"f49bee7e-1bda-4575-9b02-e89a20e163aa","type":"message","text":"that optimization could be combined with their dimension subsetting trick since you can do the matmul factorization in reduced dimensions","user":"U6795JH6H","ts":"1608315760.175300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QObY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that optimization could be combined with their dimension subsetting trick since you can do the matmul factorization in reduced dimensions"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"a22e13eb-0de3-40e6-bc59-01c7505318fd","type":"message","text":"I had a quick look through that package, I don't see matmuls there :thinking_face:","user":"UH24GRBLL","ts":"1608315912.175500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nIGF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I had a quick look through that package, I don't see matmuls there "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"b243ffb4-3019-45d9-9f61-e17a0864f823","type":"message","text":"at least not in the pairwise implementation","user":"UH24GRBLL","ts":"1608315924.175700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cOw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"at least not in the pairwise implementation"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"eaecc298-7efe-44bc-a998-347379dd4ec7","type":"message","text":"perhaps I’m misremembering or the implementation was changed","user":"U6795JH6H","ts":"1608316064.175900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p3vS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"perhaps I’m misremembering or the implementation was changed"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"a75568a6-4938-4ba6-be09-307c06997897","type":"message","text":"Yes, see <https://github.com/JuliaStats/Distances.jl/blob/f6ee3532b2c312da80692ec3d84ca796e45d432d/src/metrics.jl#L722>","user":"U67431ELR","ts":"1608316634.176100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vieKa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, see "},{"type":"link","url":"https://github.com/JuliaStats/Distances.jl/blob/f6ee3532b2c312da80692ec3d84ca796e45d432d/src/metrics.jl#L722"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"},{"client_msg_id":"5a546710-0810-4e89-8789-031d79c07bb2","type":"message","text":"Love the nerd snipe going on here, looking forward to seeing the results!","user":"UB7JS9CHF","ts":"1608399035.192600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z58v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Love the nerd snipe going on here, looking forward to seeing the results!"}]}]}],"thread_ts":"1608303251.168800","parent_user_id":"UH24GRBLL"}]