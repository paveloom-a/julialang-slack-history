[{"client_msg_id":"acd7ca58-dc25-404d-a0b0-ba2295f54957","type":"message","text":"man I am fighting with how to do control flow in rust... Not having mutlidispatch is fine, but I'm really struggling with how to cope with generic types... You can't dispatch on them, you can't bound them.","user":"UPUBAM63X","ts":"1608083366.188400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XxXJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"man I am fighting with how to do control flow in rust... Not having mutlidispatch is fine, but I'm really struggling with how to cope with generic types... You can't dispatch on them, you can't bound them."}]}]}],"thread_ts":"1608083366.188400","reply_count":16,"reply_users_count":2,"latest_reply":"1608086414.192500","reply_users":["UGKHXS9J6","UPUBAM63X"],"subscribed":false},{"client_msg_id":"73ebc280-0499-4f66-b779-aa8986aaa2fe","type":"message","text":"You can bound them based on traits. Generic programming in Rust is highly trait-dependent, so if you want to restrict types to a function based on shared behavior, you probably want to create a trait and bound the input type based on that trait","user":"UGKHXS9J6","ts":"1608083516.188500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Livv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can bound them based on traits. Generic programming in Rust is highly trait-dependent, so if you want to restrict types to a function based on shared behavior, you probably want to create a trait and bound the input type based on that trait"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"10be1e7e-24ff-4294-8acb-3e95ec0afc57","type":"message","text":"that's probably what I'm missing, I just don't understand it yet","user":"UPUBAM63X","ts":"1608083590.188700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3n02c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's probably what I'm missing, I just don't understand it yet"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"f131cdd6-5852-4b40-b4f2-39647c068de2","type":"message","text":"is it common for people to make empty traits to encapsulate a single type?","user":"UPUBAM63X","ts":"1608083681.188900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2WS3V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is it common for people to make empty traits to encapsulate a single type?"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"88ab0b50-1542-4e26-83c0-543675eb8b76","type":"message","text":"I see people making empty structs left and right","user":"UPUBAM63X","ts":"1608083710.189100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HW1Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see people making empty structs left and right"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"7b5415ed-7013-409f-a568-1d64f5a26439","type":"message","text":"Empty traits as in a trait with no method? I haven’t seen that tbh","user":"UGKHXS9J6","ts":"1608084053.189300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l9BS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Empty traits as in a trait with no method? I haven’t seen that tbh"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"4e71a73a-88c9-4228-aef8-ae7e1afca497","type":"message","text":"Empty structs are quite common","user":"UGKHXS9J6","ts":"1608084059.189500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lkM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Empty structs are quite common"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"e9b2bcdc-1b16-4cc5-ba81-ee72615252f8","type":"message","text":"Here’s an example of what I was getting at, though I may have misunderstood your initial question: <https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=39d56e10bb5e45141b2225b2659260e9>","user":"UGKHXS9J6","ts":"1608084082.189700","team":"T68168MUP","edited":{"user":"UGKHXS9J6","ts":"1608084132.000000"},"blocks":[{"type":"rich_text","block_id":"K5ec","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here’s an example of what I was getting at, though I may have misunderstood your initial question: "},{"type":"link","url":"https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=39d56e10bb5e45141b2225b2659260e9"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"09a61f1d-efc5-489a-978c-dc01cc54c1e9","type":"message","text":"whoops, my original link had an error, if you already clicked it, try the link now","user":"UGKHXS9J6","ts":"1608084145.190500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i+Mea","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"whoops, my original link had an error, if you already clicked it, try the link now"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"413b5ebc-e525-40af-94b4-7c0cbc4adbc0","type":"message","text":"okay that almost makes sense...","user":"UPUBAM63X","ts":"1608084540.190700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Im6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay that almost makes sense..."}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"b0d3e285-91d1-4063-95e9-994a96ff52d4","type":"message","text":"are traits kind of like header files?","user":"UPUBAM63X","ts":"1608084684.190900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sEe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are traits kind of like header files?"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"a51cada1-2fad-456d-a54c-a5b38ce44ce9","type":"message","text":"I haven’t worked much with languages that use header files, but they might be sort of similar. The way to think about traits in rust I think is that they’re the base primitive for shared behavior","user":"UGKHXS9J6","ts":"1608084801.191100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5qCa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven’t worked much with languages that use header files, but they might be sort of similar. The way to think about traits in rust I think is that they’re the base primitive for shared behavior"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"61cfaba4-d3a4-46f6-af8c-b7a641193cdf","type":"message","text":"you want some behavior that multiple different classes should be able to do? then you want a trait","user":"UGKHXS9J6","ts":"1608084819.191300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EGF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you want some behavior that multiple different classes should be able to do? then you want a trait"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"9744cc88-859f-455a-8cfc-0c943118c23d","type":"message","text":"ohhh kind of like an interface in java","user":"UPUBAM63X","ts":"1608084832.191500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"joGs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ohhh kind of like an interface in java"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"29145332-9cb9-42f4-85bc-ee778f9ed81d","type":"message","text":"ohhhhhhh","user":"UPUBAM63X","ts":"1608084835.191700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S0SM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ohhhhhhh"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"6e89bbfc-2bd5-46ab-9fad-0978c9001c7f","type":"message","text":"yeah, very similar to interfaces! this is a good article that explains the uses of traits: <https://blog.rust-lang.org/2015/05/11/traits.html>","user":"UGKHXS9J6","ts":"1608084916.191900","team":"T68168MUP","attachments":[{"title":"Abstraction without overhead: traits in Rust | Rust Blog","title_link":"https://blog.rust-lang.org/2015/05/11/traits.html","text":"Empowering everyone to build reliable and efficient software.","fallback":"Abstraction without overhead: traits in Rust | Rust Blog","thumb_url":"https://www.rust-lang.org/static/images/rust-social.jpg","from_url":"https://blog.rust-lang.org/2015/05/11/traits.html","thumb_width":1024,"thumb_height":1024,"service_icon":"https://blog.rust-lang.org/images/apple-touch-icon.png","service_name":"blog.rust-lang.org","id":1,"original_url":"https://blog.rust-lang.org/2015/05/11/traits.html"}],"blocks":[{"type":"rich_text","block_id":"5jAKb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, very similar to interfaces! this is a good article that explains the uses of traits: "},{"type":"link","url":"https://blog.rust-lang.org/2015/05/11/traits.html"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"},{"client_msg_id":"66e0f9b4-a35c-4e30-9687-dc69aa505477","type":"message","text":"thank you these links are super helpful I think I get it now - going to sleep on it","user":"UPUBAM63X","ts":"1608086414.192500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GboRk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you these links are super helpful I think I get it now - going to sleep on it"}]}]}],"thread_ts":"1608083366.188400","parent_user_id":"UPUBAM63X"}]