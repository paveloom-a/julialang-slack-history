[{"client_msg_id":"ffcb3623-66c8-40a4-aa38-a33eeed4f9ab","type":"message","text":"<@UDB26738Q> someone inadvertently stole your million dollar idea <https://redd.it/kd6sc1>","user":"U6NFPDBV1","ts":"1608046620.218100","team":"T68168MUP","attachments":[{"service_name":"reddit","title":"My npm package which creates an array indexed by the order of the Star Wars films (3,4,5,0,1,2,6,7,8)","title_link":"https://redd.it/kd6sc1","text":"Posted in r/programminghorror by u/Romejanic • 878 points and 51 comments","fallback":"reddit: My npm package which creates an array indexed by the order of the Star Wars films (3,4,5,0,1,2,6,7,8)","image_url":"https://external-preview.redd.it/WaI7ci8y_BucxfTyRMw9rEGVoXvk-w3erN7z645l-H8.jpg?width=1200&height=628.272251309&auto=webp&crop=1200:628.272251309,smart&s=d181fe9b7d9aba60aca3306b3f2b92cccf3bce67","image_width":478,"image_height":250,"from_url":"https://redd.it/kd6sc1","image_bytes":10569,"service_icon":"http://www.redditstatic.com/desktop2x/img/favicon/apple-icon-57x57.png","id":1,"original_url":"https://redd.it/kd6sc1"}],"blocks":[{"type":"rich_text","block_id":"1Cv","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" someone inadvertently stole your million dollar idea "},{"type":"link","url":"https://redd.it/kd6sc1"}]}]}],"thread_ts":"1608046620.218100","reply_count":46,"reply_users_count":11,"latest_reply":"1608114796.278200","reply_users":["UDB26738Q","UH24GRBLL","U6795JH6H","UC6LC14MA","U01ECBX4MB7","U7HAYKY9X","U93BUBZP0","U73KENNG4","U01CQTKB86N","U8D9768Q6","U7K185TUN"],"subscribed":false,"reactions":[{"name":"white_frowning_face","users":["UDB26738Q","U0179G7FG4F","U7EF5AWHW","U6C5KSWAC","UH1BLK14H"],"count":5},{"name":"joy","users":["U01CQTKB86N"],"count":1}]},{"client_msg_id":"29d167be-cdbc-47b7-9b09-aa4a68e51ced","type":"message","text":"3,4,5,0,1,2,6,7,8 :one-based-indexing:","user":"UDB26738Q","ts":"1608046758.218500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"45i9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"3,4,5,0,1,2,6,7,8 "},{"type":"emoji","name":"one-based-indexing"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"4cfd08e1-344e-469a-b076-eb7682cd3950","type":"message","text":"\"Have you seen the 0th star wars movie?\" just doesn't have the same ring to it","user":"UH24GRBLL","ts":"1608046802.218800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Xq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"Have you seen the 0th star wars movie?\" just doesn't have the same ring to it"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"c7041a6a-d8a4-4c7c-80f1-ca72ea51caa3","type":"message","text":"also, what does it mean to change the order of the indices? how would you know?","user":"U6795JH6H","ts":"1608046988.219200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b28X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, what does it mean to change the order of the indices? how would you know?"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"08f44ecb-361a-434f-89c9-01bbb117214a","type":"message","text":"yes, you can change the order in which things are stored in memory, but that doesn’t affect the abstraction at all","user":"U6795JH6H","ts":"1608047082.219400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rCU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, you can change the order in which things are stored in memory, but that doesn’t affect the abstraction at all"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"69e1358e-95b7-4b49-8424-83d0eba76a2b","type":"message","text":"<https://www.reddit.com/r/programminghorror/comments/kd6sc1/my_npm_package_which_creates_an_array_indexed_by/gfvgr57/>\n\n&gt; I’d rather die than let an array start at 1\nwhy do people take indexing so seriously?","user":"UDB26738Q","ts":"1608048754.223200","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1608048759.000000"},"blocks":[{"type":"rich_text","block_id":"ZL=Pg","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.reddit.com/r/programminghorror/comments/kd6sc1/my_npm_package_which_creates_an_array_indexed_by/gfvgr57/"},{"type":"text","text":"\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"I’d rather die than let an array start at 1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nwhy do people take indexing so seriously?"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"003fc658-8100-4256-814d-deb5337f323b","type":"message","text":"stockholm syndrome: indexing from zero is unintuitive and hard to learn, people have to work hard at it; therefore they become attached to it as a sign of their ability to program","user":"U6795JH6H","ts":"1608049083.223600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JaeF5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"stockholm syndrome: indexing from zero is unintuitive and hard to learn, people have to work hard at it; therefore they become attached to it as a sign of their ability to program"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1","reactions":[{"name":"flag-se","users":["UDB26738Q","U6795JH6H","U6C5KSWAC","UMQME35EV","U73KENNG4","U01CQTKB86N","UJ7DVTVQ8","U01BX0V74Q2","U6QGE7S86","UH8A351DJ","UGU761DU2","UDD5Z7FLZ","U7K185TUN"],"count":13},{"name":"correct_answer","users":["U73KENNG4","U01BX0V74Q2","U6CCK2SCV","U6QGE7S86","UH8A351DJ","UPQP0RWTH"],"count":6}]},{"client_msg_id":"facdeeee-a7c9-4909-bd9c-4d1009d39006","type":"message","text":"it's ducks and hares all over again","user":"UH24GRBLL","ts":"1608049254.223900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I17","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's ducks and hares all over again"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"ac64c3b0-0e50-4bfe-ac94-3b9a8d37bcb7","type":"message","text":"Ergo: Julia is written for people who can't program?","user":"UC6LC14MA","ts":"1608049949.224200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nzU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ergo: Julia is written for people who can't program?"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"d2f224f3-ef1a-4fe7-a4ea-677dcdee5a0f","type":"message","text":"*yet","user":"U01ECBX4MB7","ts":"1608049967.224400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yq+L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"*yet"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"d64d23a2-f4c7-4c6d-bbfe-7f926f7ff19b","type":"message","text":"I'm one of the people who thinks 0-based indexing is superior. There are reasons for and against, but in general:\n• Unsigned integers start at 0, not 1\n• The range `a:b` has `b - a` length in zero-based languages,  `b - a + 1` in Julia\n• Ranges `a:b b:c c:d d:e` ... include all numbers exactly once - only in 0-based languages\n• With 0-based indexing, indexes and offsets are the same.\n• The `i` th element of an array partitioned into chunks of size `N` is part of the `div(i, N)` th chunk, and the `rem(i, N)` member of the chunk, but only in zero-based languages","user":"U7HAYKY9X","ts":"1608053639.224900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wIHk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm one of the people who thinks 0-based indexing is superior. There are reasons for and against, but in general:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Unsigned integers start at 0, not 1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The range "},{"type":"text","text":"a:b","style":{"code":true}},{"type":"text","text":" has "},{"type":"text","text":"b - a","style":{"code":true}},{"type":"text","text":" length in zero-based languages, "},{"type":"text","text":" b - a + 1","style":{"code":true}},{"type":"text","text":" in Julia"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Ranges "},{"type":"text","text":"a:b b:c c:d d:e","style":{"code":true}},{"type":"text","text":" ... include all numbers exactly once - only in 0-based languages"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"With 0-based indexing, indexes and offsets are the same."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":"i","style":{"code":true}},{"type":"text","text":" th element of an array partitioned into chunks of size "},{"type":"text","text":"N","style":{"code":true}},{"type":"text","text":" is part of the "},{"type":"text","text":"div(i, N)","style":{"code":true}},{"type":"text","text":" th chunk, and the "},{"type":"text","text":"rem(i, N)","style":{"code":true}},{"type":"text","text":" member of the chunk, but only in zero-based languages"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"41590bd5-744f-4444-85f2-3295e46d7bcb","type":"message","text":"After having written Julia for a few years, I do definitely notice the pattern of having to add `+ 1` or `- 1` more often than in 0-based languages.\nThat said, the importance is certainly overrated","user":"U7HAYKY9X","ts":"1608053688.225100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OAxyu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"After having written Julia for a few years, I do definitely notice the pattern of having to add "},{"type":"text","text":"+ 1","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"- 1","style":{"code":true}},{"type":"text","text":" more often than in 0-based languages.\nThat said, the importance is certainly overrated"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"ab4d92ac-590a-45a5-8c8f-12458a5d0373","type":"message","text":"Like, here is a section of my Julia solution to today's AoC challenge:\n```    for turn in T(length(input) + 1) : typemax(T)\n        (turn_m2, turn_m1) = turns_of[number + 1]\n        number = ifelse(iszero(turn_m2), zero(T), turn_m1 - turn_m2)\n        if length(turns_of) &lt; number + 1\n            resize_with!(turns_of, number + 1, (zero(T), zero(T)))\n        end\n        turn_m1 = last(turns_of[number + 1])```\nLook at all those `+ 1` 's...","user":"U7HAYKY9X","ts":"1608053808.225300","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1608053821.000000"},"blocks":[{"type":"rich_text","block_id":"RhQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like, here is a section of my Julia solution to today's AoC challenge:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    for turn in T(length(input) + 1) : typemax(T)\n        (turn_m2, turn_m1) = turns_of[number + 1]\n        number = ifelse(iszero(turn_m2), zero(T), turn_m1 - turn_m2)\n        if length(turns_of) < number + 1\n            resize_with!(turns_of, number + 1, (zero(T), zero(T)))\n        end\n        turn_m1 = last(turns_of[number + 1])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Look at all those "},{"type":"text","text":"+ 1","style":{"code":true}},{"type":"text","text":" 's..."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"e99c3b29-cef6-4db3-a575-a31e70dc488b","type":"message","text":"the range `a:b` only has length `b - a` if the second end-point is excluded, which is _incredibly_ confusing and beginner-unfriendly; moreover, it has nothing to do with where you start indexing — we could just as well say that `a:b` means `a, a+1, ..., b-1` and have the same property","user":"U6795JH6H","ts":"1608053840.225600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zz4E5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the range "},{"type":"text","text":"a:b","style":{"code":true}},{"type":"text","text":" only has length "},{"type":"text","text":"b - a","style":{"code":true}},{"type":"text","text":" if the second end-point is excluded, which is "},{"type":"text","text":"incredibly","style":{"italic":true}},{"type":"text","text":" confusing and beginner-unfriendly; moreover, it has nothing to do with where you start indexing — we could just as well say that "},{"type":"text","text":"a:b","style":{"code":true}},{"type":"text","text":" means "},{"type":"text","text":"a, a+1, ..., b-1","style":{"code":true}},{"type":"text","text":" and have the same property"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1","reactions":[{"name":"point_up","users":["U6CCK2SCV","U8D9768Q6","UH8A351DJ","U7K185TUN"],"count":4},{"name":"+1","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"e3e3c131-1e63-4614-ac9d-3019e7112c00","type":"message","text":"the second point is also actually a point about ranges being open/closed and has nothing to do with where you start indexing","user":"U6795JH6H","ts":"1608053877.225800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t32aC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the second point is also actually a point about ranges being open/closed and has nothing to do with where you start indexing"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"e162d493-fa42-4d5f-86e8-e1fcc8ca0105","type":"message","text":"You're right, point 2 and 3 is not 1-based indexing, that's the semi-open range that does that.","user":"U7HAYKY9X","ts":"1608053897.226000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gvh8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You're right, point 2 and 3 is not 1-based indexing, that's the semi-open range that does that."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"464a76ca-b6bd-483c-ad36-4571d8061308","type":"message","text":"the third point is true, of course, but there’s a counterargument to be made: indices should intuitively start at one while offsets should start at zero","user":"U6795JH6H","ts":"1608053918.226200","team":"T68168MUP","edited":{"user":"U6795JH6H","ts":"1608057389.000000"},"blocks":[{"type":"rich_text","block_id":"GCjQt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the third point is true, of course, but there’s a counterargument to be made: indices should intuitively start at one while offsets should start at zero"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"f92216ff-0778-48a0-81cb-45f51fb7a01b","type":"message","text":"modular array arithmetic is indeed awkward if you’re doing it starting at 1","user":"U6795JH6H","ts":"1608053950.226400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=cDjl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"modular array arithmetic is indeed awkward if you’re doing it starting at 1"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"4ce9604a-545b-422c-af7b-d04b29ae201a","type":"message","text":"Yeah, you can use this for ranges, if you prefer `∨(a, b) = a:(b-1)`","user":"U93BUBZP0","ts":"1608054260.226700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k+O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, you can use this for ranges, if you prefer "},{"type":"text","text":"∨(a, b) = a:(b-1)","style":{"code":true}}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"9f6e3ad2-b299-4256-aa3e-41aa32e0c292","type":"message","text":"Thats `\\vee [TAB]`","user":"U93BUBZP0","ts":"1608054282.226900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nchc1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thats "},{"type":"text","text":"\\vee [TAB]","style":{"code":true}}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"014a2b0d-010b-45c1-9c40-73990c4a30e1","type":"message","text":"... ok, I see you already noted it above","user":"U93BUBZP0","ts":"1608054384.227100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=L3TS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"... ok, I see you already noted it above"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"type":"message","text":"","files":[{"id":"F01HNTN91UG","created":1608055547,"timestamp":1608055547,"name":"Skærmbillede 2020-12-14 kl. 17.05.08.png","title":"Skærmbillede 2020-12-14 kl. 17.05.08.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U73KENNG4","editable":false,"size":139379,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01HNTN91UG/sk__rmbillede_2020-12-14_kl._17.05.08.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01HNTN91UG/download/sk__rmbillede_2020-12-14_kl._17.05.08.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01HNTN91UG-ed10d70eb9/sk__rmbillede_2020-12-14_kl._17.05.08_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01HNTN91UG-ed10d70eb9/sk__rmbillede_2020-12-14_kl._17.05.08_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01HNTN91UG-ed10d70eb9/sk__rmbillede_2020-12-14_kl._17.05.08_360.png","thumb_360_w":360,"thumb_360_h":304,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01HNTN91UG-ed10d70eb9/sk__rmbillede_2020-12-14_kl._17.05.08_480.png","thumb_480_w":480,"thumb_480_h":405,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01HNTN91UG-ed10d70eb9/sk__rmbillede_2020-12-14_kl._17.05.08_160.png","original_w":504,"original_h":425,"thumb_tiny":"AwAoADC/I6FGHmKCRjrWd9ifA/fxfmale1uGJ5jIzxnrQbWcgAGM4ABz60AQ/ZSOTcQ492NILbj/AI+YeP8AaNSvZTMoH7vOc9famDT5trD93yMdfegBq2ucAXMJP+8avWzxxwpGZo2Yeje9VItPmSRWJTA9DSR6fMsitmPAIPBoA1GYKpY9BUPmk9CBz0xT5gxjIXqarxjfOQAQvU/0oAtAnP4Up6ikAw3XtS96AA9DQBgmg9KUUAI3Q4qOJdpX5T0x9KlooAT+L8KO/wCNLRQAHpRRRQB//9k=","permalink":"https://julialang.slack.com/files/U73KENNG4/F01HNTN91UG/sk__rmbillede_2020-12-14_kl._17.05.08.png","permalink_public":"https://slack-files.com/T68168MUP-F01HNTN91UG-6c11c716b3","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"U73KENNG4","display_as_bot":false,"ts":"1608055550.227800","thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"328b4a34-e8b3-4e90-bfb7-236a9665935a","type":"message","text":":see_no_evil:","user":"U01CQTKB86N","ts":"1608055665.228300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nt7g","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"see_no_evil"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"38413705-C5C5-46E3-9856-1CFB0CA2DF90","type":"message","text":"For me, I think the question “what’s the 5th element of `v`?” Makes it an open and shut question. I can respect why some people are fine with 0 based indexing for some circumstances, but to me, if the 5th element of an array isn’t `v[5]`, you better have a damned good reason, and I don’t think any of the above reasons are satisfactory. ","user":"U8D9768Q6","ts":"1608066612.236900","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1608066636.000000"},"blocks":[{"type":"rich_text","block_id":"2aD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For me, I think the question “what’s the 5th element of "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":"?” Makes it an open and shut question. I can respect why some people are fine with 0 based indexing for some circumstances, but to me, if the 5th element of an array isn’t "},{"type":"text","text":"v[5]","style":{"code":true}},{"type":"text","text":", you better have a damned good reason, and I don’t think any of the above reasons are satisfactory. "}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"3C6DEEC7-5DB8-463F-A7E1-85058E04426D","type":"message","text":"Also for ranges, “what are the third through eighth elements of `v` ?” Similarly leads me to closed ranges. Anything other than `v[3:8]` just feels unnecessarily convoluted and silly. ","user":"U8D9768Q6","ts":"1608066727.239300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sZQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also for ranges, “what are the third through eighth elements of "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":" ?” Similarly leads me to closed ranges. Anything other than "},{"type":"text","text":"v[3:8]","style":{"code":true}},{"type":"text","text":" just feels unnecessarily convoluted and silly. "}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"3228647c-33b6-49d4-b5ad-1bec7fe90b04","type":"message","text":"I can see the other side, but I generally agree. Which of these potential confusions is more important:\n- whether `a:b` includes `b` or not?\n- whether the length of `a:b` is `b-a` or `b-a+1`?","user":"U6795JH6H","ts":"1608068023.240200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Is4j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can see the other side, but I generally agree. Which of these potential confusions is more important:\n- whether "},{"type":"text","text":"a:b","style":{"code":true}},{"type":"text","text":" includes "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" or not?\n- whether the length of "},{"type":"text","text":"a:b","style":{"code":true}},{"type":"text","text":" is "},{"type":"text","text":"b-a","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"b-a+1","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"c5d9e311-2eb8-4ed8-9cbf-c126427ec915","type":"message","text":"to me the former is a relevant question and potential source of confusion with closed-open ranges literally every single time I use a range","user":"U6795JH6H","ts":"1608068057.240400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zJyx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to me the former is a relevant question and potential source of confusion with closed-open ranges literally every single time I use a range"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"7dd1cea7-7b47-4c3d-a23c-22e71bea6cea","type":"message","text":"the latter question is occasionally a thing I care about and, if for some reason I cannot just do `length(a:b)` to make it crystal clear, then I just have to remember to add one","user":"U6795JH6H","ts":"1608068095.240600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zpPp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the latter question is occasionally a thing I care about and, if for some reason I cannot just do "},{"type":"text","text":"length(a:b)","style":{"code":true}},{"type":"text","text":" to make it crystal clear, then I just have to remember to add one"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"0afe93c6-b08a-446e-ab7f-c941665dfc8c","type":"message","text":"I would agree with closed vs open ranges, actually. But not one-based indexing. Of course 0-based inclusive ranges that would mean that `lastindex(x) != length(x)` , and `length(a:b) == b - a + 1` .","user":"U7HAYKY9X","ts":"1608068317.241000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"poY3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would agree with closed vs open ranges, actually. But not one-based indexing. Of course 0-based inclusive ranges that would mean that "},{"type":"text","text":"lastindex(x) != length(x)","style":{"code":true}},{"type":"text","text":" , and "},{"type":"text","text":"length(a:b) == b - a + 1","style":{"code":true}},{"type":"text","text":" ."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"b98cca43-07f5-49d0-bf7f-1b409f6e5452","type":"message","text":"I think part of my point that I didn't articular well though, is that when people phrase these arguments using variables `a` and `b` meant to represent indices, it glosses over the most important and fundamental part of this.\n\nBy framing the conversation in terms of index `a`, the audience is distracted from the fact that someone incredibly counter-intuititive is being asked for. I think it's really important to put a literal number in there to make it clear that when people ask for `0` based indexing, `v[5]` is the *~fourth~ sixth* element of `v`, which is frankly whack.","user":"U8D9768Q6","ts":"1608068354.241200","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1608068451.000000"},"blocks":[{"type":"rich_text","block_id":"sQklt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think part of my point that I didn't articular well though, is that when people phrase these arguments using variables "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" meant to represent indices, it glosses over the most important and fundamental part of this.\n\nBy framing the conversation in terms of index "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":", the audience is distracted from the fact that someone incredibly counter-intuititive is being asked for. I think it's really important to put a literal number in there to make it clear that when people ask for "},{"type":"text","text":"0","style":{"code":true}},{"type":"text","text":" based indexing, "},{"type":"text","text":"v[5]","style":{"code":true}},{"type":"text","text":" is the "},{"type":"text","text":"fourth","style":{"bold":true,"strike":true}},{"type":"text","text":" sixth","style":{"bold":true}},{"type":"text","text":" element of "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":", which is frankly whack."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"e3c42e18-5cd4-49ba-981c-7edc2561339f","type":"message","text":"shouldn't it be the sixth element in 0 based indexing?","user":"UH24GRBLL","ts":"1608068420.241400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y7nR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"shouldn't it be the sixth element in 0 based indexing?"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1","reactions":[{"name":"heavy_check_mark","users":["U8D9768Q6"],"count":1},{"name":"sweat_smile","users":["U8D9768Q6"],"count":1}]},{"client_msg_id":"be029583-5357-4dad-8a37-ddb8b2ca33f0","type":"message","text":"To me, the whole 0 vs 1 debate mostly tells me that whoever is writing that code is probably spending too much time/code on calculating indices in the first place","user":"UH24GRBLL","ts":"1608068516.242000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mZHgI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To me, the whole 0 vs 1 debate mostly tells me that whoever is writing that code is probably spending too much time/code on calculating indices in the first place"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"da868cba-60ec-4227-9463-c2ca59bc8eb6","type":"message","text":"<@U8D9768Q6> I don't agree. What you're saying is that our language is 1-indexed, which is not the same as saying reality is 1-indexed.","user":"U7HAYKY9X","ts":"1608068544.242200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4iH+O","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8D9768Q6"},{"type":"text","text":" I don't agree. What you're saying is that our language is 1-indexed, which is not the same as saying reality is 1-indexed."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"35981561-84ba-4d40-b521-603177ea7d88","type":"message","text":"Someone brought up Advent Of Code, and I've noticed that I am far more consistent with quality and speed when writing code where I only care about the indices in one place, instead of all over the code base. If you frame your problem in such a way that you can do that calculation only once, almost all +1/-1 just disappear.","user":"UH24GRBLL","ts":"1608068609.242400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4pU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Someone brought up Advent Of Code, and I've noticed that I am far more consistent with quality and speed when writing code where I only care about the indices in one place, instead of all over the code base. If you frame your problem in such a way that you can do that calculation only once, almost all +1/-1 just disappear."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"5a25a979-f5c8-4c37-bd84-b394bd6ef44f","type":"message","text":"Given that the natural language developers are assumed to be using when they write julia is 1 based, I think that's incredibly important!","user":"U8D9768Q6","ts":"1608068618.242600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Mrn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Given that the natural language developers are assumed to be using when they write julia is 1 based, I think that's incredibly important!"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"97bae03d-909a-45cb-934d-956cd38365e1","type":"message","text":"This is not unique to 1 based or 0 based indexing of course","user":"UH24GRBLL","ts":"1608068622.242800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VO06t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is not unique to 1 based or 0 based indexing of course"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"31e86a29-2742-45d0-9333-be772582c8ac","type":"message","text":"But which language? In the language of computers, 0 indexing is the convention. So if it's just a matter of \"let's not shake the boat and violate conventions\", surely 0-based indexing must be the way to go?","user":"U7HAYKY9X","ts":"1608068704.243000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JcNfU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But which language? In the language of computers, 0 indexing is the convention. So if it's just a matter of \"let's not shake the boat and violate conventions\", surely 0-based indexing must be the way to go?"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"603ab00a-e36f-4a26-85c1-0367e6636b0b","type":"message","text":"Though, I'll acknowledge that perhaps it's more important to me than to others as I mostly think by talking to myself in english.","user":"U8D9768Q6","ts":"1608068706.243200","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1608068794.000000"},"blocks":[{"type":"rich_text","block_id":"1zYN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Though, I'll acknowledge that perhaps it's more important to me than to others as I mostly think by talking to myself in english."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"75cfc36b-8287-45aa-a050-15e7837e2369","type":"message","text":"I said natural language","user":"U8D9768Q6","ts":"1608068721.243400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7URm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I said natural language"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"63b7bbd9-dccc-457a-bc28-bdda02b33517","type":"message","text":"I frankly don't think we should care how computers represent these things when designing APIs unless it's relevant for performance.","user":"U8D9768Q6","ts":"1608068768.243600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HzFxf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I frankly don't think we should care how computers represent these things when designing APIs unless it's relevant for performance."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"0bf43875-5f49-4cdb-9bd9-99fbd84cb959","type":"message","text":"Perhaps in a future where the compilers are so good that we don't have to think in terms of offsets and memory locations and such, I would agree. But that has not been my experience writing code.","user":"U7HAYKY9X","ts":"1608068848.243900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WR24i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps in a future where the compilers are so good that we don't have to think in terms of offsets and memory locations and such, I would agree. But that has not been my experience writing code."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"8225c06f-343a-43eb-a802-92cd38ac2068","type":"message","text":"We write code in programming languages because it's a level of abstraction that is friendly for humans, not because it's friendly for computers. Ideally, we can make both happy and I think julia does a fantastic job of doing so.","user":"U8D9768Q6","ts":"1608068966.244600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RBQI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We write code in programming languages because it's a level of abstraction that is friendly for humans, not because it's friendly for computers. Ideally, we can make both happy and I think julia does a fantastic job of doing so."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"a094e0c1-d328-4994-8187-170df5368c98","type":"message","text":"I really believe encountering a bunch of +1/-1 everywhere throughout ones code is mostly indicative of programming style, not whether it's better or worse.","user":"UH24GRBLL","ts":"1608069077.246800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m+ZF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I really believe encountering a bunch of +1/-1 everywhere throughout ones code is mostly indicative of programming style, not whether it's better or worse."}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1","reactions":[{"name":"100","users":["U6795JH6H","U8D9768Q6"],"count":2}]},{"client_msg_id":"063793c0-a044-4855-99f3-d417d9110e83","type":"message","text":"I'm certainly no stranger to optimizing for performance, but I barely encounter +1/-1 issues :man-shrugging:","user":"UH24GRBLL","ts":"1608069104.247000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Csq1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm certainly no stranger to optimizing for performance, but I barely encounter +1/-1 issues "},{"type":"emoji","name":"man-shrugging"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"f801663d-c46d-4dfb-a7ec-938f1caba2db","type":"message","text":"and when I do, I make sure to confine them to one singular place and just carry on with my regular style of relying on the indices I calculated earlier","user":"UH24GRBLL","ts":"1608069145.247400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aD2y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and when I do, I make sure to confine them to one singular place and just carry on with my regular style of relying on the indices I calculated earlier"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1","reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"7b7cd55e-aa38-42a1-b7e2-100f632c47aa","type":"message","text":"just makes it easier for me to reason about any piece of code, but maybe that's just me","user":"UH24GRBLL","ts":"1608069229.247600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eAQd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just makes it easier for me to reason about any piece of code, but maybe that's just me"}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1"},{"client_msg_id":"5b69eb2b-9ffe-44c3-aef2-ffe929907fd8","type":"message","text":"About modular arithmetic as mentioned by <@U6795JH6H> I'm a huge fan of `mod1`","user":"U7K185TUN","ts":"1608114796.278200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PGbco","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"About modular arithmetic as mentioned by "},{"type":"user","user_id":"U6795JH6H"},{"type":"text","text":" I'm a huge fan of "},{"type":"text","text":"mod1","style":{"code":true}}]}]}],"thread_ts":"1608046620.218100","parent_user_id":"U6NFPDBV1","reactions":[{"name":"100","users":["UH24GRBLL","U73KENNG4","U6795JH6H","UQG7Y0XCP","U6CCK2SCV"],"count":5}]}]