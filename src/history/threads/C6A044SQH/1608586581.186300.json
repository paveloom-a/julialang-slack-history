[{"client_msg_id":"e48f333f-25e6-4c55-add8-bffad7da32d0","type":"message","text":"With optimal tuning, many numerical operation in Julia can be speed up roughly 100 - 1000 times the speed of regular python.\nDoes anyone have a benchmark for string operations/manipulations (split, contains, replace, NLTK.funcs, etc...) comparing Julia vs python? Was wondering which language I should chose for a big data NLP project at work.","user":"U01FAHWCMFF","ts":"1608586581.186300","team":"T68168MUP","edited":{"user":"U01FAHWCMFF","ts":"1608586742.000000"},"blocks":[{"type":"rich_text","block_id":"7WCVr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With optimal tuning, many numerical operation in Julia can be speed up roughly 100 - 1000 times the speed of regular python.\nDoes anyone have a benchmark for string operations/manipulations (split, contains, replace, NLTK.funcs, etc...) comparing Julia vs python? Was wondering which language I should chose for a big data NLP project at work."}]}]}],"thread_ts":"1608586581.186300","reply_count":15,"reply_users_count":5,"latest_reply":"1608597171.193200","reply_users":["U0179G7FG4F","UH24GRBLL","UGU761DU2","U6795JH6H","U01FAHWCMFF"],"subscribed":false},{"client_msg_id":"d8c127c3-558f-4c0e-b2e6-d45a07fcfbe7","type":"message","text":"I'd expect Julia to be more in the 1-100x faster for this type of workload. The basic reason is that Python's string operations are mostly written in C, so if you are doing expensive string operations, there will be less room for Julia to shine (similar to how Julia isn't faster in Matrix Multiply, everyone just uses BLAS). That said, there are still plenty of string operations that are cheap, and for these, Julia might be noticeably faster. One other consideration is that Julia doesn't have nearly as well developed libraries for every String algorithm possible.","user":"U0179G7FG4F","ts":"1608587135.186500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GceA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd expect Julia to be more in the 1-100x faster for this type of workload. The basic reason is that Python's string operations are mostly written in C, so if you are doing expensive string operations, there will be less room for Julia to shine (similar to how Julia isn't faster in Matrix Multiply, everyone just uses BLAS). That said, there are still plenty of string operations that are cheap, and for these, Julia might be noticeably faster. One other consideration is that Julia doesn't have nearly as well developed libraries for every String algorithm possible."}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"white_check_mark","users":["U01FAHWCMFF"],"count":1}]},{"client_msg_id":"61b95ddf-7d3a-4c0e-902f-e2a8192e6c41","type":"message","text":"There was a good post somewhere about why python string performance has a certain upper bound, had to do with the guarantees on indexing they had","user":"UH24GRBLL","ts":"1608589549.186700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fa6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There was a good post somewhere about why python string performance has a certain upper bound, had to do with the guarantees on indexing they had"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"bf8bc1d7-c3b6-4e6c-92ad-946e9f53df7d","type":"message","text":"IIRC <@U6795JH6H> was the author/knowledgable person in regards to the decision on julia strings?","user":"UH24GRBLL","ts":"1608589577.186900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mzlh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IIRC "},{"type":"user","user_id":"U6795JH6H"},{"type":"text","text":" was the author/knowledgable person in regards to the decision on julia strings?"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"8affbdd1-ed2c-4f94-b244-26cea7967ef7","type":"message","text":"Not sure if it’s what you’re thinking of, but this comment by Stefan is a pretty nice overview: <https://github.com/google-research/dex-lang/issues/302#issuecomment-740073904>","user":"UGU761DU2","ts":"1608589959.187100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CR/sX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure if it’s what you’re thinking of, but this comment by Stefan is a pretty nice overview: "},{"type":"link","url":"https://github.com/google-research/dex-lang/issues/302#issuecomment-740073904"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"b15d14db-6351-4755-8d85-a15d0a20ac36","type":"message","text":"yes, that was part of it, thank you","user":"UH24GRBLL","ts":"1608590006.187300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"igJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, that was part of it, thank you"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"da3452b3-f8e2-41f9-a874-39bc6096aa8b","type":"message","text":"Julia’s string stuff isn’t nearly as well optimized as numerical stuff. it should be pretty good, but it will be much less of a blow out compared with Python which has been pretty well optimized for string operations","user":"U6795JH6H","ts":"1608590387.187500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I=Z=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia’s string stuff isn’t nearly as well optimized as numerical stuff. it should be pretty good, but it will be much less of a blow out compared with Python which has been pretty well optimized for string operations"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"white_check_mark","users":["U01FAHWCMFF","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"501b4cf5-021a-4278-9334-5cb2a38d0076","type":"message","text":"Thats the answer I was looking for, thanks everyone.","user":"U01FAHWCMFF","ts":"1608590503.187700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kNM7P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thats the answer I was looking for, thanks everyone."}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"23f47e3c-849f-44c2-83a8-8ce0432639cf","type":"message","text":"I would love to revisit it some time in the future — it should be possible with some work to make Julia’s I/O and string operations blazingly fast as well","user":"U6795JH6H","ts":"1608592421.188100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"92V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would love to revisit it some time in the future — it should be possible with some work to make Julia’s I/O and string operations blazingly fast as well"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"1b90f4fb-b3f5-4c3f-bc0c-9e76ee71902e","type":"message","text":"Honestly if you and your team can manage to do that it might just get me and a whole bunch of my colleagues to consider using Julia in production :slightly_smiling_face: . Thanks","user":"U01FAHWCMFF","ts":"1608595874.191500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bbyk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Honestly if you and your team can manage to do that it might just get me and a whole bunch of my colleagues to consider using Julia in production "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" . Thanks"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"9599e85a-70bb-495a-bba2-cc06a2dd9163","type":"message","text":"One of the biggest things you can do to help is write the code now and complain to us about the slow parts","user":"U0179G7FG4F","ts":"1608595928.191700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qf3Ih","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One of the biggest things you can do to help is write the code now and complain to us about the slow parts"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"bf29d9f3-264e-4af6-a834-f2be36b96cb3","type":"message","text":"It's much easier to fix performance when we know what is slowing down real world code.","user":"U0179G7FG4F","ts":"1608595981.191900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vQS8J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's much easier to fix performance when we know what is slowing down real world code."}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"0ae7eeec-89b7-4cde-8bd9-80ff37e6baf3","type":"message","text":"Well in bioinformatics we tend to deal with large string files. Often the “split” command is one of the biggest bottlenecks in our File Parsers and preprocessing steps.\n\nHere is a small benchmark I did.\nOn a 100mb txt file filled with random sentences. Applied split(” “)\nJulia: 1.29 seconds\nPython 0.86 seconds\n\nWe tend to work with 30GB+ files and right now all our preprocessing code is written in python.","user":"U01FAHWCMFF","ts":"1608596403.192100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vGsf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well in bioinformatics we tend to deal with large string files. Often the “split” command is one of the biggest bottlenecks in our File Parsers and preprocessing steps.\n\nHere is a small benchmark I did.\nOn a 100mb txt file filled with random sentences. Applied split(” “)\nJulia: 1.29 seconds\nPython 0.86 seconds\n\nWe tend to work with 30GB+ files and right now all our preprocessing code is written in python."}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"+1","users":["U0179G7FG4F"],"count":1}]},{"client_msg_id":"6f05653c-1ae8-4a79-8463-39f28ed0b11a","type":"message","text":"Not a bad time on Julia but hopefully we can except it to catch up with python in the future as more updates keep coming in","user":"U01FAHWCMFF","ts":"1608596478.192300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tPv1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not a bad time on Julia but hopefully we can except it to catch up with python in the future as more updates keep coming in"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"cd805679-8e70-4084-a95f-23ad5f8cae57","type":"message","text":"interestingly, that seems to be <https://github.com/JuliaLang/julia/issues/16944>. I'm re-opening","user":"U0179G7FG4F","ts":"1608596869.192600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nPwn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interestingly, that seems to be "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/16944"},{"type":"text","text":". I'm re-opening"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"48f26a30-f83f-4ec7-8072-35dad79be656","type":"message","text":"Thanks Oscar :slightly_smiling_face:","user":"U01FAHWCMFF","ts":"1608597171.193200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"33L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks Oscar "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1608586581.186300","parent_user_id":"U01FAHWCMFF"}]