[{"client_msg_id":"5621ba37-3617-4d65-8ee7-0814152adb95","type":"message","text":"The declaration of `AbstractArray` is a docstring followed by word \"AbstractArray.\" I understand that `AbstractArray` is defined in C, but I am not familiar with this syntax. Is this a redeclaration? How come it is able to add a docstring but when I use the exact syntax I could not change the docstring?","user":"UMS8C22UA","ts":"1608582660.175100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nDI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The declaration of "},{"type":"text","text":"AbstractArray","style":{"code":true}},{"type":"text","text":" is a docstring followed by word \"AbstractArray.\" I understand that "},{"type":"text","text":"AbstractArray","style":{"code":true}},{"type":"text","text":" is defined in C, but I am not familiar with this syntax. Is this a redeclaration? How come it is able to add a docstring but when I use the exact syntax I could not change the docstring?"}]}]}],"thread_ts":"1608582660.175100","reply_count":12,"reply_users_count":3,"latest_reply":"1608584160.179700","reply_users":["U7HAYKY9X","UMS8C22UA","U6740K1SP"],"subscribed":false},{"client_msg_id":"16a9fc0f-7c86-41c6-993e-19586228d2a1","type":"message","text":"Where do you see that? AFAIK, there is no Julia implementation of AbstractArray :thinking_face:","user":"U7HAYKY9X","ts":"1608582913.175200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xYy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Where do you see that? AFAIK, there is no Julia implementation of AbstractArray "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"67061c37-4ba9-42c7-a7f0-379059f9e075","type":"message","text":"In \"AbstractArray.jl\" of Julia Git repository. The file is under base directory.","user":"UMS8C22UA","ts":"1608583074.176900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q1/l2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In \"AbstractArray.jl\" of Julia Git repository. The file is under base directory."}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"e7170078-29be-47de-89b5-2df68fb09625","type":"message","text":"The file is \"abstractarray.jl\"","user":"UMS8C22UA","ts":"1608583095.177100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9mp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The file is \"abstractarray.jl\""}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"e84ea905-3821-41e5-a758-544da5a266ab","type":"message","text":"Ah, at the top? It just adds a docstring. You can also add a docstring to it. Try making a new Julia file with\n```\"foo\"\nAbstractArray```\nand include it. Then look at the docstring of AbstractArray","user":"U7HAYKY9X","ts":"1608583241.177300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"liY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, at the top? It just adds a docstring. You can also add a docstring to it. Try making a new Julia file with\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\"foo\"\nAbstractArray"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and include it. Then look at the docstring of AbstractArray"}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"30acaa8e-8c2a-4043-8024-e810b18ad4d6","type":"message","text":"You can also add a docstring to a function by doing:\n```\"my docstring\"\nfunction foo end```\nThat is sometimes useful, e.g. when defining a bunch of methods in a loop. Then you can add the docstring like that once and then add the methods in a loop","user":"U7HAYKY9X","ts":"1608583311.177500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lf3z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can also add a docstring to a function by doing:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\"my docstring\"\nfunction foo end"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"That is sometimes useful, e.g. when defining a bunch of methods in a loop. Then you can add the docstring like that once and then add the methods in a loop"}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"6dd61570-a220-4ab8-9057-43f8967ca457","type":"message","text":"OK, but `AbstractArray` is a generic type, so why is the full syntax of generic types not used? I am looking for syntactic rule that permit this use of identifier. Like why not\n```\"docstring...\"\nstruct AbstractArray{T,N} end```","user":"UMS8C22UA","ts":"1608583674.178500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q4E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, but "},{"type":"text","text":"AbstractArray","style":{"code":true}},{"type":"text","text":" is a generic type, so why is the full syntax of generic types not used? I am looking for syntactic rule that permit this use of identifier. Like why not\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\"docstring...\"\nstruct AbstractArray{T,N} end"}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"f8cf240f-d875-47c3-a849-851497804bf9","type":"message","text":"That would re-define the struct. You can also just add a docstring to a function like:\n```\"my docstring\"\nfoo```\n, if oyu have already defined foo","user":"U7HAYKY9X","ts":"1608583744.178700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dBqa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That would re-define the struct. You can also just add a docstring to a function like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\"my docstring\"\nfoo"}]},{"type":"rich_text_section","elements":[{"type":"text","text":", if oyu have already defined foo"}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"f2b9f947-44cd-4a4e-af61-fdca5117eeb1","type":"message","text":"So the rule is just: Add a string before any object, and you add a docstring to it.","user":"U7HAYKY9X","ts":"1608583807.178900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6kC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the rule is just: Add a string before any object, and you add a docstring to it."}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"b4f3bcc4-6fb1-44a2-b1c0-2449da4aa42e","type":"message","text":"Oh, that makes sense. Is this a doc feature?","user":"UMS8C22UA","ts":"1608583828.179100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VfW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, that makes sense. Is this a doc feature?"}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"3c6c3b54-2ede-45e8-ac61-cc94c499e31f","type":"message","text":"Yeah","user":"U7HAYKY9X","ts":"1608583834.179300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dKAVW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah"}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"05bb2a96-f305-4e41-ad39-0ce04250f291","type":"message","text":"I will need to read the doc chapter of the manual. Thanks a lot!:+1:","user":"UMS8C22UA","ts":"1608583875.179500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/jej","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I will need to read the doc chapter of the manual. Thanks a lot!"},{"type":"emoji","name":"+1"}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA"},{"client_msg_id":"2624313b-53ef-4945-934a-02a360814e09","type":"message","text":"When you do this yourself you add a docstring to it:\n\n```julia&gt; \"# Bonus docstring\"\n       AbstractArray\nCore.AbstractArray\n\nhelp?&gt; AbstractArray\nsearch: AbstractArray AbstractMatrix AbstractChar AbstractRange AbstractChannel AbstractFloat\n\n  AbstractArray{T,N}\n\n  Supertype for N-dimensional arrays (or array-like types) with elements of type T. Array and\n  other types are subtypes of this. See the manual section on the AbstractArray interface.\n\n  ────────────────────────────────────────────────────────────────────────────────────────────\n\n  Bonus docstring\n  ≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡```","user":"U6740K1SP","ts":"1608584160.179700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eur","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When you do this yourself you add a docstring to it:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> \"# Bonus docstring\"\n       AbstractArray\nCore.AbstractArray\n\nhelp?> AbstractArray\nsearch: AbstractArray AbstractMatrix AbstractChar AbstractRange AbstractChannel AbstractFloat\n\n  AbstractArray{T,N}\n\n  Supertype for N-dimensional arrays (or array-like types) with elements of type T. Array and\n  other types are subtypes of this. See the manual section on the AbstractArray interface.\n\n  ────────────────────────────────────────────────────────────────────────────────────────────\n\n  Bonus docstring\n  ≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡"}]}]}],"thread_ts":"1608582660.175100","parent_user_id":"UMS8C22UA","reactions":[{"name":"grinning","users":["UMS8C22UA"],"count":1}]}]