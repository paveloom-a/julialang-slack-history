[{"client_msg_id":"08e907ce-c54a-42b1-986d-45a0181e761c","type":"message","text":"I want to define a function that has two arguments, and Array and a variable name.  I think that one way to do this is the following :`F(c::Aray, method::Sting)` and that makes sense to me.  The problem is that I want the output of this to be an array that depends on `method`.  From what I know about other languages, I could use an if statement or cases, but I wonder if `dispact` is appropriate here.  If yes could someone point me to an example that might do something similar?","user":"U01FBLBCP7S","ts":"1608231480.379100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wl6YQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I want to define a function that has two arguments, and Array and a variable name.  I think that one way to do this is the following :"},{"type":"text","text":"F(c::Aray, method::Sting)","style":{"code":true}},{"type":"text","text":" and that makes sense to me.  The problem is that I want the output of this to be an array that depends on "},{"type":"text","text":"method","style":{"code":true}},{"type":"text","text":".  From what I know about other languages, I could use an if statement or cases, but I wonder if "},{"type":"text","text":"dispact","style":{"code":true}},{"type":"text","text":" is appropriate here.  If yes could someone point me to an example that might do something similar?"}]}]}],"thread_ts":"1608231480.379100","reply_count":8,"reply_users_count":2,"latest_reply":"1608232405.382300","reply_users":["U6740K1SP","U01FBLBCP7S"],"subscribed":false},{"client_msg_id":"4767b13c-2713-4ac9-90b0-571333a83628","type":"message","text":"No, I really wouldn’t dispatch on strings or even symbols. It is possible, but I wouldn’t recommend it.","user":"U6740K1SP","ts":"1608231629.380300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qFU4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, I really wouldn’t dispatch on strings or even symbols. It is possible, but I wouldn’t recommend it."}]}]}],"thread_ts":"1608231480.379100","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"90c4feb7-aab5-4556-b1fe-aa99e64ae07b","type":"message","text":"If you want to use dispatch, use a singleton object","user":"U6740K1SP","ts":"1608231644.380500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lfr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you want to use dispatch, use a singleton object"}]}]}],"thread_ts":"1608231480.379100","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"8881fa5d-1929-4aa5-b7a8-cdb6a1bf797f","type":"message","text":"Akin to how sorting algorithms work: <https://github.com/JuliaCollections/SortingAlgorithms.jl>","user":"U6740K1SP","ts":"1608231694.380700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c3D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Akin to how sorting algorithms work: "},{"type":"link","url":"https://github.com/JuliaCollections/SortingAlgorithms.jl"}]}]}],"thread_ts":"1608231480.379100","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"ec52d2c7-dcdb-4af4-b65f-a91310933ae1","type":"message","text":"Thank you <@U6740K1SP> and seeing as no types are changes I see your point  Is  using if statements considered good practice in Julia?","user":"U01FBLBCP7S","ts":"1608231936.380900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HOi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you "},{"type":"user","user_id":"U6740K1SP"},{"type":"text","text":" and seeing as no types are changes I see your point  Is  using if statements considered good practice in Julia?"}]}]}],"thread_ts":"1608231480.379100","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"6dffa6d7-c351-4b56-b0e3-a8ed54bea56b","type":"message","text":"Totally reasonable, yes.  There are also some `@switch` macros lying around","user":"U6740K1SP","ts":"1608232026.381100","team":"T68168MUP","edited":{"user":"U6740K1SP","ts":"1608232027.000000"},"blocks":[{"type":"rich_text","block_id":"7sL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Totally reasonable, yes.  There are also some "},{"type":"text","text":"@switch","style":{"code":true}},{"type":"text","text":" macros lying around"}]}]}],"thread_ts":"1608231480.379100","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"67e19624-d164-4a23-be06-10fa12c4962e","type":"message","text":"Thanks  I see that case looks a bit prettier in that it takes fewer lines.  I might give that a try as I didn't find anything easy for switch","user":"U01FBLBCP7S","ts":"1608232171.381400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zo0EK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks  I see that case looks a bit prettier in that it takes fewer lines.  I might give that a try as I didn't find anything easy for switch"}]}]}],"thread_ts":"1608231480.379100","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"afd5045a-39c0-4c64-bbc2-5a1389a97d76","type":"message","text":"Dicts/Named Tuples can also be nice ways of effectively doing simple switches","user":"U6740K1SP","ts":"1608232311.381600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wMf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Dicts/Named Tuples can also be nice ways of effectively doing simple switches"}]}]}],"thread_ts":"1608231480.379100","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"0ef4cde3-eff7-4b3d-ac6d-8dad5eb42a85","type":"message","text":"More fun stuff to learn about Julia.  Thanks!","user":"U01FBLBCP7S","ts":"1608232405.382300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Um3Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"More fun stuff to learn about Julia.  Thanks!"}]}]}],"thread_ts":"1608231480.379100","parent_user_id":"U01FBLBCP7S"}]