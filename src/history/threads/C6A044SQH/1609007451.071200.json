[{"client_msg_id":"46ce0b6b-77d8-4b4e-9476-8de6c2cf9cb3","type":"message","text":"I am trying to use Adapt.jl to pass structures as arguments to GPU kernels (KernelAbstractions.jl). I get the following “convert” error:\n```ERROR: LoadError: MethodError: no method matching similar(::Type{CuArray{Float64,3}}, ::Type{Float64}, ::Tuple{Int64,Int64,Int64})\nClosest candidates are:\n  similar(::Array, ::Type, ::Tuple{Vararg{Int64,N}}) where N at array.jl:380\n  similar(::SubArray, ::Type, ::Tuple{Vararg{Int64,N}} where N) at subarray.jl:65\n  similar(::Base.ReshapedArray, ::Type, ::Tuple{Vararg{Int64,N}} where N) at reshapedarray.jl:207\n  ...\nStacktrace:\n [1] convert(::Type{CuArray{Float64,3}}, ::CuDeviceArray{Float64,3,1}) at /home/skandala/.julia/packages/GPUArrays/jhRU7/src/host/construction.jl:69\n [2] RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}}(::CuDeviceArray{Float64,3,1}, ::CuDeviceArray{Float64,3,1}, ::CuDeviceArray{Float64,3,1}, ::CuDeviceArray{Float64,2,1}, ::CuDeviceArray{Float64,2,1}, ::CuDeviceArray{Float64,2,1}, ::CuDeviceArray{Float64,2,1}) at /central/home/skandala/RRTMGP.jl/src/gray_optics/GraySources.jl:37\n [3] adapt_structure(::CUDA.Adaptor, ::RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}}) at /central/home/skandala/RRTMGP.jl/src/gray_optics/GraySources.jl:79\n [4] adapt at /home/skandala/.julia/packages/Adapt/8kQMV/src/Adapt.jl:40 [inlined]\n [5] cudaconvert at /home/skandala/.julia/packages/CUDA/YeS8q/src/compiler/execution.jl:143 [inlined]\n [6] map at ./tuple.jl:160 [inlined] (repeats 3 times)\n [7] macro expansion at /home/skandala/.julia/packages/CUDA/YeS8q/src/compiler/execution.jl:107 [inlined]\n [8] (::KernelAbstractions.Kernel{CUDADevice,KernelAbstractions.NDIteration.StaticSize{(60, 3)},KernelAbstractions.NDIteration.DynamicSize,typeof(RRTMGP.GrayRTESolver.gpu_rte_lw_noscat_gray_source_kernel!)})(::RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}}, ::Vararg{Any,N} where N; ndrange::Tuple{Int64,Int64}, dependencies::Tuple{KernelAbstractions.CudaEvent}, workgroupsize::Nothing, progress::Function) at /home/skandala/.julia/packages/KernelAbstractions/jAutM/src/backends/cuda.jl:185\n [9] rte_lw_noscat_gray_solve!(::GrayRRTMGP{Float64,Int64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3},Bool,GrayOneScalar{Float64,CuArray{Float64,2}},RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}},RRTMGP.GrayBCs.GrayLwBCs{Float64,CuArray{Float64,1}}}; max_threads::Int64) at /central/home/skandala/RRTMGP.jl/src/gray_rte/GrayRTESolver.jl:125\n [10] gray_atmos_lw!(::GrayRRTMGP{Float64,Int64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3},Bool,GrayOneScalar{Float64,CuArray{Float64,2}},RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}},RRTMGP.GrayBCs.GrayLwBCs{Float64,CuArray{Float64,1}}}; max_threads::Int64) at /central/home/skandala/RRTMGP.jl/src/gray_rte/GrayRTESolver.jl:49\n [11] gray_atmos_lw!(::GrayRRTMGP{Float64,Int64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3},Bool,GrayOneScalar{Float64,CuArray{Float64,2}},RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}},RRTMGP.GrayBCs.GrayLwBCs{Float64,CuArray{Float64,1}}}) at /central/home/skandala/RRTMGP.jl/src/gray_rte/GrayRTESolver.jl:35\n [12] gray_atmos_lw_comparison(::Type{T} where T, ::Int64, ::Type{Float64}, ::Type{Int64}, ::Type{CuArray}) at /central/home/skandala/RRTMGP.jl/test/gray_atm.jl:171\n [13] macro expansion at ./timing.jl:174 [inlined]\n [14] top-level scope at /central/home/skandala/RRTMGP.jl/test/gray_atm.jl:262\n [15] include(::String) at ./client.jl:457\n [16] top-level scope at REPL[1]:1\nin expression starting at /central/home/skandala/RRTMGP.jl/test/gray_atm.jl:261```","user":"UNFJWPTPS","ts":"1609007451.071200","team":"T68168MUP","edited":{"user":"UNFJWPTPS","ts":"1609009103.000000"},"blocks":[{"type":"rich_text","block_id":"XzjlR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am trying to use Adapt.jl to pass structures as arguments to GPU kernels (KernelAbstractions.jl). I get the following “convert” error:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: LoadError: MethodError: no method matching similar(::Type{CuArray{Float64,3}}, ::Type{Float64}, ::Tuple{Int64,Int64,Int64})\nClosest candidates are:\n  similar(::Array, ::Type, ::Tuple{Vararg{Int64,N}}) where N at array.jl:380\n  similar(::SubArray, ::Type, ::Tuple{Vararg{Int64,N}} where N) at subarray.jl:65\n  similar(::Base.ReshapedArray, ::Type, ::Tuple{Vararg{Int64,N}} where N) at reshapedarray.jl:207\n  ...\nStacktrace:\n [1] convert(::Type{CuArray{Float64,3}}, ::CuDeviceArray{Float64,3,1}) at /home/skandala/.julia/packages/GPUArrays/jhRU7/src/host/construction.jl:69\n [2] RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}}(::CuDeviceArray{Float64,3,1}, ::CuDeviceArray{Float64,3,1}, ::CuDeviceArray{Float64,3,1}, ::CuDeviceArray{Float64,2,1}, ::CuDeviceArray{Float64,2,1}, ::CuDeviceArray{Float64,2,1}, ::CuDeviceArray{Float64,2,1}) at /central/home/skandala/RRTMGP.jl/src/gray_optics/GraySources.jl:37\n [3] adapt_structure(::CUDA.Adaptor, ::RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}}) at /central/home/skandala/RRTMGP.jl/src/gray_optics/GraySources.jl:79\n [4] adapt at /home/skandala/.julia/packages/Adapt/8kQMV/src/Adapt.jl:40 [inlined]\n [5] cudaconvert at /home/skandala/.julia/packages/CUDA/YeS8q/src/compiler/execution.jl:143 [inlined]\n [6] map at ./tuple.jl:160 [inlined] (repeats 3 times)\n [7] macro expansion at /home/skandala/.julia/packages/CUDA/YeS8q/src/compiler/execution.jl:107 [inlined]\n [8] (::KernelAbstractions.Kernel{CUDADevice,KernelAbstractions.NDIteration.StaticSize{(60, 3)},KernelAbstractions.NDIteration.DynamicSize,typeof(RRTMGP.GrayRTESolver.gpu_rte_lw_noscat_gray_source_kernel!)})(::RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}}, ::Vararg{Any,N} where N; ndrange::Tuple{Int64,Int64}, dependencies::Tuple{KernelAbstractions.CudaEvent}, workgroupsize::Nothing, progress::Function) at /home/skandala/.julia/packages/KernelAbstractions/jAutM/src/backends/cuda.jl:185\n [9] rte_lw_noscat_gray_solve!(::GrayRRTMGP{Float64,Int64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3},Bool,GrayOneScalar{Float64,CuArray{Float64,2}},RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}},RRTMGP.GrayBCs.GrayLwBCs{Float64,CuArray{Float64,1}}}; max_threads::Int64) at /central/home/skandala/RRTMGP.jl/src/gray_rte/GrayRTESolver.jl:125\n [10] gray_atmos_lw!(::GrayRRTMGP{Float64,Int64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3},Bool,GrayOneScalar{Float64,CuArray{Float64,2}},RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}},RRTMGP.GrayBCs.GrayLwBCs{Float64,CuArray{Float64,1}}}; max_threads::Int64) at /central/home/skandala/RRTMGP.jl/src/gray_rte/GrayRTESolver.jl:49\n [11] gray_atmos_lw!(::GrayRRTMGP{Float64,Int64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3},Bool,GrayOneScalar{Float64,CuArray{Float64,2}},RRTMGP.GraySources.GraySourceLWNoScat{Float64,CuArray{Float64,1},CuArray{Float64,2},CuArray{Float64,3}},RRTMGP.GrayBCs.GrayLwBCs{Float64,CuArray{Float64,1}}}) at /central/home/skandala/RRTMGP.jl/src/gray_rte/GrayRTESolver.jl:35\n [12] gray_atmos_lw_comparison(::Type{T} where T, ::Int64, ::Type{Float64}, ::Type{Int64}, ::Type{CuArray}) at /central/home/skandala/RRTMGP.jl/test/gray_atm.jl:171\n [13] macro expansion at ./timing.jl:174 [inlined]\n [14] top-level scope at /central/home/skandala/RRTMGP.jl/test/gray_atm.jl:262\n [15] include(::String) at ./client.jl:457\n [16] top-level scope at REPL[1]:1\nin expression starting at /central/home/skandala/RRTMGP.jl/test/gray_atm.jl:261"}]}]}],"thread_ts":"1609007451.071200","reply_count":2,"reply_users_count":1,"latest_reply":"1609007568.071700","reply_users":["UNFJWPTPS"],"subscribed":false},{"client_msg_id":"f278c200-ec0a-4a07-a3bd-bafc9fb256cd","type":"message","text":"For example, for a sample struct below,\n```\nstruct GraySourceLWNoScat{\n    FT&lt;:AbstractFloat,\n    FTA2D&lt;:AbstractArray{FT,2},\n    FTA3D&lt;:AbstractArray{FT,3},\n} &lt;: AbstractGraySource{FT}\n\n    lay_source::FTA3D\n    lev_source_inc::FTA3D\n    lev_source_dec::FTA3D\n    sfc_source::FTA2D\n    source_up::FTA2D\n    source_dn::FTA2D\n    trans::FTA2D\nend```\nI use the following:\n```function Adapt.adapt_structure(to, x::GraySourceLWNoScat)\n    DA = array_type()\n    FT = eltype(x.lay_source)\n    FTA2D = DA{FT,2}\n    FTA3D = DA{FT,3}\n    GraySourceLWNoScat{FT,FTA2D,FTA3D}(\n                       adapt(to, x.lay_source),\n                       adapt(to, x.lev_source_inc),\n                       adapt(to, x.lev_source_dec),\n                       adapt(to, x.sfc_source),\n                       adapt(to, x.source_up),\n                       adapt(to, x.source_dn),\n                       adapt(to, x.trans))\nend```","user":"UNFJWPTPS","ts":"1609007528.071500","team":"T68168MUP","edited":{"user":"UNFJWPTPS","ts":"1609009937.000000"},"blocks":[{"type":"rich_text","block_id":"sDsYD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For example, for a sample struct below,\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\nstruct GraySourceLWNoScat{\n    FT<:AbstractFloat,\n    FTA2D<:AbstractArray{FT,2},\n    FTA3D<:AbstractArray{FT,3},\n} <: AbstractGraySource{FT}\n\n    lay_source::FTA3D\n    lev_source_inc::FTA3D\n    lev_source_dec::FTA3D\n    sfc_source::FTA2D\n    source_up::FTA2D\n    source_dn::FTA2D\n    trans::FTA2D\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I use the following:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function Adapt.adapt_structure(to, x::GraySourceLWNoScat)\n    DA = array_type()\n    FT = eltype(x.lay_source)\n    FTA2D = DA{FT,2}\n    FTA3D = DA{FT,3}\n    GraySourceLWNoScat{FT,FTA2D,FTA3D}(\n                       adapt(to, x.lay_source),\n                       adapt(to, x.lev_source_inc),\n                       adapt(to, x.lev_source_dec),\n                       adapt(to, x.sfc_source),\n                       adapt(to, x.source_up),\n                       adapt(to, x.source_dn),\n                       adapt(to, x.trans))\nend"}]}]}],"thread_ts":"1609007451.071200","parent_user_id":"UNFJWPTPS"},{"client_msg_id":"2a3dd19b-2c4b-4934-a9a5-9afce8c2b1bb","type":"message","text":"Please advise if I am doing this right. Thanks. Please advise on the best documentation source for this.","user":"UNFJWPTPS","ts":"1609007568.071700","team":"T68168MUP","edited":{"user":"UNFJWPTPS","ts":"1609009138.000000"},"blocks":[{"type":"rich_text","block_id":"UNu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please advise if I am doing this right. Thanks. Please advise on the best documentation source for this."}]}]}],"thread_ts":"1609007451.071200","parent_user_id":"UNFJWPTPS"}]