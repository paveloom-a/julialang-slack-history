[{"client_msg_id":"0685e5ff-2d66-4a92-af20-a342e9c14ef3","type":"message","text":"is there an elegant way for the following?\n `a = Array{Int64, 1}(undef, 3)`\nwill initialize a nice Vector/Array populated with zeros \"sometimes\" ie often when the Julia session is \"fresh\" (I have come to notice).\nBut then later on if I do things like  `Array{Int128, 2}(undef, 3,3)` randomness starts to kick in, meaning that the elements seem to hold memory \"garbage\".\nSo when you are filling (via indexing)  the Array's elements with values it could lead to random values still being present if I do not address all of the initialized position elements.\nThat is why my Q is if there is a way for this Vector or Array, when being initialized with a Type, that there is a less \"random\" placeholder for the `undef` being used eg initialization with `n/a` or something similar that can maybe easily be dropped if I was for instance in a function and returning this or parts of this array? hope my Q is clear ...","user":"UH7DSCSPK","ts":"1607965782.029200","team":"T68168MUP","edited":{"user":"UH7DSCSPK","ts":"1607965867.000000"},"blocks":[{"type":"rich_text","block_id":"cwf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there an elegant way for the following?\n "},{"type":"text","text":"a = Array{Int64, 1}(undef, 3)","style":{"code":true}},{"type":"text","text":"\nwill initialize a nice Vector/Array populated with zeros \"sometimes\" ie often when the Julia session is \"fresh\" (I have come to notice).\nBut then later on if I do things like  "},{"type":"text","text":"Array{Int128, 2}(undef, 3,3)","style":{"code":true}},{"type":"text","text":" randomness starts to kick in, meaning that the elements seem to hold memory \"garbage\".\nSo when you are filling (via indexing)  the Array's elements with values it could lead to random values still being present if I do not address all of the initialized position elements.\nThat is why my Q is if there is a way for this Vector or Array, when being initialized with a Type, that there is a less \"random\" placeholder for the "},{"type":"text","text":"undef","style":{"code":true}},{"type":"text","text":" being used eg initialization with "},{"type":"text","text":"n/a ","style":{"code":true}},{"type":"text","text":"or something similar that can maybe easily be dropped if I was for instance in a function and returning this or parts of this array? hope my Q is clear ..."}]}]}],"thread_ts":"1607965782.029200","reply_count":18,"reply_users_count":4,"latest_reply":"1607966769.033000","reply_users":["UDB26738Q","U011LUQ182G","UH7DSCSPK","U0179G7FG4F"],"subscribed":false},{"client_msg_id":"7da23b32-a2aa-489e-9d15-99c3041531e7","type":"message","text":"you may want to look into `zeros`, `ones`, or `fill`","user":"UDB26738Q","ts":"1607965897.029400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kdzs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you may want to look into "},{"type":"text","text":"zeros","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"ones","style":{"code":true}},{"type":"text","text":", or "},{"type":"text","text":"fill","style":{"code":true}}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK","reactions":[{"name":"point_up","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"1ce8e296-d06e-4767-8b5e-a1a143f10a48","type":"message","text":"like NaN?","user":"U011LUQ182G","ts":"1607965898.029600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bGU1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like NaN?"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"c322ffad-250f-4902-981d-bb915eaa690f","type":"message","text":"yeah like NaN or so","user":"UH7DSCSPK","ts":"1607965915.029800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sZk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah like NaN or so"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"c65e3e69-ef95-4ec5-b283-4362ced6204a","type":"message","text":"I woudl like to avoid zeros and ones sincwe these are valid values that could later be inserted into the array positions","user":"UH7DSCSPK","ts":"1607965951.030000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vhSSV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I woudl like to avoid zeros and ones sincwe these are valid values that could later be inserted into the array positions"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"ecd0c06b-2793-4585-aa91-048c9e7dadd2","type":"message","text":"yeah, see Mose’s answer - just use `fill!` with NaNs","user":"U011LUQ182G","ts":"1607965972.030200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b=m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, see Mose’s answer - just use "},{"type":"text","text":"fill!","style":{"code":true}},{"type":"text","text":" with NaNs"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"054e1465-8d77-47de-b81c-9b69fd55b7af","type":"message","text":"ah there is Nan but that is Float64 based on a quick look at help\nnothing similar tha coudl be valid for all numeric types?","user":"UH7DSCSPK","ts":"1607966034.030400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZGTP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah there is Nan but that is Float64 based on a quick look at help\nnothing similar tha coudl be valid for all numeric types?"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"85c16f53-f254-4ad9-8d2d-ab82762fea92","type":"message","text":"Note that `Int128` (or basically any `Integer` subtype doesn't have any invalid values","user":"U0179G7FG4F","ts":"1607966061.030600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CD87u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Note that "},{"type":"text","text":"Int128","style":{"code":true}},{"type":"text","text":" (or basically any `Integer` subtype doesn't have any invalid values"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"b03f4c45-1263-4be1-b0dd-cc519bf9eaf1","type":"message","text":"`T(NaN)`","user":"UDB26738Q","ts":"1607966112.030800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qqo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"T(NaN)","style":{"code":true}}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"23db7e13-66fe-48a9-8776-0dd3bac3caae","type":"message","text":"hmm let me check if that T(NaN)  will behave itself with an Array that is supposed to capture Integers","user":"UH7DSCSPK","ts":"1607966271.031000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K0x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm let me check if that T(NaN)  will behave itself with an Array that is supposed to capture Integers"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"88871b7e-c823-488e-a8ef-8b07f09cd8e7","type":"message","text":"already thnx for the quick response(s)","user":"UH7DSCSPK","ts":"1607966336.031200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9D=95","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"already thnx for the quick response(s)"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"b15fdf32-f5b4-4c0c-b2d0-cd700c3689e0","type":"message","text":"uh, right, that's an `Int`, then the answer is no","user":"UDB26738Q","ts":"1607966459.031400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y1Ktz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uh, right, that's an "},{"type":"text","text":"Int","style":{"code":true}},{"type":"text","text":", then the answer is no"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"4100b5ea-d288-4ed5-a903-277acc500d6f","type":"message","text":"looks like it","user":"UH7DSCSPK","ts":"1607966477.031600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"txd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"looks like it"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"ba694106-1241-4f63-be73-abe7395dcbff","type":"message","text":"you probably want to fill it with `missing` then","user":"UDB26738Q","ts":"1607966478.031800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0V9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you probably want to fill it with "},{"type":"text","text":"missing","style":{"code":true}},{"type":"text","text":" then"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"8e7fdd54-7484-4cfe-a04b-82107244ce82","type":"message","text":"missing is also not so nice\n`Cannot `convert` an object of type Missing to an object of type Int64`","user":"UH7DSCSPK","ts":"1607966550.032000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fxP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"missing is also not so nice\n`Cannot `convert` an object of type Missing to an object of type Int64`"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"d38622d4-fb33-4a51-9bbc-561a86ee6138","type":"message","text":"because you're doing it wrong :slightly_smiling_face:","user":"UDB26738Q","ts":"1607966566.032200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mGj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because you're doing it wrong "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"82a04620-3ed8-4723-8ff9-2c3320039c81","type":"message","text":"you can do for example\n```julia&gt; a = Union{Int,Missing}[missing for _ in 1:3]\n3-element Vector{Union{Missing, Int64}}:\n missing\n missing\n missing```","user":"UDB26738Q","ts":"1607966602.032400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"239K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can do for example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a = Union{Int,Missing}[missing for _ in 1:3]\n3-element Vector{Union{Missing, Int64}}:\n missing\n missing\n missing"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK","reactions":[{"name":"+1","users":["UH7DSCSPK"],"count":1}]},{"client_msg_id":"426de386-f1d3-4050-a156-41a07bba3921","type":"message","text":"you can't change the type of the elements of an `Array`, so you must say upfront that you need to accommodate both `Int` _and_ `Missing`","user":"UDB26738Q","ts":"1607966657.032800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yduj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can't change the type of the elements of an "},{"type":"text","text":"Array","style":{"code":true}},{"type":"text","text":", so you must say upfront that you need to accommodate both "},{"type":"text","text":"Int","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"and","style":{"italic":true}},{"type":"text","text":" "},{"type":"text","text":"Missing","style":{"code":true}}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK"},{"client_msg_id":"0f69ebbd-d4a5-4083-87f5-e4fbe67cb5e5","type":"message","text":"ah a Union - that was the \"elegant\" way I was looking for\nTHNX - my Q got answered ... this would have taken me ages on SO , I guess - the nice thing about interactive communities :slightly_smiling_face:","user":"UH7DSCSPK","ts":"1607966769.033000","team":"T68168MUP","edited":{"user":"UH7DSCSPK","ts":"1607966892.000000"},"blocks":[{"type":"rich_text","block_id":"uUZ4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah a Union - that was the \"elegant\" way I was looking for\nTHNX - my Q got answered ... this would have taken me ages on SO , I guess - the nice thing about interactive communities "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1607965782.029200","parent_user_id":"UH7DSCSPK","reactions":[{"name":"stackoverflow","users":["UDB26738Q","UH7DSCSPK","U01CMBH4MQE"],"count":3}]}]