[{"client_msg_id":"40d254a5-83fb-43c7-8096-652aaa25f692","type":"message","text":"I implemented the `pascals triangle` function:\n```function triangle(n)\n    n &lt; 0 &amp;&amp; return throw(DomainError(\"\"))\n    ans = Vector{Vector{Int64}}()\n    row = Vector{Int64}()\n    n == 0 &amp;&amp; return ans\n    return generate(n, row, ans)\nend\n\nfunction generate(n_row::Int64, row::Vector{Int64}, ans::Vector{Vector{Int64}})\n    if n_row == 1\n        push!(row, 1)\n        tmp = Vector{Int64}()\n        push!(tmp, 1)\n        push!(ans, tmp)\n        return ans\n    end\n    generate(n_row - 1, row, ans)\n    if length(row) == 1\n        push!(row, 1)\n    else\n        for i in 1:length(row)-1\n            row[i] += row[i+1]\n        end\n        pushfirst!(row, 1)\n    end\n    tmp = Vector{Int64}()\n    map(row[1:end]) do x\n        push!(tmp, x)\n    end\n    push!(ans, tmp)\n    return ans\nend```\nin `generate` function, I have to use the `tmp` at `push!(ans, tmp)` because The value of `ans` will change with the value of `row`\n\nIs it possible passing arguments by value instead of by reference/call-by-sharing?","user":"U01H3UZ9T7C","ts":"1608795965.447900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2w0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I implemented the "},{"type":"text","text":"pascals triangle","style":{"code":true}},{"type":"text","text":" function:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function triangle(n)\n    n < 0 && return throw(DomainError(\"\"))\n    ans = Vector{Vector{Int64}}()\n    row = Vector{Int64}()\n    n == 0 && return ans\n    return generate(n, row, ans)\nend\n\nfunction generate(n_row::Int64, row::Vector{Int64}, ans::Vector{Vector{Int64}})\n    if n_row == 1\n        push!(row, 1)\n        tmp = Vector{Int64}()\n        push!(tmp, 1)\n        push!(ans, tmp)\n        return ans\n    end\n    generate(n_row - 1, row, ans)\n    if length(row) == 1\n        push!(row, 1)\n    else\n        for i in 1:length(row)-1\n            row[i] += row[i+1]\n        end\n        pushfirst!(row, 1)\n    end\n    tmp = Vector{Int64}()\n    map(row[1:end]) do x\n        push!(tmp, x)\n    end\n    push!(ans, tmp)\n    return ans\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"in "},{"type":"text","text":"generate","style":{"code":true}},{"type":"text","text":" function, I have to use the "},{"type":"text","text":"tmp","style":{"code":true}},{"type":"text","text":" at "},{"type":"text","text":"push!(ans, tmp)","style":{"code":true}},{"type":"text","text":" because The value of "},{"type":"text","text":"ans","style":{"code":true}},{"type":"text","text":" will change with the value of "},{"type":"text","text":"row","style":{"code":true}},{"type":"text","text":"\n\nIs it possible passing arguments by value instead of by reference/call-by-sharing?"}]}]}],"thread_ts":"1608795965.447900","reply_count":2,"reply_users_count":2,"latest_reply":"1608858018.003300","reply_users":["U0179G7FG4F","U01H3UZ9T7C"],"subscribed":false},{"client_msg_id":"fba8bbfd-66c6-4769-a0f3-2154003f4ca6","type":"message","text":"If you just make a copy, everything should work out","user":"U0179G7FG4F","ts":"1608835590.479300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RmHFk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you just make a copy, everything should work out"}]}]}],"thread_ts":"1608795965.447900","parent_user_id":"U01H3UZ9T7C"},{"client_msg_id":"dda7d671-5cfb-43ef-b29a-19cd4fa2bea2","type":"message","text":"if I just use `row` , every item of `ans` will be the last value of `row` in the end.\nfor instance:\n```function triangle(n)\n    n &lt; 0 &amp;&amp; return throw(DomainError(\"\"))\n    ans = Vector{Vector{Int64}}()\n    row = Vector{Int64}()\n    n == 0 &amp;&amp; return ans\n    return generate(n, row, ans)\nend\n\nfunction generate(n_row::Int64, row::Vector{Int64}, ans::Vector{Vector{Int64}})\n    if n_row == 1\n        push!(row, 1)\n        tmp = Vector{Int64}()\n        push!(tmp, 1)\n        push!(ans, row)\n        return ans\n    end\n    generate(n_row - 1, row, ans)\n    if length(row) == 1\n        push!(row, 1)\n    else\n        for i in 1:length(row)-1\n            row[i] += row[i+1]\n        end\n        pushfirst!(row, 1)\n    end\n    # tmp = Vector{Int64}()\n    # map(row[1:end]) do x\n    #     push!(tmp, x)\n    # end\n    push!(ans, row)\n    return ans\nend```\nif I wrote code like the above, the output of `triangle(4)` is the following:\n```4-element Array{Array{Int64,1},1}:\n [1, 3, 3, 1]\n [1, 3, 3, 1]\n [1, 3, 3, 1]\n [1, 3, 3, 1]```","user":"U01H3UZ9T7C","ts":"1608858018.003300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fKpk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if I just use "},{"type":"text","text":"row","style":{"code":true}},{"type":"text","text":" , every item of "},{"type":"text","text":"ans","style":{"code":true}},{"type":"text","text":" will be the last value of "},{"type":"text","text":"row","style":{"code":true}},{"type":"text","text":" in the end.\nfor instance:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function triangle(n)\n    n < 0 && return throw(DomainError(\"\"))\n    ans = Vector{Vector{Int64}}()\n    row = Vector{Int64}()\n    n == 0 && return ans\n    return generate(n, row, ans)\nend\n\nfunction generate(n_row::Int64, row::Vector{Int64}, ans::Vector{Vector{Int64}})\n    if n_row == 1\n        push!(row, 1)\n        tmp = Vector{Int64}()\n        push!(tmp, 1)\n        push!(ans, row)\n        return ans\n    end\n    generate(n_row - 1, row, ans)\n    if length(row) == 1\n        push!(row, 1)\n    else\n        for i in 1:length(row)-1\n            row[i] += row[i+1]\n        end\n        pushfirst!(row, 1)\n    end\n    # tmp = Vector{Int64}()\n    # map(row[1:end]) do x\n    #     push!(tmp, x)\n    # end\n    push!(ans, row)\n    return ans\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"if I wrote code like the above, the output of "},{"type":"text","text":"triangle(4)","style":{"code":true}},{"type":"text","text":" is the following:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"4-element Array{Array{Int64,1},1}:\n [1, 3, 3, 1]\n [1, 3, 3, 1]\n [1, 3, 3, 1]\n [1, 3, 3, 1]"}]}]}],"thread_ts":"1608795965.447900","parent_user_id":"U01H3UZ9T7C"}]