[{"client_msg_id":"d3010d20-b533-4b44-915f-ee3796550690","type":"message","text":"Is there a way to add a package without project file? I am trying\n```(@v1.4) pkg&gt; add <https://github.com/slundberg/PmapProgressMeter.jl>\n    Cloning git-repo `<https://github.com/slundberg/PmapProgressMeter.jl>`\n   Updating git-repo `<https://github.com/slundberg/PmapProgressMeter.jl>`\nERROR: could not find project file in package at <https://github.com/slundberg/PmapProgressMeter.jl>```\nbut it dosn't work. It's an outdated package I think. (alternatively, is there any example code of running `pmap` with a progress meter)?","user":"U6Z8377N2","ts":"1608519980.133200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l4l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to add a package without project file? I am trying\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(@v1.4) pkg> add "},{"type":"link","url":"https://github.com/slundberg/PmapProgressMeter.jl"},{"type":"text","text":"\n    Cloning git-repo `"},{"type":"link","url":"https://github.com/slundberg/PmapProgressMeter.jl"},{"type":"text","text":"`\n   Updating git-repo `"},{"type":"link","url":"https://github.com/slundberg/PmapProgressMeter.jl"},{"type":"text","text":"`\nERROR: could not find project file in package at "},{"type":"link","url":"https://github.com/slundberg/PmapProgressMeter.jl"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but it dosn't work. It's an outdated package I think. (alternatively, is there any example code of running "},{"type":"text","text":"pmap","style":{"code":true}},{"type":"text","text":" with a progress meter)?"}]}]}],"thread_ts":"1608519980.133200","reply_count":3,"reply_users_count":1,"latest_reply":"1608521925.133800","reply_users":["U6Z8377N2"],"subscribed":false},{"client_msg_id":"06f38055-d272-4f8a-a917-40b2d02ef89e","type":"message","text":"Actually, looks like there is a wrapper around `pmap`\n```    @showprogress pmap(1:10) do x\n        sleep(1.1)\n        x^2\n    end```\nbut I wonder if there is a way to manually give a progress bar","user":"U6Z8377N2","ts":"1608520385.133300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f5c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually, looks like there is a wrapper around "},{"type":"text","text":"pmap","style":{"code":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    @showprogress pmap(1:10) do x\n        sleep(1.1)\n        x^2\n    end"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but I wonder if there is a way to manually give a progress bar"}]}]}],"thread_ts":"1608519980.133200","parent_user_id":"U6Z8377N2"},{"client_msg_id":"c73e72ea-4582-40c3-b0f6-dc1353b246c7","type":"message","text":"Wow I had a great Julia! moment. I realized that `@showprogress` must be constructing a Progress bar internally with some default parameters, so I read the source code for `@showprogress` and it was a bit tricky... I saw some call that changed `pmap` to `progress_map` but with a `mapfun` and it was all too much for me.\n\nBut then I recalled the that `@macros..` are evaluated and expanded at compile time and I can use `@expandmacro` to actually see the code it produced.\n\nand so if anyone is reading this,  here is how you provide a custom Progress bar to a `pmap`","user":"U6Z8377N2","ts":"1608521890.133600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zXoq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow I had a great Julia! moment. I realized that "},{"type":"text","text":"@showprogress","style":{"code":true}},{"type":"text","text":" must be constructing a Progress bar internally with some default parameters, so I read the source code for "},{"type":"text","text":"@showprogress","style":{"code":true}},{"type":"text","text":" and it was a bit tricky... I saw some call that changed "},{"type":"text","text":"pmap","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"progress_map","style":{"code":true}},{"type":"text","text":" but with a "},{"type":"text","text":"mapfun","style":{"code":true}},{"type":"text","text":" and it was all too much for me.\n\nBut then I recalled the that "},{"type":"text","text":"@macros..","style":{"code":true}},{"type":"text","text":" are evaluated and expanded at compile time and I can use "},{"type":"text","text":"@expandmacro","style":{"code":true}},{"type":"text","text":" to actually see the code it produced.\n\nand so if anyone is reading this,  here is how you provide a custom Progress bar to a "},{"type":"text","text":"pmap","style":{"code":true}}]}]}],"thread_ts":"1608519980.133200","parent_user_id":"U6Z8377N2"},{"client_msg_id":"3a3d1b22-59de-4cc6-b489-fcb3444af350","type":"message","text":"``` p = Progress(length(cprod), barglyphs=BarGlyphs(\"[=&gt; ]\"))\n    ret = progress_map(1:100, progress = p, mapfun = pmap) do x\n        work with x\n    end```","user":"U6Z8377N2","ts":"1608521925.133800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5l6","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":" p = Progress(length(cprod), barglyphs=BarGlyphs(\"[=> ]\"))\n    ret = progress_map(1:100, progress = p, mapfun = pmap) do x\n        work with x\n    end"}]}]}],"thread_ts":"1608519980.133200","parent_user_id":"U6Z8377N2","reactions":[{"name":"+1","users":["UL4JREGCV","U67G3QRJM"],"count":2}]}]