[{"client_msg_id":"5477bacb-ea62-423e-921c-75de8120bede","type":"message","text":"Is there a way to extend pre-existing functions across all methods?\n\nFor example (toy problem) the reduce function has 9 methods, suppose we wanted. to extend the entire function (with all its methods) of reduce so that always returns a Float16 (eg. reduce(*args) |&gt; Float16).\n\nHow can we create extended_reduce() function to accept all the arguments that the regular reduce would so that we can provide extended functionality?","user":"U01FAHWCMFF","ts":"1608396357.007700","team":"T68168MUP","edited":{"user":"U01FAHWCMFF","ts":"1608396407.000000"},"blocks":[{"type":"rich_text","block_id":"8vcAt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to extend pre-existing functions across all methods?\n\nFor example (toy problem) the reduce function has 9 methods, suppose we wanted. to extend the entire function (with all its methods) of reduce so that always returns a Float16 (eg. reduce(*args) |> Float16).\n\nHow can we create extended_reduce() function to accept all the arguments that the regular reduce would so that we can provide extended functionality?"}]}]}],"thread_ts":"1608396357.007700","reply_count":7,"reply_users_count":2,"latest_reply":"1608399862.011000","reply_users":["U0179G7FG4F","U01FAHWCMFF"],"subscribed":false},{"client_msg_id":"367166a3-75da-45b3-bbe8-7b655e7d82ce","type":"message","text":"`extend_reduce(args...) = reduce(args..) |&gt; Float16`?","user":"U0179G7FG4F","ts":"1608396458.007900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rHjSf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"extend_reduce(args...) = reduce(args..) |> Float16","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1608396357.007700","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"d3eb1636-a951-42ec-936c-c45c53cd2f89","type":"message","text":"Wow never knew it was that simple with `args...` Thanks\n\nI guess a quality of life upgrade would be for `extend_reduce` to show all inherited methods when doing `?extend_reduce` or `methods(extend_reduce)`\n\nIs there a way to do that?","user":"U01FAHWCMFF","ts":"1608396655.008400","team":"T68168MUP","edited":{"user":"U01FAHWCMFF","ts":"1608396678.000000"},"blocks":[{"type":"rich_text","block_id":"JSSq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow never knew it was that simple with "},{"type":"text","text":"args...","style":{"code":true}},{"type":"text","text":" Thanks\n\nI guess a quality of life upgrade would be for "},{"type":"text","text":"extend_reduce","style":{"code":true}},{"type":"text","text":" to show all inherited methods when doing "},{"type":"text","text":"?extend_reduce","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"methods(extend_reduce)","style":{"code":true}},{"type":"text","text":"\n\nIs there a way to do that?"}]}]}],"thread_ts":"1608396357.007700","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"d470323f-a99b-429d-af3c-7178e7553e3d","type":"message","text":"it only has one method. That method can just call any number of methods of `reduce`","user":"U0179G7FG4F","ts":"1608396716.009600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V32","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it only has one method. That method can just call any number of methods of "},{"type":"text","text":"reduce","style":{"code":true}}]}]}],"thread_ts":"1608396357.007700","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"1d5eb655-3b44-4c3c-b738-e02d19b9486e","type":"message","text":"I guess that makes sense. Thanks Oscar","user":"U01FAHWCMFF","ts":"1608396857.010000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gKdx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess that makes sense. Thanks Oscar"}]}]}],"thread_ts":"1608396357.007700","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"beb75a91-f2ba-4822-979c-03deb575d34e","type":"message","text":"Do you know if something like this is possible in Julia, tired it but it seems like its too ambitious to work\n\n\n`merged_func([args1], [args2]) = foo1(args1...) + foo2(args2...)`","user":"U01FAHWCMFF","ts":"1608398344.010600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LfrHU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you know if something like this is possible in Julia, tired it but it seems like its too ambitious to work\n\n\n"},{"type":"text","text":"merged_func([args1], [args2]) = foo1(args1...) + foo2(args2...)","style":{"code":true}}]}]}],"thread_ts":"1608396357.007700","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"98563d4b-9b9b-4745-b5eb-c82328ab8709","type":"message","text":"just remove the square brackets and it does. ``merged_func(args1, args2) = foo1(args1...) + foo2(args2...)`. It takes 2 collections though, not a vararg. I.E. `merged_func([1,2,3], [4,5,6])`","user":"U0179G7FG4F","ts":"1608398467.010800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rvy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just remove the square brackets and it does. `"},{"type":"text","text":"merged_func(args1, args2) = foo1(args1...) + foo2(args2...)","style":{"code":true}},{"type":"text","text":". It takes 2 collections though, not a vararg. I.E. "},{"type":"text","text":"merged_func([1,2,3], [4,5,6])","style":{"code":true}}]}]}],"thread_ts":"1608396357.007700","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"3bd5d29c-0c08-40f6-a16d-9b9de6ccaa72","type":"message","text":"It worked thanks :slightly_smiling_face:\n\n```julia&gt; extended_reduce(args1, args2) = reduce(args1...) + reduce(args2...)\nextended_reduce (generic function with 1 method)\n\njulia&gt; extended_reduce([+, [1, 2, 3, 4]], [+, [2, 3, 4, 5]])\n24```","user":"U01FAHWCMFF","ts":"1608399862.011000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gjUIY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It worked thanks "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> extended_reduce(args1, args2) = reduce(args1...) + reduce(args2...)\nextended_reduce (generic function with 1 method)\n\njulia> extended_reduce([+, [1, 2, 3, 4]], [+, [2, 3, 4, 5]])\n24"}]}]}],"thread_ts":"1608396357.007700","parent_user_id":"U01FAHWCMFF"}]