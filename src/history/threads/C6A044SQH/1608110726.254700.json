[{"client_msg_id":"dc901703-027b-4a1e-93dc-80db4b93c818","type":"message","text":"I have code that does `x += y`  and `x` and `y` are the output of another function (and the same type) and can either be scalars or arrays. I'd rather write `x .+= y`  but this fails when they are scalars what is the best way around this?\n```function foo(f::T) where T\n  x = f()\n  y = f()\n  x .+= y\n  return x\nend\nfoo(()-&gt;[1]) # yay!\nfoo(()-&gt;1) # oh no!```","user":"UDSG73JTH","ts":"1608110726.254700","team":"T68168MUP","edited":{"user":"UDSG73JTH","ts":"1608110754.000000"},"blocks":[{"type":"rich_text","block_id":"Ggcyk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have code that does "},{"type":"text","text":"x += y","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" are the output of another function (and the same type) and can either be scalars or arrays. I'd rather write "},{"type":"text","text":"x .+= y","style":{"code":true}},{"type":"text","text":"  but this fails when they are scalars what is the best way around this?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function foo(f::T) where T\n  x = f()\n  y = f()\n  x .+= y\n  return x\nend\nfoo(()->[1]) # yay!\nfoo(()->1) # oh no!"}]}]}],"thread_ts":"1608110726.254700","reply_count":6,"reply_users_count":4,"latest_reply":"1608115736.259400","reply_users":["U01G55LRSQL","UDSG73JTH","U012XER8K4M","UM30MT6RF"],"subscribed":false},{"client_msg_id":"dfc8f85b-6150-4907-80ac-25397f1adf87","type":"message","text":"x. += y , you mean floating point type?","user":"U01G55LRSQL","ts":"1608111674.255300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z6K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"x. += y , you mean floating point type?"}]}]}],"thread_ts":"1608110726.254700","parent_user_id":"UDSG73JTH"},{"client_msg_id":"c114abdc-b03b-4fa5-a457-5cd2b7b82435","type":"message","text":"Any type, except sometimes x and y are just one value and sometimes they are both vectors of values.","user":"UDSG73JTH","ts":"1608111731.255500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nN=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any type, except sometimes x and y are just one value and sometimes they are both vectors of values."}]}]}],"thread_ts":"1608110726.254700","parent_user_id":"UDSG73JTH"},{"client_msg_id":"80b00c3f-b397-4ad7-a948-da0e79169467","type":"message","text":"I think, in general, the answer for such issues is to introduce a function for that operation, and specialize it for each distinct type","user":"U012XER8K4M","ts":"1608114862.255900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4FO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think, in general, the answer for such issues is to introduce a function for that operation, and specialize it for each distinct type"}]}]}],"thread_ts":"1608110726.254700","parent_user_id":"UDSG73JTH"},{"client_msg_id":"5d1714cf-0bdc-424b-889f-e50d56d8f36b","type":"message","text":"i.e. something that can dispatch on the type of x and y and do whatever you need.","user":"U012XER8K4M","ts":"1608115006.256100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Us","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i.e. something that can dispatch on the type of x and y and do whatever you need."}]}]}],"thread_ts":"1608110726.254700","parent_user_id":"UDSG73JTH"},{"client_msg_id":"8f59c32c-dbfd-495e-894c-2adbf5c3165d","type":"message","text":"(but at the same time, i now realize it won't be very nice, since it wants to mutate when possible, and not mutate when it can't)","user":"U012XER8K4M","ts":"1608115069.256300","team":"T68168MUP","edited":{"user":"U012XER8K4M","ts":"1608115097.000000"},"blocks":[{"type":"rich_text","block_id":"DbTq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(but at the same time, i now realize it won't be very nice, since it wants to mutate when possible, and not mutate when it can't)"}]}]}],"thread_ts":"1608110726.254700","parent_user_id":"UDSG73JTH","reactions":[{"name":"+1","users":["UDSG73JTH"],"count":1}]},{"client_msg_id":"d4e9f259-6144-4522-86f1-de6c6fe8551d","type":"message","text":"You might want to check out `add!!` from BangBang.jl for this","user":"UM30MT6RF","ts":"1608115736.259400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A1D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might want to check out "},{"type":"text","text":"add!!","style":{"code":true}},{"type":"text","text":" from BangBang.jl for this"}]}]}],"thread_ts":"1608110726.254700","parent_user_id":"UDSG73JTH"}]