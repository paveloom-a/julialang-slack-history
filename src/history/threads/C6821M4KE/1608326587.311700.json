[{"client_msg_id":"e1b0821b-3d2c-4bde-94ef-297292981e8b","type":"message","text":"I would like to compute the relative entropy (KL divergence) between two Beta distributions but am running into some computational problems.\n\nWikipedia gives an <https://en.wikipedia.org/wiki/Beta_distribution#Quantities_of_information_(entropy)|expression> in terms of the beta and digamma functions, but implementing  it causes underflow since the beta function values can get <https://www.wolframalpha.com/input/?i=beta%281000%2C+20000%29|quite small> and in Julia go to zero: `beta(1000, 20000) == 0.0`, resulting in `log(0.0) == -Inf`.\n\nDoes anybody have an idea for computing the relative entropy with Beta parameters in the 1,000–200,000 range? I'm learning these distributions from count data, so those are realistic ranges for the α and β parameters.\n\nHere's my current implementation:\n```function relative_entropy(x::Beta, y::Beta)\n\tα, β = params(x)\n\tα′, β′ = params(y)\n\tψ, B = digamma, beta\n\tlog(B(α′, β′)) - log(B(α, β)) \n\t\t(α - α′)ψ(α) + (β - β′)ψ(β) + \n\t\t(α′ - α + β′ - β)ψ(α + β)\nend```","user":"U68M6ERG8","ts":"1608326587.311700","team":"T68168MUP","edited":{"user":"U68M6ERG8","ts":"1608326831.000000"},"blocks":[{"type":"rich_text","block_id":"PdN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would like to compute the relative entropy (KL divergence) between two Beta distributions but am running into some computational problems.\n\nWikipedia gives an "},{"type":"link","url":"https://en.wikipedia.org/wiki/Beta_distribution#Quantities_of_information_(entropy)","text":"expression"},{"type":"text","text":" in terms of the beta and digamma functions, but implementing  it causes underflow since the beta function values can get "},{"type":"link","url":"https://www.wolframalpha.com/input/?i=beta%281000%2C+20000%29","text":"quite small"},{"type":"text","text":" and in Julia go to zero: "},{"type":"text","text":"beta(1000, 20000) == 0.0","style":{"code":true}},{"type":"text","text":", resulting in "},{"type":"text","text":"log(0.0) == -Inf","style":{"code":true}},{"type":"text","text":".\n\nDoes anybody have an idea for computing the relative entropy with Beta parameters in the 1,000–200,000 range? I'm learning these distributions from count data, so those are realistic ranges for the α and β parameters.\n\nHere's my current implementation:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function relative_entropy(x::Beta, y::Beta)\n\tα, β = params(x)\n\tα′, β′ = params(y)\n\tψ, B = digamma, beta\n\tlog(B(α′, β′)) - log(B(α, β)) \n\t\t(α - α′)ψ(α) + (β - β′)ψ(β) + \n\t\t(α′ - α + β′ - β)ψ(α + β)\nend"}]}]}],"thread_ts":"1608326587.311700","reply_count":7,"reply_users_count":2,"latest_reply":"1608328065.315200","reply_users":["U68M6ERG8","U6C937ENB"],"subscribed":false},{"client_msg_id":"0bc5811f-ab2f-420c-9f0c-78ac690ab4b8","type":"message","text":"If there's a nicer way to take the ratio of two `beta` functions I think that'd solve this problem; the core of it is that `beta(α′, β′) / beta(α, β)` turns into 0/0 when both are actually very small quantities","user":"U68M6ERG8","ts":"1608327123.313100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u8=r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If there's a nicer way to take the ratio of two "},{"type":"text","text":"beta","style":{"code":true}},{"type":"text","text":" functions I think that'd solve this problem; the core of it is that "},{"type":"text","text":"beta(α′, β′) / beta(α, β)","style":{"code":true}},{"type":"text","text":" turns into 0/0 when both are actually very small quantities"}]}]}],"thread_ts":"1608326587.311700","parent_user_id":"U68M6ERG8"},{"client_msg_id":"FC97643C-4A8E-44DF-9CDB-77C5E63190A6","type":"message","text":"The first thing is using `logbeta` ","user":"U6C937ENB","ts":"1608327766.313900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KDjZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The first thing is using "},{"type":"text","text":"logbeta ","style":{"code":true}}]}]}],"thread_ts":"1608326587.311700","parent_user_id":"U68M6ERG8","reactions":[{"name":"100","users":["U68M6ERG8","U6CJRSR63"],"count":2}]},{"client_msg_id":"BE8446C5-CBC9-4549-8EB6-DC8B6CC3A437","type":"message","text":"<https://juliamath.github.io/SpecialFunctions.jl/dev/functions_overview/|https://juliamath.github.io/SpecialFunctions.jl/dev/functions_overview/>","user":"U6C937ENB","ts":"1608327772.314200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"InOlg","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://juliamath.github.io/SpecialFunctions.jl/dev/functions_overview/","text":"https://juliamath.github.io/SpecialFunctions.jl/dev/functions_overview/"}]}]}],"thread_ts":"1608326587.311700","parent_user_id":"U68M6ERG8"},{"client_msg_id":"c9966f83-37ba-49e2-aae6-2e921c54e5bc","type":"message","text":"Yes! I just realized that :smile:","user":"U68M6ERG8","ts":"1608327792.314400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V4Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes! I just realized that "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1608326587.311700","parent_user_id":"U68M6ERG8"},{"client_msg_id":"5161062b-c130-4ce9-904e-8f226992d853","type":"message","text":"There is a `logbeta` function and here I am computing `log(beta(...))` ... it works!","user":"U68M6ERG8","ts":"1608327808.314600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Z5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is a "},{"type":"text","text":"logbeta","style":{"code":true}},{"type":"text","text":" function and here I am computing "},{"type":"text","text":"log(beta(...))","style":{"code":true}},{"type":"text","text":" ... it works!"}]}]}],"thread_ts":"1608326587.311700","parent_user_id":"U68M6ERG8"},{"client_msg_id":"22876303-6ca4-4d1b-90c1-ab95e967d46c","type":"message","text":"the wonders and perils of numerical computing","user":"U68M6ERG8","ts":"1608327835.314800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Iwn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the wonders and perils of numerical computing"}]}]}],"thread_ts":"1608326587.311700","parent_user_id":"U68M6ERG8"},{"type":"message","text":"bayesian reasoning confirms that naming your dog Pugsley is a strong signal that it is a pug","files":[{"id":"F01HFNSDG92","created":1608328006,"timestamp":1608328006,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U68M6ERG8","editable":false,"size":68600,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01HFNSDG92/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01HFNSDG92/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01HFNSDG92-797551e672/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01HFNSDG92-797551e672/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01HFNSDG92-797551e672/image_360.png","thumb_360_w":360,"thumb_360_h":232,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01HFNSDG92-797551e672/image_480.png","thumb_480_w":480,"thumb_480_h":310,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01HFNSDG92-797551e672/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01HFNSDG92-797551e672/image_720.png","thumb_720_w":720,"thumb_720_h":465,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01HFNSDG92-797551e672/image_800.png","thumb_800_w":800,"thumb_800_h":516,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01HFNSDG92-797551e672/image_960.png","thumb_960_w":960,"thumb_960_h":619,"original_w":964,"original_h":622,"thumb_tiny":"AwAeADDSOe1J81KaarY4NADhn60tAOe2KKACiiigBKYOtP57Uc+1ADQ3+c0/OaTn2o59qAFopOfalGe9AH//2Q==","permalink":"https://julialang.slack.com/files/U68M6ERG8/F01HFNSDG92/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01HFNSDG92-f36dce3689","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"H4eO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"bayesian reasoning confirms that naming your dog Pugsley is a strong signal that it is a pug"}]}]}],"user":"U68M6ERG8","display_as_bot":false,"ts":"1608328065.315200","thread_ts":"1608326587.311700","parent_user_id":"U68M6ERG8","reactions":[{"name":"tada","users":["U6C937ENB","U6CJRSR63","U019K6Q9N15","UCZ7VBGUD"],"count":4},{"name":"mind_blown","users":["U019K6Q9N15","UJB9LTG5V"],"count":2}]}]