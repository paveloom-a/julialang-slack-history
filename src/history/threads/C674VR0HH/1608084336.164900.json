[{"client_msg_id":"c7002a13-d159-49e1-89a7-6372b86be5d6","type":"message","text":"<@U681ELA87> you described how to write arrow files from a bunch of CSV files just a couple of weeks ago, but it's already lost to the slack hole. I remember it had to do with `Tables.partitioner`, but I'm having issues. I currently have\n```Arrow.write(\"path/file.arrow\", Tables.partitioner(csvs) do file\n    df = CSV.File(file) |&gt; DataFrame\n    # some processing\n    return df\nend)```\nBut I'm having some issues. It's possible that the error is within my dataframe, but it looks like it's coming from Arrow - did I miss something? Should the call to `Arrow.write` come inside the partitioner loop?","user":"U8JP5B9T2","ts":"1608084336.164900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uz2Iu","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U681ELA87"},{"type":"text","text":" you described how to write arrow files from a bunch of CSV files just a couple of weeks ago, but it's already lost to the slack hole. I remember it had to do with "},{"type":"text","text":"Tables.partitioner","style":{"code":true}},{"type":"text","text":", but I'm having issues. I currently have\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Arrow.write(\"path/file.arrow\", Tables.partitioner(csvs) do file\n    df = CSV.File(file) |> DataFrame\n    # some processing\n    return df\nend)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"But I'm having some issues. It's possible that the error is within my dataframe, but it looks like it's coming from Arrow - did I miss something? Should the call to "},{"type":"text","text":"Arrow.write","style":{"code":true}},{"type":"text","text":" come inside the partitioner loop?"}]}]}],"thread_ts":"1608084336.164900","reply_count":10,"reply_users_count":2,"latest_reply":"1608129295.170700","reply_users":["U681ELA87","U8JP5B9T2"],"subscribed":false},{"client_msg_id":"B471BCD2-0DC1-4248-BBBA-BB4FD71BBC68","type":"message","text":"At first glance that looks right. What’s the error/issue you’re running into?","user":"U681ELA87","ts":"1608086170.165800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cz4Zr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"At first glance that looks right. What’s the error/issue you’re running into?"}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"91eddb14-70b2-438f-926f-412d537d7ac6","type":"message","text":"```ERROR: MethodError: no method matching String(::Int64)\nClosest candidates are:\n  String(::Arrow.FlatBuffers.Table, ::Any) at /home/kevin/.julia/packages/Arrow/CyJ4L/src/FlatBuffers/table.jl:62\n  String(::HTTP.Messages.Message) at /home/kevin/.julia/packages/HTTP/IAI92/src/Messages.jl:456\n  String(::CategoricalValue{var\"#s5\", R} where R&lt;:Integer where var\"#s5\"&lt;:AbstractString) at /home/kevin/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:95\n  ...\nStacktrace:\n  [1] fieldoffset(b::Arrow.FlatBuffers.Builder, name::Int64, col::Arrow.List{String, Int32, Arrow.ToList{UInt8, true, String, Int32}})\n    @ Arrow ~/.julia/packages/Arrow/CyJ4L/src/write.jl:313\n  [2] (::Arrow.var\"#74#75\"{Arrow.FlatBuffers.Builder, Arrow.Struct{Tuple{String, Symbol}, Tuple{Arrow.List{String, Int32, Arrow.ToList{UInt8, true, String, Int32}}, Arrow.List{String, Int32, Arrow.ToList{UInt8, true, String, Int32}}}}, Tuple{Int64, Int64}})(i::Int64)\n    @ Arrow ./none:0\n  [3] iterate\n#...```","user":"U8JP5B9T2","ts":"1608086343.166000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yym","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: MethodError: no method matching String(::Int64)\nClosest candidates are:\n  String(::Arrow.FlatBuffers.Table, ::Any) at /home/kevin/.julia/packages/Arrow/CyJ4L/src/FlatBuffers/table.jl:62\n  String(::HTTP.Messages.Message) at /home/kevin/.julia/packages/HTTP/IAI92/src/Messages.jl:456\n  String(::CategoricalValue{var\"#s5\", R} where R<:Integer where var\"#s5\"<:AbstractString) at /home/kevin/.julia/packages/CategoricalArrays/0ZAbp/src/value.jl:95\n  ...\nStacktrace:\n  [1] fieldoffset(b::Arrow.FlatBuffers.Builder, name::Int64, col::Arrow.List{String, Int32, Arrow.ToList{UInt8, true, String, Int32}})\n    @ Arrow ~/.julia/packages/Arrow/CyJ4L/src/write.jl:313\n  [2] (::Arrow.var\"#74#75\"{Arrow.FlatBuffers.Builder, Arrow.Struct{Tuple{String, Symbol}, Tuple{Arrow.List{String, Int32, Arrow.ToList{UInt8, true, String, Int32}}, Arrow.List{String, Int32, Arrow.ToList{UInt8, true, String, Int32}}}}, Tuple{Int64, Int64}})(i::Int64)\n    @ Arrow ./none:0\n  [3] iterate\n#..."}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"260ea8ce-c1c5-4b30-b43a-208f6bc7d518","type":"message","text":"Oh, hmm, this happens if I just try to write the first one, so it's not actually my iterator","user":"U8JP5B9T2","ts":"1608086796.167600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N4=RT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, hmm, this happens if I just try to write the first one, so it's not actually my iterator"}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"DEE882CE-25E3-40CC-B574-AA199EA79E13","type":"message","text":"Oof, that’s a bad one. Could you share a sample of the file at all? Maybe email it to me? Looks like there’s a specific column that isn’t playing nicely ","user":"U681ELA87","ts":"1608086798.167900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HPY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oof, that’s a bad one. Could you share a sample of the file at all? Maybe email it to me? Looks like there’s a specific column that isn’t playing nicely "}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"ec92219a-fab9-459a-8ace-8c2f1c95fd17","type":"message","text":"mmm... yes, let me try to boil it down to a MWE - The \"some processing\" bit is non-trivial","user":"U8JP5B9T2","ts":"1608086899.168100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hus","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"mmm... yes, let me try to boil it down to a MWE - The \"some processing\" bit is non-trivial"}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"ABA8DAC3-CF21-401F-9484-050A7E698EE9","type":"message","text":"I might be able to reproduce from the backtrace. Putting the kids to bed, but once I’m done I’ll take a deeper look","user":"U681ELA87","ts":"1608087064.169100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Uvhy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I might be able to reproduce from the backtrace. Putting the kids to bed, but once I’m done I’ll take a deeper look"}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"72e1f019-46cb-496c-bf1f-c8f5de4b61c8","type":"message","text":"Oh - this may by my fault - I put a tuple into a column when I meant to put a string","user":"U8JP5B9T2","ts":"1608087089.169300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zesh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh - this may by my fault - I put a tuple into a column when I meant to put a string"}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"0083ad05-a3a1-4d74-8f42-b5af354f4213","type":"message","text":"Yeah, so here's a MWE:\n\n```df = DataFrame(a=[(\"thing\", :thing), (\"otherthing\", :other)])\nArrow.write(\"test.arrow\",df)```\n:picard_facepalm: Not sure if Arrow is meant to handle something like this, but it's not what I need anyway, so don't solve it on my account!","user":"U8JP5B9T2","ts":"1608087349.169500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W9L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, so here's a MWE:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df = DataFrame(a=[(\"thing\", :thing), (\"otherthing\", :other)])\nArrow.write(\"test.arrow\",df)"}]},{"type":"rich_text_section","elements":[{"type":"emoji","name":"picard_facepalm"},{"type":"text","text":" Not sure if Arrow is meant to handle something like this, but it's not what I need anyway, so don't solve it on my account!"}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"3abc5ee9-23ac-4535-b997-3de92de81e7b","type":"message","text":"Ah yes, we've run into this before; so far, Arrow.jl is geared pretty strictly towards the standard set of arrow types, and not meant as a general serialization library, so it tends to have a hard time with anything non array/dict/struct/namedtuple/string/primitive types. That said, it seems like we should probably support serializing tuples as structs, so I'll look into what that would take.","user":"U681ELA87","ts":"1608091974.169700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rxgb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah yes, we've run into this before; so far, Arrow.jl is geared pretty strictly towards the standard set of arrow types, and not meant as a general serialization library, so it tends to have a hard time with anything non array/dict/struct/namedtuple/string/primitive types. That said, it seems like we should probably support serializing tuples as structs, so I'll look into what that would take."}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2","reactions":[{"name":"+1","users":["U82LX4ACB","U8JP5B9T2","U01C15GH58B"],"count":3}]},{"client_msg_id":"8c631310-b4d8-4148-b42c-103911edbc5f","type":"message","text":"Neat, thanks! Meanwhile - after separating into components and making two columns, it works beautifully :smile:","user":"U8JP5B9T2","ts":"1608129295.170700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V1r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Neat, thanks! Meanwhile - after separating into components and making two columns, it works beautifully "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1608084336.164900","parent_user_id":"U8JP5B9T2"}]