[{"type":"message","text":"Day 19 was good stress test for Julia's regexp","files":[{"id":"F01J11VF0HE","created":1608484113,"timestamp":1608484113,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01AVQSBTLJ","editable":false,"size":24476,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01J11VF0HE/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01J11VF0HE/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01J11VF0HE-ff370c624b/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01J11VF0HE-ff370c624b/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01J11VF0HE-ff370c624b/image_360.png","thumb_360_w":360,"thumb_360_h":82,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01J11VF0HE-ff370c624b/image_480.png","thumb_480_w":480,"thumb_480_h":109,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01J11VF0HE-ff370c624b/image_160.png","original_w":671,"original_h":152,"thumb_tiny":"AwAKADCovNIR75pU6fhQv8VACbR60hGPWnGmt1oATB9DSUUtAH//2Q==","permalink":"https://julialang.slack.com/files/U01AVQSBTLJ/F01J11VF0HE/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01J11VF0HE-58a79f690b","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"DaGA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Day 19 was good stress test for Julia's regexp"}]}]}],"user":"U01AVQSBTLJ","display_as_bot":false,"ts":"1608484116.232400","thread_ts":"1608484116.232400","reply_count":15,"reply_users_count":5,"latest_reply":"1608589046.239300","reply_users":["UH24GRBLL","USU9FRPEU","U01AVQSBTLJ","U73KENNG4","UP0P065ME"],"subscribed":false},{"client_msg_id":"e3b90968-6a57-4825-810a-a5b61e1d4981","type":"message","text":"less julia's and more the lib we're using :/","user":"UH24GRBLL","ts":"1608484455.232700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fOG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"less julia's and more the lib we're using :/"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"91702739-c042-473d-ad86-1d8282b7fc45","type":"message","text":"It is possible if you know your recursive regex well","user":"USU9FRPEU","ts":"1608497759.232900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BLe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is possible if you know your recursive regex well"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"9991a9a0-3348-46b8-aad9-080a3cca077a","type":"message","text":"or have more RAM than usual","user":"UH24GRBLL","ts":"1608498080.233100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Rto","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or have more RAM than usual"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"9afc8acf-3f8a-4dd1-b733-c6f5e2d55655","type":"message","text":"<@USU9FRPEU> yeah, eventually recursive regex worked for me as well, the problems were from more naive approach.","user":"U01AVQSBTLJ","ts":"1608500058.233300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oWYtj","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":" yeah, eventually recursive regex worked for me as well, the problems were from more naive approach."}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"type":"message","text":":two_hearts:","files":[{"id":"F01HBH7KDRR","created":1608500618,"timestamp":1608500618,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01AVQSBTLJ","editable":false,"size":53714,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01HBH7KDRR/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01HBH7KDRR/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01HBH7KDRR-55423e4fc0/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01HBH7KDRR-55423e4fc0/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01HBH7KDRR-55423e4fc0/image_360.png","thumb_360_w":360,"thumb_360_h":241,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01HBH7KDRR-55423e4fc0/image_480.png","thumb_480_w":480,"thumb_480_h":321,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01HBH7KDRR-55423e4fc0/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01HBH7KDRR-55423e4fc0/image_720.png","thumb_720_w":720,"thumb_720_h":482,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01HBH7KDRR-55423e4fc0/image_800.png","thumb_800_w":800,"thumb_800_h":536,"original_w":805,"original_h":539,"thumb_tiny":"AwAgADCnRRRQAtJRRQAUUUUAFFFFABRRRQAUUUUAf//Z","permalink":"https://julialang.slack.com/files/U01AVQSBTLJ/F01HBH7KDRR/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01HBH7KDRR-a00be0d1d5","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"UJw","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"two_hearts"}]}]}],"user":"U01AVQSBTLJ","display_as_bot":false,"ts":"1608500638.233500","thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"025c02c9-f974-4165-a217-46f0832617dd","type":"message","text":"I went the other way and created a library of all 2 million permissible combinations :slightly_smiling_face: Encoded as bits in an int so it was pretty quick.","user":"U73KENNG4","ts":"1608502416.233900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rnp3x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I went the other way and created a library of all 2 million permissible combinations "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" Encoded as bits in an int so it was pretty quick."}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ","reactions":[{"name":"open_mouth","users":["U8T0YV7QC","ULGMQ3LCB","UP0P065ME"],"count":3}]},{"client_msg_id":"8e55c9cf-905d-4d27-aa63-06b1f9027674","type":"message","text":"but no regex at all","user":"U73KENNG4","ts":"1608502426.234100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XuYcu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but no regex at all"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"c53e5480-db73-4edf-bff7-66c87b6bd225","type":"message","text":"<@U73KENNG4> - Did your method work for part 2? I was really hoping to see some solutions like this work out.","user":"UP0P065ME","ts":"1608572447.235000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cxg","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U73KENNG4"},{"type":"text","text":" - Did your method work for part 2? I was really hoping to see some solutions like this work out."}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"384604F0-AB43-46B0-B623-B3097AA60315","type":"message","text":"im guessing it will if i just cap length but ill only have time to try after christmas :) trying to work out if memoization will be broken..,","user":"U73KENNG4","ts":"1608575785.238000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PQs6v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"im guessing it will if i just cap length but ill only have time to try after christmas :) trying to work out if memoization will be broken..,"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"4e39cca4-7101-442f-8629-352410586d01","type":"message","text":"<@UP0P065ME> this was my code for part 1 if you’re interested\n```using OffsetArrays, Memoize\n\nparsetask(task) = parse(Int128, map(x-&gt; x == 'a' ? '0' : '1', \"b\"*task), base = 2)\n\nfunction parseinput(input)\n    rulestring, taskstring = (split(x, \"\\n\", keepempty = false) for x in split(input, \"\\n\\n\"))\n    rules = OffsetArray(fill(\"\", length(rulestring)), -1)\n    for i in rulestring\n        pos, rule = split(i, \":\")\n        rules[parse(Int, pos)] = strip(rule)\n    end\n    tasks = parsetask.(taskstring)\n    rules, tasks\nend\n\n@memoize msb(x) = let vs = Int128(2) .^(1:89)\n    ret = findfirst(n-&gt; n&gt;(x), vs)-1\nend\n\nfunction concatenate(set1, set2)\n    ret = Set{Int128}()\n    for s1 in set1, s2 in set2\n        m1, m2 = msb(s1), msb(s2)\n        m1 + m2 &gt; 90 &amp;&amp; break\n        push!(ret, ((s1 &amp; ~(1 &lt;&lt; m1)) &lt;&lt; m2) | (s2 &amp; ~(1 &lt;&lt; m2)) + 1 &lt;&lt; (m1 + m2)) \n    end\n    ret\nend\n\n@memoize function parserule(rule, rules)\n    ors = split(rule, \" | \")\n    length(ors) == 2 &amp;&amp; return union(parserule(ors[1], rules), parserule(ors[2], rules))\n    afters = split(only(ors), \" \")\n    length(afters) &gt; 1 &amp;&amp; return foldl(concatenate, parserule(after, rules) for after in afters)\n    rule = only(afters)\n    rule[1] in '0':'9' &amp;&amp; return parserule(rules[parse(Int, rule)], rules)\n    return Set{Int128}([rule[2] == 'a' ? 2 : 3])\nend\n\ninput = read(\"2020/data/day_19.txt\", String)\nrules, tasks = parseinput(input)\nvalids = parserule(rules[0], rules)\nsum(task in valids for task in tasks)```","user":"U73KENNG4","ts":"1608581682.238200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8qThl","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UP0P065ME"},{"type":"text","text":" this was my code for part 1 if you’re interested\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using OffsetArrays, Memoize\n\nparsetask(task) = parse(Int128, map(x-> x == 'a' ? '0' : '1', \"b\"*task), base = 2)\n\nfunction parseinput(input)\n    rulestring, taskstring = (split(x, \"\\n\", keepempty = false) for x in split(input, \"\\n\\n\"))\n    rules = OffsetArray(fill(\"\", length(rulestring)), -1)\n    for i in rulestring\n        pos, rule = split(i, \":\")\n        rules[parse(Int, pos)] = strip(rule)\n    end\n    tasks = parsetask.(taskstring)\n    rules, tasks\nend\n\n@memoize msb(x) = let vs = Int128(2) .^(1:89)\n    ret = findfirst(n-> n>(x), vs)-1\nend\n\nfunction concatenate(set1, set2)\n    ret = Set{Int128}()\n    for s1 in set1, s2 in set2\n        m1, m2 = msb(s1), msb(s2)\n        m1 + m2 > 90 && break\n        push!(ret, ((s1 & ~(1 << m1)) << m2) | (s2 & ~(1 << m2)) + 1 << (m1 + m2)) \n    end\n    ret\nend\n\n@memoize function parserule(rule, rules)\n    ors = split(rule, \" | \")\n    length(ors) == 2 && return union(parserule(ors[1], rules), parserule(ors[2], rules))\n    afters = split(only(ors), \" \")\n    length(afters) > 1 && return foldl(concatenate, parserule(after, rules) for after in afters)\n    rule = only(afters)\n    rule[1] in '0':'9' && return parserule(rules[parse(Int, rule)], rules)\n    return Set{Int128}([rule[2] == 'a' ? 2 : 3])\nend\n\ninput = read(\"2020/data/day_19.txt\", String)\nrules, tasks = parseinput(input)\nvalids = parserule(rules[0], rules)\nsum(task in valids for task in tasks)"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"922c342e-9c20-4129-a120-969f5a0f0aa4","type":"message","text":"I just encode “b”s as 1's and store it as Int128 - with a sentinel bit first to mark where 0's begin (for concatenation). It takes less than a second to run","user":"U73KENNG4","ts":"1608581779.238400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PRI=k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just encode “b”s as 1's and store it as Int128 - with a sentinel bit first to mark where 0's begin (for concatenation). It takes less than a second to run"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"fa8908fc-88be-462a-89ae-ccd2f79fa60a","type":"message","text":"I guess the regex is a lot faster still of course","user":"U73KENNG4","ts":"1608581798.238600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YAhez","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess the regex is a lot faster still of course"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"7380ae3c-474d-4d60-85ed-8120a66396e2","type":"message","text":"Yeah, I appreciate this approach though. What irks me about this particular problem is that it seems against the AoC language-agnosticism to practically requires regex. You’re keeping our AoC holiday spirit alive by bucking the trend :+1:","user":"UP0P065ME","ts":"1608581997.238800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J98d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I appreciate this approach though. What irks me about this particular problem is that it seems against the AoC language-agnosticism to practically requires regex. You’re keeping our AoC holiday spirit alive by bucking the trend "},{"type":"emoji","name":"+1"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ","reactions":[{"name":"sparkling_heart","users":["U73KENNG4"],"count":1}]},{"client_msg_id":"d26b1679-4bab-4dcb-8f3e-a3b0a4cb1d3f","type":"message","text":"I started with non-regex but after spending 2h on it I gave up. This basically needs re-inventing a primitive regex engine that supports recursion. More of a side project than puzzle :smile:","user":"U01AVQSBTLJ","ts":"1608589006.239100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fH=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I started with non-regex but after spending 2h on it I gave up. This basically needs re-inventing a primitive regex engine that supports recursion. More of a side project than puzzle "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"},{"client_msg_id":"3ce6c6c2-ea25-447f-b064-3b778f3694e2","type":"message","text":"but I appreciate the problem, it helped me learn a lot about optimizing regexps.","user":"U01AVQSBTLJ","ts":"1608589046.239300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FFI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I appreciate the problem, it helped me learn a lot about optimizing regexps."}]}]}],"thread_ts":"1608484116.232400","parent_user_id":"U01AVQSBTLJ"}]