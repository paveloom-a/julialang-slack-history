[{"client_msg_id":"8fbf43e1-574f-4e16-97ec-71fb6c3218ea","type":"message","text":"Are there usually issues with type inference when shadowing local variables? Consider this relatively nonsensical example:\n```module Stuff\nfunction solve_b(filename)\n    your = Vector{Int}()\n    _nearby = Vector{Vector{Int}}()\n    ruledict = Dict{String, Vector{UnitRange}}()\n    nearby = filter(true, _nearby)\n    Dict(\n        rulename =&gt; Set(filter(_ -&gt; all(true, nearby), 1:length(your)))\n        for rulename in ruledict\n    )\nend\nend```\nThere are no issues when you run `@code_warntype Stuff.solve_b(\"a\")`, but if `_nearby` is changed to `nearby`, then it infers `nearby@_6::Core.Box` and `nearby@_8::Union{}` instead of `Vector{Vector{Int64}}` as it's supposed to.","user":"UC81ESVH6","ts":"1608159805.120800","team":"T68168MUP","edited":{"user":"UC81ESVH6","ts":"1608161244.000000"},"blocks":[{"type":"rich_text","block_id":"FuXcB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there usually issues with type inference when shadowing local variables? Consider this relatively nonsensical example:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"module Stuff\nfunction solve_b(filename)\n    your = Vector{Int}()\n    _nearby = Vector{Vector{Int}}()\n    ruledict = Dict{String, Vector{UnitRange}}()\n    nearby = filter(true, _nearby)\n    Dict(\n        rulename => Set(filter(_ -> all(true, nearby), 1:length(your)))\n        for rulename in ruledict\n    )\nend\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"There are no issues when you run "},{"type":"text","text":"@code_warntype Stuff.solve_b(\"a\")","style":{"code":true}},{"type":"text","text":", but if "},{"type":"text","text":"_nearby","style":{"code":true}},{"type":"text","text":" is changed to "},{"type":"text","text":"nearby","style":{"code":true}},{"type":"text","text":", then it infers "},{"type":"text","text":"nearby@_6::Core.Box","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"nearby@_8::Union{}","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"Vector{Vector{Int64}}","style":{"code":true}},{"type":"text","text":" as it's supposed to."}]}]}],"thread_ts":"1608159805.120800","reply_count":3,"reply_users_count":1,"latest_reply":"1608163294.130800","reply_users":["U67BJLYCS"],"subscribed":false},{"client_msg_id":"14635f05-9d49-40a2-9e0e-12e892c547e1","type":"message","text":"yes that is a known limitation","user":"U67BJLYCS","ts":"1608163277.130400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RO0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes that is a known limitation"}]}]}],"thread_ts":"1608159805.120800","parent_user_id":"UC81ESVH6"},{"client_msg_id":"8abcfd60-3f57-4108-aada-b9d2bd59e453","type":"message","text":"`let nearby=nearby`","user":"U67BJLYCS","ts":"1608163285.130600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qegB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let nearby=nearby","style":{"code":true}}]}]}],"thread_ts":"1608159805.120800","parent_user_id":"UC81ESVH6"},{"client_msg_id":"c26b0cf3-8410-43a7-99c5-efba0edd7650","type":"message","text":"is the canonical fix","user":"U67BJLYCS","ts":"1608163294.130800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IfDYK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is the canonical fix"}]}]}],"thread_ts":"1608159805.120800","parent_user_id":"UC81ESVH6"}]