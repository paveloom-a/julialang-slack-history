[{"client_msg_id":"c27f243d-f400-440d-bef8-87c8a780b127","type":"message","text":"Hi everyone, so what is the recommended julia package to use for AWS? Because <https://github.com/JuliaCloud/AWS.jl> says it replaces <https://github.com/JuliaCloud/AWSCore.jl>, but at the same time AWSCore seems to have all/a lot of documentation whereas I am struggling to figure out how to even find which functions I can call in AWS.jl without having to dive into source code essentially","user":"U01C2AJ9F63","ts":"1608723070.156900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mUl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi everyone, so what is the recommended julia package to use for AWS? Because "},{"type":"link","url":"https://github.com/JuliaCloud/AWS.jl"},{"type":"text","text":" says it replaces "},{"type":"link","url":"https://github.com/JuliaCloud/AWSCore.jl"},{"type":"text","text":", but at the same time AWSCore seems to have all/a lot of documentation whereas I am struggling to figure out how to even find which functions I can call in AWS.jl without having to dive into source code essentially"}]}]}]},{"client_msg_id":"16df51a1-3007-49c5-9d03-3e7407ffeeb3","type":"message","text":"Even allowing everything doesn't help?\n```\"Effect\": \"Allow\",\n            \"Action\": [\n                \"*\"\n            ],```","user":"U7PGB5DU3","ts":"1607966581.152100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8hot","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Even allowing everything doesn't help?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\"Effect\": \"Allow\",\n            \"Action\": [\n                \"*\"\n            ],"}]}]}],"thread_ts":"1607966581.152100","reply_count":17,"reply_users_count":3,"latest_reply":"1607975076.155400","reply_users":["ULDQSHD41","U7PGB5DU3","U69J94HT9"],"subscribed":false},{"client_msg_id":"b062f66b-3936-41c1-a70f-2c0e5041f8f7","type":"message","text":"It works fine from my machine, but not from the Pi...","user":"U7PGB5DU3","ts":"1607966003.151600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pZtb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It works fine from my machine, but not from the Pi..."}]}]}]},{"client_msg_id":"7679eaba-29da-4afb-af99-902569b6d544","type":"message","text":"I'm having new problem uploading a tarball to S3:\n```julia&gt; cp(source, destination)\nERROR: AWS.AWSExceptions.AWSException(\"403\", \"AWSException\", Dict{String,Dict}(), HTTP.ExceptionRequest.StatusError(403, \"HEAD\", \"/dackebeetle/2020-12-14T16:38:46.662.tar\", HTTP.Messages.Response:\n\"\"\"\nHTTP/1.1 403 Forbidden\nx-amz-request-id: 345752ABEB0E778D\nx-amz-id-2: r26YRQX+HJvRjMYjFqancyTWeDCjCScIUbCvnWO41BOVERzEIuPvATRn3t8mXV9Kx2CIvEFMYkk=\nContent-Type: application/xml\nTransfer-Encoding: chunked\nDate: Mon, 14 Dec 2020 17:06:20 GMT\nServer: AmazonS3\n\n\"\"\"))\nStacktrace:\n [1] #request#1(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:iofunction, :require_ssl_verification, :response_stream),Tuple{Nothing,Bool,Nothing}}}, ::typeof(HTTP.request), ::Type{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N) at /home/pi/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:22\n [2] #request#1(::VersionNumber, ::String, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :response_stream),Tuple{Bool,Nothing}}}, ::typeof(HTTP.request), ::Type{MessageLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0 (repeats 2 times)\n [3] (::HTTP.var\"#kw##request\")(::NamedTuple{(:require_ssl_verification, :response_stream),Tuple{Bool,Nothing}}, ::typeof(HTTP.request), ::Type{BasicAuthLayer{MessageLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0\n [4] _http_request(::AWS.Request) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:296\n [5] macro expansion at /home/pi/.julia/packages/Mocking/U41JO/src/mock.jl:29 [inlined]\n [6] macro expansion at /home/pi/.julia/packages/Retry/vS1bg/src/repeat_try.jl:192 [inlined]\n [7] #submit_request#30(::Bool, ::typeof(AWS.submit_request), ::AWS.AWSConfig, ::AWS.Request) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:355\n [8] (::AWS.var\"#kw##submit_request\")(::NamedTuple{(:return_headers,),Tuple{Bool}}, ::typeof(AWS.submit_request), ::AWS.AWSConfig, ::AWS.Request) at ./none:0\n [9] #_#31(::AWS.AWSConfig, ::AWS.RestXMLService, ::String, ::String, ::Dict{String,Any}) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:557\n [10] Any at ./none:0 [inlined] (repeats 2 times)\n [11] #head_object#107 at /home/pi/.julia/packages/AWS/NxxtR/src/services/s3.jl:897 [inlined]\n [12] #head_object at ./none:0 [inlined]\n [13] #s3_get_meta#8(::String, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(s3_get_meta), ::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:136\n [14] #s3_get_meta at ./none:0 [inlined]\n [15] macro expansion at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:152 [inlined]\n [16] macro expansion at /home/pi/.julia/packages/Retry/vS1bg/src/repeat_try.jl:192 [inlined]\n [17] #s3_exists#10(::String, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(s3_exists), ::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:151\n [18] s3_exists(::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:151\n [19] exists(::S3Path) at /home/pi/.julia/packages/AWSS3/eJYxO/src/s3path.jl:165\n [20] #cp#16(::Bool, ::Bool, ::typeof(cp), ::PosixPath, ::S3Path) at /home/pi/.julia/packages/FilePathsBase/LLCDa/src/path.jl:545\n [21] cp(::PosixPath, ::S3Path) at /home/pi/.julia/packages/FilePathsBase/LLCDa/src/path.jl:545\n [22] top-level scope at REPL[40]:1```\nNote though that I'm attempting to do this from a RPI which I simply copied the credentials file to (i.e. `~/.aws/credentials`). Not sure what permissions etc the policy I'm using needs now.","user":"U7PGB5DU3","ts":"1607965714.151100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0a/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm having new problem uploading a tarball to S3:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> cp(source, destination)\nERROR: AWS.AWSExceptions.AWSException(\"403\", \"AWSException\", Dict{String,Dict}(), HTTP.ExceptionRequest.StatusError(403, \"HEAD\", \"/dackebeetle/2020-12-14T16:38:46.662.tar\", HTTP.Messages.Response:\n\"\"\"\nHTTP/1.1 403 Forbidden\nx-amz-request-id: 345752ABEB0E778D\nx-amz-id-2: r26YRQX+HJvRjMYjFqancyTWeDCjCScIUbCvnWO41BOVERzEIuPvATRn3t8mXV9Kx2CIvEFMYkk=\nContent-Type: application/xml\nTransfer-Encoding: chunked\nDate: Mon, 14 Dec 2020 17:06:20 GMT\nServer: AmazonS3\n\n\"\"\"))\nStacktrace:\n [1] #request#1(::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:iofunction, :require_ssl_verification, :response_stream),Tuple{Nothing,Bool,Nothing}}}, ::typeof(HTTP.request), ::Type{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N) at /home/pi/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:22\n [2] #request#1(::VersionNumber, ::String, ::Nothing, ::Nothing, ::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:require_ssl_verification, :response_stream),Tuple{Bool,Nothing}}}, ::typeof(HTTP.request), ::Type{MessageLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0 (repeats 2 times)\n [3] (::HTTP.var\"#kw##request\")(::NamedTuple{(:require_ssl_verification, :response_stream),Tuple{Bool,Nothing}}, ::typeof(HTTP.request), ::Type{BasicAuthLayer{MessageLayer{ExceptionLayer{ConnectionPoolLayer{StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at ./none:0\n [4] _http_request(::AWS.Request) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:296\n [5] macro expansion at /home/pi/.julia/packages/Mocking/U41JO/src/mock.jl:29 [inlined]\n [6] macro expansion at /home/pi/.julia/packages/Retry/vS1bg/src/repeat_try.jl:192 [inlined]\n [7] #submit_request#30(::Bool, ::typeof(AWS.submit_request), ::AWS.AWSConfig, ::AWS.Request) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:355\n [8] (::AWS.var\"#kw##submit_request\")(::NamedTuple{(:return_headers,),Tuple{Bool}}, ::typeof(AWS.submit_request), ::AWS.AWSConfig, ::AWS.Request) at ./none:0\n [9] #_#31(::AWS.AWSConfig, ::AWS.RestXMLService, ::String, ::String, ::Dict{String,Any}) at /home/pi/.julia/packages/AWS/NxxtR/src/AWS.jl:557\n [10] Any at ./none:0 [inlined] (repeats 2 times)\n [11] #head_object#107 at /home/pi/.julia/packages/AWS/NxxtR/src/services/s3.jl:897 [inlined]\n [12] #head_object at ./none:0 [inlined]\n [13] #s3_get_meta#8(::String, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(s3_get_meta), ::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:136\n [14] #s3_get_meta at ./none:0 [inlined]\n [15] macro expansion at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:152 [inlined]\n [16] macro expansion at /home/pi/.julia/packages/Retry/vS1bg/src/repeat_try.jl:192 [inlined]\n [17] #s3_exists#10(::String, ::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::typeof(s3_exists), ::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:151\n [18] s3_exists(::AWS.AWSConfig, ::SubString{String}, ::String) at /home/pi/.julia/packages/AWSS3/eJYxO/src/AWSS3.jl:151\n [19] exists(::S3Path) at /home/pi/.julia/packages/AWSS3/eJYxO/src/s3path.jl:165\n [20] #cp#16(::Bool, ::Bool, ::typeof(cp), ::PosixPath, ::S3Path) at /home/pi/.julia/packages/FilePathsBase/LLCDa/src/path.jl:545\n [21] cp(::PosixPath, ::S3Path) at /home/pi/.julia/packages/FilePathsBase/LLCDa/src/path.jl:545\n [22] top-level scope at REPL[40]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Note though that I'm attempting to do this from a RPI which I simply copied the credentials file to (i.e. "},{"type":"text","text":"~/.aws/credentials","style":{"code":true}},{"type":"text","text":"). Not sure what permissions etc the policy I'm using needs now."}]}]}]},{"client_msg_id":"e9a6ae67-3eed-4004-900b-ddf0494c99f2","type":"message","text":"Ah, I think I figured it out. `HTTP.escapeuri` is doing the right thing and escaping the _whole_ URI, including any forward slashes in the key. My URIs are really of the form `a/b/c.avi`, so I need to split on `/`, map the parts using `HTTP.escapeuri` and the join with `/`.","user":"U01537M2E9W","ts":"1607959497.149400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0=9I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, I think I figured it out. "},{"type":"text","text":"HTTP.escapeuri","style":{"code":true}},{"type":"text","text":" is doing the right thing and escaping the "},{"type":"text","text":"whole","style":{"italic":true}},{"type":"text","text":" URI, including any forward slashes in the key. My URIs are really of the form "},{"type":"text","text":"a/b/c.avi","style":{"code":true}},{"type":"text","text":", so I need to split on "},{"type":"text","text":"/","style":{"code":true}},{"type":"text","text":", map the parts using "},{"type":"text","text":"HTTP.escapeuri","style":{"code":true}},{"type":"text","text":" and the join with "},{"type":"text","text":"/","style":{"code":true}},{"type":"text","text":"."}]}]}]},{"client_msg_id":"eeb918c0-673b-4c15-bfd7-26f5e612d465","type":"message","text":"Off hand might be an issue w/ the space character. I can take a look at this some time in the future, quite busy this week.\n\nTry and reference it in `S3.get_object` using `%20` instead of ` `","user":"ULDQSHD41","ts":"1607959160.147200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fcG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Off hand might be an issue w/ the space character. I can take a look at this some time in the future, quite busy this week.\n\nTry and reference it in "},{"type":"text","text":"S3.get_object","style":{"code":true}},{"type":"text","text":" using "},{"type":"text","text":"%20","style":{"code":true}},{"type":"text","text":" instead of ` `"}]}]}]},{"client_msg_id":"897a3a23-2684-46a4-b2d3-531ac9f32160","type":"message","text":"And here is a key that fails with and without escaping: `0 2016-12-28T113155+0100 4.1.avi`","user":"U01537M2E9W","ts":"1607959152.147000","team":"T68168MUP","edited":{"user":"U01537M2E9W","ts":"1607959190.000000"},"blocks":[{"type":"rich_text","block_id":"JjCo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And here is a key that fails with and without escaping: "},{"type":"text","text":"0 2016-12-28T113155+0100 4.1.avi","style":{"code":true}}]}]}]},{"client_msg_id":"68df9b3a-0087-4454-825e-3fa08651e6d6","type":"message","text":"Hmm.. here is a key that works without escaping but fails with escaping: `1.8 2016-10-27T151720-0400.avi`","user":"U01537M2E9W","ts":"1607958766.146000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+6mYz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm.. here is a key that works without escaping but fails with escaping: "},{"type":"text","text":"1.8 2016-10-27T151720-0400.avi","style":{"code":true}}]}]}]},{"client_msg_id":"48ad3055-0ce9-4f50-baeb-e1fab0bec19d","type":"message","text":"Yep, `HTTP.escapeuri` does the trick.","user":"U01537M2E9W","ts":"1607958372.145500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kgu3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yep, "},{"type":"text","text":"HTTP.escapeuri","style":{"code":true}},{"type":"text","text":" does the trick."}]}]}]},{"client_msg_id":"ab6491f4-680e-4744-81d6-871b7942d007","type":"message","text":"Maybe this is related to <https://github.com/JuliaCloud/AWS.jl/issues/254>","user":"U01537M2E9W","ts":"1607958322.145300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"30d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe this is related to "},{"type":"link","url":"https://github.com/JuliaCloud/AWS.jl/issues/254"}]}]}]},{"client_msg_id":"84ff651c-eeac-411f-bc40-f1ac93d60153","type":"message","text":"I think it is the `+` character. I copied the S3 object to a new key without any `+` in the key and the error is gone. This won't work as a workaround, though, so I would like to see if we can debug/fix the way the signature.","user":"U01537M2E9W","ts":"1607958187.145100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hx2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it is the "},{"type":"text","text":"+","style":{"code":true}},{"type":"text","text":" character. I copied the S3 object to a new key without any "},{"type":"text","text":"+","style":{"code":true}},{"type":"text","text":" in the key and the error is gone. This won't work as a workaround, though, so I would like to see if we can debug/fix the way the signature."}]}]}]},{"client_msg_id":"ce036d57-9276-418f-912c-d38703f2fafe","type":"message","text":"I am having trouble with a `SignatureDoesNotMatch` error when calling `S3.get_object`. With some keys, everything works as expected. However, with a key containing this substring, I get the error: `0 2016-12-28T113155+0100 4.1.avi`. Maybe it has something to do with the characters in that key?","user":"U01537M2E9W","ts":"1607957929.144000","team":"T68168MUP","edited":{"user":"U01537M2E9W","ts":"1607957986.000000"},"blocks":[{"type":"rich_text","block_id":"u6zCx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am having trouble with a "},{"type":"text","text":"SignatureDoesNotMatch","style":{"code":true}},{"type":"text","text":" error when calling "},{"type":"text","text":"S3.get_object","style":{"code":true}},{"type":"text","text":". With some keys, everything works as expected. However, with a key containing this substring, I get the error: "},{"type":"text","text":"0 2016-12-28T113155+0100 4.1.avi","style":{"code":true}},{"type":"text","text":". Maybe it has something to do with the characters in that key?"}]}]}]}]