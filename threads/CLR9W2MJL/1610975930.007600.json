[{"client_msg_id":"a7a1bd68-37e3-45a6-b4d4-ce4b3b23440e","type":"message","text":"<@UFU63RJRY> since you had mentioned Stan...\n<https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282>\n\nOn Twitter, I asked Ivan about using this to call Stan from Julia. His response:\n&gt; Yep, that's the plan! For now I'm going to try piping it through cppyy and PyCall and sometime later write direct Julia-C++ wrappers.","user":"U81PB6N77","ts":"1610975930.007600","team":"T68168MUP","attachments":[{"service_name":"The Stan Forums","title":"Interface to Stan's algorithms from C++ and beyond","title_link":"https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282","text":"Hello everyone! I wanted to share with you my work on trying to use Stan algorithms without Stan-Math and .stan files. Not relying on .stan files is relatively easy, just code up a header that looks similar to what stanc generates using stan::math::var in log_prob and done. Nothing much gained at this step. Stan-Math obviously intervenes into Stan a bit more deeply but luckily not so much. Stan is really a great example of modular development. I really enjoyed (and learned a lot) navigating t...","fallback":"The Stan Forums: Interface to Stan's algorithms from C++ and beyond","thumb_url":"https://aws1.discourse-cdn.com/standard14/uploads/mc_stan/original/2X/7/71f59fcb2f604f4a152dae417f8cc17739aa7b50.png","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"4 :heart:","short":true}],"ts":1610920383,"from_url":"https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282","thumb_width":375,"thumb_height":376,"service_icon":"https://aws1.discourse-cdn.com/standard14/uploads/mc_stan/optimized/2X/b/b7b51b4b69d8d91ab67fe1889d27fd94f338d9ee_2_180x180.png","id":1,"original_url":"https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282"}],"blocks":[{"type":"rich_text","block_id":"HUB","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UFU63RJRY"},{"type":"text","text":" since you had mentioned Stan...\n"},{"type":"link","url":"https://discourse.mc-stan.org/t/interface-to-stans-algorithms-from-c-and-beyond/20282"},{"type":"text","text":"\n\nOn Twitter, I asked Ivan about using this to call Stan from Julia. His response:\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Yep, that's the plan! For now I'm going to try piping it through cppyy and PyCall and sometime later write direct Julia-C++ wrappers."}]}]}],"thread_ts":"1610975930.007600","reply_count":1,"reply_users_count":1,"latest_reply":"1611065603.010400","reply_users":["UFU63RJRY"],"subscribed":false,"reactions":[{"name":"star-struck","users":["UDSU53PEG","U01A08JMUKT"],"count":2}]},{"client_msg_id":"9eaef38c-45de-4fe9-9f7a-97cee5e1e26b","type":"message","text":"Interesting. This could be useful for comparing the Julia samplers against Stan.","user":"UFU63RJRY","ts":"1611065603.010400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SY36","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting. This could be useful for comparing the Julia samplers against Stan."}]}]}],"thread_ts":"1610975930.007600","parent_user_id":"U81PB6N77"}]