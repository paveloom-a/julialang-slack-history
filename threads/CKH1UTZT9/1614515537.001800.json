[{"client_msg_id":"035f13e1-32f4-4335-be02-618f043b87aa","type":"message","text":"For anyone interested in nonlinear optimal control, there's a stub tutorial showing what can be done in ModelingToolkit right now: <https://mtk.sciml.ai/dev/tutorials/nonlinear_optimal_control/>. You can see where we are going if you look at the acausal modeling tutorial: <https://mtk.sciml.ai/dev/tutorials/acausal_components/> . We plan to get similar interfaces together to make it easy to specify the variables and get the solutions as time series, along with symbolic simplification of the generated optimization problems. But it should be pretty clear what the near future looks like!","user":"U69BL50BF","ts":"1614515537.001800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eVg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For anyone interested in nonlinear optimal control, there's a stub tutorial showing what can be done in ModelingToolkit right now: "},{"type":"link","url":"https://mtk.sciml.ai/dev/tutorials/nonlinear_optimal_control/"},{"type":"text","text":". You can see where we are going if you look at the acausal modeling tutorial: "},{"type":"link","url":"https://mtk.sciml.ai/dev/tutorials/acausal_components/"},{"type":"text","text":" . We plan to get similar interfaces together to make it easy to specify the variables and get the solutions as time series, along with symbolic simplification of the generated optimization problems. But it should be pretty clear what the near future looks like!"}]}]}],"thread_ts":"1614515537.001800","reply_count":4,"reply_users_count":2,"latest_reply":"1614516855.002500","reply_users":["U011NEW8A2E","U69BL50BF"],"subscribed":false},{"client_msg_id":"8dccb9fe-6c6e-40ad-bcd5-46d1c6a990d8","type":"message","text":"This looks really nice! How do the discretization methods and optimization methods compare to those commonly used, for example in NLOptControl.jl ?","user":"U011NEW8A2E","ts":"1614516429.001900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uN=x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This looks really nice! How do the discretization methods and optimization methods compare to those commonly used, for example in NLOptControl.jl ?"}]}]}],"thread_ts":"1614515537.001800","parent_user_id":"U69BL50BF"},{"client_msg_id":"0d769b03-de34-40f3-b2aa-3ca698104c51","type":"message","text":"The tutorial there shows how to do what NLOptControl.jl does. What is commonly used is exactly one of the methods I described, the libraries usually just hardcode one. The nice thing about the MTK system is that it abstracts that detail, so we can easily implement all of the different kinds of methods used by various libraries into one system and compare against them. That hasn't been done yet, but we're getting there.","user":"U69BL50BF","ts":"1614516567.002100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cdt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The tutorial there shows how to do what NLOptControl.jl does. What is commonly used is exactly one of the methods I described, the libraries usually just hardcode one. The nice thing about the MTK system is that it abstracts that detail, so we can easily implement all of the different kinds of methods used by various libraries into one system and compare against them. That hasn't been done yet, but we're getting there."}]}]}],"thread_ts":"1614515537.001800","parent_user_id":"U69BL50BF"},{"client_msg_id":"afdca2f1-9650-4fab-b0c8-8a5f454af243","type":"message","text":"Today sounds perfect. It seems that it would be fairly easy to create a layer that allows conversion from the linear systems (plus a loss) in ControlSystems.jl to your ControlSystem type, where do you think such a layer should be implemented?","user":"U011NEW8A2E","ts":"1614516765.002300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RoVIf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Today sounds perfect. It seems that it would be fairly easy to create a layer that allows conversion from the linear systems (plus a loss) in ControlSystems.jl to your ControlSystem type, where do you think such a layer should be implemented?"}]}]}],"thread_ts":"1614515537.001800","parent_user_id":"U69BL50BF"},{"client_msg_id":"da32fb24-cee0-4a95-9202-8982f37fd2e0","type":"message","text":"I guess the first step is just to implement a simple conversion from ControlSystems.LTISystem to ODESystem","user":"U011NEW8A2E","ts":"1614516855.002500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nn9c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess the first step is just to implement a simple conversion from ControlSystems.LTISystem to ODESystem"}]}]}],"thread_ts":"1614515537.001800","parent_user_id":"U69BL50BF"}]