[{"client_msg_id":"f8453358-3894-447f-beea-d44b0b61b63f","type":"message","text":"I am trying to generate a function `f(output_type, state)` which produces an output array of type `output_type` and arbitrary dimension. I don't want to restrict the possible `output_type` to be a fixed list of types (if I did then I could just use an if else sequence), would having a call to something like  `@inline create_array(::Type{&lt;:MyArray}, shape, elem1, elem2, elem3,...) = construct MyArray`  have the same cost as having the literal expression for the array in the generated `f` 's code?? Maybe `shape` needs to be a `Val`  and the methods need to be `@generated` ? I'm worried about the possibility that `@inline` does not take effect and the splatting incurs a big cost.","user":"U68907M46","ts":"1611929817.023500","team":"T68168MUP","edited":{"user":"U68907M46","ts":"1611930175.000000"},"blocks":[{"type":"rich_text","block_id":"S2Xij","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am trying to generate a function "},{"type":"text","text":"f(output_type, state)","style":{"code":true}},{"type":"text","text":" which produces an output array of type "},{"type":"text","text":"output_type","style":{"code":true}},{"type":"text","text":" and arbitrary dimension. I don't want to restrict the possible "},{"type":"text","text":"output_type","style":{"code":true}},{"type":"text","text":" to be a fixed list of types (if I did then I could just use an if else sequence), would having a call to something like  "},{"type":"text","text":"@inline create_array(::Type{<:MyArray}, shape, elem1, elem2, elem3,...) = construct MyArray","style":{"code":true}},{"type":"text","text":"  have the same cost as having the literal expression for the array in the generated "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" 's code?? Maybe "},{"type":"text","text":"shape","style":{"code":true}},{"type":"text","text":" needs to be a "},{"type":"text","text":"Val","style":{"code":true}},{"type":"text","text":"  and the methods need to be "},{"type":"text","text":"@generated","style":{"code":true}},{"type":"text","text":" ? I'm worried about the possibility that "},{"type":"text","text":"@inline","style":{"code":true}},{"type":"text","text":" does not take effect and the splatting incurs a big cost."}]}]}],"thread_ts":"1611929817.023500","reply_count":1,"reply_users_count":1,"latest_reply":"1611929837.023600","reply_users":["U68907M46"],"subscribed":false},{"client_msg_id":"2e77f7ed-f1b9-460d-9c45-e002e631f7bb","type":"message","text":"cc <@U6788D83U> I know this will scare you","user":"U68907M46","ts":"1611929837.023600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Oea6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cc "},{"type":"user","user_id":"U6788D83U"},{"type":"text","text":" I know this will scare you"}]}]}],"thread_ts":"1611929817.023500","parent_user_id":"U68907M46","reactions":[{"name":"heavy_check_mark","users":["U6788D83U"],"count":1}]}]