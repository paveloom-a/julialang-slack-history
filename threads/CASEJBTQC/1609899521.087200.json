[{"client_msg_id":"b519ca74-2c1d-4d93-87a7-e8a2f17c03c0","type":"message","text":"but we do have dependent types!","user":"U69L6CPJN","ts":"1609899521.087200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yVL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but we do have dependent types!"}]}]}],"thread_ts":"1609899521.087200","reply_count":9,"reply_users_count":3,"latest_reply":"1610002116.109400","reply_users":["U8D9768Q6","U69L6CPJN","U67G3QRJM"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"Yes, but we no longer claim to have them because it upsets PL wheenies too much.","user":"U8D9768Q6","ts":"1609901727.087900","thread_ts":"1609899521.087200","root":{"client_msg_id":"b519ca74-2c1d-4d93-87a7-e8a2f17c03c0","type":"message","text":"but we do have dependent types!","user":"U69L6CPJN","ts":"1609899521.087200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yVL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but we do have dependent types!"}]}]}],"thread_ts":"1609899521.087200","reply_count":9,"reply_users_count":3,"latest_reply":"1610002116.109400","reply_users":["U8D9768Q6","U69L6CPJN","U67G3QRJM"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"ZBv6r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, but we no longer claim to have them because it upsets PL wheenies too much."}]}]}],"client_msg_id":"ed9aa3b7-b71e-45cc-8c11-a17a5ca9aded"},{"client_msg_id":"49ad9ce0-6b95-4613-af3d-ca58131412c9","type":"message","text":"If you haven't read it before, this is a great thread <https://github.com/JuliaLang/julia/issues/6113>","user":"U8D9768Q6","ts":"1609901826.088900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"okg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you haven't read it before, this is a great thread "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/6113"}]}]}],"thread_ts":"1609899521.087200","parent_user_id":"U69L6CPJN"},{"client_msg_id":"23b87059-958a-454d-a949-cef17ab75a3a","type":"message","text":"I have read it. The conclusion I came to is \"if Julia doesn't have dependent types, it can only be because your definition of type is so narrow that Julia doesn't have types at all\"","user":"U69L6CPJN","ts":"1609901954.089200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aRVSo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have read it. The conclusion I came to is \"if Julia doesn't have dependent types, it can only be because your definition of type is so narrow that Julia doesn't have types at all\""}]}]}],"thread_ts":"1609899521.087200","parent_user_id":"U69L6CPJN"},{"client_msg_id":"f54fe394-0969-47f2-95cf-b4bcb557145e","type":"message","text":"Can you give an example of dependent types in Julia?","user":"U67G3QRJM","ts":"1609999777.107000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C5I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you give an example of dependent types in Julia?"}]}]}],"thread_ts":"1609899521.087200","parent_user_id":"U69L6CPJN"},{"client_msg_id":"1A62158F-0320-47DA-B013-F8BC655C3876","type":"message","text":"`Array{Float64, 2}`","user":"U8D9768Q6","ts":"1609999809.107600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qgpwk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Array{Float64, 2}","style":{"code":true}}]}]}],"thread_ts":"1609899521.087200","parent_user_id":"U69L6CPJN"},{"client_msg_id":"F98DE0A9-8FC1-4C68-BCE2-7E5AB0102600","type":"message","text":"Or better yet, the prototypical example, `SVector{3, Float64}`","user":"U8D9768Q6","ts":"1609999850.108700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uZh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or better yet, the prototypical example, "},{"type":"text","text":"SVector{3, Float64}","style":{"code":true}}]}]}],"thread_ts":"1609899521.087200","parent_user_id":"U69L6CPJN"},{"client_msg_id":"6ba9043e-0eea-40f0-a35a-08ec7e166057","type":"message","text":"OK, thanks","user":"U67G3QRJM","ts":"1609999873.108900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2V7l1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, thanks"}]}]}],"thread_ts":"1609899521.087200","parent_user_id":"U69L6CPJN"},{"client_msg_id":"fdfc8bf6-09e0-499d-90ab-1357f7a81576","type":"message","text":"Here's a nice understandable example from StackOverflow: <https://stackoverflow.com/questions/9338709/what-is-dependent-typing>","user":"U8D9768Q6","ts":"1610002103.109100","team":"T68168MUP","attachments":[{"service_name":"Stack Overflow","title":"What is dependent typing?","title_link":"https://stackoverflow.com/questions/9338709/what-is-dependent-typing","text":"Can someone explain dependent typing to me? I have little experience in Haskell, Cayenne, Epigram, or other functional languages, so the simpler of terms you can use, the more I will appreciate it!","fallback":"Stack Overflow: What is dependent typing?","thumb_url":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded","from_url":"https://stackoverflow.com/questions/9338709/what-is-dependent-typing","thumb_width":316,"thumb_height":316,"service_icon":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon.png?v=c78bd457575a","id":1,"original_url":"https://stackoverflow.com/questions/9338709/what-is-dependent-typing"}],"blocks":[{"type":"rich_text","block_id":"F9R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's a nice understandable example from StackOverflow: "},{"type":"link","url":"https://stackoverflow.com/questions/9338709/what-is-dependent-typing"}]}]}],"thread_ts":"1609899521.087200","parent_user_id":"U69L6CPJN"},{"client_msg_id":"97378348-0be0-4731-83f6-f9dfadf39eaa","type":"message","text":"And the corresponding julia code\n```julia&gt; struct BoundedInt{n} &lt;: Integer\n           i::Int\n           function BoundedInt{n}(i) where {n}\n               @assert i &lt;= n\n               new{n}(i)\n           end\n       end\n\njulia&gt; min(i::Int, j::Int)::BoundedInt{j} = i &lt; j ? i : j\nmin (generic function with 1 method)\n\njulia&gt; min(1, 2)\nBoundedInt{2}(1)\n\njulia&gt; min(3, 2)\nBoundedInt{2}(2)```","user":"U8D9768Q6","ts":"1610002116.109400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"msvx2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And the corresponding julia code\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct BoundedInt{n} <: Integer\n           i::Int\n           function BoundedInt{n}(i) where {n}\n               @assert i <= n\n               new{n}(i)\n           end\n       end\n\njulia> min(i::Int, j::Int)::BoundedInt{j} = i < j ? i : j\nmin (generic function with 1 method)\n\njulia> min(1, 2)\nBoundedInt{2}(1)\n\njulia> min(3, 2)\nBoundedInt{2}(2)"}]}]}],"thread_ts":"1609899521.087200","parent_user_id":"U69L6CPJN"}]