[{"client_msg_id":"fa32bb49-12e5-4ea1-adb1-96bd0fda928d","type":"message","text":"Quasi-static implies (/requires) inference.","user":"U69BL50BF","ts":"1616170054.024100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JeBY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Quasi-static implies (/requires) inference."}]}]}],"thread_ts":"1616170054.024100","reply_count":78,"reply_users_count":2,"latest_reply":"1616182285.040300","reply_users":["U66N673NV","U69BL50BF"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"So yes, the options are to either fall back to a super slow version or error out, correct? What does MTK do?","user":"U66N673NV","ts":"1616170243.024200","thread_ts":"1616170054.024100","root":{"client_msg_id":"fa32bb49-12e5-4ea1-adb1-96bd0fda928d","type":"message","text":"Quasi-static implies (/requires) inference.","user":"U69BL50BF","ts":"1616170054.024100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JeBY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Quasi-static implies (/requires) inference."}]}]}],"thread_ts":"1616170054.024100","reply_count":78,"reply_users_count":2,"latest_reply":"1616182285.040300","reply_users":["U66N673NV","U69BL50BF"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"Eds","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So yes, the options are to either fall back to a super slow version or error out, correct? What does MTK do?"}]}]}],"client_msg_id":"b1ba2b9f-92d6-4039-9143-b6fd8890866f"},{"client_msg_id":"51f15a4e-3952-4aee-8a75-3bfc83d8e87d","type":"message","text":"Somewhat \"error out\", but that misses the fact that you don't need inference to do abstract tracing, and the code it generates will be inferred.","user":"U69BL50BF","ts":"1616170298.024500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0+ep=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Somewhat \"error out\", but that misses the fact that you don't need inference to do abstract tracing, and the code it generates will be inferred."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"bce8739d-885c-481b-bd4d-6e125f2dbd5b","type":"message","text":"I guess linear algebra is a nice counter example of where inference can fail (because of `\\` returns) but where MTK can trace and do codegen to generate an inferable program.","user":"U69BL50BF","ts":"1616170333.024700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eOP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess linear algebra is a nice counter example of where inference can fail (because of "},{"type":"text","text":"\\","style":{"code":true}},{"type":"text","text":" returns) but where MTK can trace and do codegen to generate an inferable program."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"aaed526f-e007-47e4-8c74-0424fd658207","type":"message","text":"But generating code that does a fast path for linear and quadratic expressions needs inference, abstract tracing isn't sufficient","user":"U66N673NV","ts":"1616170435.024900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a4q=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But generating code that does a fast path for linear and quadratic expressions needs inference, abstract tracing isn't sufficient"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"f0b9f9cb-5288-4616-b620-dbd24694b1fe","type":"message","text":"If you symbolically know exactly the linear and quadratic expressions, what is a code you cannot create for it?","user":"U69BL50BF","ts":"1616170473.025100","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1616170476.000000"},"blocks":[{"type":"rich_text","block_id":"byIi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you symbolically know exactly the linear and quadratic expressions, what is a code you cannot create for it?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"1a7dd792-1b08-40e0-bafd-c66ce62d5866","type":"message","text":"sum(a[i] * b[i] * c[i] for i in 1:10000000)","user":"U66N673NV","ts":"1616170613.025400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DQlN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sum(a[i] * b[i] * c[i] for i in 1:10000000)"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"af67e52f-7c4d-44fd-bc2d-9951305f7be0","type":"message","text":"That's linear or quadratic if one of the terms is a number.","user":"U66N673NV","ts":"1616170637.025600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c0u4m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's linear or quadratic if one of the terms is a number."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"4422a749-0a50-4f12-9339-15236f81c5ca","type":"message","text":"how is that a counter example? That's precisely one of the cases it handles, current via scalarization but Shashi is working on the array symbolics to not expand it?","user":"U69BL50BF","ts":"1616170697.025800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s7yNU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how is that a counter example? That's precisely one of the cases it handles, current via scalarization but Shashi is working on the array symbolics to not expand it?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"07efd0ba-8684-4eb5-83fc-c4204ed69e72","type":"message","text":"What do you do if you can't infer the element types of the arrays?","user":"U66N673NV","ts":"1616170738.026000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TUJUt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you do if you can't infer the element types of the arrays?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"82c6090a-7c64-4367-89ee-c767e5472b25","type":"message","text":"if that's your function then you infer it","user":"U69BL50BF","ts":"1616170788.026200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/TA//","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if that's your function then you infer it"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"ea2b0bb0-3eb4-4f0e-b014-95274b68258b","type":"message","text":"can you give a full example?","user":"U69BL50BF","ts":"1616170799.026400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7No3c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can you give a full example?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"d01317c4-5afb-42dd-be5a-996973f5c942","type":"message","text":"MTK generates code that's dependent on the inputs.","user":"U69BL50BF","ts":"1616170837.026600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Or8vo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"MTK generates code that's dependent on the inputs."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"04b12827-7ec9-4908-bda5-969cec999fc3","type":"message","text":"`a = [type_unstable_function(i) for i in 1:10000000];@variable(m, b[1:10000000]); @variable(m, c[1:10000000]); @constraint(m, sum(a[i] * b[i] * c[i] for i in 1:10000000) &lt;= 1)`","user":"U66N673NV","ts":"1616171304.026800","team":"T68168MUP","edited":{"user":"U66N673NV","ts":"1616171317.000000"},"blocks":[{"type":"rich_text","block_id":"Oqa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a = [type_unstable_function(i) for i in 1:10000000];@variable(m, b[1:10000000]); @variable(m, c[1:10000000]); @constraint(m, sum(a[i] * b[i] * c[i] for i in 1:10000000) <= 1)","style":{"code":true}}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"9ce152f2-5a11-4144-892b-b51d8aa497e0","type":"message","text":"the only issue there is that scalar tracing runs out of memory in that case.","user":"U69BL50BF","ts":"1616171795.027100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0d9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the only issue there is that scalar tracing runs out of memory in that case."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"40dcbe30-746f-438e-be96-e70e71fa4ea0","type":"message","text":"And so yes, you'd need array symbolics and an abstract interpreter to run inference.","user":"U69BL50BF","ts":"1616171808.027300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MRFc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And so yes, you'd need array symbolics and an abstract interpreter to run inference."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"6284dde8-90ac-4139-b21e-4f0fbe2faed8","type":"message","text":"So what's the best we can do for that code example?","user":"U66N673NV","ts":"1616175698.027500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FXgxV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So what's the best we can do for that code example?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"e2896424-2457-440b-999e-12a85cb68d6d","type":"message","text":"oh that's much less memory than I thought. Yeah, you can just trace through it","user":"U69BL50BF","ts":"1616176110.027700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oFyUW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh that's much less memory than I thought. Yeah, you can just trace through it"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"f2737ba2-a5a5-4a25-8e4f-76f85d57e89b","type":"message","text":"```using ModelingToolkit\n@variables a[1:10000000] b[1:1000000]\ntype_unstable_function(i) = rand()&lt;0.5 ? 1 : 1.0\nc = [type_unstable_function(i) for i in 1:10000000]\nobj = sum(a[i] * b[i] * c[i] for i in 1:10000000)```","user":"U69BL50BF","ts":"1616176116.027900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h94","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using ModelingToolkit\n@variables a[1:10000000] b[1:1000000]\ntype_unstable_function(i) = rand()<0.5 ? 1 : 1.0\nc = [type_unstable_function(i) for i in 1:10000000]\nobj = sum(a[i] * b[i] * c[i] for i in 1:10000000)"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"b8bfd1c4-8c80-4760-8d48-e63e0d0a8da4","type":"message","text":"It would be better handled by array symbolics in terms of generation time, but SoA will work on it.","user":"U69BL50BF","ts":"1616176148.028100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4tk4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It would be better handled by array symbolics in terms of generation time, but SoA will work on it."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"f7159ad4-0e49-4f17-b20c-40a0173b033b","type":"message","text":"I'm guessing that tracing through it would be much slower than what jump does now, but would be curious to see a comparison","user":"U66N673NV","ts":"1616176753.028300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1zNk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm guessing that tracing through it would be much slower than what jump does now, but would be curious to see a comparison"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"f9674bb0-f66c-431c-b1ec-403c3a5a0b8b","type":"message","text":"does tracing through it mean a GC-tracked object for every scalar operation?","user":"U66N673NV","ts":"1616176787.028500","team":"T68168MUP","edited":{"user":"U66N673NV","ts":"1616176799.000000"},"blocks":[{"type":"rich_text","block_id":"H8O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does tracing through it mean a GC-tracked object for every scalar operation?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"c18d5102-d1ad-4ae2-aa80-ccdbc2204b20","type":"message","text":"It's much much slower with the type instability. For this kind of problem I would just say to wait for array symbolics.\n\n&gt; does tracing through it mean a GC-tracked object for every scalar expression?\nFor every expression, yes. Not for every symbol though. And only in the codegen phase: compilers are always dynamic though.","user":"U69BL50BF","ts":"1616176823.028800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6rTM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's much much slower with the type instability. For this kind of problem I would just say to wait for array symbolics.\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"does tracing through it mean a GC-tracked object for every scalar expression?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"For every expression, yes. Not for every symbol though. And only in the codegen phase: compilers are always dynamic though."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"11f18ee8-ade7-4ddc-9ae4-b7bbe5088701","type":"message","text":"Indeed most of this is optimized for big nonlinear expressions right now, except for what Shashi's working on","user":"U69BL50BF","ts":"1616176841.029000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h/m9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Indeed most of this is optimized for big nonlinear expressions right now, except for what Shashi's working on"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"f6b126b0-e400-4ea2-8d4d-0a23d0964add","type":"message","text":"I mean, are there 10,000,000 GC-tracked objects due to the loop?","user":"U66N673NV","ts":"1616176916.029200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CDnFi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, are there 10,000,000 GC-tracked objects due to the loop?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"8c9dacb3-0b9a-49a8-a926-503bed84845a","type":"message","text":"In the current form, yes.","user":"U69BL50BF","ts":"1616176933.029400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PPtVs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the current form, yes."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"5958bc5d-32a0-43cb-a67b-919a2bc8b65f","type":"message","text":"Because of the type-instability","user":"U69BL50BF","ts":"1616176941.029600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qK5C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because of the type-instability"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"c7cd2031-43b4-45a6-9a46-8dd4cd87fee6","type":"message","text":"How does array symbolics address this?","user":"U66N673NV","ts":"1616176981.029800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Du33","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How does array symbolics address this?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"98a79d54-3d1a-4f91-a077-0bea230fe39e","type":"message","text":"we need <https://github.com/MasonProtter/SymbolicTracing.jl> + <https://github.com/JuliaSymbolics/SymbolicUtils.jl/pull/123> to fix it","user":"U69BL50BF","ts":"1616176995.030000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tuii9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we need "},{"type":"link","url":"https://github.com/MasonProtter/SymbolicTracing.jl"},{"type":"text","text":" + "},{"type":"link","url":"https://github.com/JuliaSymbolics/SymbolicUtils.jl/pull/123"},{"type":"text","text":" to fix it"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"6e3416eb-d0f8-4185-9115-35866a418607","type":"message","text":"Because then the `sum` doesn't need to be expanded.","user":"U69BL50BF","ts":"1616177001.030200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7zab","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because then the "},{"type":"text","text":"sum","style":{"code":true}},{"type":"text","text":" doesn't need to be expanded."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"bedd261c-9deb-4673-8f22-855312ffc0c1","type":"message","text":"or we can `@register` the sum.","user":"U69BL50BF","ts":"1616177058.030400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wfyH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or we can "},{"type":"text","text":"@register","style":{"code":true}},{"type":"text","text":" the sum."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"d84b96cf-1a73-4b77-b4d3-c4c0b01af997","type":"message","text":"How does that work if `a` is `Vector{Any}`?","user":"U66N673NV","ts":"1616177082.030600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eNOBV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How does that work if "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" is "},{"type":"text","text":"Vector{Any}","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"731f2a80-e925-41ab-9d84-952c095d55f4","type":"message","text":"it can just capture the Term","user":"U69BL50BF","ts":"1616177955.030800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"58fR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it can just capture the Term"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"7d66bd33-11d4-48e1-b2d1-b6e36e28ff20","type":"message","text":"```using ModelingToolkit\n@variables a[1:10000000] b[1:1000000]\ntype_unstable_function(i) = rand()&lt;0.5 ? 1 : 1.0\nc = [type_unstable_function(i) for i in 1:10000000]\n\nusing SymbolicUtils\nBase.sum(x::Base.Generator) = Term(sum,[x])\n\n@time obj = sum((a[i] * b[i] * c[i] for i in 1:100000))```","user":"U69BL50BF","ts":"1616177957.031000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g1Ahl","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using ModelingToolkit\n@variables a[1:10000000] b[1:1000000]\ntype_unstable_function(i) = rand()<0.5 ? 1 : 1.0\nc = [type_unstable_function(i) for i in 1:10000000]\n\nusing SymbolicUtils\nBase.sum(x::Base.Generator) = Term(sum,[x])\n\n@time obj = sum((a[i] * b[i] * c[i] for i in 1:100000))"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"ed4e8d8f-a61a-4da8-9793-fb837426d2a6","type":"message","text":"though we would want to make the Generator a RuntimeGeneratedFunction in order for it to serialize better.","user":"U69BL50BF","ts":"1616177978.031200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VNND","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"though we would want to make the Generator a RuntimeGeneratedFunction in order for it to serialize better."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"79bf361d-6b75-4df7-91e0-cabf6c2c7b25","type":"message","text":"Does \"capture the Term\" mean that it keeps a reference to the `a, b, c`, and if their contents change, it could change `obj`?","user":"U66N673NV","ts":"1616178144.031400","team":"T68168MUP","edited":{"user":"U66N673NV","ts":"1616178155.000000"},"blocks":[{"type":"rich_text","block_id":"/In","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does \"capture the Term\" mean that it keeps a reference to the "},{"type":"text","text":"a, b, c","style":{"code":true}},{"type":"text","text":", and if their contents change, it could change "},{"type":"text","text":"obj","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"4f3e0a88-64f1-4c8e-9f1f-8cd9a49e03e7","type":"message","text":"`a,b,c` are symbolic, so they can't change? That statement doesn't make much sense","user":"U69BL50BF","ts":"1616178196.031700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ERFsu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a,b,c","style":{"code":true}},{"type":"text","text":" are symbolic, so they can't change? That statement doesn't make much sense"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"b580cc85-0e7d-4c51-be8d-4b8058d57bb9","type":"message","text":"it's a symbolic representation of the Julia code.","user":"U69BL50BF","ts":"1616178202.031900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZoTR8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's a symbolic representation of the Julia code."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"f4faf588-eb09-4f50-a798-749074024cad","type":"message","text":"`c` is data, a `Vector{Real}` . What happens if I set `c[1] = 20` after the `obj = ...` line?","user":"U66N673NV","ts":"1616178280.032100","team":"T68168MUP","edited":{"user":"U66N673NV","ts":"1616178288.000000"},"blocks":[{"type":"rich_text","block_id":"CaVfD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"c","style":{"code":true}},{"type":"text","text":" is data, a "},{"type":"text","text":"Vector{Real}","style":{"code":true}},{"type":"text","text":" . What happens if I set "},{"type":"text","text":"c[1] = 20","style":{"code":true}},{"type":"text","text":" after the "},{"type":"text","text":"obj = ...","style":{"code":true}},{"type":"text","text":" line?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"2f5fa327-f29a-4853-a903-b7fc7303740c","type":"message","text":"then it's changing to the value","user":"U69BL50BF","ts":"1616178324.032400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0Ei+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then it's changing to the value"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"35e60a56-0674-4a84-bce4-3601def71dd3","type":"message","text":"yes, the symbolic representation is referential, while the generated code is not.","user":"U69BL50BF","ts":"1616178341.032600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8UvFW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, the symbolic representation is referential, while the generated code is not."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"8d66d111-543c-41f7-8379-81baf22e949e","type":"message","text":"Ok, so say we have the symbolic expression for the sum. How do we efficiently detect if it's linear (and extract a concrete affine expression if it is)?","user":"U66N673NV","ts":"1616178787.032800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zpp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, so say we have the symbolic expression for the sum. How do we efficiently detect if it's linear (and extract a concrete affine expression if it is)?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"2a572824-f1d9-4cf8-97f1-d8e24d5c503d","type":"message","text":"yes, you'd quad trace it as hinting in the blog post, and shown in the paper <https://openreview.net/pdf?id=rJlPdcY38B>","user":"U69BL50BF","ts":"1616179068.033000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"721G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, you'd quad trace it as hinting in the blog post, and shown in the paper "},{"type":"link","url":"https://openreview.net/pdf?id=rJlPdcY38B"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"8f4e5457-8d55-4252-9885-cd93dee3e1f8","type":"message","text":"You can do that even if the expressions are too large to generate, because it doesn't need the expressions.","user":"U69BL50BF","ts":"1616179093.033200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CDX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can do that even if the expressions are too large to generate, because it doesn't need the expressions."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"6d301f14-367a-400f-90a4-b387c884d8ab","type":"message","text":"See 2.2 for how Hessian sparsity is gather via provenance polynomials","user":"U69BL50BF","ts":"1616179126.033400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pn8x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"See 2.2 for how Hessian sparsity is gather via provenance polynomials"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"c7dc675a-9a6e-4b0c-83ad-e13b4c069c15","type":"message","text":"so the proof of linearity is just that Hessian sparsity is nil","user":"U69BL50BF","ts":"1616179142.033600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+cs5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so the proof of linearity is just that Hessian sparsity is nil"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"846c7af1-b1e6-4393-a636-c846803c6eb5","type":"message","text":"that sparsity stuff scales extremely well to large equations since it doesn't need anything except provenance sets and 0's","user":"U69BL50BF","ts":"1616179204.033800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r2P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that sparsity stuff scales extremely well to large equations since it doesn't need anything except provenance sets and 0's"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"a2da57c2-7ba2-4724-b4f0-be73cfa9f1f6","type":"message","text":"but it does need enough inference to make the right dispatch choice.","user":"U69BL50BF","ts":"1616179216.034000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+nW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but it does need enough inference to make the right dispatch choice."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"bd24998b-d545-4616-9ff6-f4af5d890fa3","type":"message","text":"Ok, I see where you're going. The big issue is that if JuMP is going to switch to this, it can't have a huge performance regression in the presence of type instability. We have to assume existing user code is type unstable and we're not holding up our expectations if their code suddenly gets much slower with a new version of JuMP.","user":"U66N673NV","ts":"1616179484.034200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fcw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, I see where you're going. The big issue is that if JuMP is going to switch to this, it can't have a huge performance regression in the presence of type instability. We have to assume existing user code is type unstable and we're not holding up our expectations if their code suddenly gets much slower with a new version of JuMP."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"0f4e96dc-506d-4ae0-b388-bc0d27209b5e","type":"message","text":"talking about runtime or codegen performance?","user":"U69BL50BF","ts":"1616179542.034400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EIh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"talking about runtime or codegen performance?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"fac3bd60-8c55-4969-a508-90a21bd0fff0","type":"message","text":"and I don't think there's a reason to \"switch\" JuMP to this. We're mostly focusing on nonlinear because that's where it's very useful. Also, convex programming as well. I don't think there's major advantages for linear or quadratic, so it's not much of our focus","user":"U69BL50BF","ts":"1616179597.034600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NFTHI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and I don't think there's a reason to \"switch\" JuMP to this. We're mostly focusing on nonlinear because that's where it's very useful. Also, convex programming as well. I don't think there's major advantages for linear or quadratic, so it's not much of our focus"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"8bf9b221-e3ff-41b9-9166-91608ac91fe5","type":"message","text":"well type instability can force the sparsity detection to happen at runtime, right?","user":"U66N673NV","ts":"1616179616.034800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Pk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well type instability can force the sparsity detection to happen at runtime, right?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"16a53514-3dc1-41fb-8f5f-7cb8f5e8f498","type":"message","text":"JuMP supports nonlinear, and it's a long-term goal to unify the nonlinear with the linear and quadratic.","user":"U66N673NV","ts":"1616179640.035000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4o5Xc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"JuMP supports nonlinear, and it's a long-term goal to unify the nonlinear with the linear and quadratic."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"1d0ab9b6-0061-4071-97bf-5841a7a35803","type":"message","text":"But what we do plan to do is stuff like, if someone gives us this optimization problem and tells us to solve it with defaults, we want to check for linearity and then call a linear solver if that's the case, where the Hessian sparsity proof is used there.","user":"U69BL50BF","ts":"1616179663.035200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WwnJs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But what we do plan to do is stuff like, if someone gives us this optimization problem and tells us to solve it with defaults, we want to check for linearity and then call a linear solver if that's the case, where the Hessian sparsity proof is used there."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"3dbe7aed-1422-47f6-a3f7-993a290480d1","type":"message","text":"And we might just use JuMP or MOI directly to do that part.","user":"U69BL50BF","ts":"1616179674.035400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5QOT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And we might just use JuMP or MOI directly to do that part."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"e55e7545-e8f2-4b32-a847-fceaffd574f9","type":"message","text":"&gt; well type instability can force the sparsity detection to happen at runtime, right?\nNo","user":"U69BL50BF","ts":"1616179679.035600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OFUSZ","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"well type instability can force the sparsity detection to happen at runtime, right?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"No"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"5dd456e9-37a4-484d-934b-3c05eb01b5c9","type":"message","text":"You can know the sparsity from the symbolic part and it cannot change between it.","user":"U69BL50BF","ts":"1616179697.035800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SkV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can know the sparsity from the symbolic part and it cannot change between it."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"6f205c22-ab90-488c-896c-11b5e165505f","type":"message","text":"Maybe the key detail I forgot to explain is that symbolic variables are typed?","user":"U69BL50BF","ts":"1616179713.036000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EUq0O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe the key detail I forgot to explain is that symbolic variables are typed?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"0f300eb6-b08f-44ef-83ef-3f1ccb3af3b7","type":"message","text":"the values of the data can change the sparsity pattern","user":"U66N673NV","ts":"1616179733.036200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2HXH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the values of the data can change the sparsity pattern"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"0892afc0-0d7f-43e2-b259-124b9eef1c70","type":"message","text":"at least in how expressions work in JuMP","user":"U66N673NV","ts":"1616179748.036400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Iemv6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"at least in how expressions work in JuMP"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"a0a2d9cb-7543-4ed2-83ae-2ea5af62ecfa","type":"message","text":"Because \"data\" could be either a numeric value or another symbolic expression.","user":"U66N673NV","ts":"1616179771.036600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RahM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because \"data\" could be either a numeric value or another symbolic expression."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"0606c205-cd8f-470e-b201-780b3c8e1a9e","type":"message","text":"`c = [1.0, x[1]]`","user":"U66N673NV","ts":"1616179781.036800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"svL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"c = [1.0, x[1]]","style":{"code":true}}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"cd38c677-814a-4b4c-ac0b-e1381499e57e","type":"message","text":"oh, for our form I only want to symbolic-ize the user data\n\n```type_unstable_function(i) = rand()&lt;0.5 ? 1 : 1.0\nfunction f(a,b)\n  c = [type_unstable_function(i) for i in 1:10]\n  d = 1:10\n  obj = sum((a[i] * b[i] * c[i] * d[i] for i in 1:10))\nend\n\nusing ModelingToolkit\n@variables a[1:10] b[1:10]\nf(a,b) # a₁*b₁ + 10a₁₀*b₁₀ + 2a₂*b₂ + 3a₃*b₃ + 4a₄*b₄ + 5a₅*b₅ + 6a₆*b₆ + 7a₇*b₇ + 8a₈*b₈ + 9a₉*b₉```","user":"U69BL50BF","ts":"1616179979.037000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NMH4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, for our form I only want to symbolic-ize the user data\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"type_unstable_function(i) = rand()<0.5 ? 1 : 1.0\nfunction f(a,b)\n  c = [type_unstable_function(i) for i in 1:10]\n  d = 1:10\n  obj = sum((a[i] * b[i] * c[i] * d[i] for i in 1:10))\nend\n\nusing ModelingToolkit\n@variables a[1:10] b[1:10]\nf(a,b) # a₁*b₁ + 10a₁₀*b₁₀ + 2a₂*b₂ + 3a₃*b₃ + 4a₄*b₄ + 5a₅*b₅ + 6a₆*b₆ + 7a₇*b₇ + 8a₈*b₈ + 9a₉*b₉"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"ed6ef88e-388e-4a7f-8f51-855379086e60","type":"message","text":"and then look for structural sparsity. I.e., the sparsity could change if the user sets all values into the objective function to zero, but we ignore those \"sometimes zeros\" and look for those true over the whole optimization problem though","user":"U69BL50BF","ts":"1616180050.037200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ygoua","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and then look for structural sparsity. I.e., the sparsity could change if the user sets all values into the objective function to zero, but we ignore those \"sometimes zeros\" and look for those true over the whole optimization problem though"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"c5cd0e06-a837-41df-8dfc-650821cba88a","type":"message","text":"but we do explain in the paper using a SAT solver + concolic execution to get the set of all sparsity patterns for things like `if a &lt; 5, sparse here` etc. I don't know if that's useful though.","user":"U69BL50BF","ts":"1616180087.037400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iecWb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but we do explain in the paper using a SAT solver + concolic execution to get the set of all sparsity patterns for things like "},{"type":"text","text":"if a < 5, sparse here","style":{"code":true}},{"type":"text","text":" etc. I don't know if that's useful though."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"5016830a-3eea-45b6-a75b-7ac2feeb0882","type":"message","text":"It's idiomatic in JuMP to build arrays of subexpressions and pass them around as inputs to other functions that could build constraints.","user":"U66N673NV","ts":"1616180192.037600","team":"T68168MUP","edited":{"user":"U66N673NV","ts":"1616180217.000000"},"blocks":[{"type":"rich_text","block_id":"CaT5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's idiomatic in JuMP to build arrays of subexpressions and pass them around as inputs to other functions that could build constraints."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"b47e9bb3-7385-4dae-a232-4da362098b14","type":"message","text":"You mean like:\n\n```using ModelingToolkit\n@variables a[1:10] b[1:10]\nc = a.*b\nf(a,c) # b₁*(a₁^2) + 10b₁₀*(a₁₀^2) + 2b₂*(a₂^2) + 3b₃*(a₃^2) + 4b₄*(a₄^2) + 5b₅*(a₅^2) + 6b₆*(a₆^2) + 7b₇*(a₇^2) + 8b₈*(a₈^2) + 9b₉*(a₉^2)```","user":"U69BL50BF","ts":"1616180274.037900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eI/x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You mean like:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using ModelingToolkit\n@variables a[1:10] b[1:10]\nc = a.*b\nf(a,c) # b₁*(a₁^2) + 10b₁₀*(a₁₀^2) + 2b₂*(a₂^2) + 3b₃*(a₃^2) + 4b₄*(a₄^2) + 5b₅*(a₅^2) + 6b₆*(a₆^2) + 7b₇*(a₇^2) + 8b₈*(a₈^2) + 9b₉*(a₉^2)"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"2e29f694-7397-4f81-a309-9328edba326f","type":"message","text":"yes","user":"U66N673NV","ts":"1616180302.038100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3nK2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"8ffd81c7-7c23-43ca-bf27-49da32f1ff81","type":"message","text":"yeah that function Term in the end is still just a function of a and b though, so we'd analyze it as a function of a and b.","user":"U69BL50BF","ts":"1616180339.038300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VHMDM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah that function Term in the end is still just a function of a and b though, so we'd analyze it as a function of a and b."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"d7e0e257-94b0-430d-aab1-36fc2894388a","type":"message","text":"But to be realistic let's make `c` a `Vector{Any}` where some entries are floats and some are variables/expressions","user":"U66N673NV","ts":"1616180363.038500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q=/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But to be realistic let's make "},{"type":"text","text":"c","style":{"code":true}},{"type":"text","text":" a "},{"type":"text","text":"Vector{Any}","style":{"code":true}},{"type":"text","text":" where some entries are floats and some are variables/expressions"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"fa012f4a-22b0-4792-9d81-9735f4b2b68c","type":"message","text":"```using ModelingToolkit\n@variables a[1:10] b[1:10]\nc = [1.0,1,a[5],a[3],a[2]+a[7],2.0,3.0,4.0,5.0,sum(a)]\nf(a,c) # a₁ + 2a₂ + 12.0a₆ + 21.0a₇ + 32.0a₈ + 45.0a₉ + 10a₁₀*(a₁ + a₁₀ + a₂ + a₃ + a₄ + a₅ + a₆ + a₇ + a₈ + a₉) + 4a₃*a₄ + 3a₃*a₅ + 5a₅*(a₂ + a₇)```","user":"U69BL50BF","ts":"1616180417.038700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z1H","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using ModelingToolkit\n@variables a[1:10] b[1:10]\nc = [1.0,1,a[5],a[3],a[2]+a[7],2.0,3.0,4.0,5.0,sum(a)]\nf(a,c) # a₁ + 2a₂ + 12.0a₆ + 21.0a₇ + 32.0a₈ + 45.0a₉ + 10a₁₀*(a₁ + a₁₀ + a₂ + a₃ + a₄ + a₅ + a₆ + a₇ + a₈ + a₉) + 4a₃*a₄ + 3a₃*a₅ + 5a₅*(a₂ + a₇)"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"29cb07dc-c312-43f9-8814-e07fa2abd1ed","type":"message","text":"Right, so how do you know the sparsity pattern of f(a,c) at compile time?","user":"U66N673NV","ts":"1616180448.038900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ln/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, so how do you know the sparsity pattern of f(a,c) at compile time?"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"80285663-de26-4ca7-855b-2ffc86e54b0f","type":"message","text":"it depends on runtime values","user":"U66N673NV","ts":"1616180459.039100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SdAYq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it depends on runtime values"}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"1f870d08-4ccc-4dd1-b403-9b010f63640b","type":"message","text":"the output is a scalar only dependent on `a`","user":"U69BL50BF","ts":"1616180486.039300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kk4+a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the output is a scalar only dependent on "},{"type":"text","text":"a","style":{"code":true}}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"1b5eb611-6e16-4211-b33a-446eaff940cf","type":"message","text":"`a₁ + 2a₂ + 12.0a₆ + 21.0a₇ + 32.0a₈ + 45.0a₉ + 10a₁₀*(a₁ + a₁₀ + a₂ + a₃ + a₄ + a₅ + a₆ + a₇ + a₈ + a₉) + 4a₃*a₄ + 3a₃*a₅ + 5a₅*(a₂ + a₇`","user":"U69BL50BF","ts":"1616180493.039500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tit","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a₁ + 2a₂ + 12.0a₆ + 21.0a₇ + 32.0a₈ + 45.0a₉ + 10a₁₀*(a₁ + a₁₀ + a₂ + a₃ + a₄ + a₅ + a₆ + a₇ + a₈ + a₉) + 4a₃*a₄ + 3a₃*a₅ + 5a₅*(a₂ + a₇","style":{"code":true}}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"ba5bb385-7572-4019-8c1d-7d1c96afb158","type":"message","text":"so you just analyze that.","user":"U69BL50BF","ts":"1616180496.039700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XYc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you just analyze that."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"56f1859a-b7c7-4ba9-92a9-9e5e79cd73d0","type":"message","text":"You don't know that the output depends only on `a` until runtime. It could depend on other variables you declared separately.","user":"U66N673NV","ts":"1616180542.039900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Etp0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You don't know that the output depends only on "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" until runtime. It could depend on other variables you declared separately."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"0636501a-f64f-4c79-85a3-136ea5e09411","type":"message","text":"Compilation is staged. Runtime tell you the form, then it's compiled via a RuntimeGeneratedFunction, which is then used.","user":"U69BL50BF","ts":"1616182021.040100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N3QE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Compilation is staged. Runtime tell you the form, then it's compiled via a RuntimeGeneratedFunction, which is then used."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"},{"client_msg_id":"8f1af246-7608-4ef7-86bb-ab16c8304ed6","type":"message","text":"I guess we're getting tripped up on semantics. If you call the function five times with different data, and you need to run the staged compilation five times, then that's a runtime cost as far as the user cares.","user":"U66N673NV","ts":"1616182285.040300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G3iMp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess we're getting tripped up on semantics. If you call the function five times with different data, and you need to run the staged compilation five times, then that's a runtime cost as far as the user cares."}]}]}],"thread_ts":"1616170054.024100","parent_user_id":"U69BL50BF"}]