[{"client_msg_id":"c49b7c69-850b-403b-87f1-253c9649d246","type":"message","text":"Since the length of such a vector of collection is bounded in my case, by around 20, I wonder if I should just define 20 custom types, or do it with a macro?","user":"U01MG0TN079","ts":"1613910458.019700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xJl9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Since the length of such a vector of collection is bounded in my case, by around 20, I wonder if I should just define 20 custom types, or do it with a macro?"}]}]}],"thread_ts":"1613910458.019700","reply_count":4,"reply_users_count":3,"latest_reply":"1613926675.020400","reply_users":["U7HAYKY9X","U01MG0TN079","UAUPJLBQX"],"subscribed":false},{"client_msg_id":"50e29805-85eb-44d8-befd-59956af5b752","type":"message","text":"If you need type stability, you should probably use a Tuple instead of the outer vector, and let the compiler figure out the Tuple type","user":"U7HAYKY9X","ts":"1613911332.019800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WOzk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you need type stability, you should probably use a Tuple instead of the outer vector, and let the compiler figure out the Tuple type"}]}]}],"thread_ts":"1613910458.019700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"879c3f23-1ff6-404f-ac06-6d701204b6d8","type":"message","text":"That makes sense, thanks!","user":"U01MG0TN079","ts":"1613911670.020000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W6C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That makes sense, thanks!"}]}]}],"thread_ts":"1613910458.019700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"717d8dad-0ce5-413c-8b41-73fc8eb37a16","type":"message","text":"You'll have to be careful about how you index into it or iterate over it if you want to remain type stable.","user":"UAUPJLBQX","ts":"1613926640.020200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NbSu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You'll have to be careful about how you index into it or iterate over it if you want to remain type stable."}]}]}],"thread_ts":"1613910458.019700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"207dc5e5-2edb-40de-91d6-214eaa6d3011","type":"message","text":"`map` works well for smaller tuples, but I think it's limited up to a length of 16.\n\nAssuming computations on pieces are reasonably long, just being sure to use function barriers should be fine.","user":"UAUPJLBQX","ts":"1613926675.020400","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1613926726.000000"},"blocks":[{"type":"rich_text","block_id":"biWdX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" works well for smaller tuples, but I think it's limited up to a length of 16.\n\nAssuming computations on pieces are reasonably long, just being sure to use function barriers should be fine."}]}]}],"thread_ts":"1613910458.019700","parent_user_id":"U01MG0TN079"}]