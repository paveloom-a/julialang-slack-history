[{"type":"message","text":"Assuming Julia properly inlines and the method is type stable. Are there any advantages to use value types to encourage a partial evaluation at compile time, if you call a function again and again with some arguments kept fixed and trusting constant propagation?","user":"U9MD78Z9N","ts":"1610403841.331800","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1610404139.000000"},"thread_ts":"1610403841.331800","reply_count":6,"reply_users_count":3,"latest_reply":"1610452789.334100","reply_users":["U68QW0PUZ","U9MD78Z9N","U7HAYKY9X"],"subscribed":false},{"client_msg_id":"fdfee396-b2c9-456b-ac66-bf5e362785dc","type":"message","text":"many of the reasons that led people to use Val types have been washed away with improvements to  Julia's internals.  Nowadays, unless there is a clear dispatch design reason to use Val types, there is no great reason to do so.","user":"U68QW0PUZ","ts":"1610413601.332300","team":"T68168MUP","edited":{"user":"U68QW0PUZ","ts":"1610413641.000000"},"blocks":[{"type":"rich_text","block_id":"XYF=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"many of the reasons that led people to use Val types have been washed away with improvements to  Julia's internals.  Nowadays, unless there is a clear dispatch design reason to use Val types, there is no great reason to do so."}]}]}],"thread_ts":"1610403841.331800","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"Thanks.","user":"U9MD78Z9N","ts":"1610414266.332600","team":"T68168MUP","thread_ts":"1610403841.331800","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"4935c8b0-05dd-489b-97fe-530f03cc122b","type":"message","text":"Sometimes it's nice to have something both be variable (e.g. user input) and be a compile time constant - if you have a high-level function that does a lot of work with a few values constant throughout the function, it can sometimes pay off to recompile all the underlying code for performance","user":"U7HAYKY9X","ts":"1610437661.333100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"44/4j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sometimes it's nice to have something both be variable (e.g. user input) and be a compile time constant - if you have a high-level function that does a lot of work with a few values constant throughout the function, it can sometimes pay off to recompile all the underlying code for performance"}]}]}],"thread_ts":"1610403841.331800","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"1ae69b5e-bc8b-4160-abec-1218995df929","type":"message","text":"<@U7HAYKY9X> do you have an example where this is the case on a recent Julia version?","user":"U9MD78Z9N","ts":"1610452568.333700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pwdnG","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" do you have an example where this is the case on a recent Julia version?"}]}]}],"thread_ts":"1610403841.331800","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"789b9edf-9cf8-43d9-9205-d64348659a7b","type":"message","text":"Here: <https://github.com/jakobnissen/Kash.jl/blob/aace048839399da13624940c1e77cb1806a849a4/src/kmersketch.jl#L107|https://github.com/jakobnissen/Kash.jl/blob/aace048839399da13624940c1e77cb1806a849a4/src/kmersketch.jl#L107>","user":"U7HAYKY9X","ts":"1610452697.333900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gcne","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here: "},{"type":"link","url":"https://github.com/jakobnissen/Kash.jl/blob/aace048839399da13624940c1e77cb1806a849a4/src/kmersketch.jl#L107","text":"https://github.com/jakobnissen/Kash.jl/blob/aace048839399da13624940c1e77cb1806a849a4/src/kmersketch.jl#L107"}]}]}],"thread_ts":"1610403841.331800","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"8dd3ab30-1aaa-417a-ae45-45bfeea25f8b","type":"message","text":"Roughly speaking this creates a summary statistic for all n-grams in a file. Having the n of the ngram be a compile time constant is massive for performance, but you still want the user to be able to specify it","user":"U7HAYKY9X","ts":"1610452789.334100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e=tR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Roughly speaking this creates a summary statistic for all n-grams in a file. Having the n of the ngram be a compile time constant is massive for performance, but you still want the user to be able to specify it"}]}]}],"thread_ts":"1610403841.331800","parent_user_id":"U9MD78Z9N"}]