[{"type":"message","text":"Is there a sparse 2d data structure that supports random insertions of x,y coordinate pairs well, or a dense matrix data structure that grows in small (maybe 8 by 8) blocks when a new block gets written to?","user":"U9MD78Z9N","ts":"1609921521.298800","team":"T68168MUP","thread_ts":"1609921521.298800","reply_count":9,"reply_users_count":3,"latest_reply":"1609939932.304900","reply_users":["U01GMP3HF9C","U9MD78Z9N","UD0NS8PDF"],"subscribed":false},{"client_msg_id":"3cbfe22c-da22-4f41-835f-c83414fe5368","type":"message","text":"Sparse matrices support that but it is not efficient, do you need to use the matrix before the insertions are done?","user":"U01GMP3HF9C","ts":"1609924511.298900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CNq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sparse matrices support that but it is not efficient, do you need to use the matrix before the insertions are done?"}]}]}],"thread_ts":"1609921521.298800","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"45c75212-70c5-4ec0-ab8a-b8a4d5488b8b","type":"message","text":"*all done","user":"U01GMP3HF9C","ts":"1609924517.299100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cLNb7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"*all done"}]}]}],"thread_ts":"1609921521.298800","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"yes, i try to do plane tiling using unconnected shapes of squares","user":"U9MD78Z9N","ts":"1609924676.299300","team":"T68168MUP","thread_ts":"1609921521.298800","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"610a3da9-d302-4268-a37f-c0676e71b93d","type":"message","text":"maybe implement this interface? <https://github.com/JuliaArrays/BlockArrays.jl>","user":"U01GMP3HF9C","ts":"1609924711.299500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IiX/a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe implement this interface? "},{"type":"link","url":"https://github.com/JuliaArrays/BlockArrays.jl"}]}]}],"thread_ts":"1609921521.298800","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"the random insertion will not work well with the vector type","user":"U9MD78Z9N","ts":"1609924714.299700","team":"T68168MUP","thread_ts":"1609921521.298800","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"the block array construct support sparse array as structure to hold the blocks, i play with that to see if it does what i want","user":"U9MD78Z9N","ts":"1609924925.299900","team":"T68168MUP","thread_ts":"1609921521.298800","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"```\nstruct BlockArray{T, N, R &lt;: AbstractArray{&lt;:AbstractArray{T,N},N}, BS&lt;:NTuple{N,AbstractUnitRange{Int}}} &lt;: AbstractBlockArray{T, N}\n    blocks::R\n    axes::BS\n\n    global @inline _BlockArray(blocks::R, block_sizes::BS) where {T, N, R&lt;:AbstractArray{&lt;:AbstractArray{T,N},N}, BS&lt;:NTuple{N,AbstractUnitRange{Int}}} =\n        new{T, N, R, BS}(blocks, block_sizes)\nend\n\n```","user":"U9MD78Z9N","ts":"1609924986.300100","team":"T68168MUP","thread_ts":"1609921521.298800","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"807e06d5-9ed6-4fe9-9c44-b391e353696d","type":"message","text":"You could try <https://github.com/Jutho/SparseArrayKit.jl> too, perhaps","user":"UD0NS8PDF","ts":"1609933826.302200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+vzfq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could try "},{"type":"link","url":"https://github.com/Jutho/SparseArrayKit.jl"},{"type":"text","text":" too, perhaps"}]}]}],"thread_ts":"1609921521.298800","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"Note to self: When you are compute constrained anyway, just decide to solve a small problem and use an Array","user":"U9MD78Z9N","ts":"1609939932.304900","team":"T68168MUP","thread_ts":"1609921521.298800","parent_user_id":"U9MD78Z9N","reactions":[{"name":"raised_hands","users":["U01GMP3HF9C"],"count":1}]}]