[{"client_msg_id":"098d0cf6-d109-41cc-a560-36f954d58aaa","type":"message","text":"TranscodingStreams.jl is the best bet we have for very fast IO buffering, right? It seems like some performance is still left on the table:\nComparing this\n```function bufferfile(path, buffer::Vector{UInt8})\n    rdr = NoopStream(open(path))\n    while !eof(rdr)\n        readbytes!(rdr, buffer)\n    end\nend```\nwith `cat my_file &gt; /dev/null` , I get 370 ms for TranscodingStreams and 240 ms for `cat` . Does anyone know if a thorough optimization has been attempted?","user":"U7HAYKY9X","ts":"1608240108.139500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3wJn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"TranscodingStreams.jl is the best bet we have for very fast IO buffering, right? It seems like some performance is still left on the table:\nComparing this\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function bufferfile(path, buffer::Vector{UInt8})\n    rdr = NoopStream(open(path))\n    while !eof(rdr)\n        readbytes!(rdr, buffer)\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"with "},{"type":"text","text":"cat my_file > /dev/null","style":{"code":true}},{"type":"text","text":" , I get 370 ms for TranscodingStreams and 240 ms for "},{"type":"text","text":"cat","style":{"code":true}},{"type":"text","text":" . Does anyone know if a thorough optimization has been attempted?"}]}]}],"thread_ts":"1608240108.139500","reply_count":52,"reply_users_count":3,"latest_reply":"1609275155.246600","reply_users":["UH24GRBLL","U7HAYKY9X","U01GRS159T8"],"subscribed":false},{"client_msg_id":"88e6d1b2-a169-4dfc-b31b-dd9eb8551017","type":"message","text":"aside from the fact that your noop stream is basically only doing reading and cat is reading &amp; writing, it might be slower because file IO has been thread safe since 1.3","user":"UH24GRBLL","ts":"1608240207.139600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YKBFY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"aside from the fact that your noop stream is basically only doing reading and cat is reading & writing, it might be slower because file IO has been thread safe since 1.3"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"1c835529-1948-49ed-87f3-60cf97e1dca1","type":"message","text":"I think `cat` skips the writing if you do it to devnull (not sure), and IO locking means little when you do it once every 16 KiB","user":"U7HAYKY9X","ts":"1608240376.139800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"StCyo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think "},{"type":"text","text":"cat","style":{"code":true}},{"type":"text","text":" skips the writing if you do it to devnull (not sure), and IO locking means little when you do it once every 16 KiB"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"94222072-311f-4a83-aa89-84ae7981bef9","type":"message","text":"well you can try piping someplace else and see if that makes `cat` slower?","user":"UH24GRBLL","ts":"1608240887.140000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bHy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well you can try piping someplace else and see if that makes "},{"type":"text","text":"cat","style":{"code":true}},{"type":"text","text":" slower?"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ef4072f5-dea5-4d47-8697-fb091f8401a8","type":"message","text":"I have had to manually add my own buffer around TranscodingStreams","user":"U01GRS159T8","ts":"1608311169.140400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mY03","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have had to manually add my own buffer around TranscodingStreams"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"629fc904-5c60-4fbd-bf63-1706713e84c7","type":"message","text":"otherwise very slow and tons of allocations","user":"U01GRS159T8","ts":"1608311189.140600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"isWq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"otherwise very slow and tons of allocations"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"1a13d167-773a-48bc-ac77-1599a53e2be8","type":"message","text":"with CodecZlib and CodecZstd","user":"U01GRS159T8","ts":"1608311199.140800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"osms","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with CodecZlib and CodecZstd"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"c07eba16-3203-4b53-9915-6328047a490f","type":"message","text":"<@U01GRS159T8>  do you have any code of an example of that? I'd like to see if TranscodingStreams can be improved","user":"U7HAYKY9X","ts":"1608312136.141000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y+p","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01GRS159T8"},{"type":"text","text":"  do you have any code of an example of that? I'd like to see if TranscodingStreams can be improved"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"c7d7e7a9-95fa-4af1-8eb1-f053b704d1fe","type":"message","text":"it will take me a bit of time to isolate from the rest of my code","user":"U01GRS159T8","ts":"1608319429.141200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NTs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it will take me a bit of time to isolate from the rest of my code"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"1eaefdd2-5948-4f0f-9020-ae0bd771618c","type":"message","text":"basically I was using the standard read(::IO, type) calls to read a few bytes at a time","user":"U01GRS159T8","ts":"1608319458.141400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mPfbC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"basically I was using the standard read(::IO, type) calls to read a few bytes at a time"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"d1352069-0a44-42f7-84e4-0d63f74505a8","type":"message","text":"and it caused tons of allocations that would show up especially when I was doing it in many threads","user":"U01GRS159T8","ts":"1608319476.141600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AYuf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it caused tons of allocations that would show up especially when I was doing it in many threads"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ae2330dc-0f75-4d65-8549-0eab0da4597c","type":"message","text":"so I changed it to use readbytes() into a buffer and then manually managed the buffer and all the problems went away","user":"U01GRS159T8","ts":"1608319510.141800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ynwr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I changed it to use readbytes() into a buffer and then manually managed the buffer and all the problems went away"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"0bbc010e-4e57-4025-83eb-86b1ddc91a99","type":"message","text":"which is weird because I know Zstd and probably Zlib have their own internal buffers that are substantial","user":"U01GRS159T8","ts":"1608319538.142000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"irk9N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which is weird because I know Zstd and probably Zlib have their own internal buffers that are substantial"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"099c11fb-e1b2-4c29-bf4c-bbeeea7fa515","type":"message","text":"if you're still interested, it seems like write(::IO, ::Int) or write(::IO, ::Ref{Int}) are kind of broken in general","user":"U01GRS159T8","ts":"1609272267.238600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jF+HD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you're still interested, it seems like write(::IO, ::Int) or write(::IO, ::Ref{Int}) are kind of broken in general"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"80666511-0518-4445-a405-ef762116f237","type":"message","text":"even if you explicitly create the Ref yourself it still does this weird noinline thing","user":"U01GRS159T8","ts":"1609272296.238800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1fc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"even if you explicitly create the Ref yourself it still does this weird noinline thing"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"48569431-c192-4df6-9b90-3b26226144a5","type":"message","text":"and the write() call itself will allocate 16-48 bytes","user":"U01GRS159T8","ts":"1609272310.239000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"axNi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and the write() call itself will allocate 16-48 bytes"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"951d46f3-0768-430f-a410-62480a145bf2","type":"message","text":"if instead you call write(::IO, ::Vector{Int}) with a vector of length 1, you get no allocations","user":"U01GRS159T8","ts":"1609272352.239200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LD4=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if instead you call write(::IO, ::Vector{Int}) with a vector of length 1, you get no allocations"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"69bae29c-8f3e-4084-9c7e-bfb0db156ed4","type":"message","text":"I think its this kind of stuff that is making it seem like I have to manually buffer everything","user":"U01GRS159T8","ts":"1609272396.239400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i8o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think its this kind of stuff that is making it seem like I have to manually buffer everything"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ff72cae0-fa5a-4594-892e-99c736e006df","type":"message","text":"what are they calling under the hood?","user":"UH24GRBLL","ts":"1609272401.239600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5l9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what are they calling under the hood?"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ff1fdb8c-2587-4325-bc53-48c8b7e5d8d0","type":"message","text":"maybe the Int write falls back to some generic buffered version unintentionally","user":"UH24GRBLL","ts":"1609272429.239800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qiDu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe the Int write falls back to some generic buffered version unintentionally"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ffcb95fb-e974-4cfa-95bc-88253baa10b7","type":"message","text":"Ill get you the trace one sec","user":"U01GRS159T8","ts":"1609272472.240000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VUX6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ill get you the trace one sec"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"a5228746-614c-4bba-8906-7b93f1488b07","type":"message","text":"but yeah you pass in an Int then it creates a ref and passes that to another function then to another function marked noinline","user":"U01GRS159T8","ts":"1609272492.240200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"woqc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but yeah you pass in an Int then it creates a ref and passes that to another function then to another function marked noinline"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"c0a39dc8-a384-4ba8-a0ac-c5695c340c23","type":"message","text":"then the ref is converted to a Ptr","user":"U01GRS159T8","ts":"1609272505.240400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1X5F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then the ref is converted to a Ptr"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"4b6b3059-6310-4150-92aa-eece61d547f9","type":"message","text":"then it calls unsafe_write","user":"U01GRS159T8","ts":"1609272515.240600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gWY8V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then it calls unsafe_write"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"2ada7003-e9c7-42c2-ad67-2b0b619b4e60","type":"message","text":"for single threaded stuff you probably wont notice the little allocations","user":"U01GRS159T8","ts":"1609272570.240800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K8H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for single threaded stuff you probably wont notice the little allocations"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"b950e6b9-7850-49a5-a5c7-091f6807c260","type":"message","text":"```function write(s::IO, x::Union{Int16,UInt16,Int32,UInt32,Int64,UInt64,Int128,UInt128,Float16,Float32,Float64})\n&gt;626      return write(s, Ref(x))\n 627  end\n\nwrite(s::IO, x::Ref{T}) where {T} = unsafe_write(s, x, Core.sizeof(T))\n\n&gt;620  @noinline unsafe_write(s::IO, p::Ref{T}, n::Integer) where {T} =\n 621      unsafe_write(s, unsafe_convert(Ref{T}, p)::Ptr, n) # mark noinline to ensure ref is gc-rooted somewhere (by the caller)\n\n&gt;622  unsafe_write(s::IO, p::Ptr, n::Integer) = unsafe_write(s, convert(Ptr{UInt8}, p), convert(UInt, n))\n\nthen finally into unsafe_write in TranscodingStreams```","user":"U01GRS159T8","ts":"1609272708.241000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"84ApY","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function write(s::IO, x::Union{Int16,UInt16,Int32,UInt32,Int64,UInt64,Int128,UInt128,Float16,Float32,Float64})\n>626      return write(s, Ref(x))\n 627  end\n\nwrite(s::IO, x::Ref{T}) where {T} = unsafe_write(s, x, Core.sizeof(T))\n\n>620  @noinline unsafe_write(s::IO, p::Ref{T}, n::Integer) where {T} =\n 621      unsafe_write(s, unsafe_convert(Ref{T}, p)::Ptr, n) # mark noinline to ensure ref is gc-rooted somewhere (by the caller)\n\n>622  unsafe_write(s::IO, p::Ptr, n::Integer) = unsafe_write(s, convert(Ptr{UInt8}, p), convert(UInt, n))\n\nthen finally into unsafe_write in TranscodingStreams"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"9c90cba0-933a-4a2f-91a5-2a33098a9783","type":"message","text":"here's a nicer print of it\n```[1] unsafe_write(stream, input, nbytes) at /home/kwd/.julia/packages/TranscodingStreams/MsN8d/src/stream.jl:453\n  | stream::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = &lt;TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...&gt;\n  | input::Ptr{UInt8} = Ptr{UInt8} @0x00007f59053a2dc0\n  | nbytes::UInt64 = 0x0000000000000008\n[2] unsafe_write(s, p, n) at io.jl:622\n  | s::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = &lt;TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...&gt;\n  | p::Ptr{Int64} = Ptr{Int64} @0x00007f59053a2dc0\n  | n::Int64 = 8\n[3] unsafe_write(s, p, n) at io.jl:620\n  | s::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = &lt;TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...&gt;\n  | p::Base.RefValue{Int64} = Base.RefValue{Int64}(1601769661238836000)\n  | n::Int64 = 8\n  | T::DataType = Int64\n[4] write(s, x) at io.jl:623\n  | s::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = &lt;TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...&gt;\n  | x::Base.RefValue{Int64} = Base.RefValue{Int64}(1601769661238836000)\n  | T::DataType = Int64\n[5] write(s, x) at io.jl:626\n  | s::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = &lt;TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...&gt;\n  | x::Int64 = 1601769661238836000```","user":"U01GRS159T8","ts":"1609272758.241200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Aga","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"here's a nicer print of it\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[1] unsafe_write(stream, input, nbytes) at /home/kwd/.julia/packages/TranscodingStreams/MsN8d/src/stream.jl:453\n  | stream::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = <TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...>\n  | input::Ptr{UInt8} = Ptr{UInt8} @0x00007f59053a2dc0\n  | nbytes::UInt64 = 0x0000000000000008\n[2] unsafe_write(s, p, n) at io.jl:622\n  | s::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = <TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...>\n  | p::Ptr{Int64} = Ptr{Int64} @0x00007f59053a2dc0\n  | n::Int64 = 8\n[3] unsafe_write(s, p, n) at io.jl:620\n  | s::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = <TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...>\n  | p::Base.RefValue{Int64} = Base.RefValue{Int64}(1601769661238836000)\n  | n::Int64 = 8\n  | T::DataType = Int64\n[4] write(s, x) at io.jl:623\n  | s::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = <TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...>\n  | x::Base.RefValue{Int64} = Base.RefValue{Int64}(1601769661238836000)\n  | T::DataType = Int64\n[5] write(s, x) at io.jl:626\n  | s::TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt8,15}}} = <TranscodingStreams.TranscodingStream{CodecZstd.ZstdCompressor,Base.GenericIOBuffer{ChunkedVector{UInt...>\n  | x::Int64 = 1601769661238836000"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"d6481732-46df-42c5-86cf-f90b1b6d07c0","type":"message","text":"ChunkedVector is my own thing","user":"U01GRS159T8","ts":"1609272831.241400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cqG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ChunkedVector is my own thing"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"d16c7c72-85c6-4efa-a31a-9be27ea795b8","type":"message","text":"anyway this is a lot of work to write 8 bytes to a stream","user":"U01GRS159T8","ts":"1609272858.241600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lIlXQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"anyway this is a lot of work to write 8 bytes to a stream"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"57e3d5a2-77ab-4a52-ac3a-dd0b3d9af838","type":"message","text":"esp I think that no inline call must be a killer","user":"U01GRS159T8","ts":"1609273203.241800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rLnz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"esp I think that no inline call must be a killer"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"36435bde-d1cb-490e-b52f-f6597de3be2e","type":"message","text":"uuuhh I see nothing in that first call chain that should allocate at all :thinking_face:","user":"UH24GRBLL","ts":"1609273362.242000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7cE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uuuhh I see nothing in that first call chain that should allocate at all "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"1861d5ad-4908-4906-9970-712529f08ec4","type":"message","text":"How does it create a Ref from an Int?","user":"U01GRS159T8","ts":"1609273483.242200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cTVdl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How does it create a Ref from an Int?"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"23c951cf-bf82-423b-abd6-a72cbc621f0c","type":"message","text":"Doesnt the ref have to point to the heap?","user":"U01GRS159T8","ts":"1609273499.242400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I11N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Doesnt the ref have to point to the heap?"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"2d730b15-cc34-482f-a6e3-70c942ad9f8f","type":"message","text":"no, don't think so","user":"UH24GRBLL","ts":"1609273654.242600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IdyN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, don't think so"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"4ad3e4b5-6662-4328-b14e-472ecc15eed0","type":"message","text":"Ref/Ptr on the stack is perfectly fine, as long as it doesn't escape","user":"UH24GRBLL","ts":"1609273668.242800","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609273677.000000"},"blocks":[{"type":"rich_text","block_id":"lCK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ref/Ptr on the stack is perfectly fine, as long as it doesn't escape"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"e3bef8cc-6b7c-407e-baa1-65865e62f65b","type":"message","text":"ok because pointer_from_objref only works on mutables","user":"U01GRS159T8","ts":"1609273710.243100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0MA2j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok because pointer_from_objref only works on mutables"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"de854c26-0ce8-4901-98ca-576b396c3e0b","type":"message","text":"so imo `write(io, 1234)` should never allocate if `io` has enough space","user":"UH24GRBLL","ts":"1609273725.243300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3i=2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so imo "},{"type":"text","text":"write(io, 1234)","style":{"code":true}},{"type":"text","text":" should never allocate if "},{"type":"text","text":"io","style":{"code":true}},{"type":"text","text":" has enough space"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"e31eea38-7cb3-4975-a27c-ebbfcdd2c965","type":"message","text":"so afaict there's no way to get a pointer to a stack address","user":"U01GRS159T8","ts":"1609273730.243500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uzl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so afaict there's no way to get a pointer to a stack address"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"cc3cf801-b5a3-4d6c-8253-1ebf93de4be7","type":"message","text":"does it allocate?","user":"UH24GRBLL","ts":"1609273735.243700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EekGS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does it allocate?"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"02ac903f-5e03-4820-8c9d-1afebd49fe11","type":"message","text":"is there a `pointer_from_objref` here? I don't see it or I'm missing it","user":"UH24GRBLL","ts":"1609273767.243900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mSGP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a "},{"type":"text","text":"pointer_from_objref","style":{"code":true}},{"type":"text","text":" here? I don't see it or I'm missing it"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"cb9b2b5a-4b11-4215-b3d5-91d56ecbf52a","type":"message","text":"no Im just saying that if you try to call pointer_from_objref on a non mutable (ie something that may be on the stack or heap) it won't let you","user":"U01GRS159T8","ts":"1609273800.244100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"igFN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no Im just saying that if you try to call pointer_from_objref on a non mutable (ie something that may be on the stack or heap) it won't let you"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"d074208c-da05-40a9-9c3c-eb56ed84be22","type":"message","text":"mutables are always on the heap","user":"U01GRS159T8","ts":"1609273805.244300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"am0zD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"mutables are always on the heap"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"9fe2a728-0e33-470a-8d62-3f49eb2527bd","type":"message","text":"so what Im saying is I dont think Ref or Ptr can ever point to something thats on the stack","user":"U01GRS159T8","ts":"1609273822.244500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"41U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so what Im saying is I dont think Ref or Ptr can ever point to something thats on the stack"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"326685fe-8ca7-4ef9-9bae-64bfab073f62","type":"message","text":"so if the value Im trying to write is on the stack, it looks like they allocate some space on the heap, copy my value into it, and then create a ptr or ref that points to it","user":"U01GRS159T8","ts":"1609273859.244700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XNgN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so if the value Im trying to write is on the stack, it looks like they allocate some space on the heap, copy my value into it, and then create a ptr or ref that points to it"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"69e17c24-180a-442a-ba77-99ca345d234f","type":"message","text":"the docstrings don't mention that they have to point to heap allocated stuff, or I'm misreading things","user":"UH24GRBLL","ts":"1609273884.244900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2zv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the docstrings don't mention that they have to point to heap allocated stuff, or I'm misreading things"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"122af11a-61e9-4e10-a277-73b388ffc695","type":"message","text":"`pointer_from_objref` mentions it, but Ptr and Ref themselves don't","user":"UH24GRBLL","ts":"1609273921.245100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z8wW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pointer_from_objref","style":{"code":true}},{"type":"text","text":" mentions it, but Ptr and Ref themselves don't"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"869c5a0f-782c-420c-97cd-b80d64ead1c9","type":"message","text":"if `write(io, 1234)` allocates, that should be changed imo","user":"UH24GRBLL","ts":"1609273976.245300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IqdlY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if "},{"type":"text","text":"write(io, 1234)","style":{"code":true}},{"type":"text","text":" allocates, that should be changed imo"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"6b135a56-0943-437c-9dfc-d8827db888ae","type":"message","text":"```julia&gt; let; io = IOBuffer(); println(length(io.data)); @time write(io, 1234); println(length(io.data)); @time write(io, 1234); end\n32\n  0.000001 seconds (1 allocation: 16 bytes)\n32\n  0.000000 seconds (1 allocation: 16 bytes)```","user":"U01GRS159T8","ts":"1609274266.245500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ocrut","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> let; io = IOBuffer(); println(length(io.data)); @time write(io, 1234); println(length(io.data)); @time write(io, 1234); end\n32\n  0.000001 seconds (1 allocation: 16 bytes)\n32\n  0.000000 seconds (1 allocation: 16 bytes)"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"9e733a04-d6c3-444b-addf-0e1cb5b75aad","type":"message","text":"buffer has room, write allocates","user":"U01GRS159T8","ts":"1609274281.245700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kdhG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"buffer has room, write allocates"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"b46768cb-eb6f-4f5b-883b-7ba5c50e10e9","type":"message","text":"well that's weird","user":"UH24GRBLL","ts":"1609275105.245900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t=p6m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well that's weird"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"500116a5-a2b1-4bd7-9a49-578d6a9c5f9d","type":"message","text":"Let's get some more people here, this thread is a little old","user":"UH24GRBLL","ts":"1609275132.246100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lnai","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's get some more people here, this thread is a little old"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"},{"type":"message","subtype":"thread_broadcast","text":"should `write(io, 1234)` allocate?","user":"UH24GRBLL","ts":"1609275144.246300","thread_ts":"1608240108.139500","root":{"client_msg_id":"098d0cf6-d109-41cc-a560-36f954d58aaa","type":"message","text":"TranscodingStreams.jl is the best bet we have for very fast IO buffering, right? It seems like some performance is still left on the table:\nComparing this\n```function bufferfile(path, buffer::Vector{UInt8})\n    rdr = NoopStream(open(path))\n    while !eof(rdr)\n        readbytes!(rdr, buffer)\n    end\nend```\nwith `cat my_file &gt; /dev/null` , I get 370 ms for TranscodingStreams and 240 ms for `cat` . Does anyone know if a thorough optimization has been attempted?","user":"U7HAYKY9X","ts":"1608240108.139500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3wJn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"TranscodingStreams.jl is the best bet we have for very fast IO buffering, right? It seems like some performance is still left on the table:\nComparing this\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function bufferfile(path, buffer::Vector{UInt8})\n    rdr = NoopStream(open(path))\n    while !eof(rdr)\n        readbytes!(rdr, buffer)\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"with "},{"type":"text","text":"cat my_file > /dev/null","style":{"code":true}},{"type":"text","text":" , I get 370 ms for TranscodingStreams and 240 ms for "},{"type":"text","text":"cat","style":{"code":true}},{"type":"text","text":" . Does anyone know if a thorough optimization has been attempted?"}]}]}],"thread_ts":"1608240108.139500","reply_count":52,"reply_users_count":3,"latest_reply":"1609275155.246600","reply_users":["UH24GRBLL","U7HAYKY9X","U01GRS159T8"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"GeR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"should "},{"type":"text","text":"write(io, 1234)","style":{"code":true}},{"type":"text","text":" allocate?"}]}]}],"client_msg_id":"1007e5bd-1825-4639-8b12-135136e5da00"},{"client_msg_id":"eea252f9-d481-4c04-9667-7e5ea140af3b","type":"message","text":"imo it shouldn't","user":"UH24GRBLL","ts":"1609275155.246600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I++4H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"imo it shouldn't"}]}]}],"thread_ts":"1608240108.139500","parent_user_id":"U7HAYKY9X"}]