[{"client_msg_id":"10557393-6712-46e7-a0d4-a8c913bd04ba","type":"message","text":"I'm just doing something like:\n```for i in 1:length(vals)\n    old = vals[i]\n    vals[i] = MyStruct(old.a, old.b, old.c + 10)\nend```","user":"UCNPT22MQ","ts":"1615324721.063200","team":"T68168MUP","edited":{"user":"UCNPT22MQ","ts":"1615324757.000000"},"blocks":[{"type":"rich_text","block_id":"yLLr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm just doing something like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for i in 1:length(vals)\n    old = vals[i]\n    vals[i] = MyStruct(old.a, old.b, old.c + 10)\nend"}]}]}],"thread_ts":"1615324721.063200","reply_count":39,"reply_users_count":4,"latest_reply":"1615331938.071400","reply_users":["UH24GRBLL","UCNPT22MQ","U0179G7FG4F","UAUPJLBQX"],"subscribed":false},{"client_msg_id":"d5903758-313c-414e-bf91-382e10ba96db","type":"message","text":"what does `MyStruct` look like in your case?","user":"UH24GRBLL","ts":"1615324806.063400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qMoe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what does "},{"type":"text","text":"MyStruct","style":{"code":true}},{"type":"text","text":" look like in your case?"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"4708cc5b-b6f3-4f94-b6c3-967b4a4a91b7","type":"message","text":"might simply be an alignment issue","user":"UH24GRBLL","ts":"1615324812.063600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GB1Ca","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"might simply be an alignment issue"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"075cbadf-6d22-4bca-bcb3-d9e72fe32050","type":"message","text":"also, in a function or not?","user":"UH24GRBLL","ts":"1615324822.063800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6hsj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, in a function or not?"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"97a447b4-97fb-4985-be75-5fd5ba67808f","type":"message","text":"ah, there may simply be an `@inbounds` missing","user":"UH24GRBLL","ts":"1615324889.064000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9nn6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, there may simply be an "},{"type":"text","text":"@inbounds","style":{"code":true}},{"type":"text","text":" missing"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F"],"count":1}]},{"client_msg_id":"aa9ee86e-768f-4b13-b877-f150d8a4505f","type":"message","text":"Sorry, away from desk now. MyStruct is, say, Int, Float64, Int16\nAll in a function, with @inbounds &amp; @simd","user":"UCNPT22MQ","ts":"1615324932.064200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HMmN0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry, away from desk now. MyStruct is, say, Int, Float64, Int16\nAll in a function, with @inbounds & @simd"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"f1f94356-e57d-483a-9827-039d194e8dce","type":"message","text":"that's 144 bits - I'm surprised C++ scatters here","user":"UH24GRBLL","ts":"1615324980.064400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SKNIW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's 144 bits - I'm surprised C++ scatters here"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"3f086d9a-fc5a-4dd6-869a-30cc579269d1","type":"message","text":"Presumably the struct would pad to a multiple of word size though?","user":"UCNPT22MQ","ts":"1615325031.064600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pp+u=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Presumably the struct would pad to a multiple of word size though?"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"3d70cfaf-4a71-44af-ba17-3f386a170320","type":"message","text":"In both languages?","user":"UCNPT22MQ","ts":"1615325036.064800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sAdu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In both languages?"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"71237a46-fefa-427f-bb38-5e4b520a07dd","type":"message","text":"iirc there's no automatic padding in julia","user":"UH24GRBLL","ts":"1615325042.065000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r4o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"iirc there's no automatic padding in julia"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"16584a16-1d5e-4599-abcf-4d421bf0d44c","type":"message","text":"only 85% sure though","user":"UH24GRBLL","ts":"1615325057.065200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ayowl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"only 85% sure though"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"0d677470-724c-4ed9-8e32-5f5f97cf6b5e","type":"message","text":"you could also try `@avx` form LoopVectorization","user":"UH24GRBLL","ts":"1615325065.065400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1615325071.000000"},"blocks":[{"type":"rich_text","block_id":"fFSrP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could also try "},{"type":"text","text":"@avx","style":{"code":true}},{"type":"text","text":" form LoopVectorization"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"2b381e51-dd31-4804-8c0f-cd3d6999dcf4","type":"message","text":"Hmm, must be for it to be accessible in an array?","user":"UCNPT22MQ","ts":"1615325073.065700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cyu8P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, must be for it to be accessible in an array?"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"870bb6c0-d6fc-461c-acef-0d0324ea0f1d","type":"message","text":"Clang is generating `vinserti128`","user":"UCNPT22MQ","ts":"1615325099.065900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zzfT=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Clang is generating "},{"type":"text","text":"vinserti128","style":{"code":true}}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"7ced9a42-a8f2-4d00-90fc-e6b5b51582f7","type":"message","text":"Sorry, I'm talking rubbish, it only needs to be a multiple of byte to have an address...","user":"UCNPT22MQ","ts":"1615325145.066100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dK6gJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry, I'm talking rubbish, it only needs to be a multiple of byte to have an address..."}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"b6709097-9c31-4a9a-a788-cb9b07e28f62","type":"message","text":"<@U6QF223TN> I'm pretty sure we do pad structs automatically to a multiple of the biggest element I don't think we pad between elements, but that's not relevant here.","user":"U0179G7FG4F","ts":"1615325148.066300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uXM=","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6QF223TN"},{"type":"text","text":" I'm pretty sure we do pad structs automatically to a multiple of the biggest element I don't think we pad between elements, but that's not relevant here."}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"0879febe-e81e-41a2-8aaa-2b9c3ddf24ba","type":"message","text":"I think you pinged the wrong person","user":"UH24GRBLL","ts":"1615325471.066600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YK4Eq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you pinged the wrong person"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"f7980a44-52fb-4d57-ab4e-686c82511114","type":"message","text":"When I get back, I'll experiment with explicit padding fields","user":"UCNPT22MQ","ts":"1615325474.066800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+gv3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When I get back, I'll experiment with explicit padding fields"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"c265f93e-51c7-45ec-8132-1031fc3a4f8e","type":"message","text":"I definitely remember some place where explicit padding fields allowed for more SIMD because of alignment","user":"UH24GRBLL","ts":"1615325519.067000","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1615325524.000000"},"blocks":[{"type":"rich_text","block_id":"xGgww","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I definitely remember some place where explicit padding fields allowed for more SIMD because of alignment"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"127e205b-d594-4299-9703-eca268a0f594","type":"message","text":"Yep, it makes sense and I hadn't thought of it. Not sure what the default padding in c++ is - do you?","user":"UCNPT22MQ","ts":"1615325546.067300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TkyFE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yep, it makes sense and I hadn't thought of it. Not sure what the default padding in c++ is - do you?"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"bf33a0ab-bf2c-4a4d-8ece-8177f33e016c","type":"message","text":"depends on the compiler","user":"UH24GRBLL","ts":"1615325555.067500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/ZH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"depends on the compiler"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"4c10a9db-8096-4aec-844e-1bfd64a8712e","type":"message","text":"Thanks for your help!","user":"UCNPT22MQ","ts":"1615325555.067700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iZo=D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for your help!"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"605530e7-93a3-421b-a4c6-7d8f20a67077","type":"message","text":"Ok","user":"UCNPT22MQ","ts":"1615325560.067900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KGJXs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"5bae5415-ebe9-45fb-b9a3-462748ac3c29","type":"message","text":"you can check godbolt though","user":"UH24GRBLL","ts":"1615325574.068100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ly8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can check godbolt though"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"c23d0cb7-0e65-489d-9120-a2630c2ab122","type":"message","text":"for more specific help, I guess we'd need more code :)","user":"UH24GRBLL","ts":"1615325657.068300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JC27","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for more specific help, I guess we'd need more code :)"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"dcff2892-ea9d-4b08-bbae-dd7586258b84","type":"message","text":"Julia pads fields.","user":"UAUPJLBQX","ts":"1615330305.068500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KvN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia pads fields."}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"e2a6a5c1-c3c6-46c4-9cf0-e45a2c8f1974","type":"message","text":"It uses the same alignment as C for interoperability","user":"UAUPJLBQX","ts":"1615330336.068700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cHy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It uses the same alignment as C for interoperability"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"a5e142ff-0223-44a5-82e5-d1afa5f78988","type":"message","text":"```julia&gt; t = (zero(Int64),zero(Int32),zero(Int64),zero(Int8),zero(Int64));\n\njulia&gt; sizeof(t)\n40\n\njulia&gt; sizeof(Int64) * length(t)\n40\n\njulia&gt; mapreduce(sizeof,+,t)\n29```","user":"UAUPJLBQX","ts":"1615330582.068900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f0NE","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> t = (zero(Int64),zero(Int32),zero(Int64),zero(Int8),zero(Int64));\n\njulia> sizeof(t)\n40\n\njulia> sizeof(Int64) * length(t)\n40\n\njulia> mapreduce(sizeof,+,t)\n29"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"353bcad0-f13f-4269-bc13-cba760381a70","type":"message","text":"Note that `@avx` still only works with homogenous vectors of types `T&lt;:Union{Bool,Base.HWReal}`.","user":"UAUPJLBQX","ts":"1615330716.069100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LP5n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Note that "},{"type":"text","text":"@avx","style":{"code":true}},{"type":"text","text":" still only works with homogenous vectors of types "},{"type":"text","text":"T<:Union{Bool,Base.HWReal}","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"b8f4f1c8-e2c7-44f5-a9cc-f0f7764860f4","type":"message","text":"If you wanted to try that, you'd need to reinterpret the array of structs into an array of type of whatever field you want to access (preferably with the new `reinterpret(reshape, ...` in Julia 1.6), and access the appropriate index.","user":"UAUPJLBQX","ts":"1615330780.069300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FEjdt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you wanted to try that, you'd need to reinterpret the array of structs into an array of type of whatever field you want to access (preferably with the new "},{"type":"text","text":"reinterpret(reshape, ...","style":{"code":true}},{"type":"text","text":" in Julia 1.6), and access the appropriate index."}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"37845aee-f4dc-4378-80d4-5ea73b98a96f","type":"message","text":"`@avx` will use gather/scatter for non-contiguous memory accesses.","user":"UAUPJLBQX","ts":"1615330838.069500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aFj6h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@avx","style":{"code":true}},{"type":"text","text":" will use gather/scatter for non-contiguous memory accesses."}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"cd5a8686-baac-418f-8858-b28b3a2e43f9","type":"message","text":"But...I think `@inbounds @simd` really should too, so it'd help if you could provide an example.","user":"UAUPJLBQX","ts":"1615330862.069700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mSKVY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But...I think "},{"type":"text","text":"@inbounds @simd","style":{"code":true}},{"type":"text","text":" really should too, so it'd help if you could provide an example."}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"28117f9c-a284-46d1-8612-780a4c7ea8df","type":"message","text":"Something else you could consider is using `StructArrays.jl`","user":"UAUPJLBQX","ts":"1615330883.069900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E3d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Something else you could consider is using "},{"type":"text","text":"StructArrays.jl","style":{"code":true}}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"f60cca4c-6cbd-4639-919e-0734f0bcf983","type":"message","text":"If you find yourself manipulating one field at a time of each in a vector often, that'll almost certainly give you a good performance boost.","user":"UAUPJLBQX","ts":"1615330925.070100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Jk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you find yourself manipulating one field at a time of each in a vector often, that'll almost certainly give you a good performance boost."}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"bc889071-14c9-4f46-98f7-f3841985c349","type":"message","text":"(gather and scatter aren't faster on Intel or AMD systems than just doing each load/store serially, meaning your CPU has to have enough compute instructions to do to be bottlenecked by them for gather/scatter to be profitable)","user":"UAUPJLBQX","ts":"1615331012.070300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PULh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(gather and scatter aren't faster on Intel or AMD systems than just doing each load/store serially, meaning your CPU has to have enough compute instructions to do to be bottlenecked by them for gather/scatter to be profitable)"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"e19a4ad8-c3e5-4eac-a575-9074b041849f","type":"message","text":"Thanks. Back now, let me try to put together a concrete example. Would be great if we had Julia godbolt","user":"UCNPT22MQ","ts":"1615331165.070500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PjL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. Back now, let me try to put together a concrete example. Would be great if we had Julia godbolt"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"31d3cb2a-5a83-45e1-a532-9bcbc5c8fd6f","type":"message","text":"We have `@code_native` which is pretty close","user":"U0179G7FG4F","ts":"1615331541.070700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OyVm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We have "},{"type":"text","text":"@code_native","style":{"code":true}},{"type":"text","text":" which is pretty close"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"6ba7a989-e45b-4470-b29c-856dc83c862a","type":"message","text":"```struct MyStruct\n    a::Int\n    b::Float64\n    c::Int16\nend\n@assert sizeof(MyStruct) == 24\ndest = Vector{MyStruct}(undef, 1_000_000)\nfunction modify(xs::Vector{MyStruct})\n    @inbounds @simd for i in 1:length(xs)\n        x = xs[i]\n        xs[i] = MyStruct(x.a + 2, x.a, x.a)\n    end\n    return xs\nend\n@code_native debuginfo=:none modify(dest)\njulia&gt; @code_native debuginfo=:none modify(dest)\n        .text\n        pushq   %rax\n        movq    %rsi, (%rsp)\n        movq    (%rsi), %rax\n        movq    8(%rax), %rcx\n        testq   %rcx, %rcx\n        je      L77\n        movq    (%rax), %rdx\n        nopw    %cs:(%rax,%rax)\nL32:\n        movq    (%rdx), %rsi\n        movswq  %si, %rdi\n        cmpq    %rsi, %rdi\n        jne     L79\n        vcvtsi2sd       %rsi, %xmm1, %xmm0\n        movq    %rsi, %rdi\n        addq    $2, %rdi\n        movw    %si, 16(%rdx)\n        vmovsd  %xmm0, 8(%rdx)\n        movq    %rdi, (%rdx)\n        addq    $24, %rdx\n        decq    %rcx\n        jne     L32\nL77:\n        popq    %rcx\n        retq\nL79:\n        movabsq $throw_inexacterror, %rax\n        movabsq $140018999185664, %rdi          # imm = 0x7F58B6B55100\n        callq   *%rax\n        ud2```","user":"UCNPT22MQ","ts":"1615331827.070900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nSV","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct MyStruct\n    a::Int\n    b::Float64\n    c::Int16\nend\n@assert sizeof(MyStruct) == 24\ndest = Vector{MyStruct}(undef, 1_000_000)\nfunction modify(xs::Vector{MyStruct})\n    @inbounds @simd for i in 1:length(xs)\n        x = xs[i]\n        xs[i] = MyStruct(x.a + 2, x.a, x.a)\n    end\n    return xs\nend\n@code_native debuginfo=:none modify(dest)\njulia> @code_native debuginfo=:none modify(dest)\n        .text\n        pushq   %rax\n        movq    %rsi, (%rsp)\n        movq    (%rsi), %rax\n        movq    8(%rax), %rcx\n        testq   %rcx, %rcx\n        je      L77\n        movq    (%rax), %rdx\n        nopw    %cs:(%rax,%rax)\nL32:\n        movq    (%rdx), %rsi\n        movswq  %si, %rdi\n        cmpq    %rsi, %rdi\n        jne     L79\n        vcvtsi2sd       %rsi, %xmm1, %xmm0\n        movq    %rsi, %rdi\n        addq    $2, %rdi\n        movw    %si, 16(%rdx)\n        vmovsd  %xmm0, 8(%rdx)\n        movq    %rdi, (%rdx)\n        addq    $24, %rdx\n        decq    %rcx\n        jne     L32\nL77:\n        popq    %rcx\n        retq\nL79:\n        movabsq $throw_inexacterror, %rax\n        movabsq $140018999185664, %rdi          # imm = 0x7F58B6B55100\n        callq   *%rax\n        ud2"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"08571631-3aaf-4f7b-8cfd-727eb2f7a591","type":"message","text":"Here's the julia code, and what I see on cascade lake. and here's the C++ equivalent: <https://godbolt.org/z/W7nYjx>","user":"UCNPT22MQ","ts":"1615331846.071100","team":"T68168MUP","edited":{"user":"UCNPT22MQ","ts":"1615331854.000000"},"blocks":[{"type":"rich_text","block_id":"eK=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's the julia code, and what I see on cascade lake. and here's the C++ equivalent: "},{"type":"link","url":"https://godbolt.org/z/W7nYjx"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"},{"client_msg_id":"da40e5e2-d7a0-4620-9aec-2112184e2f08","type":"message","text":"so clang has managed to avx512 this, where I can't really tell if Julia is getting any SIMD at all. There are 2 vector instructions in there but I'm unclear on exactly what they're doing, since the rest seems scalar","user":"UCNPT22MQ","ts":"1615331938.071400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nHYU=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so clang has managed to avx512 this, where I can't really tell if Julia is getting any SIMD at all. There are 2 vector instructions in there but I'm unclear on exactly what they're doing, since the rest seems scalar"}]}]}],"thread_ts":"1615324721.063200","parent_user_id":"UCNPT22MQ"}]