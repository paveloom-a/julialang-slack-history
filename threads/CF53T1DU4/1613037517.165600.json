[{"client_msg_id":"1b182b53-16a1-4469-83d7-2334911df9c3","type":"message","text":"Can I somehow have the operation\n```function multiply_test(a, b, c, d)\n    mul!(a, b .+ c, d)\nend\n\na = rand(500, 500)\nb = rand(500, 500)\nc = rand(500, 500)\nd = rand(500, 500)\n@btime multiply_test($a, $b, $c, $d)```\nnot allocate any space for `b.+c` ?","user":"U7PD3M3L5","ts":"1613037517.165600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/wz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can I somehow have the operation\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function multiply_test(a, b, c, d)\n    mul!(a, b .+ c, d)\nend\n\na = rand(500, 500)\nb = rand(500, 500)\nc = rand(500, 500)\nd = rand(500, 500)\n@btime multiply_test($a, $b, $c, $d)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"not allocate any space for "},{"type":"text","text":"b.+c","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1613037517.165600","reply_count":11,"reply_users_count":3,"latest_reply":"1613040903.172500","reply_users":["UH24GRBLL","U7PD3M3L5","U01H36BUDJB"],"subscribed":false},{"client_msg_id":"359a2e2c-aeaa-47ae-b65f-78576eca6e77","type":"message","text":"is either of them allowed to be destroyed?","user":"UH24GRBLL","ts":"1613037633.165700","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1613037637.000000"},"blocks":[{"type":"rich_text","block_id":"0VU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is either of them allowed to be destroyed?"}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"6d4e78c8-6244-4e74-839c-e317354672b2","type":"message","text":"the result of the broadcast has to be materialized before it can be passed into `mul!`","user":"UH24GRBLL","ts":"1613037711.166000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6S/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the result of the broadcast has to be materialized before it can be passed into "},{"type":"text","text":"mul!","style":{"code":true}}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"f571a57a-72b5-4202-9933-8040b8d70067","type":"message","text":"no unfortunately they cannot be overwritten. The only alternative I could come up with is\n```    mul!(a, b, d)\n    mul!(a, c, d, 1, 1)```\nbut that is more costly than the allocation","user":"U7PD3M3L5","ts":"1613037840.166200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QZ3HE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no unfortunately they cannot be overwritten. The only alternative I could come up with is\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    mul!(a, b, d)\n    mul!(a, c, d, 1, 1)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but that is more costly than the allocation"}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"3c4bd687-0151-4ad0-9540-6fb7db3b4f7a","type":"message","text":"would it be acceptable to pass a pre-allocated vector into `multiply_test` to store the intermediary result?","user":"U01H36BUDJB","ts":"1613037947.166400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K6rYK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"would it be acceptable to pass a pre-allocated vector into "},{"type":"text","text":"multiply_test","style":{"code":true}},{"type":"text","text":" to store the intermediary result?"}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"e24e7c03-886b-4367-8d48-efa85ec684f7","type":"message","text":"yes that is my last option in case that part will take to long","user":"U7PD3M3L5","ts":"1613040481.166800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"doQ3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes that is my last option in case that part will take to long"}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"a1a87ce1-d54f-4673-a37f-e3d426c4ab3c","type":"message","text":"yeah I mean I don't really see any other option. There's no magic here... all operations have to have some location in memory to which the result is written. That can be either in-place (overwrite `a` or `b`), into a buffer (preallocated output argument), or into newly allocated memory. That's true in all programming environments.","user":"U01H36BUDJB","ts":"1613040727.170000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dyR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah I mean I don't really see any other option. There's no magic here... all operations have to have some location in memory to which the result is written. That can be either in-place (overwrite "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":"), into a buffer (preallocated output argument), or into newly allocated memory. That's true in all programming environments."}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"1e080107-5fda-4775-b13e-73f992521a6c","type":"message","text":"If you can pass the dimensions of your arrays as type arguments, you could potentially use `SArray` to stack allocate it though.","user":"U01H36BUDJB","ts":"1613040770.171100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xBK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you can pass the dimensions of your arrays as type arguments, you could potentially use "},{"type":"text","text":"SArray","style":{"code":true}},{"type":"text","text":" to stack allocate it though."}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"900af270-72a6-40e8-9edf-80daf282fe1c","type":"message","text":"there's diminishing returns for larger sizes though","user":"UH24GRBLL","ts":"1613040837.171900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s+hV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's diminishing returns for larger sizes though"}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"1d8e4eef-30fc-4bd1-85a5-bd3811acfe12","type":"message","text":"Yeah I think rule of thumb is &gt;100 tends to be as slow or slower, which makes sense.","user":"U01H36BUDJB","ts":"1613040874.172100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8GZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah I think rule of thumb is >100 tends to be as slow or slower, which makes sense."}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"adb25176-9442-4936-97d6-2f79630e2436","type":"message","text":"Also usually there's a hard limit on available stack memory, but I'm not sure how Julia handles that.","user":"U01H36BUDJB","ts":"1613040900.172300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vBA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also usually there's a hard limit on available stack memory, but I'm not sure how Julia handles that."}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"},{"client_msg_id":"8e212c03-9db5-4372-ba97-f1414cf0d5b4","type":"message","text":"yeah the matrices are so large that I don't hope the one pointer-follow should make the difference","user":"U7PD3M3L5","ts":"1613040903.172500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ve86","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah the matrices are so large that I don't hope the one pointer-follow should make the difference"}]}]}],"thread_ts":"1613037517.165600","parent_user_id":"U7PD3M3L5"}]