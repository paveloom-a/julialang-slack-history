[{"client_msg_id":"826e815f-b75c-4389-be99-72a8fba07e21","type":"message","text":"When you return an array from a function, it always allocates, correct? Is there a way to just return a pointer/reference to that array? Wrap it in `Ref` maybe?","user":"U01H36BUDJB","ts":"1613733455.261300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y84x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When you return an array from a function, it always allocates, correct? Is there a way to just return a pointer/reference to that array? Wrap it in "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" maybe?"}]}]}],"thread_ts":"1613733455.261300","reply_count":7,"reply_users_count":4,"latest_reply":"1613740225.263000","reply_users":["UD0NS8PDF","U01H36BUDJB","UH24GRBLL","UAUPJLBQX"],"subscribed":false},{"client_msg_id":"d87aaffc-b9e8-4906-b8a3-fafe2bb5cb72","type":"message","text":"It’s the creation of the array which allocates. `f!(x,y)` can (and usually does) `return x` without cost.","user":"UD0NS8PDF","ts":"1613733532.261400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Atr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s the creation of the array which allocates. "},{"type":"text","text":"f!(x,y)","style":{"code":true}},{"type":"text","text":" can (and usually does) "},{"type":"text","text":"return x","style":{"code":true}},{"type":"text","text":" without cost."}]}]}],"thread_ts":"1613733455.261300","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"8044055b-6b8b-4d2d-a571-969c3f1e868e","type":"message","text":"Yes but suppose you have a struct `A` with field `vals` that is an array. And you have a function `vals(a::A) = a.vals` . Then when the user calls `x = vals(a)` on their instance of `A` , the data gets copied to a new array for `x` right?","user":"U01H36BUDJB","ts":"1613733700.261600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qfxT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes but suppose you have a struct "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" with field "},{"type":"text","text":"vals","style":{"code":true}},{"type":"text","text":" that is an array. And you have a function "},{"type":"text","text":"vals(a::A) = a.vals","style":{"code":true}},{"type":"text","text":" . Then when the user calls "},{"type":"text","text":"x = vals(a)","style":{"code":true}},{"type":"text","text":" on their instance of "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" , the data gets copied to a new array for "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" right?"}]}]}],"thread_ts":"1613733455.261300","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"aa2492eb-fb59-4178-9a91-0d6c0ebb67d1","type":"message","text":"No, this should just attach the label `x` to the existing array.","user":"UD0NS8PDF","ts":"1613733746.261800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yTsl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, this should just attach the label "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" to the existing array."}]}]}],"thread_ts":"1613733455.261300","parent_user_id":"U01H36BUDJB","reactions":[{"name":"thumbsup_all","users":["U01GMP3HF9C"],"count":1}]},{"client_msg_id":"5a5dcac0-77d5-4981-a99b-02d74d28c8e5","type":"message","text":":thinking_face:","user":"U01H36BUDJB","ts":"1613733764.262000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bmW","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1613733455.261300","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"e47e15b4-71d3-4827-8a1c-098cec8b6e44","type":"message","text":"Ah, ok, I tested it, you're totally right. Phew, that's a relief!","user":"U01H36BUDJB","ts":"1613733914.262300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jugr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, ok, I tested it, you're totally right. Phew, that's a relief!"}]}]}],"thread_ts":"1613733455.261300","parent_user_id":"U01H36BUDJB","reactions":[{"name":"+1","users":["UD0NS8PDF"],"count":1}]},{"client_msg_id":"160e9e04-7c94-481a-8ffc-7b725fd60deb","type":"message","text":"(slices copy though, maybe you're seeing that?)","user":"UH24GRBLL","ts":"1613734293.262600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zLnd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(slices copy though, maybe you're seeing that?)"}]}]}],"thread_ts":"1613733455.261300","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"cad04469-f7c7-4543-b6e5-f4fd5f2aa90a","type":"message","text":"(if you are, use `view`s/`@view`/`@views` as appropriate)","user":"UAUPJLBQX","ts":"1613740225.263000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"onqY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(if you are, use "},{"type":"text","text":"view","style":{"code":true}},{"type":"text","text":"s/"},{"type":"text","text":"@view","style":{"code":true}},{"type":"text","text":"/"},{"type":"text","text":"@views","style":{"code":true}},{"type":"text","text":" as appropriate)"}]}]}],"thread_ts":"1613733455.261300","parent_user_id":"U01H36BUDJB"}]