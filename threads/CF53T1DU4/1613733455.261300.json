[{"client_msg_id":"826e815f-b75c-4389-be99-72a8fba07e21","type":"message","text":"When you return an array from a function, it always allocates, correct? Is there a way to just return a pointer/reference to that array? Wrap it in `Ref` maybe?","user":"U01H36BUDJB","ts":"1613733455.261300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y84x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When you return an array from a function, it always allocates, correct? Is there a way to just return a pointer/reference to that array? Wrap it in "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" maybe?"}]}]}],"thread_ts":"1613733455.261300","reply_count":1,"reply_users_count":1,"latest_reply":"1613733532.261400","reply_users":["UD0NS8PDF"],"subscribed":false},{"client_msg_id":"d87aaffc-b9e8-4906-b8a3-fafe2bb5cb72","type":"message","text":"It’s the creation of the array which allocates. `f!(x,y)` can (and usually does) `return x` without cost.","user":"UD0NS8PDF","ts":"1613733532.261400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Atr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s the creation of the array which allocates. "},{"type":"text","text":"f!(x,y)","style":{"code":true}},{"type":"text","text":" can (and usually does) "},{"type":"text","text":"return x","style":{"code":true}},{"type":"text","text":" without cost."}]}]}],"thread_ts":"1613733455.261300","parent_user_id":"U01H36BUDJB"}]