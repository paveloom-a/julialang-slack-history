[{"client_msg_id":"be34b342-27bf-423f-9c7f-06c335bf262b","type":"message","text":"Which types of operations is julia still lacking behind compared with C in terms of preformamce?\nAre these performance issues related to inherent issues with Julia or simply due to julias relative immaturity?","user":"U01FAHWCMFF","ts":"1609345469.261100","team":"T68168MUP","edited":{"user":"U01FAHWCMFF","ts":"1609345524.000000"},"blocks":[{"type":"rich_text","block_id":"8WzB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which types of operations is julia still lacking behind compared with C in terms of preformamce?\nAre these performance issues related to inherent issues with Julia or simply due to julias relative immaturity?"}]}]}],"thread_ts":"1609345469.261100","reply_count":12,"reply_users_count":6,"latest_reply":"1609354842.265100","reply_users":["U0179G7FG4F","U01FAHWCMFF","UH24GRBLL","UGU761DU2","U01GRS159T8","U7HAYKY9X"],"subscribed":false},{"client_msg_id":"625f15a7-a2ce-42c2-80f6-1a0296c76854","type":"message","text":"There really aren't many","user":"U0179G7FG4F","ts":"1609346348.262300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lo1Bh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There really aren't many"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"01d19493-97df-4f19-920f-63f767d13af0","type":"message","text":"Good to know that Julias limitations dont affect performance. Thanks","user":"U01FAHWCMFF","ts":"1609347001.262500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q8xLL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Good to know that Julias limitations dont affect performance. Thanks"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"8266cb9f-38b8-4103-b76a-8d1cb9822ac4","type":"message","text":"shooting yourself in the foot with pointers?","user":"UH24GRBLL","ts":"1609347025.262700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=tPJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"shooting yourself in the foot with pointers?"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"891d768e-9584-4aa6-8861-2096408980cd","type":"message","text":"I think the biggest footgun for me personally has been type instability; if you avoid it then you really do get C-like performance, but if you miss any then it’s another story. `@code_warntype` FTW","user":"UGU761DU2","ts":"1609352583.263000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l8xB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the biggest footgun for me personally has been type instability; if you avoid it then you really do get C-like performance, but if you miss any then it’s another story. "},{"type":"text","text":"@code_warntype","style":{"code":true}},{"type":"text","text":" FTW"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"raised_hands","users":["U01FAHWCMFF"],"count":1},{"name":"point_up","users":["UB7JS9CHF"],"count":1}]},{"client_msg_id":"2486b011-7fd2-4f31-967a-2c44e372558d","type":"message","text":"the problems I always run into are related to compiler optimizations that may or may not occur, and its hard to tell when they'll actually happen and its sometimes hard to force them to happen","user":"U01GRS159T8","ts":"1609352756.263200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FjmF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the problems I always run into are related to compiler optimizations that may or may not occur, and its hard to tell when they'll actually happen and its sometimes hard to force them to happen"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"heavy_check_mark","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"9a1f6824-3760-4129-9eef-4e3f318fc4b4","type":"message","text":"things like eliding certain small heap allocations or union splitting","user":"U01GRS159T8","ts":"1609352788.263400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"id4l1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"things like eliding certain small heap allocations or union splitting"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"82e2a80c-d6cb-4d8f-ad69-2d782a90d34b","type":"message","text":"No tail call elimination. Relatively slow IO (though I'm not sure where the fault is). Sometimes you hit the internals of Julia which is written in C, and therefore can't inline and be optimized. Poor support for stack-allocated arrays and static arrays.","user":"U7HAYKY9X","ts":"1609354104.263800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X4hB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No tail call elimination. Relatively slow IO (though I'm not sure where the fault is). Sometimes you hit the internals of Julia which is written in C, and therefore can't inline and be optimized. Poor support for stack-allocated arrays and static arrays."}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"dc97ac9a-7698-4e50-8f55-d239a9ddf1a4","type":"message","text":"I'm not sure no tail call is bad. tail call elimination destroys debugging and is usually better written as a loop.","user":"U0179G7FG4F","ts":"1609354167.264000","team":"T68168MUP","edited":{"user":"U0179G7FG4F","ts":"1609354173.000000"},"blocks":[{"type":"rich_text","block_id":"eVe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure no tail call is bad. tail call elimination destroys debugging and is usually better written as a loop."}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"point_up","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"466b7b9f-0ddc-4d77-b7a2-6afbea9a9015","type":"message","text":"jakob this is related to the sometimes poor IO performance\n<https://github.com/JuliaLang/julia/issues/39041>","user":"U01GRS159T8","ts":"1609354250.264300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d6dp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"jakob this is related to the sometimes poor IO performance\n"},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/39041"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"3e1431eb-df85-4c0b-8304-8084b1c50021","type":"message","text":"Better optimized Union types (not sure that's in C, though)","user":"U7HAYKY9X","ts":"1609354271.264500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2IEv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Better optimized Union types (not sure that's in C, though)"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"2c7a2d05-e049-460d-a5d3-97e30315752e","type":"message","text":"Also, garbage collection is slower than manual or deterministic destruction","user":"U7HAYKY9X","ts":"1609354306.264700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"371","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, garbage collection is slower than manual or deterministic destruction"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"this-is-true","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"19b4c04f-932e-4b3e-a682-0da0fafc038a","type":"message","text":"gc is definitely a weakpoint for us. We have the problem that experienced Julia programmers don't often get bit by it since Julia gives you pretty good tools to avoid allocation. Languages like Java have excellent GC since otherwise they would be completely unusable for performance sensitive things. We really should get someone from that world to take a look and see what we could do better","user":"U0179G7FG4F","ts":"1609354842.265100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XOA8b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"gc is definitely a weakpoint for us. We have the problem that experienced Julia programmers don't often get bit by it since Julia gives you pretty good tools to avoid allocation. Languages like Java have excellent GC since otherwise they would be completely unusable for performance sensitive things. We really should get someone from that world to take a look and see what we could do better"}]}]}],"thread_ts":"1609345469.261100","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"raised_hands","users":["U01FAHWCMFF","UB7JS9CHF","UGU761DU2"],"count":3}]}]