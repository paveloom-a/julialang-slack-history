[{"client_msg_id":"e6b257d3-cf7e-4737-b274-9511bd567a2b","type":"message","text":"I need to numerically integrate a slightly complicated function many times, so I'm trying to find a fast way to do it. I don't necessarily need super high precision (ideally beyond 1e-5 but I could make do with less)\n\nI'm currently trying the following with `FastGaussQuadrature` . Might anyone have a suggestion for how to improve performance?\n```function fastgq(f, a, b)\n    nodes, weights = gausslegendre( 10000 );\n    \n    x = 0.5*((b .- a).*nodes .+ (b.+a))\n    \n    out = 0.5*(b.-a)*dot( weights, f.(x) )\n    \n    return(out)\nend```","user":"U91Q3595Y","ts":"1613615785.248800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+0fn9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I need to numerically integrate a slightly complicated function many times, so I'm trying to find a fast way to do it. I don't necessarily need super high precision (ideally beyond 1e-5 but I could make do with less)\n\nI'm currently trying the following with "},{"type":"text","text":"FastGaussQuadrature","style":{"code":true}},{"type":"text","text":" . Might anyone have a suggestion for how to improve performance?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function fastgq(f, a, b)\n    nodes, weights = gausslegendre( 10000 );\n    \n    x = 0.5*((b .- a).*nodes .+ (b.+a))\n    \n    out = 0.5*(b.-a)*dot( weights, f.(x) )\n    \n    return(out)\nend"}]}]}],"thread_ts":"1613615785.248800","reply_count":13,"reply_users_count":5,"latest_reply":"1613631997.251900","reply_users":["U0179G7FG4F","U91Q3595Y","U6C82JCSK","U67D54KS8","UAUPJLBQX"],"subscribed":false},{"client_msg_id":"d50031eb-9538-48ce-9629-987b2d8c912e","type":"message","text":"I think you might want `fastgq(f::F, a, b) where F&lt;:Function` since function types aren't automatically specialized on.","user":"U0179G7FG4F","ts":"1613616291.248900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/XeN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you might want "},{"type":"text","text":"fastgq(f::F, a, b) where F<:Function","style":{"code":true}},{"type":"text","text":" since function types aren't automatically specialized on."}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"662c3275-f821-4461-98d5-d4be3e360500","type":"message","text":"Do I need to declare `F&lt;:Function` somewhere?","user":"U91Q3595Y","ts":"1613616341.249100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NbWG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do I need to declare "},{"type":"text","text":"F<:Function","style":{"code":true}},{"type":"text","text":" somewhere?"}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"8922e223-a050-47dc-bae5-a7f17ee7f986","type":"message","text":"(sorry for the naive question)","user":"U91Q3595Y","ts":"1613616357.249300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i/qt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(sorry for the naive question)"}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"265a3684-a359-44d6-9d27-e305aeee3ee0","type":"message","text":"would this work?\n```function fastgq(f::Function, a, b)\n    nodes, weights = gausslegendre( 10000 );\n    \n    x = 0.5*((b .- a).*nodes .+ (b.+a))\n    \n    out = 0.5*(b.-a)*dot( weights, f.(x) )\n    \n    return(out)\nend```","user":"U91Q3595Y","ts":"1613616455.249500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Gwal","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"would this work?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function fastgq(f::Function, a, b)\n    nodes, weights = gausslegendre( 10000 );\n    \n    x = 0.5*((b .- a).*nodes .+ (b.+a))\n    \n    out = 0.5*(b.-a)*dot( weights, f.(x) )\n    \n    return(out)\nend"}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"ae55b208-7f6b-438a-9751-6cc063d2c1e0","type":"message","text":"no, <https://docs.julialang.org/en/v1/manual/performance-tips/#Be-aware-of-when-Julia-avoids-specializing>","user":"U0179G7FG4F","ts":"1613616526.249700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9B=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/performance-tips/#Be-aware-of-when-Julia-avoids-specializing"}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"a67022a1-d764-487e-ae22-3d1c48270f24","type":"message","text":"Also, I think changing where you apply `f` will save you an allocation.\n\n```function fastgq(f::F, a, b) where {F}\n    nodes, weights = gausslegendre( 10000 );\n    fx = @. f(0.5*((b - a)*nodes + (b+a)))\n    out = 0.5.*(b.-a)*dot( weights, fx )\n    return(out)\nend```\n","user":"U0179G7FG4F","ts":"1613616696.249900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CQli","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, I think changing where you apply "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" will save you an allocation.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function fastgq(f::F, a, b) where {F}\n    nodes, weights = gausslegendre( 10000 );\n    fx = @. f(0.5*((b - a)*nodes + (b+a)))\n    out = 0.5.*(b.-a)*dot( weights, fx )\n    return(out)\nend"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y","reactions":[{"name":"pray","users":["U91Q3595Y"],"count":1}]},{"client_msg_id":"61079a38-9bab-4b58-98dc-eb461e7053a8","type":"message","text":"Thanks!","user":"U91Q3595Y","ts":"1613616845.250100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bmWz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks!"}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"e2dbf70e-45c2-4c57-8977-9362b73677e5","type":"message","text":"So you'd suggest something like the following?\n```h_func(h::H, num) where {H} = ntuple(h, div(num, 2))```\n","user":"U91Q3595Y","ts":"1613616854.250300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DUeXl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So you'd suggest something like the following?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"h_func(h::H, num) where {H} = ntuple(h, div(num, 2))"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"2348aa87-d993-4ddc-9a6d-90962a9965b9","type":"message","text":"if it's performance critical, yes. Specialization can be fairly important","user":"U0179G7FG4F","ts":"1613616936.250500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KDmid","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if it's performance critical, yes. Specialization can be fairly important"}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"25265a87-0922-4751-a80d-0ac4860a3ba2","type":"message","text":"You might want to also consider pre-allocating the nodes and weights arrays especially if you will be reusing them (unless you are already doing that, of course)","user":"U6C82JCSK","ts":"1613623865.250700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h+U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might want to also consider pre-allocating the nodes and weights arrays especially if you will be reusing them (unless you are already doing that, of course)"}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y","reactions":[{"name":"pray","users":["UKG4WF8PJ","U91Q3595Y"],"count":2},{"name":"heavy_check_mark","users":["UAUPJLBQX"],"count":1}]},{"client_msg_id":"ee16f55d-f35c-4b01-b432-3d5a6039ed2f","type":"message","text":"&gt; I think you might want fastgq(f::F, a, b) where F&lt;:Function since function types aren't automatically specialized on.\nThat's only true if the function isn't called in the body, but this one is.","user":"U67D54KS8","ts":"1613631435.251300","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1613631489.000000"},"blocks":[{"type":"rich_text","block_id":"9V2","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I think you might want fastgq(f::F, a, b) where F<:Function since function types aren't automatically specialized on."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"That's only true if the function isn't called in the body, but this one is."}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"5818446a-085c-47c0-9537-9c923be6b1f1","type":"message","text":"It might be better to use some adaptive quadrature, e.g. <https://github.com/JuliaMath/QuadGK.jl>","user":"U67D54KS8","ts":"1613631475.251500","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1613631539.000000"},"blocks":[{"type":"rich_text","block_id":"FQeC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It might be better to use some adaptive quadrature, e.g. "},{"type":"link","url":"https://github.com/JuliaMath/QuadGK.jl"}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"},{"client_msg_id":"08b735a4-2354-42ae-9235-127604c24e59","type":"message","text":"Is `f` being called in the body? Does broadcasting count?\n```julia&gt; Meta.@lower f.(x)\n:($(Expr(:thunk, CodeInfo(\n    @ none within `top-level scope'\n1 ─ %1 = Base.broadcasted(f, x)\n│   %2 = Base.materialize(%1)\n└──      return %2\n))))```","user":"UAUPJLBQX","ts":"1613631997.251900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SaB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" being called in the body? Does broadcasting count?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Meta.@lower f.(x)\n:($(Expr(:thunk, CodeInfo(\n    @ none within `top-level scope'\n1 ─ %1 = Base.broadcasted(f, x)\n│   %2 = Base.materialize(%1)\n└──      return %2\n))))"}]}]}],"thread_ts":"1613615785.248800","parent_user_id":"U91Q3595Y"}]