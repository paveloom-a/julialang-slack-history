[{"client_msg_id":"013325f4-7684-4d59-a775-b08637e7d21e","type":"message","text":"Hello. Running some code of mine with `@time` , I get :`7821.040149 seconds (23.55 G allocations: 1.653 TiB, 21.28% gc time)` . The code essentially consists in iterating over lots of small vectors constructed during the runtime. There is no big data that is read from disk or streamed from outside. The 1.6TiB makes me think I allocate way too much. How extreme are those numbers?","user":"U01MG0TN079","ts":"1616739073.022700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ab7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello. Running some code of mine with "},{"type":"text","text":"@time","style":{"code":true}},{"type":"text","text":" , I get :"},{"type":"text","text":"7821.040149 seconds (23.55 G allocations: 1.653 TiB, 21.28% gc time)","style":{"code":true}},{"type":"text","text":" . The code essentially consists in iterating over lots of small vectors constructed during the runtime. There is no big data that is read from disk or streamed from outside. The 1.6TiB makes me think I allocate way too much. How extreme are those numbers?"}]}]}],"thread_ts":"1616739073.022700","reply_count":31,"reply_users_count":3,"latest_reply":"1616748619.029000","reply_users":["UJ7DVTVQ8","U01MG0TN079","UH24GRBLL"],"is_locked":false,"subscribed":false},{"client_msg_id":"52df6663-afe5-4809-baf1-56333b810aad","type":"message","text":"How small is small? You might be able to improve performance by a lot by using StaticArrays.jl","user":"UJ7DVTVQ8","ts":"1616740451.022800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e1GI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How small is small? You might be able to improve performance by a lot by using StaticArrays.jl"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"da5fb0cf-8516-4469-89d0-e2dbe04db4ec","type":"message","text":"If small is less than about 100, I would give StaticArrays.jl a go","user":"UJ7DVTVQ8","ts":"1616740495.023000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LX2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If small is less than about 100, I would give StaticArrays.jl a go"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"c6759423-95fc-4a13-a720-8434d27906a3","type":"message","text":"small is \\leq 20","user":"U01MG0TN079","ts":"1616740523.023200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9lYXe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"small is \\leq 20"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"c8f4817d-eac6-4be9-950f-db11fa1106e5","type":"message","text":"but staticarrays require static-sized entries, don't they?","user":"U01MG0TN079","ts":"1616740538.023400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AKG5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but staticarrays require static-sized entries, don't they?"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"ad1fb83a-30d1-4f3c-805f-b1945b9add5a","type":"message","text":"Maybe `SizedArray` s make sense, then","user":"U01MG0TN079","ts":"1616740591.023600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sve","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe "},{"type":"text","text":"SizedArray","style":{"code":true}},{"type":"text","text":" s make sense, then"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"2a109c9e-50be-46e9-95e7-f041f769b1b9","type":"message","text":"Say I have a diagonal matrix M and vectors u,v: does the product `u'*M*v` allocate a vector? Would it be better to have a custom routine to do the computation (since no allocation is needed here) ?","user":"U01MG0TN079","ts":"1616740705.023800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GIo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Say I have a diagonal matrix M and vectors u,v: does the product "},{"type":"text","text":"u'*M*v","style":{"code":true}},{"type":"text","text":" allocate a vector? Would it be better to have a custom routine to do the computation (since no allocation is needed here) ?"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"d3d367bd-50be-4779-89e8-ecd646f27ca5","type":"message","text":"It will allocate, but not if you use `dot`","user":"UJ7DVTVQ8","ts":"1616740765.024000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xUMWE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It will allocate, but not if you use "},{"type":"text","text":"dot","style":{"code":true}}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"3a4c343f-47bd-4cc3-8481-29b56f6886b7","type":"message","text":"Dot is that custom function","user":"UJ7DVTVQ8","ts":"1616740780.024200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ylk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Dot is that custom function"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"03e6ee3b-ed29-428f-8f82-8601cde0686f","type":"message","text":"And yeah, StaticArrays.jl require you to have a statically known size. Sometimes this can be worked around by using a function barrier","user":"UJ7DVTVQ8","ts":"1616740822.024400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uyZKv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And yeah, StaticArrays.jl require you to have a statically known size. Sometimes this can be worked around by using a function barrier"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"f955d1b0-fdcd-48ef-ac40-db1030ae95ce","type":"message","text":"are you using mutating functions? even with lots of small vectors, it may be possible to preallocate your working memory","user":"UH24GRBLL","ts":"1616744322.024600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1It+N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are you using mutating functions? even with lots of small vectors, it may be possible to preallocate your working memory"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"a9be3bb8-4687-4533-8f5b-2a2bc3bed1b8","type":"message","text":"<@UJ7DVTVQ8> <https://docs.julialang.org/en/v1/stdlib/LinearAlgebra/#LinearAlgebra.dot-Tuple{Any,%20Any,%20Any}> So it is \"diagonal\" aware?","user":"U01MG0TN079","ts":"1616746074.024800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vq9C","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UJ7DVTVQ8"},{"type":"text","text":" "},{"type":"link","url":"https://docs.julialang.org/en/v1/stdlib/LinearAlgebra/#LinearAlgebra.dot-Tuple{Any,%20Any,%20Any}"},{"type":"text","text":" So it is \"diagonal\" aware?"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"a2db5f04-50b2-4e90-a9c3-e420ce959804","type":"message","text":"<@UH24GRBLL> Do you mean mutating in general, or specifically mutating the vectors? I have some mutation involved, but the vectors are generally treated as immutable I think","user":"U01MG0TN079","ts":"1616746137.025000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bbS","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UH24GRBLL"},{"type":"text","text":" Do you mean mutating in general, or specifically mutating the vectors? I have some mutation involved, but the vectors are generally treated as immutable I think"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"876fcf3f-057a-4b3c-bace-5b72c15d37da","type":"message","text":"both","user":"UH24GRBLL","ts":"1616746242.025200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6LWlq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"both"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"847f1a4c-353c-4265-ba17-abe9469c39bd","type":"message","text":"I see, and the idea is that I can preallocate vectors and specify them wherever I can?","user":"U01MG0TN079","ts":"1616746570.025400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i8lR1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see, and the idea is that I can preallocate vectors and specify them wherever I can?"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"3b8be655-84a9-43a5-b4ba-7ef400d18d6b","type":"message","text":"the idea is to reuse memory","user":"UH24GRBLL","ts":"1616746739.025600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"00a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the idea is to reuse memory"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"aa07e476-f4f9-4f0b-9050-497110ed6a29","type":"message","text":"`dot` with diagonal matrix will dispatch to\n```dot(x::AbstractVector, D::Diagonal, y::AbstractVector) = _mapreduce_prod(dot, x, D, y)```","user":"UJ7DVTVQ8","ts":"1616746739.025800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JmM+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"dot","style":{"code":true}},{"type":"text","text":" with diagonal matrix will dispatch to\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"dot(x::AbstractVector, D::Diagonal, y::AbstractVector) = _mapreduce_prod(dot, x, D, y)"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"10ca1f7d-2b1a-4133-8dfa-4e62358e9024","type":"message","text":"Find it using\n```let a = randn(2), B = Diagonal(randn(2))\n           @edit dot(a,B,a)\nend```","user":"UJ7DVTVQ8","ts":"1616746760.026000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dKta","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Find it using\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"let a = randn(2), B = Diagonal(randn(2))\n           @edit dot(a,B,a)\nend"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"5ad8678a-4e95-4f07-a9b8-8a567ccb292b","type":"message","text":"OK, and one last thing, then: In my case I have the diagonal storred as a vector, actually: what's the performancest way to do this dot product here?","user":"U01MG0TN079","ts":"1616747003.026200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iN0lj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, and one last thing, then: In my case I have the diagonal storred as a vector, actually: what's the performancest way to do this dot product here?"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"eb9cdb14-2338-4218-bb90-9497d32db902","type":"message","text":"there is no `three_way_dot(x,y,z)` and I guess `dot(x,dot(y,z))` allocates","user":"U01MG0TN079","ts":"1616747033.026400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o3U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there is no "},{"type":"text","text":"three_way_dot(x,y,z)","style":{"code":true}},{"type":"text","text":" and I guess "},{"type":"text","text":"dot(x,dot(y,z))","style":{"code":true}},{"type":"text","text":" allocates"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"30f38f15-a9d4-460f-baac-673d380a938a","type":"message","text":"three argument dot exists though?","user":"UH24GRBLL","ts":"1616747119.026600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p86","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"three argument dot exists though?"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"2f5b1480-7249-43e9-b648-8d4a11e515e2","type":"message","text":"it's just `dot(a,b,c)`","user":"UH24GRBLL","ts":"1616747123.026800","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1616747129.000000"},"blocks":[{"type":"rich_text","block_id":"3nR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's just "},{"type":"text","text":"dot(a,b,c)","style":{"code":true}}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"2f284b84-4ff5-44b4-a627-a4bbbe219902","type":"message","text":"the point of `Diagonal` is precisely do represent a diagonal matrix by just storing its diagonal\n\n```Diagonal(V::AbstractVector)               \n                                          \nConstruct a matrix with V as its diagonal.```","user":"UH24GRBLL","ts":"1616747179.027100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3tJA5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the point of "},{"type":"text","text":"Diagonal","style":{"code":true}},{"type":"text","text":" is precisely do represent a diagonal matrix by just storing its diagonal\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Diagonal(V::AbstractVector)               \n                                          \nConstruct a matrix with V as its diagonal."}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"bc984a88-826d-4d7e-ae24-2243009fd05d","type":"message","text":"the reason for it being its own type is precisely to allow specialization based on the type","user":"UH24GRBLL","ts":"1616747206.027300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"THn=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the reason for it being its own type is precisely to allow specialization based on the type"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"4b132f3b-d452-4fc3-b082-37e66c48efca","type":"message","text":"it doesn't actually expand the vector into a dense matrix","user":"UH24GRBLL","ts":"1616747231.027500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Emtq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it doesn't actually expand the vector into a dense matrix"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"95931297-ea7c-409c-971d-5c7324f14685","type":"message","text":"```dot([1],LinearAlgebra.Diagonal([2]),[3])```\nthis works, but removing the `Diagonal()` throws an error on my computer","user":"U01MG0TN079","ts":"1616747319.027700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ewy8R","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"dot([1],LinearAlgebra.Diagonal([2]),[3])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"this works, but removing the "},{"type":"text","text":"Diagonal()","style":{"code":true}},{"type":"text","text":" throws an error on my computer"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"cfe106a4-4ffc-41b2-ba59-3ef7ddc46885","type":"message","text":"OK, so the most reasonable approach is to wrap my diagonal vector into a `Diagonal`  and then just call `dot`  it seems?","user":"U01MG0TN079","ts":"1616747389.027900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G7Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, so the most reasonable approach is to wrap my diagonal vector into a "},{"type":"text","text":"Diagonal","style":{"code":true}},{"type":"text","text":"  and then just call "},{"type":"text","text":"dot","style":{"code":true}},{"type":"text","text":"  it seems?"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"205c94aa-984d-42f0-a9b8-3cad7cb02b88","type":"message","text":"Thanks both!","user":"U01MG0TN079","ts":"1616747392.028100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AFBBB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks both!"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"b20affc3-0507-499c-af96-9c4455f4af96","type":"message","text":"In general, if your matrix has a special structure, it's a good idea to check if that structure is in `LinearAlgebra` or some package as a type, since they implement specialized algorithms that can take advantage of the structure","user":"UH24GRBLL","ts":"1616747670.028300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FLS4T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In general, if your matrix has a special structure, it's a good idea to check if that structure is in "},{"type":"text","text":"LinearAlgebra","style":{"code":true}},{"type":"text","text":" or some package as a type, since they implement specialized algorithms that can take advantage of the structure"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"ae882761-8470-456c-854c-c61e2ea502b1","type":"message","text":"the type is necessary to figure out at compile time which method to call, so you don't have to check the structure every time a method is called","user":"UH24GRBLL","ts":"1616747707.028500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RaG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the type is necessary to figure out at compile time which method to call, so you don't have to check the structure every time a method is called"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"fe7a0ca5-9477-4b34-931d-386c97fcd0fd","type":"message","text":"the advantage is that you can still just write `A*b` and it'll use the correct method, based on the types of `A` and `b`","user":"UH24GRBLL","ts":"1616747736.028700","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1616747739.000000"},"blocks":[{"type":"rich_text","block_id":"+KcvT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the advantage is that you can still just write "},{"type":"text","text":"A*b","style":{"code":true}},{"type":"text","text":" and it'll use the correct method, based on the types of "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"b","style":{"code":true}}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"},{"client_msg_id":"f2f41f9c-4f12-44fe-aca0-b1491b852e61","type":"message","text":"That makes sense, yes!","user":"U01MG0TN079","ts":"1616748619.029000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gP+ip","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That makes sense, yes!"}]}]}],"thread_ts":"1616739073.022700","parent_user_id":"U01MG0TN079"}]