[{"client_msg_id":"c66c35de-4821-45ed-9f77-77e913995d62","type":"message","text":"Hi all, I’d like to present a small experimental compiler package I’ve been working on which some of you may find fun to experiment with:\n\n<https://discourse.julialang.org/t/ann-mixtape-jl-a-static-overlay-and-optimization-tool/58979>","user":"UKA81L34J","ts":"1618062064.038300","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"ANN: Mixtape.jl -- a static overlay and optimization tool","title_link":"https://discourse.julialang.org/t/ann-mixtape-jl-a-static-overlay-and-optimization-tool/58979","text":"Hi all – I’d like to present a small experimental compiler package I’ve been working on with the help of AbstractInterpreter and GPUCompiler (as well as the sick, twisted minds of @vchuravy and @Roger-luo). Here’s the value proposition: Mixtape.jl is a static method overlay and optimization tool which operates during Julia type inference. It allows you to (precisely) insert semantic-intruding changes to lowered code (e.g. replace CodeInfo , pre-optimize CodeInfo , and create other forms of s...","fallback":"JuliaLang: ANN: Mixtape.jl -- a static overlay and optimization tool","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1618061960,"from_url":"https://discourse.julialang.org/t/ann-mixtape-jl-a-static-overlay-and-optimization-tool/58979","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/ann-mixtape-jl-a-static-overlay-and-optimization-tool/58979"}],"blocks":[{"type":"rich_text","block_id":"TZ6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all, I’d like to present a small experimental compiler package I’ve been working on which some of you may find fun to experiment with:\n\n"},{"type":"link","url":"https://discourse.julialang.org/t/ann-mixtape-jl-a-static-overlay-and-optimization-tool/58979"}]}]}],"thread_ts":"1618062064.038300","reply_count":5,"reply_users_count":3,"latest_reply":"1618077115.046200","reply_users":["UB7JS9CHF","UGU761DU2","UKA81L34J"],"is_locked":false,"subscribed":false,"reactions":[{"name":"tada","users":["UCZ7VBGUD","UB7JS9CHF","U6795JH6H","UV98QAPFW","UGU761DU2","U8D9768Q6","UMY1LV01G","UQYEMLNQ4"],"count":8},{"name":"julia-illuminati","users":["UKA81L34J","UB7JS9CHF","UGU761DU2"],"count":3}]},{"client_msg_id":"172c9a02-e6b6-41ae-a6b8-36339404620d","type":"message","text":"Yeah, those “sick, twisted” minds are the best! :slightly_smiling_face:","user":"UB7JS9CHF","ts":"1618065099.039300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hDD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, those “sick, twisted” minds are the best! "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1618062064.038300","parent_user_id":"UKA81L34J"},{"client_msg_id":"3618ddc4-6415-4cd6-8ce9-844f56f811e7","type":"message","text":"(anybody who can come up with a package like Cthulhu.jl is a star in my mind, and the Roger’s work on mind-bending quantum stuff is also wonderful)","user":"UB7JS9CHF","ts":"1618065225.039500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"97p/B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(anybody who can come up with a package like Cthulhu.jl is a star in my mind, and the Roger’s work on mind-bending quantum stuff is also wonderful)"}]}]}],"thread_ts":"1618062064.038300","parent_user_id":"UKA81L34J"},{"client_msg_id":"faa7451a-d124-4c84-93c4-616bae05065e","type":"message","text":"Looks awesome! (and :mind_blown: )\n\nSince it’s already using GPUCompiler.jl, would there be a reasonable pathway to producing static binaries?","user":"UGU761DU2","ts":"1618069153.041200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Get","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks awesome! (and "},{"type":"emoji","name":"mind_blown"},{"type":"text","text":" )\n\nSince it’s already using GPUCompiler.jl, would there be a reasonable pathway to producing static binaries?"}]}]}],"thread_ts":"1618062064.038300","parent_user_id":"UKA81L34J"},{"client_msg_id":"55a0a9ca-1dd6-4e2e-88fc-038aea078a3a","type":"message","text":"<@UGU761DU2> that would be a particularly interesting and compelling use case — if I know more about it. I have not studied StaticCompiler at all, I’d likely have to look there first.","user":"UKA81L34J","ts":"1618071671.044500","team":"T68168MUP","edited":{"user":"UKA81L34J","ts":"1618071677.000000"},"blocks":[{"type":"rich_text","block_id":"S9=","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UGU761DU2"},{"type":"text","text":" that would be a particularly interesting and compelling use case — if I know more about it. I have not studied StaticCompiler at all, I’d likely have to look there first."}]}]}],"thread_ts":"1618062064.038300","parent_user_id":"UKA81L34J","reactions":[{"name":"heart","users":["UGU761DU2"],"count":1},{"name":"juliaspinner","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"E1906BFE-3708-4992-87D5-105C580B4BBE","type":"message","text":"<@U69BK8S74> wonder if you have any comments here (in the relationship between GPUCompiler’s linked in OrcJIT and StaticCompiler — and how feasible it might be to compile a binary given something which works with GPUCompiler)","user":"UKA81L34J","ts":"1618077115.046200","team":"T68168MUP","edited":{"user":"UKA81L34J","ts":"1618077190.000000"},"blocks":[{"type":"rich_text","block_id":"/26","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U69BK8S74"},{"type":"text","text":" wonder if you have any comments here (in the relationship between GPUCompiler’s linked in OrcJIT and StaticCompiler — and how feasible it might be to compile a binary given something which works with GPUCompiler)"}]}]}],"thread_ts":"1618062064.038300","parent_user_id":"UKA81L34J"}]