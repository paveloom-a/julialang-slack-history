[{"client_msg_id":"0292c164-93ce-4923-bf85-76f1640898dc","type":"message","text":"what do people think about these macros\n```macro test_skip_if(cond, ex, kws...)\n    quote\n        if $(esc(cond))\n            @test_skip($ex, $(kws...))\n        else\n            @test($ex, $(kws...))\n        end\n    end\nend\n\nmacro test_broken_if(cond, ex, kws...)\n    quote\n        if $(esc(cond))\n            @test_broken($ex, $(kws...))\n        else\n            @test($ex, $(kws...))\n        end\n    end\nend```\nare they worth being added to `Test` stdlib?","user":"UDB26738Q","ts":"1611084698.190900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0ki","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do people think about these macros\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"macro test_skip_if(cond, ex, kws...)\n    quote\n        if $(esc(cond))\n            @test_skip($ex, $(kws...))\n        else\n            @test($ex, $(kws...))\n        end\n    end\nend\n\nmacro test_broken_if(cond, ex, kws...)\n    quote\n        if $(esc(cond))\n            @test_broken($ex, $(kws...))\n        else\n            @test($ex, $(kws...))\n        end\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"are they worth being added to "},{"type":"text","text":"Test","style":{"code":true}},{"type":"text","text":" stdlib?"}]}]}],"thread_ts":"1611084698.190900","reply_count":9,"reply_users_count":5,"latest_reply":"1611089187.196100","reply_users":["U67SCG4HG","UDB26738Q","U66GD0880","U6A936746","U8MPCDJAY"],"subscribed":false},{"client_msg_id":"60e66700-3486-4a8e-b5eb-b5e3c94a0871","type":"message","text":"What is `cond` just the test itself and you check if it is broken before `@test_broken` :troll:","user":"U67SCG4HG","ts":"1611084892.191400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RL36","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is "},{"type":"text","text":"cond","style":{"code":true}},{"type":"text","text":" just the test itself and you check if it is broken before "},{"type":"text","text":"@test_broken","style":{"code":true}},{"type":"text","text":" "},{"type":"emoji","name":"troll"}]}]}],"thread_ts":"1611084698.190900","parent_user_id":"UDB26738Q","reactions":[{"name":"joy","users":["U01J62981NK","UH8A351DJ","U66GD0880","U6795JH6H","UNF9QDRNJ","ULUC3K6M6"],"count":6}]},{"client_msg_id":"158dabc8-807c-465f-9edf-50982b7ab0d5","type":"message","text":"I wonder if `@test_skip` and `@test_broken` should rather be like\n```@test ex skip=true\n@test ex broken=true```","user":"UDB26738Q","ts":"1611085202.191800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"deI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder if "},{"type":"text","text":"@test_skip","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"@test_broken","style":{"code":true}},{"type":"text","text":" should rather be like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@test ex skip=true\n@test ex broken=true"}]}]}],"thread_ts":"1611084698.190900","parent_user_id":"UDB26738Q","reactions":[{"name":"+1","users":["U6C1MMAAJ","U66GD0880","U6QGE7S86"],"count":3}]},{"client_msg_id":"9d8bdfe5-5ae5-47fe-b71f-dee3a7996d05","type":"message","text":"ooh, yeah, that’s cool.  And then you could interpolate in `@test ex broken=$(Sys.iswindows())`","user":"U66GD0880","ts":"1611086792.193800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iM6q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ooh, yeah, that’s cool.  And then you could interpolate in "},{"type":"text","text":"@test ex broken=$(Sys.iswindows())","style":{"code":true}}]}]}],"thread_ts":"1611084698.190900","parent_user_id":"UDB26738Q"},{"client_msg_id":"c2358a66-bef2-41cf-925e-a380d57530d4","type":"message","text":"exactly","user":"UDB26738Q","ts":"1611086819.194000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OXw2q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"exactly"}]}]}],"thread_ts":"1611084698.190900","parent_user_id":"UDB26738Q"},{"client_msg_id":"ff5574ab-fb68-4ea0-b153-20409ed003e7","type":"message","text":"`broken=$(Sys.iswindows())` should probably be the default :troll:","user":"UDB26738Q","ts":"1611086849.194200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7GF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"broken=$(Sys.iswindows())","style":{"code":true}},{"type":"text","text":" should probably be the default "},{"type":"emoji","name":"troll"}]}]}],"thread_ts":"1611084698.190900","parent_user_id":"UDB26738Q","reactions":[{"name":"joy","users":["U66GD0880","U6QGE7S86","U6795JH6H","U013B3NSZGB","U9MED583T","U01K784HKCH","U7K185TUN","ULUC3K6M6"],"count":8},{"name":"yao","users":["U67SCG4HG","U6QGE7S86","U6795JH6H","ULUC3K6M6"],"count":4},{"name":"troll","users":["U6795JH6H"],"count":1}]},{"type":"message","subtype":"thread_broadcast","text":"I used to use that pattern in a few places.\nNamedDims.jl used to have `@test_modern` which was short for `if VERSION &gt;= v\"1.3\"` and then either test or test_broken.\n\nBut more and more I am becoming convinced that that pattern is rarely useful. At least on things I do.\n `@test_broken` makes sense if we plan to fix it. Noting that if a `@test_broken` errors if it passes.\nWhich happed recently that something just started working randomly on 1.0.5 on Linux only.\nI think the more useful pattern is just `cond || @test...` , which means I promise this works on e.g. this platform thus version etc. But if the condition isn't met, then I make no promises.\n\nBut that's because generally I have a set of systems that are supported which are never `@test_broken` . And everything else, if it doesn't work from getting the systems I care about to work the way I want, then I am not going to come back and fix them later.\n\nIn particular though mostly these are tests on maximum number of allocations.","user":"U6A936746","ts":"1611088649.194900","thread_ts":"1611084698.190900","root":{"client_msg_id":"0292c164-93ce-4923-bf85-76f1640898dc","type":"message","text":"what do people think about these macros\n```macro test_skip_if(cond, ex, kws...)\n    quote\n        if $(esc(cond))\n            @test_skip($ex, $(kws...))\n        else\n            @test($ex, $(kws...))\n        end\n    end\nend\n\nmacro test_broken_if(cond, ex, kws...)\n    quote\n        if $(esc(cond))\n            @test_broken($ex, $(kws...))\n        else\n            @test($ex, $(kws...))\n        end\n    end\nend```\nare they worth being added to `Test` stdlib?","user":"UDB26738Q","ts":"1611084698.190900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0ki","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do people think about these macros\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"macro test_skip_if(cond, ex, kws...)\n    quote\n        if $(esc(cond))\n            @test_skip($ex, $(kws...))\n        else\n            @test($ex, $(kws...))\n        end\n    end\nend\n\nmacro test_broken_if(cond, ex, kws...)\n    quote\n        if $(esc(cond))\n            @test_broken($ex, $(kws...))\n        else\n            @test($ex, $(kws...))\n        end\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"are they worth being added to "},{"type":"text","text":"Test","style":{"code":true}},{"type":"text","text":" stdlib?"}]}]}],"thread_ts":"1611084698.190900","reply_count":9,"reply_users_count":5,"latest_reply":"1611089187.196100","reply_users":["U67SCG4HG","UDB26738Q","U66GD0880","U6A936746","U8MPCDJAY"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"/Vhu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I used to use that pattern in a few places.\nNamedDims.jl used to have "},{"type":"text","text":"@test_modern","style":{"code":true}},{"type":"text","text":" which was short for "},{"type":"text","text":"if VERSION >= v\"1.3\"","style":{"code":true}},{"type":"text","text":" and then either test or test_broken.\n\nBut more and more I am becoming convinced that that pattern is rarely useful. At least on things I do.\n "},{"type":"text","text":"@test_broken","style":{"code":true}},{"type":"text","text":" makes sense if we plan to fix it. Noting that if a "},{"type":"text","text":"@test_broken","style":{"code":true}},{"type":"text","text":" errors if it passes.\nWhich happed recently that something just started working randomly on 1.0.5 on Linux only.\nI think the more useful pattern is just "},{"type":"text","text":"cond || @test...","style":{"code":true}},{"type":"text","text":" , which means I promise this works on e.g. this platform thus version etc. But if the condition isn't met, then I make no promises.\n\nBut that's because generally I have a set of systems that are supported which are never "},{"type":"text","text":"@test_broken","style":{"code":true}},{"type":"text","text":" . And everything else, if it doesn't work from getting the systems I care about to work the way I want, then I am not going to come back and fix them later.\n\nIn particular though mostly these are tests on maximum number of allocations."}]}]}],"client_msg_id":"59e3b99e-9191-4273-8ee2-411393545bed"},{"client_msg_id":"62d4effc-d0a7-486b-ad21-c024d3f8e992","type":"message","text":"those `@test_*` macros are for something which consistently fails (e.g., an operating system), if you have something flaky... yeah, not very useful","user":"UDB26738Q","ts":"1611088834.195200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vUL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"those "},{"type":"text","text":"@test_*","style":{"code":true}},{"type":"text","text":" macros are for something which consistently fails (e.g., an operating system), if you have something flaky... yeah, not very useful"}]}]}],"thread_ts":"1611084698.190900","parent_user_id":"UDB26738Q"},{"client_msg_id":"059d3d57-7df0-4621-9f36-697d2382aebf","type":"message","text":"Would it be generally useful to have macros for disabling &amp; toggling macros?\n\n```# only do @threads if cond\n@enablemacroif cond @threads for i in 1:10; ... end\n\n# do @test_broken if cond\n@switchmacroif cond @test @test_broken ...          ```\nI’m sure the names could be better, like which the 2nd selects isn’t clear","user":"U8MPCDJAY","ts":"1611088992.195400","team":"T68168MUP","edited":{"user":"U8MPCDJAY","ts":"1611089028.000000"},"blocks":[{"type":"rich_text","block_id":"UMy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would it be generally useful to have macros for disabling & toggling macros?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"# only do @threads if cond\n@enablemacroif cond @threads for i in 1:10; ... end\n\n# do @test_broken if cond\n@switchmacroif cond @test @test_broken ...          "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I’m sure the names could be better, like which the 2nd selects isn’t clear"}]}]}],"thread_ts":"1611084698.190900","parent_user_id":"UDB26738Q"},{"client_msg_id":"260a6df6-08a8-49b3-aad5-abe57bfea529","type":"message","text":"My allocations are not even flaky.\nThey work very consistently across a given Julia minor version (except apparently 1.0.5).\nBut since I am not going to fix them or consistently CI them on old versions, keeping a list of exactly which old versions fail and which don't isn't worth the effort.\nJust keeping a list of which I do care to maintain is enough","user":"U6A936746","ts":"1611089187.196100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Brf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My allocations are not even flaky.\nThey work very consistently across a given Julia minor version (except apparently 1.0.5).\nBut since I am not going to fix them or consistently CI them on old versions, keeping a list of exactly which old versions fail and which don't isn't worth the effort.\nJust keeping a list of which I do care to maintain is enough"}]}]}],"thread_ts":"1611084698.190900","parent_user_id":"UDB26738Q"}]