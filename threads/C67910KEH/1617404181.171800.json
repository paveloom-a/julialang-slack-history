[{"client_msg_id":"7993a2c0-f084-48eb-917e-7df9f2bf3258","type":"message","text":"If I have a situation like below, where i have some structs to hold data and then some objects which need to reference which container it came from\n```struct Container{D}\n    big_data::D\nend\n\nstruct ContainerContainer{C}\n    container::C\nend\n\n# initialize an array of Containers which will be referenced throughout the program\nconst containers = load_data()\n\ncontainer_container = ContainerContainer(containers[1])```\nwhat will the size of `container_container` in memory be? I'm trying to do monte carlo simulations where i store the result of each evaluation (a `ContainerContainer` ) and i'm worried that they're copying all of the data from the `Container` object they reference","user":"U015CQ83YBD","ts":"1617404181.171800","team":"T68168MUP","edited":{"user":"U015CQ83YBD","ts":"1617404496.000000"},"blocks":[{"type":"rich_text","block_id":"L0Ef","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I have a situation like below, where i have some structs to hold data and then some objects which need to reference which container it came from\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Container{D}\n    big_data::D\nend\n\nstruct ContainerContainer{C}\n    container::C\nend\n\n# initialize an array of Containers which will be referenced throughout the program\nconst containers = load_data()\n\ncontainer_container = ContainerContainer(containers[1])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"what will the size of "},{"type":"text","text":"container_container","style":{"code":true}},{"type":"text","text":" in memory be? I'm trying to do monte carlo simulations where i store the result of each evaluation (a "},{"type":"text","text":"ContainerContainer","style":{"code":true}},{"type":"text","text":" ) and i'm worried that they're copying all of the data from the "},{"type":"text","text":"Container","style":{"code":true}},{"type":"text","text":" object they reference"}]}]}],"thread_ts":"1617404181.171800","reply_count":12,"reply_users_count":2,"latest_reply":"1617405560.174700","reply_users":["U012XER8K4M","U015CQ83YBD"],"is_locked":false,"subscribed":false},{"client_msg_id":"f9c25767-84dc-4078-8d6e-dad6b6a30c6b","type":"message","text":"Assuming a heap allocated big_data (which it probably is in your code), then you'll only copying a reference, so, ContainerContainer will be small, (as will Container technically be, it's `big_data` that is big).","user":"U012XER8K4M","ts":"1617404756.172200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GhHy9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Assuming a heap allocated big_data (which it probably is in your code), then you'll only copying a reference, so, ContainerContainer will be small, (as will Container technically be, it's "},{"type":"text","text":"big_data","style":{"code":true}},{"type":"text","text":" that is big)."}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"7a9c911a-c48b-47a0-9970-74f1417b5466","type":"message","text":"ok, that's what i suspected, given that everything else in julia works by reference, but i was running out of memory on some large monte carlo runs and wanted to rule this out","user":"U015CQ83YBD","ts":"1617404816.172400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3E+J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, that's what i suspected, given that everything else in julia works by reference, but i was running out of memory on some large monte carlo runs and wanted to rule this out"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"f9bc8fa0-ac13-4a6b-aaa8-98f1b1cb0b37","type":"message","text":"You have a `sizeof` function you can use to check","user":"U012XER8K4M","ts":"1617404856.172600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IGJJq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You have a "},{"type":"text","text":"sizeof","style":{"code":true}},{"type":"text","text":" function you can use to check"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"ed32d0e0-e197-48df-9849-2e3dafef0be1","type":"message","text":"```c = Container(zeros(10000))\nsizeof(c)\nsizeof(c.big_data)```","user":"U012XER8K4M","ts":"1617404893.172800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2IPL7","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"c = Container(zeros(10000))\nsizeof(c)\nsizeof(c.big_data)"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"bc034202-3f9f-4947-948a-7d99ab9a2200","type":"message","text":"(also, watch out for putting to much stuff in global scope here. I'd wrap as much as possible under a function)","user":"U012XER8K4M","ts":"1617404949.173000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yd/r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(also, watch out for putting to much stuff in global scope here. I'd wrap as much as possible under a function)"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"931d2fe3-ad11-4a70-a2fc-c30d838275a3","type":"message","text":"oh they are, this is just for illustration, this is part of a pretty large codebase","user":"U015CQ83YBD","ts":"1617404972.173200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PWL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh they are, this is just for illustration, this is part of a pretty large codebase"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD","reactions":[{"name":"+1","users":["U012XER8K4M"],"count":1}]},{"client_msg_id":"a2fac78b-8766-4802-972f-01b79f508f94","type":"message","text":"the `containers` are passed into my program's functions as arguments","user":"U015CQ83YBD","ts":"1617404996.173500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=AV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the "},{"type":"text","text":"containers","style":{"code":true}},{"type":"text","text":" are passed into my program's functions as arguments"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"2a9d9c39-be01-4372-8dde-132239c08800","type":"message","text":"one thing that throws me about `sizeof` is like if i have a vector of vectors, it gives me what i would consider an unintuitive answer\n\n```julia&gt; a = zeros(100); sizeof(a)\n800\n\njulia&gt; b = copy(a); c = [a, b]\n2-element Vector{Vector{Float64}}:\n [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n\njulia&gt; sizeof(c)\n16 # i suppose this is just the size of the pointers to a and b? hardly seems useful though```\nso i suppose my understanding of julia's memory semantics needs to be improved. i guess actually measuring the amount of memory allocated by the function that creates a single one of these objects would be the best way to determine their true memory footprint","user":"U015CQ83YBD","ts":"1617405303.173800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w5MXA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"one thing that throws me about "},{"type":"text","text":"sizeof","style":{"code":true}},{"type":"text","text":" is like if i have a vector of vectors, it gives me what i would consider an unintuitive answer\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a = zeros(100); sizeof(a)\n800\n\njulia> b = copy(a); c = [a, b]\n2-element Vector{Vector{Float64}}:\n [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n\njulia> sizeof(c)\n16 # i suppose this is just the size of the pointers to a and b? hardly seems useful though"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so i suppose my understanding of julia's memory semantics needs to be improved. i guess actually measuring the amount of memory allocated by the function that creates a single one of these objects would be the best way to determine their true memory footprint"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"4d6677cb-678d-47cf-af6c-1e2c8dad03d0","type":"message","text":"c is basically a list of 2 pointers. It's not recursive size, as that would require accounting for double references","user":"U012XER8K4M","ts":"1617405475.174000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+QM97","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"c is basically a list of 2 pointers. It's not recursive size, as that would require accounting for double references"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"2706aa53-67f4-4c5e-8f01-99804718900d","type":"message","text":"i.e.","user":"U012XER8K4M","ts":"1617405478.174200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ad=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i.e."}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"25de90fa-dec1-44ef-b6ef-c4741a70537a","type":"message","text":"```a = zeros(100)\nc = [a, a]```\nwhat size would you want to see here?","user":"U012XER8K4M","ts":"1617405488.174400","team":"T68168MUP","edited":{"user":"U012XER8K4M","ts":"1617405509.000000"},"blocks":[{"type":"rich_text","block_id":"MPXi","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"a = zeros(100)\nc = [a, a]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"what size would you want to see here?"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"},{"client_msg_id":"255f9d06-531c-4a68-8833-c4e69e259c92","type":"message","text":"yeah i understand now! this will be very helpful in trying to minimize my program's memory impact","user":"U015CQ83YBD","ts":"1617405560.174700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/P3H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah i understand now! this will be very helpful in trying to minimize my program's memory impact"}]}]}],"thread_ts":"1617404181.171800","parent_user_id":"U015CQ83YBD"}]