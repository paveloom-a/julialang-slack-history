[{"client_msg_id":"6d9d4bfe-7de5-446c-a4ef-acdad078923b","type":"message","text":"Hi, is there a reasonable way how to restring length of log message? I'm logging some variables which might be pretty long and I'd like to trim them when the string representation is longer than some constant. I'm using <https://github.com/oxinabox/LoggingExtras.jl> but it seems it does not offer that feature too.\nI'm reading through <https://github.com/JuliaLang/julia/blob/v1.6.0/base/logging.jl> but I'm not sure where to look at exactly.\nIs there some simple way to trim the string representation?","user":"USBKT1275","ts":"1617867656.435600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WeZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, is there a reasonable way how to restring length of log message? I'm logging some variables which might be pretty long and I'd like to trim them when the string representation is longer than some constant. I'm using "},{"type":"link","url":"https://github.com/oxinabox/LoggingExtras.jl"},{"type":"text","text":" but it seems it does not offer that feature too.\nI'm reading through "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/v1.6.0/base/logging.jl"},{"type":"text","text":" but I'm not sure where to look at exactly.\nIs there some simple way to trim the string representation?"}]}]}],"thread_ts":"1617867656.435600","reply_count":15,"reply_users_count":2,"latest_reply":"1617880487.445300","reply_users":["U67SCG4HG","USBKT1275"],"is_locked":false,"subscribed":false},{"client_msg_id":"060c6510-7572-4538-9a67-0ab3eb89cb75","type":"message","text":"Did you see the example here: <https://github.com/oxinabox/LoggingExtras.jl#transformerlogger-transformer> ?","user":"U67SCG4HG","ts":"1617867728.436800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hPC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Did you see the example here: "},{"type":"link","url":"https://github.com/oxinabox/LoggingExtras.jl#transformerlogger-transformer"},{"type":"text","text":" ?"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"5d0de7e7-62e2-489e-8fd6-a983337b664b","type":"message","text":"Yes, but that trims only the message. The variables I log when using e.g.\n```@info \"my message\" var1 var2 var3```\nare not in message field, but in kwargs, and they are converted to string representation somewhere in the native logger, not in the transformer.","user":"USBKT1275","ts":"1617867829.437100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9zr3a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, but that trims only the message. The variables I log when using e.g.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@info \"my message\" var1 var2 var3"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"are not in message field, but in kwargs, and they are converted to string representation somewhere in the native logger, not in the transformer."}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"07e46f1f-edaa-400c-a798-cb9ce262c980","type":"message","text":"I believe you get the kwargs too though","user":"U67SCG4HG","ts":"1617868011.437300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"apvQx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe you get the kwargs too though"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"94330545-dc26-455d-8f57-890e23283efd","type":"message","text":"yes, but I need to do the casting to string by myself, right? What exactly does julia use to convert it to string? Just `string(var1)` , or something else?","user":"USBKT1275","ts":"1617868056.437500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4RNpc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, but I need to do the casting to string by myself, right? What exactly does julia use to convert it to string? Just "},{"type":"text","text":"string(var1)","style":{"code":true}},{"type":"text","text":" , or something else?"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"8352c246-be5f-476f-8375-589ef5516a52","type":"message","text":"print yea","user":"U67SCG4HG","ts":"1617868236.437700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rss","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"print yea"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"80a765bb-c259-4bc9-9358-83879ebb4bbb","type":"message","text":"I see the print then looks somehow differently. Because the way of printing depends on context, which is set here <https://github.com/JuliaLang/julia/blob/v1.6.0/stdlib/Logging/src/ConsoleLogger.jl#L118-L120>\nif I have code\n```using Logging, LoggingExtras, Dates\nconst date_format = \"yyyy-mm-dd HH:MM:SS\"\nconst log_message_max_chars = 20\n\nfunction shorten_message(message)\n    if length(message) &gt; log_message_max_chars\n        message[1:min(end, log_message_max_chars-3)] * \"...\"\n    else\n        message\n    end\nend\n\ntimestamp_shorting_logger(logger) = TransformerLogger(logger) do log\n    # the_kwargs = (; Dict(key=&gt;shorten_message(repr(\"text/plain\", val)) for (key,val) in pairs(log.kwargs))...)\n    short_message = shorten_message(string(log.message)::String)\n    # merge(log, (; message=\"[$(Dates.format(now(), date_format))] $short_message\", kwargs=the_kwargs))\n    merge(log, (; message=\"[$(Dates.format(now(), date_format))] $short_message\"))\nend\n\nmy_logger = timestamp_shorting_logger(SimpleLogger(stdout, <http://Logging.Info|Logging.Info>))\n\na = Dict(:a=&gt;\"a\"^10, :b=&gt;\"b\"^50)\nb = Dict(:c=&gt;\"c\"^20, :d=&gt;\"d\"^70)\n@info \"this is message\" a b\n@info \"this is veeeeeeeeeeeery long message\" a b\n\nwith_logger(my_logger) do\n    @info \"this is message\" a b\n    @info \"this is veeeeeeeeeeeery long message\" a b\nend```\n","user":"USBKT1275","ts":"1617878788.442600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vyN7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see the print then looks somehow differently. Because the way of printing depends on context, which is set here "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/v1.6.0/stdlib/Logging/src/ConsoleLogger.jl#L118-L120"},{"type":"text","text":"\nif I have code\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Logging, LoggingExtras, Dates\nconst date_format = \"yyyy-mm-dd HH:MM:SS\"\nconst log_message_max_chars = 20\n\nfunction shorten_message(message)\n    if length(message) > log_message_max_chars\n        message[1:min(end, log_message_max_chars-3)] * \"...\"\n    else\n        message\n    end\nend\n\ntimestamp_shorting_logger(logger) = TransformerLogger(logger) do log\n    # the_kwargs = (; Dict(key=>shorten_message(repr(\"text/plain\", val)) for (key,val) in pairs(log.kwargs))...)\n    short_message = shorten_message(string(log.message)::String)\n    # merge(log, (; message=\"[$(Dates.format(now(), date_format))] $short_message\", kwargs=the_kwargs))\n    merge(log, (; message=\"[$(Dates.format(now(), date_format))] $short_message\"))\nend\n\nmy_logger = timestamp_shorting_logger(SimpleLogger(stdout, Logging.Info))\n\na = Dict(:a=>\"a\"^10, :b=>\"b\"^50)\nb = Dict(:c=>\"c\"^20, :d=>\"d\"^70)\n@info \"this is message\" a b\n@info \"this is veeeeeeeeeeeery long message\" a b\n\nwith_logger(my_logger) do\n    @info \"this is message\" a b\n    @info \"this is veeeeeeeeeeeery long message\" a b\nend"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"dcdc81f4-4cf6-4f75-9477-b7985e16f8ba","type":"message","text":"Might be easier to use a FormatLogger in this case actually.","user":"U67SCG4HG","ts":"1617878829.442900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6hqTY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Might be easier to use a FormatLogger in this case actually."}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"46735e75-d1b9-4213-b0bb-57b2737faa43","type":"message","text":"the output looks like this\n```┌ Info: this is message\n│   a =\n│    Dict{Symbol,String} with 2 entries:\n│      :a =&gt; \"aaaaaaaaaa\"\n│      :b =&gt; \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n│   b =\n│    Dict{Symbol,String} with 2 entries:\n│      :d =&gt; \"ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd…└      :c =&gt; \"cccccccccccccccccccc\"\n┌ Info: this is veeeeeeeeeeeery long message\n│   a =\n│    Dict{Symbol,String} with 2 entries:\n│      :a =&gt; \"aaaaaaaaaa\"\n│      :b =&gt; \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n│   b =\n│    Dict{Symbol,String} with 2 entries:\n│      :d =&gt; \"ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd…└      :c =&gt; \"cccccccccccccccccccc\"\n┌ Info: [2021-04-08 12:44:57] this is message\n│   a = Dict(:a =&gt; \"aaaaaaaaaa\",:b =&gt; \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\")\n│   b = Dict(:d =&gt; \"dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\",:c =&gt; \"cccccccccccccccccccc\")\n└ @ Main C:\\Projects\\something\\my_env\\logging_debug.jl:92\n┌ Info: [2021-04-08 12:44:57] this is veeeeeeee...\n│   a = Dict(:a =&gt; \"aaaaaaaaaa\",:b =&gt; \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\")\n│   b = Dict(:d =&gt; \"dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\",:c =&gt; \"cccccccccccccccccccc\")\n└ @ Main C:\\Projects\\something\\my_env\\logging_debug.jl:93```\n","user":"USBKT1275","ts":"1617878836.443100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pJd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the output looks like this\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"┌ Info: this is message\n│   a =\n│    Dict{Symbol,String} with 2 entries:\n│      :a => \"aaaaaaaaaa\"\n│      :b => \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n│   b =\n│    Dict{Symbol,String} with 2 entries:\n│      :d => \"ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd…└      :c => \"cccccccccccccccccccc\"\n┌ Info: this is veeeeeeeeeeeery long message\n│   a =\n│    Dict{Symbol,String} with 2 entries:\n│      :a => \"aaaaaaaaaa\"\n│      :b => \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n│   b =\n│    Dict{Symbol,String} with 2 entries:\n│      :d => \"ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd…└      :c => \"cccccccccccccccccccc\"\n┌ Info: [2021-04-08 12:44:57] this is message\n│   a = Dict(:a => \"aaaaaaaaaa\",:b => \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\")\n│   b = Dict(:d => \"dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\",:c => \"cccccccccccccccccccc\")\n└ @ Main C:\\Projects\\something\\my_env\\logging_debug.jl:92\n┌ Info: [2021-04-08 12:44:57] this is veeeeeeee...\n│   a = Dict(:a => \"aaaaaaaaaa\",:b => \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\")\n│   b = Dict(:d => \"dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\",:c => \"cccccccccccccccccccc\")\n└ @ Main C:\\Projects\\something\\my_env\\logging_debug.jl:93"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"9bcf822e-224f-410b-856c-f0f8fef47686","type":"message","text":"With the formatlogger you control the printing itself","user":"U67SCG4HG","ts":"1617878900.443500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MlzJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With the formatlogger you control the printing itself"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"8c567260-e476-4f6f-b0c4-459695c2109a","type":"message","text":"so when I do the cast to string by myself, I lose the `│`  in the beginning.\nSo there is no some simple way to do this and only way to shorten it is to use FormatLogger where I handle it all?","user":"USBKT1275","ts":"1617878966.443700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bvJZc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so when I do the cast to string by myself, I lose the "},{"type":"text","text":"│ ","style":{"code":true}},{"type":"text","text":" in the beginning.\nSo there is no some simple way to do this and only way to shorten it is to use FormatLogger where I handle it all?"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"8aa8df79-0315-4d47-b114-e052d383a32d","type":"message","text":"I guess the formatting with `|` and how how variables are printed is part of the format specification, so if you want to control it I think FormatLogger is the way to go.","user":"U67SCG4HG","ts":"1617879250.444100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DFd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess the formatting with "},{"type":"text","text":"|","style":{"code":true}},{"type":"text","text":" and how how variables are printed is part of the format specification, so if you want to control it I think FormatLogger is the way to go."}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"8d836e00-2c9a-4975-9aed-9f94a121c98a","type":"message","text":"ok, I'll try it, thanks","user":"USBKT1275","ts":"1617879265.444300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vPAc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, I'll try it, thanks"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"5255da2e-645b-4a0a-8be4-d42c1a396b70","type":"message","text":"It shouldn't be too difficult to add the `|` stuff yourself though,","user":"U67SCG4HG","ts":"1617879290.444500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KeJ8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It shouldn't be too difficult to add the "},{"type":"text","text":"|","style":{"code":true}},{"type":"text","text":" stuff yourself though,"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"711beff2-1d30-44c6-8236-71d528af5efe","type":"message","text":"Here is an alternative though:\n```using Logging, LoggingExtras\n\nstruct Limiter\n    x\n    lim::Int\nend\nLimiter(x) = Limiter(x, 80)\n\nfunction Base.show(io::IO, mime::MIME\"text/plain\", l::Limiter)\n    iob = IOBuffer()\n    ioc = IOContext(iob, io) # Inherit context from io\n    show(ioc, mime, l.x)\n    str = String(take!(iob))\n    for (i, c) in enumerate(str)\n        if i &gt; l.lim\n            break\n        end\n        write(io, c)\n    end\n    return nothing\nend\n\n\nlogger = TransformerLogger(global_logger()) do log\n    kwargs = (; (k =&gt; Limiter(v) for (k, v) in log.kwargs)...)\n    return (; log..., kwargs)\nend```","user":"U67SCG4HG","ts":"1617880465.445100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"57l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here is an alternative though:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Logging, LoggingExtras\n\nstruct Limiter\n    x\n    lim::Int\nend\nLimiter(x) = Limiter(x, 80)\n\nfunction Base.show(io::IO, mime::MIME\"text/plain\", l::Limiter)\n    iob = IOBuffer()\n    ioc = IOContext(iob, io) # Inherit context from io\n    show(ioc, mime, l.x)\n    str = String(take!(iob))\n    for (i, c) in enumerate(str)\n        if i > l.lim\n            break\n        end\n        write(io, c)\n    end\n    return nothing\nend\n\n\nlogger = TransformerLogger(global_logger()) do log\n    kwargs = (; (k => Limiter(v) for (k, v) in log.kwargs)...)\n    return (; log..., kwargs)\nend"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"},{"client_msg_id":"052def22-d6bb-4629-979d-eecda7f6b4a9","type":"message","text":"```julia&gt; a = Dict(:a=&gt;\"a\"^10, :b=&gt;\"b\"^50)\nDict{Symbol, String} with 2 entries:\n  :a =&gt; \"aaaaaaaaaa\"\n  :b =&gt; \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n\njulia&gt; @info \"hello\" a\n┌ Info: hello\n│   a =\n│    Dict{Symbol, String} with 2 entries:\n│      :a =&gt; \"aaaaaaaaaa\"\n└      :b =&gt; \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n\njulia&gt; with_logger(logger) do\n           @info \"hello\" a\n       end\n┌ Info: hello\n│   a =\n│    Dict{Symbol, String} with 2 entries:\n│      :a =&gt; \"aaaaaaaaaa\"\n└      :b =&gt; \"bbbbbbbbbbbbb```","user":"U67SCG4HG","ts":"1617880487.445300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B3I/","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a = Dict(:a=>\"a\"^10, :b=>\"b\"^50)\nDict{Symbol, String} with 2 entries:\n  :a => \"aaaaaaaaaa\"\n  :b => \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n\njulia> @info \"hello\" a\n┌ Info: hello\n│   a =\n│    Dict{Symbol, String} with 2 entries:\n│      :a => \"aaaaaaaaaa\"\n└      :b => \"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\n\njulia> with_logger(logger) do\n           @info \"hello\" a\n       end\n┌ Info: hello\n│   a =\n│    Dict{Symbol, String} with 2 entries:\n│      :a => \"aaaaaaaaaa\"\n└      :b => \"bbbbbbbbbbbbb"}]}]}],"thread_ts":"1617867656.435600","parent_user_id":"USBKT1275"}]