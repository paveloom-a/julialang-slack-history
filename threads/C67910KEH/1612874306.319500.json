[{"client_msg_id":"dd5490af-bb8b-430a-b4ba-3432081e2651","type":"message","text":"Hi, is there a reason why presence of `missing` changes how booleans are printed in Julia 1.5?\n```julia&gt; rand([true,missing], 2, 2)\n2×2 Array{Union{Missing, Bool},2}:\n true         missing\n     missing  missing\njulia&gt; rand([true, false], 2, 2)\n2×2 Array{Bool,2}:\n 0  0\n 0  1```","user":"USBKT1275","ts":"1612874306.319500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hl5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, is there a reason why presence of "},{"type":"text","text":"missing","style":{"code":true}},{"type":"text","text":" changes how booleans are printed in Julia 1.5?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> rand([true,missing], 2, 2)\n2×2 Array{Union{Missing, Bool},2}:\n true         missing\n     missing  missing\njulia> rand([true, false], 2, 2)\n2×2 Array{Bool,2}:\n 0  0\n 0  1"}]}]}],"thread_ts":"1612874306.319500","reply_count":5,"reply_users_count":3,"latest_reply":"1612900625.346000","reply_users":["U7HAYKY9X","USBKT1275","U67431ELR"],"subscribed":false},{"client_msg_id":"345b13c4-e3e9-4ba7-b4d0-74df52429adf","type":"message","text":"IIRC, the display of `AbstractArray{Bool}` was changed, because `0` and `1` are visually more distinct than `true`, and `false` so it's easier to see the values. But it's not a good idea to change the display of `Bool`  to `1/0` in the presence of other types, because then they do not appear distinct from other integers.","user":"U7HAYKY9X","ts":"1612876875.321700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3T7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IIRC, the display of "},{"type":"text","text":"AbstractArray{Bool}","style":{"code":true}},{"type":"text","text":" was changed, because "},{"type":"text","text":"0","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" are visually more distinct than "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"false","style":{"code":true}},{"type":"text","text":" so it's easier to see the values. But it's not a good idea to change the display of "},{"type":"text","text":"Bool","style":{"code":true}},{"type":"text","text":"  to "},{"type":"text","text":"1/0","style":{"code":true}},{"type":"text","text":" in the presence of other types, because then they do not appear distinct from other integers."}]}]}],"thread_ts":"1612874306.319500","parent_user_id":"USBKT1275"},{"client_msg_id":"e1ace21b-dabb-4528-81fe-f8483058db3a","type":"message","text":"I see. I don't have strong idead about true/false vs. 0/1, but I find it strange that once I add missings, it's different.","user":"USBKT1275","ts":"1612878730.321900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gPtS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see. I don't have strong idead about true/false vs. 0/1, but I find it strange that once I add missings, it's different."}]}]}],"thread_ts":"1612874306.319500","parent_user_id":"USBKT1275"},{"client_msg_id":"f983cd15-9664-42d3-91aa-1b94d25a23fb","type":"message","text":"It's strange, yes. Also consider:\n```julia&gt; [1f0]\n1-element Vector{Float32}:\n 1.0\n\njulia&gt; Any[1f0]\n1-element Vector{Any}:\n 1.0f0```","user":"U7HAYKY9X","ts":"1612878818.322100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WN6WN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's strange, yes. Also consider:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> [1f0]\n1-element Vector{Float32}:\n 1.0\n\njulia> Any[1f0]\n1-element Vector{Any}:\n 1.0f0"}]}]}],"thread_ts":"1612874306.319500","parent_user_id":"USBKT1275","reactions":[{"name":"+1","users":["USBKT1275","U68M6ERG8"],"count":2}]},{"client_msg_id":"517b51ea-a617-4055-95fd-5821a394634c","type":"message","text":"Please file an issue, maybe we can special-case `Missing` and `Nothing`, or find a more general rule. The `Vector{Any}` is a bit different as in that case the `f0` is needed to differentiate `1.0::Float64` from `1.0f0::Float32`. OTC there's no ambiguity with `Missing`.","user":"U67431ELR","ts":"1612900130.345000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tqs6P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please file an issue, maybe we can special-case "},{"type":"text","text":"Missing","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Nothing","style":{"code":true}},{"type":"text","text":", or find a more general rule. The "},{"type":"text","text":"Vector{Any}","style":{"code":true}},{"type":"text","text":" is a bit different as in that case the "},{"type":"text","text":"f0","style":{"code":true}},{"type":"text","text":" is needed to differentiate "},{"type":"text","text":"1.0::Float64","style":{"code":true}},{"type":"text","text":" from "},{"type":"text","text":"1.0f0::Float32","style":{"code":true}},{"type":"text","text":". OTC there's no ambiguity with "},{"type":"text","text":"Missing","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1612874306.319500","parent_user_id":"USBKT1275"},{"client_msg_id":"198d2a71-fb91-4371-ad61-cd9825135e16","type":"message","text":"Created <https://github.com/JuliaLang/julia/issues/39590>","user":"USBKT1275","ts":"1612900625.346000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6sJ6d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Created "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/39590"}]}]}],"thread_ts":"1612874306.319500","parent_user_id":"USBKT1275"}]