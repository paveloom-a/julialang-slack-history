[{"client_msg_id":"7f143cf7-7236-42f0-8914-1e49a85bd665","type":"message","text":"what are these functions called?\n```struct cookies\n   a\nend\n(x::cookies) = x.a * 100```","user":"UPUBAM63X","ts":"1615028292.124900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a4z3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what are these functions called?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct cookies\n   a\nend\n(x::cookies) = x.a * 100"}]}]}],"thread_ts":"1615028292.124900","reply_count":49,"reply_users_count":7,"latest_reply":"1615059716.153600","reply_users":["U80UK1NSJ","UPUBAM63X","U01K809EUQ7","U9769MVA7","U01M655G9AR","UDSU53PEG","U8D9768Q6"],"subscribed":false},{"client_msg_id":"d892ba6f-371f-4d32-8a59-090c22576e57","type":"message","text":"Functors?","user":"U80UK1NSJ","ts":"1615028826.128100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yW5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Functors?"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X","reactions":[{"name":"correct_answer","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"09696854-e03f-43e6-84d4-a90f79495d2f","type":"message","text":"It is a functor but its weird because its attached to a struct and shares data with it","user":"UPUBAM63X","ts":"1615029273.128300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8Ew","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is a functor but its weird because its attached to a struct and shares data with it"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"9914a7b5-4941-413e-879a-525806b6d58a","type":"message","text":"I always thought of functors as of stateful functions. But callable struct is another Name I have read for these","user":"U80UK1NSJ","ts":"1615029415.128500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UBdZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I always thought of functors as of stateful functions. But callable struct is another Name I have read for these"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"417d292e-764e-47a2-b786-8de68de6a097","type":"message","text":"both make sense I think you're right it is a functor","user":"UPUBAM63X","ts":"1615029644.128700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n/E==","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"both make sense I think you're right it is a functor"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"14e6cd84-98ca-41a0-a6f9-910cfcb6d9c5","type":"message","text":"someone in Rust chat said: \"these are called functors, function objects, callables, or \"objects with an overridden call operator\" \"","user":"UPUBAM63X","ts":"1615029711.128900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Na4A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"someone in Rust chat said: \"these are called functors, function objects, callables, or \"objects with an overridden call operator\" \""}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X","reactions":[{"name":"heavy_check_mark","users":["U6A936746"],"count":1}]},{"client_msg_id":"deafebd2-bc0e-4823-8d2a-faed2124cdd6","type":"message","text":"how would the syntax work in this case, to call this function?","user":"U01K809EUQ7","ts":"1615033499.129500","team":"T68168MUP","edited":{"user":"U01K809EUQ7","ts":"1615033521.000000"},"blocks":[{"type":"rich_text","block_id":"r=Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how would the syntax work in this case, to call this function?"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"71db5e1e-72f0-4b57-96d9-eb47fdd72b0e","type":"message","text":"```\nc = cookies(42)\n\nc(2)\n```","user":"U9769MVA7","ts":"1615033712.129800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CtO0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"```\nc = cookies(42)\n\nc(2)\n```"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X","reactions":[{"name":"thumbsup_all","users":["U01K809EUQ7"],"count":1}]},{"client_msg_id":"6ffeb77d-145d-4b53-9e93-c88be07c6fa0","type":"message","text":"Pedro these types of things are super nifty for making very concise code. Especially when a struct mostly serves a single purpose. Usually transforming an external value based on some stored state.","user":"UPUBAM63X","ts":"1615033921.130000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kqsS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pedro these types of things are super nifty for making very concise code. Especially when a struct mostly serves a single purpose. Usually transforming an external value based on some stored state."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X","reactions":[{"name":"thumbsup_all","users":["U01K809EUQ7"],"count":1}]},{"client_msg_id":"4e5b7165-5461-42ae-8f62-7a8e6e3c7165","type":"message","text":"This is interesting, didn't know this syntax was possible.","user":"U01K809EUQ7","ts":"1615034936.130500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vtfg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is interesting, didn't know this syntax was possible."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"75bf8b03-d2f1-42a7-a38d-aefd51ea1473","type":"message","text":"should't this be `(x::cookies)() = x.a * 100` ? In any case in most cases I find closures to be so much more idiomatic\n```cookies(a) = ()-&gt;a*100```","user":"U01M655G9AR","ts":"1615036150.130700","team":"T68168MUP","edited":{"user":"U01M655G9AR","ts":"1615036180.000000"},"blocks":[{"type":"rich_text","block_id":"UIEom","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"should't this be "},{"type":"text","text":"(x::cookies)() = x.a * 100","style":{"code":true}},{"type":"text","text":" ? In any case in most cases I find closures to be so much more idiomatic\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"cookies(a) = ()->a*100"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X","reactions":[{"name":"thumbsup_all","users":["U01K809EUQ7"],"count":1}]},{"client_msg_id":"d34d707a-f129-4eab-8f9b-551aeb397323","type":"message","text":"yea I just wrote it super duper fast...","user":"UPUBAM63X","ts":"1615036169.130900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kqi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yea I just wrote it super duper fast..."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"0b7195b2-2846-45b8-9328-dc1d745b123e","type":"message","text":"are closures a no-op?","user":"UPUBAM63X","ts":"1615036203.131200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7Co","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are closures a no-op?"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"59ea77d6-cdca-4d2c-bfe4-f74aafda2363","type":"message","text":"sorry what do you mean?","user":"U01M655G9AR","ts":"1615036243.131400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kwgy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sorry what do you mean?"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"46bf3623-4943-49d6-a50d-d5e7ca5d9ac9","type":"message","text":"does the compiler recognize that calling a function to call the closure is actually just calling the closure?","user":"UPUBAM63X","ts":"1615036269.131600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aLPFZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does the compiler recognize that calling a function to call the closure is actually just calling the closure?"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"35d6a805-43f6-46d3-8519-4b7e7ebc4e35","type":"message","text":"it would de[pend on the op-codes","user":"UDSU53PEG","ts":"1615036305.131800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uOnyd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it would de[pend on the op-codes"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"4701414c-16a3-4627-9a44-417071ea778f","type":"message","text":"otherwise a small cost may be attributed to the closure, then again depends on the impl of the functor...","user":"UPUBAM63X","ts":"1615036316.132000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w6M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"otherwise a small cost may be attributed to the closure, then again depends on the impl of the functor..."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"d54c8710-7dc4-4089-9f43-835d15bea7bd","type":"message","text":"I'd lower the code but I'm in the middle of something and wanna get it done before I have to be an adult and take care of the apartment","user":"UPUBAM63X","ts":"1615036365.132200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Lf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd lower the code but I'm in the middle of something and wanna get it done before I have to be an adult and take care of the apartment"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"2a024240-6ce1-4a9c-8cc9-a331fdd1f95f","type":"message","text":"fyi there may also be serious compilation costs on the flip-side","user":"UDSU53PEG","ts":"1615036379.132400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5IC5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"fyi there may also be serious compilation costs on the flip-side"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"5e7b1f78-d814-449d-8f98-916ce8e476c5","type":"message","text":"the functor may be more costly than the closure?","user":"UPUBAM63X","ts":"1615036410.132600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J7h+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the functor may be more costly than the closure?"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"48104318-a64a-4aba-8384-ce55cbf60102","type":"message","text":"non-move closures are usually by reference","user":"UDSU53PEG","ts":"1615036423.132800","team":"T68168MUP","edited":{"user":"UDSU53PEG","ts":"1615036469.000000"},"blocks":[{"type":"rich_text","block_id":"=8Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"non-move closures are usually by reference"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"b7401b34-b75a-4f55-834c-de3bf9694252","type":"message","text":"when you are moving additional things into the closure it.. can depend","user":"UDSU53PEG","ts":"1615036462.133000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3mq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"when you are moving additional things into the closure it.. can depend"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"b52b7818-2861-45a2-9454-120c473ea4ff","type":"message","text":"my lowered code-fu is weak... but...\n```struct cookies\n    a\nend\n(x::cookies)() = x.a * 100\n\ncookies_closure(cooky) = () -&gt; cooky.a*100\n\nc = cookies(2)\n\n@code_lowered(c())\n\n@code_lowered(cookies_closure(c))```\nresults in...\n```CodeInfo(\n1 ─ %1 = Base.getproperty(x, :a)\n│   %2 = %1 * 100\n└──      return %2\n)\n\nCodeInfo(\n1 ─ %1 = Main.:(var\"#87#88\")\n│   %2 = Core.typeof(cooky)\n│   %3 = Core.apply_type(%1, %2)\n│        #87 = %new(%3, cooky)\n└──      return #87\n)```","user":"UPUBAM63X","ts":"1615036648.133300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kjTh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"my lowered code-fu is weak... but...\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct cookies\n    a\nend\n(x::cookies)() = x.a * 100\n\ncookies_closure(cooky) = () -> cooky.a*100\n\nc = cookies(2)\n\n@code_lowered(c())\n\n@code_lowered(cookies_closure(c))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"results in...\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"CodeInfo(\n1 ─ %1 = Base.getproperty(x, :a)\n│   %2 = %1 * 100\n└──      return %2\n)\n\nCodeInfo(\n1 ─ %1 = Main.:(var\"#87#88\")\n│   %2 = Core.typeof(cooky)\n│   %3 = Core.apply_type(%1, %2)\n│        #87 = %new(%3, cooky)\n└──      return #87\n)"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"a0d26a59-b528-4f1a-8505-a292dc011bd8","type":"message","text":"`c()` is passing by reference","user":"UDSU53PEG","ts":"1615036761.133500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WDC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"c()","style":{"code":true}},{"type":"text","text":" is passing by reference"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"cffe5730-c4d7-4e19-8fa2-77379bdca19a","type":"message","text":"if you btime it...\n```@btime( c() )\n  16.821 ns (0 allocations: 0 bytes)\n200\n@btime( cookies_closure(c) )\n  72.812 ns (1 allocation: 16 bytes)\n#87 (generic function with 1 method)```","user":"UPUBAM63X","ts":"1615036769.133700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qcp0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you btime it...\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@btime( c() )\n  16.821 ns (0 allocations: 0 bytes)\n200\n@btime( cookies_closure(c) )\n  72.812 ns (1 allocation: 16 bytes)\n#87 (generic function with 1 method)"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"aab0548c-7d72-4ee9-9402-854c0b65f07e","type":"message","text":"`cookie_closure(c)` is taking ownership of the pointer to `c`","user":"UDSU53PEG","ts":"1615036847.133900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"evOCY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cookie_closure(c)","style":{"code":true}},{"type":"text","text":" is taking ownership of the pointer to "},{"type":"text","text":"c","style":{"code":true}}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"5bb90ff1-53fd-4e21-b051-70df86df59f9","type":"message","text":"I feel like I might missing the point of the closure though...  But from that test it seems like the functor is passing by reference(ideal).","user":"UPUBAM63X","ts":"1615036880.134100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MdCtC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel like I might missing the point of the closure though...  But from that test it seems like the functor is passing by reference(ideal)."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"3346aa57-c958-4c76-816a-e024feea1657","type":"message","text":"cost of a pointer isn't so bad if you really like closures I guess.","user":"UPUBAM63X","ts":"1615036957.134400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DD+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cost of a pointer isn't so bad if you really like closures I guess."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"a5faf84d-03ff-4432-9800-3f5b24b5c570","type":"message","text":"closures often trip people up","user":"UDSU53PEG","ts":"1615037029.134600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lBST","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"closures often trip people up"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"b53c2df1-e70f-48f3-aeb4-8132805ca8d6","type":"message","text":"interesting if you make the functor input a float it allocates once.","user":"UPUBAM63X","ts":"1615037065.134800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YPFpp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting if you make the functor input a float it allocates once."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"8a7beca2-8fba-4b3e-8399-5b02b8e5f9d5","type":"message","text":"still 4x faster though","user":"UPUBAM63X","ts":"1615037075.135000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jS+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"still 4x faster though"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"28cb2d25-e275-4cd5-b315-f7269279c799","type":"message","text":"access is always cheaper than allocation","user":"UDSU53PEG","ts":"1615037111.135200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"11v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"access is always cheaper than allocation"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"14c70c43-0ea6-4fa5-b377-bf304d68bb74","type":"message","text":"definitely but not sure why changing the type requires an allocation","user":"UPUBAM63X","ts":"1615037130.135400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mJLVZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"definitely but not sure why changing the type requires an allocation"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"fcba9e95-181a-4621-8f6d-6bb704be2b3e","type":"message","text":"maybe I have the 100 as an int still compiled so it's promoting the type.","user":"UPUBAM63X","ts":"1615037153.135600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f4rxS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe I have the 100 as an int still compiled so it's promoting the type."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"db0101f8-140b-4e4f-90bf-668ee0992d4b","type":"message","text":"either way I'll opt for a functor :slightly_smiling_face:","user":"UPUBAM63X","ts":"1615037165.135800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PKg=/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"either way I'll opt for a functor "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"2e40334c-ebd8-47dc-9ae5-46618ddf0ff7","type":"message","text":"it's both an unpacking of the type and updating metadata(s)","user":"UDSU53PEG","ts":"1615037199.136000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iZNe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's both an unpacking of the type and updating metadata(s)"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X","reactions":[{"name":"100","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"6f71db14-1164-413d-98f4-f97aea65fb6c","type":"message","text":"<@UPUBAM63X> but you are comparing the construction of the closure with the call to the functor... these are completely different things\n\n```julia&gt; d = cookies_closure(2)\n#3 (generic function with 1 method)\n\njulia&gt; @code_lowered(d())\nCodeInfo(\n1 ─ %1 = Core.getfield(#self#, :a)\n│   %2 = %1 * 100\n└──      return %2```","user":"U01M655G9AR","ts":"1615038224.136300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DqSD","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" but you are comparing the construction of the closure with the call to the functor... these are completely different things\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> d = cookies_closure(2)\n#3 (generic function with 1 method)\n\njulia> @code_lowered(d())\nCodeInfo(\n1 ─ %1 = Core.getfield(#self#, :a)\n│   %2 = %1 * 100\n└──      return %2"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"f007e4b9-35a4-4d4f-b562-17f91f6cef97","type":"message","text":"right my bad!","user":"UPUBAM63X","ts":"1615038284.136500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+3b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right my bad!"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"2b473e96-6d99-429f-9cc6-b9745a86a0d8","type":"message","text":"thats what I get for multitasking","user":"UPUBAM63X","ts":"1615038310.136700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z5hH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thats what I get for multitasking"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X","reactions":[{"name":"joy","users":["U01M655G9AR"],"count":1}]},{"client_msg_id":"7626dec1-dcce-4f1f-8a7a-49557cd45681","type":"message","text":"I normally use closures without the underlying struct (the closure *is* the struct in a sense), i.e.\n```julia&gt; cookies_closure(a) = () -&gt; a*100```","user":"U01M655G9AR","ts":"1615038402.137000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zmvx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I normally use closures without the underlying struct (the closure "},{"type":"text","text":"is","style":{"bold":true}},{"type":"text","text":" the struct in a sense), i.e.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> cookies_closure(a) = () -> a*100"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"7d261876-2a1e-478f-9d77-14f22caaf615","type":"message","text":"instead of `cookies_closure(cooky) = () -&gt; cooky.a*100`","user":"U01M655G9AR","ts":"1615038504.137200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fns2Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"instead of "},{"type":"text","text":"cookies_closure(cooky) = () -> cooky.a*100","style":{"code":true}}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"33bac9c4-301c-4693-8ec1-1bbb782333f4","type":"message","text":"so you build the struct and the function on the fly... can't beat that :wink:","user":"U01M655G9AR","ts":"1615038597.137400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a98n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you build the struct and the function on the fly... can't beat that "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"c8760bea-990e-4df0-a076-8d631a6d336b","type":"message","text":"right thats what most people would do. I don't really fuss with closures mostly because, I haven't used a language where they formed common patterns.\nI have seen code thats like\n```() -&gt; ...\n    () -&gt; ...\n       ...etc```\nand it wasn't my personal cup of tea, but it is a good way of dealing with some funky things","user":"UPUBAM63X","ts":"1615038602.137600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ChR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right thats what most people would do. I don't really fuss with closures mostly because, I haven't used a language where they formed common patterns.\nI have seen code thats like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"() -> ...\n    () -> ...\n       ...etc"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and it wasn't my personal cup of tea, but it is a good way of dealing with some funky things"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"391e57c4-3d00-46d2-b998-a38e51ca563d","type":"message","text":"I often like data and functions saperated just for how my brain works, but I could adapt :slightly_smiling_face:","user":"UPUBAM63X","ts":"1615038660.137800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=0+l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I often like data and functions saperated just for how my brain works, but I could adapt "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"2254903a-769f-4f7d-b5d7-e7a275ce0cbf","type":"message","text":"I feel you, and generally I would agree... but more often than not, I first write a function and then find that I could cache or preallocate things, then instead of using global vars, you can just wrap everything in another function and that's it! I love it.","user":"U01M655G9AR","ts":"1615038888.138000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FsbUm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel you, and generally I would agree... but more often than not, I first write a function and then find that I could cache or preallocate things, then instead of using global vars, you can just wrap everything in another function and that's it! I love it."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"475d3d9b-3189-469f-8f10-55607e6738dd","type":"message","text":"yea thats a good point actually. Closures do let you move data in a well contained scope. That's very valuable for GUI stuff in Julia especially","user":"UPUBAM63X","ts":"1615038935.138200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sEF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yea thats a good point actually. Closures do let you move data in a well contained scope. That's very valuable for GUI stuff in Julia especially"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X","reactions":[{"name":"thumbsup_all","users":["U01M655G9AR"],"count":1}]},{"client_msg_id":"ef708a89-3435-463a-954b-67adab56047a","type":"message","text":"pretty sure everyone cringes inside when they see \"global var1,var2,var3\" etc","user":"UPUBAM63X","ts":"1615039044.138400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MpNXq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pretty sure everyone cringes inside when they see \"global var1,var2,var3\" etc"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"CD5EC290-A642-472F-A638-D8ECF3060CA5","type":"message","text":"I really dislike the name functor for this. I keep thinking it has something to do with the category theory concept but it doesn’t (as far as I can tell)","user":"U8D9768Q6","ts":"1615056321.151500","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1615056404.000000"},"blocks":[{"type":"rich_text","block_id":"2Hn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I really dislike the name functor for this. I keep thinking it has something to do with the category theory concept but it doesn’t (as far as I can tell)"}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"e351b2d4-a95b-40bf-8eca-911d85fd3000","type":"message","text":"Rust refers to this as a `tuple struct`.","user":"UDSU53PEG","ts":"1615059478.152900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ojY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rust refers to this as a "},{"type":"text","text":"tuple struct","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"b9b78497-8f58-4f76-8b91-37afe1b818d1","type":"message","text":"Oliver - it only exists on nightly I guess.\n\nMason - I think thats the problem with the word \"Functor\" in general... It kind of gets thrown around a lot. I guess in C++ people call callable objects functors as well. In Haskell that's not quite what they are(closer to the category theory definition).","user":"UPUBAM63X","ts":"1615059716.153600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Quimq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oliver - it only exists on nightly I guess.\n\nMason - I think thats the problem with the word \"Functor\" in general... It kind of gets thrown around a lot. I guess in C++ people call callable objects functors as well. In Haskell that's not quite what they are(closer to the category theory definition)."}]}]}],"thread_ts":"1615028292.124900","parent_user_id":"UPUBAM63X"}]