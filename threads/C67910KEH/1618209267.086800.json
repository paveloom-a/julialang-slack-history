[{"client_msg_id":"0fb5f3c7-c460-4cf7-9f49-d8d4beb2688d","type":"message","text":"Hey, I've started working on a new string format library: <https://github.com/bicycle1885/Fmt.jl>. In short, it brings the Python-style format (or std::format of C++, or std::fmt of Rust) to Julia. It's still pre-alpha, but almost all tools are implemented. Your feedback is welcomed!","user":"U6T475RL1","ts":"1618209267.086800","team":"T68168MUP","edited":{"user":"U6T475RL1","ts":"1618209652.000000"},"blocks":[{"type":"rich_text","block_id":"zfJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey, I've started working on a new string format library: "},{"type":"link","url":"https://github.com/bicycle1885/Fmt.jl"},{"type":"text","text":". In short, it brings the Python-style format (or std::format of C++, or std::fmt of Rust) to Julia. It's still pre-alpha, but almost all tools are implemented. Your feedback is welcomed!"}]}]}],"thread_ts":"1618209267.086800","reply_count":20,"reply_users_count":7,"latest_reply":"1618230147.094800","reply_users":["UH24GRBLL","U6T475RL1","UKG4WF8PJ","UJ7DVTVQ8","U7HAYKY9X","U0138UTB7A4","UB7JS9CHF"],"is_locked":false,"subscribed":false,"reactions":[{"name":"+1","users":["UH1BLK14H","U0138UTB7A4","U6SHSF4R0","U01R99UKP1S"],"count":4},{"name":"thankyou","users":["U0138UTB7A4"],"count":1},{"name":"tada","users":["U0138UTB7A4"],"count":1}]},{"client_msg_id":"82486cfb-8fcc-4b5c-bc36-8e7afb8a0e16","type":"message","text":"Looks cool! How does it compare to the `Printf` stdlib?","user":"UH24GRBLL","ts":"1618209606.086900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kn8L6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks cool! How does it compare to the "},{"type":"text","text":"Printf","style":{"code":true}},{"type":"text","text":" stdlib?"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"8875fa54-ebba-4eae-8ade-65c56ba9bd5d","type":"message","text":"I like the mix of interpolation with the format specification","user":"UH24GRBLL","ts":"1618210014.087200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SIH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I like the mix of interpolation with the format specification"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"36e451b2-8ab7-4bc1-bffb-08c1b0e90856","type":"message","text":"amazing that this doesn't need special language support, other than string macros!","user":"UH24GRBLL","ts":"1618210029.087400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sbW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"amazing that this doesn't need special language support, other than string macros!"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"d2c3194b-d81c-42be-84ce-e171055bc6f2","type":"message","text":"I wonder where the allocations for `fmt_print` are coming from :thinking_face:","user":"UH24GRBLL","ts":"1618210169.087600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sYR1i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder where the allocations for "},{"type":"text","text":"fmt_print","style":{"code":true}},{"type":"text","text":" are coming from "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"74b4e9c7-dbf6-498d-8045-bfc45c7bfbdb","type":"message","text":"Thank you! In terms of interface, Fmt.jl is simpler because you can mix string interpolation and formatting into a format syntax. Also, type specifiers are optional in Fmt.jl, while C-style Printf.jl requires them. In terms of performance, Fmt.jl seems to be slightly faster (may be 2x?) in some cases. I've updated the performance section accordingly. Of course, it needs more exhaustive benchmarks.","user":"U6T475RL1","ts":"1618210236.087800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=mA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you! In terms of interface, Fmt.jl is simpler because you can mix string interpolation and formatting into a format syntax. Also, type specifiers are optional in Fmt.jl, while C-style Printf.jl requires them. In terms of performance, Fmt.jl seems to be slightly faster (may be 2x?) in some cases. I've updated the performance section accordingly. Of course, it needs more exhaustive benchmarks."}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"29828bd6-1634-428b-a510-f26d7560ddf9","type":"message","text":"(you can use `versioninfo()` for very specific info about the julia build you're using :) )","user":"UH24GRBLL","ts":"1618210301.088000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Dbp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(you can use "},{"type":"text","text":"versioninfo()","style":{"code":true}},{"type":"text","text":" for very specific info about the julia build you're using :) )"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"a389cbfe-894d-41c6-a26c-2e65f13779e8","type":"message","text":"The benchmark benchmarks the cost of formatted string creation. So, it always allocates. It needs to allocates two objects: one for a string and one for a wrapper vector of it.","user":"U6T475RL1","ts":"1618210336.088200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"00aAq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The benchmark benchmarks the cost of formatted string creation. So, it always allocates. It needs to allocates two objects: one for a string and one for a wrapper vector of it."}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"73a5532b-937f-41df-af75-1b208e2c9d80","type":"message","text":"Sure! I know versioniof(). It seemed a little bit too verbose to me.","user":"U6T475RL1","ts":"1618210461.088400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AxP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure! I know versioniof(). It seemed a little bit too verbose to me."}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"491909da-aa13-49e3-aaf7-d4b6cc6c7a69","type":"message","text":"I see","user":"UH24GRBLL","ts":"1618210499.088600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MZkkI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"25dd73f9-6e44-477f-90ea-68c2addcd537","type":"message","text":"I like the short spec, though I'm missing an explanation for what type specifier corresponds to which type","user":"UH24GRBLL","ts":"1618210692.088800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"38E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I like the short spec, though I'm missing an explanation for what type specifier corresponds to which type"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"b74c5833-c60c-440c-9bb8-2e7bac866b3e","type":"message","text":"Other than that, seemse very nice! I'll have to keep it in mind","user":"UH24GRBLL","ts":"1618210996.089000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pok","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Other than that, seemse very nice! I'll have to keep it in mind"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"770c090e-165d-4f7b-99cf-9f9e5023c3a6","type":"message","text":"I had a problem with measurements and sprintf, that required to define Printf.tofloat on measurements, as Float64(measure) is not defined. I mention this because this package has related funcionality","user":"UKG4WF8PJ","ts":"1618211104.089200","team":"T68168MUP","edited":{"user":"UKG4WF8PJ","ts":"1618211174.000000"},"blocks":[{"type":"rich_text","block_id":"PS+D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I had a problem with measurements and sprintf, that required to define Printf.tofloat on measurements, as Float64(measure) is not defined. I mention this because this package has related funcionality"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"11404706-dfc5-4788-a426-839fcbd8e5b8","type":"message","text":"The lack of docs is due to my procrastination. I'll do that before releasing it. But it's mostly compatible with Python, so you can refer to the docs of Python.","user":"U6T475RL1","ts":"1618211248.089500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aEz4q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The lack of docs is due to my procrastination. I'll do that before releasing it. But it's mostly compatible with Python, so you can refer to the docs of Python."}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1","reactions":[{"name":"+1","users":["UH24GRBLL"],"count":1}]},{"client_msg_id":"965d1cc8-6fc7-4a5b-b6ba-ccda31076a09","type":"message","text":"To extend Fmt.jl to user-defined types, you'll need to define two methods: `formatinfo` and `formatfield`. So, I think you can define your formatting for measurements, although I've never tried it yet.","user":"U6T475RL1","ts":"1618211376.089800","team":"T68168MUP","edited":{"user":"U6T475RL1","ts":"1618211405.000000"},"blocks":[{"type":"rich_text","block_id":"NLY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To extend Fmt.jl to user-defined types, you'll need to define two methods: "},{"type":"text","text":"formatinfo","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"formatfield","style":{"code":true}},{"type":"text","text":". So, I think you can define your formatting for measurements, although I've never tried it yet."}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"9ca8d9ac-f0b8-475f-a412-c1202f339369","type":"message","text":"Have you seen <https://github.com/JuliaIO/Formatting.jl> ?","user":"UJ7DVTVQ8","ts":"1618211789.090100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T/dO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Have you seen "},{"type":"link","url":"https://github.com/JuliaIO/Formatting.jl"},{"type":"text","text":" ?"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"8d73b2aa-9217-4328-b381-76575f84c77a","type":"message","text":"Of course! I thought that the interface of Formatting.jl is a little bit awkward, so I've redesigned it from a different aspect (i.e., using a string macro). Also, performance is dramatically improved. Please check the performance section there: <https://github.com/bicycle1885/Fmt.jl#performance>.","user":"U6T475RL1","ts":"1618211991.090300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zHSdt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Of course! I thought that the interface of Formatting.jl is a little bit awkward, so I've redesigned it from a different aspect (i.e., using a string macro). Also, performance is dramatically improved. Please check the performance section there: "},{"type":"link","url":"https://github.com/bicycle1885/Fmt.jl#performance"},{"type":"text","text":"."}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1","reactions":[{"name":"+1::skin-tone-3","users":["UJ7DVTVQ8"],"count":1}]},{"client_msg_id":"9aa879ae-f2a6-48a3-b17e-20b3e7f53812","type":"message","text":"Ths looks great! More optimized IO/string manipulation in Julia is a welcome sight :) and with easy syntax, too! Make sure to make a package announcement on Discourse at release","user":"U7HAYKY9X","ts":"1618212530.090500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KxPN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ths looks great! More optimized IO/string manipulation in Julia is a welcome sight :) and with easy syntax, too! Make sure to make a package announcement on Discourse at release"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"61bad35e-d547-4ced-8b24-e8da0816bb05","type":"message","text":"Thank you! The first release may take a few more weeks because I need to implement error checks and support more types (currently, string, integers, and floats are the only supported types in Fmt.jl). Once it is released, I'll definitely announce it on Discourse.","user":"U6T475RL1","ts":"1618212819.090700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gwW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you! The first release may take a few more weeks because I need to implement error checks and support more types (currently, string, integers, and floats are the only supported types in Fmt.jl). Once it is released, I'll definitely announce it on Discourse."}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"31e8f879-a244-4218-8641-d90f6881c323","type":"message","text":"Wow, this looks like it'll be super handy. I've been looking for something that has Python-like string formatting since thats I'm used to. Thanks for taking the time to make it!","user":"U0138UTB7A4","ts":"1618223762.092200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HhxBm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow, this looks like it'll be super handy. I've been looking for something that has Python-like string formatting since thats I'm used to. Thanks for taking the time to make it!"}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"},{"client_msg_id":"CF8AA3F6-B865-4A23-A6FB-A54441819EC9","type":"message","text":"<@U6T475RL1> Had you looked at the string formatting in Strs.jl? That has been available for years now.","user":"UB7JS9CHF","ts":"1618230147.094800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ew7","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6T475RL1"},{"type":"text","text":" Had you looked at the string formatting in Strs.jl? That has been available for years now."}]}]}],"thread_ts":"1618209267.086800","parent_user_id":"U6T475RL1"}]