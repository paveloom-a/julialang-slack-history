[{"client_msg_id":"db7d76bd-8883-4e92-a21d-1b14b1ea715e","type":"message","text":"What is the Julia equivalent of `with scalar==true:` in Python?","user":"UTDSTSANP","ts":"1612182660.456300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dDp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the Julia equivalent of "},{"type":"text","text":"with scalar==true:","style":{"code":true}},{"type":"text","text":" in Python?"}]}]}],"thread_ts":"1612182660.456300","reply_count":18,"reply_users_count":4,"latest_reply":"1612185776.461300","reply_users":["U67D54KS8","UPSSPPBFV","UTDSTSANP","U01K809EUQ7"],"subscribed":false},{"client_msg_id":"c64789ad-0741-4cdf-a4e7-db4a82b875b7","type":"message","text":"That doesn't look like working Python code","user":"U67D54KS8","ts":"1612183105.457000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AY6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That doesn't look like working Python code"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"38493e89-64ad-429a-8c07-af4517208f35","type":"message","text":"Indeed not.","user":"UPSSPPBFV","ts":"1612183143.457200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NVV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Indeed not."}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"34286cfe-bb63-402b-8d76-6084889f309f","type":"message","text":"I mean't simply, this-\n```with CUDA.allowscalar(false)\n    @test f(x,y)\nend```","user":"UTDSTSANP","ts":"1612183180.457400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W5r3s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean't simply, this-\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"with CUDA.allowscalar(false)\n    @test f(x,y)\nend"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"d32b1890-ad4d-4c6a-b8ee-d6f2d7f72d05","type":"message","text":"Now I wanted things to go this way in Julia","user":"UTDSTSANP","ts":"1612183200.457600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hEBJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Now I wanted things to go this way in Julia"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"0244c6f4-d54f-4345-a687-430e9215617a","type":"message","text":"But apparently there is nothing that I know off. That Python code was a snippet, of course it as implied that I wanted a Julia equivalent f the keyword `with`  in Pythoon","user":"UTDSTSANP","ts":"1612183263.457800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JcDCV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But apparently there is nothing that I know off. That Python code was a snippet, of course it as implied that I wanted a Julia equivalent f the keyword "},{"type":"text","text":"with","style":{"code":true}},{"type":"text","text":"  in Pythoon"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"16df73c0-dcbe-46e6-9745-5df4e98a11ea","type":"message","text":"There is none, because Julia doesn't need context managers like Python does.","user":"UPSSPPBFV","ts":"1612183775.458000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4qL0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is none, because Julia doesn't need context managers like Python does."}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"5b225c27-1f6c-4820-8c88-bc86c4bc8ae2","type":"message","text":"The `do` keyword in Julia is similary used to `with` (but it doesn't work in the same way since `with` is based on classes). You can see the typical `file` example in <https://docs.julialang.org/en/v1/manual/functions/#Do-Block-Syntax-for-Function-Arguments>","user":"U67D54KS8","ts":"1612183895.458200","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1612183981.000000"},"blocks":[{"type":"rich_text","block_id":"Mt0C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":"do","style":{"code":true}},{"type":"text","text":" keyword in Julia is similary used to "},{"type":"text","text":"with","style":{"code":true}},{"type":"text","text":" (but it doesn't work in the same way since "},{"type":"text","text":"with","style":{"code":true}},{"type":"text","text":" is based on classes). You can see the typical "},{"type":"text","text":"file","style":{"code":true}},{"type":"text","text":" example in "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/functions/#Do-Block-Syntax-for-Function-Arguments"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"aeee24c2-86e9-43d1-8708-b4cdae74b0bf","type":"message","text":"If you require an answer in the context of CUDA, I suggest asking on <#C689Y34LE|gpu>. If your question is about a generic equivalent to Python `with`, then my answer above holds.","user":"UPSSPPBFV","ts":"1612183900.458400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cqE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you require an answer in the context of CUDA, I suggest asking on "},{"type":"channel","channel_id":"C689Y34LE"},{"type":"text","text":". If your question is about a generic equivalent to Python "},{"type":"text","text":"with","style":{"code":true}},{"type":"text","text":", then my answer above holds."}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"0f71c533-1cc5-411d-a914-b2a0f233bfa4","type":"message","text":"I was about to mention the `do` syntax, but I feel equating it with Python `with` is doing it a disservice. `do` blocks can do far more than what `with` can do, yet are conceptually speaking much simpler.","user":"UPSSPPBFV","ts":"1612184100.458800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iVFo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was about to mention the "},{"type":"text","text":"do","style":{"code":true}},{"type":"text","text":" syntax, but I feel equating it with Python "},{"type":"text","text":"with","style":{"code":true}},{"type":"text","text":" is doing it a disservice. "},{"type":"text","text":"do","style":{"code":true}},{"type":"text","text":" blocks can do far more than what "},{"type":"text","text":"with","style":{"code":true}},{"type":"text","text":" can do, yet are conceptually speaking much simpler."}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"6dc00773-d6e5-41bc-89b9-70aec33d235e","type":"message","text":"The equivalent of\n\n```with CUDA.allowscalar(false)\n    @test f(x,y)\nend```\nwould likely be written in Julia using `do` syntax so it seems apt to mention it.","user":"U67D54KS8","ts":"1612184251.459000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qR+Aq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The equivalent of\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"with CUDA.allowscalar(false)\n    @test f(x,y)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nwould likely be written in Julia using "},{"type":"text","text":"do","style":{"code":true}},{"type":"text","text":" syntax so it seems apt to mention it."}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"6609b619-8d8a-4e6e-9314-7a293d0baa9d","type":"message","text":"In fact, I think it is:\n\n```julia&gt; c = CuArray([1,2,3])\n3-element CuArray{Int64, 1}:\n 1\n 2\n 3\n\njulia&gt; c[1]\n┌ Warning: Performing scalar operations on GPU arrays: This is very slow, consider disallowing these operations with `allowscalar(false)`\n└ @ GPUArrays ~/.julia/packages/GPUArrays/WV76E/src/host/indexing.jl:43\n1\n\njulia&gt; CUDA.allowscalar(true) do\n           c[1]\n       end\n1```","user":"U67D54KS8","ts":"1612184308.459200","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1612184328.000000"},"blocks":[{"type":"rich_text","block_id":"mYqfc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In fact, I think it is:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> c = CuArray([1,2,3])\n3-element CuArray{Int64, 1}:\n 1\n 2\n 3\n\njulia> c[1]\n┌ Warning: Performing scalar operations on GPU arrays: This is very slow, consider disallowing these operations with `allowscalar(false)`\n└ @ GPUArrays ~/.julia/packages/GPUArrays/WV76E/src/host/indexing.jl:43\n1\n\njulia> CUDA.allowscalar(true) do\n           c[1]\n       end\n1"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"39726c25-2c8d-4406-b51c-738788c2163c","type":"message","text":"Oh nice! Thank you for the help!","user":"UTDSTSANP","ts":"1612184356.459500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vP1yO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh nice! Thank you for the help!"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"9fd3ed2d-f454-4940-9202-e9990fd8a5c3","type":"message","text":"OK, Couldn't find it in the CUDA.jl documentation so I thought they hadn't implemented it.","user":"UPSSPPBFV","ts":"1612184563.459700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qx8A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, Couldn't find it in the CUDA.jl documentation so I thought they hadn't implemented it."}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"69d48404-5614-443a-8f72-3b7866254d8e","type":"message","text":"Isn't there an @allowscalar macro? Something like this: CUDA.@allowscalar @test f(x, y)","user":"U01K809EUQ7","ts":"1612185263.459900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gORD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Isn't there an @allowscalar macro? Something like this: CUDA.@allowscalar @test f(x, y)"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"42c01c85-e13b-4e93-a752-f359b65483da","type":"message","text":"<https://juliahub.com/docs/GPUArrays/v5u0T/3.1.0/autodocs/#GPUArrays.@allowscalar-Tuple{Any}|https://juliahub.com/docs/GPUArrays/v5u0T/3.1.0/autodocs/#GPUArrays.@allowscalar-Tuple{Any}>","user":"U01K809EUQ7","ts":"1612185587.460500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZAp","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://juliahub.com/docs/GPUArrays/v5u0T/3.1.0/autodocs/#GPUArrays.@allowscalar-Tuple{Any}","text":"https://juliahub.com/docs/GPUArrays/v5u0T/3.1.0/autodocs/#GPUArrays.@allowscalar-Tuple{Any}"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"3ca347e2-4f53-49c3-8fa9-7d7c065e8416","type":"message","text":"Defined in GPUArrays, exported by CUDA","user":"U01K809EUQ7","ts":"1612185597.460700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kv7j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Defined in GPUArrays, exported by CUDA"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"2477f285-8d99-43f9-91bd-da0743e6d1ae","type":"message","text":"wow <@U01K809EUQ7> this is exactly what i needed. thank you!","user":"UTDSTSANP","ts":"1612185749.461100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mAn5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"wow "},{"type":"user","user_id":"U01K809EUQ7"},{"type":"text","text":" this is exactly what i needed. thank you!"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"},{"client_msg_id":"c0a484a4-c9c8-4faa-8c26-4b9d1ad856bd","type":"message","text":":ok_hand:","user":"U01K809EUQ7","ts":"1612185776.461300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2xEVl","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"ok_hand"}]}]}],"thread_ts":"1612182660.456300","parent_user_id":"UTDSTSANP"}]