[{"client_msg_id":"9f33f17d-449d-4994-a15e-1251902d00b4","type":"message","text":"In C# (idk about other languages), a foreach loop using an iterator throws an exception if the underlying collection was modified while iterating. This prevents a common class of bugs.\n\nWould this be possible to implement? Is there a reason someone might desire iterating over a collection that has mutated mid-iteration?","user":"U01HD5VFXJM","ts":"1612575784.205700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a=cG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In C# (idk about other languages), a foreach loop using an iterator throws an exception if the underlying collection was modified while iterating. This prevents a common class of bugs.\n\nWould this be possible to implement? Is there a reason someone might desire iterating over a collection that has mutated mid-iteration?"}]}]}],"thread_ts":"1612575784.205700","reply_count":15,"reply_users_count":5,"latest_reply":"1612606299.209900","reply_users":["U0179G7FG4F","U01HD5VFXJM","U67BJLYCS","UM30MT6RF","U67431ELR"],"subscribed":false},{"client_msg_id":"87718915-8bf6-4082-a91c-8e6145112d72","type":"message","text":"If we could throw an error easily here we would. Do you know how C# does this? It seems like a really hard problem. How does it deal with aliasing?","user":"U0179G7FG4F","ts":"1612575893.205800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k2F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If we could throw an error easily here we would. Do you know how C# does this? It seems like a really hard problem. How does it deal with aliasing?"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"3563264e-a14a-4663-92e3-05d59920c27c","type":"message","text":"I don't know but I'll see what I can learn about that!","user":"U01HD5VFXJM","ts":"1612576201.206000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oSt2D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know but I'll see what I can learn about that!"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"b7641fad-9981-4df5-8e61-2e73c6a87379","type":"message","text":"the only way I could see it working is if they store a number which they increment every time you  modify the collection. That would work, but it would cause about a 2x slowdown for `setindex` and `iterate`","user":"U0179G7FG4F","ts":"1612576342.206200","team":"T68168MUP","edited":{"user":"U0179G7FG4F","ts":"1612576366.000000"},"blocks":[{"type":"rich_text","block_id":"jSH9n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the only way I could see it working is if they store a number which they increment every time you  modify the collection. That would work, but it would cause about a 2x slowdown for "},{"type":"text","text":"setindex","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"iterate","style":{"code":true}}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"39b48112-0298-4ca3-8b81-ef9aa6ea8ac8","type":"message","text":"Ah yep, that is what they do. The collection type has an internal `_version` field <https://referencesource.microsoft.com/#mscorlib/system/collections/generic/list.cs,9c3d580a8b7a8fe8>","user":"U01HD5VFXJM","ts":"1612576401.206500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W1mk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah yep, that is what they do. The collection type has an internal "},{"type":"text","text":"_version","style":{"code":true}},{"type":"text","text":" field "},{"type":"link","url":"https://referencesource.microsoft.com/#mscorlib/system/collections/generic/list.cs,9c3d580a8b7a8fe8"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"65e1a3e2-1f76-4886-baa9-7021dc31e98f","type":"message","text":":troll: modify the page that the data is on to be read only at the beginning of the iterator","user":"U67BJLYCS","ts":"1612576729.206700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2gOk","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"troll"},{"type":"text","text":" modify the page that the data is on to be read only at the beginning of the iterator"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM","reactions":[{"name":"smile","users":["U01HD5VFXJM","U7THT3TM3"],"count":2}]},{"client_msg_id":"35cd4baa-46ff-4457-84d3-1bbb16b211c6","type":"message","text":"FWIW they only increment the version when the size changes, not when an item is modified. Though would still impact the `iterate`","user":"U01HD5VFXJM","ts":"1612576823.206900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IEG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW they only increment the version when the size changes, not when an item is modified. Though would still impact the "},{"type":"text","text":"iterate","style":{"code":true}}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"cd237dec-555a-4183-96da-85187c1a8f03","type":"message","text":"that makes more sense. insert and remove are likely to be slowish anyway","user":"U0179G7FG4F","ts":"1612576876.207100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=gF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that makes more sense. insert and remove are likely to be slowish anyway"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"ee885914-e35e-4dea-8830-323534fc9bd9","type":"message","text":"If implemented, could it be turned off with a macro, as with `@inbounds`?","user":"U01HD5VFXJM","ts":"1612577270.207300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xN3b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If implemented, could it be turned off with a macro, as with "},{"type":"text","text":"@inbounds","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"2e3042c1-076b-457c-9da9-5135cb6863bc","type":"message","text":"you could fix the speed impacts. The other impact would be an extra 4 bytes per collection, which could sometimes be a problem","user":"U0179G7FG4F","ts":"1612577530.207600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i2j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could fix the speed impacts. The other impact would be an extra 4 bytes per collection, which could sometimes be a problem"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"719c433a-7071-4459-bd4b-0ed55c832438","type":"message","text":"it would also be a massively breaking change","user":"U0179G7FG4F","ts":"1612577584.207800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mp/f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it would also be a massively breaking change"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"ffab7fd8-86a7-4fff-80ad-1f3e49adb5f4","type":"message","text":"you actually could make it opt in maybe","user":"U0179G7FG4F","ts":"1612577657.208000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vM8qD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you actually could make it opt in maybe"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"f526ec3d-fd37-49c5-901b-4d83ce59ba51","type":"message","text":"I don't know about other types, but `Dict` already tracks `age` which is incremented with any size-modifying operation. Maybe I'll file away to explore sometime.","user":"U01HD5VFXJM","ts":"1612579593.208400","team":"T68168MUP","edited":{"user":"U01HD5VFXJM","ts":"1612579643.000000"},"blocks":[{"type":"rich_text","block_id":"3pt0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know about other types, but "},{"type":"text","text":"Dict","style":{"code":true}},{"type":"text","text":" already tracks "},{"type":"text","text":"age","style":{"code":true}},{"type":"text","text":" which is incremented with any size-modifying operation. Maybe I'll file away to explore sometime."}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","U67431ELR"],"count":2}]},{"client_msg_id":"1c31c89d-40b0-4cf9-b1fe-e3aab2e23566","type":"message","text":"You could write a Cassette pass that just errors if it encounters a function (or foreigncall) that is known to be mutating","user":"UM30MT6RF","ts":"1612599618.209200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xYjgO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could write a Cassette pass that just errors if it encounters a function (or foreigncall) that is known to be mutating"}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"fa1eaecd-9d88-410a-8c4d-4f6f851e6297","type":"message","text":"I haven't had an opportunity to check Cassette out yet, so that would be interesting.","user":"U01HD5VFXJM","ts":"1612601159.209600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"53DM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven't had an opportunity to check Cassette out yet, so that would be interesting."}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"},{"client_msg_id":"49fe1f80-cf07-4015-9b20-c0af73fe494d","type":"message","text":"Maybe for `Dict` the overhead would be acceptable as a lookup does a lot of work already. For arrays that's off the table I think.","user":"U67431ELR","ts":"1612606299.209900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3g9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe for "},{"type":"text","text":"Dict","style":{"code":true}},{"type":"text","text":" the overhead would be acceptable as a lookup does a lot of work already. For arrays that's off the table I think."}]}]}],"thread_ts":"1612575784.205700","parent_user_id":"U01HD5VFXJM"}]