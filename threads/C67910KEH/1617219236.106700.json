[{"client_msg_id":"3d72a2cd-ece3-487d-9668-c2e43126c369","type":"message","text":"<https://twitter.com/MarisaVeryMoe/status/1377109632351567875?s=19|https://twitter.com/MarisaVeryMoe/status/1377109632351567875?s=19>","user":"UDGT4PM41","ts":"1617219236.106700","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/MarisaVeryMoe|@MarisaVeryMoe>: <https://twitter.com/sheredom|@sheredom> have you heard about our lord and saviors, egraph?","ts":1617163496,"author_name":"Marisa \"Long Middle Name Looks Cool\" Kirisame","author_link":"https://twitter.com/MarisaVeryMoe/status/1377109632351567875","author_icon":"https://pbs.twimg.com/profile_images/1274131074616983552/UTTgslAk_normal.jpg","author_subname":"@MarisaVeryMoe","text":"<https://twitter.com/sheredom|@sheredom> have you heard about our lord and saviors, egraph?","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/MarisaVeryMoe/status/1377109632351567875?s=19","id":1,"original_url":"https://twitter.com/MarisaVeryMoe/status/1377109632351567875?s=19","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"nIG8n","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/MarisaVeryMoe/status/1377109632351567875?s=19","text":"https://twitter.com/MarisaVeryMoe/status/1377109632351567875?s=19"}]}]}],"thread_ts":"1617219236.106700","reply_count":10,"reply_users_count":3,"latest_reply":"1617224406.111500","reply_users":["U6795JH6H","U7THT3TM3","UDGT4PM41"],"is_locked":false,"subscribed":false},{"client_msg_id":"80f38675-a1c5-4b00-a0de-25afe1ae4587","type":"message","text":"It’s an interesting idea: can you make an entire optimizing compiler based entirely on egraphs so that the end result is independent of the order you apply “transformations”","user":"U6795JH6H","ts":"1617220219.106900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rb1Iv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s an interesting idea: can you make an entire optimizing compiler based entirely on egraphs so that the end result is independent of the order you apply “transformations”"}]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41"},{"client_msg_id":"44a578eb-53ff-43ba-ae16-bf1b3216d76c","type":"message","text":"what’s the unit of transformation? do you construct an egraph of the entire program? or each function?","user":"U6795JH6H","ts":"1617220267.107100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xkF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what’s the unit of transformation? do you construct an egraph of the entire program? or each function?"}]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41"},{"client_msg_id":"3A6BFC60-5353-4A4E-830C-7EA36852D9B2","type":"message","text":"If one of your optimizations is inlining, presumably you need a single egraph for the entire program?","user":"U7THT3TM3","ts":"1617221226.108400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+dfQS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If one of your optimizations is inlining, presumably you need a single egraph for the entire program?"}]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41"},{"client_msg_id":"40d3f65f-fbe7-46d2-b6d7-402034c700e4","type":"message","text":"<@U01K2JB9GPJ> :wink:","user":"UDGT4PM41","ts":"1617223689.108700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3BV","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01K2JB9GPJ"},{"type":"text","text":" "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41"},{"client_msg_id":"4bd64fc7-1ed2-45a9-b278-733784252ebc","type":"message","text":"I'm not sure, but sounds like exactly the compiler pass problem Keno is trying to solive","user":"UDGT4PM41","ts":"1617223714.108900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iwKa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure, but sounds like exactly the compiler pass problem Keno is trying to solive"}]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41"},{"client_msg_id":"0ffa8bc2-0125-44a1-b2c9-bfd21bd65441","type":"message","text":"<@U6795JH6H> I think is relevant : <https://dl.acm.org/doi/pdf/10.1145/3385412.3386001>","user":"UDGT4PM41","ts":"1617223751.109100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lG2I","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6795JH6H"},{"type":"text","text":" I think is relevant : "},{"type":"link","url":"https://dl.acm.org/doi/pdf/10.1145/3385412.3386001"}]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"cf60c27c-e16f-4229-95f0-579904d611d8","type":"message","text":"using egraphs to reason about high level semantics of code","user":"UDGT4PM41","ts":"1617223787.109300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mhM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"using egraphs to reason about high level semantics of code"}]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41"},{"client_msg_id":"ec705f93-fe3e-4155-b3c0-c7ef5e3e72f0","type":"message","text":"doesn't have to be just for code search","user":"UDGT4PM41","ts":"1617223802.109500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D6oom","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"doesn't have to be just for code search"}]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41"},{"client_msg_id":"1a98170d-3df2-44c4-b785-06906dae5e6c","type":"message","text":"However:\n\n&gt; Rewriting: The Elephant in the Room. Given the utility of Yogo for refactoring and program repair purposes, an obvious question is: is it possible to automatically rewrite the code found by Yogo searches? Unfortunately, the very feature that makes Yogo so enticing, its flexibility in matching, also makes rewriting matches an extremely difficult problem. There are three challenges:\n&gt;  Interprocedural code: Yogo cannot detect patterns when the code is split across methods. For example, Yogo missed an instance of squared 2D-distance in PyGame which invoked vector-subtraction. While this limitation can be partially addressed by inlining (for a significant performance price), this is actually a fundamental limitation of PEGs\n","user":"UDGT4PM41","ts":"1617223869.109800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OCLfX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"However:\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Rewriting: The Elephant in the Room. Given the utility of Yogo for refactoring and program repair purposes, an obvious question is: is it possible to automatically rewrite the code found by Yogo searches? Unfortunately, the very feature that makes Yogo so enticing, its flexibility in matching, also makes rewriting matches an extremely difficult problem. There are three challenges:"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":" Interprocedural code: Yogo cannot detect patterns when the code is split across methods. For example, Yogo missed an instance of squared 2D-distance in PyGame which invoked vector-subtraction. While this limitation can be partially addressed by inlining (for a significant performance price), this is actually a fundamental limitation of PEGs"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"687da562-2f10-47d0-b07f-bf5824bf1801","type":"message","text":"&gt; allowing arbitrary inlining can explode the size of the E-PEGs","user":"U7THT3TM3","ts":"1617224406.111500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tp2U4","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"allowing arbitrary inlining can explode the size of the E-PEGs"}]}]}],"thread_ts":"1617219236.106700","parent_user_id":"UDGT4PM41"}]