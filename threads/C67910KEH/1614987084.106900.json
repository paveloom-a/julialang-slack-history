[{"client_msg_id":"81d0d336-0087-4b88-95a7-9188bca68f1d","type":"message","text":"think I macro'd myself into a bad spot... Is it possible to take the input from a macro, and then feed it into another macro?","user":"UPUBAM63X","ts":"1614987084.106900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D/N9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"think I macro'd myself into a bad spot... Is it possible to take the input from a macro, and then feed it into another macro?"}]}]}],"thread_ts":"1614987084.106900","reply_count":5,"reply_users_count":3,"latest_reply":"1614990878.118000","reply_users":["UH9KWTTD3","UPUBAM63X","UM30MT6RF"],"subscribed":false},{"client_msg_id":"BB302E0A-7967-4922-B575-B1506B76966D","type":"message","text":"In these kind of cases, I like to write a function that operates on expressions/symbols as input. Then define the macro as syntactic sugar for calling the function. This way it doesn’t matter how you enter reflection, once you are there you just call your functions with the freedom to pass and return whatever you want.","user":"UH9KWTTD3","ts":"1614988082.110000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/62","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In these kind of cases, I like to write a function that operates on expressions/symbols as input. Then define the macro as syntactic sugar for calling the function. This way it doesn’t matter how you enter reflection, once you are there you just call your functions with the freedom to pass and return whatever you want."}]}]}],"thread_ts":"1614987084.106900","parent_user_id":"UPUBAM63X","reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"4567b462-33ef-4bb5-9178-928cf81a3fba","type":"message","text":"thats kind of what I landed on doing as well. Just factored it out and will make it one macro with multiple macro \"entry points\"","user":"UPUBAM63X","ts":"1614988147.112200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H5JHS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thats kind of what I landed on doing as well. Just factored it out and will make it one macro with multiple macro \"entry points\""}]}]}],"thread_ts":"1614987084.106900","parent_user_id":"UPUBAM63X","reactions":[{"name":"+1::skin-tone-5","users":["UH9KWTTD3"],"count":1}]},{"client_msg_id":"2351524B-A4F1-4FF5-8F70-61D0184F1306","type":"message","text":"So the macros are only an entry point. I find this cleaner when I write a code base with a lot of meta programming. It doesn’t answer your question which I don’t know the answer to because I never ended up in that spot. Because of the structure above haha.","user":"UH9KWTTD3","ts":"1614988157.112600","team":"T68168MUP","edited":{"user":"UH9KWTTD3","ts":"1614988177.000000"},"blocks":[{"type":"rich_text","block_id":"afZr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the macros are only an entry point. I find this cleaner when I write a code base with a lot of meta programming. It doesn’t answer your question which I don’t know the answer to because I never ended up in that spot. Because of the structure above haha."}]}]}],"thread_ts":"1614987084.106900","parent_user_id":"UPUBAM63X"},{"client_msg_id":"8a0c923b-6b94-4e78-bfee-b39f99e71711","type":"message","text":"yea I think the idea is, don't end up doing that :smile:","user":"UPUBAM63X","ts":"1614988187.113200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6QA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yea I think the idea is, don't end up doing that "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1614987084.106900","parent_user_id":"UPUBAM63X","reactions":[{"name":"sweat_smile","users":["UH9KWTTD3"],"count":1}]},{"client_msg_id":"d375e119-4a5c-494e-bd12-6237db159b03","type":"message","text":"Definitely possible though. You can call a macro inside another macro as `var\"@m\"(__source___,_ __module__, ex)`, where `ex` is an expression, just like any other function and you will get back the expanded expression. There is also `macroexpand`, but that won't propagate linenumber information and will apply macro hygiene as well, so you'd probably need to escape the resulting expression.","user":"UM30MT6RF","ts":"1614990878.118000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hg0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Definitely possible though. You can call a macro inside another macro as "},{"type":"text","text":"var\"@m\"(__source_","style":{"code":true}},{"type":"text","text":"_, ","style":{"italic":true,"code":true}},{"type":"text","text":"__module__, ex)","style":{"code":true}},{"type":"text","text":", where "},{"type":"text","text":"ex","style":{"code":true}},{"type":"text","text":" is an expression, just like any other function and you will get back the expanded expression. There is also "},{"type":"text","text":"macroexpand","style":{"code":true}},{"type":"text","text":", but that won't propagate linenumber information and will apply macro hygiene as well, so you'd probably need to escape the resulting expression."}]}]}],"thread_ts":"1614987084.106900","parent_user_id":"UPUBAM63X"}]