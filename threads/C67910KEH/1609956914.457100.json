[{"client_msg_id":"6df3c79e-dcd0-4822-9b04-fe8e0eb6e430","type":"message","text":"A professor I know is teaching a probabilistic programming class using Julia this semester, and was wondering if anyone has recommendations for a concise “tour of Julia” for people who know how to program but need an overview of all of Julia’s programming constructs. Ideally it would be information-dense, high-coverage, and relatively self-contained. Is there anything like this?","user":"UL59KHYPQ","ts":"1609956914.457100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QulD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A professor I know is teaching a probabilistic programming class using Julia this semester, and was wondering if anyone has recommendations for a concise “tour of Julia” for people who know how to program but need an overview of all of Julia’s programming constructs. Ideally it would be information-dense, high-coverage, and relatively self-contained. Is there anything like this?"}]}]}],"thread_ts":"1609956914.457100","reply_count":4,"reply_users_count":2,"latest_reply":"1609959443.459200","reply_users":["UGU761DU2","UL59KHYPQ"],"subscribed":false},{"client_msg_id":"cdd5c4e3-c329-44ba-a0a4-c2867f05c044","type":"message","text":"As far as general language usage there’s at the extreme short end some quick-start cheatsheets:\n<https://cheatsheets.quantecon.org/>\n<https://docs.julialang.org/en/v1/manual/noteworthy-differences/>\nand then on the long end a couple books:\n<https://benlauwens.github.io/ThinkJulia.jl/latest/book.html>\n<https://www.packtpub.com/product/hands-on-design-patterns-and-best-practices-with-julia/9781838648817>\nbut relatively little in between that I know of.\n\nIn terms of “programming constructs” and design patterns etc., the main thing to really internalize is multiple dispatch.","user":"UGU761DU2","ts":"1609957625.457500","team":"T68168MUP","edited":{"user":"UGU761DU2","ts":"1609957690.000000"},"blocks":[{"type":"rich_text","block_id":"iAIK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As far as general language usage there’s at the extreme short end some quick-start cheatsheets:\n"},{"type":"link","url":"https://cheatsheets.quantecon.org/"},{"type":"text","text":"\n"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/noteworthy-differences/"},{"type":"text","text":"\nand then on the long end a couple books:\n"},{"type":"link","url":"https://benlauwens.github.io/ThinkJulia.jl/latest/book.html"},{"type":"text","text":"\n"},{"type":"link","url":"https://www.packtpub.com/product/hands-on-design-patterns-and-best-practices-with-julia/9781838648817"},{"type":"text","text":"\nbut relatively little in between that I know of.\n\nIn terms of “programming constructs” and design patterns etc., the main thing to really internalize is multiple dispatch."}]}]}],"thread_ts":"1609956914.457100","parent_user_id":"UL59KHYPQ"},{"client_msg_id":"d46d9888-2793-4343-acff-41beb5553170","type":"message","text":"Multiple dispatch really is a whole different programming paradigm, and I think it took me way too long to really understand that. Just remembering to actually use multiple dispatch was one step (i.e., if I’m writing a package, and there’s a problem that can be solved with dispatch, to find it and actually structure the code that way), and another was being conscious of (and eliminating) type instability.\n\nThere are probably much better resources elsewhere, but a few things that stood out to me / took me a long time to learn while transitioning to Julia:\n<https://github.com/brenhinkeller/JuliaAdviceForMatlabProgrammers>\n\nAs far as multiple dispatch as a programming paradigm, it can be interesting / it may be informative to think of “dispatch-oriented” programming as an alternative to class-based object-oriented programming\n\n(Emphasis on _class-based_ I suppose, since as has been discussed a few times on the Julia Slack, there is an argument to be made that multiple dispatch is at least as close if not closer to Alan Kay’s original intent for OO (e.g. <https://medium.com/javascript-scene/the-forgotten-history-of-oop-88d71b9b2d9f>) than is the currently-ubiquitous class-based version of OO that leads to things like `RequestProcessorFactoryFactory` s with `RequestProcessorFactoryFactory.getRequestProcessorFactory(Class)` methods)\n\nI didn’t have any (class-based) OO background to begin with when I started using Julia, but if you _do_, and you ever find yourself asking “wouldn’t this be easier if I could use multiple inheritance” for this problem or that, that can be a hint to try rethinking things in a more dispatch-centric way.","user":"UGU761DU2","ts":"1609957691.457900","team":"T68168MUP","edited":{"user":"UGU761DU2","ts":"1609957713.000000"},"blocks":[{"type":"rich_text","block_id":"Lr7lX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Multiple dispatch really is a whole different programming paradigm, and I think it took me way too long to really understand that. Just remembering to actually use multiple dispatch was one step (i.e., if I’m writing a package, and there’s a problem that can be solved with dispatch, to find it and actually structure the code that way), and another was being conscious of (and eliminating) type instability.\n\nThere are probably much better resources elsewhere, but a few things that stood out to me / took me a long time to learn while transitioning to Julia:\n"},{"type":"link","url":"https://github.com/brenhinkeller/JuliaAdviceForMatlabProgrammers"},{"type":"text","text":"\n\nAs far as multiple dispatch as a programming paradigm, it can be interesting / it may be informative to think of “dispatch-oriented” programming as an alternative to class-based object-oriented programming\n\n(Emphasis on "},{"type":"text","text":"class-based","style":{"italic":true}},{"type":"text","text":" I suppose, since as has been discussed a few times on the Julia Slack, there is an argument to be made that multiple dispatch is at least as close if not closer to Alan Kay’s original intent for OO (e.g. "},{"type":"link","url":"https://medium.com/javascript-scene/the-forgotten-history-of-oop-88d71b9b2d9f"},{"type":"text","text":") than is the currently-ubiquitous class-based version of OO that leads to things like "},{"type":"text","text":"RequestProcessorFactoryFactory","style":{"code":true}},{"type":"text","text":" s with "},{"type":"text","text":"RequestProcessorFactoryFactory.getRequestProcessorFactory(Class)","style":{"code":true}},{"type":"text","text":" methods)\n\nI didn’t have any (class-based) OO background to begin with when I started using Julia, but if you "},{"type":"text","text":"do","style":{"italic":true}},{"type":"text","text":", and you ever find yourself asking “wouldn’t this be easier if I could use multiple inheritance” for this problem or that, that can be a hint to try rethinking things in a more dispatch-centric way."}]}]}],"thread_ts":"1609956914.457100","parent_user_id":"UL59KHYPQ"},{"client_msg_id":"94a0812f-a713-433a-b43c-49dc300e6f6b","type":"message","text":"Once you get past introduction to the language and are ready to start making your own packages <https://www.youtube.com/watch?v=QVmU29rCjaA> is excellent","user":"UGU761DU2","ts":"1609957763.458400","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"Developing Julia Packages","title_link":"https://www.youtube.com/watch?v=QVmU29rCjaA","author_name":"The Julia Programming Language","author_link":"https://www.youtube.com/c/TheJuliaLanguage","thumb_url":"https://i.ytimg.com/vi/QVmU29rCjaA/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: Developing Julia Packages","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/QVmU29rCjaA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://www.youtube.com/watch?v=QVmU29rCjaA","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://www.youtube.com/watch?v=QVmU29rCjaA"}],"blocks":[{"type":"rich_text","block_id":"WuB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Once you get past introduction to the language and are ready to start making your own packages "},{"type":"link","url":"https://www.youtube.com/watch?v=QVmU29rCjaA"},{"type":"text","text":" is excellent"}]}]}],"thread_ts":"1609956914.457100","parent_user_id":"UL59KHYPQ"},{"client_msg_id":"9C127F82-3D92-489E-9FA8-D6BA872EBE31","type":"message","text":"Thank you — these are great!","user":"UL59KHYPQ","ts":"1609959443.459200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q9awz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you — these are great!"}]}]}],"thread_ts":"1609956914.457100","parent_user_id":"UL59KHYPQ"}]