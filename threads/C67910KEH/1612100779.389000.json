[{"client_msg_id":"2db9c49e-39a8-41fb-a462-9f4e2c2d2437","type":"message","text":"By looking at how sorting algorithms are implemented, should merge sort, quick sort, and insertion sort be all equally fast when the length of the array &lt;= 20? Because with my machine, it looks that merge sort is slower by a multiplier of 3 (25 ns vs. 73 ns with a random array of size 10)","user":"UAGBT2X1A","ts":"1612100779.389000","team":"T68168MUP","edited":{"user":"UAGBT2X1A","ts":"1612101052.000000"},"blocks":[{"type":"rich_text","block_id":"EOeW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"By looking at how sorting algorithms are implemented, should merge sort, quick sort, and insertion sort be all equally fast when the length of the array <= 20? Because with my machine, it looks that merge sort is slower by a multiplier of 3 (25 ns vs. 73 ns with a random array of size 10)"}]}]}],"thread_ts":"1612100779.389000","reply_count":91,"reply_users_count":2,"latest_reply":"1612114812.421100","reply_users":["UH24GRBLL","UAGBT2X1A"],"subscribed":false},{"client_msg_id":"234c5d5e-d3df-4ef3-ae94-1b03f7489476","type":"message","text":"with those sizes, it's not really meaningful to compare them","user":"UH24GRBLL","ts":"1612102252.389400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5O/w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with those sizes, it's not really meaningful to compare them"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"8add5d01-5552-4089-bd68-8c2ca0f11a6e","type":"message","text":"caching effects will dominate","user":"UH24GRBLL","ts":"1612102265.389600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ok/1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"caching effects will dominate"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"b3bd30ab-d2ef-4d4d-8568-ce37f2249e91","type":"message","text":"small tangent, but I think you'd enjoy <https://dlang.org/blog/2020/05/14/lomutos-comeback/>","user":"UH24GRBLL","ts":"1612102426.389800","team":"T68168MUP","attachments":[{"service_name":"The D Blog","title":"Lomuto’s Comeback","title_link":"https://dlang.org/blog/2020/05/14/lomutos-comeback/","text":"The Continental Club in Austin, Texas, USA Sunday, January 5, 1987 “Thank you for your kind invitation, Mr. Lomuto. I will soon return to England so this is quite timely.” “And th…","fallback":"The D Blog: Lomuto’s Comeback","image_url":"http://dlang.org/blog/wp-content/uploads/2020/05/hoare-partition-upipe.png","image_width":429,"image_height":250,"ts":1589462263,"from_url":"https://dlang.org/blog/2020/05/14/lomutos-comeback/","image_bytes":126133,"service_icon":"https://dlang.org/favicon.ico","id":1,"original_url":"https://dlang.org/blog/2020/05/14/lomutos-comeback/"}],"blocks":[{"type":"rich_text","block_id":"MsF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"small tangent, but I think you'd enjoy "},{"type":"link","url":"https://dlang.org/blog/2020/05/14/lomutos-comeback/"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"613cb1de-8d67-43d3-ae14-8f9c828350a5","type":"message","text":"Nah, this is a real issue. Mergesort is allocating vector `t` and that is not even used when falling back to a small algorithm. If I allocate that vector after checking if merge sort used at all, it's has the same performance as insertion sort. Sounds like my first pull request to Julia is coming.","user":"UAGBT2X1A","ts":"1612105357.397000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MxL4O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nah, this is a real issue. Mergesort is allocating vector "},{"type":"text","text":"t","style":{"code":true}},{"type":"text","text":" and that is not even used when falling back to a small algorithm. If I allocate that vector after checking if merge sort used at all, it's has the same performance as insertion sort. Sounds like my first pull request to Julia is coming."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A","reactions":[{"name":"clapping","users":["UB7JS9CHF","U6795JH6H","U66QZ3QF3"],"count":3}]},{"client_msg_id":"4ec61132-085a-424f-a0a9-4181c674ec93","type":"message","text":"<https://github.com/JuliaLang/julia/blob/master/base/sort.jl#L615> clearly this is causing the problem.","user":"UAGBT2X1A","ts":"1612105414.397200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"roh7","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/blob/master/base/sort.jl#L615"},{"type":"text","text":" clearly this is causing the problem."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"ff4c1722-6115-4807-88da-c2837e6c05d2","type":"message","text":"you sure you haven't missed <https://github.com/JuliaLang/julia/blob/b4b964334278a4f0c002100f387fe9f98b7e254d/base/sort.jl#L617> in your thoughts?","user":"UH24GRBLL","ts":"1612105596.397400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WAm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you sure you haven't missed "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/b4b964334278a4f0c002100f387fe9f98b7e254d/base/sort.jl#L617"},{"type":"text","text":" in your thoughts?"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"7b826658-a91d-428e-813f-e0666db6e1f6","type":"message","text":"`hi-lo &lt;= SMALL_THRESHOLD &amp;&amp; return sort!(v, lo, hi, SMALL_ALGORITHM, o)`","user":"UH24GRBLL","ts":"1612105606.397600","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612105612.000000"},"blocks":[{"type":"rich_text","block_id":"DhR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi-lo <= SMALL_THRESHOLD && return sort!(v, lo, hi, SMALL_ALGORITHM, o)","style":{"code":true}}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"4652e839-aab6-47a0-93ea-341c2ddc15c4","type":"message","text":"ah, I see what you mean","user":"UH24GRBLL","ts":"1612105635.397900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BA5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, I see what you mean"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"f8f83e66-1f48-4e8e-8e62-3894d87cebec","type":"message","text":"Yes, but if you look the line 615, it allocates this `t` anyway, and that is not needed when using insertion sort.","user":"UAGBT2X1A","ts":"1612105641.398100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HF=IW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, but if you look the line 615, it allocates this "},{"type":"text","text":"t","style":{"code":true}},{"type":"text","text":" anyway, and that is not needed when using insertion sort."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"5027da90-41f3-4fb2-9179-3ac25f2333ea","type":"message","text":"hmmmmm","user":"UH24GRBLL","ts":"1612105688.398300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UnIg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmmmmm"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"86ba675e-5eb9-46b0-88d2-9e686333091f","type":"message","text":"do we hit that allocating method by default?","user":"UH24GRBLL","ts":"1612105712.398500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PBx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do we hit that allocating method by default?"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"e53bf987-1db5-4ae3-9b2d-313217c18d67","type":"message","text":"ok yeah, seems like it because of the `DEFAULT_STABLE = MergeSort` - nice catch","user":"UH24GRBLL","ts":"1612105769.398700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aIM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok yeah, seems like it because of the "},{"type":"text","text":"DEFAULT_STABLE = MergeSort","style":{"code":true}},{"type":"text","text":" - nice catch"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"b4470360-d97b-4eac-a592-4c5805fd7fc1","type":"message","text":"Yes. if I change the code following,\n\n``` 615 function sort!(v::AbstractVector, lo::Integer, hi::Integer, a::MergeSortAlg, o::Ordering)\n 616     @inbounds if lo &lt; hi\n 617         hi-lo &lt;= SMALL_THRESHOLD &amp;&amp; return sort!(v, lo, hi, SMALL_ALGORITHM, o)\n 618 \n 619         t = similar(v, 0)\n 620         m = midpoint(lo, hi)\n 621         (length(t) &lt; m-lo+1) &amp;&amp; resize!(t, m-lo+1)```\nThe problem vanishes","user":"UAGBT2X1A","ts":"1612105772.398900","team":"T68168MUP","edited":{"user":"UAGBT2X1A","ts":"1612105795.000000"},"blocks":[{"type":"rich_text","block_id":"/Up3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes. if I change the code following,\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":" 615 function sort!(v::AbstractVector, lo::Integer, hi::Integer, a::MergeSortAlg, o::Ordering)\n 616     @inbounds if lo < hi\n 617         hi-lo <= SMALL_THRESHOLD && return sort!(v, lo, hi, SMALL_ALGORITHM, o)\n 618 \n 619         t = similar(v, 0)\n 620         m = midpoint(lo, hi)\n 621         (length(t) < m-lo+1) && resize!(t, m-lo+1)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The problem vanishes"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"65267acb-7dcd-4965-a539-007e2f3c1e46","type":"message","text":"hmm","user":"UH24GRBLL","ts":"1612105791.399100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sm1ZD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"c506874f-152e-4eeb-96dd-0ad17776a272","type":"message","text":"that does prevent passing in one's own buffer though","user":"UH24GRBLL","ts":"1612105804.399400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612105816.000000"},"blocks":[{"type":"rich_text","block_id":"nnF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that does prevent passing in one's own buffer though"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"75c29a81-801b-4ee0-9119-5a8470c4d2a8","type":"message","text":"Yes, that's what I'm thinking now, how to implement it properly.","user":"UAGBT2X1A","ts":"1612105839.399700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1tWgh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, that's what I'm thinking now, how to implement it properly."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"f8e098bc-da30-4f97-8519-176029d05de3","type":"message","text":"also breaks the recursion in 619-620","user":"UH24GRBLL","ts":"1612105850.399900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rhfiG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also breaks the recursion in 619-620"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"e553e733-df21-4c64-be9b-b5c969e7d12b","type":"message","text":"after all, this allocation only happens at the top level call","user":"UH24GRBLL","ts":"1612105878.400100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9ohj5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"after all, this allocation only happens at the top level call"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"4ce59a2d-ca98-4cf3-ad28-ce353186c89c","type":"message","text":"so it's less of a factor 3 and more a constant +50ns","user":"UH24GRBLL","ts":"1612105913.400300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N4d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so it's less of a factor 3 and more a constant +50ns"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"33305a4f-d4e6-4869-9025-adbddc1664e4","type":"message","text":"same effect, but very different scaling behaviour","user":"UH24GRBLL","ts":"1612105931.400500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rqp+q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"same effect, but very different scaling behaviour"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"type":"message","text":"Here's some timings with different size of arrays","files":[{"id":"F01M5K74BKJ","created":1612105964,"timestamp":1612105964,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UAGBT2X1A","editable":false,"size":45979,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01M5K74BKJ/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01M5K74BKJ/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01M5K74BKJ-a99a27945a/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01M5K74BKJ-a99a27945a/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01M5K74BKJ-a99a27945a/image_360.png","thumb_360_w":360,"thumb_360_h":236,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01M5K74BKJ-a99a27945a/image_480.png","thumb_480_w":480,"thumb_480_h":315,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01M5K74BKJ-a99a27945a/image_160.png","original_w":707,"original_h":464,"thumb_tiny":"AwAfADDPgQSTohJAY44rSOmQj+N/zH+FULP/AI+4v94VvkCgCgNKhx9+T8xS/wBlQ/35P0q/SZ9KAKP9lQ/35P0qG60+KG3aRWckY64x1rU/Gq2on/QpB9P50AZNn/x9xf7wrfJ/ya5tGKMGU4I5Bqb7bcD/AJaH8hQBulh65+lGT6Vh/brn/nqfyFH265/56n8hQBuYJ6mq+oACxk/D+dZf265/56n8hTZLueRCjyEqeoxQB//Z","permalink":"https://julialang.slack.com/files/UAGBT2X1A/F01M5K74BKJ/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01M5K74BKJ-8cfc4fd03e","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"0qUy1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's some timings with different size of arrays"}]}]}],"user":"UAGBT2X1A","display_as_bot":false,"ts":"1612105975.400700","thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"5e3e0e27-8f7b-49b9-8f15-671abab747d4","type":"message","text":"yeah that's the +50ns I was talking about","user":"UH24GRBLL","ts":"1612105992.401100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Asm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah that's the +50ns I was talking about"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"7c7f3a90-aa8d-45a7-ab95-704ce0350546","type":"message","text":"you'll probably see some more steps if you increase the array size further because allocating the buffer takes time","user":"UH24GRBLL","ts":"1612106015.401300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sRbuA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you'll probably see some more steps if you increase the array size further because allocating the buffer takes time"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"74ae57ad-837f-45fa-9f82-fa96555908e7","type":"message","text":"May I ask, where did you get that 50 ns?","user":"UAGBT2X1A","ts":"1612106027.401500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZyKzm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"May I ask, where did you get that 50 ns?"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"aebc577e-f5ef-41f2-8c64-05c08edce2be","type":"message","text":"your 25ns vs 73ns earlier","user":"UH24GRBLL","ts":"1612106045.401700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LNKv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"your 25ns vs 73ns earlier"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"0ecc2d67-c580-444c-a944-4649f598762c","type":"message","text":"also your graph - mergesort is offset +50ns compared to the in-place algs right from the start","user":"UH24GRBLL","ts":"1612106066.402100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sJJW1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also your graph - mergesort is offset +50ns compared to the in-place algs right from the start"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"cb917ab5-4863-4ffa-bbbb-93ab5303ebce","type":"message","text":"that said, mergesort is stable, whereas quicksort is not","user":"UH24GRBLL","ts":"1612106106.402300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1L6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that said, mergesort is stable, whereas quicksort is not"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"8b8d8721-4f2a-48f2-bfb0-d2bbf5f86f65","type":"message","text":"if we'd catch the SMALL_THRESHOLD size before we allocate, you'd still have a much stronger jump at size=20, when we fall back to mergesort again","user":"UH24GRBLL","ts":"1612106167.402500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jdqH7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if we'd catch the SMALL_THRESHOLD size before we allocate, you'd still have a much stronger jump at size=20, when we fall back to mergesort again"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"fd9d628b-df91-4e6f-a1b2-8b3b74651163","type":"message","text":"That's true. Threshold value should also be bigger.","user":"UAGBT2X1A","ts":"1612106205.402900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dqK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's true. Threshold value should also be bigger."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"ee76ce2f-8242-4a88-814d-dc61e114580a","type":"message","text":"not sure about that","user":"UH24GRBLL","ts":"1612106212.403100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sih","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not sure about that"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"e91ce802-aa5d-494e-b975-d803362b8039","type":"message","text":"needs more testing","user":"UH24GRBLL","ts":"1612106220.403300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7JN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"needs more testing"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"8860c193-49af-43dd-a026-b51ce9b8f43c","type":"message","text":"it would be interesting to fall back to an in-place version of merge sort instead of the current merge sort","user":"UH24GRBLL","ts":"1612106255.404100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nMK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it would be interesting to fall back to an in-place version of merge sort instead of the current merge sort"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"1bed9b41-7e4b-4c30-82bc-48873f274888","type":"message","text":"that one won't allocate, but has O(n log² n)  instead of O(n log n)","user":"UH24GRBLL","ts":"1612106273.404800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0xrK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that one won't allocate, but has O(n log² n)  instead of O(n log n)"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"8cf53328-1cce-4b0e-b6e7-c3fcae2560cf","type":"message","text":"would need to be benchmarked though","user":"UH24GRBLL","ts":"1612106283.405100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sl5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"would need to be benchmarked though"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"63c0b029-e89f-4d8d-b8ff-83ac8fcaeff8","type":"message","text":"<https://en.wikipedia.org/wiki/Block_sort> is also interesting","user":"UH24GRBLL","ts":"1612106351.407000","team":"T68168MUP","attachments":[{"image_url":"https://upload.wikimedia.org/wikipedia/commons/9/9f/Block_sort_with_numbers_1_to_16_%28thumb%29.gif","image_width":343,"image_height":240,"image_bytes":536660,"title":"Block sort","title_link":"https://en.wikipedia.org/wiki/Block_sort","from_url":"https://en.wikipedia.org/wiki/Block_sort","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"Block sort, or block merge sort, is a sorting algorithm combining at least two merge operations with an insertion sort to arrive at O(n log n) in-place stable sorting. It gets its name from the observation that merging two sorted lists, A and B, is equivalent to breaking A into evenly sized blocks, inserting each A block into B under special rules, and merging AB pairs.\nOne practical algorithm for O(log n) in place merging was proposed by Pok-Son Kim and Arne Kutzner in 2008.","fallback":"wikipedia: Block sort","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.wikipedia.org/wiki/Block_sort"}],"blocks":[{"type":"rich_text","block_id":"5K0","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://en.wikipedia.org/wiki/Block_sort"},{"type":"text","text":" is also interesting"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"1f14271d-0ca8-41e2-95a7-c5c998fd3566","type":"message","text":"also, same complexity doesn't necessarily mean same speed - the Big O notation sadly omits large constant factors, which play a significant role at the small scale","user":"UH24GRBLL","ts":"1612106516.408500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UEcN7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, same complexity doesn't necessarily mean same speed - the Big O notation sadly omits large constant factors, which play a significant role at the small scale"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"f0fb9285-1201-4074-9234-f867144db6ca","type":"message","text":"Well.. What's in my mind is to fix this memory allocation issue at first in some simple way.","user":"UAGBT2X1A","ts":"1612106537.408700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7bZ/c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well.. What's in my mind is to fix this memory allocation issue at first in some simple way."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"36b3b3bb-927f-4094-a7de-4f3cb8ddf1d1","type":"message","text":"what's the impact of it?","user":"UH24GRBLL","ts":"1612106549.408900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"398m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what's the impact of it?"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"0f85b21c-d8df-461e-a452-f8fdd6885e3c","type":"message","text":"I don't think there's a very simple way to fix this, without refactoring how the dispatch on all of those is implemented","user":"UH24GRBLL","ts":"1612106608.409100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rWns","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think there's a very simple way to fix this, without refactoring how the dispatch on all of those is implemented"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"61905641-5777-4b64-9224-a830cbdca11c","type":"message","text":"if you just take the `t = similar..` out of the default arguments, you'll suddenly allocate _every time_  this function is called, not just at the top level","user":"UH24GRBLL","ts":"1612106660.409300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qzhq3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you just take the "},{"type":"text","text":"t = similar..","style":{"code":true}},{"type":"text","text":" out of the default arguments, you'll suddenly allocate "},{"type":"text","text":"every time","style":{"italic":true}},{"type":"text","text":"  this function is called, not just at the top level"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"79d8a4ee-67d7-45f3-9ac6-83f71c147b27","type":"message","text":"it'S definitely an edge case that it allocates and immediately goes to a different algorithm","user":"UH24GRBLL","ts":"1612106697.409500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2bu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it'S definitely an edge case that it allocates and immediately goes to a different algorithm"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"87fbf719-ac09-4d08-ba61-c070a86d8984","type":"message","text":"Yeah, that's not going to work. But could it be by default something that is not allocating?","user":"UAGBT2X1A","ts":"1612106717.409700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YFbT8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, that's not going to work. But could it be by default something that is not allocating?"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"68cd4b3a-2414-4692-963e-062f9c2db862","type":"message","text":"Without running to a type instability issue","user":"UAGBT2X1A","ts":"1612106735.409900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kU6Wt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Without running to a type instability issue"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"953c13c5-a179-4956-b553-551d6ece2f8b","type":"message","text":"only if you implement it","user":"UH24GRBLL","ts":"1612106737.410100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rzfuV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"only if you implement it"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"5286741b-e2b4-4162-81f4-06ab3e66141f","type":"message","text":"you could try to add `hi-lo &lt;= SMALL_THRESHOLD &amp;&amp; return sort!(v, lo, hi, SMALL_ALGORITHM, o)` to the definition around 687","user":"UH24GRBLL","ts":"1612106790.410300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aFPm9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could try to add "},{"type":"text","text":"hi-lo <= SMALL_THRESHOLD && return sort!(v, lo, hi, SMALL_ALGORITHM, o)","style":{"code":true}},{"type":"text","text":" to the definition around 687"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"b08b7018-b20f-433c-9e97-97192fe362ba","type":"message","text":"thereby preventing to hit the \"expensive\" mergesort in the first place","user":"UH24GRBLL","ts":"1612106806.410500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mKw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thereby preventing to hit the \"expensive\" mergesort in the first place"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"da2e99dc-7d28-4403-a962-f49edf242b35","type":"message","text":"it's lying to those that explicitly requested e.g. QuickSort, but they would fall into the `hi-lo ...` clause in the respective implementations anyway","user":"UH24GRBLL","ts":"1612106909.410700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L5Wog","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's lying to those that explicitly requested e.g. QuickSort, but they would fall into the "},{"type":"text","text":"hi-lo ...","style":{"code":true}},{"type":"text","text":" clause in the respective implementations anyway"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"type":"message","text":"How about like this.","files":[{"id":"F01LUDBHVS5","created":1612107024,"timestamp":1612107024,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UAGBT2X1A","editable":false,"size":54683,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01LUDBHVS5/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01LUDBHVS5/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01LUDBHVS5-8a37fa3935/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01LUDBHVS5-8a37fa3935/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01LUDBHVS5-8a37fa3935/image_360.png","thumb_360_w":360,"thumb_360_h":95,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01LUDBHVS5-8a37fa3935/image_480.png","thumb_480_w":480,"thumb_480_h":127,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01LUDBHVS5-8a37fa3935/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01LUDBHVS5-8a37fa3935/image_720.png","thumb_720_w":720,"thumb_720_h":191,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01LUDBHVS5-8a37fa3935/image_800.png","thumb_800_w":800,"thumb_800_h":212,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01LUDBHVS5-8a37fa3935/image_960.png","thumb_960_w":960,"thumb_960_h":255,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01LUDBHVS5-8a37fa3935/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":272,"original_w":1195,"original_h":317,"thumb_tiny":"AwAMADCl0NGaB96lIoAbRn2pcU2gBaSiigD/2Q==","permalink":"https://julialang.slack.com/files/UAGBT2X1A/F01LUDBHVS5/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01LUDBHVS5-06cc7a6bb9","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"VXF6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How about like this."}]}]}],"user":"UAGBT2X1A","display_as_bot":false,"ts":"1612107048.410900","thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"d4af7eb8-f676-4e4d-aa33-1ef8f4f233a0","type":"message","text":"you still need the `hi-lo` stuff in the second function because `sort!` recurses back there","user":"UH24GRBLL","ts":"1612107101.411300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7=/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you still need the "},{"type":"text","text":"hi-lo","style":{"code":true}},{"type":"text","text":" stuff in the second function because "},{"type":"text","text":"sort!","style":{"code":true}},{"type":"text","text":" recurses back there"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"798ee4cb-b388-4d97-8e23-b6c313c6ce3d","type":"message","text":"and it'd be clearer to just do that in 685-688 instead of adding another layer of indirection","user":"UH24GRBLL","ts":"1612107153.411500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6R2u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it'd be clearer to just do that in 685-688 instead of adding another layer of indirection"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"139a30ba-b632-47fc-871e-d9ce330c1420","type":"message","text":"Yeah, I agree.","user":"UAGBT2X1A","ts":"1612107424.411700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"chO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I agree."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"d34e6ce3-0f37-4562-a552-7827a95d151f","type":"message","text":"And it also might make more sense that \"mystical\" changes of the algorithms are done at a higher level of abstraction. If the user uses that lower-level sort function it's then definitely using an algorithm that is explicitly given.","user":"UAGBT2X1A","ts":"1612107778.411900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ObH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And it also might make more sense that \"mystical\" changes of the algorithms are done at a higher level of abstraction. If the user uses that lower-level sort function it's then definitely using an algorithm that is explicitly given."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"aeb997ea-131f-4845-b03b-d7f8d0fb4f00","type":"message","text":"```function sort!(v::AbstractVector, alg::Algorithm, order::Ordering)\n    if length(v) &lt;= SMALL_THRESHOLD\n        return sort!(v, SMALL_ALGORITHM, order)\n    end\n    inds = axes(v,1)\n    sort!(v,first(inds),last(inds),alg,order)\nend```\nCould this work? And removing those checks from other functions.","user":"UAGBT2X1A","ts":"1612107842.412100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qDRD","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function sort!(v::AbstractVector, alg::Algorithm, order::Ordering)\n    if length(v) <= SMALL_THRESHOLD\n        return sort!(v, SMALL_ALGORITHM, order)\n    end\n    inds = axes(v,1)\n    sort!(v,first(inds),last(inds),alg,order)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Could this work? And removing those checks from other functions."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"523ba804-12aa-4012-ba4b-56d3d3680b32","type":"message","text":"you can't remove the checks from the other functions","user":"UH24GRBLL","ts":"1612107865.412300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BpdC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can't remove the checks from the other functions"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"05e264e6-028a-46a9-b8c0-ba501446fff9","type":"message","text":"Actually.. Is that causing an infinite loop, hehe.","user":"UAGBT2X1A","ts":"1612107903.412500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YQew","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually.. Is that causing an infinite loop, hehe."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"0e029fea-a8b7-4c4d-8199-d80eacb9422a","type":"message","text":"you have to do `first(inds), last(inds)` there as well","user":"UH24GRBLL","ts":"1612107918.412700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qESIx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you have to do "},{"type":"text","text":"first(inds), last(inds)","style":{"code":true}},{"type":"text","text":" there as well"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"4a52f1c3-0310-465a-bd92-0982509cc748","type":"message","text":"put it after the `inds = ...`","user":"UH24GRBLL","ts":"1612107934.412900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=PN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"put it after the "},{"type":"text","text":"inds = ...","style":{"code":true}}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"60e39ca2-4c71-490f-86fb-2d2581e06c74","type":"message","text":"```function sort!(v::AbstractVector, alg::Algorithm, order::Ordering)\n    inds = axes(v,1)\n    lo, hi = first(inds), last(inds)\n    if hi-lo &lt;= SMALL_THRESHOLD\n        return sort!(v, lo, hi, SMALL_ALGORITHM, o)\n    end\n    sort!(v, lo, hi, alg, order)\nend```\nHow about now","user":"UAGBT2X1A","ts":"1612108121.413100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dxfB","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function sort!(v::AbstractVector, alg::Algorithm, order::Ordering)\n    inds = axes(v,1)\n    lo, hi = first(inds), last(inds)\n    if hi-lo <= SMALL_THRESHOLD\n        return sort!(v, lo, hi, SMALL_ALGORITHM, o)\n    end\n    sort!(v, lo, hi, alg, order)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"How about now"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"6d279cc8-6c25-461e-9caa-c09a517bab2c","type":"message","text":"What is the reason why the checks have still to be done in other functions?","user":"UAGBT2X1A","ts":"1612108285.413300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6RsRn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the reason why the checks have still to be done in other functions?"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"eefc8842-83b9-4dbe-a9e6-29801d0d143b","type":"message","text":"because they recurse to themselves","user":"UH24GRBLL","ts":"1612108841.414200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5brF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because they recurse to themselves"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"16e6da19-f478-45ac-ad02-5c135c7e31c0","type":"message","text":"Makes sense.","user":"UAGBT2X1A","ts":"1612108883.414400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Exf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Makes sense."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"d89fb8d1-bffa-48e1-b39f-db5e791f63d8","type":"message","text":"looks better - now it's time to benchmark, if your change actually improved anything!","user":"UH24GRBLL","ts":"1612108895.414600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3l9t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"looks better - now it's time to benchmark, if your change actually improved anything!"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"a08deb7f-3daa-4a65-bb79-6c1c188c75c8","type":"message","text":"and hopefully hasn't made larger arrays slower","user":"UH24GRBLL","ts":"1612108904.414800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YsFAJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and hopefully hasn't made larger arrays slower"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"8d58fa73-116b-4b45-89e2-4941cd387b3f","type":"message","text":"benchmark across a large number of sizes, not just 1-100","user":"UH24GRBLL","ts":"1612108921.415000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QmVp1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"benchmark across a large number of sizes, not just 1-100"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"198eb12f-ce16-425a-a529-593076b1bb37","type":"message","text":"If I benchmark arrays 2-50 and say 1000, 2000, 3000, ..., 10000 would that be sufficient?","user":"UAGBT2X1A","ts":"1612108994.415200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GsKk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I benchmark arrays 2-50 and say 1000, 2000, 3000, ..., 10000 would that be sufficient?"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"63c6fbbb-fc98-4a8a-9201-c18be7e013cc","type":"message","text":"go as large as your RAM permits","user":"UH24GRBLL","ts":"1612109031.415400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9OGh8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"go as large as your RAM permits"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"c7868eba-f0cc-4e86-8730-535f6e404e64","type":"message","text":"so very small (1-100) in maybe steps of ten","user":"UH24GRBLL","ts":"1612109050.415600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Lp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so very small (1-100) in maybe steps of ten"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"f42efe59-3177-4953-9ced-35995b9b73ff","type":"message","text":"100-1000 in steps of 100","user":"UH24GRBLL","ts":"1612109056.415800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z9yXx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"100-1000 in steps of 100"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"33a330fb-3fad-4781-a1ee-30baf1c2e43f","type":"message","text":"Before that I need to figure out how to build Julia, `LoadError(at \"compiler/compiler.jl\" line 3: LoadError(at \"compiler/bootstrap.jl\" line 8: UndefVarError(var=:o)))`","user":"UAGBT2X1A","ts":"1612109058.416000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BPDbZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Before that I need to figure out how to build Julia, "},{"type":"text","text":"LoadError(at \"compiler/compiler.jl\" line 3: LoadError(at \"compiler/bootstrap.jl\" line 8: UndefVarError(var=:o)))","style":{"code":true}}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"4d22acc3-d0b5-4fce-9a93-3cc46e7f3fcb","type":"message","text":"the variable is called `order` not `o`","user":"UH24GRBLL","ts":"1612109074.416200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qFL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the variable is called "},{"type":"text","text":"order","style":{"code":true}},{"type":"text","text":" not "},{"type":"text","text":"o","style":{"code":true}}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"d30904e0-c21d-46fd-ae5c-cde0723310c5","type":"message","text":"1.000 - 10.000 in steps of 1.000 and so on","user":"UH24GRBLL","ts":"1612109102.416400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y9J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1.000 - 10.000 in steps of 1.000 and so on"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"978cb334-769f-41b2-acff-72e5231d6a95","type":"message","text":"Argh.","user":"UAGBT2X1A","ts":"1612109116.416600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CawRL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Argh."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"150bf7b6-2398-417b-bd49-34562b5faad8","type":"message","text":"you can probably skip 10k-100k and immediately go to 1M-100M in 10M increments","user":"UH24GRBLL","ts":"1612109144.416800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jXrW3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can probably skip 10k-100k and immediately go to 1M-100M in 10M increments"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"aa24d9bb-f72d-48af-b744-bfd9d780fbfe","type":"message","text":"you don't have to do it, but it would definitely show how this change behaves as you scale up the size","user":"UH24GRBLL","ts":"1612109174.417000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hau","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you don't have to do it, but it would definitely show how this change behaves as you scale up the size"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"e699a908-8ba4-4e53-8e09-4f24e7bf5282","type":"message","text":"from my POV, if it removes the allocation and makes that special case faster, it'll be fine since you only added a single branch at the top level","user":"UH24GRBLL","ts":"1612109197.417200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pOD6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"from my POV, if it removes the allocation and makes that special case faster, it'll be fine since you only added a single branch at the top level"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"c66edd25-1c5a-41c2-a933-cdfd5bc36f7e","type":"message","text":"so unless people in the PR want to see more, 1-100 is probably fine","user":"UH24GRBLL","ts":"1612109226.417400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xTiM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so unless people in the PR want to see more, 1-100 is probably fine"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"69f75c00-3b07-4571-81eb-d45ec1811fd8","type":"message","text":"Hmm. This is not working for float vectors. Sorting float is ending to here <https://github.com/JuliaLang/julia/blob/master/base/sort.jl#L1201>","user":"UAGBT2X1A","ts":"1612112694.417600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EFTM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm. This is not working for float vectors. Sorting float is ending to here "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/master/base/sort.jl#L1201"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"1d3a4a2e-0d5d-4b63-b6c8-bb1d577da116","type":"message","text":"that one also never hits mergesort","user":"UH24GRBLL","ts":"1612112931.417800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+0y5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that one also never hits mergesort"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"162cdfcd-ecd6-4350-a836-2f2a60f4fe76","type":"message","text":"floating point sorting is tricky because of NaN","user":"UH24GRBLL","ts":"1612113003.418000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LHVe7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"floating point sorting is tricky because of NaN"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"c9b3d1c9-b33d-47e4-8291-642a7cde6a81","type":"message","text":"```julia&gt; @which sort!([1.0, 2.0, 3.0], alg=MergeSort)\n(::Base.var\"#sort!##kw\")(::Any, ::typeof(sort!), v::AbstractVector{T} where T) in Base.Sort at sort.jl:733```\nFirst it goes to line 733 ... From there if calls `sort!(v, alg, ordr)`","user":"UAGBT2X1A","ts":"1612113029.418200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nkE","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @which sort!([1.0, 2.0, 3.0], alg=MergeSort)\n(::Base.var\"#sort!##kw\")(::Any, ::typeof(sort!), v::AbstractVector{T} where T) in Base.Sort at sort.jl:733"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"First it goes to line 733 ... From there if calls "},{"type":"text","text":"sort!(v, alg, ordr)","style":{"code":true}}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"e0978433-3a38-4eda-bb40-8a6791738515","type":"message","text":"```julia&gt; @which sort!([1.0, 2.0, 3.0], MergeSort, Forward)\nsort!(v::AbstractVector{var\"#s831\"} where var\"#s831\"&lt;:Union{Float32, Float64}, a::Algorithm, o::DirectOrdering) in Base.Sort.Float at sort.jl:1223```","user":"UAGBT2X1A","ts":"1612113053.418400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QK5R/","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @which sort!([1.0, 2.0, 3.0], MergeSort, Forward)\nsort!(v::AbstractVector{var\"#s831\"} where var\"#s831\"<:Union{Float32, Float64}, a::Algorithm, o::DirectOrdering) in Base.Sort.Float at sort.jl:1223"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"a4c445ec-11d3-402e-9a62-53dd76a11d1c","type":"message","text":"I end up to that sort! function what I modified only by integers:\n\n```julia&gt; @which sort!([1, 2, 3], MergeSort, Forward)\nsort!(v::AbstractVector{T} where T, alg::Algorithm, order::Ordering) in Base.Sort at sort.jl:685```\n","user":"UAGBT2X1A","ts":"1612113266.418600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D+pOd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I end up to that sort! function what I modified only by integers:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @which sort!([1, 2, 3], MergeSort, Forward)\nsort!(v::AbstractVector{T} where T, alg::Algorithm, order::Ordering) in Base.Sort at sort.jl:685"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"69fa2f4a-73b8-468e-9aab-476559b26895","type":"message","text":"it'll be used for any `&lt;: AbstractVector` that's not made up of Floats","user":"UH24GRBLL","ts":"1612113967.419200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KaJc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it'll be used for any "},{"type":"text","text":"<: AbstractVector","style":{"code":true}},{"type":"text","text":" that's not made up of Floats"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"59e16697-d188-40f4-8bff-578459b577d4","type":"message","text":"Floats are special cased because addition and comparison on them is iffy","user":"UH24GRBLL","ts":"1612113986.419400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xcz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Floats are special cased because addition and comparison on them is iffy"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"dac5e28a-b2fd-44be-bc48-63c773f48110","type":"message","text":"Well.. At least when sorting integers, it seems to be working. Now merge sort is equally fast with others.","user":"UAGBT2X1A","ts":"1612114299.419700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DXTmP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well.. At least when sorting integers, it seems to be working. Now merge sort is equally fast with others."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"1744f68d-2c40-4425-b38f-1e50f56660c8","type":"message","text":"Maybe I make a pull request with this and consider floats later on?","user":"UAGBT2X1A","ts":"1612114332.419900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aqO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe I make a pull request with this and consider floats later on?"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"cac744d4-26d4-4175-b41e-bbc13895da9c","type":"message","text":"do floats still have the overhead?","user":"UH24GRBLL","ts":"1612114564.420200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=uvt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do floats still have the overhead?"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"475e3e68-a490-4597-92d5-6941a7583b37","type":"message","text":"sure","user":"UH24GRBLL","ts":"1612114568.420400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612114569.000000"},"blocks":[{"type":"rich_text","block_id":"c5oc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sure"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"bcb9aca4-604f-4a81-8254-650ff6eddd6b","type":"message","text":"you can mention that you haven't done it for floats because they seem to be handled specially","user":"UH24GRBLL","ts":"1612114586.420700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LO1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can mention that you haven't done it for floats because they seem to be handled specially"}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"f7e194da-9199-4ec0-9b1e-6f950984e209","type":"message","text":"Yes. Float handling might be added to a pull request in a separate commit later on before merging, but for now, this seems to be a good commit. For some reason, also sorting a constant array is slower with merge sort for some reason. Interesting...","user":"UAGBT2X1A","ts":"1612114761.420900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xeRbE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes. Float handling might be added to a pull request in a separate commit later on before merging, but for now, this seems to be a good commit. For some reason, also sorting a constant array is slower with merge sort for some reason. Interesting..."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"},{"client_msg_id":"9710a431-7535-46f1-8b62-6d13057ef64c","type":"message","text":"But I mention these things in a PR and hopefully, we can find good solutions for these problems also.","user":"UAGBT2X1A","ts":"1612114812.421100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WC/e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I mention these things in a PR and hopefully, we can find good solutions for these problems also."}]}]}],"thread_ts":"1612100779.389000","parent_user_id":"UAGBT2X1A"}]