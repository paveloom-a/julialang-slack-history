[{"client_msg_id":"3d4a7fbe-57a4-4908-96b4-dff240f47590","type":"message","text":"Yesterday I gave an internal talk inside my company about Julia. The talked was aimed at C++, MATLAB and python developers and one of the questions was: \"What is the added advantage compared to python? As python can also do exactly similar things?\". I answer to the best of my ability, but now I wonder what people responses would be.\nNote: My answer emphasized that python cannot do the same as Julia","user":"U013V2CFZAN","ts":"1612528096.162500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YQgnT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yesterday I gave an internal talk inside my company about Julia. The talked was aimed at C++, MATLAB and python developers and one of the questions was: \"What is the added advantage compared to python? As python can also do exactly similar things?\". I answer to the best of my ability, but now I wonder what people responses would be.\nNote: My answer emphasized that python cannot do the same as Julia"}]}]}],"thread_ts":"1612528096.162500","reply_count":21,"reply_users_count":10,"latest_reply":"1612562895.188200","reply_users":["UCCUV9K0S","UH24GRBLL","U6A936746","U013V2CFZAN","U010LT79LKX","U01CQTKB86N","U7HAYKY9X","UPQP0RWTH","USU9FRPEU","U01FKQQ7J0J"],"subscribed":false,"reactions":[{"name":"+1","users":["U01CQTKB86N","U01L934LHDH"],"count":2}]},{"client_msg_id":"53b49d1c-4e56-498f-9294-ca40d9061515","type":"message","text":"Julia is a typed language and thus actually usable. Python is not, and you will not see the type errors until a few months after deploying your program :slightly_smiling_face:","user":"UCCUV9K0S","ts":"1612528206.162600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KGMa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia is a typed language and thus actually usable. Python is not, and you will not see the type errors until a few months after deploying your program "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN","reactions":[{"name":"100","users":["U013V2CFZAN"],"count":1}]},{"client_msg_id":"9896d27a-605d-4eb8-884e-9403f107e259","type":"message","text":"python also has types and just like julia, it's dynamically typed, so that's not a good argument","user":"UH24GRBLL","ts":"1612528673.162800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i/E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"python also has types and just like julia, it's dynamically typed, so that's not a good argument"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN","reactions":[{"name":"point_up","users":["U6A936746","U9AHT3YM7","U7HAYKY9X","UH8A351DJ","ULG5V164A"],"count":5}]},{"client_msg_id":"1b2ac9d9-9e8a-48cd-a1b4-8cd417392d0b","type":"message","text":"My answer would be that you're bound to the speed of the language - if you want non-standard things you have to fiddle with C++ anyway, so not having to rewrite prototyping code is a big advantage","user":"UH24GRBLL","ts":"1612528730.163000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tgzw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My answer would be that you're bound to the speed of the language - if you want non-standard things you have to fiddle with C++ anyway, so not having to rewrite prototyping code is a big advantage"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN","reactions":[{"name":"+1","users":["U013V2CFZAN","U0179G7FG4F"],"count":2}]},{"client_msg_id":"adf61ab8-4aa2-4910-8a92-260159f728cb","type":"message","text":"Some problems can only be elegantly solve by multiple dispatch.\nAnything else is a subpar imitation (emmulation) of multiple dispatch.\n(or an isomorphic feature, like multi-parameter type-classes)\n\nFor example\n<https://discourse.julialang.org/t/is-julias-way-of-oop-superior-to-c-python-why-julia-doesnt-use-class-based-oop/52058/84>","user":"U6A936746","ts":"1612529285.163300","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1612529481.000000"},"blocks":[{"type":"rich_text","block_id":"+=T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some problems can only be elegantly solve by multiple dispatch.\nAnything else is a subpar imitation (emmulation) of multiple dispatch.\n(or an isomorphic feature, like multi-parameter type-classes)\n\nFor example\n"},{"type":"link","url":"https://discourse.julialang.org/t/is-julias-way-of-oop-superior-to-c-python-why-julia-doesnt-use-class-based-oop/52058/84"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN","reactions":[{"name":"heart","users":["U013V2CFZAN","U6795JH6H","U6740K1SP","U010LT79LKX","U01C15GH58B","U680THK2S","U01L934LHDH"],"count":7}]},{"client_msg_id":"b7192de3-a543-4f91-a047-48c96d79c574","type":"message","text":"<@U6A936746> Great! thanks!","user":"U013V2CFZAN","ts":"1612531506.164100","team":"T68168MUP","edited":{"user":"U013V2CFZAN","ts":"1612531581.000000"},"blocks":[{"type":"rich_text","block_id":"E1uB","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6A936746"},{"type":"text","text":" Great! thanks!"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"7c39fd24-cd24-4442-b83a-61c585cb727e","type":"message","text":"People who talk like this never had to deliver their MATLAB algorithms to be translated into JAVA or compiled matlab binaries. These are the two cases where I have always thought Julia would be helpful. Its always attractive to go the first route because its faster in execution, but its double the work. The second method just runs up against MATLAB's own limitation.","user":"U010LT79LKX","ts":"1612532276.164600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TzML","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"People who talk like this never had to deliver their MATLAB algorithms to be translated into JAVA or compiled matlab binaries. These are the two cases where I have always thought Julia would be helpful. Its always attractive to go the first route because its faster in execution, but its double the work. The second method just runs up against MATLAB's own limitation."}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"e4e487c9-3e7b-461d-a68a-07c1a758068c","type":"message","text":"I don't think you can even deliver python backends","user":"U010LT79LKX","ts":"1612532294.164800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JJP2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think you can even deliver python backends"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"D499BDF3-775A-42C7-910A-8D6F2EB49568","type":"message","text":"I’m sure there are python web servers. How well they scale I know not.","user":"U01CQTKB86N","ts":"1612536717.167000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rSj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m sure there are python web servers. How well they scale I know not."}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"0592FF51-8F15-47E9-A1A6-7E686DCD7250","type":"message","text":"About type errors in prod, does Julia actually prevent them? I though it doesn’t, not sure.","user":"U01CQTKB86N","ts":"1612536928.169300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aSz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"About type errors in prod, does Julia actually prevent them? I though it doesn’t, not sure."}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"59cc0152-221c-4790-8aea-d60e7e507a75","type":"message","text":"it doesn't, but if you're taking care to write type stable code during development, I doubt you'll ever encounter any","user":"UH24GRBLL","ts":"1612537005.169600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nXH0g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it doesn't, but if you're taking care to write type stable code during development, I doubt you'll ever encounter any"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"cd80a7cd-9a71-41d6-9947-225789ed9ff3","type":"message","text":"yeah but then Julia shouldn't get the point. You can write type safe code in Python3 now, with type annotations. Right?","user":"U010LT79LKX","ts":"1612537068.169800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uiYjd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah but then Julia shouldn't get the point. You can write type safe code in Python3 now, with type annotations. Right?"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"ca404013-267d-4dc9-8144-10bbe34a2477","type":"message","text":"Julia is just as dynamic as python.\n*and* has worse static analysis tools for error checking\nTypes in a dynamic language are not used for preventing type errors in general.\nBecause there is no type-checking step in the compiler.\nStatic analysis tools in julia exist, but vs python they are no where near as mature.\n\nThis is not a good argument to take","user":"U6A936746","ts":"1612537173.170100","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1612537187.000000"},"blocks":[{"type":"rich_text","block_id":"+zlM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia is just as dynamic as python.\n"},{"type":"text","text":"and","style":{"bold":true}},{"type":"text","text":" has worse static analysis tools for error checking\nTypes in a dynamic language are not used for preventing type errors in general.\nBecause there is no type-checking step in the compiler.\nStatic analysis tools in julia exist, but vs python they are no where near as mature.\n\nThis is not a good argument to take"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN","reactions":[{"name":"point_up","users":["U011V2YN59N","U01M24BJPTP"],"count":2}]},{"client_msg_id":"14e2fc61-df0d-4963-a309-c5f58724208e","type":"message","text":"That's what I'm saying, yes","user":"UH24GRBLL","ts":"1612537186.170400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+tF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's what I'm saying, yes"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"12e12b74-d9a1-4337-9e03-472780287c68","type":"message","text":"so you agree both python and Julia can do this. The only score is against MATLAB, but even they have their argument block now. (If you really want to puke look up that syntax on mathworks site)","user":"U010LT79LKX","ts":"1612537643.171000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lskv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you agree both python and Julia can do this. The only score is against MATLAB, but even they have their argument block now. (If you really want to puke look up that syntax on mathworks site)"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"686e0d38-7ac9-4b6a-81ca-610d624f90d2","type":"message","text":"No, I'm saying neither language can entirely prevent type errors at runtime - which is what's a defining feature of dynamic languages.","user":"UH24GRBLL","ts":"1612537774.171200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7tn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, I'm saying neither language can entirely prevent type errors at runtime - which is what's a defining feature of dynamic languages."}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN","reactions":[{"name":"+1::skin-tone-4","users":["U010LT79LKX"],"count":1},{"name":"point_up","users":["U6A936746"],"count":1}]},{"client_msg_id":"8e128ace-b628-431c-9664-a7f82afa1f1c","type":"message","text":"I'd say speed is the number one advantage. After that, there are a LOT of small advantages which individually are not worth much. For example, no sane person would switch language just because it has a better REPL. And MOST of the time, it would not be a good idea to switch language just because it has a better package manager, or better metaprogramming capabilities, or better support for functional programming, or limited type-safety, or (etc. etc). But boy, I really do like all of those things. Its just, I'm pretty sure if someone tried to sell Julia to me by talking about these smaller things, I'd think \"Eh, Python's pretty good, I'll just stick to that\".","user":"U7HAYKY9X","ts":"1612539718.171800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YUy=G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd say speed is the number one advantage. After that, there are a LOT of small advantages which individually are not worth much. For example, no sane person would switch language just because it has a better REPL. And MOST of the time, it would not be a good idea to switch language just because it has a better package manager, or better metaprogramming capabilities, or better support for functional programming, or limited type-safety, or (etc. etc). But boy, I really do like all of those things. Its just, I'm pretty sure if someone tried to sell Julia to me by talking about these smaller things, I'd think \"Eh, Python's pretty good, I'll just stick to that\"."}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"9545570d-7f55-431f-b792-c246fbba2d3f","type":"message","text":"I would say that a programming language is like a material. One can build ships from wood or from steel the outcome would not matter. However, an effort to put a heavy steel engine into a a wood ship would take a significantly more engineering.","user":"UPQP0RWTH","ts":"1612539966.172000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UIm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would say that a programming language is like a material. One can build ships from wood or from steel the outcome would not matter. However, an effort to put a heavy steel engine into a a wood ship would take a significantly more engineering."}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"7cc94477-4f46-446c-8f9f-8125534f49d1","type":"message","text":"Maybe we should put together some sort of collected page targeting each language. Julia for Python developers, Julia for MATLAB developers, etc.","user":"USU9FRPEU","ts":"1612546026.173500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QUf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe we should put together some sort of collected page targeting each language. Julia for Python developers, Julia for MATLAB developers, etc."}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"27bec3f9-d82a-4fa7-90c6-cc5bc16ba4a6","type":"message","text":"I work in research group in a field that where the software environment is heavily dominated these days by Python code and Python coders (or at least scientists who can write Python scripts).  I think Julia has substantive advantages over Python for scientific computing on the technical front, but overcoming the established entrenchment of Python is a daunting challenge.  If anybody has thoughts on how to crack that nut I'd love to hear them.","user":"U01FKQQ7J0J","ts":"1612548839.179200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jueV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I work in research group in a field that where the software environment is heavily dominated these days by Python code and Python coders (or at least scientists who can write Python scripts).  I think Julia has substantive advantages over Python for scientific computing on the technical front, but overcoming the established entrenchment of Python is a daunting challenge.  If anybody has thoughts on how to crack that nut I'd love to hear them."}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"AC9DCFB3-B8B6-4E68-B94B-B1A9C2BB280F","type":"message","text":"Success stories about something people really care about maybe? Maybe it’s something non-technical?","user":"U01CQTKB86N","ts":"1612560164.187600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aWBz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Success stories about something people really care about maybe? Maybe it’s something non-technical?"}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"4b94a123-b4b1-4432-a4c6-ed8c18beae2d","type":"message","text":"In such an environment, I think it helps to show interoperability so that one can still can take advantage of legacy Python code while also beginning to use to Julia in some cases.","user":"USU9FRPEU","ts":"1612562895.188200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L4uhH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In such an environment, I think it helps to show interoperability so that one can still can take advantage of legacy Python code while also beginning to use to Julia in some cases."}]}]}],"thread_ts":"1612528096.162500","parent_user_id":"U013V2CFZAN"}]