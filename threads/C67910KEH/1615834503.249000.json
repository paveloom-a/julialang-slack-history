[{"client_msg_id":"9124d27a-1307-4cab-aa8f-3eb16a97e059","type":"message","text":"I recall someone (<@U67BXBF99>?) saying during triage that the thing where people say they \"just\" want this object to act like it is one of it's fields but then when you get into defining what \"just acting like\" means it is one of a dozen different scenarios (e.g. result of operation should/should not be rewrapped) was related to the Fragile Base Class problem.\nReading the Wikipedia page (<https://en.m.wikipedia.org/wiki/Fragile_base_class|https://en.m.wikipedia.org/wiki/Fragile_base_class>) I am not seeing it.\nBut maybe that's me not seeing how to see the common higher level between delegation and inheritance.","user":"U6A936746","ts":"1615834503.249000","team":"T68168MUP","attachments":[{"title":"Fragile base class","title_link":"https://en.m.wikipedia.org/wiki/Fragile_base_class","from_url":"https://en.m.wikipedia.org/wiki/Fragile_base_class","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"The fragile base class problem is a fundamental architectural problem of object-oriented programming systems where base classes (superclasses) are considered \"fragile\" because seemingly safe modifications to a base class, when inherited by the derived classes, may cause the derived classes to malfunction. The programmer cannot determine whether a base class change is safe simply by examining in isolation the methods of the base class.\nOne possible solution is to make instance variables private to their defining class and force subclasses to use accessors to modify superclass states. A language could also make it so that subclasses can control which inherited methods are exposed publicly. These changes prevent subclasses from relying on implementation details of superclasses and allow subclasses to expose only those superclass methods that are applicable to themselves.\nAnother alternative solution could be to have an interface instead of superclass.\nThe fragile base class problem has been blamed on open recursion (dynamic dispatch of methods on this), with the suggestion that invoking methods on this default to closed recursion (static dispatch, early binding) rather than open recursion (dynamic dispatch, late binding), only using open recursion when it is specifically requested; external calls (not using this) would be dynamically dispatched as usual.","fallback":"wikipedia: Fragile base class","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.m.wikipedia.org/wiki/Fragile_base_class"}],"blocks":[{"type":"rich_text","block_id":"7y/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I recall someone ("},{"type":"user","user_id":"U67BXBF99"},{"type":"text","text":"?) saying during triage that the thing where people say they \"just\" want this object to act like it is one of it's fields but then when you get into defining what \"just acting like\" means it is one of a dozen different scenarios (e.g. result of operation should/should not be rewrapped) was related to the Fragile Base Class problem.\nReading the Wikipedia page ("},{"type":"link","url":"https://en.m.wikipedia.org/wiki/Fragile_base_class","text":"https://en.m.wikipedia.org/wiki/Fragile_base_class"},{"type":"text","text":") I am not seeing it.\nBut maybe that's me not seeing how to see the common higher level between delegation and inheritance."}]}]}],"thread_ts":"1615834503.249000","reply_count":7,"reply_users_count":2,"latest_reply":"1616009180.031100","reply_users":["U67BXBF99","U6A936746"],"subscribed":false},{"client_msg_id":"D663066E-D7D9-44D1-B4EF-13715D6E1A3C","type":"message","text":"I did mention that, yes. I didn’t realize this aspect of Julia is also specifically one of the 6 examples of the principle in usage on that page","user":"U67BXBF99","ts":"1615946080.002200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wDLCd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I did mention that, yes. I didn’t realize this aspect of Julia is also specifically one of the 6 examples of the principle in usage on that page"}]}]}],"thread_ts":"1615834503.249000","parent_user_id":"U6A936746"},{"client_msg_id":"DFF74250-AA77-4E18-89B5-89528F8130F8","type":"message","text":"I wonder who added that","user":"U67BXBF99","ts":"1615946091.002600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vr3d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder who added that"}]}]}],"thread_ts":"1615834503.249000","parent_user_id":"U6A936746"},{"client_msg_id":"693578B3-DA92-422B-AD7D-228D784B3FC3","type":"message","text":"<https://en.m.wikipedia.org/wiki/Special:MobileDiff/646486426|https://en.m.wikipedia.org/wiki/Special:MobileDiff/646486426>","user":"U67BXBF99","ts":"1615946251.002900","team":"T68168MUP","attachments":[{"title":"Special:MobileDiff/646486426","title_link":"https://en.m.wikipedia.org/wiki/Special:MobileDiff/646486426","from_url":"https://en.m.wikipedia.org/wiki/Special:MobileDiff/646486426","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","fallback":"wikipedia: Special:MobileDiff/646486426","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.m.wikipedia.org/wiki/Special:MobileDiff/646486426"}],"blocks":[{"type":"rich_text","block_id":"Ovbz","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://en.m.wikipedia.org/wiki/Special:MobileDiff/646486426","text":"https://en.m.wikipedia.org/wiki/Special:MobileDiff/646486426"}]}]}],"thread_ts":"1615834503.249000","parent_user_id":"U6A936746"},{"client_msg_id":"29964c78-dbce-4bdf-8562-a77ea72066cb","type":"message","text":"right, so how does the dozen different things people mean by “just delegate as if it is the field” relate to Fragile Base Class?\n\nAlsio was there a book or paper you mentioned?","user":"U6A936746","ts":"1616006660.030200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"38Hdr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, so how does the dozen different things people mean by “just delegate as if it is the field” relate to Fragile Base Class?\n\nAlsio was there a book or paper you mentioned?"}]}]}],"thread_ts":"1615834503.249000","parent_user_id":"U6A936746"},{"client_msg_id":"f3e42a5b-5084-498b-9b1a-ca16c6d1caa8","type":"message","text":"That is a functional description of the effect of concrete inheritance (of is-a instead of has-a). I say functional, since there isn’t necessarily also concrete subtyping, but Julia behaviors are typically derived from function rather than types (“quacks like a duck”).","user":"U67BXBF99","ts":"1616009084.030700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sb4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is a functional description of the effect of concrete inheritance (of is-a instead of has-a). I say functional, since there isn’t necessarily also concrete subtyping, but Julia behaviors are typically derived from function rather than types (“quacks like a duck”)."}]}]}],"thread_ts":"1615834503.249000","parent_user_id":"U6A936746"},{"client_msg_id":"161c5e38-d596-4ac9-b4a2-01ea4e9901a9","type":"message","text":"I don’t know of any books or papers on this. I think I said I’ve posted about it before?","user":"U67BXBF99","ts":"1616009114.030900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"50kWU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t know of any books or papers on this. I think I said I’ve posted about it before?"}]}]}],"thread_ts":"1615834503.249000","parent_user_id":"U6A936746","reactions":[{"name":"+1","users":["U6A936746"],"count":1}]},{"client_msg_id":"2191f465-3935-4887-aa68-67e91582d6df","type":"message","text":"It isn’t necessarily a precise match for semantics, but who knows what “object-oriented” or “fundamental architectural problem” really means anyways","user":"U67BXBF99","ts":"1616009180.031100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R2CAq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It isn’t necessarily a precise match for semantics, but who knows what “object-oriented” or “fundamental architectural problem” really means anyways"}]}]}],"thread_ts":"1615834503.249000","parent_user_id":"U6A936746"}]