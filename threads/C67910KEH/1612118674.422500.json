[{"client_msg_id":"251b6f38-ae75-4c49-bde3-0b540eb8802e","type":"message","text":"uh.... what's going on with `build.jl` on 1.6?  I get `ERROR: LoadError: ArgumentError: Package Pkg not found in current path`","user":"U9VG1AYSG","ts":"1612118674.422500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Apq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uh.... what's going on with "},{"type":"text","text":"build.jl","style":{"code":true}},{"type":"text","text":" on 1.6?  I get "},{"type":"text","text":"ERROR: LoadError: ArgumentError: Package Pkg not found in current path","style":{"code":true}}]}]}],"thread_ts":"1612118674.422500","reply_count":42,"reply_users_count":5,"latest_reply":"1612414342.123500","reply_users":["UDB26738Q","U9VG1AYSG","U67D54KS8","U01CQTKB86N","U66QZ3QF3"],"subscribed":false},{"client_msg_id":"1c64d74c-fab1-495d-8752-0d90f86c1657","type":"message","text":"does that `build.jl` load `Pkg`?","user":"UDB26738Q","ts":"1612118722.422600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X4Him","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does that "},{"type":"text","text":"build.jl","style":{"code":true}},{"type":"text","text":" load "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"f3eec8fa-5c64-447f-8ccc-4179b2d0e916","type":"message","text":"yeah... but can't I do that? I could have *sworn* I've done this before.  How do I use Pkg?","user":"U9VG1AYSG","ts":"1612118744.422800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"euE1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah... but can't I do that? I could have "},{"type":"text","text":"sworn","style":{"bold":true}},{"type":"text","text":" I've done this before.  How do I use Pkg?"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"ea1dc0d5-9e3b-4f83-8d5c-cdbce2fb15c3","type":"message","text":"add it to `Project.toml` I guess","user":"UDB26738Q","ts":"1612118765.423000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t6O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"add it to "},{"type":"text","text":"Project.toml","style":{"code":true}},{"type":"text","text":" I guess"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"72c29bbc-cc01-4b13-94f0-4f68ee475295","type":"message","text":"Yeah, I just tried that, it works... I'm a little confused though, I could have sworn it used to work without `Pkg` as a dependency.  If that's true, this will be very breaking","user":"U9VG1AYSG","ts":"1612118826.423200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Be6u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I just tried that, it works... I'm a little confused though, I could have sworn it used to work without "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" as a dependency.  If that's true, this will be very breaking"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"d099e0b2-ad0d-44bf-aca6-5558bb5e4b29","type":"message","text":"breaking?  I'd call that a bug fix","user":"UDB26738Q","ts":"1612118839.423400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jGKR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"breaking?  I'd call that a bug fix"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"c7b583a6-d85f-4929-904c-f0e56cb867c9","type":"message","text":"well it would be breaking if previously packages had used `Pkg` in their `build.jl` without having the package added","user":"U9VG1AYSG","ts":"1612118885.423600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nc4M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well it would be breaking if previously packages had used "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" in their "},{"type":"text","text":"build.jl","style":{"code":true}},{"type":"text","text":" without having the package added"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"f67f416c-31c2-4115-83f4-7b6db8d4d46d","type":"message","text":"I mean, I guess I'm probably just wrong here and we always had to do this, because I don't think they would have changed it so carelessly","user":"U9VG1AYSG","ts":"1612118926.423800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6X3F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, I guess I'm probably just wrong here and we always had to do this, because I don't think they would have changed it so carelessly"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"d32f64e5-54f4-4017-b5b1-9866db577e4f","type":"message","text":"the fact that it wasn't necessary to explicitly require `Pkg` was a bug, IMO (and I guess that's the reason why this was changed)","user":"UDB26738Q","ts":"1612118950.424000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"idYJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the fact that it wasn't necessary to explicitly require "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" was a bug, IMO (and I guess that's the reason why this was changed)"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"99a47480-d04a-4745-b1ac-45c4c1465b6b","type":"message","text":"I guess so, but on the other hand it would be pretty weird to try to use the build system without the stdlib","user":"U9VG1AYSG","ts":"1612118997.424200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f+LI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess so, but on the other hand it would be pretty weird to try to use the build system without the stdlib"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"a8374c51-fa87-48f5-a30e-f46418f09507","type":"message","text":"and `Pkg` in particular","user":"U9VG1AYSG","ts":"1612119005.424400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gwzd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" in particular"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"3bbf0210-4541-441f-bc51-7bc71376e5cf","type":"message","text":"why?  it isn't necessary","user":"UDB26738Q","ts":"1612119014.424600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5hY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why?  it isn't necessary"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"c50457fe-5b7b-4f0d-ad55-8b5817289c49","type":"message","text":"technically right, it's not, and fair enough I guess, but it's a little weird to go around building packages without `Pkg`.  I guess it helps allow for the possibility of using and alternative package manager, so that's nice","user":"U9VG1AYSG","ts":"1612119290.424800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J=o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"technically right, it's not, and fair enough I guess, but it's a little weird to go around building packages without "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":".  I guess it helps allow for the possibility of using and alternative package manager, so that's nice"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"c24d5e19-4f94-4855-b669-fd9ced9e65c3","type":"message","text":"I think I'm lost.  what do you mean by\n\n&gt; it's a little weird to go around building packages without `Pkg`\n?  just an example: <https://github.com/JuliaMath/FFTW.jl/blob/a9e778e0414c45ba71eec69d618e1c273be62864/deps/build.jl> doesn't load `Pkg`, so what's the problem?","user":"UDB26738Q","ts":"1612119428.425000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2Js","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I'm lost.  what do you mean by\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"it's a little weird to go around building packages without "},{"type":"text","text":"Pkg","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n?  just an example: "},{"type":"link","url":"https://github.com/JuliaMath/FFTW.jl/blob/a9e778e0414c45ba71eec69d618e1c273be62864/deps/build.jl"},{"type":"text","text":" doesn't load "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":", so what's the problem?"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"93068b65-e2cb-497c-9068-043839c77337","type":"message","text":"right, but that's not what I mean.  I mean you are probably *calling* the `build.jl` from `Pkg` in the first place, even if you are not using it in the build.jl itself","user":"U9VG1AYSG","ts":"1612119540.425200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tk9M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, but that's not what I mean.  I mean you are probably "},{"type":"text","text":"calling","style":{"bold":true}},{"type":"text","text":" the "},{"type":"text","text":"build.jl","style":{"code":true}},{"type":"text","text":" from "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" in the first place, even if you are not using it in the build.jl itself"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"4f6442cb-6627-4fba-933d-ab06191700bf","type":"message","text":"I think the script is executed in a separate process (just like precompilation)","user":"UDB26738Q","ts":"1612119581.425400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O7b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the script is executed in a separate process (just like precompilation)"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"8ce905d8-26b2-41ec-b06b-a75fcf070f0c","type":"message","text":"I'm not arguing that it shouldn't have to be included, just explaining why I was surprised, especially because 20 minutes ago I was so sure I had used it in a `build.jl` before without adding it to the project","user":"U9VG1AYSG","ts":"1612119616.425600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FmIr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not arguing that it shouldn't have to be included, just explaining why I was surprised, especially because 20 minutes ago I was so sure I had used it in a "},{"type":"text","text":"build.jl","style":{"code":true}},{"type":"text","text":" before without adding it to the project"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"df830468-9ffe-4311-b058-adc0aaa7d43b","type":"message","text":"honestly, I don't know what you're talking about :grimacing:  I've never seen your issue and you didn't provide a way to reproduce it.  you're saying that to automatically run the script one uses `Pkg.build(...)` (or `]build ...`), but the fact that `Pkg` can be used to invoke the script automatically is independent of the fact that `Pkg` may or may be not used inside that script","user":"UDB26738Q","ts":"1612121107.425900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mm9om","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"honestly, I don't know what you're talking about "},{"type":"emoji","name":"grimacing"},{"type":"text","text":"  I've never seen your issue and you didn't provide a way to reproduce it.  you're saying that to automatically run the script one uses "},{"type":"text","text":"Pkg.build(...)","style":{"code":true}},{"type":"text","text":" (or "},{"type":"text","text":"]build ...","style":{"code":true}},{"type":"text","text":"), but the fact that "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" can be used to invoke the script automatically is independent of the fact that "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" may or may be not used inside that script"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"e369ca1e-34cf-4da4-830a-50c8d5c3d104","type":"message","text":"I'm just guessing, based on what you're telling, that before `Pkg` was automatically included in the environment used to run `deps/build.jl`, but _if_ true that looked like an error, and any package relying on it was relying on a bugged behaviour","user":"UDB26738Q","ts":"1612121222.426100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4bD/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm just guessing, based on what you're telling, that before "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" was automatically included in the environment used to run "},{"type":"text","text":"deps/build.jl","style":{"code":true}},{"type":"text","text":", but "},{"type":"text","text":"if","style":{"italic":true}},{"type":"text","text":" true that looked like an error, and any package relying on it was relying on a bugged behaviour"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"5f011857-4c57-48eb-af47-37dad6c7e109","type":"message","text":"yes, I understand all that, but what I think you are missing is that, under normal circumstances, you can just do `using` for an stdlib in the REPL or in a script and it \"just works\" (*even if you have not explicitly added them to the environment*), but now (or maybe it was always I'm not sure) we are saying that this is not the case for build scripts, and it must be installed in the package environment.  I'm not arguing that I think this is wrong: after all, if you use an stdlib in the package itself you will get a warning, but I also don't think it's not completely crazy to express some surprise that `using Pkg` is causing failures in the build script","user":"U9VG1AYSG","ts":"1612121630.426300","team":"T68168MUP","edited":{"user":"U9VG1AYSG","ts":"1612121709.000000"},"blocks":[{"type":"rich_text","block_id":"6J5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, I understand all that, but what I think you are missing is that, under normal circumstances, you can just do "},{"type":"text","text":"using","style":{"code":true}},{"type":"text","text":" for an stdlib in the REPL or in a script and it \"just works\" ("},{"type":"text","text":"even if you have not explicitly added them to the environment","style":{"bold":true}},{"type":"text","text":"), but now (or maybe it was always I'm not sure) we are saying that this is not the case for build scripts, and it must be installed in the package environment.  I'm not arguing that I think this is wrong: after all, if you use an stdlib in the package itself you will get a warning, but I also don't think it's not completely crazy to express some surprise that "},{"type":"text","text":"using Pkg","style":{"code":true}},{"type":"text","text":" is causing failures in the build script"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"6822fa25-64a0-4357-ae62-a002686141b7","type":"message","text":"furthermore, considering that the stdlib is normally usable ins scripts without explicitly adding them, it's not so clear that them being allowed in build scripts would be a \"bug\"","user":"U9VG1AYSG","ts":"1612121783.426700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wS7W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"furthermore, considering that the stdlib is normally usable ins scripts without explicitly adding them, it's not so clear that them being allowed in build scripts would be a \"bug\""}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"dc155876-a3f3-44e3-a309-8d6410d472bf","type":"message","text":"actually, it's even a bit weirder than all that, because if you do `julia build.jl` and that script has a `using Pkg`, it'll work just fine.  but, if you call it from `Pkg` it doesn't, which is kind of weird.  Though, I suppose the best solution to this is to always require the stdlibs to be added to the current environment to use them, but have the default project environment include them.  Then it would all be consistent","user":"U9VG1AYSG","ts":"1612122119.426900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bK0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"actually, it's even a bit weirder than all that, because if you do "},{"type":"text","text":"julia build.jl","style":{"code":true}},{"type":"text","text":" and that script has a "},{"type":"text","text":"using Pkg","style":{"code":true}},{"type":"text","text":", it'll work just fine.  but, if you call it from "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" it doesn't, which is kind of weird.  Though, I suppose the best solution to this is to always require the stdlibs to be added to the current environment to use them, but have the default project environment include them.  Then it would all be consistent"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"ad1a9a5b-97d9-4c54-965d-b2d0bc861e0e","type":"message","text":"I removed `LinearAlgebra` (which is a standard library) from `Project.toml` of `FFTW.jl`.  julia v1.3:\n```(v1.3) pkg&gt; dev FFTW\n[ Info: Path `/home/mose/.julia/dev/FFTW` exists and looks like the correct package, using existing path\n Resolving package versions...\n  Updating `~/.julia/environments/v1.3/Project.toml`\n [no changes]\n  Updating `~/.julia/environments/v1.3/Manifest.toml`\n [no changes]\n\n(v1.3) pkg&gt; build FFTW\n  Building FFTW → `~/.julia/dev/FFTW/deps/build.log`\n Resolving package versions...\n┌ Error: Error building `FFTW`: \n│ ERROR: LoadError: ArgumentError: Package LinearAlgebra not found in current path:\n│ - Run `import Pkg; Pkg.add(\"LinearAlgebra\")` to install the LinearAlgebra package.\n│ \n│ Stacktrace:\n│  [1] require(::Module, ::Symbol) at ./loading.jl:887\n│  [2] include at ./boot.jl:328 [inlined]\n│  [3] include_relative(::Module, ::String) at ./loading.jl:1105\n│  [4] include(::Module, ::String) at ./Base.jl:31\n│  [5] include(::String) at ./client.jl:424\n│  [6] top-level scope at none:5\n│ in expression starting at /home/mose/.julia/dev/FFTW/deps/build.jl:1\n└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/backwards_compatible_isolation.jl:649```\njulia v1.5:\n```(@v1.5) pkg&gt; dev FFTW\nPath `/home/mose/.julia/dev/FFTW` exists and looks like the correct package. Using existing path.\n  Resolving package versions...\nNo Changes to `~/.julia/environments/v1.5/Project.toml`\nNo Changes to `~/.julia/environments/v1.5/Manifest.toml`\n\n(@v1.5) pkg&gt; build FFTW\n   Building FFTW → `~/.julia/dev/FFTW/deps/build.log`\n┌ Error: Error building `FFTW`: \n│ ERROR: LoadError: ArgumentError: Package LinearAlgebra not found in current path:\n│ - Run `import Pkg; Pkg.add(\"LinearAlgebra\")` to install the LinearAlgebra package.\n│ \n│ Stacktrace:\n│  [1] require(::Module, ::Symbol) at ./loading.jl:893\n│  [2] include(::String) at ./client.jl:457\n│  [3] top-level scope at none:5\n│ in expression starting at /home/mose/.julia/dev/FFTW/deps/build.jl:1\n└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:949```\nso I still don't know what you're talking about :slightly_smiling_face:","user":"UDB26738Q","ts":"1612123649.427100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yFlF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I removed "},{"type":"text","text":"LinearAlgebra","style":{"code":true}},{"type":"text","text":" (which is a standard library) from "},{"type":"text","text":"Project.toml","style":{"code":true}},{"type":"text","text":" of "},{"type":"text","text":"FFTW.jl","style":{"code":true}},{"type":"text","text":".  julia v1.3:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(v1.3) pkg> dev FFTW\n[ Info: Path `/home/mose/.julia/dev/FFTW` exists and looks like the correct package, using existing path\n Resolving package versions...\n  Updating `~/.julia/environments/v1.3/Project.toml`\n [no changes]\n  Updating `~/.julia/environments/v1.3/Manifest.toml`\n [no changes]\n\n(v1.3) pkg> build FFTW\n  Building FFTW → `~/.julia/dev/FFTW/deps/build.log`\n Resolving package versions...\n┌ Error: Error building `FFTW`: \n│ ERROR: LoadError: ArgumentError: Package LinearAlgebra not found in current path:\n│ - Run `import Pkg; Pkg.add(\"LinearAlgebra\")` to install the LinearAlgebra package.\n│ \n│ Stacktrace:\n│  [1] require(::Module, ::Symbol) at ./loading.jl:887\n│  [2] include at ./boot.jl:328 [inlined]\n│  [3] include_relative(::Module, ::String) at ./loading.jl:1105\n│  [4] include(::Module, ::String) at ./Base.jl:31\n│  [5] include(::String) at ./client.jl:424\n│  [6] top-level scope at none:5\n│ in expression starting at /home/mose/.julia/dev/FFTW/deps/build.jl:1\n└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.3/Pkg/src/backwards_compatible_isolation.jl:649"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"julia v1.5:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"(@v1.5) pkg> dev FFTW\nPath `/home/mose/.julia/dev/FFTW` exists and looks like the correct package. Using existing path.\n  Resolving package versions...\nNo Changes to `~/.julia/environments/v1.5/Project.toml`\nNo Changes to `~/.julia/environments/v1.5/Manifest.toml`\n\n(@v1.5) pkg> build FFTW\n   Building FFTW → `~/.julia/dev/FFTW/deps/build.log`\n┌ Error: Error building `FFTW`: \n│ ERROR: LoadError: ArgumentError: Package LinearAlgebra not found in current path:\n│ - Run `import Pkg; Pkg.add(\"LinearAlgebra\")` to install the LinearAlgebra package.\n│ \n│ Stacktrace:\n│  [1] require(::Module, ::Symbol) at ./loading.jl:893\n│  [2] include(::String) at ./client.jl:457\n│  [3] top-level scope at none:5\n│ in expression starting at /home/mose/.julia/dev/FFTW/deps/build.jl:1\n└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:949"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so I still don't know what you're talking about "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"83e84de3-eefc-43e9-b62b-8f7d62bd98bb","type":"message","text":"I said repeatedly that I may have been wrong about whether it had changed.  The rest of what I was saying is still relevant though, it's still inconsistent with how running scripts work everywhere other than through `Pkg.build`","user":"U9VG1AYSG","ts":"1612123873.427300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QjkG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I said repeatedly that I may have been wrong about whether it had changed.  The rest of what I was saying is still relevant though, it's still inconsistent with how running scripts work everywhere other than through "},{"type":"text","text":"Pkg.build","style":{"code":true}}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"88154c43-cade-477d-aff3-5f72897514b9","type":"message","text":"everything related to a package (be it tests ,its build script or the package itself) is consistent: _all_ packages needed need to be present in the appropriate environment.  it has always been this way since v1.0","user":"UDB26738Q","ts":"1612124187.427500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JDA0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"everything related to a package (be it tests ,its build script or the package itself) is consistent: "},{"type":"text","text":"all","style":{"italic":true}},{"type":"text","text":" packages needed need to be present in the appropriate environment.  it has always been this way since v1.0"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"9e52226d-a806-481d-afdc-316c0f323473","type":"message","text":"Yes, but it's a little strange that this is the case also for a script that gets executed outside the package module itself.  If you run `julia build.jl` this is not how it works.","user":"U9VG1AYSG","ts":"1612124249.427700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5c+k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, but it's a little strange that this is the case also for a script that gets executed outside the package module itself.  If you run "},{"type":"text","text":"julia build.jl","style":{"code":true}},{"type":"text","text":" this is not how it works."}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"2da438e1-0a60-4f77-bb59-86ee804aed57","type":"message","text":"I think only in the global environment stdlibs are alrady available?","user":"UDB26738Q","ts":"1612124298.427900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DWH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think only in the global environment stdlibs are alrady available?"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"0a2548d9-f14d-4804-86d2-f075327b97e7","type":"message","text":"yeah:\n```% cat foo.jl                                 \nusing Pkg\n\nPkg.status()\n% JULIA_LOAD_PATH=\"\" julia-master --project=. foo.jl \nERROR: LoadError: ArgumentError: Package Pkg not found in current path:\n- Run `import Pkg; Pkg.add(\"Pkg\")` to install the Pkg package.\n\nStacktrace:\n [1] require(into::Module, mod::Symbol)\n   @ Base ./loading.jl:866\nin expression starting at /tmp/foo.jl:1```","user":"UDB26738Q","ts":"1612124350.428100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sYG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"% cat foo.jl                                 \nusing Pkg\n\nPkg.status()\n% JULIA_LOAD_PATH=\"\" julia-master --project=. foo.jl \nERROR: LoadError: ArgumentError: Package Pkg not found in current path:\n- Run `import Pkg; Pkg.add(\"Pkg\")` to install the Pkg package.\n\nStacktrace:\n [1] require(into::Module, mod::Symbol)\n   @ Base ./loading.jl:866\nin expression starting at /tmp/foo.jl:1"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"b8334a40-27c7-41b1-9992-510bdb93abb5","type":"message","text":"how did you run that? I just created a file and ran with `julia --project=. test.jl` where `.` has no Project and it works, which would seem to be a counterexample","user":"U9VG1AYSG","ts":"1612124403.428300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PPh2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how did you run that? I just created a file and ran with "},{"type":"text","text":"julia --project=. test.jl","style":{"code":true}},{"type":"text","text":" where "},{"type":"text","text":".","style":{"code":true}},{"type":"text","text":" has no Project and it works, which would seem to be a counterexample"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"9d480e30-5972-4bca-8689-b66c50e610c2","type":"message","text":"did you miss `JULIA_LOAD_PATH=\"\"`?","user":"UDB26738Q","ts":"1612124434.428500","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1612124439.000000"},"blocks":[{"type":"rich_text","block_id":"daMY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"did you miss "},{"type":"text","text":"JULIA_LOAD_PATH=\"\"","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"4533ff51-84b5-4186-9afc-a858062917aa","type":"message","text":"oh, I see what you did.  But it's still the case that if you don't set that environment variable, the stdlibs are available on `julia script.jl`, so it's not unreasonable to express surprise that the build scripts won't do that","user":"U9VG1AYSG","ts":"1612124509.428800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Web","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, I see what you did.  But it's still the case that if you don't set that environment variable, the stdlibs are available on "},{"type":"text","text":"julia script.jl","style":{"code":true}},{"type":"text","text":", so it's not unreasonable to express surprise that the build scripts won't do that"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"5824ae96-9606-4d12-a576-924dd1bc87a3","type":"message","text":"`Pkg.build` runs the script in a different process which doesn't use the global environment","user":"UDB26738Q","ts":"1612124544.429100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PvrTD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pkg.build","style":{"code":true}},{"type":"text","text":" runs the script in a different process which doesn't use the global environment"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"33c96412-7aef-4fd8-bf0a-93917e219f6b","type":"message","text":"now, I don't know the details of `Pkg`, but one should just learn to always list _all_ dependencies, including stdlibs, and that's it","user":"UDB26738Q","ts":"1612124651.429300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vXM/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"now, I don't know the details of "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":", but one should just learn to always list "},{"type":"text","text":"all","style":{"italic":true}},{"type":"text","text":" dependencies, including stdlibs, and that's it"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"be59e7d7-348a-4e14-8911-c7779033a77f","type":"message","text":"stdlibs shouldn't be special","user":"UDB26738Q","ts":"1612124658.429500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"julV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"stdlibs shouldn't be special"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"e27a9c08-e703-4152-9271-a77ec9cc105c","type":"message","text":"yes, and as I've said, I'm *NOT* saying \"this is wrong, it should be changed\", I'm just saying it's somewhat confusing behavior.  Really, I think the stdlibs should probably jsut be in the global environment by default, and they should be taken out of the default load path.  That seems like it would yield the most consistent behavior and I don't think the change owuld affect most uesrs","user":"U9VG1AYSG","ts":"1612124681.429700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i7Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, and as I've said, I'm "},{"type":"text","text":"NOT","style":{"bold":true}},{"type":"text","text":" saying \"this is wrong, it should be changed\", I'm just saying it's somewhat confusing behavior.  Really, I think the stdlibs should probably jsut be in the global environment by default, and they should be taken out of the default load path.  That seems like it would yield the most consistent behavior and I don't think the change owuld affect most uesrs"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"cfdcd00e-1dad-48a3-ac8a-5b914d6a4572","type":"message","text":"yes, I think we come to the same conclusion from different directions, the stdlibs should not be special and should be required in the environment, but the default environment should include them for you","user":"U9VG1AYSG","ts":"1612124711.429900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"szr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, I think we come to the same conclusion from different directions, the stdlibs should not be special and should be required in the environment, but the default environment should include them for you"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG","reactions":[{"name":"+1","users":["UDB26738Q"],"count":1}]},{"type":"message","subtype":"thread_broadcast","text":"<@U6795JH6H>, <@U67D54KS8>; <@UDB26738Q> and I just had a long conversation in which we concluded that we agree that the stdlibs should not have special accommodations in the load path, and should be required to be present in the environment like anything else, but that the default environment should include them when first created.  I was wondering if you have considered this option.  In practice, it probably wouldn't break anything for most users, but I suppose anyone who is using environments which are neither the default or package environments would really get burned.","user":"U9VG1AYSG","ts":"1612125348.430200","thread_ts":"1612118674.422500","root":{"client_msg_id":"251b6f38-ae75-4c49-bde3-0b540eb8802e","type":"message","text":"uh.... what's going on with `build.jl` on 1.6?  I get `ERROR: LoadError: ArgumentError: Package Pkg not found in current path`","user":"U9VG1AYSG","ts":"1612118674.422500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Apq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uh.... what's going on with "},{"type":"text","text":"build.jl","style":{"code":true}},{"type":"text","text":" on 1.6?  I get "},{"type":"text","text":"ERROR: LoadError: ArgumentError: Package Pkg not found in current path","style":{"code":true}}]}]}],"thread_ts":"1612118674.422500","reply_count":42,"reply_users_count":5,"latest_reply":"1612414342.123500","reply_users":["UDB26738Q","U9VG1AYSG","U67D54KS8","U01CQTKB86N","U66QZ3QF3"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"rN9","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6795JH6H"},{"type":"text","text":", "},{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":"; "},{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" and I just had a long conversation in which we concluded that we agree that the stdlibs should not have special accommodations in the load path, and should be required to be present in the environment like anything else, but that the default environment should include them when first created.  I was wondering if you have considered this option.  In practice, it probably wouldn't break anything for most users, but I suppose anyone who is using environments which are neither the default or package environments would really get burned."}]}]}],"client_msg_id":"2b791a50-752b-4a59-a094-c630069599d8","reactions":[{"name":"+1","users":["U66QZ3QF3"],"count":1}]},{"client_msg_id":"ff37f5f6-8c48-4be9-be1b-d38ac0bab4ec","type":"message","text":"I'm all for making stdlibs less special :slightly_smiling_face: Reduces the amount of special handling they need everywhere.","user":"U67D54KS8","ts":"1612125440.430500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oTH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm all for making stdlibs less special "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" Reduces the amount of special handling they need everywhere."}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG","reactions":[{"name":"+1","users":["U9VG1AYSG","U6A936746","U7THT3TM3","U66QZ3QF3"],"count":4}]},{"client_msg_id":"c083698e-62f5-4740-9261-1889c78ef3ad","type":"message","text":"```Run `import Pkg; Pkg.add(\"Pkg\")` to install the Pkg package.```\n:ahhhhhhh:","user":"U01CQTKB86N","ts":"1612140917.432500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BED3+","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Run `import Pkg; Pkg.add(\"Pkg\")` to install the Pkg package."}]},{"type":"rich_text_section","elements":[{"type":"emoji","name":"ahhhhhhh"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"d443c973-cd07-48b7-8b9a-35aecd6b04c4","type":"message","text":"lol yeah, I had noticed that","user":"U9VG1AYSG","ts":"1612190397.473100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p3obG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lol yeah, I had noticed that"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"AD7A8B5E-5B5A-4E2E-A931-E8C262433AB2","type":"message","text":"<@U9VG1AYSG> I’ve had the same thought - if they were just in the initial default Project.toml everything would “make sense” from the get-go. Could you even distribute a “standard registry” (or even depot?) to host them?","user":"U66QZ3QF3","ts":"1612303394.053100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wz2","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U9VG1AYSG"},{"type":"text","text":" I’ve had the same thought - if they were just in the initial default Project.toml everything would “make sense” from the get-go. Could you even distribute a “standard registry” (or even depot?) to host them?"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"1768387b-54f1-460e-9bb8-be0c2299ce74","type":"message","text":"yeah, something like that along with a mechanism to easily \"package\" them with the default Julia download seems like a pretty good solution... the only further complication I can see is how to make sure they are always compiled","user":"U9VG1AYSG","ts":"1612304286.053300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F88","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, something like that along with a mechanism to easily \"package\" them with the default Julia download seems like a pretty good solution... the only further complication I can see is how to make sure they are always compiled"}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG","reactions":[{"name":"+1","users":["U66QZ3QF3"],"count":1}]},{"client_msg_id":"89995BF7-7D23-49A3-9895-6FEAC01A4AC0","type":"message","text":"Yes, compilation is the remaining distinction with the stdlib...","user":"U66QZ3QF3","ts":"1612414342.123500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tyl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, compilation is the remaining distinction with the stdlib..."}]}]}],"thread_ts":"1612118674.422500","parent_user_id":"U9VG1AYSG"}]