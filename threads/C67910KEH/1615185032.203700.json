[{"client_msg_id":"5d9b7a92-4337-40e2-89a6-6199f13a7d13","type":"message","text":"How do custom allocators in Julia like <https://github.com/FluxML/Alloc.jl> interact with the GC? For example, is it possible that the GC could walk the stack and follow pointers to structs in the bump-allocated arena while the function is running? I would think that could cause problems. And, if that somehow works, what about references from arena-allocated structs to structs on the main heap, would those main heap structs be properly marked?","user":"UQZSRDE4E","ts":"1615185032.203700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5mp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do custom allocators in Julia like "},{"type":"link","url":"https://github.com/FluxML/Alloc.jl"},{"type":"text","text":" interact with the GC? For example, is it possible that the GC could walk the stack and follow pointers to structs in the bump-allocated arena while the function is running? I would think that could cause problems. And, if that somehow works, what about references from arena-allocated structs to structs on the main heap, would those main heap structs be properly marked?"}]}]}],"thread_ts":"1615185032.203700","reply_count":2,"reply_users_count":1,"latest_reply":"1615250207.000300","reply_users":["U012FH66MFW"],"subscribed":false,"reactions":[{"name":"point_up","users":["U66QZ3QF3","U0179G7FG4F"],"count":2}]},{"client_msg_id":"0a507c40-b438-46cf-8f2a-299e27651083","type":"message","text":"What other \"custom allocators\" do you have in mind \"like\" Alloc.jl?","user":"U012FH66MFW","ts":"1615250133.000100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tj9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What other \"custom allocators\" do you have in mind \"like\" Alloc.jl?"}]}]}],"thread_ts":"1615185032.203700","parent_user_id":"UQZSRDE4E"},{"client_msg_id":"8dd452ac-f647-4526-801f-00e15b5b6486","type":"message","text":"I don't really know Alloc.jl, but from having a quick look at it, it doesn't seem to interact with the GC at all; rather it modifies the instruction stream of some selected code, replacing all regular allocations by bump allocations in a fixed size buffer, thus avoiding the new for garbage collection while that particular bit of code is running.","user":"U012FH66MFW","ts":"1615250207.000300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u+eI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't really know Alloc.jl, but from having a quick look at it, it doesn't seem to interact with the GC at all; rather it modifies the instruction stream of some selected code, replacing all regular allocations by bump allocations in a fixed size buffer, thus avoiding the new for garbage collection while that particular bit of code is running."}]}]}],"thread_ts":"1615185032.203700","parent_user_id":"UQZSRDE4E"}]