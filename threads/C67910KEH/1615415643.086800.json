[{"client_msg_id":"76eff047-f978-4e10-b4ef-66e85151fcd3","type":"message","text":"\"Can you write 3-5 sentences to describe the Julia language for non-technical audience\"? Even this is too technical:\n```Julia is a high-level, high-performance, dynamic programming language for scientific computing and data analysis. It combines the interactivity and syntax of 'scripting' languages, such as Python, Matlab and R, with the speed of 'compiled' languages such as Fortran and C. This innovative strategy combined with high-performance libraries enable the analysis of computationally intensive problems in artificial intelligence, agent-based modelling, finance, and bioinformatics.```\n","user":"U6Z8377N2","ts":"1615415643.086800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2ohwM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"Can you write 3-5 sentences to describe the Julia language for non-technical audience\"? Even this is too technical:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Julia is a high-level, high-performance, dynamic programming language for scientific computing and data analysis. It combines the interactivity and syntax of 'scripting' languages, such as Python, Matlab and R, with the speed of 'compiled' languages such as Fortran and C. This innovative strategy combined with high-performance libraries enable the analysis of computationally intensive problems in artificial intelligence, agent-based modelling, finance, and bioinformatics."}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1615415643.086800","reply_count":8,"reply_users_count":5,"latest_reply":"1615450309.098100","reply_users":["U6Z8377N2","U01C3624SGJ","UDB26738Q","U6740K1SP","U7HAYKY9X"],"subscribed":false},{"client_msg_id":"3a6bb550-11ef-44c3-b074-6754ef4d98a0","type":"message","text":"Maybe.. `Julia, language, good, fast` might be good for these \"non technical people\" :stuck_out_tongue:","user":"U6Z8377N2","ts":"1615415679.087300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YcB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe.. "},{"type":"text","text":"Julia, language, good, fast","style":{"code":true}},{"type":"text","text":" might be good for these \"non technical people\" "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1615415643.086800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"fe9d0435-e44c-4b40-82d0-f7bdecf6b908","type":"message","text":"Python, but numpy works with everything. Also multiple dispatch allows for some \"magical\" things like differentiating normal julia code","user":"U01C3624SGJ","ts":"1615415790.089400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RSn0q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Python, but numpy works with everything. Also multiple dispatch allows for some \"magical\" things like differentiating normal julia code"}]}]}],"thread_ts":"1615415643.086800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"8758b0dd-eacb-459b-8775-870bfc127fbb","type":"message","text":"<https://twitter.com/turinginst/status/1365234168318279680>","user":"UDB26738Q","ts":"1615415796.089600","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/turinginst|@turinginst>: J is for Julia \nA modern programming language (launched in 2012) that is gaining in popularity among the AI and data science community because of its high speed, ease of use and flexibility. It is used in applications including climate modelling, robotics and cellular biology.","ts":1614332165,"author_name":"The Alan Turing Institute","author_link":"https://twitter.com/turinginst/status/1365234168318279680","author_icon":"https://pbs.twimg.com/profile_images/1278336633587355649/4DNRTJkL_normal.jpg","author_subname":"@turinginst","text":"J is for Julia \nA modern programming language (launched in 2012) that is gaining in popularity among the AI and data science community because of its high speed, ease of use and flexibility. It is used in applications including climate modelling, robotics and cellular biology.","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/turinginst/status/1365234168318279680","id":1,"original_url":"https://twitter.com/turinginst/status/1365234168318279680","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"QyrTb","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/turinginst/status/1365234168318279680"}]}]}],"thread_ts":"1615415643.086800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"1fea7316-24a3-4353-978c-53f098386bf9","type":"message","text":"I explain it to my grandpa as saying it’s a way of expressing Excel-like workflows to a computer — capable of scaling far beyond just a handful of worksheets.","user":"U6740K1SP","ts":"1615416147.094900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YHl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I explain it to my grandpa as saying it’s a way of expressing Excel-like workflows to a computer — capable of scaling far beyond just a handful of worksheets."}]}]}],"thread_ts":"1615415643.086800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"de99b3d2-d333-4cef-8320-9856971a6ad3","type":"message","text":"Not great as it’s purely data-centric, though","user":"U6740K1SP","ts":"1615416154.095100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TTXw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not great as it’s purely data-centric, though"}]}]}],"thread_ts":"1615415643.086800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"47708f53-1553-40e2-9f00-7acea455880f","type":"message","text":"Also probably too non-technical","user":"U6740K1SP","ts":"1615416183.095300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0bq/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also probably too non-technical"}]}]}],"thread_ts":"1615415643.086800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"3818bddd-730f-4f6b-866f-2ef20a7706e3","type":"message","text":"But I’m always after better explanations","user":"U6740K1SP","ts":"1615416196.095500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CQYL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I’m always after better explanations"}]}]}],"thread_ts":"1615415643.086800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"bb088b98-cc8f-4b88-a6bf-e2a4e272aaa5","type":"message","text":"I would say something like \"Traditionally, there has been a tradeoff between easy-to-use languages and fast languages. As non-professional programmers, scientists and engineers have favored easy languages, but that means either suffering low performance, or rewrite everything. Julia is the first language to be both easy to learn and use, and fast.","user":"U7HAYKY9X","ts":"1615450309.098100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U/1qU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would say something like \"Traditionally, there has been a tradeoff between easy-to-use languages and fast languages. As non-professional programmers, scientists and engineers have favored easy languages, but that means either suffering low performance, or rewrite everything. Julia is the first language to be both easy to learn and use, and fast."}]}]}],"thread_ts":"1615415643.086800","parent_user_id":"U6Z8377N2"}]