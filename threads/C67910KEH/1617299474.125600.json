[{"client_msg_id":"6e3bcf59-a807-4f3a-91f3-b5329f10b85e","type":"message","text":"It seems that Accessors.jl and Setfield.jl don't handle `Ref` that well, e.g.:\n\n```particle[] = @set particle[].position = particle[].position .+ dir .* P().particles_speeds ```\nwhere particle's type is `Base.RefValue{<http://Main.SM|Main.SM>.Particle}(<http://Main.SM|Main.SM>.Particle(Float32[840.0, 840.0], 4.869574f0, RGBA{N0f8}(0.729,0.635,0.651,0.816)))` . The expanded macro is somewhat like this:\n```lens = @optic _[].position\nAccessors.set(particle, lens, particle[].position .+ dir .* P().particles_speeds)```\nwhich obv results in `no method matching setindex(::Base.RefValue{<http://Main.SM|Main.SM>.Particle}, ::<http://Main.SM|Main.SM>.Particle)`.\nThe macro should expand to this I think:\n```lens = @optic _.position\nAccessors.set(particle[], lens, particle[].position .+ dir .* P().particles_speeds)```\nwhich is doable but  I am afraid it'll break blank indexing for types other than `Ref` . What do you guys think about it? for this scenario I guess I can provide setindex for a ref of SM.Particle and be done with it but is this considered a shortcoming of Accessors.jl?","user":"U010ZKG6T60","ts":"1617299474.125600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DUGb4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems that Accessors.jl and Setfield.jl don't handle "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" that well, e.g.:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"particle[] = @set particle[].position = particle[].position .+ dir .* P().particles_speeds "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"where particle's type is "},{"type":"text","text":"Base.RefValue{","style":{"code":true}},{"type":"link","url":"http://Main.SM","text":"Main.SM","style":{"code":true}},{"type":"text","text":".Particle}(","style":{"code":true}},{"type":"link","url":"http://Main.SM","text":"Main.SM","style":{"code":true}},{"type":"text","text":".Particle(Float32[840.0, 840.0], 4.869574f0, RGBA{N0f8}(0.729,0.635,0.651,0.816)))","style":{"code":true}},{"type":"text","text":" . The expanded macro is somewhat like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"lens = @optic _[].position\nAccessors.set(particle, lens, particle[].position .+ dir .* P().particles_speeds)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which obv results in "},{"type":"text","text":"no method matching setindex(::Base.RefValue{","style":{"code":true}},{"type":"link","url":"http://Main.SM","text":"Main.SM","style":{"code":true}},{"type":"text","text":".Particle}, ::","style":{"code":true}},{"type":"link","url":"http://Main.SM","text":"Main.SM","style":{"code":true}},{"type":"text","text":".Particle)","style":{"code":true}},{"type":"text","text":".\nThe macro should expand to this I think:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"lens = @optic _.position\nAccessors.set(particle[], lens, particle[].position .+ dir .* P().particles_speeds)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which is doable but  I am afraid it'll break blank indexing for types other than "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" . What do you guys think about it? for this scenario I guess I can provide setindex for a ref of SM.Particle and be done with it but is this considered a shortcoming of Accessors.jl?"}]}]}],"thread_ts":"1617299474.125600","reply_count":1,"reply_users_count":1,"latest_reply":"1617371600.142200","reply_users":["URN898S15"],"is_locked":false,"subscribed":false},{"client_msg_id":"a30f204a-8097-4f7e-b816-a4ccc8204c75","type":"message","text":"Probably a good one for a github issue on Accessors.jl, not sure this will be seen in general...","user":"URN898S15","ts":"1617371600.142200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YF=HI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Probably a good one for a github issue on Accessors.jl, not sure this will be seen in general..."}]}]}],"thread_ts":"1617299474.125600","parent_user_id":"U010ZKG6T60","reactions":[{"name":"+1","users":["U010ZKG6T60"],"count":1}]}]