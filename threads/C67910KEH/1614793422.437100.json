[{"client_msg_id":"add6838d-7b27-4118-a386-4ba957a009b4","type":"message","text":"I was building a function for `(::Adjoint{SparseMatrixCSC})`. Now when I write it like this -\n`f(v::Adjoint{&lt;:SparseMatrixCSC})=f(SparseMatrixCSC(v))`\nthis gives me an undesired output.\nSince there was already a function defined `f(::AbstractArray)`, and `typeof(v')&lt;:AbstractArray =&gt; true`.\nSo it runs the function for this rather than running my defined function for `::Adjoint{&lt;:SparseMatrixCSC}`\nHow do I get a way around it?","user":"UTDSTSANP","ts":"1614793422.437100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mbk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was building a function for "},{"type":"text","text":"(::Adjoint{SparseMatrixCSC})","style":{"code":true}},{"type":"text","text":". Now when I write it like this -\n"},{"type":"text","text":"f(v::Adjoint{<:SparseMatrixCSC})=f(SparseMatrixCSC(v))","style":{"code":true}},{"type":"text","text":"\nthis gives me an undesired output.\nSince there was already a function defined "},{"type":"text","text":"f(::AbstractArray)","style":{"code":true}},{"type":"text","text":", and "},{"type":"text","text":"typeof(v')<:AbstractArray => true","style":{"code":true}},{"type":"text","text":".\nSo it runs the function for this rather than running my defined function for "},{"type":"text","text":"::Adjoint{<:SparseMatrixCSC}","style":{"code":true}},{"type":"text","text":"\nHow do I get a way around it?"}]}]}],"thread_ts":"1614793422.437100","reply_count":5,"reply_users_count":3,"latest_reply":"1614794064.439700","reply_users":["UH24GRBLL","UH8A351DJ","UTDSTSANP"],"subscribed":false},{"client_msg_id":"0bc43db5-b996-4409-af35-33116d1b988a","type":"message","text":"If you materialize the adjoint as a sparse matrix, why would you hit the method for the adjoint?","user":"UH24GRBLL","ts":"1614793701.438000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tuMR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you materialize the adjoint as a sparse matrix, why would you hit the method for the adjoint?"}]}]}],"thread_ts":"1614793422.437100","parent_user_id":"UTDSTSANP"},{"client_msg_id":"5cb80fda-c8de-4f93-aee9-bed5ec247363","type":"message","text":"```julia&gt; f(v::AbstractArray) = \"Abstract\"\nf (generic function with 1 method)\n\njulia&gt; v = [1,2,3];\n\njulia&gt; typeof(v') &lt;: AbstractArray\ntrue\n\njulia&gt; f(v')\n\"Abstract\"\n\njulia&gt; using LinearAlgebra\n\njulia&gt; f(v::Adjoint{T,Vector{Int64}}) where T = \"Adj\"\nf (generic function with 2 methods)\n\njulia&gt; f(v')\n\"Adj\"```\ndoes this example help clarifying things for you?","user":"UH8A351DJ","ts":"1614793718.438300","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1614793731.000000"},"blocks":[{"type":"rich_text","block_id":"I1kZq","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> f(v::AbstractArray) = \"Abstract\"\nf (generic function with 1 method)\n\njulia> v = [1,2,3];\n\njulia> typeof(v') <: AbstractArray\ntrue\n\njulia> f(v')\n\"Abstract\"\n\njulia> using LinearAlgebra\n\njulia> f(v::Adjoint{T,Vector{Int64}}) where T = \"Adj\"\nf (generic function with 2 methods)\n\njulia> f(v')\n\"Adj\""}]},{"type":"rich_text_section","elements":[{"type":"text","text":"does this example help clarifying things for you?"}]}]}],"thread_ts":"1614793422.437100","parent_user_id":"UTDSTSANP","reactions":[{"name":"+1","users":["UTDSTSANP"],"count":1}]},{"client_msg_id":"6b9bd7b1-d3ab-4993-b710-b251bd7d5879","type":"message","text":"That seems nice! Thank you <@UH8A351DJ>! Let me quickly have a look if it helps me!","user":"UTDSTSANP","ts":"1614793792.438700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5z3o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That seems nice! Thank you "},{"type":"user","user_id":"UH8A351DJ"},{"type":"text","text":"! Let me quickly have a look if it helps me!"}]}]}],"thread_ts":"1614793422.437100","parent_user_id":"UTDSTSANP"},{"client_msg_id":"33ddd879-fa88-460f-ae40-bb070fcddb36","type":"message","text":"I *think you're missing the first type in `Adjoint` . It should be something like:\n```f(v::Adjoint{T,&lt;:SparseMatrixCSC}) where T```","user":"UH8A351DJ","ts":"1614793840.439100","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1614793869.000000"},"blocks":[{"type":"rich_text","block_id":"UsyG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I *think you're missing the first type in "},{"type":"text","text":"Adjoint","style":{"code":true}},{"type":"text","text":" . It should be something like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"f(v::Adjoint{T,<:SparseMatrixCSC}) where T"}]}]}],"thread_ts":"1614793422.437100","parent_user_id":"UTDSTSANP","reactions":[{"name":"+1","users":["UTDSTSANP"],"count":1}]},{"client_msg_id":"93a532d0-eed3-47d2-8e2c-0343ff703222","type":"message","text":"Thank you! That was the exact argument I was missing","user":"UTDSTSANP","ts":"1614794064.439700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"idN9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you! That was the exact argument I was missing"}]}]}],"thread_ts":"1614793422.437100","parent_user_id":"UTDSTSANP"}]