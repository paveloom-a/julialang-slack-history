[{"client_msg_id":"6b55a774-8e7d-45fe-9eaa-4af468bd1a20","type":"message","text":"what are you printing? minimum, maximum, mean?","user":"UH24GRBLL","ts":"1616608223.327100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ALf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what are you printing? minimum, maximum, mean?"}]}]}],"thread_ts":"1616608223.327100","reply_count":10,"reply_users_count":4,"latest_reply":"1616611098.338200","reply_users":["UDB26738Q","U011V2YN59N","U6A936746","U69KQT9DL"],"is_locked":false,"subscribed":false},{"client_msg_id":"46591d87-2ee3-49b6-9bdb-9490241e2a25","type":"message","text":"`@btime`, so minimum","user":"UDB26738Q","ts":"1616608233.327300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g1MU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@btime","style":{"code":true}},{"type":"text","text":", so minimum"}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL"},{"client_msg_id":"1d296bee-68f0-4e2b-bc14-1fe3a8ad41d5","type":"message","text":"TIL `@btime` returns the minimum. I would think mean or median would be better as a default","user":"U011V2YN59N","ts":"1616609816.332100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f5y1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"TIL "},{"type":"text","text":"@btime","style":{"code":true}},{"type":"text","text":" returns the minimum. I would think mean or median would be better as a default"}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL"},{"client_msg_id":"3ac54563-6489-49c8-8e61-ecd97a5262f7","type":"message","text":"<https://arxiv.org/abs/1608.04295>","user":"UDB26738Q","ts":"1616610001.332800","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Robust benchmarking in noisy environments","title_link":"https://arxiv.org/abs/1608.04295","text":"We propose a benchmarking strategy that is robust in the presence of timer error, OS jitter and other environmental fluctuations, and is insensitive to the highly nonideal statistics produced by...","fallback":"arXiv.org: Robust benchmarking in noisy environments","from_url":"https://arxiv.org/abs/1608.04295","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/1608.04295"}],"blocks":[{"type":"rich_text","block_id":"rNpyC","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://arxiv.org/abs/1608.04295"}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL","reactions":[{"name":"+1","users":["U011V2YN59N","U6A936746","U7THT3TM3","U01724Q3PGW"],"count":4}]},{"client_msg_id":"f65e94ba-8d4a-448e-9b6b-6b499e3cf3ee","type":"message","text":"TL;DR; minimum is a better default because noise can only make it slower not faster.","user":"U6A936746","ts":"1616610039.333300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yCx2n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"TL;DR; minimum is a better default because noise can only make it slower not faster."}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL"},{"client_msg_id":"5f5a0132-2779-4030-9a30-ef92f87b702a","type":"message","text":"the mean is rarely a good estimator if there are outliers","user":"UDB26738Q","ts":"1616610082.333500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KSn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the mean is rarely a good estimator if there are outliers"}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL"},{"client_msg_id":"ec975def-2280-4bf2-b11a-ca0cb38ef9e9","type":"message","text":"sometime people say that something else is better (like mean or median) but that’s because they are not doing a microbrenchmark but something that care about how something performs over a variety of data.\nbut at that point the discussion needs to be *far* more sophisticated than simply talking about the estimator, and so talking about the estimator as the focus is missing the forest for the trees.","user":"U6A936746","ts":"1616610153.333900","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1616610186.000000"},"blocks":[{"type":"rich_text","block_id":"wImIa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sometime people say that something else is better (like mean or median) but that’s because they are not doing a microbrenchmark but something that care about how something performs over a variety of data.\nbut at that point the discussion needs to be "},{"type":"text","text":"far","style":{"bold":true}},{"type":"text","text":" more sophisticated than simply talking about the estimator, and so talking about the estimator as the focus is missing the forest for the trees."}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL"},{"client_msg_id":"1afff68d-b1f3-4731-a6b8-499fb60125a5","type":"message","text":"There is actually a thing where minimum can cause mistakes.\nModern CPUs are unfortunately stateful.\nAnd remember branch predictions from the past. And you can’t AFAIK stop them from doing this nor flush that memory (maybe there is an assembly instruction for it though that i don;t know about)\nIIRC there is an open on BenchmarkTools for dealing with this, (e.g. by trashing that cache by showing it lots of really good cachable branch predictions in between each run of the user code, to fill the cache with junk)","user":"U6A936746","ts":"1616610365.335800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z9ui","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is actually a thing where minimum can cause mistakes.\nModern CPUs are unfortunately stateful.\nAnd remember branch predictions from the past. And you can’t AFAIK stop them from doing this nor flush that memory (maybe there is an assembly instruction for it though that i don;t know about)\nIIRC there is an open on BenchmarkTools for dealing with this, (e.g. by trashing that cache by showing it lots of really good cachable branch predictions in between each run of the user code, to fill the cache with junk)"}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL"},{"client_msg_id":"afaed8ec-c2d1-4e87-b741-e123bb86b187","type":"message","text":"the trick in BenchmarkTools to work around that is to use `setup`, no?","user":"UDB26738Q","ts":"1616610414.336200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iiav","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the trick in BenchmarkTools to work around that is to use "},{"type":"text","text":"setup","style":{"code":true}},{"type":"text","text":", no?"}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL"},{"client_msg_id":"265ee7fd-ede6-4dea-88f0-dc30ac4d0bae","type":"message","text":"maybe?","user":"U6A936746","ts":"1616610430.336500","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1616610432.000000"},"blocks":[{"type":"rich_text","block_id":"7Kq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe?"}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL"},{"client_msg_id":"a831dc5b-0e19-451e-9132-221f387bd767","type":"message","text":"This video has a nice discussion of the intricacies of benchmarking (and how to address them… spoiler: we probably can’t address much of this yet in Julia):\n<https://www.youtube.com/watch?v=r-TLSBdHe1A&amp;t=1s>","user":"U69KQT9DL","ts":"1616611098.338200","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"\"Performance Matters\" by Emery Berger","title_link":"https://www.youtube.com/watch?v=r-TLSBdHe1A&amp;t=1s","author_name":"Strange Loop Conference","author_link":"https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw","thumb_url":"https://i.ytimg.com/vi/r-TLSBdHe1A/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: \"Performance Matters\" by Emery Berger","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/r-TLSBdHe1A?feature=oembed&start=1&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://www.youtube.com/watch?v=r-TLSBdHe1A&amp;t=1s","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://www.youtube.com/watch?v=r-TLSBdHe1A&amp;t=1s"}],"blocks":[{"type":"rich_text","block_id":"R1br","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This video has a nice discussion of the intricacies of benchmarking (and how to address them… spoiler: we probably can’t address much of this yet in Julia):\n"},{"type":"link","url":"https://www.youtube.com/watch?v=r-TLSBdHe1A&amp;t=1s"}]}]}],"thread_ts":"1616608223.327100","parent_user_id":"UH24GRBLL","reactions":[{"name":"+1","users":["U011V2YN59N","UB197FRCL"],"count":2}]}]