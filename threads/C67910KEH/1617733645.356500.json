[{"client_msg_id":"fb04ad8a-3647-456b-90f7-c4ecdd479b6f","type":"message","text":"Isn't tuple setindex from base type instable?\n```function _setindex(v, i::Integer, first, tail...)\n    @_inline_meta\n    return (ifelse(i == 1, v, first), _setindex(v, i - 1, tail...)...)\nend```","user":"U010ZKG6T60","ts":"1617733645.356500","team":"T68168MUP","edited":{"user":"U010ZKG6T60","ts":"1617733666.000000"},"blocks":[{"type":"rich_text","block_id":"ptY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Isn't tuple setindex from base type instable?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function _setindex(v, i::Integer, first, tail...)\n    @_inline_meta\n    return (ifelse(i == 1, v, first), _setindex(v, i - 1, tail...)...)\nend"}]}]}],"thread_ts":"1617733645.356500","reply_count":12,"reply_users_count":4,"latest_reply":"1617735267.360000","reply_users":["UM30MT6RF","U8D9768Q6","U010ZKG6T60","U6740K1SP"],"is_locked":false,"subscribed":false},{"client_msg_id":"ca96131b-d0f5-4968-991d-e5a54efd9615","type":"message","text":"No, typically the compiler can infer recursive code with small tuples like this pretty well.","user":"UM30MT6RF","ts":"1617733999.356700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+HWz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, typically the compiler can infer recursive code with small tuples like this pretty well."}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60","reactions":[{"name":"correct_answer","users":["U6740K1SP"],"count":1}]},{"client_msg_id":"3a5f251f-7008-4767-89e8-9bb03cd46a2c","type":"message","text":"Well, technically it is type unstable right? It's just an instability the compiler understands how to remove.","user":"U8D9768Q6","ts":"1617734594.357200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8Jv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, technically it is type unstable right? It's just an instability the compiler understands how to remove."}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"},{"client_msg_id":"b37bfcca-babf-4da6-81bd-d85bf5c1cf33","type":"message","text":"It also doesn't get optimized in Accessors.jl(and I am guessing Setfield.jl?) if you modify a tuple using `@set/@setfield`","user":"U010ZKG6T60","ts":"1617734684.357400","team":"T68168MUP","edited":{"user":"U010ZKG6T60","ts":"1617734801.000000"},"blocks":[{"type":"rich_text","block_id":"c=Ptq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It also doesn't get optimized in Accessors.jl(and I am guessing Setfield.jl?) if you modify a tuple using "},{"type":"text","text":"@set/@setfield","style":{"code":true}}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"},{"client_msg_id":"7125eede-826a-460c-aa06-87a22f08ceb3","type":"message","text":"```││ @ ~/Accessors.jl/src/setindex.jl:2 within `setindex' @ tuple.jl:52\n│   ││┌ @ tuple.jl:57 within `_setindex'\n│   │││ %19 = Base.ifelse(%18, val, %16)::Union{Int64, String}\n│   │││ @ tuple.jl:57 within `_setindex' @ tuple.jl:57\n│   │││ %22 = Base.ifelse(%21, val, %17)::Union{Int64, String}\n│   │││ @ tuple.jl:57 within `_setindex'\n│   │││ %23 = Core.tuple(%19, %22)::Tuple{Union{Int64, String}, Union{Int64, String}}\n│   └└└```\n","user":"U010ZKG6T60","ts":"1617734728.357600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JXfG","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"││ @ ~/Accessors.jl/src/setindex.jl:2 within `setindex' @ tuple.jl:52\n│   ││┌ @ tuple.jl:57 within `_setindex'\n│   │││ %19 = Base.ifelse(%18, val, %16)::Union{Int64, String}\n│   │││ @ tuple.jl:57 within `_setindex' @ tuple.jl:57\n│   │││ %22 = Base.ifelse(%21, val, %17)::Union{Int64, String}\n│   │││ @ tuple.jl:57 within `_setindex'\n│   │││ %23 = Core.tuple(%19, %22)::Tuple{Union{Int64, String}, Union{Int64, String}}\n│   └└└"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"},{"client_msg_id":"dd00d016-4ee7-4436-90cc-1b5503388bed","type":"message","text":"If the tuple is homogenous and `v` is of the same type, all the information needed to make this type stable is fully present in the type domain.","user":"UM30MT6RF","ts":"1617734743.357800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L+wl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If the tuple is homogenous and "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":" is of the same type, all the information needed to make this type stable is fully present in the type domain."}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"},{"client_msg_id":"b62d62cb-c627-4185-a5ec-827b2f1f5f5e","type":"message","text":"even if the tuple _isn’t_ homogenous it’s type stable since the type of the arguments are different at each recursive step","user":"U6740K1SP","ts":"1617734790.358000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WXDC+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"even if the tuple "},{"type":"text","text":"isn’t","style":{"italic":true}},{"type":"text","text":" homogenous it’s type stable since the type of the arguments are different at each recursive step"}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"},{"client_msg_id":"54039a46-c215-4989-8818-2bef5afc4140","type":"message","text":"Yes, but that relies on constant prop, which will often happen in practice, but code_warntype on `setindex` itself won't tell you that","user":"UM30MT6RF","ts":"1617734901.358400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uvvy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, but that relies on constant prop, which will often happen in practice, but code_warntype on "},{"type":"text","text":"setindex","style":{"code":true}},{"type":"text","text":" itself won't tell you that"}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"},{"client_msg_id":"f8af1cef-fb37-497c-88f9-37b5610b1b3a","type":"message","text":"Right, for the branch that assigns `v`, that’s true.  But recursively walking through tuples/args like this is a general pattern and is generally type stable","user":"U6740K1SP","ts":"1617734977.358600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fwma","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, for the branch that assigns "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":", that’s true.  But recursively walking through tuples/args like this is a general pattern and is generally type stable"}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"},{"client_msg_id":"36bc9221-b694-4aae-90dd-2fefe52a2b57","type":"message","text":"The compiler may still give up if the signatures are recursively getting more complicated (even if it’s technically type stable along the way)","user":"U6740K1SP","ts":"1617735013.359100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Orc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The compiler may still give up if the signatures are recursively getting more complicated (even if it’s technically type stable along the way)"}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60","reactions":[{"name":"correct_answer","users":["UM30MT6RF"],"count":1}]},{"client_msg_id":"a407f9ae-3b5a-4a77-9481-308f30b15919","type":"message","text":"Yes, what I would say is that it doesn't make much sense to talk about whether the function `_setindex` by itself is type stable or not, it really depends how it is used inside the function you are interested in.","user":"UM30MT6RF","ts":"1617735227.359600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+ZkW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, what I would say is that it doesn't make much sense to talk about whether the function "},{"type":"text","text":"_setindex","style":{"code":true}},{"type":"text","text":" by itself is type stable or not, it really depends how it is used inside the function you are interested in."}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"},{"client_msg_id":"de47f1c3-e774-4480-bb32-bdf5c376f6d8","type":"message","text":"^ that's true","user":"U010ZKG6T60","ts":"1617735251.359800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qtj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"^ that's true"}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"},{"client_msg_id":"05abb846-6f96-4ebc-a0cc-605f3aba3a46","type":"message","text":"I see, thanks","user":"U8D9768Q6","ts":"1617735267.360000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jmY=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see, thanks"}]}]}],"thread_ts":"1617733645.356500","parent_user_id":"U010ZKG6T60"}]