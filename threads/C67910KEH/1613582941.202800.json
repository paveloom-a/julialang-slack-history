[{"client_msg_id":"08ba14c6-4a07-45a8-92a6-156ac52eb415","type":"message","text":"Are there any plans to be able to redefine structs? When prototyping, I often get `ERROR: invalid redefinition of constant PlotData_t1`","user":"U6Z8377N2","ts":"1613582941.202800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mywa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any plans to be able to redefine structs? When prototyping, I often get "},{"type":"text","text":"ERROR: invalid redefinition of constant PlotData_t1","style":{"code":true}}]}]}],"thread_ts":"1613582941.202800","reply_count":13,"reply_users_count":5,"latest_reply":"1613585697.205900","reply_users":["U7HAYKY9X","U6Z8377N2","UM30MT6RF","UH24GRBLL","UL4JREGCV"],"subscribed":false},{"client_msg_id":"a60c97b4-57e8-4bf8-9602-2f4046650155","type":"message","text":"The best solution is to use Revise. It can deal with redefining structs","user":"U7HAYKY9X","ts":"1613582969.203000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KUtAB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The best solution is to use Revise. It can deal with redefining structs"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"988e4940-e7bc-4dd0-8290-c8f985349691","type":"message","text":"What exactly goes on under the hood that prevents the redefinition of structs?","user":"U6Z8377N2","ts":"1613582974.203200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"82z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What exactly goes on under the hood that prevents the redefinition of structs?"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"99f5f08b-43b3-42df-b727-4b313770725d","type":"message","text":"Oh I see, I'll try that I guess. I use Revise when working inside  module, but I am simply just working in a `.jl` script with some functions in vscode... I'll have to see how to use Revise for that","user":"U6Z8377N2","ts":"1613583016.203400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6qwfE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh I see, I'll try that I guess. I use Revise when working inside  module, but I am simply just working in a "},{"type":"text","text":".jl","style":{"code":true}},{"type":"text","text":" script with some functions in vscode... I'll have to see how to use Revise for that"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"f517044a-528f-4c4a-8fe3-377fae68e374","type":"message","text":"I'm not deep into this, but if you have a function method which refers to a struct, it would have to be re-compiled when the struct definition change. And that means you would need to keep track of which methods and structs \"know about\" each other and invalidate any methods that refer to an updated struct","user":"U7HAYKY9X","ts":"1613583055.203600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mb8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not deep into this, but if you have a function method which refers to a struct, it would have to be re-compiled when the struct definition change. And that means you would need to keep track of which methods and structs \"know about\" each other and invalidate any methods that refer to an updated struct"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"89797031-a9e9-48cf-85f2-b611a495b15a","type":"message","text":"&gt; The best solution is to use Revise. It can deal with redefining structs\nCan it? I am pretty sure it can't","user":"UM30MT6RF","ts":"1613583077.203800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ac8j","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"The best solution is to use Revise. It can deal with redefining structs"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Can it? I am pretty sure it can't"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"90aa23d3-cab0-4f3a-b556-01276840830d","type":"message","text":"You can try to do `includet(\"myfile.jl\")`","user":"U7HAYKY9X","ts":"1613583084.204000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZK2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can try to do `includet(\"myfile.jl\")`"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"2a63429f-2f3b-4c15-ab97-ca61c4c68f83","type":"message","text":"Lemme just test","user":"U7HAYKY9X","ts":"1613583092.204200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T3jQh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Lemme just test"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"3e810469-1efd-4b95-b28a-57aad06a713f","type":"message","text":"Yeah, that works if working in an external terminal but I am actually using the vscode terminal. I know there is a settings for the vscode extension to include Revise at start up, so I'll try that","user":"U6Z8377N2","ts":"1613583131.204400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gcs2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, that works if working in an external terminal but I am actually using the vscode terminal. I know there is a settings for the vscode extension to include Revise at start up, so I'll try that"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"99d9fb9f-23df-4cd1-9c90-3536d091b9be","type":"message","text":"Whoah you are right <@UM30MT6RF>, Revise can't handle that. Weird, I could swear it did. Anyway, what you can do is to put all your code in a module during testing.","user":"U7HAYKY9X","ts":"1613583224.204600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CtDmf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Whoah you are right "},{"type":"user","user_id":"UM30MT6RF"},{"type":"text","text":", Revise can't handle that. Weird, I could swear it did. Anyway, what you can do is to put all your code in a module during testing."}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"7f87bbe3-338c-47e5-b0f9-8a8a62ebbd40","type":"message","text":"There is <https://github.com/JuliaLang/julia/pull/33872>, which could integrate with Revise and IDEs to allow something like this","user":"UM30MT6RF","ts":"1613583431.204800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hDd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/33872"},{"type":"text","text":", which could integrate with Revise and IDEs to allow something like this"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"430fbd8e-bc81-4723-bac4-eda557d59c38","type":"message","text":"If you're just prototyping and don't know the layout of your struct yet, you can use NamedTuples until you know it and then switch to a struct","user":"UH24GRBLL","ts":"1613584015.205000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lZ1yT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you're just prototyping and don't know the layout of your struct yet, you can use NamedTuples until you know it and then switch to a struct"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2","reactions":[{"name":"+1","users":["US64J0NPQ","UCAFZ51L3","U7THT3TM3"],"count":3}]},{"client_msg_id":"8bec2b45-76c0-4d27-a1ed-45b6fde79f6d","type":"message","text":"One thing I use combined with Revise, is to define the struct with a version tag in the name e.g. `struct MyStruct_v1`  and then afterwards, put a variable declaration `MyStruct = MyStruct_v1`. If I need to edit the struct declaration, I just bump the version numbers and with the magic of Revise, pretty much everything just works.","user":"UL4JREGCV","ts":"1613585523.205700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pTGcR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One thing I use combined with Revise, is to define the struct with a version tag in the name e.g. "},{"type":"text","text":"struct MyStruct_v1","style":{"code":true}},{"type":"text","text":"  and then afterwards, put a variable declaration "},{"type":"text","text":"MyStruct = MyStruct_v1","style":{"code":true}},{"type":"text","text":". If I need to edit the struct declaration, I just bump the version numbers and with the magic of Revise, pretty much everything just works."}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"},{"client_msg_id":"7b356dbb-da59-4d3c-b4b4-21cdf738c7d3","type":"message","text":"Of course the new definition only applies to new values, but that's not an issue for me in practice","user":"UL4JREGCV","ts":"1613585697.205900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"55n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Of course the new definition only applies to new values, but that's not an issue for me in practice"}]}]}],"thread_ts":"1613582941.202800","parent_user_id":"U6Z8377N2"}]