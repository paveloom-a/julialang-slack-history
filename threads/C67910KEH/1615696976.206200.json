[{"client_msg_id":"03dfa9e3-e9ab-41ca-bcae-7a7e346889f8","type":"message","text":"Is there a package that implements `map`  and `fold` for more than one array / iterable at a time (e.g. `map2`  would allow you to map over 2 arrays at once). I’ve tried looking but I couldn’t find anything. (And yes I know I could just use for loops and `zip`, but I want to be able to use functional idioms too)","user":"US8V7JSKB","ts":"1615696976.206200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8cW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a package that implements "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"fold","style":{"code":true}},{"type":"text","text":" for more than one array / iterable at a time (e.g. "},{"type":"text","text":"map2","style":{"code":true}},{"type":"text","text":"  would allow you to map over 2 arrays at once). I’ve tried looking but I couldn’t find anything. (And yes I know I could just use for loops and "},{"type":"text","text":"zip","style":{"code":true}},{"type":"text","text":", but I want to be able to use functional idioms too)"}]}]}],"thread_ts":"1615696976.206200","reply_count":13,"reply_users_count":3,"latest_reply":"1615746842.215700","reply_users":["UH8A351DJ","U014JNFUNG2","US8V7JSKB"],"subscribed":false},{"client_msg_id":"e5afd43e-fed8-4e42-8712-7ccdfdf449a7","type":"message","text":"```julia&gt; map(+, [1,1,2], [3,3,7])\n3-element Vector{Int64}:\n 4\n 4\n 9```\nyou mean like this?","user":"UH8A351DJ","ts":"1615697088.206300","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1615697112.000000"},"blocks":[{"type":"rich_text","block_id":"Pq/ZH","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> map(+, [1,1,2], [3,3,7])\n3-element Vector{Int64}:\n 4\n 4\n 9"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"you mean like this?"}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB","reactions":[{"name":"point_up","users":["U66QZ3QF3","U6A936746"],"count":2}]},{"client_msg_id":"46261613-fab8-49a4-b5c1-985f9a87e424","type":"message","text":"I’ve got to say I didn’t find this obvious - `map` has 65 methods and I have no idea which instance(?) is being used here - this one?\n\n```[15] map(::typeof(+), x::SparseArrays.AbstractSparseArray{Tv,Ti,1} where Ti where Tv, y::SparseArrays.AbstractSparseArray{Tv,Ti,1} where Ti where Tv) in SparseArrays at /nix/store/0rzd268648bbfhkwvpqs27zjv63z1pzh-julia-1.5.3/share/julia/stdlib/v1.5/SparseArrays/src/sparsevector.jl:1305```","user":"U014JNFUNG2","ts":"1615716683.208400","team":"T68168MUP","edited":{"user":"U014JNFUNG2","ts":"1615716922.000000"},"blocks":[{"type":"rich_text","block_id":"EtU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ve got to say I didn’t find this obvious - "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" has 65 methods and I have no idea which instance(?) is being used here - this one?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[15] map(::typeof(+), x::SparseArrays.AbstractSparseArray{Tv,Ti,1} where Ti where Tv, y::SparseArrays.AbstractSparseArray{Tv,Ti,1} where Ti where Tv) in SparseArrays at /nix/store/0rzd268648bbfhkwvpqs27zjv63z1pzh-julia-1.5.3/share/julia/stdlib/v1.5/SparseArrays/src/sparsevector.jl:1305"}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"b73468ea-3b63-4c3c-8208-e066ef7e0792","type":"message","text":"`@which` didn’t seem to help\n\n```julia&gt; @which map(+, [1,1,2], [3,3,7])\n@which map(+, [1,1,2], [3,3,7])\nmap(f, iters...) in Base at abstractarray.jl:2248```","user":"U014JNFUNG2","ts":"1615716889.208600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nPc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@which","style":{"code":true}},{"type":"text","text":" didn’t seem to help\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @which map(+, [1,1,2], [3,3,7])\n@which map(+, [1,1,2], [3,3,7])\nmap(f, iters...) in Base at abstractarray.jl:2248"}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"97e2f187-fc93-414a-ad21-2c1bbaca80e2","type":"message","text":"what do you mean by didn't help. that's the one","user":"UH8A351DJ","ts":"1615734597.212800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O=Ey","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you mean by didn't help. that's the one"}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"ee5e22d6-9cc9-450c-b369-a46f8328f1a1","type":"message","text":"Doh thanks Jerry! I should have looked at the docs more closely","user":"US8V7JSKB","ts":"1615742429.213300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KZI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Doh thanks Jerry! I should have looked at the docs more closely"}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"9305fc94-4e09-4a8a-aee6-828119f7351a","type":"message","text":"&gt; what do you mean by didn’t help. that’s the one\nDo you mean\n```julia&gt; @which map(+, [1,1,2], [3,3,7])\n@which map(+, [1,1,2], [3,3,7])\nmap(f, iters...) in Base at abstractarray.jl:2248```\n","user":"U014JNFUNG2","ts":"1615742695.213500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WxKzD","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"what do you mean by didn’t help. that’s the one"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Do you mean\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @which map(+, [1,1,2], [3,3,7])\n@which map(+, [1,1,2], [3,3,7])\nmap(f, iters...) in Base at abstractarray.jl:2248"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"162630db-b4d7-4b18-879d-1e5a1e210f8e","type":"message","text":"yes, maybe you have confusion about `iters...`? This method will be used whenever you pass more than one argument after `f`","user":"UH8A351DJ","ts":"1615743394.213800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bxC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, maybe you have confusion about "},{"type":"text","text":"iters...","style":{"code":true}},{"type":"text","text":"? This method will be used whenever you pass more than one argument after "},{"type":"text","text":"f","style":{"code":true}}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"dfd70adf-09ae-455e-8894-f3c9f49ebe0f","type":"message","text":"I think I have more than confusion - I have much to learn about julia - in haskell I can find the type of the function e.g. `map :: (a -&gt; b) -&gt; [a] -&gt; [b]` (of course the can be generalised) - I was hoping I could do the same in julia - I will google julia and iters and see what I find","user":"U014JNFUNG2","ts":"1615743593.214000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h0Eb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I have more than confusion - I have much to learn about julia - in haskell I can find the type of the function e.g. "},{"type":"text","text":"map :: (a -> b) -> [a] -> [b]","style":{"code":true}},{"type":"text","text":" (of course the can be generalised) - I was hoping I could do the same in julia - I will google julia and iters and see what I find"}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"b70afa3e-247a-4899-b6a5-a57525bfdaba","type":"message","text":"no, you cannot do that in Julia. In julia function does not have to be type stable. Of course, if the `f` is type stable, `map(f, ....)` will be type stable too. But in general, you shouldn't expect anything close to Haskell/OCaml level of (strict-ness) typing system","user":"UH8A351DJ","ts":"1615743672.214200","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1615743836.000000"},"blocks":[{"type":"rich_text","block_id":"juJCS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, you cannot do that in Julia. In julia function does not have to be type stable. Of course, if the "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" is type stable, "},{"type":"text","text":"map(f, ....)","style":{"code":true}},{"type":"text","text":" will be type stable too. But in general, you shouldn't expect anything close to Haskell/OCaml level of (strict-ness) typing system"}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"f5056d5e-8daa-4101-8620-357595d331eb","type":"message","text":"I need the book “Julia for Functional Programmers” :wink:","user":"U014JNFUNG2","ts":"1615743890.214900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nrvx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I need the book “Julia for Functional Programmers” "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"7cf20682-8aef-4c02-92aa-16a10a7c79fb","type":"message","text":"you can definitely do functional programming in Julia as it is multi-paradigm. But it's also a dynamically typed language just so you keep in mind you probably isn't going to get the same strict typing system you're used to.","user":"UH8A351DJ","ts":"1615744487.215200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lr3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can definitely do functional programming in Julia as it is multi-paradigm. But it's also a dynamically typed language just so you keep in mind you probably isn't going to get the same strict typing system you're used to."}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"b6076e0d-fac5-466d-bfdc-204dabebd553","type":"message","text":"This is tangential, but there was some interesting discussion of julia’s suitability for functional programming here (really, julia and lazy lists): <https://github.com/MikeInnes/Lazy.jl/issues/96> Would be curious to see what you all make of what GordonBGood said","user":"US8V7JSKB","ts":"1615745970.215400","team":"T68168MUP","edited":{"user":"US8V7JSKB","ts":"1615746055.000000"},"blocks":[{"type":"rich_text","block_id":"imM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is tangential, but there was some interesting discussion of julia’s suitability for functional programming here (really, julia and lazy lists): "},{"type":"link","url":"https://github.com/MikeInnes/Lazy.jl/issues/96"},{"type":"text","text":" Would be curious to see what you all make of what GordonBGood said"}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"},{"client_msg_id":"325c16cd-5fec-4e89-9ec2-e8bb13363678","type":"message","text":"Lazy.jl is a very small and personal utility pkg, I won't say anything regarding Julia based on the conversation which apparently never caused the creator Mike Innes to chime in. Nevertheless, it should be clear that if you want, it's easy to make something work in Julia -- the main complain seems to be Lazy.jl has too many features in one, not that something cannot be expressed in Julia.","user":"UH8A351DJ","ts":"1615746842.215700","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1615746929.000000"},"blocks":[{"type":"rich_text","block_id":"HAV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Lazy.jl is a very small and personal utility pkg, I won't say anything regarding Julia based on the conversation which apparently never caused the creator Mike Innes to chime in. Nevertheless, it should be clear that if you want, it's easy to make something work in Julia -- the main complain seems to be Lazy.jl has too many features in one, not that something cannot be expressed in Julia."}]}]}],"thread_ts":"1615696976.206200","parent_user_id":"US8V7JSKB"}]