[{"client_msg_id":"9d900783-ea15-44a1-ab05-47dcb1ebb379","type":"message","text":"I have a function that takes two arguments. One of those arguments is a function, and the other argument is mutated by my function. Which argument order makes more sense?\n1. `myfunction!(f::Function, thing_that_gets_mutated)`\n2. `myfunction!(thing_that_gets_mutated, f::Function, )`","user":"U7THT3TM3","ts":"1617952631.487700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gH10","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a function that takes two arguments. One of those arguments is a function, and the other argument is mutated by my function. Which argument order makes more sense?\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"myfunction!(f::Function, thing_that_gets_mutated)","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"myfunction!(thing_that_gets_mutated, f::Function, )","style":{"code":true}}]}],"style":"ordered","indent":0}]}],"thread_ts":"1617952631.487700","reply_count":7,"reply_users_count":5,"latest_reply":"1618132695.058100","reply_users":["UPSSPPBFV","U01T4LA4RJ8","UM4TSHKF1","U019K6Q9N15","UB7JS9CHF"],"is_locked":false,"subscribed":false},{"client_msg_id":"962b6fa3-b35b-408b-af68-fbac8767d4a3","type":"message","text":"Putting the function first allows one to use the `do... end` syntax, so it's the usual and recommended order.","user":"UPSSPPBFV","ts":"1617952740.487800","team":"T68168MUP","edited":{"user":"UPSSPPBFV","ts":"1617952822.000000"},"blocks":[{"type":"rich_text","block_id":"SECB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Putting the function first allows one to use the "},{"type":"text","text":"do... end","style":{"code":true}},{"type":"text","text":" syntax, so it's the usual and recommended order."}]}]}],"thread_ts":"1617952631.487700","parent_user_id":"U7THT3TM3","reactions":[{"name":"julia-plus-one-1","users":["U01QRM4E8HL","U01T4LA4RJ8"],"count":2},{"name":"point_up","users":["U6DN7UPJ7","U7HAYKY9X","U01QRM4E8HL","UBGJ599D3","UB7JS9CHF"],"count":5}]},{"client_msg_id":"90d6ef26-73b8-429f-a506-76e2b7275a13","type":"message","text":"The answer is the same, but I use the style guide to decide on stuff like this: <https://docs.julialang.org/en/v1/manual/style-guide/#Write-functions-with-argument-ordering-similar-to-Julia-Base>","user":"U01T4LA4RJ8","ts":"1617952839.488200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4ddvA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The answer is the same, but I use the style guide to decide on stuff like this: "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/style-guide/#Write-functions-with-argument-ordering-similar-to-Julia-Base"}]}]}],"thread_ts":"1617952631.487700","parent_user_id":"U7THT3TM3","reactions":[{"name":"100","users":["UPSSPPBFV","U7HAYKY9X","U01QRM4E8HL","U6A936746"],"count":4}]},{"client_msg_id":"ed7e109b-55c9-422c-9ab0-15c096ea9ca9","type":"message","text":"I'm of the opposite mindset, preferring the target/input being the first argument for functions.","user":"UM4TSHKF1","ts":"1617974971.498800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C2g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm of the opposite mindset, preferring the target/input being the first argument for functions."}]}]}],"thread_ts":"1617952631.487700","parent_user_id":"U7THT3TM3"},{"client_msg_id":"30604f5b-5383-4d3d-8887-55e31ab53abd","type":"message","text":"But that's not just a matter of preference. One order allows for more ways of writing things, while the other prevents the use of the very useful `do... end` syntax. The two choices are not equivalent.","user":"UPSSPPBFV","ts":"1617975110.499000","team":"T68168MUP","edited":{"user":"UPSSPPBFV","ts":"1617975131.000000"},"blocks":[{"type":"rich_text","block_id":"ea3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But that's not just a matter of preference. One order allows for more ways of writing things, while the other prevents the use of the very useful "},{"type":"text","text":"do... end","style":{"code":true}},{"type":"text","text":" syntax. The two choices are not equivalent."}]}]}],"thread_ts":"1617952631.487700","parent_user_id":"U7THT3TM3"},{"client_msg_id":"c6e1b18a-1007-49b1-9a77-a7b32d0100d3","type":"message","text":"In languages with currying-- including Julia DSLs like Chain.jl-- one fun way to go about this problem (ignoring <@UPSSPPBFV> ' definitive point) is to consider which argument will have less variance across the potential callsites in your application. If you set that argument to be first, you can curry the function and then pass it around your application fewer times then if you set the other argument to be first.","user":"U019K6Q9N15","ts":"1617987979.016500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rux","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In languages with currying-- including Julia DSLs like Chain.jl-- one fun way to go about this problem (ignoring "},{"type":"user","user_id":"UPSSPPBFV"},{"type":"text","text":" ' definitive point) is to consider which argument will have less variance across the potential callsites in your application. If you set that argument to be first, you can curry the function and then pass it around your application fewer times then if you set the other argument to be first."}]}]}],"thread_ts":"1617952631.487700","parent_user_id":"U7THT3TM3"},{"client_msg_id":"94c5cc65-78b5-4983-ba76-17bbf689ab72","type":"message","text":"Remember people, this is *Julia*! You can actually have methods with *both* orders, one with the function first, so that the `do` syntax works, and another that takes the mutated argument first.","user":"UB7JS9CHF","ts":"1618056001.036400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZnYEd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Remember people, this is "},{"type":"text","text":"Julia","style":{"bold":true}},{"type":"text","text":"! You can actually have methods with "},{"type":"text","text":"both","style":{"bold":true}},{"type":"text","text":" orders, one with the function first, so that the "},{"type":"text","text":"do","style":{"code":true}},{"type":"text","text":" syntax works, and another that takes the mutated argument first."}]}]}],"thread_ts":"1617952631.487700","parent_user_id":"U7THT3TM3"},{"client_msg_id":"f9e2cd1d-53f1-45d5-8301-06befe66ab8a","type":"message","text":"Maybe someone could make the `@interface_nightmare` macro that generates the n! different signatures for a function with n distinctly typed arguments :wink:","user":"U01T4LA4RJ8","ts":"1618132695.058100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H8y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe someone could make the "},{"type":"text","text":"@interface_nightmare","style":{"code":true}},{"type":"text","text":" macro that generates the n! different signatures for a function with n distinctly typed arguments "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1617952631.487700","parent_user_id":"U7THT3TM3"}]