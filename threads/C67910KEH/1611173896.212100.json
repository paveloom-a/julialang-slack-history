[{"client_msg_id":"910ed488-2cdb-4a69-8229-6887ddec64b7","type":"message","text":"<https://twitter.com/robsmallshire/status/1351982591319138305?s=19|https://twitter.com/robsmallshire/status/1351982591319138305?s=19>","user":"UDGT4PM41","ts":"1611173896.212100","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/robsmallshire|@robsmallshire>: I’m having a decidedly mixed experience with <https://twitter.com/JuliaLanguage|@JuliaLanguage> on my first non-trivial – but in no way substantial – project. Particularly testing, testability, and documentation. #JuliaLang","ts":1611172743,"author_name":"Robert Smallshire","author_link":"https://twitter.com/robsmallshire/status/1351982591319138305","author_icon":"https://pbs.twimg.com/profile_images/646266292429791232/hv3gI4dz_normal.jpg","author_subname":"@robsmallshire","text":"I’m having a decidedly mixed experience with <https://twitter.com/JuliaLanguage|@JuliaLanguage> on my first non-trivial – but in no way substantial – project. Particularly testing, testability, and documentation. #JuliaLang","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/robsmallshire/status/1351982591319138305?s=19","id":1,"original_url":"https://twitter.com/robsmallshire/status/1351982591319138305?s=19","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"sV3","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/robsmallshire/status/1351982591319138305?s=19","text":"https://twitter.com/robsmallshire/status/1351982591319138305?s=19"}]}]}],"thread_ts":"1611173896.212100","reply_count":126,"reply_users_count":16,"latest_reply":"1611355266.106900","reply_users":["U7HAYKY9X","UDB26738Q","U6795JH6H","UH24GRBLL","UDXST8ARK","U68UUUFPS","U9VG1AYSG","U0179G7FG4F","U6A936746","UTJT285RN","ULMSM9MAL","UD0NS8PDF","U6QPTG69E","U01KDRNJULA","U67D54KS8","U67SCG4HG"],"subscribed":false},{"client_msg_id":"0665a8b6-19ac-468a-be9c-a1f438deb523","type":"message","text":"Could be good to hear his perspective about what could be improved. How is testing bad, for example?","user":"U7HAYKY9X","ts":"1611173962.212500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CZpD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could be good to hear his perspective about what could be improved. How is testing bad, for example?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"b6e4ab5b-8a4d-49b2-a4b3-b478da6bed7b","type":"message","text":"<https://twitter.com/robsmallshire/status/1351982594141941765|https://twitter.com/robsmallshire/status/1351982594141941765> :fire:","user":"UDB26738Q","ts":"1611174191.212900","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/robsmallshire|@robsmallshire>: This old article from 2014 about #JuliaLang by <https://twitter.com/danluu|@danluu> resonates with my own experience on testing and documentation topics. No significant improvement since? Or improvement from a very low base?","ts":1611172743,"author_name":"Robert Smallshire","author_link":"https://twitter.com/robsmallshire/status/1351982594141941765","author_icon":"https://pbs.twimg.com/profile_images/646266292429791232/hv3gI4dz_normal.jpg","author_subname":"@robsmallshire","text":"This old article from 2014 about #JuliaLang by <https://twitter.com/danluu|@danluu> resonates with my own experience on testing and documentation topics. No significant improvement since? Or improvement from a very low base?","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/robsmallshire/status/1351982594141941765","id":1,"original_url":"https://twitter.com/robsmallshire/status/1351982594141941765","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"IIt2","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/robsmallshire/status/1351982594141941765","text":"https://twitter.com/robsmallshire/status/1351982594141941765"},{"type":"text","text":" "},{"type":"emoji","name":"fire"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"2cb64a5b-fffc-4899-8eab-90e1e851db93","type":"message","text":"takes that Julia doesn’t take testing seriously… I don’t get it","user":"U6795JH6H","ts":"1611174290.213400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nbFK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"takes that Julia doesn’t take testing seriously… I don’t get it"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"0c88264c-c811-4728-bb79-1e6f8821555c","type":"message","text":"the amount of time and energy we spend on testing the bejeezus out of everything","user":"U6795JH6H","ts":"1611174309.213600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IcSi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the amount of time and energy we spend on testing the bejeezus out of everything"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"6fc8c5a9-3876-4283-ba76-e24dc8cc61eb","type":"message","text":"I literally don’t know any other open source project as thoroughly end-to-end tested","user":"U6795JH6H","ts":"1611174331.213800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eAFz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I literally don’t know any other open source project as thoroughly end-to-end tested"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"ae14e3a3-7d21-4e72-98c5-f7685c75a037","type":"message","text":"LLVM doesn’t even run their test suite prior to merging PRs","user":"U6795JH6H","ts":"1611174343.214000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LDM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LLVM doesn’t even run their test suite prior to merging PRs"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"762b6ea9-4059-4834-8f56-18ed4d8653c9","type":"message","text":"<https://twitter.com/robsmallshire/status/1351982595542822912|https://twitter.com/robsmallshire/status/1351982595542822912> :fire: :fire: :fire:","user":"UDB26738Q","ts":"1611174369.214200","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/robsmallshire|@robsmallshire>: Support for unit testing seems particularly weak. I’ve yet to find good ways to run individual tests by name. The TDD cycle feels clunky, maybe because testing isn’t an important activity in #JuliaLang culture. Feels a bit out of time. Anachronistic. Slow compiler adds friction.","ts":1611172744,"author_name":"Robert Smallshire","author_link":"https://twitter.com/robsmallshire/status/1351982595542822912","author_icon":"https://pbs.twimg.com/profile_images/646266292429791232/hv3gI4dz_normal.jpg","author_subname":"@robsmallshire","text":"Support for unit testing seems particularly weak. I’ve yet to find good ways to run individual tests by name. The TDD cycle feels clunky, maybe because testing isn’t an important activity in #JuliaLang culture. Feels a bit out of time. Anachronistic. Slow compiler adds friction.","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/robsmallshire/status/1351982595542822912","id":1,"original_url":"https://twitter.com/robsmallshire/status/1351982595542822912","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"4GHR","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/robsmallshire/status/1351982595542822912","text":"https://twitter.com/robsmallshire/status/1351982595542822912"},{"type":"text","text":" "},{"type":"emoji","name":"fire"},{"type":"text","text":" "},{"type":"emoji","name":"fire"},{"type":"text","text":" "},{"type":"emoji","name":"fire"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"edcd6e34-8cca-454b-b64a-bd6c50f569b1","type":"message","text":"it’s true that there isn’t good support in the standard testing framework for running just one set of tests","user":"U6795JH6H","ts":"1611174407.214500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jaN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it’s true that there isn’t good support in the standard testing framework for running just one set of tests"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["UDXST8ARK","U6A936746","U8D9768Q6","UBGJ599D3","UAREE2NMD","U9MED583T"],"count":6}]},{"client_msg_id":"b4a7b130-46e7-484d-9024-eaf5e171b249","type":"message","text":"I think he's talking about tools the individual developer has for testing their code? Coming from Python, Julia's testing is a godsend, but his two points to strike home for me:\n1. It's hard to tell Julia to only test a small part of the test suite.\n2. Running tests using ]test MyPackage incurs all precompilation time. AFAIK there is no way of using the test suite in a Revise workflow?","user":"U7HAYKY9X","ts":"1611174437.214700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oLzF0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think he's talking about tools the individual developer has for testing their code? Coming from Python, Julia's testing is a godsend, but his two points to strike home for me:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's hard to tell Julia to only test a small part of the test suite."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Running tests using ]test MyPackage incurs all precompilation time. AFAIK there is no way of using the test suite in a Revise workflow?"}]}],"style":"ordered","indent":0}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"2ea60874-834d-4650-b713-02d913968c6d","type":"message","text":"but that strikes me as an uncommon thing to do? I usually run my entire test suite when I’m developing","user":"U6795JH6H","ts":"1611174447.214900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G=GN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but that strikes me as an uncommon thing to do? I usually run my entire test suite when I’m developing"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"8f58e37a-73f8-4634-8a6f-c59774776f88","type":"message","text":"I often run small subsets. Especially BinaryBuilder, I never run the entire test suite, takes forever","user":"UDB26738Q","ts":"1611174504.215100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R7G/V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I often run small subsets. Especially BinaryBuilder, I never run the entire test suite, takes forever"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"20f33fe6-8af1-43e8-a3e6-4731a8bc0508","type":"message","text":"the way I do this is that I split my tests into `test/setup.jl` with all the things that are needed by tests and `test/runtests.jl` that includes that and then the tests themselves","user":"U6795JH6H","ts":"1611174522.215400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r9b3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the way I do this is that I split my tests into "},{"type":"text","text":"test/setup.jl","style":{"code":true}},{"type":"text","text":" with all the things that are needed by tests and "},{"type":"text","text":"test/runtests.jl","style":{"code":true}},{"type":"text","text":" that includes that and then the tests themselves"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"100","users":["UAUPJLBQX"],"count":1}]},{"client_msg_id":"d68c8374-ed64-49e8-b765-e917c7bb82bf","type":"message","text":"to run individual tests I do `include(\"test/setup.jl\")` and then I cut-and-paste what I’m testing in the REPL","user":"U6795JH6H","ts":"1611174548.216000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Rw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to run individual tests I do "},{"type":"text","text":"include(\"test/setup.jl\")","style":{"code":true}},{"type":"text","text":" and then I cut-and-paste what I’m testing in the REPL"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"79b3d69d-a3e3-4bb8-b144-389e9783572f","type":"message","text":"it’s very straightforward and maximally flexible","user":"U6795JH6H","ts":"1611174560.216400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"99Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it’s very straightforward and maximally flexible"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"aa133e9a-e568-46fe-986f-407527d30759","type":"message","text":"revise can be used with this workflow trivially, just do `using Revise` at the start","user":"U6795JH6H","ts":"1611174578.216800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bVRu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"revise can be used with this workflow trivially, just do "},{"type":"text","text":"using Revise","style":{"code":true}},{"type":"text","text":" at the start"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"4403ed32-1baa-4050-be7a-09e29dcc3b93","type":"message","text":"I usually have all my tests in functions and call the main entry point at the end if `!isinteractive()`","user":"UH24GRBLL","ts":"1611174612.217600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zr+iq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I usually have all my tests in functions and call the main entry point at the end if "},{"type":"text","text":"!isinteractive()","style":{"code":true}}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"7e5d3eda-3cf9-4767-b99a-3b646e815d74","type":"message","text":"That's clever. Even better with the \"execute top-level expression\" thing in VSCode, then you can easily execute a testset with a tap","user":"U7HAYKY9X","ts":"1611174648.218400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aArqq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's clever. Even better with the \"execute top-level expression\" thing in VSCode, then you can easily execute a testset with a tap"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"89ff9eaa-33d6-4a69-a874-92ce65b1de55","type":"message","text":"Frankly, I feel like the Test stdlib could do with some more love, but I wouldn't deem it bad","user":"UDB26738Q","ts":"1611174692.219400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aS5D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Frankly, I feel like the Test stdlib could do with some more love, but I wouldn't deem it bad"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["UDXST8ARK","U0179G7FG4F","UAREE2NMD"],"count":3}]},{"client_msg_id":"eb06a78d-2564-46f9-b291-dbbd371dbd1a","type":"message","text":"What would you like the most to see?","user":"U7HAYKY9X","ts":"1611174725.219800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+G+U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What would you like the most to see?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"6a19280a-9bda-4f9c-b633-111cc37a411b","type":"message","text":"I don’t disagree with that at all, but at this point I’m unlikely to ever get to it","user":"U6795JH6H","ts":"1611174744.220000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CeOe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t disagree with that at all, but at this point I’m unlikely to ever get to it"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"769eec9c-e7bd-4419-8712-52118d0aed3c","type":"message","text":"having a good way to select individual test sets would be good","user":"U6795JH6H","ts":"1611175185.222400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ne3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"having a good way to select individual test sets would be good"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"f556365f-996b-48a4-b0b3-ec207dbe0faa","type":"message","text":"more easily running a subset of tests would be a nice feature :slightly_smiling_face:\nOtherwise my experience is that writing tests in Julia is very pleasant and easy, and that failed tests are usually fairly easy to understand (e.g. test failures often print both the expression and what was evaluated)","user":"UDXST8ARK","ts":"1611175233.222800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jX+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"more easily running a subset of tests would be a nice feature "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\nOtherwise my experience is that writing tests in Julia is very pleasant and easy, and that failed tests are usually fairly easy to understand (e.g. test failures often print both the expression and what was evaluated)"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"94998e77-071d-433f-95ec-6c814958d634","type":"message","text":"a counterpoint to this twitter thread is that although Julia’s stdlib test infrastructure is not very sophisticated, it is dead simple and obvious how to use and as a result everyone does use it","user":"U6795JH6H","ts":"1611175252.223000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=tr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a counterpoint to this twitter thread is that although Julia’s stdlib test infrastructure is not very sophisticated, it is dead simple and obvious how to use and as a result everyone does use it"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"heavy_check_mark","users":["UDXST8ARK","UH24GRBLL","UKG4WF8PJ","U7THT3TM3","UC7FP1MQV","UAREE2NMD","U9MED583T"],"count":7}]},{"client_msg_id":"93381955-e739-4dcc-a1be-3d37f5fdb3f3","type":"message","text":"try learning how to use testing frameworks in other languages — it’s very non-obvious","user":"U6795JH6H","ts":"1611175284.223400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rAkX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"try learning how to use testing frameworks in other languages — it’s very non-obvious"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"156123c6-b025-4334-aaaf-eaece67cc2f9","type":"message","text":"The VS Code team is currently designing a new test API, which would allow extensions to hook into a common UI for running tests (<https://github.com/microsoft/vscode/issues/107467>). If anyone were to improve the testing story in base it might make sense to take a look where the VS Code stuff is heading, so that we can at some point hook the Julia testing story into that VS Code UI story easily.","user":"U68UUUFPS","ts":"1611175708.225700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5ivz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The VS Code team is currently designing a new test API, which would allow extensions to hook into a common UI for running tests ("},{"type":"link","url":"https://github.com/microsoft/vscode/issues/107467"},{"type":"text","text":"). If anyone were to improve the testing story in base it might make sense to take a look where the VS Code stuff is heading, so that we can at some point hook the Julia testing story into that VS Code UI story easily."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"100","users":["U6795JH6H","UAREE2NMD","U9MED583T"],"count":3}]},{"client_msg_id":"bba549d0-7e30-489c-80ec-acd7c93e4ef9","type":"message","text":"seems like an excellent direction to pursue","user":"U6795JH6H","ts":"1611175740.226200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5ae","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"seems like an excellent direction to pursue"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"cca2b721-431c-4db9-9fba-063231d45a6a","type":"message","text":"it would be really nice to have a way to run only a particular test set in a single command.  Otherwise, I don't get what the complaint is","user":"U9VG1AYSG","ts":"1611176271.227400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pxc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it would be really nice to have a way to run only a particular test set in a single command.  Otherwise, I don't get what the complaint is"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"54ff5d0e-d8d5-4b38-a36b-89c7907e95c7","type":"message","text":"I've actually seen complaints about Julia's testing a number of times, but they are almost exclusively unspecific, so I don't know what conclusion to draw from them and usually dismiss them","user":"U9VG1AYSG","ts":"1611176546.228500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1qYO7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've actually seen complaints about Julia's testing a number of times, but they are almost exclusively unspecific, so I don't know what conclusion to draw from them and usually dismiss them"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"b8fb91be-7e76-4854-823d-3c68523d0886","type":"message","text":"it would be really cool if we could get a group of those people together for a usability study (i.e. get them live coding on video to understand what their ideal workflow would be)","user":"U0179G7FG4F","ts":"1611176680.229000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ghlw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it would be really cool if we could get a group of those people together for a usability study (i.e. get them live coding on video to understand what their ideal workflow would be)"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"e067e67e-90a0-4774-8947-2f27152188a0","type":"message","text":"A major problem with the strategy of copy-pasting tests into REPL or running via running highlight section in VS-Code\n(Which I do a lot also)\nis test time dependencies.\n\nThere is no easy way to activate the test enviroment.\nIf you are willing to drop 1.0/1.1 support then you can do the seperating things into a `test/Project.toml`  and then `push!(Base.LOAD_PATH, \"./test\")` .\nBut that is pretty unobvious.\n(and requires dropping 1.0/1.1)\n\nI feel like that workflow would be substantially enhanced if we did <https://github.com/JuliaLang/Pkg.jl/issues/1092>\nor some other thing that let one just activate the test enviroment no matter if it was thbe main Project.toml or a seperate one.\n\nWith that said though, while i think that fixing this would enhance that workflow.\nI don’t think that workflow comes naturally to all new julia users.\nA lot of people don’t have very REPL centric development workflows of constanty trying things out in the REPL.","user":"U6A936746","ts":"1611176692.229200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U2INK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A major problem with the strategy of copy-pasting tests into REPL or running via running highlight section in VS-Code\n(Which I do a lot also)\nis test time dependencies.\n\nThere is no easy way to activate the test enviroment.\nIf you are willing to drop 1.0/1.1 support then you can do the seperating things into a "},{"type":"text","text":"test/Project.toml","style":{"code":true}},{"type":"text","text":"  and then "},{"type":"text","text":"push!(Base.LOAD_PATH, \"./test\")","style":{"code":true}},{"type":"text","text":" .\nBut that is pretty unobvious.\n(and requires dropping 1.0/1.1)\n\nI feel like that workflow would be substantially enhanced if we did "},{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/issues/1092"},{"type":"text","text":"\nor some other thing that let one just activate the test enviroment no matter if it was thbe main Project.toml or a seperate one.\n\nWith that said though, while i think that fixing this would enhance that workflow.\nI don’t think that workflow comes naturally to all new julia users.\nA lot of people don’t have very REPL centric development workflows of constanty trying things out in the REPL."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["UTJT285RN","UDXST8ARK","U01KDRNJULA","U6795JH6H"],"count":4},{"name":"100","users":["UDXST8ARK"],"count":1}]},{"client_msg_id":"e9dca1b9-32d8-4e82-ab0c-965d63fb6567","type":"message","text":"yeah, we need subprojects","user":"U6795JH6H","ts":"1611176730.229400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+r/wO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, we need subprojects"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"efc6aa68-ceb2-4e15-8339-3f81dee2233d","type":"message","text":"The other alternative to running bit of my tests in the REPL, which i do is commenting out some of the includes in my top level `runtests.jl`\nDoing that doesn’t run into issue with loading dependencies.","user":"U6A936746","ts":"1611176759.229600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y6q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The other alternative to running bit of my tests in the REPL, which i do is commenting out some of the includes in my top level "},{"type":"text","text":"runtests.jl","style":{"code":true}},{"type":"text","text":"\nDoing that doesn’t run into issue with loading dependencies."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"f9ea6240-7af5-4d69-9671-cb7faeb8c7fe","type":"message","text":"Yes, that's what I usually do","user":"UDB26738Q","ts":"1611176834.229800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NH7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, that's what I usually do"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"de155a27-6919-43e5-8fc0-1e1b5c890e0f","type":"message","text":"And try to mirror the files in the source, so it's easy to know what file I want to test","user":"UDB26738Q","ts":"1611176872.230200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dMM82","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And try to mirror the files in the source, so it's easy to know what file I want to test"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"100","users":["U6A936746"],"count":1}]},{"client_msg_id":"f618fce1-2c1d-4403-b5bc-b02344880519","type":"message","text":"<@U7HAYKY9X> Why do you say Julia testing is a godsend coming from Python? Judging by my Python programing friend, Julia's approach to testing is a weak point? I don't know Python well enough to know how Python compares in this area? Why would you prefer Julia with respect to testing? The JIT lag seems to me to a be a disadvantage for Julia with respect to testing.","user":"UTJT285RN","ts":"1611176941.230400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ncEi","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" Why do you say Julia testing is a godsend coming from Python? Judging by my Python programing friend, Julia's approach to testing is a weak point? I don't know Python well enough to know how Python compares in this area? Why would you prefer Julia with respect to testing? The JIT lag seems to me to a be a disadvantage for Julia with respect to testing."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"7140681e-32ee-418c-b0cf-5944301b18e1","type":"message","text":"But anyway, I don’t think this would make all newcomers happy. Since it is not the workflow they are used to.\n\nOne significant difference between our testsets and the kind of that XUnit etc allows,\nis out testset can be nested arbitarily,\nand can depend on the results of previous testsets, or code that is in the top of (rather than only on specifically marked setup/teardown fixtures).\n\nE.g.\n```@testset \"outer\" begin\n    data=[...]\n    @testset \"foo\" begin\n        @test foo(data) == ...\n    end\n    @testset \"bar\" begin\n       @test bar(data) ==...\n    end\nend```\n\nSo to run `outer/bar` you really want to a kind of Pluto-like tracing of where things are used so you can run the prereqs.","user":"U6A936746","ts":"1611177154.230600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Sa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But anyway, I don’t think this would make all newcomers happy. Since it is not the workflow they are used to.\n\nOne significant difference between our testsets and the kind of that XUnit etc allows,\nis out testset can be nested arbitarily,\nand can depend on the results of previous testsets, or code that is in the top of (rather than only on specifically marked setup/teardown fixtures).\n\nE.g.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@testset \"outer\" begin\n    data=[...]\n    @testset \"foo\" begin\n        @test foo(data) == ...\n    end\n    @testset \"bar\" begin\n       @test bar(data) ==...\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nSo to run "},{"type":"text","text":"outer/bar","style":{"code":true}},{"type":"text","text":" you really want to a kind of Pluto-like tracing of where things are used so you can run the prereqs."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"325663f3-c495-4634-95d3-b715471fa97c","type":"message","text":"Like pytest fixtures?","user":"UDB26738Q","ts":"1611177228.230800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sjl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like pytest fixtures?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"a795f860-aa55-4140-b6fa-e906b00c4ff6","type":"message","text":"<@U7HAYKY9X> Some of the Rob had with Julia testing was: 1) The way it `pkg&gt; test` works. Like how lots of package status stuff is printed out, obscuring the important info. 2) No simple obvious way to run individual tests. 3) How slow it is if you do  `pkg&gt; test`.  4) Lack of a system for fixtures.","user":"UTJT285RN","ts":"1611177274.231000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YTX3n","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" Some of the Rob had with Julia testing was: 1) The way it "},{"type":"text","text":"pkg> test","style":{"code":true}},{"type":"text","text":" works. Like how lots of package status stuff is printed out, obscuring the important info. 2) No simple obvious way to run individual tests. 3) How slow it is if you do  "},{"type":"text","text":"pkg> test","style":{"code":true}},{"type":"text","text":".  4) Lack of a system for fixtures."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"93106cad-661c-4391-a03e-25c5b0e87e7d","type":"message","text":"1 is pretty questionable, I find that extremely useful. 2 and 4 are fair, 3 is unclear","user":"UDB26738Q","ts":"1611177401.231200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OgS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1 is pretty questionable, I find that extremely useful. 2 and 4 are fair, 3 is unclear"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["UDXST8ARK","U9MED583T"],"count":2}]},{"client_msg_id":"66c5e475-6b3b-4d25-8628-b3e1c0520df8","type":"message","text":"<@U6A936746> I was not able to give a good answer to how to think about fixtures in Julia. In your example code you got `data=[...]` is that sort of a fixture in this context?","user":"UTJT285RN","ts":"1611177474.231400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kS8","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6A936746"},{"type":"text","text":" I was not able to give a good answer to how to think about fixtures in Julia. In your example code you got "},{"type":"text","text":"data=[...] ","style":{"code":true}},{"type":"text","text":"is that sort of a fixture in this context?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"24a1f70f-f0a1-46b6-9a03-ef3283bb2933","type":"message","text":"&gt;  In your example code you got `data=[...]` is that sort of a fixture in this context?\n\nYes.","user":"U6A936746","ts":"1611177544.231600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rrg","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" In your example code you got "},{"type":"text","text":"data=[...] ","style":{"code":true}},{"type":"text","text":"is that sort of a fixture in this context?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nYes."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"b7aced86-2df5-4573-9b67-a63ffd2dceb9","type":"message","text":"in julia testsets, you have access to variables defined outside of the testset","user":"UH24GRBLL","ts":"1611177624.231800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HV0W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in julia testsets, you have access to variables defined outside of the testset"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"2964edb5-e05c-4698-b4ad-3415f2e56786","type":"message","text":"<@UDB26738Q> Comment on (3). If you run tests from Pkg mode Julia will check all the package dependencies, and you get overhead of starting up Julia and JITing everything over again. Thus tests run kind of slow. For me this doesn't matter. As I don't run tests frequently. I don't do TDD. But if you want to run all tests every time you make a minor code modification then this quickly gets too time consuming.","user":"UTJT285RN","ts":"1611177630.232000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IL4F","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" Comment on (3). If you run tests from Pkg mode Julia will check all the package dependencies, and you get overhead of starting up Julia and JITing everything over again. Thus tests run kind of slow. For me this doesn't matter. As I don't run tests frequently. I don't do TDD. But if you want to run all tests every time you make a minor code modification then this quickly gets too time consuming."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"b25ccea8-4ce0-40e9-8358-2db876e6147f","type":"message","text":"so a \"fixture\" is just a regular ol' variable","user":"UH24GRBLL","ts":"1611177637.232200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o6M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so a \"fixture\" is just a regular ol' variable"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"b35839e9-0ba8-4d07-951d-89acfd9d09b8","type":"message","text":"I think both that, *and* traditional test-fixtures.\nare basically an antipattern most of the time though.\n\nTest setup should be self-contained close to where they are tested\nAnd if your test setup is so complex you can’t do so, then your tests are probably too complex.\nIf you really need it, then a normal helper function is better.","user":"U6A936746","ts":"1611177693.232400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yh35","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think both that, "},{"type":"text","text":"and","style":{"bold":true}},{"type":"text","text":" traditional test-fixtures.\nare basically an antipattern most of the time though.\n\nTest setup should be self-contained close to where they are tested\nAnd if your test setup is so complex you can’t do so, then your tests are probably too complex.\nIf you really need it, then a normal helper function is better."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"090a22bb-0a3d-4c0a-9cc7-44249f76d656","type":"message","text":"<@UH24GRBLL> <@U6A936746> I guess the problem is if the fixture is n object that gets mutated hence you want to recreate it for each test.","user":"UTJT285RN","ts":"1611177697.232600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SEZG","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UH24GRBLL"},{"type":"text","text":" "},{"type":"user","user_id":"U6A936746"},{"type":"text","text":" I guess the problem is if the fixture is n object that gets mutated hence you want to recreate it for each test."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"24469070-d11c-4856-940e-e4e3d361dabc","type":"message","text":"For small modifications I test the function in the REPL, with Revise, when I'm done I run the tests","user":"UDB26738Q","ts":"1611177802.232800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v5a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For small modifications I test the function in the REPL, with Revise, when I'm done I run the tests"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"4c803824-dc1a-4af7-9b50-ac411e22c147","type":"message","text":"Yeah Lyndon I would personally agree. I have pretty much never used test fixtures. I have usually used helper functions. But I don't always have great answers to those who have very particular ideas on how proper testing should be done. And what is considered the \"industry\" standard way of doing things.","user":"UTJT285RN","ts":"1611177809.233000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tOVp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah Lyndon I would personally agree. I have pretty much never used test fixtures. I have usually used helper functions. But I don't always have great answers to those who have very particular ideas on how proper testing should be done. And what is considered the \"industry\" standard way of doing things."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"509067bc-3996-4778-9b7b-5336647b05c5","type":"message","text":"<@UDB26738Q> Yeah that sounds like how I am used to doing it, but my workflow is very REPL oriented. I don't know if that is the normal way for most Julia developers. At least I get the impression that us Julia developers use the REPL a lot more actively than Python developers.","user":"UTJT285RN","ts":"1611178038.234400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IyD6","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" Yeah that sounds like how I am used to doing it, but my workflow is very REPL oriented. I don't know if that is the normal way for most Julia developers. At least I get the impression that us Julia developers use the REPL a lot more actively than Python developers."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"063b788f-bebf-4646-85ce-5339ba839d02","type":"message","text":"Python doesn't a REPL :smirk:","user":"UDB26738Q","ts":"1611178071.235200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"53YN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Python doesn't a REPL "},{"type":"emoji","name":"smirk"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"troll","users":["U6A936746"],"count":1},{"name":"correct_answer","users":["UDXST8ARK"],"count":1}]},{"client_msg_id":"6b6bb44b-979b-4df1-8b3f-9c49c109bd23","type":"message","text":"yes it does","user":"U0179G7FG4F","ts":"1611178124.236700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hFnZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes it does"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"f4d78eab-d57b-4ab8-b26c-ae357f0c6f8c","type":"message","text":"Does it print on assignment?","user":"UDB26738Q","ts":"1611178247.238600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lVe/4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does it print on assignment?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"0ffea67d-2615-4f86-b38f-60181e22a38e","type":"message","text":"I think ipython does","user":"U0179G7FG4F","ts":"1611178387.240300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oq7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think ipython does"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"66cb27f0-449d-4bba-b511-37e837324ed7","type":"message","text":"<@U0179G7FG4F> Yes, I found it really useful to sit with a Python developer getting accustomed to Julia. When you use Julia for a long time. You develop habits that fit the language. People coming from other language will have very different habits, that they want to transfer to Julia.","user":"UTJT285RN","ts":"1611179732.243700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bYyli","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0179G7FG4F"},{"type":"text","text":" Yes, I found it really useful to sit with a Python developer getting accustomed to Julia. When you use Julia for a long time. You develop habits that fit the language. People coming from other language will have very different habits, that they want to transfer to Julia."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"5143f2ba-3fc2-426c-a8e9-56768d1c1084","type":"message","text":"Is anyone familiar with Rust's approach do unit tests? I.e. having the test modules inside of the file they're testing.\nI find that quite intriguing for iterative approaches once you're used to it","user":"ULMSM9MAL","ts":"1611213959.003500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Owxi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is anyone familiar with Rust's approach do unit tests? I.e. having the test modules inside of the file they're testing.\nI find that quite intriguing for iterative approaches once you're used to it"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"91d0fb0b-d3f1-4635-98ff-ded6bff9da34","type":"message","text":"I see RelationalAI just open sourced an alternative unit testing package \n<https://github.com/RelationalAI-oss/XUnit.jl|https://github.com/RelationalAI-oss/XUnit.jl>\n(as part of <https://julialang.org/blog/2021/01/contributhon/|https://julialang.org/blog/2021/01/contributhon/>). Not tried it yet.","user":"UDXST8ARK","ts":"1611222543.006000","team":"T68168MUP","attachments":[{"title":"The 2020 Industry Julia Users Contributhon","title_link":"https://julialang.org/blog/2021/01/contributhon/","text":"A Look Back At The 2020 Industry Julia Users Contributhon","fallback":"The 2020 Industry Julia Users Contributhon","image_url":"https://julialang.org/assets/images/julia-open-graph.png","from_url":"https://julialang.org/blog/2021/01/contributhon/","image_width":500,"image_height":250,"image_bytes":742374,"service_name":"julialang.org","id":1,"original_url":"https://julialang.org/blog/2021/01/contributhon/"}],"blocks":[{"type":"rich_text","block_id":"/Zy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see RelationalAI just open sourced an alternative unit testing package \n"},{"type":"link","url":"https://github.com/RelationalAI-oss/XUnit.jl","text":"https://github.com/RelationalAI-oss/XUnit.jl"},{"type":"text","text":"\n(as part of "},{"type":"link","url":"https://julialang.org/blog/2021/01/contributhon/","text":"https://julialang.org/blog/2021/01/contributhon/"},{"type":"text","text":"). Not tried it yet."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"9faac19c-13f4-468e-9ffc-18d0cc121823","type":"message","text":"that looks very nice! on the other hand, one will note that it immediately makes writing tests much more daunting","user":"U6795JH6H","ts":"1611238013.008400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e/mU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that looks very nice! on the other hand, one will note that it immediately makes writing tests much more daunting"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"c4839614-5b7c-4ceb-928d-2b7b757c67d0","type":"message","text":"you need to know about concepts like test runners and failure handlers","user":"U6795JH6H","ts":"1611238066.008600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IaP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you need to know about concepts like test runners and failure handlers"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"f041b4aa-cc91-4e86-ac45-e30257c16cf4","type":"message","text":"I think it's a good thing as a package, but I wouldn't want to have this by default in Base","user":"UH24GRBLL","ts":"1611238088.008800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Maa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it's a good thing as a package, but I wouldn't want to have this by default in Base"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"0b32b502-070a-4cc1-9d97-fdd2def146c6","type":"message","text":"indeed, this kind of more sophisticated test functionality is perfect for packages","user":"U6795JH6H","ts":"1611238112.009000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sd2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"indeed, this kind of more sophisticated test functionality is perfect for packages"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["UDXST8ARK"],"count":1}]},{"client_msg_id":"1ac5884e-370d-4ca6-8451-5b4af3ed9651","type":"message","text":"So what can we do here to have something actionable to improve Julia? As far as I can see, the complaints break down to three categories:\n1. The ones that complain about problems innate in Julia, like the long startup time incurred when running the entire test suite from scratch. I don't think we can do much about that.\n2. The ones that result from people having inefficient workflows for Julia. This can be helped by having a \"best practices\" section of the Test section in Julia's docs, or perhaps amend the section in \"Workflow tips\". Right now, that section recommends `include` 'ing your test file, but the workflow recommended by Stefan does seem better. In fact, I think a LOT of the gripes we hear from Julia neophytes stem from having workflows that are inefficient for Julia.\n3. The ones where `Test` can be improved, namely\n• A way to run only a single/ a few test set(s), perhaps with something like `pkg&gt; test MyPackage --sets set1 set2 set3`  , which would ignore all top-level test sets in `runtests.jl` not called \"set1\", \"set2\" or \"set3\".\n• A better way to handle test dependencies. There was already issue 1092 in Pkg, not sure what else to do there.","user":"U7HAYKY9X","ts":"1611240292.010500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2+D6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So what can we do here to have something actionable to improve Julia? As far as I can see, the complaints break down to three categories:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The ones that complain about problems innate in Julia, like the long startup time incurred when running the entire test suite from scratch. I don't think we can do much about that."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The ones that result from people having inefficient workflows for Julia. This can be helped by having a \"best practices\" section of the Test section in Julia's docs, or perhaps amend the section in \"Workflow tips\". Right now, that section recommends "},{"type":"text","text":"include","style":{"code":true}},{"type":"text","text":" 'ing your test file, but the workflow recommended by Stefan does seem better. In fact, I think a LOT of the gripes we hear from Julia neophytes stem from having workflows that are inefficient for Julia."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The ones where "},{"type":"text","text":"Test","style":{"code":true}},{"type":"text","text":" can be improved, namely"}]}],"style":"ordered","indent":0},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A way to run only a single/ a few test set(s), perhaps with something like "},{"type":"text","text":"pkg> test MyPackage --sets set1 set2 set3 ","style":{"code":true}},{"type":"text","text":" , which would ignore all top-level test sets in "},{"type":"text","text":"runtests.jl","style":{"code":true}},{"type":"text","text":" not called \"set1\", \"set2\" or \"set3\"."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"A better way to handle test dependencies. There was already issue 1092 in Pkg, not sure what else to do there."}]}],"style":"bullet","indent":0}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["U6A936746","U6795JH6H","U9MED583T"],"count":3}]},{"client_msg_id":"ef3ec165-a9c2-4115-85b9-8190864f94c9","type":"message","text":"```A way to run only a single/ a few test set(s), perhaps with something like pkg&gt; test MyPackage --sets set1 set2 set3  ```\nIIRC `test` actually will set `Sys.ARGS` on the testing process.\nso you can build this in a package.\nI kind of think that is the best way forward on this in particular.\n\nA package `TestX.jl` which imitates the public API of `Base.Test` by defining its own `@testset` and re-exporting `@test` etc.\nand then uses `Sys.ARGS` to access that list,\nand then works out which things to run.\n\nProbably it’s `@testset` needs to not output code to run,\nbut rather output something that defines a function, and maybe adds that function into a global datastructure,\nwhich can ten be filtered and etc.\n\nAdvantage of doing it in a package is lots of space to experiment, including running it on existing big packages with lots of tests, and complex tests.\nAlso can be compatible with old julia versions.\nPlus trying to put things into standard libraries is hard enough in terms of bikesheding with adding not having the idea well proven first.\n\nThen if the package ends up good, we can think about somehow incorperating it into the Test standard library.","user":"U6A936746","ts":"1611240995.010800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hIRU","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"A way to run only a single/ a few test set(s), perhaps with something like pkg> test MyPackage --sets set1 set2 set3  "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIIRC "},{"type":"text","text":"test","style":{"code":true}},{"type":"text","text":" actually will set "},{"type":"text","text":"Sys.ARGS","style":{"code":true}},{"type":"text","text":" on the testing process.\nso you can build this in a package.\nI kind of think that is the best way forward on this in particular.\n\nA package "},{"type":"text","text":"TestX.jl","style":{"code":true}},{"type":"text","text":" which imitates the public API of "},{"type":"text","text":"Base.Test","style":{"code":true}},{"type":"text","text":" by defining its own "},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":" and re-exporting "},{"type":"text","text":"@test","style":{"code":true}},{"type":"text","text":" etc.\nand then uses "},{"type":"text","text":"Sys.ARGS","style":{"code":true}},{"type":"text","text":" to access that list,\nand then works out which things to run.\n\nProbably it’s "},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":" needs to not output code to run,\nbut rather output something that defines a function, and maybe adds that function into a global datastructure,\nwhich can ten be filtered and etc.\n\nAdvantage of doing it in a package is lots of space to experiment, including running it on existing big packages with lots of tests, and complex tests.\nAlso can be compatible with old julia versions.\nPlus trying to put things into standard libraries is hard enough in terms of bikesheding with adding not having the idea well proven first.\n\nThen if the package ends up good, we can think about somehow incorperating it into the Test standard library."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"7498b468-6ecb-4a58-9158-c40903818d7e","type":"message","text":"Can some of this be prototyped in a package? Something like `test MyPackage --sets set1 set2` could be done by scanning `runtests.jl` &amp; running all code outside testests, then only the top-level sets named. (I think each `@testset` introduces scope, right?) Ideally it could also prototype running this via DaemonMode (or the equivalent) to make it fast.","user":"UD0NS8PDF","ts":"1611241048.011000","team":"T68168MUP","edited":{"user":"UD0NS8PDF","ts":"1611241427.000000"},"blocks":[{"type":"rich_text","block_id":"KnN/w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can some of this be prototyped in a package? Something like "},{"type":"text","text":"test MyPackage --sets set1 set2","style":{"code":true}},{"type":"text","text":" could be done by scanning "},{"type":"text","text":"runtests.jl","style":{"code":true}},{"type":"text","text":" & running all code outside testests, then only the top-level sets named. (I think each "},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":" introduces scope, right?) Ideally it could also prototype running this via DaemonMode (or the equivalent) to make it fast."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"ninja","users":["U6A936746"],"count":1},{"name":"+1","users":["U6A936746"],"count":1},{"name":"slow_parrot","users":["UD0NS8PDF"],"count":1}]},{"client_msg_id":"427a66b9-c7a9-4b15-8191-66ecc6c33dfe","type":"message","text":"Not needing any changes to the package whose tests you want to run would be a huge plus. One very nice feature of the current ecosystem is that if you want to fix something in someone else’s package, you don’t first have to understand some particular test framework they chose to use. And the changes proposed here seem mostly for interactive use, while CI can run the whole thing as usual.","user":"UD0NS8PDF","ts":"1611241251.011700","team":"T68168MUP","edited":{"user":"UD0NS8PDF","ts":"1611241897.000000"},"blocks":[{"type":"rich_text","block_id":"Tke","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not needing any changes to the package whose tests you want to run would be a huge plus. One very nice feature of the current ecosystem is that if you want to fix something in someone else’s package, you don’t first have to understand some particular test framework they chose to use. And the changes proposed here seem mostly for interactive use, while CI can run the whole thing as usual."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"heavy_check_mark","users":["U6795JH6H","UDXST8ARK","U9MED583T"],"count":3}]},{"client_msg_id":"de9930bc-49c2-49a4-9be6-0a712eb04c86","type":"message","text":"Its interesting we actually have like at least 3 testing packages that are entire replacements for the `Base.Test`  AFAIK they are almost unused?","user":"U6A936746","ts":"1611241322.012200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wnb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its interesting we actually have like at least 3 testing packages that are entire replacements for the "},{"type":"text","text":"Base.Test","style":{"code":true}},{"type":"text","text":"  AFAIK they are almost unused?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"8ac617c7-b0e1-4f4c-be9c-192aa7ad19bc","type":"message","text":"&gt; Not needing any changes to the package whose tests you want to run would be a huge plus.\nIn my not-yet-ready package ReTest, this is exactly what I was planning to try to do; currently it's mostly enough to change `using Test` to `using ReTest`, but a hack should be possible to avoid even having to do that manually","user":"U6QPTG69E","ts":"1611241575.012800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EmFH","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Not needing any changes to the package whose tests you want to run would be a huge plus."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIn my not-yet-ready package ReTest, this is exactly what I was planning to try to do; currently it's mostly enough to change "},{"type":"text","text":"using Test","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"using ReTest","style":{"code":true}},{"type":"text","text":", but a hack should be possible to avoid even having to do that manually"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"heart_eyes","users":["U6A936746","U6795JH6H"],"count":2}]},{"client_msg_id":"f14a54ab-4f36-4273-b2d8-f1e3da622b93","type":"message","text":"(<https://github.com/JuliaTesting/ReTest.jl>)","user":"U6QPTG69E","ts":"1611241578.013000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e9ZQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"("},{"type":"link","url":"https://github.com/JuliaTesting/ReTest.jl"},{"type":"text","text":")"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"c9473288-eb7e-4212-888b-d43cfeb993e2","type":"message","text":"<@U7HAYKY9X> 1) Most obvious issue I can see here is that `pkg&gt; test` is such an obvious first way to try to run tests. We would guide people more easily to ways of doing this right by e.g. offering more options in package mode. How about:\n```pkg&gt; test --fast\npkg&gt; quicktest```\nSay both are equivalent of doing:\n```$ julia test/runtests.jl```","user":"UTJT285RN","ts":"1611269526.039300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pSHo","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" 1) Most obvious issue I can see here is that "},{"type":"text","text":"pkg> test","style":{"code":true}},{"type":"text","text":" is such an obvious first way to try to run tests. We would guide people more easily to ways of doing this right by e.g. offering more options in package mode. How about:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"pkg> test --fast\npkg> quicktest"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Say both are equivalent of doing:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"$ julia test/runtests.jl"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["U0179G7FG4F","U01KDRNJULA"],"count":2}]},{"client_msg_id":"43047fc9-9558-4fff-b128-79533b225595","type":"message","text":"Here’s my experience as a Julia neophyte with experience in a bunch of different programming languages (Python, C++, Java, C#, F#, Javascript, etc): I don’t always do TDD or test-first, but I do when either I’m not sure what direction I’m going in, or when I need to build confidence. I’m in a new language environment, ergo I need to build confidence. I want to take small steps and ratchet progress: I want to be able to write a test, and see that test fail. This is important to me because I want to know that the test will actually be discovered and executed by the test-runner. Pasting it into the REPL (with or without editor conveniences to make this slicker) subverts this check that test discovery and execution are working. Did I forget to `include()` the file containing the test somewhere? Then I want to write enough code to make the new test pass. During this part of the process I’m content to run only the new test, or locally important tests. I  probably don’t need to run the whole package test suite. When the test passes, I may set about refactoring the code. This may involve deduplicating or further abstracting what I’ve done, and occasionally involves pretty substantial rework. The refactoring may well touch production code other than the new code. During and after this step, I usually want to run _all_ the tests to ensure I haven’t broken anything before moving on to implementing next behaviour.\nI like my tests to follow a straightforward Arrange. Act. Assert pattern. I may well have multiple assertions in one test (`@tests` in one `@testset`) but I like to have them address the same concept. In other words, I like a single test (`@testset`) to fail for one reason.  The `@test` and `@testset` tools are flexible and fine. I have no problem with those. Rolling your own fixtures on the occasions they’re needed is also fine, but the REPL-based testing seems to make test dependencies a bit awkward.  The performance of `&gt;pkg test` is really disappointing, as is the overly verbose reporting of what look to me like package dependencies; it’s just visual clutter in this use case.\nAchieving and maintaining cadence takes a while, and I have low expectations. I realize that this is unlikely to change any time soon, but at this part of the process I care *much* more about _cycle time_ than I do about _compute performance_. Test cases can usually use small data examples where performance is not an issue. I care about compute performance when the code behaves as designed, and is applied to real data. I’m not averse to adjusting work practices to use Julia effectively, but I am surprised that a non-controversial software development workflow which works well in languages as different as C++ and Javascript is relatively slow and awkward. If there are better ways to mitigate JIT performance in workflows like this – and it seems there are by following this REPL-centric approach – it would be helpful to have them described and publicized.","user":"U01KDRNJULA","ts":"1611307152.066400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EA+ZH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here’s my experience as a Julia neophyte with experience in a bunch of different programming languages (Python, C++, Java, C#, F#, Javascript, etc): I don’t always do TDD or test-first, but I do when either I’m not sure what direction I’m going in, or when I need to build confidence. I’m in a new language environment, ergo I need to build confidence. I want to take small steps and ratchet progress: I want to be able to write a test, and see that test fail. This is important to me because I want to know that the test will actually be discovered and executed by the test-runner. Pasting it into the REPL (with or without editor conveniences to make this slicker) subverts this check that test discovery and execution are working. Did I forget to "},{"type":"text","text":"include()","style":{"code":true}},{"type":"text","text":" the file containing the test somewhere? Then I want to write enough code to make the new test pass. During this part of the process I’m content to run only the new test, or locally important tests. I  probably don’t need to run the whole package test suite. When the test passes, I may set about refactoring the code. This may involve deduplicating or further abstracting what I’ve done, and occasionally involves pretty substantial rework. The refactoring may well touch production code other than the new code. During and after this step, I usually want to run "},{"type":"text","text":"all","style":{"italic":true}},{"type":"text","text":" the tests to ensure I haven’t broken anything before moving on to implementing next behaviour.\nI like my tests to follow a straightforward Arrange. Act. Assert pattern. I may well have multiple assertions in one test ("},{"type":"text","text":"@tests","style":{"code":true}},{"type":"text","text":" in one "},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":") but I like to have them address the same concept. In other words, I like a single test ("},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":") to fail for one reason.  The "},{"type":"text","text":"@test","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":" tools are flexible and fine. I have no problem with those. Rolling your own fixtures on the occasions they’re needed is also fine, but the REPL-based testing seems to make test dependencies a bit awkward.  The performance of "},{"type":"text","text":">pkg test","style":{"code":true}},{"type":"text","text":" is really disappointing, as is the overly verbose reporting of what look to me like package dependencies; it’s just visual clutter in this use case.\nAchieving and maintaining cadence takes a while, and I have low expectations. I realize that this is unlikely to change any time soon, but at this part of the process I care "},{"type":"text","text":"much","style":{"bold":true}},{"type":"text","text":" more about "},{"type":"text","text":"cycle time","style":{"italic":true}},{"type":"text","text":" than I do about "},{"type":"text","text":"compute performance","style":{"italic":true}},{"type":"text","text":". Test cases can usually use small data examples where performance is not an issue. I care about compute performance when the code behaves as designed, and is applied to real data. I’m not averse to adjusting work practices to use Julia effectively, but I am surprised that a non-controversial software development workflow which works well in languages as different as C++ and Javascript is relatively slow and awkward. If there are better ways to mitigate JIT performance in workflows like this – and it seems there are by following this REPL-centric approach – it would be helpful to have them described and publicized."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"9798a6df-4628-4475-8ee3-d83e0e656213","type":"message","text":"Right now I have 12 unit tests, simple `@testset` instances with a few assertions each. I have a tiny 108 lines of simple production code which doesn’t do anything exciting or intensive. `&gt;pkg test` takes 31 seconds.","user":"U01KDRNJULA","ts":"1611307563.066600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pbp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right now I have 12 unit tests, simple "},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":" instances with a few assertions each. I have a tiny 108 lines of simple production code which doesn’t do anything exciting or intensive. "},{"type":"text","text":">pkg test","style":{"code":true}},{"type":"text","text":" takes 31 seconds."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"4b3b5d82-71a7-41d4-a94b-219c95b4e7d3","type":"message","text":"A project I recently worked on in another famously slower language (a chemical engineering equipment design application) runs 2407 tests from cold in 20.8 seconds.","user":"U01KDRNJULA","ts":"1611307667.066800","team":"T68168MUP","edited":{"user":"U01KDRNJULA","ts":"1611307998.000000"},"blocks":[{"type":"rich_text","block_id":"OwfH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A project I recently worked on in another famously slower language (a chemical engineering equipment design application) runs 2407 tests from cold in 20.8 seconds."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"point_up","users":["U6A936746"],"count":1}]},{"client_msg_id":"6b6896a4-8e43-460c-9d5a-4fffcbb31b05","type":"message","text":"<@U01KDRNJULA> Thanks for the feedback. FWIW, I agree that\n1. The visual clutter from running `pkg&gt; test` is too much, and could be cut down.\n2. The startup time of tests often far exceeds the actual compute time.\nI think a main problem is that it's hard to both guarantee that your test-run has no external state (i.e. there is nothing \"left over\" data or methods from your previous run), and avoid the cost of recompiling everything, unless someone speeds up the interpreter. Another future solution is that Julia may cache native code and support incremental compilation, but that's probably far in the future. Julia can be run with `--compile=min` , which does reduce the startup costs quite a bit.","user":"U7HAYKY9X","ts":"1611317716.069500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7fmT","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01KDRNJULA"},{"type":"text","text":" Thanks for the feedback. FWIW, I agree that\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The visual clutter from running "},{"type":"text","text":"pkg> test","style":{"code":true}},{"type":"text","text":" is too much, and could be cut down."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The startup time of tests often far exceeds the actual compute time."}]}],"style":"ordered","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"I think a main problem is that it's hard to both guarantee that your test-run has no external state (i.e. there is nothing \"left over\" data or methods from your previous run), and avoid the cost of recompiling everything, unless someone speeds up the interpreter. Another future solution is that Julia may cache native code and support incremental compilation, but that's probably far in the future. Julia can be run with "},{"type":"text","text":"--compile=min","style":{"code":true}},{"type":"text","text":" , which does reduce the startup costs quite a bit."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"e24acf4e-5a8d-4684-b08d-42c69d925386","type":"message","text":"In my experience, most of the time running tests via `pkg&gt; test` is spent creating a temporary test environment which is thrown away after running the tests. It’s possible that there’s a JIT issue, but I don’t actually think that’s the main problem with that workflow at the moment","user":"U6795JH6H","ts":"1611326872.076500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uo0Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In my experience, most of the time running tests via "},{"type":"text","text":"pkg> test","style":{"code":true}},{"type":"text","text":" is spent creating a temporary test environment which is thrown away after running the tests. It’s possible that there’s a JIT issue, but I don’t actually think that’s the main problem with that workflow at the moment"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"9b15b1d8-8eb2-4dcd-9b57-a9b5bf98ee31","type":"message","text":"That’s also what spews all the output before running the tests","user":"U6795JH6H","ts":"1611327119.076700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2Ic","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That’s also what spews all the output before running the tests"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"d9663095-aa6d-4b17-b12c-29a17afabbc4","type":"message","text":"How hard would it be to cache a test environment?","user":"U0179G7FG4F","ts":"1611332046.078000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K1RA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How hard would it be to cache a test environment?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"3572dc5c-bbd6-4e6b-9ecd-18b61da4fc34","type":"message","text":"probably not that hard","user":"U6795JH6H","ts":"1611332721.079200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0B=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"probably not that hard"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"391f97fb-e158-4ae5-b126-2ab85e62bb05","type":"message","text":"So this is probably naïve, but I thought about this for a few days now and at the moment I'm fairly convinced that I could implement a live unit testing functionality for the VS Code extension _very_ easily... I might give it a try in the next few days.","user":"U68UUUFPS","ts":"1611337832.080100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RmA10","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So this is probably naïve, but I thought about this for a few days now and at the moment I'm fairly convinced that I could implement a live unit testing functionality for the VS Code extension "},{"type":"text","text":"very","style":{"italic":true}},{"type":"text","text":" easily... I might give it a try in the next few days."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"superhero","users":["U6A936746","U01724Q3PGW"],"count":2}]},{"client_msg_id":"85b53e39-effd-4258-857a-4d06dcb25976","type":"message","text":"It would essentially pick up <@U6A936746> idea of using Revise. There is a lot of stuff in the extension at the moment already that I think would make this fairly striaghtforward...","user":"U68UUUFPS","ts":"1611337864.080400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AEu=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It would essentially pick up "},{"type":"user","user_id":"U6A936746"},{"type":"text","text":" idea of using Revise. There is a lot of stuff in the extension at the moment already that I think would make this fairly striaghtforward..."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"eyes","users":["UH24GRBLL"],"count":1}]},{"client_msg_id":"03355d3b-cd35-4a39-a7cf-57296b359896","type":"message","text":"Ok, not done, but I got pretty far: <https://github.com/julia-vscode/julia-vscode/pull/1872>","user":"U68UUUFPS","ts":"1611343050.081200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ycni","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, not done, but I got pretty far: "},{"type":"link","url":"https://github.com/julia-vscode/julia-vscode/pull/1872"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"8cf280c1-eff8-40df-9097-5a29148a3c32","type":"message","text":"Main thing that is missing is that it currently doesn't create the test environment that includes the proper test deps.","user":"U68UUUFPS","ts":"1611343081.081400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"scAn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Main thing that is missing is that it currently doesn't create the test environment that includes the proper test deps."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"5905968e-9e2a-4506-a83f-fe63298a9b29","type":"message","text":"I tried to look at the code in Pkg.jl to figure out how to do that, but am a bit lost...","user":"U68UUUFPS","ts":"1611343145.081600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zjbSv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I tried to look at the code in Pkg.jl to figure out how to do that, but am a bit lost..."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"9a232491-18fa-400c-af6d-8c38a8b2b8d5","type":"message","text":"Ideally I would have a function `run_in_test_env` that works like this:\n```run_in_test_env(packagename) do\n  # Can put my own code in here that will run with the test env active\nend```","user":"U68UUUFPS","ts":"1611343225.081800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"42XE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ideally I would have a function "},{"type":"text","text":"run_in_test_env","style":{"code":true}},{"type":"text","text":" that works like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"run_in_test_env(packagename) do\n  # Can put my own code in here that will run with the test env active\nend"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"5b500cb8-6eb5-435e-8deb-5a9414cb7567","type":"message","text":"If someone from the Pkg.jl team could help me create that, it would be awesome :slightly_smiling_face:","user":"U68UUUFPS","ts":"1611343263.082000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nAjUM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If someone from the Pkg.jl team could help me create that, it would be awesome "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"9d9c7b53-4338-4f42-8eb5-6fede568d49a","type":"message","text":"It should essentially be:\n```function run_in_test_env(f, packagename)\n  # TODO Create the test env for `packagename` and instantiate it, then activate it\n  try\n    f()\n  catch err\n    # TODO clean up test env\n    rethrow(err)\n  end\nend```","user":"U68UUUFPS","ts":"1611343371.082600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E=pb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It should essentially be:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function run_in_test_env(f, packagename)\n  # TODO Create the test env for `packagename` and instantiate it, then activate it\n  try\n    f()\n  catch err\n    # TODO clean up test env\n    rethrow(err)\n  end\nend"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"781072f8-c88c-4e27-869d-c2b93226c799","type":"message","text":"<@U6795JH6H>, <@U67D54KS8> or <@U67SCG4HG> any chance one of you could help with that?","user":"U68UUUFPS","ts":"1611343445.082800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZEx","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6795JH6H"},{"type":"text","text":", "},{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":" or "},{"type":"user","user_id":"U67SCG4HG"},{"type":"text","text":" any chance one of you could help with that?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"f303aa4e-d72b-4f86-99bf-09ba6d0b5199","type":"message","text":"That function wouldn't even have to be in Pkg.jl, for now we could just have it in the VS Code extension.","user":"U68UUUFPS","ts":"1611343469.083000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LnNwm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That function wouldn't even have to be in Pkg.jl, for now we could just have it in the VS Code extension."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"24cf4c64-62ba-4fa9-8276-4cc39e4b38e5","type":"message","text":"<@U017FUJDBT7> worked out how to create activate the test environment, and extracted the code for that for TestReports.jl.\n\nit is the `sandbox` function, plus `gen_target_project`\n\nit is used here\n<https://github.com/JuliaTesting/TestReports.jl/blob/cc146819be746274c286e544ff3ab540bd1226e6/src/runner.jl#L259-L262>\n\nThere is a ton of fiddly stuff in there to support different julia versions, so depending what you want to support (I guess everything) you might need some of the other bits of that file","user":"U6A936746","ts":"1611344019.083200","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1611344098.000000"},"blocks":[{"type":"rich_text","block_id":"UtlU","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U017FUJDBT7"},{"type":"text","text":" worked out how to create activate the test environment, and extracted the code for that for TestReports.jl.\n\nit is the "},{"type":"text","text":"sandbox","style":{"code":true}},{"type":"text","text":" function, plus "},{"type":"text","text":"gen_target_project","style":{"code":true}},{"type":"text","text":"\n\nit is used here\n"},{"type":"link","url":"https://github.com/JuliaTesting/TestReports.jl/blob/cc146819be746274c286e544ff3ab540bd1226e6/src/runner.jl#L259-L262"},{"type":"text","text":"\n\nThere is a ton of fiddly stuff in there to support different julia versions, so depending what you want to support (I guess everything) you might need some of the other bits of that file"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"6be91e4e-c75c-4942-abd1-9550bf0ef55c","type":"message","text":"Does that start a new Julia process? I don't want to do that...","user":"U68UUUFPS","ts":"1611344130.083600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5eH/D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does that start a new Julia process? I don't want to do that..."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"d97ad166-a6e7-43c6-84c1-453cb1207040","type":"message","text":"This code does, but it doesn’t have to","user":"U6A936746","ts":"1611344153.083800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0k0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This code does, but it doesn’t have to"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"997e0f03-85b6-4fc9-ae45-eb418e452b54","type":"message","text":"What does `sandbox` do?","user":"U68UUUFPS","ts":"1611344204.084000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+u2IB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What does "},{"type":"text","text":"sandbox","style":{"code":true}},{"type":"text","text":" do?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"da70a773-f380-4e8f-a1ba-3c3dff34f8ef","type":"message","text":"Ah, wait, I think I get it!","user":"U68UUUFPS","ts":"1611344251.084200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NFK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, wait, I think I get it!"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"334aac39-df28-4d86-b405-7e144818664a","type":"message","text":"The call to `runtests!` actually starts the child Julia process!","user":"U68UUUFPS","ts":"1611344265.084400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qIN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The call to "},{"type":"text","text":"runtests!","style":{"code":true}},{"type":"text","text":" actually starts the child Julia process!"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"tada","users":["U6A936746"],"count":1}]},{"client_msg_id":"0c3cc37d-df92-41a8-b881-64be1567a682","type":"message","text":"Ok, let me see whether that is enough info to get this to work.","user":"U68UUUFPS","ts":"1611344272.084600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BBwtu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, let me see whether that is enough info to get this to work."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"dd4c77be-3d25-490f-9bb1-fe6b75974b1d","type":"message","text":"You’ll need to talk to <@U017FUJDBT7>, if you have questions this code is pretty scary.\nI don’t really understand the code fully.\n\nWorking out exactly what you need from this code is going to be gross,\nbut probably easier than working it out from Pkg.\nbecause this code supports every julia version where as Pkg doesn’t have to support every version, just its own version.\n\nBut I suspect for getting proof of concept out the door on 1.4+ this is not going to be too bad","user":"U6A936746","ts":"1611344345.084800","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1611344363.000000"},"blocks":[{"type":"rich_text","block_id":"EmddB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You’ll need to talk to "},{"type":"user","user_id":"U017FUJDBT7"},{"type":"text","text":", if you have questions this code is pretty scary.\nI don’t really understand the code fully.\n\nWorking out exactly what you need from this code is going to be gross,\nbut probably easier than working it out from Pkg.\nbecause this code supports every julia version where as Pkg doesn’t have to support every version, just its own version.\n\nBut I suspect for getting proof of concept out the door on 1.4+ this is not going to be too bad"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"82a9c246-f250-4123-a64a-f23eec57eca8","type":"message","text":"Ok, I think it all works now.","user":"U68UUUFPS","ts":"1611347571.085900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jRW6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, I think it all works now."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"3cb6ad6b-7d10-47e1-b6f8-a53738e9efef","type":"message","text":"This was really surprisingly easy","user":"U68UUUFPS","ts":"1611347666.086600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0jQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This was really surprisingly easy"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"831dff71-3070-45b6-b5df-d1b2859dc44a","type":"message","text":"So essentially what this does is: there is a command in the extension \"Run Julia Live tests\". You start that, and it will run your tests, but then don't exit, but monitor your files, and as soon as you save any edit, it will rerun your tests. And that second rerun should be _much_ faster because it won't be recreating the test env.","user":"U68UUUFPS","ts":"1611347744.088100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ykeC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So essentially what this does is: there is a command in the extension \"Run Julia Live tests\". You start that, and it will run your tests, but then don't exit, but monitor your files, and as soon as you save any edit, it will rerun your tests. And that second rerun should be "},{"type":"text","text":"much","style":{"italic":true}},{"type":"text","text":" faster because it won't be recreating the test env."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"41552e2b-e066-45f2-89cf-eb49c16896fe","type":"message","text":"So essentially it is more or less instant.","user":"U68UUUFPS","ts":"1611347752.088500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2r4bT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So essentially it is more or less instant."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"526d2f86-e1af-44de-8ded-fd4955e69290","type":"message","text":"I think if we were to generate coverage info now, we would be pretty much where Visual Studio Live Unit testing is...","user":"U68UUUFPS","ts":"1611347781.089000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d57","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think if we were to generate coverage info now, we would be pretty much where Visual Studio Live Unit testing is..."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"86e2aff6-3454-4fc1-93cc-7630c24f4784","type":"message","text":"So I think this can really cut down on the test loop cycle time that <@U01KDRNJULA> talked about above.","user":"U68UUUFPS","ts":"1611347852.089900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L36D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I think this can really cut down on the test loop cycle time that "},{"type":"user","user_id":"U01KDRNJULA"},{"type":"text","text":" talked about above."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"heart","users":["U01KDRNJULA","U017FUJDBT7","U9MED583T"],"count":3}]},{"client_msg_id":"1f8678c8-531a-48d8-b026-b1b28ac4a8f9","type":"message","text":"It is not perfect because it has all the limitations of Revise, i.e. there are some changes it won't be able to handle in this \"live\" fashion. But in that case things are also simple: just terminate that task, and restart it.","user":"U68UUUFPS","ts":"1611347891.090100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0ny","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is not perfect because it has all the limitations of Revise, i.e. there are some changes it won't be able to handle in this \"live\" fashion. But in that case things are also simple: just terminate that task, and restart it."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"6a6cf8bc-8719-4296-a50c-bec04b04447e","type":"message","text":"&gt; In my experience, most of the time running tests via `pkg&gt; test` is spent creating a temporary test environment which is thrown away after running the tests. It's possible that there's a JIT issue, but I don't actually think that's the main problem with that workflow at the moment\n\nI don't think that is true, it should be very fast. What takes time is typically to load the packages in the new process and compile the code for the functions being tested.","user":"U67D54KS8","ts":"1611348473.093200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aMJQJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> In my experience, most of the time running tests via "},{"type":"text","text":"pkg> test","style":{"code":true}},{"type":"text","text":" is spent creating a temporary test environment which is thrown away after running the tests. It's possible that there's a JIT issue, but I don't actually think that's the main problem with that workflow at the moment\n\nI don't think that is true, it should be very fast. What takes time is typically to load the packages in the new process and compile the code for the functions being tested."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"01c2747e-1cde-42e2-bb25-dd222220a8be","type":"message","text":"yeah, I tried with an empty `runtests.jl`, and it was fairly fast","user":"UDB26738Q","ts":"1611348536.093600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M0Gh+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, I tried with an empty "},{"type":"text","text":"runtests.jl","style":{"code":true}},{"type":"text","text":", and it was fairly fast"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"ebbaa0b6-7d99-4e66-b529-0188f675e1d7","type":"message","text":"```julia&gt; @time Pkg.test(\"Measurements\")\n  [...]\n  1.726285 seconds (2.60 M allocations: 165.316 MiB, 10.22% gc time, 82.38% compilation time)\n\njulia&gt; @time Pkg.test(\"Measurements\")\n  [...]\n  0.290308 seconds (479.24 k allocations: 38.687 MiB, 4.48% gc time)```","user":"UDB26738Q","ts":"1611348651.093800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8MNyF","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @time Pkg.test(\"Measurements\")\n  [...]\n  1.726285 seconds (2.60 M allocations: 165.316 MiB, 10.22% gc time, 82.38% compilation time)\n\njulia> @time Pkg.test(\"Measurements\")\n  [...]\n  0.290308 seconds (479.24 k allocations: 38.687 MiB, 4.48% gc time)"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"65baa718-5f71-4c1b-81f4-37dab27a2b77","type":"message","text":"On my system, package operations seem to take forever these days. A simple `pkg&gt; add Foo` might take more than a minute or so. No clue what is going, whether the registry update is super slow, or the resolve phase or what exactly it is. But my sense is that this also occurs when I run tests, i.e. long waits before it even shows the list of the packages in the test env that it will use to run the tests.","user":"U68UUUFPS","ts":"1611349082.094000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sd4rZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"On my system, package operations seem to take forever these days. A simple "},{"type":"text","text":"pkg> add Foo","style":{"code":true}},{"type":"text","text":" might take more than a minute or so. No clue what is going, whether the registry update is super slow, or the resolve phase or what exactly it is. But my sense is that this also occurs when I run tests, i.e. long waits before it even shows the list of the packages in the test env that it will use to run the tests."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"ec26957b-c3c0-4ac5-8658-4b108bf2407e","type":"message","text":"I've noticed this too. (on Linux) `@time Pkg.update()` takes almost a minute, almost all of which is updating the registry","user":"U0179G7FG4F","ts":"1611349287.094200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8j6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've noticed this too. (on Linux) "},{"type":"text","text":"@time Pkg.update()","style":{"code":true}},{"type":"text","text":" takes almost a minute, almost all of which is updating the registry"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"37c4f1b9-9736-4676-a4aa-4e5a56a2888f","type":"message","text":"We're going to ship the live unit testing in the next VS Code extension release, we just merged it.","user":"U68UUUFPS","ts":"1611349880.094400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uAfwh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We're going to ship the live unit testing in the next VS Code extension release, we just merged it."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"vscode","users":["UDXST8ARK","U6A936746","U9MED583T"],"count":3},{"name":"sonic","users":["UDXST8ARK","U6A936746","U017FUJDBT7","U9MED583T"],"count":4}]},{"client_msg_id":"aa0a6be0-1990-49b7-98a9-06cbc395df16","type":"message","text":"&gt;  almost all of which is updating the registry\nThis is one of the reasons I have disabled the registry update on `Pkg.add`\nYou can do this via  adding to your startup.jl\n```using Pkg: Pkg\nPkg.UPDATED_REGISTRY_THIS_SESSION[] = true```\nIf that is set then only `Pkg.update()` will update the registry: AFAIK nothing else will.","user":"U6A936746","ts":"1611350184.094600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d0kcK","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" almost all of which is updating the registry"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThis is one of the reasons I have disabled the registry update on "},{"type":"text","text":"Pkg.add","style":{"code":true}},{"type":"text","text":"\nYou can do this via  adding to your startup.jl\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Pkg: Pkg\nPkg.UPDATED_REGISTRY_THIS_SESSION[] = true"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIf that is set then only "},{"type":"text","text":"Pkg.update()","style":{"code":true}},{"type":"text","text":" will update the registry: AFAIK nothing else will."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"791d2553-d184-4fd2-b419-97f877479cb1","type":"message","text":"&gt;  We’re going to ship the live unit testing in the next VS Code extension release, we just merged it.\n:blinks: that was *fast*","user":"U6A936746","ts":"1611350232.094800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ejccg","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" We’re going to ship the live unit testing in the next VS Code extension release, we just merged it."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n:blinks: that was "},{"type":"text","text":"fast","style":{"bold":true}}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"c90119c2-81ee-4653-affe-4cfe53101f4e","type":"message","text":"I didn't follow a lot of things in the past semester: is the registry update slowness something that is going to be resolved at some point in general?","user":"U68UUUFPS","ts":"1611350458.095000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IcnFJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I didn't follow a lot of things in the past semester: is the registry update slowness something that is going to be resolved at some point in general?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"5ec4ec5f-0e25-481c-93a7-370cf8b9b509","type":"message","text":"Your trick is nice, but overall it is not a great user experience at the moment :slightly_smiling_face:","user":"U68UUUFPS","ts":"1611350481.095200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AsqAU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your trick is nice, but overall it is not a great user experience at the moment "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"heavy_check_mark","users":["U6A936746","UDXST8ARK"],"count":2}]},{"client_msg_id":"D9C14D59-2B09-4972-AFF2-450488CBC7CA","type":"message","text":"<@U68UUUFPS> This all sounds very promising. I’m looking forward to trying it. Thank you for taking the time to investigate improving cycle-time. ","user":"U01KDRNJULA","ts":"1611350901.097200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J/2","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U68UUUFPS"},{"type":"text","text":" This all sounds very promising. I’m looking forward to trying it. Thank you for taking the time to investigate improving cycle-time. "}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"2eada5af-b55e-4753-a112-2624ff235212","type":"message","text":"<@U68UUUFPS>, are you on Windows and what version of Julia are you on?","user":"U6795JH6H","ts":"1611353156.098000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+gQw","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U68UUUFPS"},{"type":"text","text":", are you on Windows and what version of Julia are you on?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"9414c0be-4d7a-4600-a5fb-0fecd03f3cbe","type":"message","text":"Yes, Windows, 1.5.3","user":"U68UUUFPS","ts":"1611353167.098200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1QEk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, Windows, 1.5.3"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"23832e8b-b4a3-4e7a-95a8-5c64af2b6ac8","type":"message","text":"yep, that’s the slowest possible combination","user":"U6795JH6H","ts":"1611353203.098400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V3gu4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yep, that’s the slowest possible combination"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"28a10352-d84f-4110-aa2f-46fc55a7c99a","type":"message","text":"the issue is that 1.5 switched to updating the registry by downloading tarballs from the pkg server; on Windows, it turns out that extracting lots of little files is brutally slow","user":"U6795JH6H","ts":"1611353244.098600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HBp1V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the issue is that 1.5 switched to updating the registry by downloading tarballs from the pkg server; on Windows, it turns out that extracting lots of little files is brutally slow"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"a3c7f8fe-d82a-4231-bb95-dd7291fce260","type":"message","text":"for 1.6 I switched it back to using git clone by default on Windows","user":"U6795JH6H","ts":"1611353266.098800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cR0v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for 1.6 I switched it back to using git clone by default on Windows"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["U68UUUFPS"],"count":1}]},{"client_msg_id":"81ec105e-5f4b-4912-aae5-1a700d982347","type":"message","text":"in the mean time, if you do `] registry rm General` and then `] registry add <ssh://git>@github.com/JuliaRegistries/General.git` then it will switch to using git+ssh for the registry, which is slower the first time but faster on updates because git updates only the files that have changed","user":"U6795JH6H","ts":"1611353403.099100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u6COP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in the mean time, if you do "},{"type":"text","text":"] registry rm General","style":{"code":true}},{"type":"text","text":" and then "},{"type":"text","text":"] registry add ","style":{"code":true}},{"type":"link","url":"ssh://git","style":{"code":true}},{"type":"text","text":"@github.com/JuliaRegistries/General.git","style":{"code":true}},{"type":"text","text":" then it will switch to using git+ssh for the registry, which is slower the first time but faster on updates because git updates only the files that have changed"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"1844e9e5-d30e-4686-a465-a6c1771b2d09","type":"message","text":"how does that compare for speed on linux?","user":"U0179G7FG4F","ts":"1611353434.099400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ooPLQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how does that compare for speed on linux?"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"ba3051f6-8bad-489d-b841-0cdcf80d0844","type":"message","text":"for 1.7 I’m planning on teaching Pkg to read a registry directly from a tarball and we’ll use pkg server diffs to update those with far less data","user":"U6795JH6H","ts":"1611353470.100100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xzw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for 1.7 I’m planning on teaching Pkg to read a registry directly from a tarball and we’ll use pkg server diffs to update those with far less data"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["U0179G7FG4F"],"count":1}]},{"client_msg_id":"aec1c9f1-6822-4bf4-bc87-0f92ad1d8008","type":"message","text":"I’m pretty sure it’s fast on Linux","user":"U6795JH6H","ts":"1611353480.100500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"svl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m pretty sure it’s fast on Linux"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"0e6f400a-8529-4055-b2c4-353d4f74e45f","type":"message","text":"I was planning on doing that for 1.6 but there was too much other stuff to do","user":"U6795JH6H","ts":"1611353502.100800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EtPr=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was planning on doing that for 1.6 but there was too much other stuff to do"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"c14c44c8-293e-4e3a-bca1-1f4946b102a4","type":"message","text":"I'm seeing\n```Updating git-repo `<https://github.com/JuliaRegistries/General.git>`\n    Fetching: [========================================&gt;]  99.9 %```\nfor about 40 seconds the first time I run `Pkg.update` in a repl on master (when there's nothing to update)","user":"U0179G7FG4F","ts":"1611353630.103400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N1s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm seeing\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Updating git-repo `"},{"type":"link","url":"https://github.com/JuliaRegistries/General.git"},{"type":"text","text":"`\n    Fetching: [========================================>]  99.9 %"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"for about 40 seconds the first time I run "},{"type":"text","text":"Pkg.update","style":{"code":true}},{"type":"text","text":" in a repl on master (when there's nothing to update)"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"b6f17c7d-e2ac-4735-8bb9-c45b26f90eee","type":"message","text":"Actually it's every time, not just the first","user":"U0179G7FG4F","ts":"1611353669.103600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OKX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually it's every time, not just the first"}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"49d6b61a-73ff-4547-8af2-420aad6e4a3f","type":"message","text":"You still use a git repo but something must be strange with your system. For me registry update as git repo is 1s and with Pkg server 0.2s.","user":"U67SCG4HG","ts":"1611355155.106600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Op5EY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You still use a git repo but something must be strange with your system. For me registry update as git repo is 1s and with Pkg server 0.2s."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"1c62a7f5-cab2-45b5-9909-c585eaa62db9","type":"message","text":"removing and adding General seems to have largely fixed this.","user":"U0179G7FG4F","ts":"1611355266.106900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jo55","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"removing and adding General seems to have largely fixed this."}]}]}],"thread_ts":"1611173896.212100","parent_user_id":"UDGT4PM41"}]