[{"client_msg_id":"567a1f36-d4df-48ea-a680-ad28a4dfe747","type":"message","text":"I've been thinking a lot lately about how, when compile-time dispatch fails, in maybe 90% of cases the result is simple enough that it can be reduced to a dict lookup, even though this is of course not completely general, but the failure mode, i.e. run-time dispatch, is *much* slower than a dict lookup.  Can the compiler ever be made smart enough to detect the simpler cases, or is there a more fundamental obstacle?","user":"U9VG1AYSG","ts":"1614793447.437700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NQjm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've been thinking a lot lately about how, when compile-time dispatch fails, in maybe 90% of cases the result is simple enough that it can be reduced to a dict lookup, even though this is of course not completely general, but the failure mode, i.e. run-time dispatch, is "},{"type":"text","text":"much","style":{"bold":true}},{"type":"text","text":" slower than a dict lookup.  Can the compiler ever be made smart enough to detect the simpler cases, or is there a more fundamental obstacle?"}]}]}],"thread_ts":"1614793447.437700","reply_count":25,"reply_users_count":4,"latest_reply":"1614802338.455000","reply_users":["U9VG1AYSG","U0179G7FG4F","U8D9768Q6","U6740K1SP"],"subscribed":false},{"client_msg_id":"51c460d6-d3bb-4073-b60f-fcc0d3996eff","type":"message","text":"to expand on this a bit: the reason I think this is true is because often if compile time dispatch fails, it fails because of only one of the arguments, and the method table only contains methods for a few different versions of that argument, and in those cases it is just a dict lookup","user":"U9VG1AYSG","ts":"1614793609.437800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wh/+I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to expand on this a bit: the reason I think this is true is because often if compile time dispatch fails, it fails because of only one of the arguments, and the method table only contains methods for a few different versions of that argument, and in those cases it is just a dict lookup"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"1be48232-1276-4f71-8091-5969185c9971","type":"message","text":"This seems roughly feasible, but a tree lookup might be easier than a dict lookup. A lot of the time, one argument will be `Any` so a `Dict` lookup would require a `Dict` with `O(types)` elements since `Dict`s have to match exactly. Instead, we could make a tree with one node per method, which seems easier to do automatically","user":"U0179G7FG4F","ts":"1614793832.438900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FNNm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This seems roughly feasible, but a tree lookup might be easier than a dict lookup. A lot of the time, one argument will be "},{"type":"text","text":"Any","style":{"code":true}},{"type":"text","text":" so a "},{"type":"text","text":"Dict","style":{"code":true}},{"type":"text","text":" lookup would require a "},{"type":"text","text":"Dict","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"O(types)","style":{"code":true}},{"type":"text","text":" elements since "},{"type":"text","text":"Dict","style":{"code":true}},{"type":"text","text":"s have to match exactly. Instead, we could make a tree with one node per method, which seems easier to do automatically"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"60a2c9d9-1b51-4dbe-ac0b-78b4caef8e92","type":"message","text":"and that would have the same performance as Single dynamic dispatch which is pretty fast","user":"U0179G7FG4F","ts":"1614793864.439300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jiO5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and that would have the same performance as Single dynamic dispatch which is pretty fast"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"f8de623e-2dba-4f0d-b32c-559efbadd34b","type":"message","text":"by single dynamic dispatch you mean on a single argument?  that did not seem that fast to me, though I may not have benchmarked it since like 1.4","user":"U9VG1AYSG","ts":"1614794152.439900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ioe0S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"by single dynamic dispatch you mean on a single argument?  that did not seem that fast to me, though I may not have benchmarked it since like 1.4"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"15086cfd-4202-4b5a-9edd-64a06a3cd66c","type":"message","text":"yeah, what I'm looking for generally is a less brutal failure mode for compile time dispatch.  Right now, it seems like if it fails it then proceeds to execute the most general possible dispatch algorithm at runtime, which is expensive, and should be unnecessary in the vast majority of cases","user":"U9VG1AYSG","ts":"1614794214.440100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oCa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, what I'm looking for generally is a less brutal failure mode for compile time dispatch.  Right now, it seems like if it fails it then proceeds to execute the most general possible dispatch algorithm at runtime, which is expensive, and should be unnecessary in the vast majority of cases"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"B3B66F20-F1F0-434D-99B4-7DD28D7B0D81","type":"message","text":"No, I believe Oscar means it’ll be as fast as dynamic dispatch in a language like C++ or Java where they can use vtables to make it quite efficienct","user":"U8D9768Q6","ts":"1614794319.441500","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1614794345.000000"},"blocks":[{"type":"rich_text","block_id":"E9aK4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, I believe Oscar means it’ll be as fast as dynamic dispatch in a language like C++ or Java where they can use vtables to make it quite efficienct"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","UKG4WF8PJ","U6A936746"],"count":3}]},{"client_msg_id":"b226e8ec-b6ed-4dbf-9060-8d3903ffeff7","type":"message","text":"cool, yes, this would be really awesome to have","user":"U9VG1AYSG","ts":"1614794354.442000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a=z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cool, yes, this would be really awesome to have"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"73c32ed2-c90b-4186-bf15-b37c736aa13b","type":"message","text":"having to completely \"give up\" on a programming pattern because dispatch might happen at run-time can really suck","user":"U9VG1AYSG","ts":"1614794391.442200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eeP72","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"having to completely \"give up\" on a programming pattern because dispatch might happen at run-time can really suck"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"D47F4DDD-BB40-4562-A91C-9BD91749EFD0","type":"message","text":"Honestly, I think ManualDispatch.jl is a pretty nice solution a lot of the time if you have some notion of what types may appear. ","user":"U8D9768Q6","ts":"1614794485.443100","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1614794504.000000"},"blocks":[{"type":"rich_text","block_id":"kAx0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Honestly, I think ManualDispatch.jl is a pretty nice solution a lot of the time if you have some notion of what types may appear. "}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"b6ef63e0-09a6-4e80-8ceb-b2bcd29bc7b7","type":"message","text":"<@U8D9768Q6> do you know if Julia uses vtables for single argument functions currently? If not, that might be relatively easy to hack in","user":"U0179G7FG4F","ts":"1614794488.443300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RfR","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8D9768Q6"},{"type":"text","text":" do you know if Julia uses vtables for single argument functions currently? If not, that might be relatively easy to hack in"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"329e7ddb-7642-42b4-8c1e-455e07a6dc1c","type":"message","text":"I don't know if doing it for single argument functions would help very much... I think what's needed is to somehow figure out how to do it in cases where only one argument is *relevant* for the dispatch (i.e. the rest is inferrable at compile time)","user":"U9VG1AYSG","ts":"1614794531.444200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x2a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know if doing it for single argument functions would help very much... I think what's needed is to somehow figure out how to do it in cases where only one argument is "},{"type":"text","text":"relevant","style":{"bold":true}},{"type":"text","text":" for the dispatch (i.e. the rest is inferrable at compile time)"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"FC8F8F2F-CD6C-49A1-A74C-1B715002FA79","type":"message","text":"I don’t believe so, Oscar. That’d be a pretty neat little project. ","user":"U8D9768Q6","ts":"1614794534.444500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UXXO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t believe so, Oscar. That’d be a pretty neat little project. "}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"e77407e9-1f8f-4f44-b507-733fa579cb9d","type":"message","text":"because I think that happens *a lot*","user":"U9VG1AYSG","ts":"1614794535.444700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3ny","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because I think that happens "},{"type":"text","text":"a lot","style":{"bold":true}}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"7DDDFE4A-FC7A-48A7-B5B3-D0B30C84088D","type":"message","text":"Yeah, I believe Oscar is talking about cases where there’s only one dynamic argument and the rest have known types at compile time. ","user":"U8D9768Q6","ts":"1614794578.445600","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1614794595.000000"},"blocks":[{"type":"rich_text","block_id":"LBzYp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I believe Oscar is talking about cases where there’s only one dynamic argument and the rest have known types at compile time. "}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"360fb6d5-9544-4e9e-abd2-0bd71d8e5d83","type":"message","text":"it would be interesting to try to compile some statistics of how often this happens.  My bet would be that something like 90% of cases where compile-time dispatch fails can be reduced to some kind of simple lookup","user":"U9VG1AYSG","ts":"1614794638.445900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HJKrB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it would be interesting to try to compile some statistics of how often this happens.  My bet would be that something like 90% of cases where compile-time dispatch fails can be reduced to some kind of simple lookup"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG","reactions":[{"name":"+1","users":["U8D9768Q6"],"count":1}]},{"client_msg_id":"7A179954-C4FA-4EBF-AD30-CD41319CEEF0","type":"message","text":"Oscar, do you use Zulip at all? We should move this there so it’s not lost ","user":"U8D9768Q6","ts":"1614794687.446900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BKz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oscar, do you use Zulip at all? We should move this there so it’s not lost "}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"a5e7a18b-c74b-493b-a170-82c1e5ee9dbe","type":"message","text":"I don't check it that often. Could we just use an issue for this?","user":"U0179G7FG4F","ts":"1614794758.447100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mmN8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't check it that often. Could we just use an issue for this?"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG","reactions":[{"name":"+1","users":["U8D9768Q6"],"count":1}]},{"client_msg_id":"c6f1e07a-3277-4dba-be0f-861318aa1623","type":"message","text":"it would be nice to open an issue.  Might be worth thinking about it more carefully and coming up with some examples first.  This might be a misguided idea if e.g. it took just as much work to determine whether a simple lookup is possible as it owuld to do the full dispatch in the first place.  My assumption is that it can be inferred when the method table gets updated, but if there is some kind of combinatoric/exponential growth of the state space, maybe not","user":"U9VG1AYSG","ts":"1614794843.447400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t8Eb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it would be nice to open an issue.  Might be worth thinking about it more carefully and coming up with some examples first.  This might be a misguided idea if e.g. it took just as much work to determine whether a simple lookup is possible as it owuld to do the full dispatch in the first place.  My assumption is that it can be inferred when the method table gets updated, but if there is some kind of combinatoric/exponential growth of the state space, maybe not"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"86edb1e8-8b71-4ae6-b0b9-b88d3bb04f05","type":"message","text":"Simple lookup applicability should be decidable at compile time, so I think it should be a win.","user":"U0179G7FG4F","ts":"1614794929.447600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MVGIH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Simple lookup applicability should be decidable at compile time, so I think it should be a win."}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG","reactions":[{"name":"+1","users":["U9VG1AYSG"],"count":1}]},{"client_msg_id":"4f7c6ab2-0b0d-483d-92a0-cfa173f74ced","type":"message","text":"on the other hand you could easily contrive examples where it would definitely work e.g. the methods `f(::Float64, ::Float64, ::Float64)` and `f(::Float64, ::Float64, ::Int)`.  Obviously it would work here, but I don't have any great insight into how often something like that is likely to occur in real code","user":"U9VG1AYSG","ts":"1614794983.447800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DIci","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"on the other hand you could easily contrive examples where it would definitely work e.g. the methods "},{"type":"text","text":"f(::Float64, ::Float64, ::Float64)","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"f(::Float64, ::Float64, ::Int)","style":{"code":true}},{"type":"text","text":".  Obviously it would work here, but I don't have any great insight into how often something like that is likely to occur in real code"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"c8706c2a-5a74-4169-b119-72a833222db8","type":"message","text":"let me know if one of you guys opens an issue, I'd be interested to follow it.  I can compose one this evening, but it would probably be better for someone with more knowledge of the compiler to do it","user":"U9VG1AYSG","ts":"1614795025.448100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1dj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let me know if one of you guys opens an issue, I'd be interested to follow it.  I can compose one this evening, but it would probably be better for someone with more knowledge of the compiler to do it"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"e9618151-d4cf-4c2b-b83f-0b18bac92793","type":"message","text":"I don’t think that’s the expensive part, though","user":"U6740K1SP","ts":"1614800618.448600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"75L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t think that’s the expensive part, though"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"886725a1-8408-4b42-bc64-bad396a1d050","type":"message","text":"I’ve not tested it, but I’d guess the pessimized heap-allocated storage is far more expensive than the dispatch lookup","user":"U6740K1SP","ts":"1614800657.448800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fm4x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ve not tested it, but I’d guess the pessimized heap-allocated storage is far more expensive than the dispatch lookup"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"ae0bfad4-6a22-4a47-ad93-bfa31a7ae556","type":"message","text":"my thinking was that you can try to do this when the method table is updated rather than at runtime, but I could be way off","user":"U9VG1AYSG","ts":"1614802087.454500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nxfb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"my thinking was that you can try to do this when the method table is updated rather than at runtime, but I could be way off"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"7276d930-b70e-4e62-a7de-9f8f27721679","type":"message","text":"Yeah, I get how that could be a sensible optimization","user":"U6740K1SP","ts":"1614802338.455000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Kp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I get how that could be a sensible optimization"}]}]}],"thread_ts":"1614793447.437700","parent_user_id":"U9VG1AYSG"}]