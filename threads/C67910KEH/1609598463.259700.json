[{"client_msg_id":"FEF91241-A87D-4CB8-9725-C9C3986002CD","type":"message","text":"Hey, I come from Python, where actually using the language to do anything is discouraged, modules handle all the heavy lifting, and minimizing dependencies is important for interoperability.  I know that Julia was designed with the opposite intent but can’t shake the feeling that I should use packages, avoid objects, and keep my code in pure Julia for simplicity and performance.","user":"U01GC3N3ZJT","ts":"1609598463.259700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x/Xm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey, I come from Python, where actually using the language to do anything is discouraged, modules handle all the heavy lifting, and minimizing dependencies is important for interoperability.  I know that Julia was designed with the opposite intent but can’t shake the feeling that I should use packages, avoid objects, and keep my code in pure Julia for simplicity and performance."}]}]}],"thread_ts":"1609598463.259700","reply_count":50,"reply_users_count":4,"latest_reply":"1609610147.307100","reply_users":["U7HAYKY9X","U01GC3N3ZJT","UH24GRBLL","UB7JS9CHF"],"subscribed":false},{"client_msg_id":"b35c7246-7b21-4767-8a9f-cd07652515ef","type":"message","text":"Hello and welcome!\nVery broad question. I do think it's correct minimizing dependencies has advantages for maintainability and interoperability, although my experience is that maintaining Julia is quite a bit easier than Python, because of the better package manager of Julia. The Julia ecosystem have more packages that are small, well-tested and built to synergize with other packages, and fewer giant monolith packages like Numpy or Scipy","user":"U7HAYKY9X","ts":"1609599092.260900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4vU=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello and welcome!\nVery broad question. I do think it's correct minimizing dependencies has advantages for maintainability and interoperability, although my experience is that maintaining Julia is quite a bit easier than Python, because of the better package manager of Julia. The Julia ecosystem have more packages that are small, well-tested and built to synergize with other packages, and fewer giant monolith packages like Numpy or Scipy"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"435ed2f0-7b5e-46fc-9777-96b806bae894","type":"message","text":"Keeping the code pure Julia certainly is a good idea. It has lots of good downstream consequences, like easier deployment and installation, easier debugging, and making it easier to contribute by Julia users. But it's not critical, really.\nFinally, Julia objects have zero runtime costs, and often end up making your code faster because they compartmentalize your code such that optimizing parts of it is easier. The Julian way is to create tonnes of small new types.","user":"U7HAYKY9X","ts":"1609599232.261600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yujRy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Keeping the code pure Julia certainly is a good idea. It has lots of good downstream consequences, like easier deployment and installation, easier debugging, and making it easier to contribute by Julia users. But it's not critical, really.\nFinally, Julia objects have zero runtime costs, and often end up making your code faster because they compartmentalize your code such that optimizing parts of it is easier. The Julian way is to create tonnes of small new types."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"e65f5583-9dbe-4a1d-a990-71940010d976","type":"message","text":"A good exercise is to have a toy project where you create small, low-level objects. Then you can convince yourself that types really do have zero runtime cost, and you can create a new type even for types that should be one byte in size.","user":"U7HAYKY9X","ts":"1609599321.262700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sgZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A good exercise is to have a toy project where you create small, low-level objects. Then you can convince yourself that types really do have zero runtime cost, and you can create a new type even for types that should be one byte in size."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"82B6F0ED-A42B-4D7A-BB79-D56F2BE6CF2D","type":"message","text":"_Zero_ runtime cost? 🥺","user":"U01GC3N3ZJT","ts":"1609599367.263100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DNQ/o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Zero","style":{"italic":true}},{"type":"text","text":" runtime cost? 🥺"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"63308623-4150-4676-9BF3-B4C7E5E2A0D2","type":"message","text":"_Faster_ code?","user":"U01GC3N3ZJT","ts":"1609599379.263400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IsJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Faster","style":{"italic":true}},{"type":"text","text":" code?"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"19C1527D-606B-48C5-90E8-40B956CF7C2E","type":"message","text":"Somebody, pinch me!  I must be dreaming.  This is incredible.","user":"U01GC3N3ZJT","ts":"1609599410.264300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ckx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Somebody, pinch me!  I must be dreaming.  This is incredible."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"a2cdead1-caf6-47eb-b904-f8a0de63bd5c","type":"message","text":"Indeed! In fact, basically all compiled languages have that feature.","user":"U7HAYKY9X","ts":"1609599472.265800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"grP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Indeed! In fact, basically all compiled languages have that feature."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"BB2CBB05-2B95-4E1E-9498-91EFF1A8CED7","type":"message","text":"WHAT","user":"U01GC3N3ZJT","ts":"1609599477.266100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dy0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"WHAT"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"CAC85E50-D27E-4522-91FA-A067DD5D4063","type":"message","text":":exploding_head:","user":"U01GC3N3ZJT","ts":"1609599490.266400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ByvF","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"exploding_head"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"BFEFFF54-7C7C-4242-8F25-AF9847C621B1","type":"message","text":"Is this why _everything_ in Java is an object?","user":"U01GC3N3ZJT","ts":"1609599563.267200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MsDeG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this why "},{"type":"text","text":"everything","style":{"italic":true}},{"type":"text","text":" in Java is an object?"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"2f6faf40-68f2-4110-bb56-9f0d4463f478","type":"message","text":"Uh, Ḯm not familiar with Java. Types may not have zero overhead in Java. But they do for C++, Julia and Rust, certainly.","user":"U7HAYKY9X","ts":"1609599598.267400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mdrG9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Uh, Ḯm not familiar with Java. Types may not have zero overhead in Java. But they do for C++, Julia and Rust, certainly."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"39DCE045-00C2-4CB7-B412-357146831AFA","type":"message","text":"This is mind-boggling.  Man, I wish we could ditch Python except for glue code and just use Julia with neat little packages and types for the real programming.","user":"U01GC3N3ZJT","ts":"1609599687.269000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yyDfY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is mind-boggling.  Man, I wish we could ditch Python except for glue code and just use Julia with neat little packages and types for the real programming."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"1014e102-b06c-42b2-b429-3012d2cfa8c7","type":"message","text":"I have managed to do just that for my work, and it is incredible! Julia also have some drawbacks, particularly\n• The latency when starting up, which may be e.g. 15 seconds for scripts\n• Higher memory consumption due to the JIT compiler than more efficient languages like Rust\n• The language lacks good support for static analysis like other compiled languages have.","user":"U7HAYKY9X","ts":"1609599763.271100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vLL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have managed to do just that for my work, and it is incredible! Julia also have some drawbacks, particularly\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The latency when starting up, which may be e.g. 15 seconds for scripts"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Higher memory consumption due to the JIT compiler than more efficient languages like Rust"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The language lacks good support for static analysis like other compiled languages have."}]}],"style":"bullet","indent":0}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"2488c44c-1d25-4f41-855f-75345a1f9acd","type":"message","text":"*zero extra overhead compared to just allocating some memory and operating on it","user":"UH24GRBLL","ts":"1609599783.271300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qn4l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"*zero extra overhead compared to just allocating some memory and operating on it"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"65142e36-913d-4679-8a67-641c458a0585","type":"message","text":"But if you use Python in situations where these drawbacks don't matter much, then switching to Julia is amazing","user":"U7HAYKY9X","ts":"1609599797.271500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"75xFu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But if you use Python in situations where these drawbacks don't matter much, then switching to Julia is amazing"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"bbe2ffb2-ca3c-44a9-970d-f6a76c99b587","type":"message","text":"Higher memory consumption can be alleviated by learning the ins and outs of `@benchmark` and `@code_warntype` ;)","user":"UH24GRBLL","ts":"1609599832.271700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mLHIe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Higher memory consumption can be alleviated by learning the ins and outs of "},{"type":"text","text":"@benchmark","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"@code_warntype","style":{"code":true}},{"type":"text","text":" ;)"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"8fd92328-77f2-4ece-ac23-878e859030e2","type":"message","text":"IMO, learning to embrace structs, the mutation of memory and immutable things leads to a lot of excitement on your road to learning julia","user":"UH24GRBLL","ts":"1609599883.272000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mWaz6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IMO, learning to embrace structs, the mutation of memory and immutable things leads to a lot of excitement on your road to learning julia"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"8b1e013f-797c-4fb3-807c-3501417455d1","type":"message","text":"feel free to ask any questions you might have while learning julia in <#C6A044SQH|helpdesk> :)","user":"UH24GRBLL","ts":"1609599901.272500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"atm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"feel free to ask any questions you might have while learning julia in "},{"type":"channel","channel_id":"C6A044SQH"},{"type":"text","text":" :)"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"45954977-671A-4C32-B384-3426CCCCE529","type":"message","text":"Alright, time to start campaigning for Julia and Rust wherever I go.  I wonder if we could even re-implement the C++ of the reference implementations of Julia and the LLVM in Rust.","user":"U01GC3N3ZJT","ts":"1609599969.274100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fUjP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alright, time to start campaigning for Julia and Rust wherever I go.  I wonder if we could even re-implement the C++ of the reference implementations of Julia and the LLVM in Rust."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"286F2ADA-8DC4-48EC-B440-7AC9D026EF30","type":"message","text":"And to add support for static compilation, type checking, and Rust API calls to Julia.","user":"U01GC3N3ZJT","ts":"1609599999.275000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KTF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And to add support for static compilation, type checking, and Rust API calls to Julia."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"c711413e-a5bf-44ef-bc99-d68e9520c1f0","type":"message","text":"static compilation works-ish right now with PackageCompiler.jl","user":"UH24GRBLL","ts":"1609600415.276700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0ox","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"static compilation works-ish right now with PackageCompiler.jl"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"098716c5-49de-42f1-8e8d-6f7084f2cd2d","type":"message","text":"will be better in the future though, the past few months of compiler improvements have partially been in preparation for that","user":"UH24GRBLL","ts":"1609600444.276900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"grw5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"will be better in the future though, the past few months of compiler improvements have partially been in preparation for that"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"0a14ee08-5d6c-4b89-9a5b-322978db33c0","type":"message","text":"Julia have rust API calls :) A rust re-impl will probably never happen, but the other things are a good idea!","user":"U7HAYKY9X","ts":"1609600455.277100","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1609601025.000000"},"blocks":[{"type":"rich_text","block_id":"kiLrq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia have rust API calls :) A rust re-impl will probably never happen, but the other things are a good idea!"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"81e3edad-e09c-4feb-8b73-600f74ad36f2","type":"message","text":"you can also call Rust from julia and julia from rust, iirc there were packages for both paths","user":"UH24GRBLL","ts":"1609600482.277300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AYd3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can also call Rust from julia and julia from rust, iirc there were packages for both paths"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"b5e6eab0-fd2e-4ead-8e3b-853c5643f6c1","type":"message","text":"reimplementing LLVM in Rust is probably not going to happen ever, LLVM has way too much buy-in from C++","user":"UH24GRBLL","ts":"1609600620.280200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sz9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reimplementing LLVM in Rust is probably not going to happen ever, LLVM has way too much buy-in from C++"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"E4FD2443-1A96-4752-9201-6738C989D105","type":"message","text":"Yep!  Can’t wait for static compilation for those oddball cases that require hand-coding.  I wonder if now isn’t the perfect time to re-implement, though, because Rust’s inherent memory and type safety and legible syntax ease and hasten development.  We could have more new features sooner and faster with fewer bugs.","user":"U01GC3N3ZJT","ts":"1609600626.280700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fLRBc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yep!  Can’t wait for static compilation for those oddball cases that require hand-coding.  I wonder if now isn’t the perfect time to re-implement, though, because Rust’s inherent memory and type safety and legible syntax ease and hasten development.  We could have more new features sooner and faster with fewer bugs."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"7A84F4B2-1805-42EB-9A1D-610CEF7CC7D8","type":"message","text":"Oh, what do you mean by “buy-in”?  Do you mean lock-in?","user":"U01GC3N3ZJT","ts":"1609600656.281500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QF7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, what do you mean by “buy-in”?  Do you mean lock-in?"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"447f566b-15ec-4a75-9c98-7cfa90cd1a2a","type":"message","text":"no, I mean that LLVM was originally an alternative C/C++ compiler","user":"UH24GRBLL","ts":"1609600706.281700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s7msh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, I mean that LLVM was originally an alternative C/C++ compiler"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"8CE6705A-4B0E-4F4E-A32F-83EF90A40E63","type":"message","text":"Ohhhhhh, ok!  I see what you mean.  So Julia is written in C++ and comes with the LLVM to compile it.","user":"U01GC3N3ZJT","ts":"1609600754.282600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lsil","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ohhhhhh, ok!  I see what you mean.  So Julia is written in C++ and comes with the LLVM to compile it."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"9ce6d2f6-ac44-4915-a39f-cb758fefaabd","type":"message","text":"no","user":"UH24GRBLL","ts":"1609600759.282800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B6b1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"d9fdc83d-9c48-4d09-8b8c-60b488080081","type":"message","text":"julia is largely written in julia","user":"UH24GRBLL","ts":"1609600765.283100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/hV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"julia is largely written in julia"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"1310FD4F-87BE-4F4F-BB29-503B39F1A55F","type":"message","text":"Oh.","user":"U01GC3N3ZJT","ts":"1609600766.283300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"15kWD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"CAF7DBCE-A428-4DEC-8B7E-8561D679EFEF","type":"message","text":"Ohhhh OK!","user":"U01GC3N3ZJT","ts":"1609600775.283700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4tl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ohhhh OK!"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"9df7cd2a-2925-481c-afdd-4725ccefe689","type":"message","text":"there's a very small core that's written in C, like the GC and some parts of the compiler","user":"UH24GRBLL","ts":"1609600794.284400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609600802.000000"},"blocks":[{"type":"rich_text","block_id":"Ne9kM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's a very small core that's written in C, like the GC and some parts of the compiler"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"576981ae-de59-4de8-9900-139d8dbd28e0","type":"message","text":"but the vast majority of julia is written in julia, which during compilation is lowered to LLVM-IR, which in turn is compiled to machine code","user":"UH24GRBLL","ts":"1609600831.284700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e/4fo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but the vast majority of julia is written in julia, which during compilation is lowered to LLVM-IR, which in turn is compiled to machine code"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"22A53D58-9B90-4956-A25D-9CFEAB1760AC","type":"message","text":"Ohhhhh OK!  I see now.  This makes sense.","user":"U01GC3N3ZJT","ts":"1609600866.285300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j2=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ohhhhh OK!  I see now.  This makes sense."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"03B8B361-3A51-4F06-8AE3-5E366C427E51","type":"message","text":"So Julia is a really sweet way to write code for the LLVM.","user":"U01GC3N3ZJT","ts":"1609600893.286100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uJx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So Julia is a really sweet way to write code for the LLVM."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"e0440e64-9668-4755-b3b6-b9d92670c1ae","type":"message","text":"In a way, but I don't think anyone uses LLVM-IR directly to program","user":"UH24GRBLL","ts":"1609601047.287600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TqSKb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In a way, but I don't think anyone uses LLVM-IR directly to program"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"27c8e6a9-b9b1-4ee1-bd7e-ea7ee3400e88","type":"message","text":"Some people do. Check the SIMD package, LoopVectorization or Automa","user":"U7HAYKY9X","ts":"1609601120.288800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B2M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some people do. Check the SIMD package, LoopVectorization or Automa"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT","reactions":[{"name":"heavy_check_mark","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"52C821B7-25EE-489F-97DC-81262B2C2F79","type":"message","text":"So, I do have another question.  Is Julia a good language for machine learning engineering?  I am an aspiring MLE who has been having way too much fun with it to want to use Python, which is apparently the industry standard.","user":"U01GC3N3ZJT","ts":"1609601167.289700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HEA1K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, I do have another question.  Is Julia a good language for machine learning engineering?  I am an aspiring MLE who has been having way too much fun with it to want to use Python, which is apparently the industry standard."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"64409dc3-6c08-425f-be94-65087e4fbd48","type":"message","text":"Yes, it's excellent, almost perfect. But it doesn't yet have the high-quality massive packages like Pytorch. Those require massive amounts of developing effort.","user":"U7HAYKY9X","ts":"1609601218.289900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hTkd6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, it's excellent, almost perfect. But it doesn't yet have the high-quality massive packages like Pytorch. Those require massive amounts of developing effort."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"94a9d75a-af5d-48f5-98af-d0cac3cd254d","type":"message","text":"It's certainly catching up fast though","user":"UH24GRBLL","ts":"1609601239.290100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A6Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's certainly catching up fast though"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"505cc678-ad4e-4be2-965a-5ef46ff2f679","type":"message","text":"there's also some exiting stuff on the horizon, which will make certain kinds of ML research much easier (NeuralODEs and the like are the magic words)","user":"UH24GRBLL","ts":"1609601277.290700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MX2Hw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's also some exiting stuff on the horizon, which will make certain kinds of ML research much easier (NeuralODEs and the like are the magic words)"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"287F90E5-7613-4EA0-9A8D-BAEB9CF436BA","type":"message","text":"Woooo, baby.  Best news I’ve heard this year!","user":"U01GC3N3ZJT","ts":"1609601282.290900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mn=H6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Woooo, baby.  Best news I’ve heard this year!"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"259E095C-7CA2-4B5D-9C3F-302CB9244731","type":"message","text":"Yep, and implicit layers!","user":"U01GC3N3ZJT","ts":"1609601293.291400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P24","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yep, and implicit layers!"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"BCBC2769-6C23-4B8E-90CF-7678FD4CE889","type":"message","text":"I bet that the actual silicon part of Silicon Valley is salivating over the multi-zillion-dollar opportunities to build custom hardware for all this stuff.","user":"U01GC3N3ZJT","ts":"1609601333.292800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i9Uzt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I bet that the actual silicon part of Silicon Valley is salivating over the multi-zillion-dollar opportunities to build custom hardware for all this stuff."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"878d89da-78c2-44ad-944c-e48e596d38d0","type":"message","text":"Julia is actually written in multiple languages, Scheme (for the parsing and lowering code, using femtolisp, a very nice / small version of Scheme written by Jeff Bezanson), C++ (for the LLVM interface mostly, AFAICT), C (for the lowest level code, such as the dispatcher, GC, etc), and mostly, Julia itself.","user":"UB7JS9CHF","ts":"1609608161.299700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6wO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia is actually written in multiple languages, Scheme (for the parsing and lowering code, using femtolisp, a very nice / small version of Scheme written by Jeff Bezanson), C++ (for the LLVM interface mostly, AFAICT), C (for the lowest level code, such as the dispatcher, GC, etc), and mostly, Julia itself."}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"ab788f55-e904-4735-9b9f-9e7249da08ea","type":"message","text":"I’d love to see the parsing and lowering code reimplimented in Julia (but that does mean you need some older version of Julia around to build Julia), and the C code reimplemented in Rust :slightly_smiling_face:","user":"UB7JS9CHF","ts":"1609608323.299900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pwu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’d love to see the parsing and lowering code reimplimented in Julia (but that does mean you need some older version of Julia around to build Julia), and the C code reimplemented in Rust "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"96430226-69cb-47d6-a940-bd3e96b78815","type":"message","text":"<@U01GC3N3ZJT> If you want to be stuck in the middle of a large herd of people using Python for ML, you can, but on the other hand, you could be at the forefront of things with Julia :slightly_smiling_face:","user":"UB7JS9CHF","ts":"1609608587.303300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YxX","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01GC3N3ZJT"},{"type":"text","text":" If you want to be stuck in the middle of a large herd of people using Python for ML, you can, but on the other hand, you could be at the forefront of things with Julia "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"4B30B573-E4D2-4223-A0BB-4BA03BB0E028","type":"message","text":"<@UB7JS9CHF> I would rather sit at the cool kids’ table and use Julia, especially because I want to do new things rather than just maintain or expand old ones.  I love architecting, development, and green-field design but quickly grow bored with existing packages and legacy code bases, so if I can avoid cramming eleven different implementations of six different Python ML libraries from three different presidential administrations, then sign me up!","user":"U01GC3N3ZJT","ts":"1609610147.307100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"itl","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UB7JS9CHF"},{"type":"text","text":" I would rather sit at the cool kids’ table and use Julia, especially because I want to do new things rather than just maintain or expand old ones.  I love architecting, development, and green-field design but quickly grow bored with existing packages and legacy code bases, so if I can avoid cramming eleven different implementations of six different Python ML libraries from three different presidential administrations, then sign me up!"}]}]}],"thread_ts":"1609598463.259700","parent_user_id":"U01GC3N3ZJT"}]