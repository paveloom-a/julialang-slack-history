[{"client_msg_id":"81a05a3d-576a-4d2f-b330-4362bdbb6f66","type":"message","text":"I'm sure this is not news to experienced Julia folks, but I was looking into Julia's comprehensions this evening, and I went through most of the examples in the List Comprehensions chapter of Graham Hutton's \"Programming in Haskell\" book. It was trivial to write similar Julia comprehensions, and I think they compare very favorably. You can see <https://blog.lojic.com/2020/12/26/comprehensions-in-julia.html|over a dozen side-by-side examples in my blog post>","user":"U014ATN949F","ts":"1609041533.024000","team":"T68168MUP","edited":{"user":"U014ATN949F","ts":"1609041540.000000"},"blocks":[{"type":"rich_text","block_id":"RrWF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm sure this is not news to experienced Julia folks, but I was looking into Julia's comprehensions this evening, and I went through most of the examples in the List Comprehensions chapter of Graham Hutton's \"Programming in Haskell\" book. It was trivial to write similar Julia comprehensions, and I think they compare very favorably. You can see "},{"type":"link","url":"https://blog.lojic.com/2020/12/26/comprehensions-in-julia.html","text":"over a dozen side-by-side examples in my blog post"}]}]}],"thread_ts":"1609041533.024000","reply_count":4,"reply_users_count":3,"latest_reply":"1609076522.029100","reply_users":["UH8A351DJ","U014ATN949F","U01G1P8A46S"],"subscribed":false,"reactions":[{"name":"+1","users":["U011V2YN59N"],"count":1}]},{"client_msg_id":"6dd7b7e6-2cff-45be-b942-685b5b750c91","type":"message","text":"Nice post, while this is true, some of the things I think has more Julian way of doing:\n```length([x for x in collect(xs)\n     if islowercase(x)])\n# ---&gt;\ncount(islowercase, x)```\nI'm sure in Haskell as well, this is probably just a made-up use of comprehension","user":"UH8A351DJ","ts":"1609041661.024300","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1609041753.000000"},"blocks":[{"type":"rich_text","block_id":"JbFD6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice post, while this is true, some of the things I think has more Julian way of doing:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"length([x for x in collect(xs)\n     if islowercase(x)])\n# --->\ncount(islowercase, x)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I'm sure in Haskell as well, this is probably just a made-up use of comprehension"}]}]}],"thread_ts":"1609041533.024000","parent_user_id":"U014ATN949F"},{"client_msg_id":"de86615a-05f9-4a41-8f62-9e7065bee14f","type":"message","text":"Sure, my purpose was simply to match the Haskell comprehensions as closely as possible as an example.","user":"U014ATN949F","ts":"1609041776.024600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c4uu/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure, my purpose was simply to match the Haskell comprehensions as closely as possible as an example."}]}]}],"thread_ts":"1609041533.024000","parent_user_id":"U014ATN949F"},{"client_msg_id":"2bf2ccd1-fdda-4d2e-8f3f-6a4e994cc6fb","type":"message","text":"There are definitely some I would not use _as is_ in either language :slightly_smiling_face:","user":"U014ATN949F","ts":"1609041798.024800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D6L3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are definitely some I would not use "},{"type":"text","text":"as is","style":{"italic":true}},{"type":"text","text":" in either language "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1609041533.024000","parent_user_id":"U014ATN949F","reactions":[{"name":"+1","users":["UH8A351DJ","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"56194e2b-43b5-4b3e-9747-5d9d5a319562","type":"message","text":"Nice post; I think Haskell's definitely looks more math-like with the use of commas and `&lt;-` in the `List` monad being similar to set builder notation.","user":"U01G1P8A46S","ts":"1609076522.029100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JGB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice post; I think Haskell's definitely looks more math-like with the use of commas and "},{"type":"text","text":"<-","style":{"code":true}},{"type":"text","text":" in the "},{"type":"text","text":"List","style":{"code":true}},{"type":"text","text":" monad being similar to set builder notation."}]}]}],"thread_ts":"1609041533.024000","parent_user_id":"U014ATN949F"}]