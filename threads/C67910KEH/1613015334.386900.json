[{"client_msg_id":"a35844e6-d133-4e99-abe2-70bf7263cfe8","type":"message","text":"So what's the layering between KA, KernelCompiler and Loopvec? It's in that order?","user":"UDGT4PM41","ts":"1613015334.386900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DUk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So what's the layering between KA, KernelCompiler and Loopvec? It's in that order?"}]}]}],"thread_ts":"1613015334.386900","reply_count":21,"reply_users_count":4,"latest_reply":"1613072680.430100","reply_users":["U6A0PD8CR","UDGT4PM41","U67BJLYCS","UAUPJLBQX"],"subscribed":false},{"client_msg_id":"e96d21b8-c4b1-4001-8c25-8253cfe60848","type":"message","text":"KC is going to be the compiler/runtime for KA's CPU implementation, but LoopVec has nothing to do with those. LoopVec is only helpful because sometimes LLVM doesn't think it's safe/beneficial to vectorize the loop. Once Valentin's LoopInfo PR is merged, LLVM will probably have enough information to start vectorizing more loops.","user":"U6A0PD8CR","ts":"1613057986.409700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GvJR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"KC is going to be the compiler/runtime for KA's CPU implementation, but LoopVec has nothing to do with those. LoopVec is only helpful because sometimes LLVM doesn't think it's safe/beneficial to vectorize the loop. Once Valentin's LoopInfo PR is merged, LLVM will probably have enough information to start vectorizing more loops."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"89492749-66ec-4d26-ace8-4a5028bdcddf","type":"message","text":"LoopVec is a band-aid over missing optimizations","user":"U6A0PD8CR","ts":"1613058010.409900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JpRb=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LoopVec is a band-aid over missing optimizations"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"16179a58-2dd0-4ca4-acb8-f8e20fd20a85","type":"message","text":"Oh that's interesting","user":"UDGT4PM41","ts":"1613058782.410100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"64Hw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh that's interesting"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"3700bbd1-67aa-4799-96aa-087b9c3c43df","type":"message","text":"&gt; Once Valentin's LoopInfo PR is merged, LLVM will probably have enough information to start vectorizing more loops.\nI wouldn't word it that strongly, we are still missing quite a bit of other information.","user":"U67BJLYCS","ts":"1613058872.410300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PhJ","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Once Valentin's LoopInfo PR is merged, LLVM will probably have enough information to start vectorizing more loops."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI wouldn't word it that strongly, we are still missing quite a bit of other information."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"dbd64d44-e91e-4ce8-bef3-13f17937c894","type":"message","text":"So KC is gonna spit out  optimized julia loops?","user":"UDGT4PM41","ts":"1613060455.410500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6GWG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So KC is gonna spit out  optimized julia loops?"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"b810fd7a-8128-4ee7-8426-91584d140779","type":"message","text":"or IR to llvm","user":"UDGT4PM41","ts":"1613060493.410700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5U9iX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or IR to llvm"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"052c233f-ce82-4578-ac4d-e1bbeeedbb87","type":"message","text":"If you mean \"will KC-compiled kernels use SIMD?\", the answer is, \"not yet\"","user":"U6A0PD8CR","ts":"1613060497.410900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9gW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you mean \"will KC-compiled kernels use SIMD?\", the answer is, \"not yet\""}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"9a1d6ded-dc56-4d31-9c35-3120773a4bc1","type":"message","text":"That is potentially a lot of work, although Valentin and I have discussed it","user":"U6A0PD8CR","ts":"1613060517.411100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2wjV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is potentially a lot of work, although Valentin and I have discussed it"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"38d09051-3171-4b8d-be61-57fa589e41cc","type":"message","text":"It will still use LLVM as a vectorizer and loop optimizer","user":"U67BJLYCS","ts":"1613060517.411300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JuX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It will still use LLVM as a vectorizer and loop optimizer"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"f2c6b1db-5d4c-44e5-8987-2460667bd255","type":"message","text":"gotcha","user":"UDGT4PM41","ts":"1613060553.411500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i/StF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"gotcha"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"cb272155-f2ab-4989-a8f9-aeb474c7388b","type":"message","text":"<https://mit.zoom.us/j/96251790289?pwd=bktOdGJGWHpUTHVmVGl3dEpZNGZTUT09>","user":"UDGT4PM41","ts":"1613061468.411800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d9fGe","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://mit.zoom.us/j/96251790289?pwd=bktOdGJGWHpUTHVmVGl3dEpZNGZTUT09"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"38b72e01-28e0-4ecf-9a88-56677449f260","type":"message","text":"LoopVectorization.jl is much more sophisticated than a band aid. I don't anticipate LLVM catching up any time soon.","user":"UAUPJLBQX","ts":"1613071097.425900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2aW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LoopVectorization.jl is much more sophisticated than a band aid. I don't anticipate LLVM catching up any time soon."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"22c5a5ad-8a34-4660-9ed2-8d01b94453ec","type":"message","text":"In many of the benchmarks, llvm does vectorize the loops. LoopVectorization gets better performance because it optimizes a cost model that considers many optimizations/transforms that LLVM does not.","user":"UAUPJLBQX","ts":"1613071347.426200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UinQ5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In many of the benchmarks, llvm does vectorize the loops. LoopVectorization gets better performance because it optimizes a cost model that considers many optimizations/transforms that LLVM does not."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"636df090-45fc-4cba-8e33-bf8f77a02274","type":"message","text":"Simply adding loop pragmas won't change that.","user":"UAUPJLBQX","ts":"1613071376.426400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g2/Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Simply adding loop pragmas won't change that."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"398fb121-ddaa-49dc-b6c2-3aa18d63fca2","type":"message","text":"I'm not arguing that LoopVec doesn't work very well when used correctly, but I am arguing that these sorts of optimizations should be added to LLVM, *not* implemented in Julia.","user":"U6A0PD8CR","ts":"1613071787.427000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GbI4B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not arguing that LoopVec doesn't work very well when used correctly, but I am arguing that these sorts of optimizations should be added to LLVM, "},{"type":"text","text":"not","style":{"bold":true}},{"type":"text","text":" implemented in Julia."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"a76db489-9c40-4794-acc1-c1b360f675ac","type":"message","text":"But yes, they're independent projects.\nI'll probably eventually find the time to start using the AbstractInterpreter to support more diverse Julia code, rather than the current approach of falling back on llvm whenever the loops interact with anything other than strided arrays of `HWReal`s or `Bool`s but that'd only be after finding the time for another major overhaul to increase the variety of loops it can handle and clean all the spaghetti out of it's codegen.","user":"UAUPJLBQX","ts":"1613071941.427200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HP98","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But yes, they're independent projects.\nI'll probably eventually find the time to start using the AbstractInterpreter to support more diverse Julia code, rather than the current approach of falling back on llvm whenever the loops interact with anything other than strided arrays of "},{"type":"text","text":"HWReal","style":{"code":true}},{"type":"text","text":"s or "},{"type":"text","text":"Bool","style":{"code":true}},{"type":"text","text":"s but that'd only be after finding the time for another major overhaul to increase the variety of loops it can handle and clean all the spaghetti out of it's codegen."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"b2bee133-a92d-47fe-bcb3-a4728408eea8","type":"message","text":"I know Julia a lot better than LLVM, so it's easier to work on in Julia.","user":"UAUPJLBQX","ts":"1613071987.427400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2ptuF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I know Julia a lot better than LLVM, so it's easier to work on in Julia."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"add0fc59-8280-42a2-a5c9-4d37f011b506","type":"message","text":"Julia also let's you iterate and test things quickly, especially with Revise.jl","user":"UAUPJLBQX","ts":"1613072115.427900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yq4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia also let's you iterate and test things quickly, especially with Revise.jl"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"09de2663-bf21-478c-80d0-77235cc3a83f","type":"message","text":"I don't think things are mature/stable enough to want to move out of Julia/give up on it's advantages yet.\nAnd then I don't know where it should live. Probably somewhere in MLIR-space. But that's all far down the road, and definitely not something Julia can use today. Some other projects within MLIR well have similar goals/objectives and for all I know could render it obsolete.","user":"UAUPJLBQX","ts":"1613072439.428900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cNPn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think things are mature/stable enough to want to move out of Julia/give up on it's advantages yet.\nAnd then I don't know where it should live. Probably somewhere in MLIR-space. But that's all far down the road, and definitely not something Julia can use today. Some other projects within MLIR well have similar goals/objectives and for all I know could render it obsolete."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"d75f1895-b005-4b24-8e37-7408f15fbe1c","type":"message","text":"But I try to spend less time in idle existential panics \"is this ship sinking and all my effort ultimately meaningless?\" and more time fixing problems.","user":"UAUPJLBQX","ts":"1613072647.429700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IVK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I try to spend less time in idle existential panics \"is this ship sinking and all my effort ultimately meaningless?\" and more time fixing problems."}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"affd0287-ad0b-436e-8fd8-e5025d2d70be","type":"message","text":"Fair enough","user":"U6A0PD8CR","ts":"1613072680.430100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EwVxW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Fair enough"}]}]}],"thread_ts":"1613015334.386900","parent_user_id":"UDGT4PM41"}]