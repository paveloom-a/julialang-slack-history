[{"client_msg_id":"fcada5b6-7c19-4ed5-822f-3194bd1e484d","type":"message","text":"Just wondering, does Julia has low level capabilities. better than or equivalent to that of C, currently?","user":"U01AJUF2GEP","ts":"1609588397.249800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yAV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just wondering, does Julia has low level capabilities. better than or equivalent to that of C, currently?"}]}]}],"thread_ts":"1609588397.249800","reply_count":22,"reply_users_count":4,"latest_reply":"1609593635.255300","reply_users":["U67G3QRJM","U7HAYKY9X","UH24GRBLL","U01AJUF2GEP"],"subscribed":false},{"client_msg_id":"1117bcc7-e38f-420c-af5d-f9d7b47447c1","type":"message","text":"What exactly do you mean? But in general \"yes\"","user":"U67G3QRJM","ts":"1609589169.250400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ec=Fl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What exactly do you mean? But in general \"yes\""}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"d32c4195-effa-47b1-8ccb-a99ad9711b74","type":"message","text":"I'd argue no, not quite.\n• Julia makes few guarantees about what will compile to efficient code, and code may stop efficiently compiling in a minor version of Julia, as it's not considered a breaking change\n• There are no low-level memory buffers in Julia\n• There are no pointer to stack-allocated variables, which can sometimes block certain low-level ticks\n• The C compiler has more optimizations than the Julia compiler\n• You can't manually control memory freeing in Julia","user":"U7HAYKY9X","ts":"1609590036.250600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"96Iw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd argue no, not quite.\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia makes few guarantees about what will compile to efficient code, and code may stop efficiently compiling in a minor version of Julia, as it's not considered a breaking change"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"There are no low-level memory buffers in Julia"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"There are no pointer to stack-allocated variables, which can sometimes block certain low-level ticks"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The C compiler has more optimizations than the Julia compiler"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"You can't manually control memory freeing in Julia"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"a9cbcf54-5b41-4fe5-9a33-6ce16f035f39","type":"message","text":"However, in most cases, the compiler is good enough that you don't need this fine grained control. You can often get away with writing higher level code and letting the compiler optimize it.","user":"U7HAYKY9X","ts":"1609590157.250800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"noTxR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"However, in most cases, the compiler is good enough that you don't need this fine grained control. You can often get away with writing higher level code and letting the compiler optimize it."}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"09924315-aa35-488a-a229-454a1f3ccf9a","type":"message","text":"Regarding the stack pointers, I'd argue that passing those around in C is kind of a code smell :man-shrugging:","user":"UH24GRBLL","ts":"1609590519.251000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QK6bT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Regarding the stack pointers, I'd argue that passing those around in C is kind of a code smell "},{"type":"emoji","name":"man-shrugging"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"1724d8ee-79e8-4ee8-af40-2cd666a86fbd","type":"message","text":"as for GC, there's `GC.enable(false)` and `GC.gc()` - that at least makes pauses deterministic","user":"UH24GRBLL","ts":"1609590580.251200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jku","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as for GC, there's "},{"type":"text","text":"GC.enable(false)","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"GC.gc()","style":{"code":true}},{"type":"text","text":" - that at least makes pauses deterministic"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"274cc5cc-b43d-4cdc-bd71-016bc0a89804","type":"message","text":"I don't think \"more optimizations\" is a comparable metric - are you talking about gcc vs. LLVM? There's no one C compiler, just one standard and a whole bunch of conflicting implementations","user":"UH24GRBLL","ts":"1609590778.251400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609590803.000000"},"blocks":[{"type":"rich_text","block_id":"k5p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think \"more optimizations\" is a comparable metric - are you talking about gcc vs. LLVM? There's no one C compiler, just one standard and a whole bunch of conflicting implementations"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"7a373b55-31f4-420f-a56b-bf001ad1fe1a","type":"message","text":"Julia might be suited to make an OS at this point...\nI hope someone or Julia Computing tinkers with this idea at some time in the future...","user":"U01AJUF2GEP","ts":"1609590825.251700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qH5LE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia might be suited to make an OS at this point...\nI hope someone or Julia Computing tinkers with this idea at some time in the future..."}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"5ea99d80-9e81-49c7-87c1-317ff68a0726","type":"message","text":"I don't think people at julia computing are going to spend their time developing an OS, no","user":"UH24GRBLL","ts":"1609590855.251900","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609590859.000000"},"blocks":[{"type":"rich_text","block_id":"RqW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think people at julia computing are going to spend their time developing an OS, no"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"4c5c025b-0cce-41bb-b0c8-92c9c95f79d8","type":"message","text":"\"Julia Computing\" != \"Julia developers\"","user":"UH24GRBLL","ts":"1609590880.252200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4c/CB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"Julia Computing\" != \"Julia developers\""}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"c65c1fcc-6fea-40e3-8bce-c1b2771e4e7e","type":"message","text":"there may be someone who'd like to develop an OS in julia, but for that to happen you're either stuck with a hard dependency on existing C libs (glibc, most notably) or you have to reimplement basically all things core julia depends on","user":"UH24GRBLL","ts":"1609590934.252400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A0MC2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there may be someone who'd like to develop an OS in julia, but for that to happen you're either stuck with a hard dependency on existing C libs (glibc, most notably) or you have to reimplement basically all things core julia depends on"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"ce1922b6-b9ee-44c8-9065-c247c1be1d59","type":"message","text":"Even if you're fine with the C dependency, you'd probably still want to have a precompiled .so without any dynamic calls in your kernel, so that also has to wait until static compilation is a thing","user":"UH24GRBLL","ts":"1609591001.252600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OvVYO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Even if you're fine with the C dependency, you'd probably still want to have a precompiled .so without any dynamic calls in your kernel, so that also has to wait until static compilation is a thing"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"a24df443-4649-4b1a-9a1d-bd2cd6ed018c","type":"message","text":"(but note that this topic is a different beast to just \"how are the low level capabilities compared to C\")","user":"UH24GRBLL","ts":"1609591026.252800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W7iD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(but note that this topic is a different beast to just \"how are the low level capabilities compared to C\")"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"7bed6e0f-e870-4b87-b6f3-6e83bb2bfa4f","type":"message","text":"What do you think about 1.6.0?\nWill we get a general speed bump?","user":"U01AJUF2GEP","ts":"1609591839.253000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HHDU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you think about 1.6.0?\nWill we get a general speed bump?"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"84a0993b-8c3e-42c8-b24d-a174bbc43181","type":"message","text":"yes","user":"UH24GRBLL","ts":"1609591973.253200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l8UNV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"f8e3157e-c43d-4249-98b5-9b6aa8795b83","type":"message","text":"I'm excited about 1.6, but I'm more excited about what comes after that","user":"UH24GRBLL","ts":"1609592002.253400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hrs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm excited about 1.6, but I'm more excited about what comes after that"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"af71682d-ebaf-43d8-ae82-2d2c0f420d97","type":"message","text":"I mean, it \"tremendous speed bump\" very much depends on your case, as julia is already fast","user":"UH24GRBLL","ts":"1609592272.253800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A3jc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, it \"tremendous speed bump\" very much depends on your case, as julia is already fast"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"314e552a-6787-44de-bf53-250ba36bcf96","type":"message","text":"I'm excited about the features coming after 1.6","user":"UH24GRBLL","ts":"1609592292.254000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fyIM=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm excited about the features coming after 1.6"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"02e19acf-da0f-4ff6-abb7-f8a7802abaff","type":"message","text":"Like? For example?","user":"U01AJUF2GEP","ts":"1609592345.254200","team":"T68168MUP","edited":{"user":"U01AJUF2GEP","ts":"1609592517.000000"},"blocks":[{"type":"rich_text","block_id":"vxnD=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like? For example?"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"def21e8f-389d-4c39-8a4a-1505eb1650c5","type":"message","text":"better support for static compilation, for one","user":"UH24GRBLL","ts":"1609592788.254700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZkT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"better support for static compilation, for one"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"7141ff2c-93de-40e1-8763-f621bf9f575d","type":"message","text":"Any idea about creating binaries from .jl files?\nI hear thats something not very pretty in julia... as of right now...","user":"U01AJUF2GEP","ts":"1609593072.254900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AhrU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any idea about creating binaries from .jl files?\nI hear thats something not very pretty in julia... as of right now..."}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"b361238e-a62f-4b16-a1c1-5a9aac855780","type":"message","text":"that's what static compilation means, yes","user":"UH24GRBLL","ts":"1609593569.255100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zVr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's what static compilation means, yes"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"dbe32285-82e6-454f-9542-c83b9a8e9e38","type":"message","text":"it does work as long as your binary is relocatable (i.e. doesn't assume it lives in a certain directory on your machine) and you provide enough precompile statements to avoid dynamic dispatch. PackageCompiler.jl does just that right now","user":"UH24GRBLL","ts":"1609593635.255300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6=s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it does work as long as your binary is relocatable (i.e. doesn't assume it lives in a certain directory on your machine) and you provide enough precompile statements to avoid dynamic dispatch. PackageCompiler.jl does just that right now"}]}]}],"thread_ts":"1609588397.249800","parent_user_id":"U01AJUF2GEP","reactions":[{"name":"cool","users":["U01AJUF2GEP"],"count":1},{"name":"julia-performance","users":["U01AJUF2GEP"],"count":1}]}]