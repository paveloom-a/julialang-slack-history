[{"client_msg_id":"e2a1fdeb-93d8-49b3-b6e6-aff979fc826b","type":"message","text":"Is there a sparse-optimized quasi-newton nonlinear solver somewhere in the current ecosystem? If not could anyone point me to the right algorithm in math or other languages?","user":"USTUBS9ED","ts":"1616364523.217900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gdVJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a sparse-optimized quasi-newton nonlinear solver somewhere in the current ecosystem? If not could anyone point me to the right algorithm in math or other languages?"}]}]}],"thread_ts":"1616364523.217900","reply_count":3,"reply_users_count":3,"latest_reply":"1616372808.219600","reply_users":["USTUBS9ED","U011V84GZ5E","UB197FRCL"],"subscribed":false},{"client_msg_id":"6f46f31e-7ccb-430e-afda-5a0eaf8a017d","type":"message","text":"also posted on Discourse. All suggestions welcomed!\n<https://discourse.julialang.org/t/quasi-newton-solver-for-sparse-jacobian/57672>","user":"USTUBS9ED","ts":"1616364564.218000","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Quasi-newton solver for sparse jacobian","title_link":"https://discourse.julialang.org/t/quasi-newton-solver-for-sparse-jacobian/57672","text":"Hi community, I was wondering if there is a sparse-optimized quasi-newton solver in the Julia ecosystem. This question was motivated by the undocumented broyden solver in NLsolve.jl. This solver requires the inverse of the jacobian, which is clearly not optimal when it’s sparse. I wouldn’t mind implementing my own if there isn’t, but could anyone point me to the right algorithm either in math or from other languages? Thanks!","fallback":"JuliaLang: Quasi-newton solver for sparse jacobian","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1616364362,"from_url":"https://discourse.julialang.org/t/quasi-newton-solver-for-sparse-jacobian/57672","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/quasi-newton-solver-for-sparse-jacobian/57672"}],"blocks":[{"type":"rich_text","block_id":"vVn1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also posted on Discourse. All suggestions welcomed!\n"},{"type":"link","url":"https://discourse.julialang.org/t/quasi-newton-solver-for-sparse-jacobian/57672"}]}]}],"thread_ts":"1616364523.217900","parent_user_id":"USTUBS9ED"},{"client_msg_id":"9bfa4d24-0f77-48b1-936d-40350dfe72ba","type":"message","text":"As far as I know ARKode, accepts a mass matrix in the left hand side of the differential equation, which is one way of taking advantage of a specific type of a sparsity or better say pattern. But I think it is not non-newton type","user":"U011V84GZ5E","ts":"1616365076.219100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IeR+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As far as I know ARKode, accepts a mass matrix in the left hand side of the differential equation, which is one way of taking advantage of a specific type of a sparsity or better say pattern. But I think it is not non-newton type"}]}]}],"thread_ts":"1616364523.217900","parent_user_id":"USTUBS9ED"},{"client_msg_id":"bda8af57-fa9e-4d4b-92a2-be75ce48453f","type":"message","text":"I think you should find everything you need in NLsolve.jl (soon to be NLSolvers.jl). There's CTKelley's code SIAMFANLEquations.jl (he replied to you on discourse). There's <https://github.com/rveltz/BifurcationKit.jl|BifurcationKit.jl>  as well. And then there's NonlinearSolve.jl for SciML to hook into the above-mentioned packages. FWIW, this discussion might contain other ideas for you: <https://discourse.julialang.org/t/solving-for-the-steady-state-of-a-large-nonlinear-ode-in-sciml/50613>","user":"UB197FRCL","ts":"1616372808.219600","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Solving for the steady-state of a large nonlinear ODE in SciML","title_link":"https://discourse.julialang.org/t/solving-for-the-steady-state-of-a-large-nonlinear-ode-in-sciml/50613","text":"I have a few questions: What is the difference in scope between NonlinearSolve.jl and NLSolvers.jl/NLsolve.jl? What are the pros/cons of NonlinearSolve.jl vs NLSolvers.jl/NLsolve.jl? Are there any plans to include the algorithms of SIAMFANLEquations.jl into either/both of NonlinearSolve.jl and NLSolvers.jl/NLsolve.jl? In particular, any plans to include the pseudo-transient continuation solver? Or maybe there are some other versions out there? Are there other packages/solvers I should know ab...","fallback":"JuliaLang: Solving for the steady-state of a large nonlinear ODE in SciML","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"5 mins :clock2:","short":true},{"title":"Likes","value":"17 :heart:","short":true}],"ts":1606111161,"from_url":"https://discourse.julialang.org/t/solving-for-the-steady-state-of-a-large-nonlinear-ode-in-sciml/50613","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/solving-for-the-steady-state-of-a-large-nonlinear-ode-in-sciml/50613"}],"blocks":[{"type":"rich_text","block_id":"dE7y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you should find everything you need in NLsolve.jl (soon to be NLSolvers.jl). There's CTKelley's code SIAMFANLEquations.jl (he replied to you on discourse). There's "},{"type":"link","url":"https://github.com/rveltz/BifurcationKit.jl","text":"BifurcationKit.jl"},{"type":"text","text":"  as well. And then there's NonlinearSolve.jl for SciML to hook into the above-mentioned packages. FWIW, this discussion might contain other ideas for you: "},{"type":"link","url":"https://discourse.julialang.org/t/solving-for-the-steady-state-of-a-large-nonlinear-ode-in-sciml/50613"}]}]}],"thread_ts":"1616364523.217900","parent_user_id":"USTUBS9ED"}]