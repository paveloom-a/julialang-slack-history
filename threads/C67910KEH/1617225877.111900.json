[{"client_msg_id":"a8a2e76d-8a8f-4292-8d75-543c1074b727","type":"message","text":"What's the relationship between CFGs and SSA IR?","user":"UDGT4PM41","ts":"1617225877.111900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9yF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's the relationship between CFGs and SSA IR?"}]}]}],"thread_ts":"1617225877.111900","reply_count":8,"reply_users_count":5,"latest_reply":"1617319022.131700","reply_users":["U6A936746","UMY1LV01G","UDGT4PM41","U01K2JB9GPJ","UKA81L34J"],"is_locked":false,"subscribed":false},{"client_msg_id":"cbeb83b4-419b-479e-ab58-2ab75031f812","type":"message","text":"Julia's CFG is defined on top of it's SSA IR.","user":"U6A936746","ts":"1617226224.112000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O9f4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia's CFG is defined on top of it's SSA IR."}]}]}],"thread_ts":"1617225877.111900","parent_user_id":"UDGT4PM41","reactions":[{"name":"point_up","users":["UMY1LV01G","U01QRM4E8HL"],"count":2}]},{"client_msg_id":"d0b788fa-7bbc-4611-aa9d-063b36c82587","type":"message","text":"They're related but orthogonal concepts. SSA IR doesn't need to be represented as a literal CFG, and you can use a CFG for more than SSA.","user":"UMY1LV01G","ts":"1617226319.112300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zmo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They're related but orthogonal concepts. SSA IR doesn't need to be represented as a literal CFG, and you can use a CFG for more than SSA."}]}]}],"thread_ts":"1617225877.111900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"ed217e63-77c2-43bd-97dc-fd976b5bf407","type":"message","text":"Thank you!","user":"UDGT4PM41","ts":"1617226408.112600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3yeR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you!"}]}]}],"thread_ts":"1617225877.111900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"c26b9be4-50ec-40db-a45f-5c57cbe7e85f","type":"message","text":"I only know what Julia does (and I don't know that well) but from what I understand:\n\nThe SSA IR is basically a list of instructions that are run in order, except some instructions are conditional Jumps. Which can go forwards (like in branch's) or backwards (in loops)\n\nThe CFG then enriches that structure by identifing blocks, such that within a block there are no jumps away nor jumps into.\nIt finds bits that are seperared/connected by jumps.\n\nIn some ways it's like you go from very as structured AST down to unstructured SSA IR and then back up rebuilding the structure to make the CFG.\nBut the AST is actually really annoying to work with as it has many ways to say the same thing","user":"U6A936746","ts":"1617226524.112900","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1617226954.000000"},"blocks":[{"type":"rich_text","block_id":"zam","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I only know what Julia does (and I don't know that well) but from what I understand:\n\nThe SSA IR is basically a list of instructions that are run in order, except some instructions are conditional Jumps. Which can go forwards (like in branch's) or backwards (in loops)\n\nThe CFG then enriches that structure by identifing blocks, such that within a block there are no jumps away nor jumps into.\nIt finds bits that are seperared/connected by jumps.\n\nIn some ways it's like you go from very as structured AST down to unstructured SSA IR and then back up rebuilding the structure to make the CFG.\nBut the AST is actually really annoying to work with as it has many ways to say the same thing"}]}]}],"thread_ts":"1617225877.111900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"f750fff6-dfc7-436f-9cb0-f47ddd41f3ff","type":"message","text":"The next one is the dominance tree (or DomTree, no relation to HTML)\nThat is tells you which statements (or blocks) definitely occur before others based on the code flow graph.\nSo it can tell you were variables are certain to have been /not yet have been defined","user":"U6A936746","ts":"1617226672.113100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1rQd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The next one is the dominance tree (or DomTree, no relation to HTML)\nThat is tells you which statements (or blocks) definitely occur before others based on the code flow graph.\nSo it can tell you were variables are certain to have been /not yet have been defined"}]}]}],"thread_ts":"1617225877.111900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"a1913acb-dc56-44da-b4ec-181d6b666ffb","type":"message","text":"Thanks!","user":"U01K2JB9GPJ","ts":"1617230248.114400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CipV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks!"}]}]}],"thread_ts":"1617225877.111900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"189a2bcc-3c85-45aa-8f8f-4c4f9105c251","type":"message","text":"Thanks lyndon and Brian, this was very helpful for a discussion I was having with Alessandro about using metatheory for compiler passes","user":"UDGT4PM41","ts":"1617237165.115700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e9tW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks lyndon and Brian, this was very helpful for a discussion I was having with Alessandro about using metatheory for compiler passes"}]}]}],"thread_ts":"1617225877.111900","parent_user_id":"UDGT4PM41"},{"client_msg_id":"C9F41976-4A5A-46A9-8C1C-0C7DC67FD103","type":"message","text":"Re - <@U6A936746> discussion about domtree computations. Computing those topological features of the CFG allow you to detect natural loops in the CFG. Loop analysis is obviously highly important for compilers. This is of course not something which is blatantly obvious from the linear IR. The CFG is often times the first step in construction global (e.g. interprocedural) analyses","user":"UKA81L34J","ts":"1617319022.131700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J+MU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Re - "},{"type":"user","user_id":"U6A936746"},{"type":"text","text":" discussion about domtree computations. Computing those topological features of the CFG allow you to detect natural loops in the CFG. Loop analysis is obviously highly important for compilers. This is of course not something which is blatantly obvious from the linear IR. The CFG is often times the first step in construction global (e.g. interprocedural) analyses"}]}]}],"thread_ts":"1617225877.111900","parent_user_id":"UDGT4PM41"}]