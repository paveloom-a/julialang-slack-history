[{"client_msg_id":"d4966318-d22d-479f-a61c-971456da9b28","type":"message","text":"Hi all, I am having trouble generating names for an empty DataFrame.  I need to generate them as follows:\n```df = DataFrame()\nnames!(df, [Symbol(i) for i in 1.5:0.5:5])```\nBut this throws an error because the data frame doesn’t expect that many column names.  Does anyone know how to do this?  I don’t have to want to write\n```df = DataFrame(1.5 = Float64[], 2.0 = Float64[], 2.5 = Float64[]) # etc.```\nbecause that will take a long time…","user":"U014LRLJXRP","ts":"1613168710.496400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=pch","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all, I am having trouble generating names for an empty DataFrame.  I need to generate them as follows:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df = DataFrame()\nnames!(df, [Symbol(i) for i in 1.5:0.5:5])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"But this throws an error because the data frame doesn’t expect that many column names.  Does anyone know how to do this?  I don’t have to want to write\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df = DataFrame(1.5 = Float64[], 2.0 = Float64[], 2.5 = Float64[]) # etc."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"because that will take a long time…"}]}]}],"thread_ts":"1613168710.496400","reply_count":4,"reply_users_count":4,"latest_reply":"1613217001.007900","reply_users":["U680THK2S","U01HD5VFXJM","U014LRLJXRP","U6A936746"],"subscribed":false},{"client_msg_id":"405bf524-877c-4e13-9fd1-f0cac558cde2","type":"message","text":"```julia&gt; DataFrame([Float64, Int], [:a, :b])\n0×2 DataFrame\n\njulia&gt; names(ans)\n2-element Array{String,1}:\n \"a\"\n \"b\"```","user":"U680THK2S","ts":"1613169188.496600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s3y","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> DataFrame([Float64, Int], [:a, :b])\n0×2 DataFrame\n\njulia> names(ans)\n2-element Array{String,1}:\n \"a\"\n \"b\""}]}]}],"thread_ts":"1613168710.496400","parent_user_id":"U014LRLJXRP"},{"client_msg_id":"eb268b0f-0358-41f1-840b-7b231cdcab41","type":"message","text":"```df = DataFrame(Dict(Symbol(i) =&gt; Float64[] for i in 1.5:0.5:5))```","user":"U01HD5VFXJM","ts":"1613169424.497200","team":"T68168MUP","edited":{"user":"U01HD5VFXJM","ts":"1613169436.000000"},"blocks":[{"type":"rich_text","block_id":"bIp","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df = DataFrame(Dict(Symbol(i) => Float64[] for i in 1.5:0.5:5))"}]}]}],"thread_ts":"1613168710.496400","parent_user_id":"U014LRLJXRP"},{"client_msg_id":"5ddfb2fe-1188-4ee0-8bf6-e043c5e3972b","type":"message","text":"<@U680THK2S> ahh, I tried `DataFrame(Float64, [:a, :b])` but not the types in a vector.  <@U01HD5VFXJM> thank you for your solution! :slightly_smiling_face:","user":"U014LRLJXRP","ts":"1613169846.498300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MX3ty","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U680THK2S"},{"type":"text","text":" ahh, I tried "},{"type":"text","text":"DataFrame(Float64, [:a, :b])","style":{"code":true}},{"type":"text","text":" but not the types in a vector.  "},{"type":"user","user_id":"U01HD5VFXJM"},{"type":"text","text":" thank you for your solution! "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1613168710.496400","parent_user_id":"U014LRLJXRP","reactions":[{"name":"+1","users":["U01HD5VFXJM","U01C15GH58B","U680THK2S"],"count":3}]},{"client_msg_id":"4c04ea99-e4d3-4372-8df6-00f57f9cab74","type":"message","text":"`DataFrame([\"a\", \"b\", \"c\"] .=&gt; Ref(Float64[]))`\nworks\nit doesn’t even alias the columns, because DataFrames copies columns on input.\n(Just like the `Vector`  constructor itself does)","user":"U6A936746","ts":"1613217001.007900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WD4MP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"DataFrame([\"a\", \"b\", \"c\"] .=> Ref(Float64[]))","style":{"code":true}},{"type":"text","text":"\nworks\nit doesn’t even alias the columns, because DataFrames copies columns on input.\n(Just like the "},{"type":"text","text":"Vector","style":{"code":true}},{"type":"text","text":"  constructor itself does)"}]}]}],"thread_ts":"1613168710.496400","parent_user_id":"U014LRLJXRP","reactions":[{"name":"+1","users":["U014LRLJXRP"],"count":1}]}]