[{"client_msg_id":"1a68fa52-e509-46da-887c-fe25d8fa9929","type":"message","text":"I'm working on a Julia interface for some C codes and I'm not sure what I should do for the structure :\n```struct zqrm_spfct_type_c{\n  int          *cperm_in;\n  int           icntl[20];\n  float         rcntl[10];\n  long int      gstats[10];\n  void         *h; \n};```\nIn Julia, it should be :\n```mutable struct qrm_spfct{T} &lt;: Factorization{T}\n  cperm_in :: Ptr{Cint}\n  icntl    :: NTuple{20, Cint}\n  rcntl    :: NTuple{10, Cfloat}\n  gstats   :: NTuple{10, Clonglong}\n  h        :: Ptr{Cvoid}\nend```\nbut some C routines update `icntl`  and `rcntl` . It's a problem because `NTuple` are immutable.\n\nShould I use `Ptr{Cint}` and `Ptr{Cfloat}` instead ?","user":"UGG8Z375L","ts":"1614822230.470500","team":"T68168MUP","edited":{"user":"UGG8Z375L","ts":"1614822534.000000"},"blocks":[{"type":"rich_text","block_id":"uvhg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm working on a Julia interface for some C codes and I'm not sure what I should do for the structure :\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct zqrm_spfct_type_c{\n  int          *cperm_in;\n  int           icntl[20];\n  float         rcntl[10];\n  long int      gstats[10];\n  void         *h; \n};"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"In Julia, it should be :\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"mutable struct qrm_spfct{T} <: Factorization{T}\n  cperm_in :: Ptr{Cint}\n  icntl    :: NTuple{20, Cint}\n  rcntl    :: NTuple{10, Cfloat}\n  gstats   :: NTuple{10, Clonglong}\n  h        :: Ptr{Cvoid}\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but some C routines update "},{"type":"text","text":"icntl","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"rcntl","style":{"code":true}},{"type":"text","text":" . It's a problem because "},{"type":"text","text":"NTuple","style":{"code":true}},{"type":"text","text":" are immutable.\n\nShould I use "},{"type":"text","text":"Ptr{Cint}","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Ptr{Cfloat}","style":{"code":true}},{"type":"text","text":" instead ?"}]}]}],"thread_ts":"1614822230.470500","reply_count":2,"reply_users_count":2,"latest_reply":"1614834913.473800","reply_users":["U69J94HT9","U01FKQQ7J0J"],"subscribed":false},{"client_msg_id":"f7ae91eb-081a-4b91-9f6e-48eff00ada51","type":"message","text":"You might try using an `MVector` from StaticArrays.jl, which implements mutation on top of NTuples. I'm not sure if it will translate across ccall properly given that it's a wrapper type but you could always try.","user":"U69J94HT9","ts":"1614823200.471100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FhX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might try using an "},{"type":"text","text":"MVector","style":{"code":true}},{"type":"text","text":" from StaticArrays.jl, which implements mutation on top of NTuples. I'm not sure if it will translate across ccall properly given that it's a wrapper type but you could always try."}]}]}],"thread_ts":"1614822230.470500","parent_user_id":"UGG8Z375L"},{"client_msg_id":"2c5e89ed-ea35-4288-be69-64f717d6c562","type":"message","text":"The Julia Manual states that \"Arrays of parameters can be expressed with `NTuple`\": <https://docs.julialang.org/en/v1/manual/calling-c-and-fortran-code/#Struct-Type-Correspondences>","user":"U01FKQQ7J0J","ts":"1614834913.473800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LUnf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The Julia Manual states that \"Arrays of parameters can be expressed with "},{"type":"text","text":"NTuple","style":{"code":true}},{"type":"text","text":"\": "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/calling-c-and-fortran-code/#Struct-Type-Correspondences"}]}]}],"thread_ts":"1614822230.470500","parent_user_id":"UGG8Z375L"}]