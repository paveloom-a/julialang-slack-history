[{"client_msg_id":"1f3e025b-5a48-4b90-a34e-575f016d8ce8","type":"message","text":"Just wondering...\nWill Julia ever get independent of LLVM?","user":"U01AJUF2GEP","ts":"1613114640.443900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DYeB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just wondering...\nWill Julia ever get independent of LLVM?"}]}]}],"thread_ts":"1613114640.443900","reply_count":28,"reply_users_count":8,"latest_reply":"1613205739.006300","reply_users":["UCCUV9K0S","UH24GRBLL","U01AJUF2GEP","U6A936746","U67D54KS8","UH8A351DJ","UC81ESVH6","U6QGE7S86"],"subscribed":false},{"client_msg_id":"88e434ff-3ce5-4291-b7b2-ebb8b69b2bd3","type":"message","text":"My guess is only if it forks LLVM :slightly_smiling_face:","user":"UCCUV9K0S","ts":"1613114873.444200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NSLlM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My guess is only if it forks LLVM "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"d087bab8-f989-49fb-bd1a-3f5c0be557e9","type":"message","text":"No.","user":"UH24GRBLL","ts":"1613115080.444400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jsf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"11e92ae2-55fd-4f6c-bd4c-3dcd07814084","type":"message","text":"Really？:face_with_rolling_eyes:","user":"U01AJUF2GEP","ts":"1613115193.444600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xPJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Really？"},{"type":"emoji","name":"face_with_rolling_eyes"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"066a4b59-b25c-423f-9b22-c1f7cd035a36","type":"message","text":"Using LLVM brings a lot of benefits to the table.","user":"UH24GRBLL","ts":"1613115217.444800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yUMY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Using LLVM brings a lot of benefits to the table."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP","reactions":[{"name":"+1","users":["U7THT3TM3","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"e5a72424-4db0-4335-b16d-ac2cc663364f","type":"message","text":"Architecture/CPU specific optimizations, compiler passes, backend specific bindings...","user":"UH24GRBLL","ts":"1613115262.445000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nJRJ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Architecture/CPU specific optimizations, compiler passes, backend specific bindings..."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"9b51d14d-7699-4bed-a8e8-617c29b4473d","type":"message","text":"If you want to get rid of LLVM, you'd have to replicate all that.","user":"UH24GRBLL","ts":"1613115273.445200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ekJy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you want to get rid of LLVM, you'd have to replicate all that."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"7667a997-f789-43b3-9ed2-a0813fbd7c57","type":"message","text":"Ohhh...:grimacing:","user":"U01AJUF2GEP","ts":"1613115291.445400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HC5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ohhh..."},{"type":"emoji","name":"grimacing"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"82125d52-e82c-47f2-868d-1f044aed3c34","type":"message","text":"Writing \"a\" compiler for x86 is not that hard. Writing an efficient compiler for x86, x86_64, AArch, AArch64 and PowerPC is.. challenging","user":"UH24GRBLL","ts":"1613115359.445600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MlyT/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Writing \"a\" compiler for x86 is not that hard. Writing an efficient compiler for x86, x86_64, AArch, AArch64 and PowerPC is.. challenging"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"5a63bfde-5168-4824-ab86-d7f5d0a2cc23","type":"message","text":"Julia has support for static compilation, which is expected to get better by 1.7\n\nWill that static compliation mean \"a binary that links to LLVM\"?\nOr a complete AOT compiled binary?","user":"U01AJUF2GEP","ts":"1613115516.445800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jgkDf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia has support for static compilation, which is expected to get better by 1.7\n\nWill that static compliation mean \"a binary that links to LLVM\"?\nOr a complete AOT compiled binary?"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"63c73d6f-b66e-46f9-ae1c-e4fbd2b6c9a5","type":"message","text":"Still, assuming we'd have a magic Julia -&gt; x86 direct compiler, the first thing you'd see is (probably) linking problems you forgot to account for in the compiler. Assuming those are fixed, you'd probably see a big performance hit - all the optimizations that went into the existing Julia -&gt; LLVM compiler (and LLVM -&gt; x86 for that matter) are *poof* gone.","user":"UH24GRBLL","ts":"1613115547.446000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K3YNk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Still, assuming we'd have a magic Julia -> x86 direct compiler, the first thing you'd see is (probably) linking problems you forgot to account for in the compiler. Assuming those are fixed, you'd probably see a big performance hit - all the optimizations that went into the existing Julia -> LLVM compiler (and LLVM -> x86 for that matter) are "},{"type":"text","text":"poof","style":{"bold":true}},{"type":"text","text":" gone."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"06a5385f-38b6-4014-80b9-b15d6b3db611","type":"message","text":"&gt; Julia has support for static compilation, which is expected to get better by 1.7\n&gt; Will that static compliation mean \"a binary that links to LLVM\"?\n&gt; Or a complete AOT compiled binary?\n&gt; \n<@UH24GRBLL> Which one？","user":"U01AJUF2GEP","ts":"1613115712.446200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K9/tX","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Julia has support for static compilation, which is expected to get better by 1.7\n"},{"type":"text","text":"Will that static compliation mean \"a binary that links to LLVM\"?\n"},{"type":"text","text":"Or a complete AOT compiled binary?\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"},{"type":"user","user_id":"UH24GRBLL"},{"type":"text","text":" Which one？"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"62661463-07f6-4f02-8cab-1b32a7f6c0d4","type":"message","text":"I don't know sorry - in that regard I'm a bystander just as anyone else","user":"UH24GRBLL","ts":"1613115755.446400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SL+0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know sorry - in that regard I'm a bystander just as anyone else"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"34d021e8-2644-4ddc-ad5b-951ac0d957b0","type":"message","text":"My guess would be in a first iteration the first one (there has been some work in that direction, though I can't find the specific PR seperating the runtime from codegen right now) and possibly later the second one.","user":"UH24GRBLL","ts":"1613115800.446600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MC=V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My guess would be in a first iteration the first one (there has been some work in that direction, though I can't find the specific PR seperating the runtime from codegen right now) and possibly later the second one."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"c1203f61-049d-473b-88ed-563c97368bfd","type":"message","text":"THANKS！","user":"U01AJUF2GEP","ts":"1613115829.446800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/2Ea","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"THANKS！"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"5fc75013-4398-44f3-8dda-04f610f31a85","type":"message","text":"it's still a ways out, FYI","user":"UH24GRBLL","ts":"1613115976.447000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RNE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's still a ways out, FYI"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"4b6b7372-44fe-4a10-ad71-9852d529770d","type":"message","text":"Eh, if they're considering it, its just a matter of time","user":"U01AJUF2GEP","ts":"1613116062.447200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0jx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Eh, if they're considering it, its just a matter of time"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"c1319276-1afd-427f-abcd-80b029db463b","type":"message","text":"well there already is PackageCompiler, that was the very first step","user":"UH24GRBLL","ts":"1613117301.447500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5TQmu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well there already is PackageCompiler, that was the very first step"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP","reactions":[{"name":"+1","users":["U01AJUF2GEP"],"count":1}]},{"client_msg_id":"16075569-5b41-4418-bcc3-62a86d6df060","type":"message","text":"Why would one want to not use LLVM?","user":"U6A936746","ts":"1613120693.447800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qcd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why would one want to not use LLVM?"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP","reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"241dbbcc-c72b-45e7-b044-d76d2698d205","type":"message","text":"Mostly because it is slow so when developing you might want to use a faster compiler , that's why e.g. Rust is looking at alternatives (<https://jason-williams.co.uk/a-possible-new-backend-for-rust>)","user":"U67D54KS8","ts":"1613124771.453200","team":"T68168MUP","attachments":[{"title":"A Possible New Backend for Rust – Jason Williams","title_link":"https://jason-williams.co.uk/a-possible-new-backend-for-rust","text":"Is that a compiler backend or frontend? Cranelift Bringing this together Benchmarks Footnotes LLVM originally stood for Low Level Virtual Machine but this was dropped as LLVM is no longer a virtual machine and more of a library of utilities. <https://github.com/rust-lang/rust/tree/master/src/librustc_codegen_llvm> <https://blog.rust-lang.org/2016/04/19/MIR.html> Rust Compile times have been brought up in both the 2017, 2018 and […]","fallback":"A Possible New Backend for Rust – Jason Williams","from_url":"https://jason-williams.co.uk/a-possible-new-backend-for-rust","service_name":"jason-williams.co.uk","id":1,"original_url":"https://jason-williams.co.uk/a-possible-new-backend-for-rust"}],"blocks":[{"type":"rich_text","block_id":"KUh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Mostly because it is slow so when developing you might want to use a faster compiler , that's why e.g. Rust is looking at alternatives ("},{"type":"link","url":"https://jason-williams.co.uk/a-possible-new-backend-for-rust"},{"type":"text","text":")"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP","reactions":[{"name":"+1","users":["U7THT3TM3","U01AJUF2GEP","U6QGE7S86"],"count":3},{"name":"ok_hand","users":["U6A936746","U6QGE7S86"],"count":2}]},{"client_msg_id":"d02b074c-7509-46e6-9231-bbf9f57d7ad7","type":"message","text":"Exactly....","user":"U01AJUF2GEP","ts":"1613126159.453800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lIy49","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Exactly...."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"a0033cfc-c4e3-44cc-b1f7-886e1b343d14","type":"message","text":"it's slow as a compiler, not that the code it emits is slow (at runtime) right?","user":"UH8A351DJ","ts":"1613126868.454200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pz8+v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's slow as a compiler, not that the code it emits is slow (at runtime) right?"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"7cceb282-17f7-49b1-839a-15fe234526ea","type":"message","text":"Well... I think reducing the compile time is pretty important for one....\nAt runtime, I think I heard that the most recent version of gcc was faster than LLVM....","user":"U01AJUF2GEP","ts":"1613128661.461100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0I1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well... I think reducing the compile time is pretty important for one....\nAt runtime, I think I heard that the most recent version of gcc was faster than LLVM...."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"f2d71990-4e22-4aa5-ac56-a4423442f10d","type":"message","text":"gcc is not nearly as versatile as LLVM...","user":"UH8A351DJ","ts":"1613129934.468100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WlGN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"gcc is not nearly as versatile as LLVM..."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"829e0991-fed2-4c15-a5bc-d894a57502ab","type":"message","text":"There are other backends, like QBE <https://c9x.me/compile/|https://c9x.me/compile/>","user":"UC81ESVH6","ts":"1613144738.477100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WFvt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are other backends, like QBE "},{"type":"link","url":"https://c9x.me/compile/","text":"https://c9x.me/compile/"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"eb3fe761-c3f6-4168-bf2c-1639f0045843","type":"message","text":"Agree with Kristoffere here - it seems the Rust people are using Cranelift to iterate debug/design compilation cycles and once it \"works\" you compile it with the big one for the perf benefits.","user":"U6QGE7S86","ts":"1613150920.485600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0KaVl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Agree with Kristoffere here - it seems the Rust people are using Cranelift to iterate debug/design compilation cycles and once it \"works\" you compile it with the big one for the perf benefits."}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"b2b22cf1-f71c-409f-b39d-f976cd7eef11","type":"message","text":"<@U67D54KS8> I think by 2022, we'll have serious replacements, to LLVM\nFrom what I can see... Many languages are dropping LLVM in their further releases:face_with_rolling_eyes:","user":"U01AJUF2GEP","ts":"1613203432.005900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5eEO","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":" I think by 2022, we'll have serious replacements, to LLVM\nFrom what I can see... Many languages are dropping LLVM in their further releases"},{"type":"emoji","name":"face_with_rolling_eyes"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"c1095b7e-464d-4cee-a192-97e4712ed231","type":"message","text":"I hope that Julia can make the jump sometime too...\n\nI'll be honest, the compile time is annoying, and its not going anywhere as long as it uses LLVM...:face_with_rolling_eyes::slightly_smiling_face:","user":"U01AJUF2GEP","ts":"1613203501.006100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uyW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I hope that Julia can make the jump sometime too...\n\nI'll be honest, the compile time is annoying, and its not going anywhere as long as it uses LLVM..."},{"type":"emoji","name":"face_with_rolling_eyes"},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP"},{"client_msg_id":"c3cb02d0-9582-4fd4-b5f2-1fdd14ea168a","type":"message","text":"I wouldn't bet my life savings on it ;)","user":"U67D54KS8","ts":"1613205739.006300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4pF=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wouldn't bet my life savings on it ;)"}]}]}],"thread_ts":"1613114640.443900","parent_user_id":"U01AJUF2GEP","reactions":[{"name":"sonic","users":["UH24GRBLL"],"count":1}]}]