[{"client_msg_id":"4a3036da-55bf-4796-8bae-729bdbf3c93c","type":"message","text":"Would it be worth it for `DataStructures.CircularBuffer` to be backed by `SVector`?","user":"UH9KWTTD3","ts":"1615570050.183400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ibRGv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would it be worth it for "},{"type":"text","text":"DataStructures.CircularBuffer","style":{"code":true}},{"type":"text","text":" to be backed by "},{"type":"text","text":"SVector","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1615570050.183400","reply_count":7,"reply_users_count":2,"latest_reply":"1615577686.186400","reply_users":["U67G3QRJM","UH9KWTTD3"],"subscribed":false},{"client_msg_id":"81903b1a-2cb6-47ea-9a5b-c36ed6775e78","type":"message","text":"Not if you want to allow vectors longer than a frw tens of elements, no","user":"U67G3QRJM","ts":"1615573412.184500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XOX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not if you want to allow vectors longer than a frw tens of elements, no"}]}]}],"thread_ts":"1615570050.183400","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"ddac7d4f-6421-4137-a06c-a96002f57df9","type":"message","text":"But you might want to allow it to be backed by any type of suitable data structure","user":"U67G3QRJM","ts":"1615573483.184700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ksx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But you might want to allow it to be backed by any type of suitable data structure"}]}]}],"thread_ts":"1615570050.183400","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"b136158c-e7ac-43a1-8953-9149c381d416","type":"message","text":"What would you gain by using an svector? The performance should be the same once created I think.","user":"U67G3QRJM","ts":"1615573509.184900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tGvTI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What would you gain by using an svector? The performance should be the same once created I think."}]}]}],"thread_ts":"1615570050.183400","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"f5fe342a-3ffa-4125-bc30-b62cb2fa2c61","type":"message","text":"I was thinking that for smaller vectors on the cpu it would be faster linalg operations","user":"UH9KWTTD3","ts":"1615574858.185600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gV6W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was thinking that for smaller vectors on the cpu it would be faster linalg operations"}]}]}],"thread_ts":"1615570050.183400","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"f9d45722-48da-400c-ba50-aa93959c83c9","type":"message","text":"But sounds like I should look into how small these vectors really are for my application","user":"UH9KWTTD3","ts":"1615574895.185800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4GQXp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But sounds like I should look into how small these vectors really are for my application"}]}]}],"thread_ts":"1615570050.183400","parent_user_id":"UH9KWTTD3","reactions":[{"name":"point_up","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"c235a0c2-f41f-46a0-9190-5e4090986c55","type":"message","text":"I don’t think it would be usual to do linalg on a CircularBuffer?","user":"U67G3QRJM","ts":"1615576848.186100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jfta","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t think it would be usual to do linalg on a CircularBuffer?"}]}]}],"thread_ts":"1615570050.183400","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"e41062ab-2605-4e9a-b470-2ac6b492a4ab","type":"message","text":"Yeah in my case it’s really a vector of time data that grows with the simulation length. So operationally, I want a vector, but CircularBuffer is a way for me to preallocate and to automatically throw out old data that no longer affects the solution output.","user":"UH9KWTTD3","ts":"1615577686.186400","team":"T68168MUP","edited":{"user":"UH9KWTTD3","ts":"1615577714.000000"},"blocks":[{"type":"rich_text","block_id":"33Z3b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah in my case it’s really a vector of time data that grows with the simulation length. So operationally, I want a vector, but CircularBuffer is a way for me to preallocate and to automatically throw out old data that no longer affects the solution output."}]}]}],"thread_ts":"1615570050.183400","parent_user_id":"UH9KWTTD3"}]