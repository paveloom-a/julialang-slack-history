[{"client_msg_id":"e273b678-e37b-44b0-92c4-8177156b7562","type":"message","text":"I seem to be having trouble getting PyCall to use the right Python version. I try to do `pyimport_conda(\"numpy\", \"numpy\")` and get:\n```PyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) &lt;class 'ImportError'&gt;\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in &lt;module&gt;\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in &lt;module&gt;\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in &lt;module&gt;\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in &lt;module&gt;\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in &lt;module&gt;\n    from . import multiarray```\nI tried setting `ENV[\"PYTHON\"]` to the path directly to Conda.jl’s python3.8 as suggested in the error and also to the empty string as suggested in the docs (and rebuilding PyCall and restarting Julia), and in both cases I get this error that seems to suggest it’s using the system’s python2.7 (when I Google this “dynamic module” error it is indeed due to some incompatibilities between Python 2 and 3)\n\nAnyone have insights?\n\n(I’m obviously not just trying to call numpy from Julia but rather another package that depends on it, but I’ve isolated the issue to being related to (at least) numpy…)","user":"UN8HY6PS9","ts":"1615476095.110500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mOh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I seem to be having trouble getting PyCall to use the right Python version. I try to do "},{"type":"text","text":"pyimport_conda(\"numpy\", \"numpy\")","style":{"code":true}},{"type":"text","text":" and get:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"PyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) <class 'ImportError'>\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in <module>\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in <module>\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in <module>\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in <module>\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in <module>\n    from . import multiarray"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I tried setting "},{"type":"text","text":"ENV[\"PYTHON\"]","style":{"code":true}},{"type":"text","text":" to the path directly to Conda.jl’s python3.8 as suggested in the error and also to the empty string as suggested in the docs (and rebuilding PyCall and restarting Julia), and in both cases I get this error that seems to suggest it’s using the system’s python2.7 (when I Google this “dynamic module” error it is indeed due to some incompatibilities between Python 2 and 3)\n\nAnyone have insights?\n\n(I’m obviously not just trying to call numpy from Julia but rather another package that depends on it, but I’ve isolated the issue to being related to (at least) numpy…)"}]}]}],"thread_ts":"1615476095.110500","reply_count":15,"reply_users_count":4,"latest_reply":"1615477425.120000","reply_users":["U013V2CFZAN","UN8HY6PS9","UH24GRBLL","U66SR8JHX"],"subscribed":false},{"client_msg_id":"004e7719-3aaa-4f98-8b75-173d70d7ea15","type":"message","text":"ah yes, I have seen this before","user":"U013V2CFZAN","ts":"1615476165.110600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cEC0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah yes, I have seen this before"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"2e986221-1d0c-457f-ae55-abe5abdb105d","type":"message","text":"you have another python on your PATH","user":"U013V2CFZAN","ts":"1615476180.110800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s/j3a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you have another python on your PATH"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"6b847484-2636-4eb1-a526-aef27a9871f6","type":"message","text":"but I thought `ENV[\"PYTHON\"]` was supposed to supersede that…? You’re saying if I just change the Python on my path to be the Conda.jl one it should work?","user":"UN8HY6PS9","ts":"1615476238.111000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hi1T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I thought "},{"type":"text","text":"ENV[\"PYTHON\"]","style":{"code":true}},{"type":"text","text":" was supposed to supersede that…? You’re saying if I just change the Python on my path to be the Conda.jl one it should work?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"e5ce7a16-f297-4139-a036-f4b5b5451eb6","type":"message","text":"did you `]build PyCall` after changing `ENV`?","user":"UH24GRBLL","ts":"1615476323.111200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e+sD8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"did you "},{"type":"text","text":"]build PyCall","style":{"code":true}},{"type":"text","text":" after changing "},{"type":"text","text":"ENV","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"5e7b3a60-08c3-401d-a3c3-32df0e95941d","type":"message","text":"so, I will recommend to do the following:\n1. Restart Julia\n2. `ENV[\"PYTHON\"] = \"\"`\n3. ]build PyCall\n4. `using PyCall`\n5. Also, make sure that you have numpy installed with `Conda.add(\"numpy\")`","user":"U013V2CFZAN","ts":"1615476326.111400","team":"T68168MUP","edited":{"user":"U013V2CFZAN","ts":"1615476438.000000"},"blocks":[{"type":"rich_text","block_id":"teoo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so, I will recommend to do the following:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Restart Julia"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"ENV[\"PYTHON\"] = \"\"","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"]build PyCall"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"using PyCall","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Also, make sure that you have numpy installed with "},{"type":"text","text":"Conda.add(\"numpy\")","style":{"code":true}}]}],"style":"ordered","indent":0}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"b3d1ef1a-4f31-4398-a970-fed40f0d22bb","type":"message","text":"<@UH24GRBLL> yes\n<@U013V2CFZAN> that’s exactly what I’ve been doing but I’ll try again now just to be 100% sure","user":"UN8HY6PS9","ts":"1615476406.111700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EivJV","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UH24GRBLL"},{"type":"text","text":" yes\n"},{"type":"user","user_id":"U013V2CFZAN"},{"type":"text","text":" that’s exactly what I’ve been doing but I’ll try again now just to be 100% sure"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"213eb817-6e04-4245-84d2-c8bd7b7fd1a2","type":"message","text":"okay here we go…\n","user":"UN8HY6PS9","ts":"1615476543.112000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vDD5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay here we go…\n"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"213eb817-6e04-4245-84d2-c8bd7b7fd1a2","type":"message","text":"```[rkurchin@c01 ~]$ julia\n               _\n   _       _ _(_)_     |  Documentation: <https://docs.julialang.org>\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.5.2 (2020-09-23)\n _/ |\\__'_|_|_|\\__'_|  |  Official <https://julialang.org/> release\n|__/                   |\n\njulia&gt; ENV[\"PYTHON\"] = \"\"\n\"\"\n\n(@v1.5) pkg&gt; build PyCall\n   Building Conda ─→ `~/.julia/packages/Conda/tJJuN/deps/build.log`\n   Building PyCall → `~/.julia/packages/PyCall/tqyST/deps/build.log`\n\njulia&gt; using PyCall\n\njulia&gt; Conda.add(\"numpy\")\nERROR: UndefVarError: Conda not defined\nStacktrace:\n [1] top-level scope at REPL[4]:1\n\njulia&gt; using Conda\n\njulia&gt; Conda.add(\"numpy\")\n[ Info: Running `conda install -y numpy` in root environment\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n# All requested packages already installed.\n\n\njulia&gt; np = pyimport_conda(\"numpy\", \"numpy\")\n[ Info: Installing numpy via the Conda numpy package...\n[ Info: Running `conda install -y numpy` in root environment\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n# All requested packages already installed.\n\nERROR: PyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) &lt;class 'ImportError'&gt;\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in &lt;module&gt;\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in &lt;module&gt;\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in &lt;module&gt;\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in &lt;module&gt;\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in &lt;module&gt;\n    from . import multiarray\n\nStacktrace:\n [1] pyimport(::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:547\n [2] pyimport_conda(::String, ::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:711\n [3] pyimport_conda(::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:704\n [4] top-level scope at REPL[7]:1\ncaused by [exception 1]\nPyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) &lt;class 'ImportError'&gt;\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in &lt;module&gt;\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in &lt;module&gt;\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in &lt;module&gt;\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in &lt;module&gt;\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in &lt;module&gt;\n    from . import multiarray\n\nStacktrace:\n [1] pyimport(::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:547\n [2] pyimport_conda(::String, ::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:705\n [3] pyimport_conda(::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:704\n [4] top-level scope at REPL[7]:1```","user":"UN8HY6PS9","ts":"1615476543.112200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vDD5-Rqn","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[rkurchin@c01 ~]$ julia\n               _\n   _       _ _(_)_     |  Documentation: "},{"type":"link","url":"https://docs.julialang.org"},{"type":"text","text":"\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.5.2 (2020-09-23)\n _/ |\\__'_|_|_|\\__'_|  |  Official "},{"type":"link","url":"https://julialang.org/"},{"type":"text","text":" release\n|__/                   |\n\njulia> ENV[\"PYTHON\"] = \"\"\n\"\"\n\n(@v1.5) pkg> build PyCall\n   Building Conda ─→ `~/.julia/packages/Conda/tJJuN/deps/build.log`\n   Building PyCall → `~/.julia/packages/PyCall/tqyST/deps/build.log`\n\njulia> using PyCall\n\njulia> Conda.add(\"numpy\")\nERROR: UndefVarError: Conda not defined\nStacktrace:\n [1] top-level scope at REPL[4]:1\n\njulia> using Conda\n\njulia> Conda.add(\"numpy\")\n[ Info: Running `conda install -y numpy` in root environment\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n# All requested packages already installed.\n\n\njulia> np = pyimport_conda(\"numpy\", \"numpy\")\n[ Info: Installing numpy via the Conda numpy package...\n[ Info: Running `conda install -y numpy` in root environment\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n# All requested packages already installed.\n\nERROR: PyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) <class 'ImportError'>\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in <module>\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in <module>\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in <module>\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in <module>\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in <module>\n    from . import multiarray\n\nStacktrace:\n [1] pyimport(::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:547\n [2] pyimport_conda(::String, ::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:711\n [3] pyimport_conda(::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:704\n [4] top-level scope at REPL[7]:1\ncaused by [exception 1]\nPyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) <class 'ImportError'>\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in <module>\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in <module>\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in <module>\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in <module>\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in <module>\n    from . import multiarray\n\nStacktrace:\n [1] pyimport(::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:547\n [2] pyimport_conda(::String, ::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:705\n [3] pyimport_conda(::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:704\n [4] top-level scope at REPL[7]:1"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"213eb817-6e04-4245-84d2-c8bd7b7fd1a2","type":"message","text":"","user":"UN8HY6PS9","ts":"1615476543.112400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vDD5-Rqn-1BTN7","elements":[{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"acc28e10-e198-4801-b410-dba7ffdd3070","type":"message","text":"my bad, you needed `using Conda` before  `Conda.add(\"numpy\")`","user":"U013V2CFZAN","ts":"1615476627.112600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=PHAK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"my bad, you needed "},{"type":"text","text":"using Conda","style":{"code":true}},{"type":"text","text":" before  "},{"type":"text","text":"Conda.add(\"numpy\")","style":{"code":true}}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"6765683e-5e98-4e76-a0f1-8de2df79d41a","type":"message","text":"but you figured that out","user":"U013V2CFZAN","ts":"1615476650.112800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i219","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but you figured that out"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"eabee79f-7f67-4685-a30b-d8b1fc968fee","type":"message","text":"and it still gives the same error lol","user":"UN8HY6PS9","ts":"1615476677.113000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=Jl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it still gives the same error lol"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"65b1e26d-7eb5-410d-a4e8-4c8466864a0b","type":"message","text":"did you say that it was python 3.8?","user":"U013V2CFZAN","ts":"1615476691.113200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NOkBz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"did you say that it was python 3.8?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"611b674a-baa5-447c-8d13-e2f5884bd1e2","type":"message","text":"could you try with 3.7?","user":"U013V2CFZAN","ts":"1615476697.113400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ew9c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"could you try with 3.7?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"24f7f7b9-fef6-4fac-a23d-f6ceff68e6d2","type":"message","text":"What happens if you do `np = pyimport(\"numpy\")` instead?","user":"U66SR8JHX","ts":"1615477425.120000","team":"T68168MUP","edited":{"user":"U66SR8JHX","ts":"1615479458.000000"},"blocks":[{"type":"rich_text","block_id":"S58","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What happens if you do "},{"type":"text","text":"np = pyimport(\"numpy\")","style":{"code":true}},{"type":"text","text":" instead?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"}]