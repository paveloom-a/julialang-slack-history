[{"client_msg_id":"e273b678-e37b-44b0-92c4-8177156b7562","type":"message","text":"I seem to be having trouble getting PyCall to use the right Python version. I try to do `pyimport_conda(\"numpy\", \"numpy\")` and get:\n```PyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) &lt;class 'ImportError'&gt;\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in &lt;module&gt;\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in &lt;module&gt;\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in &lt;module&gt;\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in &lt;module&gt;\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in &lt;module&gt;\n    from . import multiarray```\nI tried setting `ENV[\"PYTHON\"]` to the path directly to Conda.jl’s python3.8 as suggested in the error and also to the empty string as suggested in the docs (and rebuilding PyCall and restarting Julia), and in both cases I get this error that seems to suggest it’s using the system’s python2.7 (when I Google this “dynamic module” error it is indeed due to some incompatibilities between Python 2 and 3)\n\nAnyone have insights?\n\n(I’m obviously not just trying to call numpy from Julia but rather another package that depends on it, but I’ve isolated the issue to being related to (at least) numpy…)","user":"UN8HY6PS9","ts":"1615476095.110500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mOh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I seem to be having trouble getting PyCall to use the right Python version. I try to do "},{"type":"text","text":"pyimport_conda(\"numpy\", \"numpy\")","style":{"code":true}},{"type":"text","text":" and get:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"PyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) <class 'ImportError'>\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in <module>\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in <module>\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in <module>\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in <module>\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in <module>\n    from . import multiarray"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I tried setting "},{"type":"text","text":"ENV[\"PYTHON\"]","style":{"code":true}},{"type":"text","text":" to the path directly to Conda.jl’s python3.8 as suggested in the error and also to the empty string as suggested in the docs (and rebuilding PyCall and restarting Julia), and in both cases I get this error that seems to suggest it’s using the system’s python2.7 (when I Google this “dynamic module” error it is indeed due to some incompatibilities between Python 2 and 3)\n\nAnyone have insights?\n\n(I’m obviously not just trying to call numpy from Julia but rather another package that depends on it, but I’ve isolated the issue to being related to (at least) numpy…)"}]}]}],"thread_ts":"1615476095.110500","reply_count":42,"reply_users_count":5,"latest_reply":"1616005291.029400","reply_users":["U013V2CFZAN","UN8HY6PS9","UH24GRBLL","U66SR8JHX","U01QRM4E8HL"],"subscribed":false},{"client_msg_id":"004e7719-3aaa-4f98-8b75-173d70d7ea15","type":"message","text":"ah yes, I have seen this before","user":"U013V2CFZAN","ts":"1615476165.110600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cEC0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah yes, I have seen this before"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"2e986221-1d0c-457f-ae55-abe5abdb105d","type":"message","text":"you have another python on your PATH","user":"U013V2CFZAN","ts":"1615476180.110800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s/j3a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you have another python on your PATH"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"6b847484-2636-4eb1-a526-aef27a9871f6","type":"message","text":"but I thought `ENV[\"PYTHON\"]` was supposed to supersede that…? You’re saying if I just change the Python on my path to be the Conda.jl one it should work?","user":"UN8HY6PS9","ts":"1615476238.111000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hi1T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I thought "},{"type":"text","text":"ENV[\"PYTHON\"]","style":{"code":true}},{"type":"text","text":" was supposed to supersede that…? You’re saying if I just change the Python on my path to be the Conda.jl one it should work?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"e5ce7a16-f297-4139-a036-f4b5b5451eb6","type":"message","text":"did you `]build PyCall` after changing `ENV`?","user":"UH24GRBLL","ts":"1615476323.111200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e+sD8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"did you "},{"type":"text","text":"]build PyCall","style":{"code":true}},{"type":"text","text":" after changing "},{"type":"text","text":"ENV","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"5e7b3a60-08c3-401d-a3c3-32df0e95941d","type":"message","text":"so, I will recommend to do the following:\n1. Restart Julia\n2. `ENV[\"PYTHON\"] = \"\"`\n3. ]build PyCall\n4. `using PyCall`\n5. Also, make sure that you have numpy installed with `Conda.add(\"numpy\")`","user":"U013V2CFZAN","ts":"1615476326.111400","team":"T68168MUP","edited":{"user":"U013V2CFZAN","ts":"1615476438.000000"},"blocks":[{"type":"rich_text","block_id":"teoo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so, I will recommend to do the following:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Restart Julia"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"ENV[\"PYTHON\"] = \"\"","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"]build PyCall"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"using PyCall","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Also, make sure that you have numpy installed with "},{"type":"text","text":"Conda.add(\"numpy\")","style":{"code":true}}]}],"style":"ordered","indent":0}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"b3d1ef1a-4f31-4398-a970-fed40f0d22bb","type":"message","text":"<@UH24GRBLL> yes\n<@U013V2CFZAN> that’s exactly what I’ve been doing but I’ll try again now just to be 100% sure","user":"UN8HY6PS9","ts":"1615476406.111700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EivJV","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UH24GRBLL"},{"type":"text","text":" yes\n"},{"type":"user","user_id":"U013V2CFZAN"},{"type":"text","text":" that’s exactly what I’ve been doing but I’ll try again now just to be 100% sure"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"213eb817-6e04-4245-84d2-c8bd7b7fd1a2","type":"message","text":"okay here we go…\n","user":"UN8HY6PS9","ts":"1615476543.112000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vDD5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay here we go…\n"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"213eb817-6e04-4245-84d2-c8bd7b7fd1a2","type":"message","text":"```[rkurchin@c01 ~]$ julia\n               _\n   _       _ _(_)_     |  Documentation: <https://docs.julialang.org>\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.5.2 (2020-09-23)\n _/ |\\__'_|_|_|\\__'_|  |  Official <https://julialang.org/> release\n|__/                   |\n\njulia&gt; ENV[\"PYTHON\"] = \"\"\n\"\"\n\n(@v1.5) pkg&gt; build PyCall\n   Building Conda ─→ `~/.julia/packages/Conda/tJJuN/deps/build.log`\n   Building PyCall → `~/.julia/packages/PyCall/tqyST/deps/build.log`\n\njulia&gt; using PyCall\n\njulia&gt; Conda.add(\"numpy\")\nERROR: UndefVarError: Conda not defined\nStacktrace:\n [1] top-level scope at REPL[4]:1\n\njulia&gt; using Conda\n\njulia&gt; Conda.add(\"numpy\")\n[ Info: Running `conda install -y numpy` in root environment\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n# All requested packages already installed.\n\n\njulia&gt; np = pyimport_conda(\"numpy\", \"numpy\")\n[ Info: Installing numpy via the Conda numpy package...\n[ Info: Running `conda install -y numpy` in root environment\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n# All requested packages already installed.\n\nERROR: PyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) &lt;class 'ImportError'&gt;\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in &lt;module&gt;\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in &lt;module&gt;\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in &lt;module&gt;\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in &lt;module&gt;\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in &lt;module&gt;\n    from . import multiarray\n\nStacktrace:\n [1] pyimport(::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:547\n [2] pyimport_conda(::String, ::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:711\n [3] pyimport_conda(::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:704\n [4] top-level scope at REPL[7]:1\ncaused by [exception 1]\nPyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) &lt;class 'ImportError'&gt;\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in &lt;module&gt;\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in &lt;module&gt;\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in &lt;module&gt;\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in &lt;module&gt;\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in &lt;module&gt;\n    from . import multiarray\n\nStacktrace:\n [1] pyimport(::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:547\n [2] pyimport_conda(::String, ::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:705\n [3] pyimport_conda(::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:704\n [4] top-level scope at REPL[7]:1```","user":"UN8HY6PS9","ts":"1615476543.112200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vDD5-Rqn","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[rkurchin@c01 ~]$ julia\n               _\n   _       _ _(_)_     |  Documentation: "},{"type":"link","url":"https://docs.julialang.org"},{"type":"text","text":"\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.5.2 (2020-09-23)\n _/ |\\__'_|_|_|\\__'_|  |  Official "},{"type":"link","url":"https://julialang.org/"},{"type":"text","text":" release\n|__/                   |\n\njulia> ENV[\"PYTHON\"] = \"\"\n\"\"\n\n(@v1.5) pkg> build PyCall\n   Building Conda ─→ `~/.julia/packages/Conda/tJJuN/deps/build.log`\n   Building PyCall → `~/.julia/packages/PyCall/tqyST/deps/build.log`\n\njulia> using PyCall\n\njulia> Conda.add(\"numpy\")\nERROR: UndefVarError: Conda not defined\nStacktrace:\n [1] top-level scope at REPL[4]:1\n\njulia> using Conda\n\njulia> Conda.add(\"numpy\")\n[ Info: Running `conda install -y numpy` in root environment\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n# All requested packages already installed.\n\n\njulia> np = pyimport_conda(\"numpy\", \"numpy\")\n[ Info: Installing numpy via the Conda numpy package...\n[ Info: Running `conda install -y numpy` in root environment\nCollecting package metadata (current_repodata.json): done\nSolving environment: done\n\n# All requested packages already installed.\n\nERROR: PyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) <class 'ImportError'>\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in <module>\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in <module>\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in <module>\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in <module>\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in <module>\n    from . import multiarray\n\nStacktrace:\n [1] pyimport(::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:547\n [2] pyimport_conda(::String, ::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:711\n [3] pyimport_conda(::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:704\n [4] top-level scope at REPL[7]:1\ncaused by [exception 1]\nPyError (PyImport_ImportModule\n\nThe Python package numpy could not be imported by pyimport. Usually this means\nthat you did not install numpy in the Python version being used by PyCall.\n\nPyCall is currently configured to use the Julia-specific Python distribution\ninstalled by the Conda.jl package.  To install the numpy module, you can\nuse `pyimport_conda(\"numpy\", PKG)`, where PKG is the Anaconda\npackage the contains the module numpy, or alternatively you can use the\nConda package directly (via `using Conda` followed by `Conda.add` etcetera).\n\nAlternatively, if you want to use a different Python distribution on your\nsystem, such as a system-wide Python (as opposed to the Julia-specific Python),\nyou can re-configure PyCall with that Python.   As explained in the PyCall\ndocumentation, set ENV[\"PYTHON\"] to the path/name of the python executable\nyou want to use, run Pkg.build(\"PyCall\"), and re-launch Julia.\n\n) <class 'ImportError'>\nImportError('dynamic module does not define module export function (PyInit_multiarray)')\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/__init__.py\", line 170, in <module>\n    from . import add_newdocs\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/add_newdocs.py\", line 13, in <module>\n    from numpy.lib import add_newdoc\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/__init__.py\", line 8, in <module>\n    from .type_check import *\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/lib/type_check.py\", line 11, in <module>\n    import numpy.core.numeric as _nx\n  File \"/opt/ohpc/pub/libs/gnu/numpy/1.9.2/lib64/python2.7/site-packages/numpy/core/__init__.py\", line 6, in <module>\n    from . import multiarray\n\nStacktrace:\n [1] pyimport(::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:547\n [2] pyimport_conda(::String, ::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:705\n [3] pyimport_conda(::String, ::String) at /home/rkurchin/.julia/packages/PyCall/tqyST/src/PyCall.jl:704\n [4] top-level scope at REPL[7]:1"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"213eb817-6e04-4245-84d2-c8bd7b7fd1a2","type":"message","text":"","user":"UN8HY6PS9","ts":"1615476543.112400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vDD5-Rqn-1BTN7","elements":[{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"acc28e10-e198-4801-b410-dba7ffdd3070","type":"message","text":"my bad, you needed `using Conda` before  `Conda.add(\"numpy\")`","user":"U013V2CFZAN","ts":"1615476627.112600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=PHAK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"my bad, you needed "},{"type":"text","text":"using Conda","style":{"code":true}},{"type":"text","text":" before  "},{"type":"text","text":"Conda.add(\"numpy\")","style":{"code":true}}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"6765683e-5e98-4e76-a0f1-8de2df79d41a","type":"message","text":"but you figured that out","user":"U013V2CFZAN","ts":"1615476650.112800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i219","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but you figured that out"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"eabee79f-7f67-4685-a30b-d8b1fc968fee","type":"message","text":"and it still gives the same error lol","user":"UN8HY6PS9","ts":"1615476677.113000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=Jl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it still gives the same error lol"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"65b1e26d-7eb5-410d-a4e8-4c8466864a0b","type":"message","text":"did you say that it was python 3.8?","user":"U013V2CFZAN","ts":"1615476691.113200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NOkBz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"did you say that it was python 3.8?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"611b674a-baa5-447c-8d13-e2f5884bd1e2","type":"message","text":"could you try with 3.7?","user":"U013V2CFZAN","ts":"1615476697.113400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ew9c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"could you try with 3.7?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"24f7f7b9-fef6-4fac-a23d-f6ceff68e6d2","type":"message","text":"What happens if you do `np = pyimport(\"numpy\")` instead?","user":"U66SR8JHX","ts":"1615477425.120000","team":"T68168MUP","edited":{"user":"U66SR8JHX","ts":"1615479458.000000"},"blocks":[{"type":"rich_text","block_id":"S58","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What happens if you do "},{"type":"text","text":"np = pyimport(\"numpy\")","style":{"code":true}},{"type":"text","text":" instead?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"17504c58-4440-4dae-808c-29b10b788063","type":"message","text":"<@U66SR8JHX> same error.\n\n<@U013V2CFZAN> – 3.8 seemed to be the default that Conda.jl set up. How do I change what version is used by the Conda.jl root environment? It seems that for PyCall, it has to use the root one…","user":"UN8HY6PS9","ts":"1615479985.131500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9EuzJ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U66SR8JHX"},{"type":"text","text":" same error.\n\n"},{"type":"user","user_id":"U013V2CFZAN"},{"type":"text","text":" – 3.8 seemed to be the default that Conda.jl set up. How do I change what version is used by the Conda.jl root environment? It seems that for PyCall, it has to use the root one…"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"b039219f-3245-4df5-953e-27ac468cf7df","type":"message","text":"Is this a localised issue, or is it reproducible?","user":"U01QRM4E8HL","ts":"1615480079.131700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tY6C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this a localised issue, or is it reproducible?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"4d97fb32-e581-4143-9654-3b5181ce7346","type":"message","text":"it was working fine on the cluster I normally work on, but (ironically enough) I’m trying to run it on another cluster to see if I can reproduce a totally separate error, and am running into this before I can even get things running… :laughing:","user":"UN8HY6PS9","ts":"1615480121.131900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cyx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it was working fine on the cluster I normally work on, but (ironically enough) I’m trying to run it on another cluster to see if I can reproduce a totally separate error, and am running into this before I can even get things running… "},{"type":"emoji","name":"laughing"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"9dc6f626-e4bb-461c-aa15-def59b630a2f","type":"message","text":"Looking closer at the error it seems that PyCall is somehow pointing to a python 2.7 system's installation .","user":"U66SR8JHX","ts":"1615480191.132300","team":"T68168MUP","edited":{"user":"U66SR8JHX","ts":"1615480258.000000"},"blocks":[{"type":"rich_text","block_id":"+wPe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looking closer at the error it seems that PyCall is somehow pointing to a python 2.7 system's installation ."}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"6736b77d-1a0e-415d-aed7-b860f217b52a","type":"message","text":"Can you check what `PyCall.conda` returns?","user":"U01QRM4E8HL","ts":"1615480210.133000","team":"T68168MUP","edited":{"user":"U01QRM4E8HL","ts":"1615480241.000000"},"blocks":[{"type":"rich_text","block_id":"J1V8n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you check what "},{"type":"text","text":"PyCall.conda","style":{"code":true}},{"type":"text","text":" returns?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"c9a8679d-8f38-4109-87ee-c9156566bd9d","type":"message","text":"<@U66SR8JHX> yes, exactly","user":"UN8HY6PS9","ts":"1615480250.134300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C4vx","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U66SR8JHX"},{"type":"text","text":" yes, exactly"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"61698dd8-37a4-4777-afb0-ef79046ce07e","type":"message","text":"If it returns `true`, then maybe try `Conda.rm(numpy, ENV)` and then `Conda.add()` it again?","user":"U01QRM4E8HL","ts":"1615480285.135700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ujk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it returns "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":", then maybe try "},{"type":"text","text":"Conda.rm(numpy, ENV)","style":{"code":true}},{"type":"text","text":" and then "},{"type":"text","text":"Conda.add()","style":{"code":true}},{"type":"text","text":" it again?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"7dbe048e-baae-4393-b172-41806c215bf6","type":"message","text":"You can also call `PyCall.current_python()` and `PyCall.libpython` to see if there isn't anything suspicious there.","user":"U66SR8JHX","ts":"1615480532.137800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2NA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can also call "},{"type":"text","text":"PyCall.current_python()","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"PyCall.libpython","style":{"code":true}},{"type":"text","text":" to see if there isn't anything suspicious there."}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"e611b634-8d0d-4222-b9b9-cc46ef07eb20","type":"message","text":"yeah `PyCall.current_python()` gives `/usr/bin/python` grrrrr","user":"UN8HY6PS9","ts":"1615480864.138000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RFf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah "},{"type":"text","text":"PyCall.current_python()","style":{"code":true}},{"type":"text","text":" gives "},{"type":"text","text":"/usr/bin/python","style":{"code":true}},{"type":"text","text":" grrrrr"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"b0e1422a-5248-49f5-ab18-5d225b8dcf54","type":"message","text":"and `PyCall.conda` is false, unsurprisingly","user":"UN8HY6PS9","ts":"1615481011.138200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bflz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and "},{"type":"text","text":"PyCall.conda","style":{"code":true}},{"type":"text","text":" is false, unsurprisingly"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"8e658847-7d2a-4502-96df-5e257253592f","type":"message","text":"How about `Conda.BINDIR`?","user":"U66SR8JHX","ts":"1615481024.138400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lOxx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How about "},{"type":"text","text":"Conda.BINDIR","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"6ed60774-7691-40c5-b76f-55cd302a208f","type":"message","text":"`\"/home/rkurchin/.julia/conda/3/bin\"`","user":"UN8HY6PS9","ts":"1615481045.138600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rZCLY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"/home/rkurchin/.julia/conda/3/bin\"","style":{"code":true}}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"5636b4a6-1a75-4d8f-94a9-6f002924a187","type":"message","text":"the readme at PyCall.jl says “On GNU/Linux systems, PyCall will default to using the `python3` program (if any, otherwise `python`) in your PATH.” so this is consistent with that. What I can’t figure out is why I can’t get the instructions for how to change that to work properly…","user":"UN8HY6PS9","ts":"1615481150.138800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h4X3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the readme at PyCall.jl says “On GNU/Linux systems, PyCall will default to using the "},{"type":"text","text":"python3","style":{"code":true}},{"type":"text","text":" program (if any, otherwise "},{"type":"text","text":"python","style":{"code":true}},{"type":"text","text":") in your PATH.” so this is consistent with that. What I can’t figure out is why I can’t get the instructions for how to change that to work properly…"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"06a563e0-98d1-4ef8-9450-490048530059","type":"message","text":"to be more specific, I can set `ENV[\"PYTHON\"]` to be the path to the Python executable within the conda bindir, and then when I rebuild it gives the `PyCall.current_python()` gives that one, and `PyCall.conda` shows as true, but I get the same error when I try to actually import the package, i.e. it shows that it’s using system Python 2.7","user":"UN8HY6PS9","ts":"1615481339.139000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ldW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to be more specific, I can set "},{"type":"text","text":"ENV[\"PYTHON\"]","style":{"code":true}},{"type":"text","text":" to be the path to the Python executable within the conda bindir, and then when I rebuild it gives the "},{"type":"text","text":"PyCall.current_python()","style":{"code":true}},{"type":"text","text":" gives that one, and "},{"type":"text","text":"PyCall.conda","style":{"code":true}},{"type":"text","text":" shows as true, but I get the same error when I try to actually import the package, i.e. it shows that it’s using system Python 2.7"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"ac754654-77c3-42ee-a95c-0c4dd1f131d9","type":"message","text":"You could try to force it with `using Conda, Pkg; ENV[\"PYTHON\"] = joinpath(Conda.BINDIR, \"python3\"); Pkg.build(\"PyCall\")`  in a fresh session and see if that helps. You might want to remove `PyCall` first, though.","user":"U66SR8JHX","ts":"1615481382.139200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h+U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could try to force it with "},{"type":"text","text":"using Conda, Pkg; ENV[\"PYTHON\"] = joinpath(Conda.BINDIR, \"python3\"); Pkg.build(\"PyCall\")","style":{"code":true}},{"type":"text","text":"  in a fresh session and see if that helps. You might want to remove "},{"type":"text","text":"PyCall","style":{"code":true}},{"type":"text","text":" first, though."}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"bad71f5b-d332-4c74-b26f-2ec462fee635","type":"message","text":"Sorry, seems you already did. That's strange.","user":"U66SR8JHX","ts":"1615481467.139400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/pni","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry, seems you already did. That's strange."}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"24879297-00a2-41e1-9ddc-f1c1b9c723ab","type":"message","text":"That's super weird. `ENV[\"PYTHON\"]=\"\"` should essentially, set `PyCall.conda` itself to `true`. Kinda hacky fix, but does trying `alias python=python3`, and changing the link of python (in `/usr/bin/python`) to the python3 executable do anything?","user":"U01QRM4E8HL","ts":"1615481521.139600","team":"T68168MUP","edited":{"user":"U01QRM4E8HL","ts":"1615481718.000000"},"blocks":[{"type":"rich_text","block_id":"7wJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's super weird. "},{"type":"text","text":"ENV[\"PYTHON\"]=\"\"","style":{"code":true}},{"type":"text","text":" should essentially, set "},{"type":"text","text":"PyCall.conda","style":{"code":true}},{"type":"text","text":" itself to "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":". Kinda hacky fix, but does trying "},{"type":"text","text":"alias python=python3","style":{"code":true}},{"type":"text","text":", and changing the link of python (in "},{"type":"text","text":"/usr/bin/python","style":{"code":true}},{"type":"text","text":") to the python3 executable do anything?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"90ba0c72-3c6e-4a9f-bb6d-d032eb9d58fb","type":"message","text":"haha I can’t do that, it’s a public cluster :wink:","user":"UN8HY6PS9","ts":"1615481574.140000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D/NNZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"haha I can’t do that, it’s a public cluster "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"f0fccad4-592b-4adf-8d6e-0b054d976011","type":"message","text":"Another option is to do `source $HOME/.julia/conda/3/bin/activate` before running julia, and try again.","user":"U66SR8JHX","ts":"1615481762.141600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9ih","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Another option is to do "},{"type":"text","text":"source $HOME/.julia/conda/3/bin/activate","style":{"code":true}},{"type":"text","text":" before running julia, and try again."}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"fed47e7b-bb40-4689-97e3-6f70af092a28","type":"message","text":"Last thing I can think of, but after it shows `PyCall.conda`  as `true`, does running the `pyimport()` command also say that `All requested packages already installed`? If that's the case, could it be that the `numpy` that was installed with python 2.7 binding is still around...? I'm not sure if that's how PyCall works, but then again this isn't how it's supposed to work either...","user":"U01QRM4E8HL","ts":"1615482033.142000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wft2J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Last thing I can think of, but after it shows "},{"type":"text","text":"PyCall.conda","style":{"code":true}},{"type":"text","text":"  as "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":", does running the "},{"type":"text","text":"pyimport()","style":{"code":true}},{"type":"text","text":" command also say that "},{"type":"text","text":"All requested packages already installed","style":{"code":true}},{"type":"text","text":"? If that's the case, could it be that the "},{"type":"text","text":"numpy","style":{"code":true}},{"type":"text","text":" that was installed with python 2.7 binding is still around...? I'm not sure if that's how PyCall works, but then again this isn't how it's supposed to work either..."}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"fda62460-8f39-4566-a5f5-cd0f22e38e2b","type":"message","text":"oh interesting, it does show that…hmmm…","user":"UN8HY6PS9","ts":"1615482109.142200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zG2Gx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh interesting, it does show that…hmmm…"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"009f145f-9837-4c51-bc5b-508dcd2ab3d8","type":"message","text":"Could you try to `Conda.rm()` numpy, and `Conda.add()` it back again (with the `PyCall.conda = true` ofc) and see if that works at least?","user":"U01QRM4E8HL","ts":"1615482229.142400","team":"T68168MUP","edited":{"user":"U01QRM4E8HL","ts":"1615482245.000000"},"blocks":[{"type":"rich_text","block_id":"6lzW7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could you try to "},{"type":"text","text":"Conda.rm()","style":{"code":true}},{"type":"text","text":" numpy, and "},{"type":"text","text":"Conda.add()","style":{"code":true}},{"type":"text","text":" it back again (with the "},{"type":"text","text":"PyCall.conda = true","style":{"code":true}},{"type":"text","text":" ofc) and see if that works at least?"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"3f652703-5cde-4fe6-a480-0b824667ccff","type":"message","text":"it works in the sense that the commands run, but I still get the same error with `pyimport` or `pyimport_conda`","user":"UN8HY6PS9","ts":"1615482480.142700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gikqo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it works in the sense that the commands run, but I still get the same error with "},{"type":"text","text":"pyimport","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"pyimport_conda","style":{"code":true}}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"4f74b37d-000a-4bb1-99b2-c7cb3db96f45","type":"message","text":"I’ve filed an issue here: <https://github.com/JuliaPy/PyCall.jl/issues/886> so maybe some more ninjas will come to the rescue","user":"UN8HY6PS9","ts":"1615487216.143500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kbp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ve filed an issue here: "},{"type":"link","url":"https://github.com/JuliaPy/PyCall.jl/issues/886"},{"type":"text","text":" so maybe some more ninjas will come to the rescue"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9","reactions":[{"name":"+1","users":["U66SR8JHX"],"count":1}]},{"client_msg_id":"38110617-9cbb-4097-bb67-da2fce3e8d53","type":"message","text":"Steve Johnson to the rescue! I needed to do `ENV[\"PYTHONPATH\"]=\"\"` also!","user":"UN8HY6PS9","ts":"1615999517.023800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lsl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Steve Johnson to the rescue! I needed to do "},{"type":"text","text":"ENV[\"PYTHONPATH\"]=\"\"","style":{"code":true}},{"type":"text","text":" also!"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9","reactions":[{"name":"unpython","users":["UH24GRBLL","U66SR8JHX","UN8HY6PS9"],"count":3}]},{"client_msg_id":"fcadaecf-4e65-47d9-bda2-6d7ffb3ec47b","type":"message","text":"Great. Probably that needs to be added to the `PyCall`'s Readme then","user":"U66SR8JHX","ts":"1616000623.024500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qdJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Great. Probably that needs to be added to the "},{"type":"text","text":"PyCall","style":{"code":true}},{"type":"text","text":"'s Readme then"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"},{"client_msg_id":"b11b91af-68fa-4700-8d2e-09b35097b664","type":"message","text":"I suggested that in my reply on the issue :wink:","user":"UN8HY6PS9","ts":"1616005291.029400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uhmBR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I suggested that in my reply on the issue "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1615476095.110500","parent_user_id":"UN8HY6PS9"}]