[{"client_msg_id":"65dfca4f-4979-4cd5-95a1-ca0d0017b062","type":"message","text":"Cross-post announcement: <https://discourse.julialang.org/t/new-tools-for-reducing-compiler-latency/52882>","user":"UC8821DPY","ts":"1609861255.379000","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"New tools for reducing compiler latency","title_link":"https://discourse.julialang.org/t/new-tools-for-reducing-compiler-latency/52882","text":"I’m pleased to announce the release of SnoopCompile 2.2.0, a major enhancement in the suite of tools for reducing “time to first plot.” This release provides considerably better insight into the costs of type inference, allowing you to profile the actions of inference in extensive detail. It also provides a new suite of tools for detecting and analyzing “inference triggers,” cases where a previously-uninferred method is called via runtime dispatch. As a quick visual for the new release, I’ll pa...","fallback":"JuliaLang: New tools for reducing compiler latency","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/3X/8/c/8ce6e6d0b7da8229b1f6d711eea944f94ba70fcd.png","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"2 :heart:","short":true}],"ts":1609860373,"from_url":"https://discourse.julialang.org/t/new-tools-for-reducing-compiler-latency/52882","thumb_width":820,"thumb_height":655,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/new-tools-for-reducing-compiler-latency/52882"}],"blocks":[{"type":"rich_text","block_id":"dB/LV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cross-post announcement: "},{"type":"link","url":"https://discourse.julialang.org/t/new-tools-for-reducing-compiler-latency/52882"}]}]}],"thread_ts":"1609861255.379000","reply_count":11,"reply_users_count":4,"latest_reply":"1609893420.392000","reply_users":["UMDEUKM29","UC8821DPY","U01FAHWCMFF","U0179G7FG4F"],"subscribed":false,"reactions":[{"name":"100","users":["UH24GRBLL","U6795JH6H","U67D54KS8","UH8A351DJ","U7QLM6E2E","U821PV38V","U67G3QRJM","U9MED583T","U68QW0PUZ","U013V2CFZAN","U9JNHB83X","U01FAHWCMFF","U80UK1NSJ","U66SR8JHX","UM6JW2SF9","UNF9QDRNJ","U9769MVA7","U0179G7FG4F","U014Z8T9Y67","U7THT3TM3"],"count":20},{"name":"heart","users":["UM30MT6RF","U6BNE7LTZ","U6C5KSWAC","U6795JH6H","USU9FRPEU","U67D54KS8","U7QLM6E2E","U01C15GH58B","U9MED583T","U68QW0PUZ","U969CNQU9","U6C1MMAAJ","U7CBATYBC","U013V2CFZAN","UPAS00UNQ","U82LX4ACB","UAUPJLBQX","U8T0YV7QC","UBGJ599D3","U66SR8JHX","UNF9QDRNJ","U9769MVA7","U0179G7FG4F","U7THT3TM3"],"count":24},{"name":"+1","users":["UH1BLK14H","U6795JH6H","U67D54KS8","U9MED583T","U013V2CFZAN","U8T0YV7QC","U66SR8JHX","U7THT3TM3"],"count":8}]},{"client_msg_id":"c3dd24a2-4e17-4910-8e2d-6d9928e94bca","type":"message","text":"Super cool! Why not have the picture in the blog post?","user":"UMDEUKM29","ts":"1609870763.386200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LQgG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Super cool! Why not have the picture in the blog post?"}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY"},{"client_msg_id":"2176e146-c127-445d-8a2f-2ac9863aee2f","type":"message","text":"That's for the next blog post (hoping <@U89GY9W1J> will co-author, since the flamegraph is the core of his work).","user":"UC8821DPY","ts":"1609873016.386800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EKhTx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's for the next blog post (hoping "},{"type":"user","user_id":"U89GY9W1J"},{"type":"text","text":" will co-author, since the flamegraph is the core of his work)."}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY"},{"client_msg_id":"8c825c76-0fe9-45db-ba32-7bfb762e6442","type":"message","text":"Basically, it's a *lot* to chew. So I thought maybe a series of shorter posts would help. Of course people can just go straight to the docs, but sometimes a more expansive explanation helps a larger audience.","user":"UC8821DPY","ts":"1609873203.387100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vyDG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Basically, it's a "},{"type":"text","text":"lot","style":{"bold":true}},{"type":"text","text":" to chew. So I thought maybe a series of shorter posts would help. Of course people can just go straight to the docs, but sometimes a more expansive explanation helps a larger audience."}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY","reactions":[{"name":"+1::skin-tone-2","users":["U8T0YV7QC"],"count":1}]},{"client_msg_id":"4d7c020b-6613-4c1a-bdb0-7668e570ab8c","type":"message","text":"That makes sense","user":"UMDEUKM29","ts":"1609873896.387300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rel+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That makes sense"}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY"},{"client_msg_id":"8ada56cc-88a0-48c6-b6a7-38ca29d0ee33","type":"message","text":"It's just that this flame graph is super useful for an end user that has code that is itself not super expensive but depends on a lot of packages and they want to figure out which ones are slowing down latency","user":"UMDEUKM29","ts":"1609873978.387700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3dl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's just that this flame graph is super useful for an end user that has code that is itself not super expensive but depends on a lot of packages and they want to figure out which ones are slowing down latency"}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY"},{"client_msg_id":"5e926f6b-3e54-4a7d-b921-d8606ca7a1a8","type":"message","text":"So it makes sense for a non expert user to look at even if they don't want to invest the time to look at the finer points of latency reduction","user":"UMDEUKM29","ts":"1609874014.387900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8PUpx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So it makes sense for a non expert user to look at even if they don't want to invest the time to look at the finer points of latency reduction"}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY"},{"client_msg_id":"fe9a8c6a-51fb-419a-b04e-cc504481a1d6","type":"message","text":"Awesome work, would love to see some benchmarks/stats :slightly_smiling_face:","user":"U01FAHWCMFF","ts":"1609874296.388300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ypxpm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Awesome work, would love to see some benchmarks/stats "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY"},{"client_msg_id":"9dfa0f7b-3424-4f6f-bb8a-b4437102183e","type":"message","text":"It's almost impossible to give meaningful benchmarks, because it totally depends on the package. I've had some where I only shave ~10% off the time, others where the time has been cut in half, and yet other people have literally seen the latency cut by a factor of &gt;100. It's more than just a \"make this faster\" tool, it may prompt people to reconsider some elements of design, and then all bets are off.\n\nThe other thing that makes it hard is that if Julia 1.7 or higher gains the ability to cache native code, packages that have optimized with SnoopCompile will likely see an immediate huge drop in latency; those that haven't probably won't.","user":"UC8821DPY","ts":"1609876735.388700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yVz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's almost impossible to give meaningful benchmarks, because it totally depends on the package. I've had some where I only shave ~10% off the time, others where the time has been cut in half, and yet other people have literally seen the latency cut by a factor of >100. It's more than just a \"make this faster\" tool, it may prompt people to reconsider some elements of design, and then all bets are off.\n\nThe other thing that makes it hard is that if Julia 1.7 or higher gains the ability to cache native code, packages that have optimized with SnoopCompile will likely see an immediate huge drop in latency; those that haven't probably won't."}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY","reactions":[{"name":"+1","users":["U01FAHWCMFF"],"count":1}]},{"client_msg_id":"5196058a-d075-4725-bce5-33ffc8bb5259","type":"message","text":"Has your work looking at a variety of packages with SnoopCompile given you generally useful tips for devs (other than use SnoopCompile)? On the other side, are there ways the Julia compiler could detect some of these patterns in the future and not get as tripped up?","user":"U0179G7FG4F","ts":"1609888776.390900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L2Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Has your work looking at a variety of packages with SnoopCompile given you generally useful tips for devs (other than use SnoopCompile)? On the other side, are there ways the Julia compiler could detect some of these patterns in the future and not get as tripped up?"}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY"},{"client_msg_id":"8f9a0db6-0887-4eba-b215-2cf047c9f569","type":"message","text":"also, on the blog is there a specific reason you didn't use `@time` for your timings? Does it not work well for measuring compilation time?","user":"U0179G7FG4F","ts":"1609888935.391200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GmO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, on the blog is there a specific reason you didn't use "},{"type":"text","text":"@time","style":{"code":true}},{"type":"text","text":" for your timings? Does it not work well for measuring compilation time?"}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY"},{"client_msg_id":"3c1bb110-1ced-4997-b627-8e22bfd80ea3","type":"message","text":"&gt;  generally useful tips\nYep. Most of the recommendations on <https://timholy.github.io/SnoopCompile.jl/stable/snoopi_deep_analysis/#Adding-type-assertions> are relevant; the typeassert has unpredictable effect on latency but most of the rest have an unambiguously positive effect.\n\nAs far as automatically detecting, I am not sure. In a sense you could say that the current tools are the first step in that direction. It's possible that we'll ultimately be able to put some of this in a linter.\n\n&gt; is there a specific reason you didn't use `@time` for your timings\nSometimes it seems to force inference, which kinda defeats the purpose, but I didn't dig into why.","user":"UC8821DPY","ts":"1609893420.392000","team":"T68168MUP","edited":{"user":"UC8821DPY","ts":"1609893516.000000"},"blocks":[{"type":"rich_text","block_id":"Vqp=x","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" generally useful tips"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYep. Most of the recommendations on "},{"type":"link","url":"https://timholy.github.io/SnoopCompile.jl/stable/snoopi_deep_analysis/#Adding-type-assertions"},{"type":"text","text":" are relevant; the typeassert has unpredictable effect on latency but most of the rest have an unambiguously positive effect.\n\nAs far as automatically detecting, I am not sure. In a sense you could say that the current tools are the first step in that direction. It's possible that we'll ultimately be able to put some of this in a linter.\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"is there a specific reason you didn't use "},{"type":"text","text":"@time","style":{"code":true}},{"type":"text","text":" for your timings"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nSometimes it seems to force inference, which kinda defeats the purpose, but I didn't dig into why."}]}]}],"thread_ts":"1609861255.379000","parent_user_id":"UC8821DPY"}]