[{"client_msg_id":"8686e1e6-60f7-4b56-bbfb-2d4f5198966e","type":"message","text":"I'd like to automatically change a bunch of `foo(a, b)` into `a binop b`.\n(e.g. from `union(a, b)`  into `a ∪ b`)\n\nWhat do folks recommend? Is there an example using something like <https://github.com/julia-vscode/CSTParser.jl> ?","user":"U72B7LTMX","ts":"1614361843.271600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j17v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd like to automatically change a bunch of "},{"type":"text","text":"foo(a, b)","style":{"code":true}},{"type":"text","text":" into "},{"type":"text","text":"a binop b","style":{"code":true}},{"type":"text","text":".\n(e.g. from "},{"type":"text","text":"union(a, b)","style":{"code":true}},{"type":"text","text":"  into "},{"type":"text","text":"a ∪ b","style":{"code":true}},{"type":"text","text":")\n\nWhat do folks recommend? Is there an example using something like "},{"type":"link","url":"https://github.com/julia-vscode/CSTParser.jl"},{"type":"text","text":" ?"}]}]}],"thread_ts":"1614361843.271600","reply_count":16,"reply_users_count":5,"latest_reply":"1614452816.298300","reply_users":["U6NFPDBV1","U72B7LTMX","U6A936746","U8D9768Q6","U6A7NFP62"],"subscribed":false,"reactions":[{"name":"emacs","users":["UMDEUKM29","UDB26738Q"],"count":2}]},{"client_msg_id":"b3fba9da-a4ab-4ee4-a037-610f9aa236ea","type":"message","text":"<https://github.com/domluna/JuliaFormatter.jl> uses CSTParser","user":"U6NFPDBV1","ts":"1614362184.271800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GlEAF","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/domluna/JuliaFormatter.jl"},{"type":"text","text":" uses CSTParser"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"b645772c-735a-4774-b07b-e56b54a56097","type":"message","text":"Oh thanks!","user":"U72B7LTMX","ts":"1614362262.272000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0UNk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh thanks!"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"d72e356f-abf9-4aed-97a9-84a470f276d5","type":"message","text":"SourceWalk.jl does more or less exactly this. But it's really buggy.\nAnd unmaintained","user":"U6A936746","ts":"1614368782.275100","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1614368798.000000"},"blocks":[{"type":"rich_text","block_id":"LSN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"SourceWalk.jl does more or less exactly this. But it's really buggy.\nAnd unmaintained"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"type":"message","subtype":"thread_broadcast","text":"DocumentFormat.jl seems to perform edits at the structural level of strings.\n\nJuliaFormatter.jl seems to perform edits at the structural level of their \"FST\".\n\nIs there anything that lets me go from a CST in CSTParser back to text? I asked here: <https://github.com/julia-vscode/CSTParser.jl/issues/265>","user":"U72B7LTMX","ts":"1614377315.279200","thread_ts":"1614361843.271600","root":{"client_msg_id":"8686e1e6-60f7-4b56-bbfb-2d4f5198966e","type":"message","text":"I'd like to automatically change a bunch of `foo(a, b)` into `a binop b`.\n(e.g. from `union(a, b)`  into `a ∪ b`)\n\nWhat do folks recommend? Is there an example using something like <https://github.com/julia-vscode/CSTParser.jl> ?","user":"U72B7LTMX","ts":"1614361843.271600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j17v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd like to automatically change a bunch of "},{"type":"text","text":"foo(a, b)","style":{"code":true}},{"type":"text","text":" into "},{"type":"text","text":"a binop b","style":{"code":true}},{"type":"text","text":".\n(e.g. from "},{"type":"text","text":"union(a, b)","style":{"code":true}},{"type":"text","text":"  into "},{"type":"text","text":"a ∪ b","style":{"code":true}},{"type":"text","text":")\n\nWhat do folks recommend? Is there an example using something like "},{"type":"link","url":"https://github.com/julia-vscode/CSTParser.jl"},{"type":"text","text":" ?"}]}]}],"thread_ts":"1614361843.271600","reply_count":16,"reply_users_count":5,"latest_reply":"1614452816.298300","reply_users":["U6NFPDBV1","U72B7LTMX","U6A936746","U8D9768Q6","U6A7NFP62"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"eYVuv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"DocumentFormat.jl seems to perform edits at the structural level of strings.\n\nJuliaFormatter.jl seems to perform edits at the structural level of their \"FST\".\n\nIs there anything that lets me go from a CST in CSTParser back to text? I asked here: "},{"type":"link","url":"https://github.com/julia-vscode/CSTParser.jl/issues/265"}]}]}],"client_msg_id":"fde6ad1f-de2d-43c6-84e5-27005e5051df"},{"client_msg_id":"9b8c6b4e-0158-481c-b253-9a177b4bddb5","type":"message","text":"I don't see any reason to use string-level tools for this. Why not operate on the AST?","user":"U8D9768Q6","ts":"1614377489.280000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"we/E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't see any reason to use string-level tools for this. Why not operate on the AST?"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"cd6e6fd6-425d-43b8-9129-14de4b4373c8","type":"message","text":"<@U8D9768Q6> I wonder if you think I'm trying to write a macro? I'm trying to do a find-and-replace in a code base.","user":"U72B7LTMX","ts":"1614377807.280200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H2n=","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8D9768Q6"},{"type":"text","text":" I wonder if you think I'm trying to write a macro? I'm trying to do a find-and-replace in a code base."}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"371f4b9f-0518-4339-8ce6-a64ce5743dda","type":"message","text":"Ah, I see. That was not very evident to me from the question","user":"U8D9768Q6","ts":"1614378085.280600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QRe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, I see. That was not very evident to me from the question"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"89bb6a2f-55cc-4aa7-a88a-d814392f9295","type":"message","text":"Yeah, I realized when you asked!","user":"U72B7LTMX","ts":"1614378246.280800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O39r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I realized when you asked!"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"00b93539-f9ea-40e5-8f9d-a9414c4c5f81","type":"message","text":"I feel tempted to say I'd still rather just parse, operate on AST and then convert to string","user":"U8D9768Q6","ts":"1614378741.281000","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1614378747.000000"},"blocks":[{"type":"rich_text","block_id":"vbU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel tempted to say I'd still rather just parse, operate on AST and then convert to string"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"918ce96c-3199-4725-ba0f-78d715b923f9","type":"message","text":"Doing it on AST will destroy comments and white space and infixedness.\nYou need the CST","user":"U6A936746","ts":"1614379078.281300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/FI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Doing it on AST will destroy comments and white space and infixedness.\nYou need the CST"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"c124c3d4-d5a9-418c-9d96-8331824781a0","type":"message","text":"Yeah true, losing comments would be a bummer.","user":"U8D9768Q6","ts":"1614379501.281500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"unE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah true, losing comments would be a bummer."}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"1e11a72a-5518-4a88-a007-dd522be79482","type":"message","text":"But I can't help but love my AST level manipulations\n```julia&gt; using MLStyle\n\njulia&gt; s = \"\"\"\n       function f(x, y, z)\n           bar(foo(x, y), foo(y, z))\n       end\n       \"\"\";\n\njulia&gt; let ex = Meta.parse(s)\n           replacer(ex) = @match ex begin\n               :foo =&gt; :∪\n               :bar =&gt; :∩\n               ex::Expr =&gt; Expr(replacer(ex.head), filter(x -&gt; !(x isa LineNumberNode), replacer.(ex.args))...)\n               x =&gt; x\n           end\n           string(replacer(ex))\n       end\n\"function f(x, y, z)\\n    (x ∪ y) ∩ (y ∪ z)\\nend\"```","user":"U8D9768Q6","ts":"1614379673.281700","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1614379683.000000"},"blocks":[{"type":"rich_text","block_id":"ti+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I can't help but love my AST level manipulations\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using MLStyle\n\njulia> s = \"\"\"\n       function f(x, y, z)\n           bar(foo(x, y), foo(y, z))\n       end\n       \"\"\";\n\njulia> let ex = Meta.parse(s)\n           replacer(ex) = @match ex begin\n               :foo => :∪\n               :bar => :∩\n               ex::Expr => Expr(replacer(ex.head), filter(x -> !(x isa LineNumberNode), replacer.(ex.args))...)\n               x => x\n           end\n           string(replacer(ex))\n       end\n\"function f(x, y, z)\\n    (x ∪ y) ∩ (y ∪ z)\\nend\""}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"26f0affa-55c2-4a27-9abb-e1df36c41b61","type":"message","text":"You should be able to do that same code on the CST, though.\nYou can with SourceWalk.jl","user":"U6A936746","ts":"1614379777.282000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pDaI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You should be able to do that same code on the CST, though.\nYou can with SourceWalk.jl"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"86d40779-67e9-47a7-a6b3-5be1e66ee0bc","type":"message","text":"Fair enough","user":"U8D9768Q6","ts":"1614379800.282200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3RsN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Fair enough"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"client_msg_id":"7038e40a-af38-40a9-aa9f-87fd675a3bc1","type":"message","text":"As above, yes you need the CST but this sort of transformation is pretty easy especially if it's a ome off and the changes are based on the syntactic structure rather than semantic","user":"U6A7NFP62","ts":"1614380210.284000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kH=Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As above, yes you need the CST but this sort of transformation is pretty easy especially if it's a ome off and the changes are based on the syntactic structure rather than semantic"}]}]}],"thread_ts":"1614361843.271600","parent_user_id":"U72B7LTMX"},{"type":"message","subtype":"thread_broadcast","text":"<@U6A7NFP62> I don't understand the \"but\".","user":"U72B7LTMX","ts":"1614452816.298300","thread_ts":"1614361843.271600","root":{"client_msg_id":"8686e1e6-60f7-4b56-bbfb-2d4f5198966e","type":"message","text":"I'd like to automatically change a bunch of `foo(a, b)` into `a binop b`.\n(e.g. from `union(a, b)`  into `a ∪ b`)\n\nWhat do folks recommend? Is there an example using something like <https://github.com/julia-vscode/CSTParser.jl> ?","user":"U72B7LTMX","ts":"1614361843.271600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j17v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd like to automatically change a bunch of "},{"type":"text","text":"foo(a, b)","style":{"code":true}},{"type":"text","text":" into "},{"type":"text","text":"a binop b","style":{"code":true}},{"type":"text","text":".\n(e.g. from "},{"type":"text","text":"union(a, b)","style":{"code":true}},{"type":"text","text":"  into "},{"type":"text","text":"a ∪ b","style":{"code":true}},{"type":"text","text":")\n\nWhat do folks recommend? Is there an example using something like "},{"type":"link","url":"https://github.com/julia-vscode/CSTParser.jl"},{"type":"text","text":" ?"}]}]}],"thread_ts":"1614361843.271600","reply_count":16,"reply_users_count":5,"latest_reply":"1614452816.298300","reply_users":["U6NFPDBV1","U72B7LTMX","U6A936746","U8D9768Q6","U6A7NFP62"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"muB=","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6A7NFP62"},{"type":"text","text":" I don't understand the \"but\"."}]}]}],"client_msg_id":"0d23c7e9-670b-43dc-8cd5-194c4c8f6488"}]