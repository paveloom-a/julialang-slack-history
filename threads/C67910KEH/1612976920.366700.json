[{"client_msg_id":"b20cb85a-ef22-44d7-beb7-91a2860980ae","type":"message","text":"I was kind of surprised by this performance difference:\n```f1() = [0,0,1.0]\nf2() = [0.0,0.0,1.0]\n\n@btime f1() # 2.311 μs (5 allocations: 224 bytes)\n@btime f2() # 33.635 ns (1 allocation: 112 bytes)```\nI had thought that constant propagation/inference would automatically \"fix up\" `f1()` since it can already see that it will be a `Vector{Float64}` and do the conversions of `0` to `Float64` beforehand. Is this expected?","user":"UCE6XE42Z","ts":"1612976920.366700","team":"T68168MUP","edited":{"user":"UCE6XE42Z","ts":"1612976944.000000"},"blocks":[{"type":"rich_text","block_id":"c0P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was kind of surprised by this performance difference:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"f1() = [0,0,1.0]\nf2() = [0.0,0.0,1.0]\n\n@btime f1() # 2.311 μs (5 allocations: 224 bytes)\n@btime f2() # 33.635 ns (1 allocation: 112 bytes)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I had thought that constant propagation/inference would automatically \"fix up\" "},{"type":"text","text":"f1()","style":{"code":true}},{"type":"text","text":" since it can already see that it will be a "},{"type":"text","text":"Vector{Float64}","style":{"code":true}},{"type":"text","text":" and do the conversions of "},{"type":"text","text":"0","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" beforehand. Is this expected?"}]}]}],"thread_ts":"1612976920.366700","reply_count":11,"reply_users_count":3,"latest_reply":"1613006615.383400","reply_users":["UDB26738Q","UCE6XE42Z","UD0NS8PDF"],"subscribed":false},{"client_msg_id":"a29ca34d-ee88-4d24-8e0c-e1936974d5b2","type":"message","text":"yes, there was an issue some weeks ago","user":"UDB26738Q","ts":"1612976977.366900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DfP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, there was an issue some weeks ago"}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"bb75e2a1-9164-4652-82f7-b3c293747868","type":"message","text":"the problem is the the conversion of `[0, 0, 1.0]` to `[0.0, 0.0, 1.0]`","user":"UDB26738Q","ts":"1612977012.367100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ylUB4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the problem is the the conversion of "},{"type":"text","text":"[0, 0, 1.0]","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"[0.0, 0.0, 1.0]","style":{"code":true}}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"e8251dde-66d8-4c81-85ad-c88aca1db73a","type":"message","text":"Sad :disappointed:","user":"UCE6XE42Z","ts":"1612977062.367300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hkyq3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sad "},{"type":"emoji","name":"disappointed"}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"c67dc433-98b7-4621-914b-abba3a46f605","type":"message","text":"<https://github.com/JuliaLang/julia/pull/39035> this was a fix, but it caused problems elsewhere, so it has been reverted","user":"UDB26738Q","ts":"1612977077.367500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wr=sp","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/pull/39035"},{"type":"text","text":" this was a fix, but it caused problems elsewhere, so it has been reverted"}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z","reactions":[{"name":"+1","users":["UCE6XE42Z"],"count":1}]},{"client_msg_id":"3720689e-c46b-4f12-bb12-6bbd7dddf199","type":"message","text":"you may want to track <https://github.com/JuliaLang/julia/issues/39240> now","user":"UDB26738Q","ts":"1612977087.367700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z4pr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you may want to track "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/39240"},{"type":"text","text":" now"}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"49b8c45c-1ae4-491c-9e07-cb8f293b3c2a","type":"message","text":"Ah, thanks for the pointers. I had seen that PR some time ago but didn't recall it/connect the dots now. Thank you!","user":"UCE6XE42Z","ts":"1612977139.367900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"60eNj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, thanks for the pointers. I had seen that PR some time ago but didn't recall it/connect the dots now. Thank you!"}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"9c6afbe9-5b5c-4e53-81c1-759146a32d15","type":"message","text":"In the meantime, an alternative to adding `.0` everywhere is just to declare the eltype explicitly, as in `Float64[0, 0, 1]` (i.e. this has the same performance as `f2()`)","user":"UCE6XE42Z","ts":"1612977239.368100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+DV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the meantime, an alternative to adding "},{"type":"text","text":".0","style":{"code":true}},{"type":"text","text":" everywhere is just to declare the eltype explicitly, as in "},{"type":"text","text":"Float64[0, 0, 1]","style":{"code":true}},{"type":"text","text":" (i.e. this has the same performance as "},{"type":"text","text":"f2()","style":{"code":true}},{"type":"text","text":")"}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"c3fecb9f-e602-4e7f-9cc1-d65adb08f65a","type":"message","text":"yes, explicitly writing the literals as floating point is a good thing to do anyway, IMHO.  the issue is unfortunate, though","user":"UDB26738Q","ts":"1612977300.368300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q9DJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, explicitly writing the literals as floating point is a good thing to do anyway, IMHO.  the issue is unfortunate, though"}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"023a18c5-e0ef-47ca-8410-22068a3fa9ec","type":"message","text":"Or write `f3() = SA[0, 0, 1.0]`, 0.039 ns, using StaticArrays.","user":"UD0NS8PDF","ts":"1612979088.374500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"333U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or write "},{"type":"text","text":"f3() = SA[0, 0, 1.0]","style":{"code":true}},{"type":"text","text":", 0.039 ns, using StaticArrays."}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"fd5ff9d5-b680-40d7-8b79-d350e93ed8b1","type":"message","text":"While this issue is weird, it seems a little strange to make literal `Arrays` in performance-sensitive code. Usually you’d want to make them once and pull that out of the loop, or perhaps make them global constants, or use tuples.","user":"UD0NS8PDF","ts":"1612979108.374700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rmd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"While this issue is weird, it seems a little strange to make literal "},{"type":"text","text":"Arrays","style":{"code":true}},{"type":"text","text":" in performance-sensitive code. Usually you’d want to make them once and pull that out of the loop, or perhaps make them global constants, or use tuples."}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"2a10cc90-8719-44bf-8c5d-e642c852be10","type":"message","text":"It's not a performance sensitive thing; I am indeed just creating these literals once and then moving on to do other things with them. I was just puzzled by the difference.","user":"UCE6XE42Z","ts":"1613006615.383400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ezV0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's not a performance sensitive thing; I am indeed just creating these literals once and then moving on to do other things with them. I was just puzzled by the difference."}]}]}],"thread_ts":"1612976920.366700","parent_user_id":"UCE6XE42Z","reactions":[{"name":"+1","users":["UD0NS8PDF"],"count":1}]}]