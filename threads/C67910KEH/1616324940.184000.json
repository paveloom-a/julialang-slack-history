[{"client_msg_id":"37990457-ea2f-4c5d-ae10-016a07de09ff","type":"message","text":"Hey folks, just curious, are there any best practices to implement a singleton pattern <https://en.wikipedia.org/wiki/Singleton_pattern> in Julia? (Disclaimer: not supposed to holy war about whether singleton makes sense, just asking about the implementation)","user":"UEAHXC74L","ts":"1616324940.184000","team":"T68168MUP","edited":{"user":"UEAHXC74L","ts":"1616325304.000000"},"attachments":[{"image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Singleton_UML_class_diagram.svg/1200px-Singleton_UML_class_diagram.svg.png","image_width":1200,"image_height":720,"image_bytes":25689,"title":"Singleton pattern","title_link":"https://en.wikipedia.org/wiki/Singleton_pattern","from_url":"https://en.wikipedia.org/wiki/Singleton_pattern","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"In software engineering, the singleton pattern is a software design pattern that restricts the instantiation of a class to one \"single\" instance. This is useful when exactly one object is needed to coordinate actions across the system. The term comes from the mathematical concept of a singleton.\nCritics consider the singleton to be an anti-pattern in that it is frequently used in scenarios where it is not beneficial, introduces unnecessary restrictions in situations where a sole instance of a class is not actually required, and introduces global state into an application.","fallback":"wikipedia: Singleton pattern","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.wikipedia.org/wiki/Singleton_pattern"}],"blocks":[{"type":"rich_text","block_id":"aRwS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey folks, just curious, are there any best practices to implement a singleton pattern "},{"type":"link","url":"https://en.wikipedia.org/wiki/Singleton_pattern"},{"type":"text","text":" in Julia? (Disclaimer: not supposed to holy war about whether singleton makes sense, just asking about the implementation)"}]}]}],"thread_ts":"1616324940.184000","reply_count":52,"reply_users_count":8,"latest_reply":"1616359497.213400","reply_users":["U7HAYKY9X","UEAHXC74L","U72B7LTMX","U6N6VQE30","U67D54KS8","U01M655G9AR","U67BJLYCS","U8T0YV7QC"],"is_locked":false,"subscribed":false},{"client_msg_id":"380d97ea-c307-4a88-a56d-2e31482d3619","type":"message","text":"You can just make a struct with zero fields:\n`struct MySingleton end`","user":"U7HAYKY9X","ts":"1616324984.184200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nHq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can just make a struct with zero fields:\n"},{"type":"text","text":"struct MySingleton end","style":{"code":true}}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"ae8a5ea4-bc73-4b6f-ac7d-fd8186627519","type":"message","text":"If the struct contains no data, any two instances are indistinguishable, and it behaves as if there is only one instance.","user":"U7HAYKY9X","ts":"1616325028.184400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/yYI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If the struct contains no data, any two instances are indistinguishable, and it behaves as if there is only one instance."}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"16175702-bb9f-4891-94e3-2ee96ce7b017","type":"message","text":"Thanks Jakob. And if I want to store some data there, how does it work then?","user":"UEAHXC74L","ts":"1616325075.184600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GAt7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks Jakob. And if I want to store some data there, how does it work then?"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"3961325e-7199-4d11-b836-96cb52b46283","type":"message","text":"Right, I think the Singleton pattern is more often about global data. Can you just use a global variable?","user":"U72B7LTMX","ts":"1616325118.184800","team":"T68168MUP","thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"c112ac9d-9843-4a71-85a5-ab71f3a8f881","type":"message","text":"Well, I wanted to make it more neat than just a global variable…","user":"UEAHXC74L","ts":"1616325179.185000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hf2yp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, I wanted to make it more neat than just a global variable…"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"6ca3825a-adca-4fc0-a5d9-159468c26e11","type":"message","text":"Hm... you could make getter and setter functions that accesses some external data:\n```const FooField = Ref(0)\nfoo(::MySingleton) = FooField[]\nsetfoo(::MySingleton, v) = FooField[] = v```","user":"U7HAYKY9X","ts":"1616325190.185200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kf=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hm... you could make getter and setter functions that accesses some external data:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"const FooField = Ref(0)\nfoo(::MySingleton) = FooField[]\nsetfoo(::MySingleton, v) = FooField[] = v"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L","reactions":[{"name":"+1","users":["UEAHXC74L","UAUPJLBQX"],"count":2},{"name":"+1::skin-tone-5","users":["U6QGE7S86"],"count":1}]},{"client_msg_id":"6e2f1448-d8cc-44a5-a9a3-04aa657b3f6c","type":"message","text":"Neat in the sense of using setters and getters?","user":"U72B7LTMX","ts":"1616325296.185600","team":"T68168MUP","thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"b81b64ea-378f-46be-be31-20d4693db512","type":"message","text":"Yes, to be able to track the access to it","user":"UEAHXC74L","ts":"1616325318.185900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W9k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, to be able to track the access to it"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"aade9d0d-18b8-49aa-bc98-da32deaf4adb","type":"message","text":"You could also do something more direct, like:\n```julia&gt; struct Unsafe end\n\njulia&gt; struct Foo1\n           a::Vector{Int}\n           Foo1(::Unsafe, a::Vector{Int}) = new(a)\n       end\n\njulia&gt; const GlobalFoo1 = Base.RefValue{Union{Nothing, Foo1}}(nothing)\nBase.RefValue{Union{Nothing, Foo1}}(nothing)\n\njulia&gt; function Foo1(a)\n           if GlobalFoo1[] === nothing\n               foo1 = Foo1(Unsafe(), a)\n               GlobalFoo1[] = foo1\n               foo1\n           else\n               GlobalFoo1[]\n           end\n       end\nFoo1```","user":"U7HAYKY9X","ts":"1616325361.186100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XIRX7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could also do something more direct, like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct Unsafe end\n\njulia> struct Foo1\n           a::Vector{Int}\n           Foo1(::Unsafe, a::Vector{Int}) = new(a)\n       end\n\njulia> const GlobalFoo1 = Base.RefValue{Union{Nothing, Foo1}}(nothing)\nBase.RefValue{Union{Nothing, Foo1}}(nothing)\n\njulia> function Foo1(a)\n           if GlobalFoo1[] === nothing\n               foo1 = Foo1(Unsafe(), a)\n               GlobalFoo1[] = foo1\n               foo1\n           else\n               GlobalFoo1[]\n           end\n       end\nFoo1"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"722942d8-db66-4391-a682-51fcf4180090","type":"message","text":"Hm, also cool, thanks Jakob","user":"UEAHXC74L","ts":"1616325395.186300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uD0m+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hm, also cool, thanks Jakob"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"0dbb209b-c8c3-4ce6-8b35-455e64cd0bf4","type":"message","text":"Where you make a hidden type `Unsafe` that can be used to construct new Foo's","user":"U7HAYKY9X","ts":"1616325397.186500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6w+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Where you make a hidden type "},{"type":"text","text":"Unsafe","style":{"code":true}},{"type":"text","text":" that can be used to construct new Foo's"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"150397af-a4b4-4e7d-9438-b0022e954aef","type":"message","text":"Yes, get it","user":"UEAHXC74L","ts":"1616325406.186700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aS5O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, get it"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"dccca28c-0e38-4831-a0b1-dc339e5be5c1","type":"message","text":"it's still not a singleton because you can construct Unsafe()","user":"U6N6VQE30","ts":"1616325407.186900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HbOgh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's still not a singleton because you can construct Unsafe()"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L","reactions":[{"name":"heavy_plus_sign","users":["UEAHXC74L"],"count":1}]},{"client_msg_id":"c9da05f8-c826-448d-b9f5-8bddadee5966","type":"message","text":"Right, but assuming Unsafe is not exported, that will take people messing with the internals (in which case all bets are off anyway)","user":"U7HAYKY9X","ts":"1616325454.187100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IK8y3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, but assuming Unsafe is not exported, that will take people messing with the internals (in which case all bets are off anyway)"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L","reactions":[{"name":"heavy_check_mark","users":["UEAHXC74L","U010LT79LKX"],"count":2}]},{"type":"message","subtype":"thread_broadcast","text":"If you want to track accesses to some global variable, then you can just write functions to do that.","user":"U72B7LTMX","ts":"1616325578.187500","thread_ts":"1616324940.184000","root":{"client_msg_id":"37990457-ea2f-4c5d-ae10-016a07de09ff","type":"message","text":"Hey folks, just curious, are there any best practices to implement a singleton pattern <https://en.wikipedia.org/wiki/Singleton_pattern> in Julia? (Disclaimer: not supposed to holy war about whether singleton makes sense, just asking about the implementation)","user":"UEAHXC74L","ts":"1616324940.184000","team":"T68168MUP","edited":{"user":"UEAHXC74L","ts":"1616325304.000000"},"attachments":[{"image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Singleton_UML_class_diagram.svg/1200px-Singleton_UML_class_diagram.svg.png","image_width":1200,"image_height":720,"image_bytes":25689,"title":"Singleton pattern","title_link":"https://en.wikipedia.org/wiki/Singleton_pattern","from_url":"https://en.wikipedia.org/wiki/Singleton_pattern","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"In software engineering, the singleton pattern is a software design pattern that restricts the instantiation of a class to one \"single\" instance. This is useful when exactly one object is needed to coordinate actions across the system. The term comes from the mathematical concept of a singleton.\nCritics consider the singleton to be an anti-pattern in that it is frequently used in scenarios where it is not beneficial, introduces unnecessary restrictions in situations where a sole instance of a class is not actually required, and introduces global state into an application.","fallback":"wikipedia: Singleton pattern","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.wikipedia.org/wiki/Singleton_pattern"}],"blocks":[{"type":"rich_text","block_id":"aRwS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey folks, just curious, are there any best practices to implement a singleton pattern "},{"type":"link","url":"https://en.wikipedia.org/wiki/Singleton_pattern"},{"type":"text","text":" in Julia? (Disclaimer: not supposed to holy war about whether singleton makes sense, just asking about the implementation)"}]}]}],"thread_ts":"1616324940.184000","reply_count":52,"reply_users_count":8,"latest_reply":"1616359497.213400","reply_users":["U7HAYKY9X","UEAHXC74L","U72B7LTMX","U6N6VQE30","U67D54KS8","U01M655G9AR","U67BJLYCS","U8T0YV7QC"],"is_locked":false,"subscribed":false},"client_msg_id":"d5f96335-e6f6-4b0f-b16a-88109ce555f9"},{"client_msg_id":"7f3f6fef-df7f-4e11-9726-dfc80321530a","type":"message","text":"Are there multiple singletons one of which you need to e.g. pass into a function?","user":"U72B7LTMX","ts":"1616325659.187800","team":"T68168MUP","thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"6b8c9b65-4b59-4e89-97d5-18dc2d4da6fd","type":"message","text":"Well, that’s also a valid point. My intent is to have two.","user":"UEAHXC74L","ts":"1616325701.188000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=ZI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, that’s also a valid point. My intent is to have two."}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"df8d2f65-f927-43fa-9866-f5135db53f38","type":"message","text":"```julia&gt; struct Singleton\n           data::Vector{Int}\n           function Singleton()\n               if SINGLETON[] === nothing\n                   s = new([1,2,3])\n                   SINGLETON[] = s\n                   return s\n               else\n                   return SINGLETON[]\n               end\n           end\n       end\n\njulia&gt; const SINGLETON = Ref{Union{Nothing, Singleton}}(nothing);\n\njulia&gt; a = Singleton()\nSingleton([1, 2, 3])\n\njulia&gt; pointer(a.data)\nPtr{Int64} @0x0000000108fcb770\n\njulia&gt; b = Singleton()\nSingleton([1, 2, 3])\n\njulia&gt; pointer(b.data)\nPtr{Int64} @0x0000000108fcb770```","user":"U67D54KS8","ts":"1616325725.188200","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616325802.000000"},"blocks":[{"type":"rich_text","block_id":"A8+ad","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct Singleton\n           data::Vector{Int}\n           function Singleton()\n               if SINGLETON[] === nothing\n                   s = new([1,2,3])\n                   SINGLETON[] = s\n                   return s\n               else\n                   return SINGLETON[]\n               end\n           end\n       end\n\njulia> const SINGLETON = Ref{Union{Nothing, Singleton}}(nothing);\n\njulia> a = Singleton()\nSingleton([1, 2, 3])\n\njulia> pointer(a.data)\nPtr{Int64} @0x0000000108fcb770\n\njulia> b = Singleton()\nSingleton([1, 2, 3])\n\njulia> pointer(b.data)\nPtr{Int64} @0x0000000108fcb770"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L","reactions":[{"name":"100","users":["U7HAYKY9X","U01M655G9AR","UV98QAPFW","UCTJ1TGBV","U010LT79LKX","U01C15GH58B"],"count":6},{"name":"+1","users":["UEAHXC74L","UAUPJLBQX","U01QRM4E8HL"],"count":3}]},{"client_msg_id":"eaf68c54-c118-4d5d-8a5d-2d073cb2e0e6","type":"message","text":"maybe","user":"U67D54KS8","ts":"1616325729.188400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0i6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"b8304188-8193-4e94-890b-28887c454f11","type":"message","text":"Resembles Meyer’s singleton","user":"UEAHXC74L","ts":"1616325911.189000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u1FjV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Resembles Meyer’s singleton"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L","reactions":[{"name":"100","users":["U01QRM4E8HL"],"count":1}]},{"client_msg_id":"67f34cda-df20-47e6-adb1-46dbd6c14072","type":"message","text":"just playing a bit with this, would this solution be acceptable:\n```struct Singleton\n    data::Vector{Int}\n    Singleton() = new([1,2,3])\n    s = Singleton()\n    Singleton() = s\nend```\nI simply redefined `Singleton()`  so it's not possible to create other instances. No `global` needed: the instance just lives in closure of the constructor. Is there something stupid I'm missing?","user":"U01M655G9AR","ts":"1616336972.190200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/1dIb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just playing a bit with this, would this solution be acceptable:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Singleton\n    data::Vector{Int}\n    Singleton() = new([1,2,3])\n    s = Singleton()\n    Singleton() = s\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I simply redefined "},{"type":"text","text":"Singleton()","style":{"code":true}},{"type":"text","text":"  so it's not possible to create other instances. No "},{"type":"text","text":"global","style":{"code":true}},{"type":"text","text":" needed: the instance just lives in closure of the constructor. Is there something stupid I'm missing?"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"d35d0850-9ea1-4e02-955b-13ce4b0866f2","type":"message","text":"interesting :stuck_out_tongue: I don't understand how that parses at all? `s` is not a a fieldname of Singleton. Confusing","user":"U6N6VQE30","ts":"1616337268.190400","team":"T68168MUP","edited":{"user":"U6N6VQE30","ts":"1616337356.000000"},"blocks":[{"type":"rich_text","block_id":"r08It","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":" I don't understand how that parses at all? "},{"type":"text","text":"s","style":{"code":true}},{"type":"text","text":" is not a a fieldname of Singleton. Confusing"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"88ca56b2-9bb5-4479-92db-1773fe400619","type":"message","text":"statements inside a struct get executed in a local scope, so `s` is local, but gets into the closure of the second definition of the contructor.","user":"U01M655G9AR","ts":"1616337492.190700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d7thh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"statements inside a struct get executed in a local scope, so "},{"type":"text","text":"s","style":{"code":true}},{"type":"text","text":" is local, but gets into the closure of the second definition of the contructor."}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"2845f721-7753-4b68-9b7d-d3ec6cbdd8b1","type":"message","text":"Right, those statements were allowed so you could compute types and such? `struct A; x::compute_type(); end`","user":"U6N6VQE30","ts":"1616337764.190900","team":"T68168MUP","edited":{"user":"U6N6VQE30","ts":"1616337851.000000"},"blocks":[{"type":"rich_text","block_id":"F=k3=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, those statements were allowed so you could compute types and such? "},{"type":"text","text":"struct A; x::compute_type(); end","style":{"code":true}}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"9e587195-943a-4cc0-bb7d-60c5909da78a","type":"message","text":"I think my confusion is about this:\n\n```julia&gt; struct ExampleA\n           a::Int = 4\n           ExampleA() = new()\n       end\nERROR: syntax: \"a::Float64 = 4\" inside type definition is reserved\n\njulia&gt; struct ExampleB\n           ExampleB() = new()\n           a::Int = 4\n       end\n\njulia&gt; fieldnames(ExampleB)\n()```","user":"U6N6VQE30","ts":"1616338041.191200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"upgW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think my confusion is about this:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct ExampleA\n           a::Int = 4\n           ExampleA() = new()\n       end\nERROR: syntax: \"a::Float64 = 4\" inside type definition is reserved\n\njulia> struct ExampleB\n           ExampleB() = new()\n           a::Int = 4\n       end\n\njulia> fieldnames(ExampleB)\n()"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"310dc87e-0211-43dd-a90f-e92b15a8af55","type":"message","text":"is this a bug or a feature?","user":"U6N6VQE30","ts":"1616338180.191400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sxzPT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is this a bug or a feature?"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"a4668b8d-c708-41cb-b566-ae998422d888","type":"message","text":"Feels like a bug","user":"U67BJLYCS","ts":"1616338196.191600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XDF0K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Feels like a bug"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"7b25f11d-13b4-4194-af45-7cbdc6c54de0","type":"message","text":"but in any case these can only get parsed as statements, not field definitions, right?","user":"U01M655G9AR","ts":"1616338234.191800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JSk7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but in any case these can only get parsed as statements, not field definitions, right?"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"a34d2c0a-f874-4c24-8a30-e03213e8f467","type":"message","text":"Yeah, but at least to me it's not clear why you can have statements at all after defining a constructor","user":"U6N6VQE30","ts":"1616338289.192000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6baD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, but at least to me it's not clear why you can have statements at all after defining a constructor"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"5cc7ad64-e4b1-40af-bea1-a3cdbe2bdb65","type":"message","text":"```julia&gt; struct X\n         X() = new()\n         a::Float64 = 1.0\n         b::Float64 = 2.0\n       end\n\njulia&gt; X()\nX()\n\njulia&gt; struct Y\n         Y() = new(1.0, 2.0)\n         a::Float64\n         b::Float64\n       end\n\njulia&gt; Y()\nY(1.0, 2.0)```\nhas a high :wat: value","user":"U6N6VQE30","ts":"1616338405.192200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lxgk0","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct X\n         X() = new()\n         a::Float64 = 1.0\n         b::Float64 = 2.0\n       end\n\njulia> X()\nX()\n\njulia> struct Y\n         Y() = new(1.0, 2.0)\n         a::Float64\n         b::Float64\n       end\n\njulia> Y()\nY(1.0, 2.0)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"has a high "},{"type":"emoji","name":"wat"},{"type":"text","text":" value"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"8c774f41-3930-416b-b088-07e79c331429","type":"message","text":"there's no ambiguity in this case, the first ones can only be statements, the second ones can only be field definitions, no? (EDIT: not true, `a::T` is a well formed statement, but is just interpreted as a field definition)","user":"U01M655G9AR","ts":"1616338582.192400","team":"T68168MUP","edited":{"user":"U01M655G9AR","ts":"1616339281.000000"},"blocks":[{"type":"rich_text","block_id":"mKrwn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's no ambiguity in this case, the first ones can only be statements, the second ones can only be field definitions, no? (EDIT: not true, "},{"type":"text","text":"a::T","style":{"code":true}},{"type":"text","text":" is a well formed statement, but is just interpreted as a field definition)"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"4ede0d8d-bd9d-49b3-be7d-43dde27cb9b0","type":"message","text":"It seems that the parser just interprets `x::T` as field definitions, even if they could be well-formed statements","user":"U01M655G9AR","ts":"1616339016.192600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tRXK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems that the parser just interprets "},{"type":"text","text":"x::T","style":{"code":true}},{"type":"text","text":" as field definitions, even if they could be well-formed statements"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"8d4cc1d6-c321-4157-bc84-2124035f3c59","type":"message","text":"E.g. this doesn't assert, just creates a `Float64` fieldtype\n```struct strange\n    strange() = new(3)\n    a = 1 \n    a::Float64\nend```","user":"U01M655G9AR","ts":"1616339088.192800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zVZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"E.g. this doesn't assert, just creates a "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" fieldtype\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct strange\n    strange() = new(3)\n    a = 1 \n    a::Float64\nend"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"e1bc2d6f-aa41-43fe-b50d-bb154f352360","type":"message","text":"in any case what about the `Singleton` type I proposed?","user":"U01M655G9AR","ts":"1616339181.193000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jlLpw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in any case what about the "},{"type":"text","text":"Singleton","style":{"code":true}},{"type":"text","text":" type I proposed?"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"77ebe616-93ec-46be-9d6b-1aa438066720","type":"message","text":"(btw, I learned about statements in `struct` definitions here: <https://discourse.julialang.org/t/global-const-in-struct/27718/7>)","user":"U01M655G9AR","ts":"1616339647.193300","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Global const in struct","title_link":"https://discourse.julialang.org/t/global-const-in-struct/27718/7","text":"You can basically write any code inside a struct definition. It’s just like a let clause or for loop, for example, in that it does introduce a new scope. That is why you need global if you want to use a variable outside the module definition. (The struct name is already global because the struct keyword creates a new constant global type, so you don’t need global for defining a default constructor.) The only difference if you are inside a struct definition is that you can use new to create a new...","fallback":"JuliaLang: Global const in struct","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1592229158,"from_url":"https://discourse.julialang.org/t/global-const-in-struct/27718/7","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/global-const-in-struct/27718/7"}],"blocks":[{"type":"rich_text","block_id":"Uxo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(btw, I learned about statements in "},{"type":"text","text":"struct","style":{"code":true}},{"type":"text","text":" definitions here: "},{"type":"link","url":"https://discourse.julialang.org/t/global-const-in-struct/27718/7"},{"type":"text","text":")"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"8DC6A13B-5C2A-47A8-BF48-CCD6A42FC8DD","type":"message","text":"Honestly the proposed code looks a little weird to me. Taking that aside, in most Singleton usages, you can’t construct the object until runtime e.g. establish a database connection. I wonder if your approach would work properly at all given that the struct is defined during precompilation. ","user":"U8T0YV7QC","ts":"1616340446.200100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p5k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Honestly the proposed code looks a little weird to me. Taking that aside, in most Singleton usages, you can’t construct the object until runtime e.g. establish a database connection. I wonder if your approach would work properly at all given that the struct is defined during precompilation. "}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L","reactions":[{"name":"+1","users":["U01M655G9AR"],"count":1}]},{"client_msg_id":"7E260C2D-99C4-4BA4-A6C5-2A5EDDCA67E8","type":"message","text":"Also just an example <https://github.com/PacktPublishing/Hands-on-Design-Patterns-and-Best-Practices-with-Julia/blob/master/Chapter11/03_singleton.jl|https://github.com/PacktPublishing/Hands-on-Design-Patterns-and-Best-Practices-with-Julia/blob/master/Chapter11/03_singleton.jl>","user":"U8T0YV7QC","ts":"1616340484.200600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mk1j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also just an example "},{"type":"link","url":"https://github.com/PacktPublishing/Hands-on-Design-Patterns-and-Best-Practices-with-Julia/blob/master/Chapter11/03_singleton.jl","text":"https://github.com/PacktPublishing/Hands-on-Design-Patterns-and-Best-Practices-with-Julia/blob/master/Chapter11/03_singleton.jl"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"4b72f35e-2ee1-4e63-8e4e-f8f5ba75bbfe","type":"message","text":"It should be a `mutable struct`","user":"U67BJLYCS","ts":"1616340509.201100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uni","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It should be a "},{"type":"text","text":"mutable struct","style":{"code":true}}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"593b022f-c28e-4e29-a4f0-e7875d92d61a","type":"message","text":"good point","user":"U01M655G9AR","ts":"1616340939.201400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pt5p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"good point"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"e14b1ffe-a800-4359-b643-b2a3b6065520","type":"message","text":"this is a modification of <@U67D54KS8>'s definition, just avoiding the global\n```struct Singleton\n   data::Vector{Int}\n   Singleton() = (if s[] === nothing; s[] = new([1,2,3]); end; s[])\n   s = Ref{Union{Singleton,Nothing}}(nothing)\nend```","user":"U01M655G9AR","ts":"1616343856.203700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+T3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is a modification of "},{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":"'s definition, just avoiding the global\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Singleton\n   data::Vector{Int}\n   Singleton() = (if s[] === nothing; s[] = new([1,2,3]); end; s[])\n   s = Ref{Union{Singleton,Nothing}}(nothing)\nend"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"47e72b4e-2b01-418b-8119-5a8c7898083a","type":"message","text":"At least my version is non-cursed :wink:","user":"U67D54KS8","ts":"1616343894.203900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fqk2i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"At least my version is non-cursed "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"b755ab91-b6bb-41f3-aa92-70c84b8dde4b","type":"message","text":":scream: what is cursed? Am I cursed?","user":"U01M655G9AR","ts":"1616344435.204100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RW1c+","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"scream"},{"type":"text","text":" what is cursed? Am I cursed?"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"f9e92fd8-39a6-4e01-89e2-524a56c5268f","type":"message","text":"Normal variables in structs are cursed :stuck_out_tongue:","user":"U67D54KS8","ts":"1616344868.204400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jwJlz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Normal variables in structs are cursed "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L","reactions":[{"name":"black_cat","users":["U01M655G9AR"],"count":1}]},{"client_msg_id":"f0ffed4a-504d-471d-b284-152550030cd8","type":"message","text":"oops :slightly_smiling_face:. Joking aside, I couldn't find any of this in the documentation (only in some discourse thread). Do you know if these features (e.g. statements in struct definition) are something one can rely on or better not? Are they documented and I just missed it?","user":"U01M655G9AR","ts":"1616345451.204600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e7A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oops "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":". Joking aside, I couldn't find any of this in the documentation (only in some discourse thread). Do you know if these features (e.g. statements in struct definition) are something one can rely on or better not? Are they documented and I just missed it?"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"7168be1a-f4c9-4def-a0f0-159860eb1e55","type":"message","text":"I don't this use case was anticapted","user":"U6N6VQE30","ts":"1616348331.205100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vHHZU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't this use case was anticapted"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"14871d07-9af0-4fd7-8092-a490b87b1143","type":"message","text":"would this be blessed? :slightly_smiling_face:\n```struct Singleton\n    data::Vector{Int}\n    let s = Ref{Union{Singleton,Nothing}}(nothing)\n        Singleton() = (if s[] === nothing; s[] = new([1,2,3]); end; s[])\n    end\nend```","user":"U01M655G9AR","ts":"1616350321.205300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a/kN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"would this be blessed? "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Singleton\n    data::Vector{Int}\n    let s = Ref{Union{Singleton,Nothing}}(nothing)\n        Singleton() = (if s[] === nothing; s[] = new([1,2,3]); end; s[])\n    end\nend"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"e829bc7f-35dd-431b-abf7-76b78153840a","type":"message","text":"ok this avoids the whole `Union` stuff while initializing only on the first call to `Singleton()` but it is probably in a different universal plane of cursed  :joy::\n```struct Singleton\n    data::Vector{Int}\n    Singleton() = new()\n    my() = (my() = s; s = new([1,2,3]))\n    s = Singleton()\n    Singleton() = my()\nend```","user":"U01M655G9AR","ts":"1616352237.205700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rDmWy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok this avoids the whole "},{"type":"text","text":"Union","style":{"code":true}},{"type":"text","text":" stuff while initializing only on the first call to "},{"type":"text","text":"Singleton()","style":{"code":true}},{"type":"text","text":" but it is probably in a different universal plane of cursed  "},{"type":"emoji","name":"joy"},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Singleton\n    data::Vector{Int}\n    Singleton() = new()\n    my() = (my() = s; s = new([1,2,3]))\n    s = Singleton()\n    Singleton() = my()\nend"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L","reactions":[{"name":"tada","users":["U6N6VQE30"],"count":1}]},{"client_msg_id":"4cb594c2-ae4a-4652-9a31-64fb2434c736","type":"message","text":"Is my() defined in global scope then?","user":"U6N6VQE30","ts":"1616357260.209400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6+U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is my() defined in global scope then?"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"98f8a262-667f-4cca-a3fe-86a5f4e8b542","type":"message","text":"Wow, that’s a lot of interesting proposals here!","user":"UEAHXC74L","ts":"1616357422.209600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rb5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow, that’s a lot of interesting proposals here!"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"6ec951c5-471b-4448-b52e-2119031f848d","type":"message","text":"Didn’t expect to trigger such a live discussion","user":"UEAHXC74L","ts":"1616357437.209800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7jr2i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Didn’t expect to trigger such a live discussion"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"cfb48cae-1a4f-4f1e-9a99-0d734047f147","type":"message","text":"no, `my()` is defined in local scope, but it is captured by the closure","user":"U01M655G9AR","ts":"1616359352.213000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T1p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, "},{"type":"text","text":"my()","style":{"code":true}},{"type":"text","text":" is defined in local scope, but it is captured by the closure"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"},{"client_msg_id":"1c90a410-b74d-43cf-9fd5-70d3aa6f03dd","type":"message","text":"but I admit that this is a bit weird :)","user":"U01M655G9AR","ts":"1616359497.213400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fA=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I admit that this is a bit weird :)"}]}]}],"thread_ts":"1616324940.184000","parent_user_id":"UEAHXC74L"}]