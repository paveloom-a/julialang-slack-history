[{"client_msg_id":"da5703b6-477a-4e11-bb0b-f3ca766cba2f","type":"message","text":"anyone aware of any kind of \"atomic dict\" package for dicts that are a little easier to use in multi-threaded contexts?","user":"U9VG1AYSG","ts":"1615140003.184300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YlfiR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"anyone aware of any kind of \"atomic dict\" package for dicts that are a little easier to use in multi-threaded contexts?"}]}]}],"thread_ts":"1615140003.184300","reply_count":1,"reply_users_count":1,"latest_reply":"1615140383.184400","reply_users":["U67D54KS8"],"subscribed":false},{"client_msg_id":"a3dcaa2c-afa5-4d42-8834-b418bf26cc0a","type":"message","text":"Instead of trying to think about an \"atomic dict\" it is usually preferable to synchronize the communication to a standard dict. With that I mean that each thread do not directly insert things into the dict but pass the key and value they want to insert over a `Channel` to a task that inserts it into the standard dict. The channel then acts as the point of synchronization and the benefit is that you can use the same strategy no matter what data structure you have, you don't need atomic versions of them all. The point of channels is to synchronize communication, the point of dicts is to be dicts. Their composition allows synchronized access to the dict.","user":"U67D54KS8","ts":"1615140383.184400","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1615140461.000000"},"blocks":[{"type":"rich_text","block_id":"JOD5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Instead of trying to think about an \"atomic dict\" it is usually preferable to synchronize the communication to a standard dict. With that I mean that each thread do not directly insert things into the dict but pass the key and value they want to insert over a "},{"type":"text","text":"Channel","style":{"code":true}},{"type":"text","text":" to a task that inserts it into the standard dict. The channel then acts as the point of synchronization and the benefit is that you can use the same strategy no matter what data structure you have, you don't need atomic versions of them all. The point of channels is to synchronize communication, the point of dicts is to be dicts. Their composition allows synchronized access to the dict."}]}]}],"thread_ts":"1615140003.184300","parent_user_id":"U9VG1AYSG"}]