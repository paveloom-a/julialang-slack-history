[{"client_msg_id":"649FC72B-9023-4661-94FA-CF9E1DB5ACD8","type":"message","text":"Thought this was an interesting issue w/r/t optimizing `&amp;&amp;` and `||` in LLVM IR \n<https://github.com/rust-lang/rust/issues/83623|https://github.com/rust-lang/rust/issues/83623> (via :y_combinator:)\nI assume Julia does this differently?","user":"UGU761DU2","ts":"1617071735.050100","team":"T68168MUP","edited":{"user":"UGU761DU2","ts":"1617072159.000000"},"blocks":[{"type":"rich_text","block_id":"ZV4Es","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thought this was an interesting issue w/r/t optimizing "},{"type":"text","text":"&&","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"||","style":{"code":true}},{"type":"text","text":" in LLVM IR \n"},{"type":"link","url":"https://github.com/rust-lang/rust/issues/83623","text":"https://github.com/rust-lang/rust/issues/83623"},{"type":"text","text":" (via "},{"type":"emoji","name":"y_combinator"},{"type":"text","text":")\nI assume Julia does this differently?"}]}]}],"thread_ts":"1617071735.050100","reply_count":2,"reply_users_count":2,"latest_reply":"1617643512.247700","reply_users":["U66SR8JHX","U68QW0PUZ"],"is_locked":false,"subscribed":false,"reactions":[{"name":"+1","users":["U7THT3TM3","UEN48T0BT"],"count":2},{"name":"+1::skin-tone-5","users":["U6QGE7S86"],"count":1}]},{"client_msg_id":"f41e34d3-a31c-43f3-87c0-1c70835626eb","type":"message","text":"<https://julialang.slack.com/archives/C688QKS7Q/p1617048179078000>","user":"U66SR8JHX","ts":"1617072521.050500","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/C688QKS7Q/p1617048179078000","fallback":"[March 29th, 2021 1:02 PM] kristofferc: <https://github.com/rust-lang/rust/issues/83623> is kinda interesting. Doesn't seem like we get the good code with any of the versions:\n\n```struct BluePrint\n    fuel_tank_size::UInt16\n    payload::UInt16\n    wheel_diameter::Float32\n    wheel_width::Float32\n    storage::UInt32\nend\n\neq(a::BluePrint, b::BluePrint) = a == b\n\neq2(a::BluePrint, b::BluePrint) =\n    a.fuel_tank_size == b.fuel_tank_size &amp;&amp;\n    a.payload == b.payload &amp;&amp;\n    a.wheel_diameter == b.wheel_diameter &amp;&amp;\n    a.wheel_width == b.wheel_width &amp;&amp;\n    a.storage == b.storage\n\nfunction eq3(a::BluePrint, b::BluePrint)\n    if a.fuel_tank_size != b.fuel_tank_size\n        return false\n    end\n    if a.payload != b.payload\n        return false\n    end\n    if a.wheel_diameter != b.wheel_diameter\n        return false\n    end\n    if a.wheel_width != b.wheel_width\n        return false\n    end\n    if a.storage != b.storage\n        return false\n    end\n    return true\nend\n\ncode_llvm(eq, Tuple{BluePrint, BluePrint})\ncode_llvm(eq2, Tuple{BluePrint, BluePrint})\ncode_llvm(eq3, Tuple{BluePrint, BluePrint})```","ts":"1617048179.078000","author_id":"U67D54KS8","author_subname":"Kristoffer Carlsson","channel_id":"C688QKS7Q","channel_name":"internals","is_msg_unfurl":true,"is_thread_root_unfurl":true,"text":"<https://github.com/rust-lang/rust/issues/83623> is kinda interesting. Doesn't seem like we get the good code with any of the versions:\n\n```struct BluePrint\n    fuel_tank_size::UInt16\n    payload::UInt16\n    wheel_diameter::Float32\n    wheel_width::Float32\n    storage::UInt32\nend\n\neq(a::BluePrint, b::BluePrint) = a == b\n\neq2(a::BluePrint, b::BluePrint) =\n    a.fuel_tank_size == b.fuel_tank_size &amp;&amp;\n    a.payload == b.payload &amp;&amp;\n    a.wheel_diameter == b.wheel_diameter &amp;&amp;\n    a.wheel_width == b.wheel_width &amp;&amp;\n    a.storage == b.storage\n\nfunction eq3(a::BluePrint, b::BluePrint)\n    if a.fuel_tank_size != b.fuel_tank_size\n        return false\n    end\n    if a.payload != b.payload\n        return false\n    end\n    if a.wheel_diameter != b.wheel_diameter\n        return false\n    end\n    if a.wheel_width != b.wheel_width\n        return false\n    end\n    if a.storage != b.storage\n        return false\n    end\n    return true\nend\n\ncode_llvm(eq, Tuple{BluePrint, BluePrint})\ncode_llvm(eq2, Tuple{BluePrint, BluePrint})\ncode_llvm(eq3, Tuple{BluePrint, BluePrint})```","author_name":"Kristoffer Carlsson","author_link":"https://julialang.slack.com/team/U67D54KS8","author_icon":"https://avatars.slack-edge.com/2017-07-11/212233702263_4f03c1e2a1f7d0d3a1f5_48.jpg","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/C688QKS7Q/p1617048179078000","footer":"Thread in #internals"}],"blocks":[{"type":"rich_text","block_id":"JDIbO","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://julialang.slack.com/archives/C688QKS7Q/p1617048179078000"}]}]}],"thread_ts":"1617071735.050100","parent_user_id":"UGU761DU2","reactions":[{"name":"eyes","users":["UGU761DU2"],"count":1},{"name":"+1","users":["U7THT3TM3","UGU761DU2"],"count":2}]},{"client_msg_id":"a290df1e-9048-4bc2-a1de-a40cc6978e9b","type":"message","text":"They note \"The fix .. was added for LLVM 1.38\" so we should prepare to use that release (however that sort of preparation occur).","user":"U68QW0PUZ","ts":"1617643512.247700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uFSb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They note \"The fix .. was added for LLVM 1.38\" so we should prepare to use that release (however that sort of preparation occur)."}]}]}],"thread_ts":"1617071735.050100","parent_user_id":"UGU761DU2"}]