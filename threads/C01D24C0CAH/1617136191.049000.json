[{"client_msg_id":"7a12bd54-4ded-4ea8-93ce-5582abeb3ad4","type":"message","text":"Hi again! I wonder if I can have two forcings for the same field applied one after the other?","user":"UEGRU91B2","ts":"1617136191.049000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SJQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi again! I wonder if I can have two forcings for the same field applied one after the other?"}]}]}],"thread_ts":"1617136191.049000","reply_count":17,"reply_users_count":2,"latest_reply":"1617138826.052400","reply_users":["UEGRU91B2","UMZQBQU67"],"is_locked":false,"subscribed":false},{"client_msg_id":"c4695ac5-4dae-4fde-8f72-ad04454b76dc","type":"message","text":"In reality I don’t want two forcings:\nMy forcing depends on an array that I define outside of oceanagngans. What I would like is to update this array with the current value of the model fields before computing the forcing. This is because the forcing depends not only on the current cell value, but also on the neighbor’s. I want something like this:\n```setup external array\nwhen running one iteration\n           update external array for all i,j\n           apply forcing using values of external array for all i,j```\nIn reality I think I would be fine if I run the update of said array between iterations, or by something different than the forcing. Is is possible to ask Oceananigans.jl to run a function between iterations?","user":"UEGRU91B2","ts":"1617136500.049100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mfp/i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In reality I don’t want two forcings:\nMy forcing depends on an array that I define outside of oceanagngans. What I would like is to update this array with the current value of the model fields before computing the forcing. This is because the forcing depends not only on the current cell value, but also on the neighbor’s. I want something like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"setup external array\nwhen running one iteration\n           update external array for all i,j\n           apply forcing using values of external array for all i,j"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"In reality I think I would be fine if I run the update of said array between iterations, or by something different than the forcing. Is is possible to ask Oceananigans.jl to run a function between iterations?"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"6fb5dd6e-67b1-4627-983d-6516a6c149bb","type":"message","text":"To do this currently you have to manually add the forcings together in the forcing function you supply. However, it could be a nice feature to support “tuples of forcing functions” that add together. If you like we could work together to implement this feature!","user":"UMZQBQU67","ts":"1617136501.049300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G6wk2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To do this currently you have to manually add the forcings together in the forcing function you supply. However, it could be a nice feature to support “tuples of forcing functions” that add together. If you like we could work together to implement this feature!"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"da4f3a96-d229-4a53-bbc1-ca734787cbd5","type":"message","text":"Does the array change every time-step, or does it vary continuously in time?","user":"UMZQBQU67","ts":"1617136570.049500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nNV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does the array change every time-step, or does it vary continuously in time?"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"a5e6e501-424c-4cf2-869b-8296403d0ef8","type":"message","text":"it should change after every time step","user":"UEGRU91B2","ts":"1617136621.049700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E1UIs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it should change after every time step"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"8a7c75e3-7ab0-4c31-ab9b-02aa550983aa","type":"message","text":"but it stays constant _within_ a time-step?","user":"UMZQBQU67","ts":"1617136709.049900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9jj9k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but it stays constant "},{"type":"text","text":"within","style":{"italic":true}},{"type":"text","text":" a time-step?"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"c73836f5-2b22-43e6-b16a-80ea2ffd98aa","type":"message","text":"yes, it should","user":"UEGRU91B2","ts":"1617136746.050100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fIK=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, it should"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"0deafe7c-932e-458e-b914-c9e9a9f29631","type":"message","text":"You can use `simulation.progress` with `iteration_interval=1` to update some aspect of the model after every time-step. It’s a bit unfortunate that the interface is a little clunky right now (we would like to improve how this works as discussed on <https://github.com/CliMA/Oceananigans.jl/issues/1138>).","user":"UMZQBQU67","ts":"1617136783.050300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ywoN6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can use "},{"type":"text","text":"simulation.progress","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"iteration_interval=1","style":{"code":true}},{"type":"text","text":" to update some aspect of the model after every time-step. It’s a bit unfortunate that the interface is a little clunky right now (we would like to improve how this works as discussed on "},{"type":"link","url":"https://github.com/CliMA/Oceananigans.jl/issues/1138"},{"type":"text","text":")."}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"45437667-92d3-4578-abf8-8bfd7a4b91fc","type":"message","text":"Oh, that sounds as a clever trick! Thanks! I will play around with that approach","user":"UEGRU91B2","ts":"1617136881.050500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XHdBK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, that sounds as a clever trick! Thanks! I will play around with that approach"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"1d8c658f-9601-45aa-8a1a-7cfe5a379c11","type":"message","text":"There are several ways to reference an array inside a forcing function. Probably the nicest way is to define a forcing function using the “discrete form” and include the array in `Forcing.parameters` object","user":"UMZQBQU67","ts":"1617136887.050700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NRqV1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are several ways to reference an array inside a forcing function. Probably the nicest way is to define a forcing function using the “discrete form” and include the array in "},{"type":"text","text":"Forcing.parameters","style":{"code":true}},{"type":"text","text":" object"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"b8fe4d62-3b74-43ae-aafe-1028ccc1779c","type":"message","text":"<https://clima.github.io/OceananigansDocumentation/stable/model_setup/forcing_functions/#%22Discrete-form%22-forcing-functions>","user":"UMZQBQU67","ts":"1617136917.050900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e1Mg","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://clima.github.io/OceananigansDocumentation/stable/model_setup/forcing_functions/#%22Discrete-form%22-forcing-functions"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"87d84bc2-f0c2-4a41-837a-2d79f80612e1","type":"message","text":"Great, thanks. I am indeed trying with the discrete form of the Forcing builder","user":"UEGRU91B2","ts":"1617136941.051100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vQ5Wd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Great, thanks. I am indeed trying with the discrete form of the Forcing builder"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2","reactions":[{"name":"+1","users":["UMZQBQU67"],"count":1}]},{"client_msg_id":"b88c3b9c-fa63-463f-abc9-10d4a8af629e","type":"message","text":"As a side note, if the array really does change continuously, then the strategy outlined should work with `QuasiAdamsBashforth2` time-stepper (which has one stage per time-step). However, `RungeKutta3` has 3 stages per time-step, so in principle if the array changes continuously, it would have to be updated in substages (otherwise the time-stepping method is probably 1st order rather than 3rd order). We don’t yet have a way of inserting arbitrary user code between substages (hopefully we do eventually).","user":"UMZQBQU67","ts":"1617137216.051300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hXfOZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As a side note, if the array really does change continuously, then the strategy outlined should work with "},{"type":"text","text":"QuasiAdamsBashforth2","style":{"code":true}},{"type":"text","text":" time-stepper (which has one stage per time-step). However, "},{"type":"text","text":"RungeKutta3","style":{"code":true}},{"type":"text","text":" has 3 stages per time-step, so in principle if the array changes continuously, it would have to be updated in substages (otherwise the time-stepping method is probably 1st order rather than 3rd order). We don’t yet have a way of inserting arbitrary user code between substages (hopefully we do eventually)."}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"59bdd717-b85b-4305-80b0-9d5fd5a9b725","type":"message","text":"Actually I think this approach works best for my use case. Indeed I am thinking weird things would happen with a multi-step time integrator if the update happened inside the forcing loop.","user":"UEGRU91B2","ts":"1617138119.051600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vfrnp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually I think this approach works best for my use case. Indeed I am thinking weird things would happen with a multi-step time integrator if the update happened inside the forcing loop."}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"44aa5a4f-340f-4e01-90f0-bb37693dd9c9","type":"message","text":"Another question:\nIn this part of the example I am following, progress takes only a `sim` parameter, but it uses for example `h` which is not contained in sim. Can I pass more arguments apart from sim? I am wondering if h is taken from the global scope in this case, which would make it slower in terms of performance if I do some arbitrary function with it.\n```progress(sim) = @info(@sprintf(\"Iter: %d, time: %.1f, Δt: %.3f, max|h|: %.2f\",\n                               sim.model.clock.iteration, sim.model.clock.time,\n                                   sim.Δt, maximum(abs, h.data.parent)))```","user":"UEGRU91B2","ts":"1617138445.051800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"59P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Another question:\nIn this part of the example I am following, progress takes only a "},{"type":"text","text":"sim","style":{"code":true}},{"type":"text","text":" parameter, but it uses for example "},{"type":"text","text":"h","style":{"code":true}},{"type":"text","text":" which is not contained in sim. Can I pass more arguments apart from sim? I am wondering if h is taken from the global scope in this case, which would make it slower in terms of performance if I do some arbitrary function with it.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"progress(sim) = @info(@sprintf(\"Iter: %d, time: %.1f, Δt: %.3f, max|h|: %.2f\",\n                               sim.model.clock.iteration, sim.model.clock.time,\n                                   sim.Δt, maximum(abs, h.data.parent)))"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"b8158b47-d1a7-4630-a9c5-72dcac75d83f","type":"message","text":"oh, nevermind. I can add a `parameters` tuple to the simulation constructor and that will do the trick, I think","user":"UEGRU91B2","ts":"1617138713.052000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XI7p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, nevermind. I can add a "},{"type":"text","text":"parameters","style":{"code":true}},{"type":"text","text":" tuple to the simulation constructor and that will do the trick, I think"}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"1fb0dd6e-04d3-43c3-bf7e-0a9f9163a472","type":"message","text":"Ah nice --- a rare use case for `Simulation.parameters`.","user":"UMZQBQU67","ts":"1617138780.052200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xl1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah nice --- a rare use case for "},{"type":"text","text":"Simulation.parameters","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"7e4ea8d4-03a3-41a0-a33a-437ddbb9ee07","type":"message","text":"It probably wouldn’t slow your simulation down to take the array reference from the global scope in this case (because its probably not a very expensive part of the model), but its sometimes inconvenient to use global scope when developing scripts I find.","user":"UMZQBQU67","ts":"1617138826.052400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G=I1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It probably wouldn’t slow your simulation down to take the array reference from the global scope in this case (because its probably not a very expensive part of the model), but its sometimes inconvenient to use global scope when developing scripts I find."}]}]}],"thread_ts":"1617136191.049000","parent_user_id":"UEGRU91B2"}]