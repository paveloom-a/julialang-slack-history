[{"client_msg_id":"774ddbd0-d50f-40f0-8604-533e28e6a45d","type":"message","text":"Don't think this is possible using just `AveragedField` and `FieldSlicer` as field slicing acts on the final result (in this case, it acts after the average has been computed).","user":"UEP056STX","ts":"1613592512.049200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X/hY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Don't think this is possible using just "},{"type":"text","text":"AveragedField","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"FieldSlicer","style":{"code":true}},{"type":"text","text":" as field slicing acts on the final result (in this case, it acts after the average has been computed)."}]}]}],"thread_ts":"1613592512.049200","reply_count":40,"reply_users_count":3,"latest_reply":"1613861142.016700","reply_users":["U01E0U2RJJ2","UEP056STX","UMZQBQU67"],"subscribed":false},{"client_msg_id":"3b4f7dba-c190-446b-a6a4-f798087a7c6a","type":"message","text":"Hmm, that's what I was afraid of","user":"U01E0U2RJJ2","ts":"1613592621.050900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0/To","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, that's what I was afraid of"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"e304ad39-432c-4290-b41a-51cb0f0c1f14","type":"message","text":"I'm trying to avoid as much post-processing as possible","user":"U01E0U2RJJ2","ts":"1613592645.051100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hP8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm trying to avoid as much post-processing as possible"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"9c48b23c-4706-444a-93f0-d293fece178d","type":"message","text":"Yeah same here...","user":"UEP056STX","ts":"1613592663.051300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SfeRF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah same here..."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"63e97517-c428-48f7-86b1-2ca6d0238c1b","type":"message","text":"Is there any workaround at the moment? So that FieldSlicer can be applied before averaging?","user":"U01E0U2RJJ2","ts":"1613592681.051500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fpA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any workaround at the moment? So that FieldSlicer can be applied before averaging?"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"2910a42f-9575-4a11-9e9f-06527414a2f8","type":"message","text":"I think <@UMZQBQU67> has proposed adding a `WindowedField` or `SlicedField` that represents some slice of a larger 3D field.","user":"UEP056STX","ts":"1613592711.051700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b6d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think "},{"type":"user","user_id":"UMZQBQU67"},{"type":"text","text":" has proposed adding a "},{"type":"text","text":"WindowedField","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"SlicedField","style":{"code":true}},{"type":"text","text":" that represents some slice of a larger 3D field."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"bda6a3e2-1542-4d41-9a17-8366248b5293","type":"message","text":"Part of the `SlicedField` functionality could be that if you pass it to `AveragedField`, it'll only average the particular slice.","user":"UEP056STX","ts":"1613592739.051900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ujD9t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Part of the "},{"type":"text","text":"SlicedField","style":{"code":true}},{"type":"text","text":" functionality could be that if you pass it to "},{"type":"text","text":"AveragedField","style":{"code":true}},{"type":"text","text":", it'll only average the particular slice."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"f5639dfb-5d4a-4bed-9377-1ff6c4e572e1","type":"message","text":"It can be done as part of the simulation script","user":"UEP056STX","ts":"1613592777.052100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sj9Rc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It can be done as part of the simulation script"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"dd24e320-fff3-4ffd-b22f-ba43c32868df","type":"message","text":"Yeah, I agree","user":"U01E0U2RJJ2","ts":"1613592777.052300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jnno","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I agree"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"b27ceaaa-cc10-4fe5-a23f-f1c2f7c1fed5","type":"message","text":"That would be super useful","user":"U01E0U2RJJ2","ts":"1613592782.052500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4mGU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That would be super useful"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"dfd62176-e37b-451e-a649-491ea1e4a2f5","type":"message","text":"Also I think the way it is done right now might be misleading. I have been using the example AveragedFields+Slicer I sent on the channel for a while before I realized that it might not be doing what I thought it was doing","user":"U01E0U2RJJ2","ts":"1613592846.052700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vos","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also I think the way it is done right now might be misleading. I have been using the example AveragedFields+Slicer I sent on the channel for a while before I realized that it might not be doing what I thought it was doing"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"8dbeef77-32b6-4949-b099-e0671adc0a59","type":"message","text":"Is there a comment/warning about that in the docs?","user":"U01E0U2RJJ2","ts":"1613592888.053200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Az","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a comment/warning about that in the docs?"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"46f74c83-2353-4fc4-bc72-322873773df7","type":"message","text":"I think you'll have to define a custom function that does something like\n```function custom_average(model)\n    U = AveragedField(model.velocities.u, dims=1)\n    compute!(U)    \n    U_slice_averaged = mean(U.data[1, 20:50, 1:<http://grid.Nz|grid.Nz>], dims=2)\n    return U_slice_averaged\nend```\nbut this is pretty hacky...","user":"UEP056STX","ts":"1613592912.053900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bI7lB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you'll have to define a custom function that does something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function custom_average(model)\n    U = AveragedField(model.velocities.u, dims=1)\n    compute!(U)    \n    U_slice_averaged = mean(U.data[1, 20:50, 1:grid.Nz], dims=2)\n    return U_slice_averaged\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but this is pretty hacky..."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"54813d33-7ad6-459a-93dc-e35105d80011","type":"message","text":"`custom_average` can be passed to a `JLD2OutputWriter` or a `NetCDFOutputWriter` (but you probably have to specify the dimensions manually for NetCDF).","user":"UEP056STX","ts":"1613592957.054100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KGH1d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"custom_average","style":{"code":true}},{"type":"text","text":" can be passed to a "},{"type":"text","text":"JLD2OutputWriter","style":{"code":true}},{"type":"text","text":" or a "},{"type":"text","text":"NetCDFOutputWriter","style":{"code":true}},{"type":"text","text":" (but you probably have to specify the dimensions manually for NetCDF)."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"d79eb3d1-fa86-4e25-84c9-abbc913ac115","type":"message","text":"Yeah, I guess we didn't really anticipate `AveragedField` and `FieldSlicer` being used together so a warning or a note in the docstring could be useful.","user":"UEP056STX","ts":"1613593002.054300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5xbX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I guess we didn't really anticipate "},{"type":"text","text":"AveragedField","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"FieldSlicer","style":{"code":true}},{"type":"text","text":" being used together so a warning or a note in the docstring could be useful."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"f983b427-0f04-4dc6-b37d-3d4490a827cd","type":"message","text":"I see. Thanks for the suggestion!","user":"U01E0U2RJJ2","ts":"1613593010.054500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C186","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see. Thanks for the suggestion!"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"996ee691-7c24-4d2e-a78a-2c3b73c591c8","type":"message","text":"Late to the party!","user":"UMZQBQU67","ts":"1613600475.055100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D9hVC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Late to the party!"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"cb79b788-a9c0-41c4-9186-e6027d0d9d2b","type":"message","text":"I think `WindowedField` would be pretty neat. But the primary reason to make something a “Field” is so that it can be used in other operations. Thus `WindowedField` makes the most sense if we need to do complex / heavy operations but only want to perform them on part of some huge model domain. So I think we’ll eventually want this for massive GPU runs. For Tomas’ case though I think a custom averaging function makes more sense. The “windowed spatial average” doesn’t need to be used in any subsequent operations right?","user":"UMZQBQU67","ts":"1613600587.055300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vwn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think "},{"type":"text","text":"WindowedField","style":{"code":true}},{"type":"text","text":" would be pretty neat. But the primary reason to make something a “Field” is so that it can be used in other operations. Thus "},{"type":"text","text":"WindowedField","style":{"code":true}},{"type":"text","text":" makes the most sense if we need to do complex / heavy operations but only want to perform them on part of some huge model domain. So I think we’ll eventually want this for massive GPU runs. For Tomas’ case though I think a custom averaging function makes more sense. The “windowed spatial average” doesn’t need to be used in any subsequent operations right?"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"eb3a0c62-2cd3-4ca8-a40f-ae29593adfb9","type":"message","text":"We designed the time averaging feature so that it can time-average any kind of output; so it can average both fields and output of functions (if those functions return arrays). However, field slicer will not work anymore because it can only work on fields.","user":"UMZQBQU67","ts":"1613600622.055500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"loMX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We designed the time averaging feature so that it can time-average any kind of output; so it can average both fields and output of functions (if those functions return arrays). However, field slicer will not work anymore because it can only work on fields."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"5827bc6a-691a-408a-bdb0-06e9a1842432","type":"message","text":"I'm considering taking a crack at this. Any tips as to where to start?","user":"U01E0U2RJJ2","ts":"1613758097.056800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uyir","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm considering taking a crack at this. Any tips as to where to start?"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"51430c56-c2ff-488b-9f50-b2fe63366fc8","type":"message","text":"I was thinking start from AveragedField and build something called WindowedAveragedField from it in combination with FieldSlicer","user":"U01E0U2RJJ2","ts":"1613758149.057000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FI2s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was thinking start from AveragedField and build something called WindowedAveragedField from it in combination with FieldSlicer"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"92e77cc8-c89d-4897-9c8a-6c37d46c8834","type":"message","text":"<@U01E0U2RJJ2> I wonder if `WindowedField` is the place to start? It could be created from a `Field` + a `FieldSlicer`:\n```u_window = WindowedField(model.velocities.u, field_slicer=FieldSlicer(j=20:50))```\nand we could make sure that\n```AveragedField(u_window, dims=(1, 2))```\ndoes the right thing by averaging all of x and y from j=20:50?","user":"UEP056STX","ts":"1613764807.057200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bzldk","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01E0U2RJJ2"},{"type":"text","text":" I wonder if "},{"type":"text","text":"WindowedField","style":{"code":true}},{"type":"text","text":" is the place to start? It could be created from a "},{"type":"text","text":"Field","style":{"code":true}},{"type":"text","text":" + a "},{"type":"text","text":"FieldSlicer","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"u_window = WindowedField(model.velocities.u, field_slicer=FieldSlicer(j=20:50))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and we could make sure that\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"AveragedField(u_window, dims=(1, 2))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"does the right thing by averaging all of x and y from j=20:50?"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"080f3f25-f77e-41cc-b58b-60456b9c43a9","type":"message","text":"I'm basing myself off of Greg's comments that a more general WindowedField might be better for later","user":"U01E0U2RJJ2","ts":"1613774439.057800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Gdj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm basing myself off of Greg's comments that a more general WindowedField might be better for later"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"86c018d9-c3f4-4d26-ad90-1f12a0aa840e","type":"message","text":"Ah sorry I missed his comments, you're right.","user":"UEP056STX","ts":"1613774513.058000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UvM/o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah sorry I missed his comments, you're right."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"3d6fd9fc-1509-417c-abf4-6c20e8c2f065","type":"message","text":"Also since something like `WindowedAveragedField` reduces a dimension, I feel it's easier to code","user":"U01E0U2RJJ2","ts":"1613774524.058200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AGt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also since something like "},{"type":"text","text":"WindowedAveragedField","style":{"code":true}},{"type":"text","text":" reduces a dimension, I feel it's easier to code"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX","reactions":[{"name":"+1","users":["UEP056STX"],"count":1}]},{"client_msg_id":"365c9992-b261-4a11-bc56-3c21d412205f","type":"message","text":"UNfortunately I don't have 10% of you guys' familiarity with the code, so even simple tasks for me might take a little while haha","user":"U01E0U2RJJ2","ts":"1613774565.058700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ervT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"UNfortunately I don't have 10% of you guys' familiarity with the code, so even simple tasks for me might take a little while haha"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"8a613ebc-978e-41a9-8108-154d531899f1","type":"message","text":"Ah haha it doesn't help that the code is changing rapidly either...","user":"UEP056STX","ts":"1613774606.058900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"41f=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah haha it doesn't help that the code is changing rapidly either..."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"35435730-4ebf-43a4-bbce-287ec7b1c42b","type":"message","text":"I'm pretty happy to pair program stuff over Zoom if you think that would be helpful.","user":"UEP056STX","ts":"1613774657.059100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"glh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm pretty happy to pair program stuff over Zoom if you think that would be helpful."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"59bd3ddf-22cb-496b-8626-9cdbeb308b54","type":"message","text":"Pretty sure Greg is too but don't want to assume his schedule, I know he's pretty busy lately.","user":"UEP056STX","ts":"1613774675.059300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dpu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pretty sure Greg is too but don't want to assume his schedule, I know he's pretty busy lately."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"c1fa0eb2-168f-4d4f-973d-91c6df6e0574","type":"message","text":"I appreciate it! I might take you up on that if things get too hard :slightly_smiling_face:","user":"U01E0U2RJJ2","ts":"1613777485.059500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rAFV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I appreciate it! I might take you up on that if things get too hard "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"66C03EA6-A554-4A1C-97CE-0B982ACAA2D1","type":"message","text":"The key aspects are:\n\n1) output writers accept any object that can be called with “model” as an argument, in addition to fields.\n\n2) the function “Statistics.mean” is an easy to way compute averages over subsets of arrays on a regularly spaced grid.\n\n3) Julia has a special syntax for defining methods that are attached to objects (the objects then become “callable objects”). This is convenient for defining objects that both store information (such as a reference to fields, and indices that define a view into a subset of an array), and have a function attached (such as one that returns data intended for output).\n\nUnderstanding the first and third thing lets one code up virtually any diagnostic they might need.\n\nCallable objects are described in the Julia manual: <https://docs.julialang.org/en/v1/manual/methods/#Function-like-objects>\n\nI have some some time PP next week if need be.","user":"UMZQBQU67","ts":"1613790833.010200","team":"T68168MUP","thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"6cdbac14-816c-457e-be52-febaafd15c22","type":"message","text":"Yeah, I'm having some trouble creating the necessary struct. I've read about it but there's still a lot I don't get at this point","user":"U01E0U2RJJ2","ts":"1613834129.010400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h+4N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I'm having some trouble creating the necessary struct. I've read about it but there's still a lot I don't get at this point"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"684e94d0-68a3-4329-b980-d61b1e1a2a6b","type":"message","text":"So, here's an idea: I'm thinking of expanding `AveragedField` into `SpatiallyAveragedField`, which is a more descriptive name","user":"U01E0U2RJJ2","ts":"1613834199.010600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hCp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, here's an idea: I'm thinking of expanding "},{"type":"text","text":"AveragedField","style":{"code":true}},{"type":"text","text":" into "},{"type":"text","text":"SpatiallyAveragedField","style":{"code":true}},{"type":"text","text":", which is a more descriptive name"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"afffff91-6cfd-402f-a1a2-d7ad52bb71b1","type":"message","text":"If it gets an operator + dims, it reverts back to what `AveragedField` does. If it gets an operator+dims+`FieldSlicer` then it does the average only on that slice. I think this is the cleanest way to add that capability. What do you guys think?","user":"U01E0U2RJJ2","ts":"1613834331.010800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ynR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it gets an operator + dims, it reverts back to what "},{"type":"text","text":"AveragedField","style":{"code":true}},{"type":"text","text":" does. If it gets an operator+dims+"},{"type":"text","text":"FieldSlicer","style":{"code":true}},{"type":"text","text":" then it does the average only on that slice. I think this is the cleanest way to add that capability. What do you guys think?"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"0e08ca56-cbc2-41ad-adc1-c0f782c1e127","type":"message","text":"(Let me know if you want me to open a GH issue for this)","user":"U01E0U2RJJ2","ts":"1613834357.011000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"du+Qx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(Let me know if you want me to open a GH issue for this)"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"31d71b70-4448-4cd0-955f-9aed386c9bde","type":"message","text":"Try this:\n\n```struct WindowedSpatialAverage{F, I, J, K, D}\n    field :: F\n    i :: I\n    j :: J\n    k :: K\n    dims :: D\nend\n\nWindowedSpatialAverage(field; dims, i=Colon(), j=Colon(), k=Colon()) = WindowedSpatialAverage(field, i, j, k, dims)\n\nfunction (wsa::WindowedSpatialAverage)(model)\n    compute!(wsa.field)\n    window = view(data(wsa.field), wsa.i, wsa.j, wsa.k)\n    return mean(window, dims=wsa.dims)\nend```","user":"UMZQBQU67","ts":"1613847177.012000","team":"T68168MUP","edited":{"user":"UMZQBQU67","ts":"1613848491.000000"},"blocks":[{"type":"rich_text","block_id":"u75","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Try this:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct WindowedSpatialAverage{F, I, J, K, D}\n    field :: F\n    i :: I\n    j :: J\n    k :: K\n    dims :: D\nend\n\nWindowedSpatialAverage(field; dims, i=Colon(), j=Colon(), k=Colon()) = WindowedSpatialAverage(field, i, j, k, dims)\n\nfunction (wsa::WindowedSpatialAverage)(model)\n    compute!(wsa.field)\n    window = view(data(wsa.field), wsa.i, wsa.j, wsa.k)\n    return mean(window, dims=wsa.dims)\nend"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"0fb76b49-f6dd-4c62-9f3c-fa9aceb2dd5e","type":"message","text":"Usage is something like\n\n```windowed_average_velocities = Dict(name =&gt; WindowedSpatialAverage(velocities[name]; dims=1, i=20:50) for name in (:u, :v, :w))\n\noutput_writer = NetCDFOutputWriter(model, windowed_average_velocities; ...)```","user":"UMZQBQU67","ts":"1613847377.012300","team":"T68168MUP","edited":{"user":"UMZQBQU67","ts":"1613847394.000000"},"blocks":[{"type":"rich_text","block_id":"iPg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Usage is something like\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"windowed_average_velocities = Dict(name => WindowedSpatialAverage(velocities[name]; dims=1, i=20:50) for name in (:u, :v, :w))\n\noutput_writer = NetCDFOutputWriter(model, windowed_average_velocities; ...)"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"36c7800a-299c-48df-93b2-8109fbc98f4e","type":"message","text":"Baking a window into AveragedField might get complicated --- I’m not sure. If you’d like to do the groundwork to make a windowed field, it might be easier to define an abstract type `AbstractAveragedField` and dispatch on the appropriate functions (like `compute!`) to save code duplication. One issue is that a core purpose of fields is that they can be used in `AbstractOperations`. So we’d have to figure out how to express the concept of an `AbstractOperation` between a full field and a windowed field. We’d have to launch kernels with different layouts to compute the windowed computations, etc. This would be really great to have but is no small task I don’t think.","user":"UMZQBQU67","ts":"1613847695.012700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"96j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Baking a window into AveragedField might get complicated --- I’m not sure. If you’d like to do the groundwork to make a windowed field, it might be easier to define an abstract type "},{"type":"text","text":"AbstractAveragedField","style":{"code":true}},{"type":"text","text":" and dispatch on the appropriate functions (like "},{"type":"text","text":"compute!","style":{"code":true}},{"type":"text","text":") to save code duplication. One issue is that a core purpose of fields is that they can be used in "},{"type":"text","text":"AbstractOperations","style":{"code":true}},{"type":"text","text":". So we’d have to figure out how to express the concept of an "},{"type":"text","text":"AbstractOperation","style":{"code":true}},{"type":"text","text":" between a full field and a windowed field. We’d have to launch kernels with different layouts to compute the windowed computations, etc. This would be really great to have but is no small task I don’t think."}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"ff17b049-d8ab-428f-bb0f-70253fe48b9e","type":"message","text":"Created a discussion for this: <https://github.com/CliMA/Oceananigans.jl/issues/1392>","user":"U01E0U2RJJ2","ts":"1613856356.013000","team":"T68168MUP","edited":{"user":"U01E0U2RJJ2","ts":"1613856431.000000"},"blocks":[{"type":"rich_text","block_id":"VBu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Created a discussion for this: "},{"type":"link","url":"https://github.com/CliMA/Oceananigans.jl/issues/1392"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"d85c94b3-ff35-4add-939b-6f0c3119bd53","type":"message","text":"Would this `WIndowedSpatialAverage`  only work on fields, not `AbstractOperations`?","user":"U01E0U2RJJ2","ts":"1613856421.013200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TYhR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would this "},{"type":"text","text":"WIndowedSpatialAverage","style":{"code":true}},{"type":"text","text":"  only work on fields, not "},{"type":"text","text":"AbstractOperations","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"},{"client_msg_id":"618D233F-AEE3-405D-8556-077DC262F041","type":"message","text":"That’s right! That’s because an AbstractOperation merely represents an expression tree — it doesn’t perform any calculations. In theory it might be possible to perform “on the fly” averaging / accumulation (which could potentially more efficient than computing a field, and taking a mean afterwards) but I think you would have to write the GPU code to do that yourself because CUDA.mean won’t cut it. Worth thinking about…","user":"UMZQBQU67","ts":"1613861142.016700","team":"T68168MUP","edited":{"user":"UMZQBQU67","ts":"1613874200.000000"},"blocks":[{"type":"rich_text","block_id":"ZeHN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That’s right! That’s because an AbstractOperation merely represents an expression tree — it doesn’t perform any calculations. In theory it might be possible to perform “on the fly” averaging / accumulation (which could potentially more efficient than computing a field, and taking a mean afterwards) but I think you would have to write the GPU code to do that yourself because CUDA.mean won’t cut it. Worth thinking about…"}]}]}],"thread_ts":"1613592512.049200","parent_user_id":"UEP056STX"}]