[{"client_msg_id":"4da5318d-44c8-4d49-a45b-71a6cb83e091","type":"message","text":"Actually I don’t see turbulent kinetic energy in Oceanostics yet --- but probably we should add it (maybe that’s my job :smirk:). Anyways, until then there is an implementation in the LESbrary.jl:\n\n<https://github.com/CliMA/LESbrary.jl/blob/master/src/TurbulenceStatistics/turbulent_kinetic_energy.jl>\n\nTo use this you would add `LESbrary.jl` to your environment and then put something like\n\n```using LESbrary.TurbulenceStatistics: TurbulentKineticEnergy\n\ntke = TurbulentKineticEnergy(model)```\nwhich you should then be able to use with `OutputWriters` like any other `ComputedField`.","user":"UMZQBQU67","ts":"1614280439.064100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3q1nE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually I don’t see turbulent kinetic energy in Oceanostics yet --- but probably we should add it (maybe that’s my job "},{"type":"emoji","name":"smirk"},{"type":"text","text":"). Anyways, until then there is an implementation in the LESbrary.jl:\n\n"},{"type":"link","url":"https://github.com/CliMA/LESbrary.jl/blob/master/src/TurbulenceStatistics/turbulent_kinetic_energy.jl"},{"type":"text","text":"\n\nTo use this you would add "},{"type":"text","text":"LESbrary.jl","style":{"code":true}},{"type":"text","text":" to your environment and then put something like\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using LESbrary.TurbulenceStatistics: TurbulentKineticEnergy\n\ntke = TurbulentKineticEnergy(model)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nwhich you should then be able to use with "},{"type":"text","text":"OutputWriters","style":{"code":true}},{"type":"text","text":" like any other "},{"type":"text","text":"ComputedField","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1614280439.064100","reply_count":10,"reply_users_count":2,"latest_reply":"1614281152.067900","reply_users":["U01E0U2RJJ2","UMZQBQU67"],"subscribed":false},{"client_msg_id":"eb6e212d-5c89-4386-9c1a-8fd5e8c14c63","type":"message","text":"What I have there really is \"kinetic_energy\", and I leave it as the user's job to pass the fluctuations if they want TKE:\n<https://github.com/tomchor/Oceanostics.jl/blob/e3d087f25a717662b00e12c68989f409b471913c/src/TurbulentKineticEnergyTerms.jl#L11-L19>","user":"U01E0U2RJJ2","ts":"1614280606.065300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R33Si","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What I have there really is \"kinetic_energy\", and I leave it as the user's job to pass the fluctuations if they want TKE:\n"},{"type":"link","url":"https://github.com/tomchor/Oceanostics.jl/blob/e3d087f25a717662b00e12c68989f409b471913c/src/TurbulentKineticEnergyTerms.jl#L11-L19"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"},{"client_msg_id":"3e0d7073-7b38-4625-8434-b2ae81550b24","type":"message","text":"So you'd pass as arguments `field_dependencies=(u-U, v-V, w-W)` after properly defining `U, V, W`  as your averages (`W` is almost always zero so I don't even know why I included it)","user":"U01E0U2RJJ2","ts":"1614280688.065500","team":"T68168MUP","edited":{"user":"U01E0U2RJJ2","ts":"1614280701.000000"},"blocks":[{"type":"rich_text","block_id":"jIktY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So you'd pass as arguments "},{"type":"text","text":"field_dependencies=(u-U, v-V, w-W)","style":{"code":true}},{"type":"text","text":" after properly defining "},{"type":"text","text":"U, V, W","style":{"code":true}},{"type":"text","text":"  as your averages ("},{"type":"text","text":"W","style":{"code":true}},{"type":"text","text":" is almost always zero so I don't even know why I included it)"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"},{"client_msg_id":"186cdc7d-e26f-4b4c-b066-de09f08ac800","type":"message","text":"ah interesting. That’s a nice design --- note that `u-U` is actually an `AbstractOperation` rather than a `ComputedField`. But interestingly, the code does the right thing when you call\n\n```uprime = u - U\ncompute!(uprime)```\nsince calling `compute!` on an `AbstractOperation` ends up calling `compute!` recursively on it’s dependencies, thus eventualy calling `compute!(U)` to compute the horizontal average of `u`. So even though its not quite the way it was designed, we got lucky…","user":"UMZQBQU67","ts":"1614280811.066000","team":"T68168MUP","edited":{"user":"UMZQBQU67","ts":"1614281009.000000"},"blocks":[{"type":"rich_text","block_id":"2BMfH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah interesting. That’s a nice design --- note that "},{"type":"text","text":"u-U","style":{"code":true}},{"type":"text","text":" is actually an "},{"type":"text","text":"AbstractOperation","style":{"code":true}},{"type":"text","text":" rather than a "},{"type":"text","text":"ComputedField","style":{"code":true}},{"type":"text","text":". But interestingly, the code does the right thing when you call\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"uprime = u - U\ncompute!(uprime)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"since calling "},{"type":"text","text":"compute!","style":{"code":true}},{"type":"text","text":" on an "},{"type":"text","text":"AbstractOperation","style":{"code":true}},{"type":"text","text":" ends up calling "},{"type":"text","text":"compute!","style":{"code":true}},{"type":"text","text":" recursively on it’s dependencies, thus eventualy calling "},{"type":"text","text":"compute!(U)","style":{"code":true}},{"type":"text","text":" to compute the horizontal average of "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":". So even though its not quite the way it was designed, we got lucky…"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"},{"client_msg_id":"41b02f2c-3ba2-4c81-9421-a128bfa422cd","type":"message","text":"Yup! (To be honest I assumed you designed it that way on purpose after I found out this worked haha, but I'm glad luck was on our side)","user":"U01E0U2RJJ2","ts":"1614280866.066200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=V0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yup! (To be honest I assumed you designed it that way on purpose after I found out this worked haha, but I'm glad luck was on our side)"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"},{"client_msg_id":"ca066e1e-bbef-44bb-9641-b2b0e7d28705","type":"message","text":"It’s clearly pretty convenient (and sometimes cheaper) to use `AbstractOperations` in `field_dependencies` rather than `AbstractField`. So we just need to change the name of `field_dependencies` so stuff like this doesn’t trip people up","user":"UMZQBQU67","ts":"1614280875.066400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fsD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s clearly pretty convenient (and sometimes cheaper) to use "},{"type":"text","text":"AbstractOperations","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"field_dependencies","style":{"code":true}},{"type":"text","text":" rather than "},{"type":"text","text":"AbstractField","style":{"code":true}},{"type":"text","text":". So we just need to change the name of "},{"type":"text","text":"field_dependencies","style":{"code":true}},{"type":"text","text":" so stuff like this doesn’t trip people up"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"},{"client_msg_id":"92651a2d-a263-40ed-825a-81c24712118b","type":"message","text":"I think the basic logic is part of the design (calling `compute!` on something makes it current with a model’s prognostic state); however I just didn’t realize that it would be so useful to put `AbstractOperations` in the list of things that get `compute!`d","user":"UMZQBQU67","ts":"1614280962.066800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/kWQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the basic logic is part of the design (calling "},{"type":"text","text":"compute!","style":{"code":true}},{"type":"text","text":" on something makes it current with a model’s prognostic state); however I just didn’t realize that it would be so useful to put "},{"type":"text","text":"AbstractOperations","style":{"code":true}},{"type":"text","text":" in the list of things that get "},{"type":"text","text":"compute!","style":{"code":true}},{"type":"text","text":"d"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"},{"client_msg_id":"8eaa22da-ab5e-4e4b-84a9-14c8af0f818e","type":"message","text":"Yeah I think we said we'd change it to `computed_dependencies`, right?","user":"U01E0U2RJJ2","ts":"1614281024.067100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XXM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah I think we said we'd change it to "},{"type":"text","text":"computed_dependencies","style":{"code":true}},{"type":"text","text":", right?"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"},{"client_msg_id":"2509bbc8-05aa-4d06-b8ef-0a9faddc1041","type":"message","text":"Yeah","user":"UMZQBQU67","ts":"1614281028.067300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eg/w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"},{"client_msg_id":"bc5c8080-6f27-4b11-898f-7afe716afdba","type":"message","text":"I'll try to do that soon","user":"U01E0U2RJJ2","ts":"1614281056.067700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GenJ2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll try to do that soon"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"},{"client_msg_id":"442819ce-54de-4555-9f08-4d31133c428c","type":"message","text":"No rush of course. Human’s aren’t perfect, and code is even less so…","user":"UMZQBQU67","ts":"1614281152.067900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iQ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No rush of course. Human’s aren’t perfect, and code is even less so…"}]}]}],"thread_ts":"1614280439.064100","parent_user_id":"UMZQBQU67"}]