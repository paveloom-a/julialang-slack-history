[{"type":"message","text":"Hello! I am looking for a nudge in the right direction. I want to run this shallow water model:","files":[{"id":"F01SFQ8S2PM","created":1616696486,"timestamp":1616696486,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UEGRU91B2","editable":false,"size":11702,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01SFQ8S2PM/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01SFQ8S2PM/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01SFQ8S2PM-aeb1de424d/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01SFQ8S2PM-aeb1de424d/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01SFQ8S2PM-aeb1de424d/image_360.png","thumb_360_w":360,"thumb_360_h":121,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01SFQ8S2PM-aeb1de424d/image_160.png","original_w":412,"original_h":138,"thumb_tiny":"AwAQADDSP3hzTc8NzT8DOabg5OAMGgBQenNNH8XNO59sUgB9Bz1oAdRSc5pRnvQB/9k=","permalink":"https://julialang.slack.com/files/UEGRU91B2/F01SFQ8S2PM/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01SFQ8S2PM-95cea8d48d","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"O1lM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello! I am looking for a nudge in the right direction. I want to run this shallow water model:"}]}]}],"user":"UEGRU91B2","display_as_bot":false,"ts":"1616696489.025000","thread_ts":"1616696489.025000","reply_count":21,"reply_users_count":3,"latest_reply":"1616855092.037900","reply_users":["UEGRU91B2","U01FBLBCP7S","UEP056STX"],"is_locked":false,"subscribed":false},{"client_msg_id":"1f59f7cc-103d-443c-ba0a-14de981a72aa","type":"message","text":"The difficult part is that Q is non local: I have a threshold in the h field. When a point gets below the threshold, I force all the points within a given radius of said point with an increase in h, this has also a finite duration.","user":"UEGRU91B2","ts":"1616696611.025300","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1616697237.000000"},"blocks":[{"type":"rich_text","block_id":"RjcDE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The difficult part is that Q is non local: I have a threshold in the h field. When a point gets below the threshold, I force all the points within a given radius of said point with an increase in h, this has also a finite duration."}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"c4a24b4c-f726-4cee-838f-b9910ae3ac35","type":"message","text":"I would like to know how feasible does it sound to implement such a forcing in Oceananigans. I have an implementation in dedalus (python/c) but it is infinitely slow possibily because of my bad python+numba skills, and I’ve been wanting to take oceananigans for a spin","user":"UEGRU91B2","ts":"1616696724.025500","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1616696748.000000"},"blocks":[{"type":"rich_text","block_id":"DItE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would like to know how feasible does it sound to implement such a forcing in Oceananigans. I have an implementation in dedalus (python/c) but it is infinitely slow possibily because of my bad python+numba skills, and I’ve been wanting to take oceananigans for a spin"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"99a7077e-99a8-423f-8262-4de5fb1c97d6","type":"message","text":"There is a shallow water model that you can use but it is hard to say how easy it is for you to use without knowing the particular form for the forcing.  Could you give more details how you set Q in your working code?","user":"U01FBLBCP7S","ts":"1616697295.025900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GO+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is a shallow water model that you can use but it is hard to say how easy it is for you to use without knowing the particular form for the forcing.  Could you give more details how you set Q in your working code?"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"bd420ec8-2a40-44c6-b65f-2891d9bf9cf9","type":"message","text":"For my working code I have two independent fields: one is a bool (is the forcing already triggered?, let’s call it S1) and one is a float (for how long has it been acting? let’s call it S2). So what I do and is killing my performance is something like this:\n```for each grid point a:\n   if below the threshold:\n       check again all the points:\n       if they are within radius r of a &amp;&amp; are not triggered\n          trigger forcing by modifying S1 and S2\napply forcing f(S1,S2)```","user":"UEGRU91B2","ts":"1616697820.026100","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1616698409.000000"},"blocks":[{"type":"rich_text","block_id":"X0E=2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For my working code I have two independent fields: one is a bool (is the forcing already triggered?, let’s call it S1) and one is a float (for how long has it been acting? let’s call it S2). So what I do and is killing my performance is something like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for each grid point a:\n   if below the threshold:\n       check again all the points:\n       if they are within radius r of a && are not triggered\n          trigger forcing by modifying S1 and S2\napply forcing f(S1,S2)"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"54bbf418-5dd0-4420-8d2a-8b6fd4639a61","type":"message","text":"Sounds like in Oceananigans I could use two tracers for S1 and S2, is that correct? Can the tracers be excempt from dynamics (I don’t want these fields to be transported for example)","user":"UEGRU91B2","ts":"1616698225.026500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"plY=g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sounds like in Oceananigans I could use two tracers for S1 and S2, is that correct? Can the tracers be excempt from dynamics (I don’t want these fields to be transported for example)"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"c4fc11f7-c3b5-4996-8421-ed780230685a","type":"message","text":"It should be possible to include as many tracers as you want.  Tracers aren't there yet but I hope to have them there by Monday, so this is good incentive","user":"U01FBLBCP7S","ts":"1616699314.026900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mRzFr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It should be possible to include as many tracers as you want.  Tracers aren't there yet but I hope to have them there by Monday, so this is good incentive"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"19fed636-e5eb-4a70-9b55-24b2973eb983","type":"message","text":"I can't speak much to how easy/difficult it is to do that particular forcing in Julia.  Maybe someone else has thoughts on that?","user":"U01FBLBCP7S","ts":"1616699339.027100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S7S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can't speak much to how easy/difficult it is to do that particular forcing in Julia.  Maybe someone else has thoughts on that?"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"07e4783b-dd44-441e-ad49-59d47aaff5bf","type":"message","text":"I’m doing some experiments to familiarize myself with the grids used in Oceananigans.jl and see if I can come up with a good way thanks Francis!","user":"UEGRU91B2","ts":"1616699520.027300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NgP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m doing some experiments to familiarize myself with the grids used in Oceananigans.jl and see if I can come up with a good way thanks Francis!"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"15384487-dc97-4955-bde0-9d301d84e23b","type":"message","text":"If you don't want S1 and S2 to be advected like a tracer then I might keep them as just arrays.","user":"UEP056STX","ts":"1616699948.027500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hAK7B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you don't want S1 and S2 to be advected like a tracer then I might keep them as just arrays."}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"226a1a24-af99-49ff-bdec-dfc8be339057","type":"message","text":"Do you need to compute derivatives/gradients of S1 and S2? If not, then you can get away with arrays pretty easily. Oceananigans `Field`s would be helpful if you need to take derivatives, compute terms like u*Q, etc.","user":"UEP056STX","ts":"1616699984.027700","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1616700514.000000"},"blocks":[{"type":"rich_text","block_id":"LvfVF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you need to compute derivatives/gradients of S1 and S2? If not, then you can get away with arrays pretty easily. Oceananigans "},{"type":"text","text":"Field","style":{"code":true}},{"type":"text","text":"s would be helpful if you need to take derivatives, compute terms like u*Q, etc."}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"fb2656c8-78be-46c8-8fa2-d7e0a08772d2","type":"message","text":"In your pseudo-code is Q(x, y, t) = f(S1, S2)?","user":"UEP056STX","ts":"1616700012.027900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TJoJW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In your pseudo-code is Q(x, y, t) = f(S1, S2)?"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"15852a3a-91dd-4fb4-b03a-b54b34f878b4","type":"message","text":"I'm guessing a naive implementation of Q(x, y, t) should be faster in Julia but your pseudo-code seems to have a pretty bad \"worst case scenario\" if implemented naively? If each grid point is below the threshold then it sounds like you check all the points for each grid point, i.e. for an NxN grid you'll perform N^4 checks in the worst case, is this correct?","user":"UEP056STX","ts":"1616700208.028100","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1616700535.000000"},"blocks":[{"type":"rich_text","block_id":"u=eE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm guessing a naive implementation of Q(x, y, t) should be faster in Julia but your pseudo-code seems to have a pretty bad \"worst case scenario\" if implemented naively? If each grid point is below the threshold then it sounds like you check all the points for each grid point, i.e. for an NxN grid you'll perform N^4 checks in the worst case, is this correct?"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"de7622ce-e4d4-4f28-a92d-d551ae73cafe","type":"message","text":"Also, in case you haven't seen it, <@U01FBLBCP7S> recently added a great shallow water example: <https://clima.github.io/OceananigansDocumentation/stable/generated/shallow_water_Bickley_jet/>","user":"UEP056STX","ts":"1616700322.028300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/9tk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, in case you haven't seen it, "},{"type":"user","user_id":"U01FBLBCP7S"},{"type":"text","text":" recently added a great shallow water example: "},{"type":"link","url":"https://clima.github.io/OceananigansDocumentation/stable/generated/shallow_water_Bickley_jet/"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"980cf8ff-d050-44b1-bbb1-2f2b36cdb153","type":"message","text":"Hi Ali, thanks for the insight. I am working with said example.\n1.- Yes, it is Q(x, y, t) = f(S1, S2)\n2.- Yes, that is the worst case scenario in the current implementation. Ideally I would like to iterate only on the points close the the current examined one. However, because the code is pseudoespectral, the grid in which I get the data to work with is not uniform rectangular, so I have not been able to know a priori how many indices to explore for a given point.\n3.- I have the feeling that with a little bit of tought, this problem may be suited for a good speedup with a gpu-based approach","user":"UEGRU91B2","ts":"1616775679.035900","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1616775859.000000"},"blocks":[{"type":"rich_text","block_id":"6tG9v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi Ali, thanks for the insight. I am working with said example.\n1.- Yes, it is Q(x, y, t) = f(S1, S2)\n2.- Yes, that is the worst case scenario in the current implementation. Ideally I would like to iterate only on the points close the the current examined one. However, because the code is pseudoespectral, the grid in which I get the data to work with is not uniform rectangular, so I have not been able to know a priori how many indices to explore for a given point.\n3.- I have the feeling that with a little bit of tought, this problem may be suited for a good speedup with a gpu-based approach"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"586f26e3-0cb7-42db-85ef-39e8bc9bab5c","type":"message","text":"<@UEGRU91B2> Ah true that would be tough with a pseudospectral code. With finite volume you should be able to easily check the closest N grid points.","user":"UEP056STX","ts":"1616854624.036500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CvTpJ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UEGRU91B2"},{"type":"text","text":" Ah true that would be tough with a pseudospectral code. With finite volume you should be able to easily check the closest N grid points."}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"eadf8b9c-101d-4e2c-9c99-e9c05bfc7859","type":"message","text":"With Oceananigans you probably noticed that you usually specify forcing functions as functions of `(x, y, z, t)` which can have `if` statements and whatever you want but it's cleanest when the forcing is local.","user":"UEP056STX","ts":"1616854690.036700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JkJDL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With Oceananigans you probably noticed that you usually specify forcing functions as functions of "},{"type":"text","text":"(x, y, z, t)","style":{"code":true}},{"type":"text","text":" which can have "},{"type":"text","text":"if","style":{"code":true}},{"type":"text","text":" statements and whatever you want but it's cleanest when the forcing is local."}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"d6c8be5f-bb19-4ffc-93bd-562f7703f776","type":"message","text":"In your case I'm guessing you'll probably want to define the forcing discretely for a grid point `[i, j, k]` instead of a continuous `(x, y, z, t)`.","user":"UEP056STX","ts":"1616854744.036900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FAtbM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In your case I'm guessing you'll probably want to define the forcing discretely for a grid point "},{"type":"text","text":"[i, j, k]","style":{"code":true}},{"type":"text","text":" instead of a continuous "},{"type":"text","text":"(x, y, z, t)","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"d02c7d91-b80d-4dbe-96b3-1e5a7a34805b","type":"message","text":"Then at the end of each time step you can compute the array `Q[i, j, k]` with the forcing function being something like\n```h_forcing(i, j, k, args...) = Q[i, j, k]```","user":"UEP056STX","ts":"1616854858.037100","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1616854903.000000"},"blocks":[{"type":"rich_text","block_id":"trha","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Then at the end of each time step you can compute the array "},{"type":"text","text":"Q[i, j, k]","style":{"code":true}},{"type":"text","text":" with the forcing function being something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"h_forcing(i, j, k, args...) = Q[i, j, k]"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"29fc6696-7b52-40a8-a1fb-4c7730af1838","type":"message","text":"These should be documented as \"discrete form\" forcing functions: <https://clima.github.io/OceananigansDocumentation/stable/model_setup/forcing_functions/#%22Discrete-form%22-forcing-functions>","user":"UEP056STX","ts":"1616854919.037400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2P/Xn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"These should be documented as \"discrete form\" forcing functions: "},{"type":"link","url":"https://clima.github.io/OceananigansDocumentation/stable/model_setup/forcing_functions/#%22Discrete-form%22-forcing-functions"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"aac244d6-b069-4633-811c-a8c36ac3765b","type":"message","text":"This seems straightforward to parallelize in a GPU kernel as one thread can just calculate the forcing for one grid point so you should hopefully be able to make use of GPUs! You may want to use KernelAbstractions.jl to code up the kernel.","user":"UEP056STX","ts":"1616855024.037600","team":"T68168MUP","edited":{"user":"UEP056STX","ts":"1616855051.000000"},"blocks":[{"type":"rich_text","block_id":"P/brx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This seems straightforward to parallelize in a GPU kernel as one thread can just calculate the forcing for one grid point so you should hopefully be able to make use of GPUs! You may want to use KernelAbstractions.jl to code up the kernel."}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"78270850-fb6f-4ed2-885e-240211088b34","type":"message","text":"Out of curiousity how many grid points are you thinking of using?","user":"UEP056STX","ts":"1616855092.037900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ghs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Out of curiousity how many grid points are you thinking of using?"}]}]}],"thread_ts":"1616696489.025000","parent_user_id":"UEGRU91B2"}]