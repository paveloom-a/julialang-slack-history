[{"type":"message","text":"what might be the best way, or any way for now, of finding a specific index corresponding to say the x node that is immediately to the right of a x coordinate point? I could use a `findall` , for instance on a list of xF maybe? But does that indexing  line up with that of the velocities etc? I wasn’t sure with the regions added to the beginning and end of the domain.\nI’m trying to find the “F” node indices that are surrounding an arbitrary triangle point O as described in this picture if that helps any.","files":[{"id":"F01JFSH67QE","created":1610570933,"timestamp":1610570933,"name":"TURBBINS.png","title":"TURBBINS.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01DJ59B2SE","editable":false,"size":118646,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01JFSH67QE/turbbins.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01JFSH67QE/download/turbbins.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01JFSH67QE-03ecbb0c9e/turbbins_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01JFSH67QE-03ecbb0c9e/turbbins_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01JFSH67QE-03ecbb0c9e/turbbins_360.png","thumb_360_w":360,"thumb_360_h":335,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01JFSH67QE-03ecbb0c9e/turbbins_480.png","thumb_480_w":480,"thumb_480_h":447,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01JFSH67QE-03ecbb0c9e/turbbins_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01JFSH67QE-03ecbb0c9e/turbbins_720.png","thumb_720_w":720,"thumb_720_h":670,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01JFSH67QE-03ecbb0c9e/turbbins_800.png","thumb_800_w":800,"thumb_800_h":744,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01JFSH67QE-03ecbb0c9e/turbbins_960.png","thumb_960_w":960,"thumb_960_h":893,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01JFSH67QE-03ecbb0c9e/turbbins_1024.png","thumb_1024_w":1024,"thumb_1024_h":953,"original_w":1094,"original_h":1018,"thumb_tiny":"AwAsADDTpCcd8UtMZwrEE4oAUsQeT7dKN3OM9famk56HPPahCeM55zQA7Jx1GcZ6U6mfw4yelPHSgAqrcf6z8BVqqtxzJ07UAQ49qljlKYByy/XpUeKMUAW0YOny5xj1qQdKoKSuCPSr9ADd/saQsPQ07YKTYKADePSjePQ0bBRsFABvHpQHycYpQgFGB6CgD//Z","permalink":"https://julialang.slack.com/files/U01DJ59B2SE/F01JFSH67QE/turbbins.png","permalink_public":"https://slack-files.com/T68168MUP-F01JFSH67QE-5eb1cd1262","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"ak3b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what might be the best way, or any way for now, of finding a specific index corresponding to say the x node that is immediately to the right of a x coordinate point? I could use a "},{"type":"text","text":"findall","style":{"code":true}},{"type":"text","text":" , for instance on a list of xF maybe? But does that indexing  line up with that of the velocities etc? I wasn’t sure with the regions added to the beginning and end of the domain.\nI’m trying to find the “F” node indices that are surrounding an arbitrary triangle point O as described in this picture if that helps any."}]}]}],"user":"U01DJ59B2SE","display_as_bot":false,"ts":"1610571040.378400","edited":{"user":"U01DJ59B2SE","ts":"1610571142.000000"},"thread_ts":"1610571040.378400","reply_count":1,"reply_users_count":1,"latest_reply":"1610593755.000100","reply_users":["UMZQBQU67"],"subscribed":false},{"client_msg_id":"63b96937-2d0e-46be-af51-691684e6627b","type":"message","text":"`searchsortedfirst` (or its relatives such as `searchsortedlast`) might be what you’re looking for:\n\n```help?&gt; searchsortedfirst\nsearch: searchsortedfirst searchsortedlast searchsorted\n\n  searchsortedfirst(a, x; by=&lt;transform&gt;, lt=&lt;comparison&gt;, rev=false)\n\n  Return the index of the first value in a greater than or equal to x, according to the specified order. Return length(a) + 1 if x\n  is greater than all values in a. a is assumed to be sorted.\n\n  Examples\n  ≡≡≡≡≡≡≡≡≡≡\n\n  julia&gt; searchsortedfirst([1, 2, 4, 5, 5, 7], 4) # single match\n  3\n  \n  julia&gt; searchsortedfirst([1, 2, 4, 5, 5, 7], 5) # multiple matches\n  4\n  \n  julia&gt; searchsortedfirst([1, 2, 4, 5, 5, 7], 3) # no match, insert in the middle\n  3\n  \n  julia&gt; searchsortedfirst([1, 2, 4, 5, 5, 7], 9) # no match, insert at end\n  7\n  \n  julia&gt; searchsortedfirst([1, 2, 4, 5, 5, 7], 0) # no match, insert at start\n  1```\nThe coordinates for each variable type are\n\n• `xC, yC, zC` for tracers\n• `xF, yC, zC` for x-velocity “u”\n• `xC, yF, zC` for y-velocity “v”\n• `xC, yC, zF` for z-velocity “w”","user":"UMZQBQU67","ts":"1610593755.000100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4A=K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"searchsortedfirst","style":{"code":true}},{"type":"text","text":" (or its relatives such as `searchsortedlast`) might be what you’re looking for:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"help?> searchsortedfirst\nsearch: searchsortedfirst searchsortedlast searchsorted\n\n  searchsortedfirst(a, x; by=<transform>, lt=<comparison>, rev=false)\n\n  Return the index of the first value in a greater than or equal to x, according to the specified order. Return length(a) + 1 if x\n  is greater than all values in a. a is assumed to be sorted.\n\n  Examples\n  ≡≡≡≡≡≡≡≡≡≡\n\n  julia> searchsortedfirst([1, 2, 4, 5, 5, 7], 4) # single match\n  3\n  \n  julia> searchsortedfirst([1, 2, 4, 5, 5, 7], 5) # multiple matches\n  4\n  \n  julia> searchsortedfirst([1, 2, 4, 5, 5, 7], 3) # no match, insert in the middle\n  3\n  \n  julia> searchsortedfirst([1, 2, 4, 5, 5, 7], 9) # no match, insert at end\n  7\n  \n  julia> searchsortedfirst([1, 2, 4, 5, 5, 7], 0) # no match, insert at start\n  1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThe coordinates for each variable type are\n\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"xC, yC, zC","style":{"code":true}},{"type":"text","text":" for tracers"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"xF, yC, zC","style":{"code":true}},{"type":"text","text":" for x-velocity “u”"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"xC, yF, zC","style":{"code":true}},{"type":"text","text":" for y-velocity “v”"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"xC, yC, zF","style":{"code":true}},{"type":"text","text":" for z-velocity “w”"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1610571040.378400","parent_user_id":"U01DJ59B2SE"}]