[{"client_msg_id":"a939e681-c5c2-4bbb-aa42-5cd716da5a1a","type":"message","text":"Hi all,\n\nis there anything which would fundamentally prevent to calculate second order gradients with Zygote with custom gradients defined with ChainRulesCore? I had once (month ago) a working system with @adjoint, but I would like to change it to ChainRules, to be in line with community.","user":"U6YRZ18GZ","ts":"1611776359.053400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lx4MF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all,\n\nis there anything which would fundamentally prevent to calculate second order gradients with Zygote with custom gradients defined with ChainRulesCore? I had once (month ago) a working system with @adjoint, but I would like to change it to ChainRules, to be in line with community."}]}]}],"thread_ts":"1611776359.053400","reply_count":8,"reply_users_count":3,"latest_reply":"1611924286.080400","reply_users":["UHDQQ4GN6","U6A936746","U6YRZ18GZ"],"subscribed":false},{"client_msg_id":"5a1b2459-80fc-4962-a2a9-3d5903c9feaf","type":"message","text":"Fundamentally, I don't think so, so long as the `rrule`s don't mutate arrays, but that's the same thing as with `@adjoint`.","user":"UHDQQ4GN6","ts":"1611776435.053500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lVe5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Fundamentally, I don't think so, so long as the "},{"type":"text","text":"rrule","style":{"code":true}},{"type":"text","text":"s don't mutate arrays, but that's the same thing as with "},{"type":"text","text":"@adjoint","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1611776359.053400","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"9cc06f52-4c2f-4f98-aca8-d0918a74337c","type":"message","text":"as long as you don’t need to call back into AD.\n(e.g. for `map`)","user":"U6A936746","ts":"1611776472.053700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"maKf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as long as you don’t need to call back into AD.\n(e.g. for "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":")"}]}]}],"thread_ts":"1611776359.053400","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"19f6d520-b01c-4422-a990-173c95476824","type":"message","text":"Thanks, I was hoping for this answer.","user":"U6YRZ18GZ","ts":"1611776477.053900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NSZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, I was hoping for this answer."}]}]}],"thread_ts":"1611776359.053400","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"2254cd6d-2d4f-44d4-ba0b-5ccfbebac2f6","type":"message","text":"At the moment, I am working on a simple second order gradient of `logitcrossentropy`, and for some reason, it seems to hit different gradient. I assume this to need more understanding the matter on my side (I call it more love)","user":"U6YRZ18GZ","ts":"1611776556.054100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sY3t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"At the moment, I am working on a simple second order gradient of "},{"type":"text","text":"logitcrossentropy","style":{"code":true}},{"type":"text","text":", and for some reason, it seems to hit different gradient. I assume this to need more understanding the matter on my side (I call it more love)"}]}]}],"thread_ts":"1611776359.053400","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"42446d4c-f253-40cf-bbbb-8f93abdae3fc","type":"message","text":"Thanks for confirmation","user":"U6YRZ18GZ","ts":"1611776564.054300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+on0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for confirmation"}]}]}],"thread_ts":"1611776359.053400","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"e86ee960-40db-4111-8221-9904f8ae19d7","type":"message","text":"I don’t know a good way to debug things like that except editting the zygote source to add `Core.println` in various places in `compoliler/chainrules.jl` and `compiler/interface2.jl`\nSometimes adding `@which` also’","user":"U6A936746","ts":"1611776694.054500","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1611776710.000000"},"blocks":[{"type":"rich_text","block_id":"k7FFQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t know a good way to debug things like that except editting the zygote source to add "},{"type":"text","text":"Core.println","style":{"code":true}},{"type":"text","text":" in various places in "},{"type":"text","text":"compoliler/chainrules.jl","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"compiler/interface2.jl","style":{"code":true}},{"type":"text","text":"\nSometimes adding "},{"type":"text","text":"@which","style":{"code":true}},{"type":"text","text":" also’"}]}]}],"thread_ts":"1611776359.053400","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"d6145c18-8788-409d-9de3-127706d24fd5","type":"message","text":"I have on the nailed that. Someone has add mutable version of `∇softmax`  and that killed my gradients, because I have use it in the calculation of gradient of `logsoftmax`","user":"U6YRZ18GZ","ts":"1611924123.080100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yCH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have on the nailed that. Someone has add mutable version of "},{"type":"text","text":"∇softmax","style":{"code":true}},{"type":"text","text":"  and that killed my gradients, because I have use it in the calculation of gradient of "},{"type":"text","text":"logsoftmax","style":{"code":true}}]}]}],"thread_ts":"1611776359.053400","parent_user_id":"U6YRZ18GZ","reactions":[{"name":"+1","users":["U6A936746"],"count":1}]},{"client_msg_id":"8e4ecbcd-e018-41d3-b49c-c5cd284244af","type":"message","text":"I think you have said it before.\nThe lack of mutating support is what is going to kill nested AD more so than any kind of compiler optimization failure.\nsince rules are very often mutating — especially when you are working around lack of mutation support","user":"U6A936746","ts":"1611924286.080400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wqAU5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you have said it before.\nThe lack of mutating support is what is going to kill nested AD more so than any kind of compiler optimization failure.\nsince rules are very often mutating — especially when you are working around lack of mutation support"}]}]}],"thread_ts":"1611776359.053400","parent_user_id":"U6YRZ18GZ"}]