[{"client_msg_id":"05438f24-bfc7-454e-a51f-4b2324f70427","type":"message","text":"If I have something like\n\n```applychain(fs::Tuple, x, p) = applychain(Base.tail(fs), first(fs)(x,p[1:paramlength(first(fs))]), p[(paramlength(first(fs))+1):end])```\nIf I take its pullback (with Zygote) twice, I get:\n```ERROR: Mutating arrays is not supported\nStacktrace:\n [1] (::Zygote.var\"#376#377\")(::Nothing) at /home/guillaume/.julia/packages/Zygote/KpME9/src/lib/array.jl:61\n [2] (::Zygote.var\"#2271#back#378\"{Zygote.var\"#376#377\"})(::Nothing) at /home/guillaume/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:59\n [3] materialize! at ./broadcast.jl:848 [inlined]\n [4] materialize! at ./broadcast.jl:845 [inlined]\n [5] materialize! at ./broadcast.jl:841 [inlined]\n [6] (::typeof(∂(materialize!)))(::Nothing) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [7] #364 at /home/guillaume/.julia/packages/Zygote/KpME9/src/lib/array.jl:42 [inlined]\n [8] (::typeof(∂(λ)))(::Nothing) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [9] #2225#back at /home/guillaume/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:59 [inlined]\n [10] (::typeof(∂(λ)))(::Nothing) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [11] applychain at /home/guillaume/.julia/packages/DiffEqFlux/lS4Sa/src/fast_layers.jl:20 [inlined]\n [12] (::typeof(∂(λ)))(::Tuple{Nothing,Nothing,CuArray{Float32,3},Nothing}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [13] FastChain at /home/guillaume/.julia/packages/DiffEqFlux/lS4Sa/src/fast_layers.jl:21 [inlined]\n [14] (::typeof(∂(λ)))(::Tuple{Nothing,CuArray{Float32,3},Nothing}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [15] #89 at ./REPL[52]:2 [inlined]\n [16] (::typeof(∂(λ)))(::Tuple{Nothing,CuArray{Float32,3}}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [17] #41 at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:40 [inlined]\n [18] (::typeof(∂(λ)))(::Tuple{CuArray{Float32,3}}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [19] ftest2 at ./REPL[52]:3 [inlined]\n [20] (::typeof(∂(ftest2)))(::CuArray{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [21] (::Zygote.var\"#41#42\"{typeof(∂(ftest2))})(::CuArray{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:40\n [22] top-level scope at REPL[54]:1```\nHow do you make things safe of  `ERROR: Mutating arrays is not supported` when differentiating twice ?","user":"UKJSNT1QR","ts":"1615310762.288400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z3it","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I have something like\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"applychain(fs::Tuple, x, p) = applychain(Base.tail(fs), first(fs)(x,p[1:paramlength(first(fs))]), p[(paramlength(first(fs))+1):end])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"If I take its pullback (with Zygote) twice, I get:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: Mutating arrays is not supported\nStacktrace:\n [1] (::Zygote.var\"#376#377\")(::Nothing) at /home/guillaume/.julia/packages/Zygote/KpME9/src/lib/array.jl:61\n [2] (::Zygote.var\"#2271#back#378\"{Zygote.var\"#376#377\"})(::Nothing) at /home/guillaume/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:59\n [3] materialize! at ./broadcast.jl:848 [inlined]\n [4] materialize! at ./broadcast.jl:845 [inlined]\n [5] materialize! at ./broadcast.jl:841 [inlined]\n [6] (::typeof(∂(materialize!)))(::Nothing) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [7] #364 at /home/guillaume/.julia/packages/Zygote/KpME9/src/lib/array.jl:42 [inlined]\n [8] (::typeof(∂(λ)))(::Nothing) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [9] #2225#back at /home/guillaume/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:59 [inlined]\n [10] (::typeof(∂(λ)))(::Nothing) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [11] applychain at /home/guillaume/.julia/packages/DiffEqFlux/lS4Sa/src/fast_layers.jl:20 [inlined]\n [12] (::typeof(∂(λ)))(::Tuple{Nothing,Nothing,CuArray{Float32,3},Nothing}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [13] FastChain at /home/guillaume/.julia/packages/DiffEqFlux/lS4Sa/src/fast_layers.jl:21 [inlined]\n [14] (::typeof(∂(λ)))(::Tuple{Nothing,CuArray{Float32,3},Nothing}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [15] #89 at ./REPL[52]:2 [inlined]\n [16] (::typeof(∂(λ)))(::Tuple{Nothing,CuArray{Float32,3}}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [17] #41 at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:40 [inlined]\n [18] (::typeof(∂(λ)))(::Tuple{CuArray{Float32,3}}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [19] ftest2 at ./REPL[52]:3 [inlined]\n [20] (::typeof(∂(ftest2)))(::CuArray{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [21] (::Zygote.var\"#41#42\"{typeof(∂(ftest2))})(::CuArray{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:40\n [22] top-level scope at REPL[54]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"How do you make things safe of  "},{"type":"text","text":"ERROR: Mutating arrays is not supported","style":{"code":true}},{"type":"text","text":" when differentiating twice ?"}]}]}],"thread_ts":"1615310762.288400","reply_count":15,"reply_users_count":3,"latest_reply":"1615395766.301900","reply_users":["U6A936746","U6YRZ18GZ","UKJSNT1QR"],"subscribed":false},{"client_msg_id":"63ba02fe-fb87-4fb3-b22b-a7e489cf953b","type":"message","text":"<@U6YRZ18GZ> can probably speak on this.\nI think answer is : suffering:","user":"U6A936746","ts":"1615318845.288800","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1615318870.000000"},"blocks":[{"type":"rich_text","block_id":"XY8GY","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6YRZ18GZ"},{"type":"text","text":" can probably speak on this.\nI think answer is : suffering:"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"0c80685b-7dd0-4cd5-8441-6762e965cd16","type":"message","text":"Are you differentiating through broadcasting?","user":"U6YRZ18GZ","ts":"1615318947.289100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TDX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you differentiating through broadcasting?"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"c23fb6fc-417d-4b46-9f62-1f9edb62e839","type":"message","text":"I have not tried 2nd order on GPU (yet).","user":"U6YRZ18GZ","ts":"1615319000.289300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rtv2k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have not tried 2nd order on GPU (yet)."}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"47566c3f-7a93-4f89-802a-51a48b19fa36","type":"message","text":"OK, it is surely because of the broadcasting. Zygote will fail, because of `materialize!` uses mutation.","user":"U6YRZ18GZ","ts":"1615319100.289500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IWI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, it is surely because of the broadcasting. Zygote will fail, because of "},{"type":"text","text":"materialize!","style":{"code":true}},{"type":"text","text":" uses mutation."}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"56c5bd17-bb83-4f7c-943c-485b55207feb","type":"message","text":"I'm not explicitly broadcasting anything I think, so the broadcast must be in the generated pullback.\n\nI just try to get the second derivative in p of FastChain((x,p) -&gt; p)","user":"UKJSNT1QR","ts":"1615328567.289900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KP7RT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not explicitly broadcasting anything I think, so the broadcast must be in the generated pullback.\n\nI just try to get the second derivative in p of FastChain((x,p) -> p)"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"9ed81f18-fc81-4c30-87ab-42c30efb4e3e","type":"message","text":"Can you post a MWE? I have never used FastChain","user":"U6YRZ18GZ","ts":"1615359822.296200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vK4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you post a MWE? I have never used FastChain"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"254fee06-488d-4b4c-af5a-fc2f148708ec","type":"message","text":"<https://gist.github.com/aussetg/834c7146b255d4924f931a0d50a60806>\n\nFastChain is just like Chain except it takes the parameters excplicitly.","user":"UKJSNT1QR","ts":"1615367884.296400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8Fo","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://gist.github.com/aussetg/834c7146b255d4924f931a0d50a60806"},{"type":"text","text":"\n\nFastChain is just like Chain except it takes the parameters excplicitly."}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"49648b17-5bc6-47cb-a7ac-5876b179c2b6","type":"message","text":"It's defined here: <https://github.com/SciML/DiffEqFlux.jl/blob/d811f89d388e2d8fd876b023a6b18c658abca741/src/fast_layers.jl#L7-L23>\n\nit's fairly simple","user":"UKJSNT1QR","ts":"1615367930.296600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y4br","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's defined here: "},{"type":"link","url":"https://github.com/SciML/DiffEqFlux.jl/blob/d811f89d388e2d8fd876b023a6b18c658abca741/src/fast_layers.jl#L7-L23"},{"type":"text","text":"\n\nit's fairly simple"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"4a8d59ca-1283-423e-8844-286ba8c9863a","type":"message","text":"I'm not sure it's correct because I did that at 1am and I don't remember why but I've rewritten applychain like that:\n\n```split_at(p, idx) = view(p, 1:idx), view(p, (idx+1):lastindex(p))\nZygote.@adjoint function split_at(p, idx)\n    p₁, p₂ = view(p, 1:idx), view(p, (idx+1):lastindex(p))\n    (p₁, p₂), Δ -&gt; (vcat(Δ...), length(Δ[1]))\nend\n\nfunction DiffEqFlux.applychain(fs::Tuple, x, p)\n    idx = @Zygote.ignore DiffEqFlux.paramlength(first(fs))\n    p₁, p₂ = split_at(p, idx)\n    DiffEqFlux.applychain(Base.tail(fs), first(fs)(x, p₁), p₂)\nend\n(c::DiffEqFlux.FastChain)(x,p) = DiffEqFlux.applychain(c.layers, x, p)```\nand it runs :slightly_smiling_face: Still crashes on the GPU but for different reasons now haha `ERROR: CuArray does not yet support union bits types`","user":"UKJSNT1QR","ts":"1615368483.296800","team":"T68168MUP","edited":{"user":"UKJSNT1QR","ts":"1615368830.000000"},"blocks":[{"type":"rich_text","block_id":"k16W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure it's correct because I did that at 1am and I don't remember why but I've rewritten applychain like that:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"split_at(p, idx) = view(p, 1:idx), view(p, (idx+1):lastindex(p))\nZygote.@adjoint function split_at(p, idx)\n    p₁, p₂ = view(p, 1:idx), view(p, (idx+1):lastindex(p))\n    (p₁, p₂), Δ -> (vcat(Δ...), length(Δ[1]))\nend\n\nfunction DiffEqFlux.applychain(fs::Tuple, x, p)\n    idx = @Zygote.ignore DiffEqFlux.paramlength(first(fs))\n    p₁, p₂ = split_at(p, idx)\n    DiffEqFlux.applychain(Base.tail(fs), first(fs)(x, p₁), p₂)\nend\n(c::DiffEqFlux.FastChain)(x,p) = DiffEqFlux.applychain(c.layers, x, p)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nand it runs "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" Still crashes on the GPU but for different reasons now haha "},{"type":"text","text":"ERROR: CuArray does not yet support union bits types","style":{"code":true}}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"8696c9ec-011b-48e7-a967-402725df62b9","type":"message","text":"I would peel off and write it explicitly without applychain. The second order will be differentiating `view` gradient","user":"U6YRZ18GZ","ts":"1615373468.297400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4zjc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would peel off and write it explicitly without applychain. The second order will be differentiating `view` gradient"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"a582baa9-8128-49b3-ab14-24800bd8d2af","type":"message","text":"You know, start with simple and gradually add complexity","user":"U6YRZ18GZ","ts":"1615373490.297600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kY0m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You know, start with simple and gradually add complexity"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"c04e3f62-23e5-4be9-bf65-1d16b42ce71e","type":"message","text":"What do you mean write it without applychain ? (applychain the thing I want to be twice differentiable).\n\nViews are problematic ? Are copies better?","user":"UKJSNT1QR","ts":"1615383982.298200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5LJs5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean write it without applychain ? (applychain the thing I want to be twice differentiable).\n\nViews are problematic ? Are copies better?"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"9c0767b0-6846-4e6f-b7e0-783b827fa75a","type":"message","text":"there were some isssues with views in AD","user":"U6YRZ18GZ","ts":"1615390083.301300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=JW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there were some isssues with views in AD"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"2f9e8ef6-0182-4c44-8de0-fe3af487c421","type":"message","text":"Ok I'll be careful. Quite a few oddities. I litteraly just found that if my code includes : `u[1:1, :]` it doesn't work\n\n```ERROR: DimensionMismatch(\"array could not be broadcast to match destination\")\nStacktrace:\n [1] check_broadcast_shape(::Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}, ::Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}) at ./broadcast.jl:520\n [2] check_broadcast_axes at ./broadcast.jl:523 [inlined]\n [3] check_broadcast_axes at ./broadcast.jl:527 [inlined]\n [4] instantiate at ./broadcast.jl:269 [inlined]\n [5] materialize! at ./broadcast.jl:848 [inlined]\n [6] materialize! at ./broadcast.jl:845 [inlined]\n [7] (::Zygote.var\"#364#366\"{Array{Float32,2},Tuple{UnitRange{Int64},Colon}})(::Array{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/lib/array.jl:42\n [8] (::Zygote.var\"#2225#back#360\"{Zygote.var\"#364#366\"{Array{Float32,2},Tuple{UnitRange{Int64},Colon}}})(::Array{Float32,3}) at /home/guillaume/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:59\n [9] ftest at ./REPL[115]:2 [inlined]\n [10] (::typeof(∂(ftest)))(::Array{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [11] (::Zygote.var\"#41#42\"{typeof(∂(ftest))})(::Array{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:40\n [12] top-level scope at REPL[117]:1```\nbut if I replace it with `reshape(u[1, :], 1, size(u, 2))` it works.\n\nIs it related ?","user":"UKJSNT1QR","ts":"1615390475.301600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7mY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok I'll be careful. Quite a few oddities. I litteraly just found that if my code includes : "},{"type":"text","text":"u[1:1, :]","style":{"code":true}},{"type":"text","text":" it doesn't work\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: DimensionMismatch(\"array could not be broadcast to match destination\")\nStacktrace:\n [1] check_broadcast_shape(::Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}, ::Tuple{Base.OneTo{Int64},Base.OneTo{Int64},Base.OneTo{Int64}}) at ./broadcast.jl:520\n [2] check_broadcast_axes at ./broadcast.jl:523 [inlined]\n [3] check_broadcast_axes at ./broadcast.jl:527 [inlined]\n [4] instantiate at ./broadcast.jl:269 [inlined]\n [5] materialize! at ./broadcast.jl:848 [inlined]\n [6] materialize! at ./broadcast.jl:845 [inlined]\n [7] (::Zygote.var\"#364#366\"{Array{Float32,2},Tuple{UnitRange{Int64},Colon}})(::Array{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/lib/array.jl:42\n [8] (::Zygote.var\"#2225#back#360\"{Zygote.var\"#364#366\"{Array{Float32,2},Tuple{UnitRange{Int64},Colon}}})(::Array{Float32,3}) at /home/guillaume/.julia/packages/ZygoteRules/OjfTt/src/adjoint.jl:59\n [9] ftest at ./REPL[115]:2 [inlined]\n [10] (::typeof(∂(ftest)))(::Array{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n [11] (::Zygote.var\"#41#42\"{typeof(∂(ftest))})(::Array{Float32,3}) at /home/guillaume/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:40\n [12] top-level scope at REPL[117]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but if I replace it with "},{"type":"text","text":"reshape(u[1, :], 1, size(u, 2))","style":{"code":true}},{"type":"text","text":" it works.\n\nIs it related ?"}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"},{"client_msg_id":"fc6236c8-6f12-4d14-be3e-461f1e55f434","type":"message","text":"Or maybe not. Worked once and never again, what the hell.","user":"UKJSNT1QR","ts":"1615395766.301900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UC4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or maybe not. Worked once and never again, what the hell."}]}]}],"thread_ts":"1615310762.288400","parent_user_id":"UKJSNT1QR"}]