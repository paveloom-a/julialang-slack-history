[{"client_msg_id":"dd754c14-a95b-4b58-8db7-53ec1b140c2e","type":"message","text":"I guess if the julia compiler can allow custom optimization pass enabled under a certain context, we will be able to implement a better version of `AutoPreallocation` which does not have typeinf issue. I know <@UKA81L34J> wrote a GPUCompiler style Cassette recently, perhaps this would be a good use case to try.","user":"UC6SUUPRC","ts":"1610910288.059500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g/ei","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess if the julia compiler can allow custom optimization pass enabled under a certain context, we will be able to implement a better version of "},{"type":"text","text":"AutoPreallocation","style":{"code":true}},{"type":"text","text":" which does not have typeinf issue. I know "},{"type":"user","user_id":"UKA81L34J"},{"type":"text","text":" wrote a GPUCompiler style Cassette recently, perhaps this would be a good use case to try."}]}]}],"thread_ts":"1610910288.059500","reply_count":1,"reply_users_count":1,"latest_reply":"1610964968.094800","reply_users":["UAJH2818E"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"with v1.6 it should be possible to rewrite `AutoPreallocation` using AbstractInterpreter, so at the same layer of Diffractor, and avoid the performance gotchas of the current version, right?","user":"UAJH2818E","ts":"1610964968.094800","thread_ts":"1610910288.059500","root":{"client_msg_id":"dd754c14-a95b-4b58-8db7-53ec1b140c2e","type":"message","text":"I guess if the julia compiler can allow custom optimization pass enabled under a certain context, we will be able to implement a better version of `AutoPreallocation` which does not have typeinf issue. I know <@UKA81L34J> wrote a GPUCompiler style Cassette recently, perhaps this would be a good use case to try.","user":"UC6SUUPRC","ts":"1610910288.059500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g/ei","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess if the julia compiler can allow custom optimization pass enabled under a certain context, we will be able to implement a better version of "},{"type":"text","text":"AutoPreallocation","style":{"code":true}},{"type":"text","text":" which does not have typeinf issue. I know "},{"type":"user","user_id":"UKA81L34J"},{"type":"text","text":" wrote a GPUCompiler style Cassette recently, perhaps this would be a good use case to try."}]}]}],"thread_ts":"1610910288.059500","reply_count":1,"reply_users_count":1,"latest_reply":"1610964968.094800","reply_users":["UAJH2818E"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"mTcpw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with v1.6 it should be possible to rewrite "},{"type":"text","text":"AutoPreallocation","style":{"code":true}},{"type":"text","text":" using AbstractInterpreter, so at the same layer of Diffractor, and avoid the performance gotchas of the current version, right?"}]}]}],"client_msg_id":"836281e4-2819-46bf-b6ca-d85081cc5c59","reactions":[{"name":"crossed_fingers","users":["U6PQP41C3","UKG4WF8PJ"],"count":2}]}]