[{"client_msg_id":"6216b75b-447e-4af7-8507-b26d023c55ca","type":"message","text":"If I'm implementing an `rrule` in a package, and it internally calls an `rrule` defined in ChainRules, what's the recommended way to handle that? 1) assume any sane user (e.g an AD package) who calls the `rrule` will also load ChainRules 2) instead of just using ChainRulesCore, use Requires to load ChainRules. Leaning towards (1).","user":"UHDQQ4GN6","ts":"1608721456.259300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P1F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I'm implementing an "},{"type":"text","text":"rrule","style":{"code":true}},{"type":"text","text":" in a package, and it internally calls an "},{"type":"text","text":"rrule","style":{"code":true}},{"type":"text","text":" defined in ChainRules, what's the recommended way to handle that? 1) assume any sane user (e.g an AD package) who calls the "},{"type":"text","text":"rrule","style":{"code":true}},{"type":"text","text":" will also load ChainRules 2) instead of just using ChainRulesCore, use Requires to load ChainRules. Leaning towards (1)."}]}]}],"thread_ts":"1608721456.259300","reply_count":12,"reply_users_count":3,"latest_reply":"1608771142.269000","reply_users":["U6A936746","UHDQQ4GN6","U82RE6STE"],"subscribed":false},{"client_msg_id":"cb4cc36c-da86-4bdb-b663-018045825dd6","type":"message","text":"I say 3) just directly depend on and load ChainRules.\nUser is going to be loading it anyway regardless almost always when using this package.\nCheck how much it adds to you load time if you are worried.\n\nNote that 2.) does nothing","user":"U6A936746","ts":"1608724962.260800","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1608724968.000000"},"blocks":[{"type":"rich_text","block_id":"8/oeK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I say 3) just directly depend on and load ChainRules.\nUser is going to be loading it anyway regardless almost always when using this package.\nCheck how much it adds to you load time if you are worried.\n\nNote that 2.) does nothing"}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6","reactions":[{"name":"julia-plus-one","users":["U82RE6STE","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"9db5bec7-306d-4a88-b80c-a872767db41a","type":"message","text":"The package does a lot more than define the rrule though, and users may not necessarily want to do AD. Adding ChainRules as a dependency makes it less lightweight. I don't see how 2) does nothing. It avoids defining the rrule unless we know we already have access to the one defined by ChainRules.","user":"UHDQQ4GN6","ts":"1608726443.261200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Z2n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The package does a lot more than define the rrule though, and users may not necessarily want to do AD. Adding ChainRules as a dependency makes it less lightweight. I don't see how 2) does nothing. It avoids defining the rrule unless we know we already have access to the one defined by ChainRules."}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"486f7955-19aa-4d87-b471-afccca10e94e","type":"message","text":"Oh as in putting the `rrule` behind the `@require`\nYeah that could work","user":"U6A936746","ts":"1608727207.261400","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1608727249.000000"},"blocks":[{"type":"rich_text","block_id":"bWlY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh as in putting the "},{"type":"text","text":"rrule","style":{"code":true}},{"type":"text","text":" behind the "},{"type":"text","text":"@require","style":{"code":true}},{"type":"text","text":"\nYeah that could work"}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"d24de52c-65f5-4f32-b05d-925f09d62bc0","type":"message","text":"ChainRules is not super-heavy though, do time it before adding complexity/possiblity of failure.","user":"U6A936746","ts":"1608727274.261700","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1608727350.000000"},"blocks":[{"type":"rich_text","block_id":"aJv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ChainRules is not super-heavy though, do time it before adding complexity/possiblity of failure."}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"a0e79e87-adf6-47dd-8760-8f0f6ab8c65f","type":"message","text":"I guess with option 1 you can detect is the `rrule` you need isn't defined and if it isn't give a good error","user":"U6A936746","ts":"1608727393.262100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hWpn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess with option 1 you can detect is the "},{"type":"text","text":"rrule","style":{"code":true}},{"type":"text","text":" you need isn't defined and if it isn't give a good error"}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"add93a7d-efaf-42c7-9b83-d3e63dde0e66","type":"message","text":"the paradox here is that CRCore was defined to avoid importing CR itself","user":"U82RE6STE","ts":"1608738486.266700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nbpNC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the paradox here is that CRCore was defined to avoid importing CR itself"}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"b0793d9b-2304-480b-a8f2-200a1102da0e","type":"message","text":"so if we end up needing ChainRules everytime we want to compose rules, the purpose is defeated","user":"U82RE6STE","ts":"1608738513.266900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wXHc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so if we end up needing ChainRules everytime we want to compose rules, the purpose is defeated"}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"e737d7c3-ed89-4b59-8813-481f94dbe36d","type":"message","text":"Composing rules is pretty unusual.\nbut once we have <https://github.com/JuliaDiff/ChainRulesCore.jl/issues/68>\nit will be possible to do without having to load ChainRules anyway.","user":"U6A936746","ts":"1608738802.267100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mc24x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Composing rules is pretty unusual.\nbut once we have "},{"type":"link","url":"https://github.com/JuliaDiff/ChainRulesCore.jl/issues/68"},{"type":"text","text":"\nit will be possible to do without having to load ChainRules anyway."}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6","reactions":[{"name":"eyes","users":["U82RE6STE","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"d5d5fe70-d907-4226-a169-8ad17c0e7647","type":"message","text":"Yeah I'm really looking forward to that.","user":"UHDQQ4GN6","ts":"1608764529.268200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S0JJk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah I'm really looking forward to that."}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"e8c857c7-24bd-4bfd-949d-b35b517b4586","type":"message","text":"I don't think composing rules is unusual at all though. It happens any time you implement a rule for a function that contains some subfunction for which a rule already exists. For me that was quite common, especially when trying to cover up mutation.","user":"UHDQQ4GN6","ts":"1608764617.268400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5j9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think composing rules is unusual at all though. It happens any time you implement a rule for a function that contains some subfunction for which a rule already exists. For me that was quite common, especially when trying to cover up mutation."}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6","reactions":[{"name":"100","users":["U82RE6STE"],"count":1},{"name":"true","users":["U6A936746"],"count":1}]},{"client_msg_id":"37a3b620-8081-485c-aed6-84e12f559da3","type":"message","text":"Yup, I was thinking of it because I might need the norm rule for instance","user":"U82RE6STE","ts":"1608765471.268700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1k5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yup, I was thinking of it because I might need the norm rule for instance"}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6","reactions":[{"name":"+1","users":["UHDQQ4GN6"],"count":1}]},{"client_msg_id":"7fc62bfc-e234-4809-9db3-f8c8a8b75570","type":"message","text":"&gt;  Yeah I’m really looking forward to that.\nIts the big ticket item that we need for 1.0\nThere are a few other things, but it is the only one (other than renaming things) that has a decent chance of being breaking,\nand it’s the last thing we need to be able to represent everything.\n\n(Well its not quite the last for mutability, but those missing bits would be nonbreaking features)","user":"U6A936746","ts":"1608771142.269000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vOV","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" Yeah I’m really looking forward to that."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIts the big ticket item that we need for 1.0\nThere are a few other things, but it is the only one (other than renaming things) that has a decent chance of being breaking,\nand it’s the last thing we need to be able to represent everything.\n\n(Well its not quite the last for mutability, but those missing bits would be nonbreaking features)"}]}]}],"thread_ts":"1608721456.259300","parent_user_id":"UHDQQ4GN6"}]