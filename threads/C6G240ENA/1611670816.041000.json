[{"client_msg_id":"5e1c8183-d2b3-4e37-8995-62d94773f134","type":"message","text":"<@UHDQQ4GN6> re:\nAD’ing though `sin`  (without a custom rule) will\n&gt;  … will incur something that looks a lot like truncation error (in apparent violation of Griewank and Walther’s 0th Rule of AD).\nIt is because lets say `sin` is implemented as a polynomial with 7 terms (plus some branches etc).\nIt’s derivative will be a polynomial with only 6 terms.\nWhich sure does look (at least superficially) like truncation error.\nThe function one gets out of ADing the `sin` implementation is less accurate than `cos` (which would in this example be a 7 term polynomial)\n\nGriewank and Walther’s 0th Rule of AD is “AD does not incur truncation errors”","user":"U6A936746","ts":"1611670816.041000","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1611670833.000000"},"blocks":[{"type":"rich_text","block_id":"5k4","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UHDQQ4GN6"},{"type":"text","text":" re:\nAD’ing though "},{"type":"text","text":"sin","style":{"code":true}},{"type":"text","text":"  (without a custom rule) will\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":" … will incur something that looks a lot like truncation error (in apparent violation of Griewank and Walther’s 0th Rule of AD)."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIt is because lets say "},{"type":"text","text":"sin","style":{"code":true}},{"type":"text","text":" is implemented as a polynomial with 7 terms (plus some branches etc).\nIt’s derivative will be a polynomial with only 6 terms.\nWhich sure does look (at least superficially) like truncation error.\nThe function one gets out of ADing the "},{"type":"text","text":"sin","style":{"code":true}},{"type":"text","text":" implementation is less accurate than "},{"type":"text","text":"cos","style":{"code":true}},{"type":"text","text":" (which would in this example be a 7 term polynomial)\n\nGriewank and Walther’s 0th Rule of AD is “AD does not incur truncation errors”"}]}]}],"thread_ts":"1611670816.041000","reply_count":1,"reply_users_count":1,"latest_reply":"1611671660.042100","reply_users":["UM30MT6RF"],"subscribed":false,"reactions":[{"name":"+1","users":["U67G3QRJM","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"1e8477dd-15a1-4598-848d-8e9349b6a578","type":"message","text":"It shouldn't be a problem with the `sin` implementation, but with `sinpi` you will run into problems at `x = 0` (or any whole number for that matter): <https://github.com/JuliaLang/julia/blob/a7848a28e5d450dcc48ef99320d3220618dba501/base/special/trig.jl#L762|https://github.com/JuliaLang/julia/blob/a7848a28e5d450dcc48ef99320d3220618dba501/base/special/trig.jl#L762>","user":"UM30MT6RF","ts":"1611671660.042100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TMh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It shouldn't be a problem with the "},{"type":"text","text":"sin","style":{"code":true}},{"type":"text","text":" implementation, but with "},{"type":"text","text":"sinpi","style":{"code":true}},{"type":"text","text":" you will run into problems at "},{"type":"text","text":"x = 0","style":{"code":true}},{"type":"text","text":" (or any whole number for that matter): "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/a7848a28e5d450dcc48ef99320d3220618dba501/base/special/trig.jl#L762","text":"https://github.com/JuliaLang/julia/blob/a7848a28e5d450dcc48ef99320d3220618dba501/base/special/trig.jl#L762"}]}]}],"thread_ts":"1611670816.041000","parent_user_id":"U6A936746"}]