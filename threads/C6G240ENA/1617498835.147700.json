[{"client_msg_id":"fd4de312-3877-4664-80d1-c3b652973c45","type":"message","text":"I’m running into trouble defining chain rules for constructors in my package-\n```abstract type AT end\nstruct S1 &lt;: AT \n    x::Vector{Float64}\nend\nstruct S2 &lt;: AT\n    x::Vector{Float64}\nend\n\nrrule(::typeof(S1), x::AbstractVector{Float64})\n# the method for S2 overwrites S1\nrrule(::typeof(S2), x::AbstractVector{Float64})```\nthis seems to happen because `typeof(S1)` and `typeof(S2)` are both `UnionAll` and the call signature is the same. Is there a different way to write rules for constructors that avoids this problem?","user":"UN97XTLCV","ts":"1617498835.147700","team":"T68168MUP","edited":{"user":"UN97XTLCV","ts":"1617498988.000000"},"blocks":[{"type":"rich_text","block_id":"eeb1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m running into trouble defining chain rules for constructors in my package-\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"abstract type AT end\nstruct S1 <: AT \n    x::Vector{Float64}\nend\nstruct S2 <: AT\n    x::Vector{Float64}\nend\n\nrrule(::typeof(S1), x::AbstractVector{Float64})\n# the method for S2 overwrites S1\nrrule(::typeof(S2), x::AbstractVector{Float64})"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"this seems to happen because "},{"type":"text","text":"typeof(S1)","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"typeof(S2)","style":{"code":true}},{"type":"text","text":" are both "},{"type":"text","text":"UnionAll","style":{"code":true}},{"type":"text","text":" and the call signature is the same. Is there a different way to write rules for constructors that avoids this problem?"}]}]}],"thread_ts":"1617498835.147700","reply_count":2,"reply_users_count":2,"latest_reply":"1617504349.148300","reply_users":["UHDQQ4GN6","UN97XTLCV"],"is_locked":false,"subscribed":false},{"client_msg_id":"35953e9b-ff47-4131-9454-4a793d5e0683","type":"message","text":"Yeah, you want\n```rrule(::Type{&lt;:S1}, x::AbstractVector{Float64})\nrrule(::Type{&lt;:S2}, x::AbstractVector{Float64})```","user":"UHDQQ4GN6","ts":"1617499425.148000","team":"T68168MUP","edited":{"user":"UHDQQ4GN6","ts":"1617499439.000000"},"blocks":[{"type":"rich_text","block_id":"zzBk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, you want\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"rrule(::Type{<:S1}, x::AbstractVector{Float64})\nrrule(::Type{<:S2}, x::AbstractVector{Float64})"}]}]}],"thread_ts":"1617498835.147700","parent_user_id":"UN97XTLCV","reactions":[{"name":"this-is-true","users":["UN97XTLCV"],"count":1}]},{"client_msg_id":"e48abcb5-1d41-416c-8166-717b36ff8b1e","type":"message","text":"thanks!","user":"UN97XTLCV","ts":"1617504349.148300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R63","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks!"}]}]}],"thread_ts":"1617498835.147700","parent_user_id":"UN97XTLCV"}]