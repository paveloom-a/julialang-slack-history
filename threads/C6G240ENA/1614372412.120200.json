[{"client_msg_id":"22c635ad-0376-4f5a-84c0-379b24694e9b","type":"message","text":"Hi all. I’m working on a differentiable physics simulation code and am getting started with Zygote.\nIs this code below a good way to calculate the Jacobian using Zygote? I’m trying to develop a simple example based off of the zygote docs\n```# Evaluate the Jacobian matrix using Zygote and compare to finite differences\nbegin\n\t# define a function f(x): R³ → R³\n\n\tf(x) = [x[1]^2 + 2*x[2]^2 + 3*x[3]^2\n\t\t\t10*x[1]^2 + 20*x[2]^2 + 30*x[3]^2\n\t\t\t100*x[1]^2 + 200*x[2]^2 + 300*x[3]^2]\n\t\n\t# Calculate the Jacobian of f using finite differences\n\t# fᵢ'(x0) ≈ (fᵢ(x0 + ϵd) - f(x0)) / ϵd\n\tx0 = 11.0\n\tϵd = 1e-6\n\n\tr1 = (f([x0+ϵd 0 0]) - f([x0 0 0])) / ϵd\n\tr2 = (f([0 x0+ϵd 0]) - f([0 x0 0])) / ϵd\n\tr3 = (f([0 0 x0+ϵd 0]) - f([0 0 x0])) / ϵd\n\tJ_fd = [r1 r2 r3]\n\t\n\t# Now calculate the Jacobian using Zygote.pullback\n\t# First calculate the pullback: \n\tfx0, back = Zygote.pullback(f, [x0 x0 x0])\n\t# Evaluate the Jacobian matrix row-wise by\n\t# evaluating back at the unit vectors\n\tr1 = back([1 0 0])[1]\n\tr2 = back([0 1 0])[1]\n\tr3 = back([0 0 1])[1]\n\tJ_zg = [r1; r2; r3]\nend```","user":"U018F5W2H24","ts":"1614372412.120200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4FrNS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all. I’m working on a differentiable physics simulation code and am getting started with Zygote.\nIs this code below a good way to calculate the Jacobian using Zygote? I’m trying to develop a simple example based off of the zygote docs\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"# Evaluate the Jacobian matrix using Zygote and compare to finite differences\nbegin\n\t# define a function f(x): R³ → R³\n\n\tf(x) = [x[1]^2 + 2*x[2]^2 + 3*x[3]^2\n\t\t\t10*x[1]^2 + 20*x[2]^2 + 30*x[3]^2\n\t\t\t100*x[1]^2 + 200*x[2]^2 + 300*x[3]^2]\n\t\n\t# Calculate the Jacobian of f using finite differences\n\t# fᵢ'(x0) ≈ (fᵢ(x0 + ϵd) - f(x0)) / ϵd\n\tx0 = 11.0\n\tϵd = 1e-6\n\n\tr1 = (f([x0+ϵd 0 0]) - f([x0 0 0])) / ϵd\n\tr2 = (f([0 x0+ϵd 0]) - f([0 x0 0])) / ϵd\n\tr3 = (f([0 0 x0+ϵd 0]) - f([0 0 x0])) / ϵd\n\tJ_fd = [r1 r2 r3]\n\t\n\t# Now calculate the Jacobian using Zygote.pullback\n\t# First calculate the pullback: \n\tfx0, back = Zygote.pullback(f, [x0 x0 x0])\n\t# Evaluate the Jacobian matrix row-wise by\n\t# evaluating back at the unit vectors\n\tr1 = back([1 0 0])[1]\n\tr2 = back([0 1 0])[1]\n\tr3 = back([0 0 1])[1]\n\tJ_zg = [r1; r2; r3]\nend"}]}]}],"thread_ts":"1614372412.120200","reply_count":30,"reply_users_count":4,"latest_reply":"1614404241.129400","reply_users":["U6A936746","U018F5W2H24","UCD4Z3NJZ","UD0NS8PDF"],"subscribed":false},{"client_msg_id":"efcf3e1f-2009-4b27-b233-b9585cf4b31e","type":"message","text":"Recommend against coding finite differencing by hand.\nFiniteDiff.jl or FiniteDifferences.jl will do it more accurately","user":"U6A936746","ts":"1614372517.120300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F0k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Recommend against coding finite differencing by hand.\nFiniteDiff.jl or FiniteDifferences.jl will do it more accurately"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"0d181e46-70a2-4041-b2a5-f2e10714b04a","type":"message","text":"Zygote code looks sensible enough.\nBut why are you working with single row matrixes and not column vectors?","user":"U6A936746","ts":"1614372624.120600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vKPS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Zygote code looks sensible enough.\nBut why are you working with single row matrixes and not column vectors?"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"9a0ef90b-fcf9-46ca-b99c-fb638435f25f","type":"message","text":"Also if the problem is this small ForwardDiff.jl will be faster than Zygote.","user":"U6A936746","ts":"1614372678.120800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AC4r1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also if the problem is this small ForwardDiff.jl will be faster than Zygote."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"5cbdebd8-0823-4592-a83b-34b5f41b358c","type":"message","text":"It’s a toy problem for me to understand how the code works.","user":"U018F5W2H24","ts":"1614372695.121000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0WOr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s a toy problem for me to understand how the code works."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24","reactions":[{"name":"+1","users":["U6A936746"],"count":1}]},{"client_msg_id":"34d5b362-b7aa-4479-9341-3bb49e72d785","type":"message","text":"In the actual simulation I need to solve (10,000-1,000,000) implicit non-linear equations in each call to f.","user":"U018F5W2H24","ts":"1614372733.121300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T9ueG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the actual simulation I need to solve (10,000-1,000,000) implicit non-linear equations in each call to f."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"fa00157a-97d7-4f5d-a233-d0b63f70e77d","type":"message","text":"But first I need to get adjusted to autodiff in julia :slightly_smiling_face:","user":"U018F5W2H24","ts":"1614372775.121500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SWW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But first I need to get adjusted to autodiff in julia "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"5c62f400-d77c-4a22-9058-cf86b936e1d5","type":"message","text":"It's also worth being away that Zygote doesn't love `getindex`\nIt does bad (slow, heavily allocating) things that we are working on fixing.\n(This is a notable problem because normally Julia is great at working with scalar operations)","user":"U6A936746","ts":"1614372832.121700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ima","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's also worth being away that Zygote doesn't love "},{"type":"text","text":"getindex\n","style":{"code":true}},{"type":"text","text":"It does bad (slow, heavily allocating) things that we are working on fixing.\n(This is a notable problem because normally Julia is great at working with scalar operations)"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"8eb46023-e1a9-4cf3-9ae6-d583b98e5a06","type":"message","text":"I’m unsure about the second parameter I pass to zygote.pullback. Do I need to pass the vector where I want to calculate the Jacobian matrix here? And then unit vectors when I evaluate back?","user":"U018F5W2H24","ts":"1614372839.121900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GadH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m unsure about the second parameter I pass to zygote.pullback. Do I need to pass the vector where I want to calculate the Jacobian matrix here? And then unit vectors when I evaluate back?"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"9735dc34-6cc5-4d70-bba1-9b46f863cc15","type":"message","text":"What is `getindex`?","user":"U018F5W2H24","ts":"1614372865.122100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JVx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is "},{"type":"text","text":"getindex","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"4cb40f53-360c-49e0-be42-24cc2d2d922f","type":"message","text":"Calls to `x[1]` in my definition of f?","user":"U018F5W2H24","ts":"1614372886.122300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mEH8D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Calls to "},{"type":"text","text":"x[1]","style":{"code":true}},{"type":"text","text":" in my definition of f?"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24","reactions":[{"name":"heavy_check_mark","users":["U6A936746"],"count":1}]},{"client_msg_id":"27641ae6-e0e9-42b1-9636-087e399a4b8c","type":"message","text":"`xs[1]` is `getindex`","user":"U6A936746","ts":"1614372898.122500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BrGh/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"xs[1]","style":{"code":true}},{"type":"text","text":" is "},{"type":"text","text":"getindex","style":{"code":true}}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24","reactions":[{"name":"+1","users":["U018F5W2H24"],"count":1}]},{"client_msg_id":"e567a0f3-c951-4fa3-959b-97e58ed3bec0","type":"message","text":"Thanks. But back to the parameters I need to pass to pullback. Do I pass `x0` as the point where I want to evaluate my Jacobian at?","user":"U018F5W2H24","ts":"1614372974.122900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qPbh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. But back to the parameters I need to pass to pullback. Do I pass "},{"type":"text","text":"x0","style":{"code":true}},{"type":"text","text":" as the point where I want to evaluate my Jacobian at?"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"246cfdf2-5a18-44c7-ae08-07dea648cb6b","type":"message","text":"Your understanding of `Zygote.pullback` is right.\nIt should be called `value_and_pullback`.\nBecause the function called `back` is the mathematical functions that is the pullback.","user":"U6A936746","ts":"1614372986.123100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mKFC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Your understanding of `Zygote.pullback` is right.\nIt should be called "},{"type":"text","text":"value_and_pullback","style":{"code":true}},{"type":"text","text":".\nBecause the function called "},{"type":"text","text":"back ","style":{"code":true}},{"type":"text","text":"is the mathematical functions that is the pullback."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"61b21903-ab13-4fa6-8dfa-35c494e8da4b","type":"message","text":"Since you are computing the jacobian of a R^3 -&gt; R^3 mapping. ForwardDiff.jl (<https://github.com/JuliaDiff/ForwardDiff.jl>) is orders faster.","user":"UCD4Z3NJZ","ts":"1614373034.123300","team":"T68168MUP","edited":{"user":"UCD4Z3NJZ","ts":"1614373073.000000"},"blocks":[{"type":"rich_text","block_id":"24Yy=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Since you are computing the jacobian of a R^3 -> R^3 mapping. ForwardDiff.jl ("},{"type":"link","url":"https://github.com/JuliaDiff/ForwardDiff.jl"},{"type":"text","text":") is orders faster."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24","reactions":[{"name":"heavy_check_mark","users":["U6A936746"],"count":1}]},{"client_msg_id":"93e330ee-9883-4848-90ae-f293f17c5b63","type":"message","text":"Thanks <@UCD4Z3NJZ> This is a toy problem and my final problem will be about 32x32, 64x64 or 128x128. In each call to f I need to solve about 10^4-10^6 implicit equations iteratively.","user":"U018F5W2H24","ts":"1614373111.123700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FgFW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks "},{"type":"user","user_id":"UCD4Z3NJZ"},{"type":"text","text":" This is a toy problem and my final problem will be about 32x32, 64x64 or 128x128. In each call to f I need to solve about 10^4-10^6 implicit equations iteratively."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"2d5b1e67-a071-4d18-86ee-fc5c3f442801","type":"message","text":"Would I need forward-mode or backwards-mode for this?","user":"U018F5W2H24","ts":"1614373131.123900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6QK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would I need forward-mode or backwards-mode for this?"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"397f4a05-b2d8-476c-b0a2-501036fbd17c","type":"message","text":"If it is square then ForwardDiff will be faster","user":"U6A936746","ts":"1614373142.124100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D=B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it is square then ForwardDiff will be faster"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24","reactions":[{"name":"heavy_check_mark","users":["UCD4Z3NJZ"],"count":1}]},{"client_msg_id":"036b00ab-2e9e-4e62-9d7f-9d32f1aca701","type":"message","text":"overhead of forward mode is propotional to input size. For backward, it is propotional to the output size. For equal size, forward diff is faster.","user":"UCD4Z3NJZ","ts":"1614373153.124300","team":"T68168MUP","edited":{"user":"UCD4Z3NJZ","ts":"1614373203.000000"},"blocks":[{"type":"rich_text","block_id":"9Cxo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"overhead of forward mode is propotional to input size. For backward, it is propotional to the output size. For equal size, forward diff is faster."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"59f79bbe-dd4c-438a-a92d-fc4959a64232","type":"message","text":"So ForwardDiff, ok. Should I keep looking at Zygote then or do I need ForwardDiff.jl?","user":"U018F5W2H24","ts":"1614373204.124800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qF2h0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So ForwardDiff, ok. Should I keep looking at Zygote then or do I need ForwardDiff.jl?"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"1206470e-37c0-4158-9166-b1b4683bfc43","type":"message","text":"Looking forward to the benchmark. The forward diff package is very easy to use, you loss nothing to look into it. (If I were you, I will try forwarddiff)","user":"UCD4Z3NJZ","ts":"1614373251.125000","team":"T68168MUP","edited":{"user":"UCD4Z3NJZ","ts":"1614373281.000000"},"blocks":[{"type":"rich_text","block_id":"Mfj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looking forward to the benchmark. The forward diff package is very easy to use, you loss nothing to look into it. (If I were you, I will try forwarddiff)"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"6225bdcb-dba7-4cfc-8bec-448941a768e5","type":"message","text":"The pullback (is the function that takes a sensitivity with regards to something (e.g in dy/dy=1) and pulls it back through a function f that evaluted at x=x0, to give it's sensitivity with regards to x (e.g. dy/dx`)","user":"U6A936746","ts":"1614373264.125200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PyB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The pullback (is the function that takes a sensitivity with regards to something (e.g in dy/dy=1) and pulls it back through a function f that evaluted at x=x0, to give it's sensitivity with regards to x (e.g. dy/dx`)"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"efca49e5-a664-48c6-b5f2-f778f1f04ba8","type":"message","text":"BTW, if you are not familiar with benchmarking in Julia, this will be helpful: <https://github.com/JuliaCI/BenchmarkTools.jl>","user":"UCD4Z3NJZ","ts":"1614373371.125500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Yh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW, if you are not familiar with benchmarking in Julia, this will be helpful: "},{"type":"link","url":"https://github.com/JuliaCI/BenchmarkTools.jl"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24","reactions":[{"name":"+1","users":["U018F5W2H24"],"count":1}]},{"client_msg_id":"ea15e5e3-fc80-4e98-9190-8e9b548b238e","type":"message","text":"Rule of thumb: reverse _might_ be faster if you have 5x as many parameters (inputs) as   outputs.\nLess than 5x almost no chance.\nOver 200x almost certainly.","user":"U6A936746","ts":"1614373409.125800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2wJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rule of thumb: reverse "},{"type":"text","text":"might","style":{"italic":true}},{"type":"text","text":" be faster if you have 5x as many parameters (inputs) as   outputs.\nLess than 5x almost no chance.\nOver 200x almost certainly."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24","reactions":[{"name":"+1","users":["UCD4Z3NJZ"],"count":1}]},{"client_msg_id":"42fd8de1-1d58-40bd-8394-52c688846ee9","type":"message","text":"Allright, I’ll look at forwarddiff then :slightly_smiling_face:","user":"U018F5W2H24","ts":"1614373462.126000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qdV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Allright, I’ll look at forwarddiff then "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"b3e289be-185c-4202-b576-9c31738d58ba","type":"message","text":"It has a Jacobian function.","user":"U6A936746","ts":"1614373495.126300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SnPy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It has a Jacobian function."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"f6df9006-87ae-4313-bc4b-10780240fd75","type":"message","text":"Beautiful","user":"U018F5W2H24","ts":"1614373504.126500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Aai","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Beautiful"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"45be5db2-39cf-4aa7-bd2e-f625eba527a2","type":"message","text":"Okay, the toy example is easy using ForwardDiff","user":"U018F5W2H24","ts":"1614373821.126900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oEjn2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, the toy example is easy using ForwardDiff"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"6ab9ca1d-7d82-459f-8c64-57aef4eadf30","type":"message","text":"When I run a simple test case for my simulation I get a lot of NaNs","user":"U018F5W2H24","ts":"1614373840.127100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lYf7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When I run a simple test case for my simulation I get a lot of NaNs"}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"b2cc9292-5248-4efc-80c7-a56323cd8fe4","type":"message","text":"I’ll read some documentation and will probably ask again when I’m stuck. Thanks for your help.","user":"U018F5W2H24","ts":"1614373864.127300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RrKH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ll read some documentation and will probably ask again when I’m stuck. Thanks for your help."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24"},{"client_msg_id":"4899423B-2072-4B96-9FE8-F1796D95BB36","type":"message","text":"Zygote does have a jacobian function now, BTW. But best for a few outputs &amp; many inputs, as noted.","user":"UD0NS8PDF","ts":"1614404241.129400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+wDGz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Zygote does have a jacobian function now, BTW. But best for a few outputs & many inputs, as noted."}]}]}],"thread_ts":"1614372412.120200","parent_user_id":"U018F5W2H24","reactions":[{"name":"+1","users":["U018F5W2H24"],"count":1}]}]