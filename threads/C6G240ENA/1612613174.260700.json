[{"client_msg_id":"104b6ec4-22da-4ce3-bd29-032b11ff02e6","type":"message","text":"Continuing off of <https://julialang.slack.com/archives/C6G240ENA/p1612612982258400?thread_ts=1612548723.186800&amp;cid=C6G240ENA>. Yes but I think the most basic high level interface is `jacobian` and `primalvalue`. A package can implement `jacobian` internally using pullbacks or pushforwards to apply the chain rules efficiently. But we can also derive those functions at a higher level using only `jacobian` and `primalvalue`.","user":"U85JBUGGP","ts":"1612613174.260700","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/C6G240ENA/p1612612982258400?thread_ts=1612548723.186800&amp;cid=C6G240ENA","fallback":"[February 6th, 2021 4:03 AM] oxinabox: not simpler to me, but maybe i broke my mind.\n\nWe should, I think, have jacobian fallback to them. Fiddly to avoid an infinite loop but I think we can do it.","ts":"1612612982.258400","author_id":"U6A936746","author_subname":"Lyndon White","channel_id":"C6G240ENA","channel_name":"autodiff","is_msg_unfurl":true,"is_reply_unfurl":true,"text":"not simpler to me, but maybe i broke my mind.\n\nWe should, I think, have jacobian fallback to them. Fiddly to avoid an infinite loop but I think we can do it.","author_name":"Lyndon White","author_link":"https://julialang.slack.com/team/U6A936746","author_icon":"https://avatars.slack-edge.com/2017-07-25/216502576448_36aaf550196bfa49acdc_48.jpg","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/C6G240ENA/p1612612982258400?thread_ts=1612548723.186800&amp;cid=C6G240ENA","footer":"From a thread in #autodiff"}],"blocks":[{"type":"rich_text","block_id":"Smc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Continuing off of "},{"type":"link","url":"https://julialang.slack.com/archives/C6G240ENA/p1612612982258400?thread_ts=1612548723.186800&cid=C6G240ENA"},{"type":"text","text":". Yes but I think the most basic high level interface is "},{"type":"text","text":"jacobian","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"primalvalue","style":{"code":true}},{"type":"text","text":". A package can implement "},{"type":"text","text":"jacobian","style":{"code":true}},{"type":"text","text":" internally using pullbacks or pushforwards to apply the chain rules efficiently. But we can also derive those functions at a higher level using only "},{"type":"text","text":"jacobian","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"primalvalue","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1612613174.260700","reply_count":1,"reply_users_count":1,"latest_reply":"1612613328.263100","reply_users":["U6A936746"],"subscribed":false},{"client_msg_id":"6490d403-ef9e-47db-8f1a-44d8d5ee1c12","type":"message","text":"Even if we can’t fallback directly,\nwe can proved a macro that will implement Jacobian so you don’t need to implement it internally.\nso you can just be like `@implements_jacobian_via_pullback MyADSystem`\nand it can go and define\n```function AbstractDifferentiation.jacobian(f, x, AD::MyADSystem)\n    return hcat(AbstractDifferentiation.pullback(..., AD))\nend```\netc","user":"U6A936746","ts":"1612613328.263100","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1612613394.000000"},"blocks":[{"type":"rich_text","block_id":"YdXg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Even if we can’t fallback directly,\nwe can proved a macro that will implement Jacobian so you don’t need to implement it internally.\nso you can just be like "},{"type":"text","text":"@implements_jacobian_via_pullback MyADSystem","style":{"code":true}},{"type":"text","text":"\nand it can go and define\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function AbstractDifferentiation.jacobian(f, x, AD::MyADSystem)\n    return hcat(AbstractDifferentiation.pullback(..., AD))\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\netc"}]}]}],"thread_ts":"1612613174.260700","parent_user_id":"U85JBUGGP"}]