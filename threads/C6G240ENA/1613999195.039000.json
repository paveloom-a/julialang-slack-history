[{"client_msg_id":"991a5357-e03f-40f4-9b9d-7ae9c4dd16b1","type":"message","text":"In theory, Zygote's approach is supposed to solve this problem, but in practice it puts a lot of strain on the compiler and often interferes with inference, so there is typically some overhead. This is something a next-gen AD should be a lot better at though.","user":"UM30MT6RF","ts":"1613999195.039000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3zsW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In theory, Zygote's approach is supposed to solve this problem, but in practice it puts a lot of strain on the compiler and often interferes with inference, so there is typically some overhead. This is something a next-gen AD should be a lot better at though."}]}]}],"thread_ts":"1613999195.039000","reply_count":9,"reply_users_count":2,"latest_reply":"1614000077.042700","reply_users":["U6A936746","UM30MT6RF"],"subscribed":false},{"client_msg_id":"2ddb15fa-7453-4e8b-b313-4b9faf8a6584","type":"message","text":"solves what problem?","user":"U6A936746","ts":"1613999570.040700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0MLw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"solves what problem?"}]}]}],"thread_ts":"1613999195.039000","parent_user_id":"UM30MT6RF"},{"client_msg_id":"c8cbd432-4256-43f3-9c84-5c92442ee0aa","type":"message","text":"The overhead of tape-based reverse AD","user":"UM30MT6RF","ts":"1613999599.041100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zCus","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The overhead of tape-based reverse AD"}]}]}],"thread_ts":"1613999195.039000","parent_user_id":"UM30MT6RF"},{"client_msg_id":"7a0a0bdb-f952-4bbe-89de-32ea14a32c36","type":"message","text":"Implementation can decrease the overhead, but they can never get it to zero.","user":"U6A936746","ts":"1613999604.041300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X2i6K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Implementation can decrease the overhead, but they can never get it to zero."}]}]}],"thread_ts":"1613999195.039000","parent_user_id":"UM30MT6RF"},{"client_msg_id":"1fb12357-5752-42c9-9df7-c8c977521569","type":"message","text":"Managing the tape still is work.\nAnd Zygote still has a tape, it is just not in a single explict variable, but rather spread out across the whole call-stack.","user":"U6A936746","ts":"1613999698.041500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cOCu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Managing the tape still is work.\nAnd Zygote still has a tape, it is just not in a single explict variable, but rather spread out across the whole call-stack."}]}]}],"thread_ts":"1613999195.039000","parent_user_id":"UM30MT6RF"},{"client_msg_id":"ddf1aa61-23b6-4aca-82d1-35a2936876fb","type":"message","text":"I mean for very simple examples, Zygote should already be just as fast as writing the derivative by hand. In more complex cases, I agree that there will always be some overhead, but if it's sufficiently small, who cares","user":"UM30MT6RF","ts":"1613999738.041700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KU7r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean for very simple examples, Zygote should already be just as fast as writing the derivative by hand. In more complex cases, I agree that there will always be some overhead, but if it's sufficiently small, who cares"}]}]}],"thread_ts":"1613999195.039000","parent_user_id":"UM30MT6RF"},{"client_msg_id":"9974b911-d0fb-41c4-9d9b-543efed8597e","type":"message","text":"Yeah, but having the tape in the IR means that the compiler can theoretically inline everything completely","user":"UM30MT6RF","ts":"1613999787.041900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vxye","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, but having the tape in the IR means that the compiler can theoretically inline everything completely"}]}]}],"thread_ts":"1613999195.039000","parent_user_id":"UM30MT6RF"},{"client_msg_id":"3f7410b4-8ed9-4239-89f2-481e5d90f81a","type":"message","text":"but conversely, having the tape in a variable means that you can do things like preallocate it, (and compress it, but that would be slower not faster).\nI mean Autopreallocation should do that for the implict stack, and kind of does apparently.","user":"U6A936746","ts":"1613999921.042100","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1613999922.000000"},"blocks":[{"type":"rich_text","block_id":"8e5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but conversely, having the tape in a variable means that you can do things like preallocate it, (and compress it, but that would be slower not faster).\nI mean Autopreallocation should do that for the implict stack, and kind of does apparently."}]}]}],"thread_ts":"1613999195.039000","parent_user_id":"UM30MT6RF"},{"client_msg_id":"129bd620-b4bc-4821-88b4-0a8f1db53ccb","type":"message","text":"&gt;  I mean for very simple examples, Zygote should already be just as fast as writing the derivative by hand.\n:true:\n\nI would love to workout how to draw the line in the sand for some of these cases.\nI feel like it might be connected to <https://www.juliadiff.org/ChainRulesCore.jl/dev/design/changing_the_primal.html>\n(which is something opaque closures + inlining, should be much better at doing automatically).\nand more broadly to the cases where you can compute derivatives without needing any state except outpouts","user":"U6A936746","ts":"1614000032.042400","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1614000079.000000"},"blocks":[{"type":"rich_text","block_id":"fRL","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" I mean for very simple examples, Zygote should already be just as fast as writing the derivative by hand."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"},{"type":"emoji","name":"true"},{"type":"text","text":"\n\nI would love to workout how to draw the line in the sand for some of these cases.\nI feel like it might be connected to "},{"type":"link","url":"https://www.juliadiff.org/ChainRulesCore.jl/dev/design/changing_the_primal.html"},{"type":"text","text":"\n(which is something opaque closures + inlining, should be much better at doing automatically).\nand more broadly to the cases where you can compute derivatives without needing any state except outpouts"}]}]}],"thread_ts":"1613999195.039000","parent_user_id":"UM30MT6RF"},{"client_msg_id":"dd39391e-5d0a-4b67-a7c3-ca8bd97f3649","type":"message","text":"Yes, that might be a tradeoff depending on your number of parameters. IIUC, currently the focus of Zygote and Diffractor is more on lower dimensional problems","user":"UM30MT6RF","ts":"1614000077.042700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"avI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, that might be a tradeoff depending on your number of parameters. IIUC, currently the focus of Zygote and Diffractor is more on lower dimensional problems"}]}]}],"thread_ts":"1613999195.039000","parent_user_id":"UM30MT6RF"}]