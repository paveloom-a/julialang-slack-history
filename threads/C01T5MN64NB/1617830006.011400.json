[{"client_msg_id":"4DC4716A-F8F4-4C82-A04D-35EC129795C3","type":"message","text":"The point of this channel is just to have a place to chat about experiments with the new compiler infra. I’ve been poking around with things, and trying to understand certain aspects of the interception which AbstractInterpreter allows.\n\n(Which reminds me, we should invite <@UH1BLK14H> )\n\nValentin and I have also been working on and off on MLIR.jl and alternative codegen through brutus. Brutus is far far far from being something which is really useable for a good portion of Julia code — but I’d be interested in hearing if other people could use an MLIR layer / or whether that is considered a good idea.","user":"UKA81L34J","ts":"1617830006.011400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IB1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The point of this channel is just to have a place to chat about experiments with the new compiler infra. I’ve been poking around with things, and trying to understand certain aspects of the interception which AbstractInterpreter allows.\n\n(Which reminds me, we should invite "},{"type":"user","user_id":"UH1BLK14H"},{"type":"text","text":" )\n\nValentin and I have also been working on and off on MLIR.jl and alternative codegen through brutus. Brutus is far far far from being something which is really useable for a good portion of Julia code — but I’d be interested in hearing if other people could use an MLIR layer / or whether that is considered a good idea."}]}]}],"thread_ts":"1617830006.011400","reply_count":4,"reply_users_count":2,"latest_reply":"1617842243.019600","reply_users":["UMY1LV01G","UKA81L34J"],"is_locked":false,"subscribed":false},{"client_msg_id":"0b8456ec-e360-4e4e-a2ec-72675a32fbc3","type":"message","text":"Have you seen the thread on the LLVM discourse about bindings? <https://llvm.discourse.group/t/open-discussion-on-mlir-bindings/3159>.","user":"UMY1LV01G","ts":"1617839314.018800","team":"T68168MUP","attachments":[{"service_name":"LLVM Discussion Forums","title":"Open discussion on MLIR bindings","title_link":"https://llvm.discourse.group/t/open-discussion-on-mlir-bindings/3159","text":"Hi all, Lately, some of the folks at CIRCT have been working on bindings. We currently have Swift, NodeJS, and Python bindings to CIRCT, and we are getting to the point that we would like to collaborate on some upstream improvements. For example, I would like to expose some of CIRCT’s custom types to Python. I have an idea of how I can do that with some refactoring of the upstream Python binding code, but I would also be interested in making a more general improvement that can benefit the othe...","fallback":"LLVM Discussion Forums: Open discussion on MLIR bindings","thumb_url":"https://aws1.discourse-cdn.com/free1/uploads/llvm/original/1X/6ac54669f4b30cb07094375cbd65d24163b5b6e0.jpeg","fields":[{"title":"Reading time","value":"5 mins :clock2:","short":true},{"title":"Likes","value":"4 :heart:","short":true}],"ts":1617219907,"from_url":"https://llvm.discourse.group/t/open-discussion-on-mlir-bindings/3159","thumb_width":380,"thumb_height":279,"service_icon":"https://aws1.discourse-cdn.com/free1/uploads/llvm/optimized/1X/6ac54669f4b30cb07094375cbd65d24163b5b6e0_2_180x180.jpeg","id":1,"original_url":"https://llvm.discourse.group/t/open-discussion-on-mlir-bindings/3159"}],"blocks":[{"type":"rich_text","block_id":"Wokk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Have you seen the thread on the LLVM discourse about bindings? "},{"type":"link","url":"https://llvm.discourse.group/t/open-discussion-on-mlir-bindings/3159"},{"type":"text","text":"."}]}]}],"thread_ts":"1617830006.011400","parent_user_id":"UKA81L34J"},{"client_msg_id":"24ae7b53-673b-4a68-b81f-a24a4ac639ff","type":"message","text":"I think MLIR would be an interesting path for codegen of IRs like SPIR-V which do not have an existing LLVM backend (e.g. SPIR-V for Vulkan. Indeed, this topic came up on their mailing list, <https://lists.llvm.org/pipermail/llvm-dev/2021-March/148905.html>), as well as array and kernel-level optimizations which the GPUCompiler stack does not partake in at present.","user":"UMY1LV01G","ts":"1617839412.019100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eU4Qn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think MLIR would be an interesting path for codegen of IRs like SPIR-V which do not have an existing LLVM backend (e.g. SPIR-V for Vulkan. Indeed, this topic came up on their mailing list, "},{"type":"link","url":"https://lists.llvm.org/pipermail/llvm-dev/2021-March/148905.html"},{"type":"text","text":"), as well as array and kernel-level optimizations which the GPUCompiler stack does not partake in at present."}]}]}],"thread_ts":"1617830006.011400","parent_user_id":"UKA81L34J"},{"client_msg_id":"a511f718-5da0-445f-9dc1-72c0317b4189","type":"message","text":"No — good ref <@UMY1LV01G>","user":"UKA81L34J","ts":"1617842239.019400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BtX4A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No — good ref "},{"type":"user","user_id":"UMY1LV01G"}]}]}],"thread_ts":"1617830006.011400","parent_user_id":"UKA81L34J"},{"client_msg_id":"13d67d23-c21b-4530-ba37-d10d1ca3b5d8","type":"message","text":"will take a look","user":"UKA81L34J","ts":"1617842243.019600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4xGrM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"will take a look"}]}]}],"thread_ts":"1617830006.011400","parent_user_id":"UKA81L34J","reactions":[{"name":"+1","users":["UMY1LV01G"],"count":1}]}]