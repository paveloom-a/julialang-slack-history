[{"client_msg_id":"bb6455fb-29a0-4edb-9bb7-84ff6a30ad1d","type":"message","text":"Is the LogisticClassifier from MLJLinearModels not able to handle numeric and string responses? I have to convert to categorical every time, and even convert 0/1 for a binary response to a categorical, which is kind of strange. I get something like the scitype of y is incompatible","user":"U01EF0QVAB0","ts":"1611897536.004700","team":"T68168MUP","edited":{"user":"U01EF0QVAB0","ts":"1611897579.000000"},"blocks":[{"type":"rich_text","block_id":"mYuAf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is the LogisticClassifier from MLJLinearModels not able to handle numeric and string responses? I have to convert to categorical every time, and even convert 0/1 for a binary response to a categorical, which is kind of strange. I get something like the scitype of y is incompatible"}]}]}],"thread_ts":"1611897536.004700","reply_count":3,"reply_users_count":2,"latest_reply":"1611968766.006300","reply_users":["UDP5WL2RX","U01EF0QVAB0"],"subscribed":false},{"client_msg_id":"e34109ba-1dbf-463c-b3d0-56f173916f26","type":"message","text":"Hello <@U01EF0QVAB0> please do read about scientific types e.g.: <https://github.com/alan-turing-institute/ScientificTypes.jl> and the pretty exhaustive MLJ docs: <https://alan-turing-institute.github.io/MLJ.jl/dev/>\n\nThe general flow in MLJ is: *you* specify how your data should be interpreted using one of the scientific type; MLJ then handles conversions in the background if necessary and models can rely on MLJ providing them data in exactly the right format without having to bother with encoding etc. If you don't do that, MLJ will try to guess but will take conservative approaches to do so which can return these warnings/errors.\n\nIn the case of binary classification for instance; the MLJLM log reg model internally assumes that the target is *exactly* encoded as `-1, +1`  but you can ignore this if you're wrapping it in an MLJ machine passing data encoded as `&lt;:Finite{2}` .","user":"UDP5WL2RX","ts":"1611907630.005000","team":"T68168MUP","edited":{"user":"UDP5WL2RX","ts":"1611908842.000000"},"blocks":[{"type":"rich_text","block_id":"4fWb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello "},{"type":"user","user_id":"U01EF0QVAB0"},{"type":"text","text":" please do read about scientific types e.g.: "},{"type":"link","url":"https://github.com/alan-turing-institute/ScientificTypes.jl"},{"type":"text","text":" and the pretty exhaustive MLJ docs: "},{"type":"link","url":"https://alan-turing-institute.github.io/MLJ.jl/dev/"},{"type":"text","text":"\n\nThe general flow in MLJ is: "},{"type":"text","text":"you","style":{"bold":true}},{"type":"text","text":" specify how your data should be interpreted using one of the scientific type; MLJ then handles conversions in the background if necessary and models can rely on MLJ providing them data in exactly the right format without having to bother with encoding etc. If you don't do that, MLJ will try to guess but will take conservative approaches to do so which can return these warnings/errors.\n\nIn the case of binary classification for instance; the MLJLM log reg model internally assumes that the target is "},{"type":"text","text":"exactly","style":{"bold":true}},{"type":"text","text":" encoded as "},{"type":"text","text":"-1, +1","style":{"code":true}},{"type":"text","text":"  but you can ignore this if you're wrapping it in an MLJ machine passing data encoded as "},{"type":"text","text":"<:Finite{2}","style":{"code":true}},{"type":"text","text":" ."}]}]}],"thread_ts":"1611897536.004700","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"b96dbada-ad10-40a6-be9c-f044b9bb7ea4","type":"message","text":"Possibly also have a look at the tutorials: <https://alan-turing-institute.github.io/DataScienceTutorials.jl/data/scitype/> though some might be a bit outdated but the spirit is correct .\nHere's a simple example with logreg: <https://alan-turing-institute.github.io/DataScienceTutorials.jl/isl/lab-4/#logistic_regression>","user":"UDP5WL2RX","ts":"1611907706.005200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RSz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Possibly also have a look at the tutorials: "},{"type":"link","url":"https://alan-turing-institute.github.io/DataScienceTutorials.jl/data/scitype/"},{"type":"text","text":" though some might be a bit outdated but the spirit is correct .\nHere's a simple example with logreg: "},{"type":"link","url":"https://alan-turing-institute.github.io/DataScienceTutorials.jl/isl/lab-4/#logistic_regression"}]}]}],"thread_ts":"1611897536.004700","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"cc7ac844-a590-432d-a039-1c1ea4317be7","type":"message","text":"Thanks, yea I have been running into a lot of issues with Types coming from R since I am just used to having X/Y be matrices/vector/DataFrame","user":"U01EF0QVAB0","ts":"1611968766.006300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pG8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, yea I have been running into a lot of issues with Types coming from R since I am just used to having X/Y be matrices/vector/DataFrame"}]}]}],"thread_ts":"1611897536.004700","parent_user_id":"U01EF0QVAB0"}]