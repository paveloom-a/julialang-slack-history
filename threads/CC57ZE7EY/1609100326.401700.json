[{"client_msg_id":"11760cd1-299f-41ae-9047-57c433d6ad44","type":"message","text":"Answered at <https://www.reddit.com/r/Julia/comments/kkaxr8/model_stacking_super_confusing_mljjl/gh7s7kl?utm_source=share&amp;utm_medium=web2x&amp;context=3>","user":"UD0SQV5LL","ts":"1609100326.401700","team":"T68168MUP","attachments":[{"service_name":"reddit","title":"Model Stacking super confusing MLJ.jl","title_link":"https://www.reddit.com/r/Julia/comments/kkaxr8/model_stacking_super_confusing_mljjl/gh7s7kl?utm_source=share&utm_medium=web2x&context=3","text":"<https://alan-turing-institute.github.io/DataScienceTutorials.jl/getting-started/stacking/> Are there plans to make this more user friendly like...","fallback":"reddit: Model Stacking super confusing MLJ.jl","thumb_url":"https://www.redditstatic.com/new-icon.png","from_url":"https://www.reddit.com/r/Julia/comments/kkaxr8/model_stacking_super_confusing_mljjl/gh7s7kl?utm_source=share&utm_medium=web2x&context=3","thumb_width":256,"thumb_height":256,"service_icon":"http://www.redditstatic.com/desktop2x/img/favicon/apple-icon-57x57.png","id":1,"original_url":"https://www.reddit.com/r/Julia/comments/kkaxr8/model_stacking_super_confusing_mljjl/gh7s7kl?utm_source=share&amp;utm_medium=web2x&amp;context=3"}],"blocks":[{"type":"rich_text","block_id":"vDI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Answered at "},{"type":"link","url":"https://www.reddit.com/r/Julia/comments/kkaxr8/model_stacking_super_confusing_mljjl/gh7s7kl?utm_source=share&utm_medium=web2x&context=3"}]}]}],"thread_ts":"1609100326.401700","reply_count":1,"reply_users_count":1,"latest_reply":"1609155029.402100","reply_users":["UAZP7LJLU"],"subscribed":false},{"client_msg_id":"6361f1be-9630-4ed3-a72a-10803d8581f6","type":"message","text":"<@UD0SQV5LL> I couldn't find the answer you posted. But i think MLJ need to have a method for weighting `UnivariateFinite` objects. One way to do this is to transform the `UnivariateFinite` distribution to a `ContinuousDistribution`  apply weights then transform back to a `UnivariateFinite` distribution.","user":"UAZP7LJLU","ts":"1609155029.402100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rd2","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UD0SQV5LL"},{"type":"text","text":" I couldn't find the answer you posted. But i think MLJ need to have a method for weighting "},{"type":"text","text":"UnivariateFinite","style":{"code":true}},{"type":"text","text":" objects. One way to do this is to transform the "},{"type":"text","text":"UnivariateFinite","style":{"code":true}},{"type":"text","text":" distribution to a "},{"type":"text","text":"ContinuousDistribution","style":{"code":true}},{"type":"text","text":"  apply weights then transform back to a "},{"type":"text","text":"UnivariateFinite","style":{"code":true}},{"type":"text","text":" distribution."}]}]}],"thread_ts":"1609100326.401700","parent_user_id":"UD0SQV5LL"}]