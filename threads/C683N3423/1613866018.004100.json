[{"client_msg_id":"63750288-0f04-4ad8-81a8-3932d3909ddc","type":"message","text":"How can I start a WebSocket server together with HTTP server on the same ip-address and port?\nThere is an outdated example that does not work: <https://github.com/JuliaWeb/HTTP.jl/pull/159#issuecomment-359492580>\nCan <https://juliaweb.github.io/HTTP.jl/stable/public_interface/#HTTP.Handlers.serve|HTTP.Handlers.serve> be combined with WebSockets somehow?","user":"UB2QSHWPN","ts":"1613866018.004100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ngq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can I start a WebSocket server together with HTTP server on the same ip-address and port?\nThere is an outdated example that does not work: "},{"type":"link","url":"https://github.com/JuliaWeb/HTTP.jl/pull/159#issuecomment-359492580"},{"type":"text","text":"\nCan "},{"type":"link","url":"https://juliaweb.github.io/HTTP.jl/stable/public_interface/#HTTP.Handlers.serve","text":"HTTP.Handlers.serve"},{"type":"text","text":" be combined with WebSockets somehow?"}]}]}],"thread_ts":"1613866018.004100","reply_count":1,"reply_users_count":1,"latest_reply":"1613940290.004500","reply_users":["UB2QSHWPN"],"subscribed":false},{"client_msg_id":"931d6102-a530-4ce1-9d27-49e6e972b4d8","type":"message","text":"Edited the old example, and now it works:\n```using Sockets, HTTP, HTTP.WebSockets\n\nconst ROUTER = HTTP.Router()\n\nfunction hello(req::HTTP.Request)\n    res = HTTP.Response(\"Hello world!\")\n    push!(res.headers, \"Connection\" =&gt; \"keep-alive\")\n    push!(res.headers, \"Access-Control-Allow-Origin\" =&gt; \"*\")\n    push!(res.headers, \"Content-Type\" =&gt; \"text/html; charset=utf-8\")\n    return res\nend\n\nHTTP.@register(ROUTER, \"GET\", \"/hello\", hello)\n\nfunction start_server(p = 8081)\n    HTTP.listen(ip\"127.0.0.1\", p) do http\n        if WebSockets.is_upgrade(http.message)\n            WebSockets.upgrade(http) do ws\n                while !eof(ws)\n                    data = readavailable(ws)\n                    print(String(data))\n                    write(ws, \"Thanks for: $(String(data))\")\n                end\n            end\n        else\n            handler = HTTP.Handlers.gethandler(ROUTER, http.message)\n            HTTP.handle(handler, http)\n        end\n    end\nend```\nNotice that HTTP server can only be upgraded to WebSockets, and after that it cannot receive simple HTTP requests from browser.","user":"UB2QSHWPN","ts":"1613940290.004500","team":"T68168MUP","edited":{"user":"UB2QSHWPN","ts":"1613940311.000000"},"blocks":[{"type":"rich_text","block_id":"I=Li","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Edited the old example, and now it works:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Sockets, HTTP, HTTP.WebSockets\n\nconst ROUTER = HTTP.Router()\n\nfunction hello(req::HTTP.Request)\n    res = HTTP.Response(\"Hello world!\")\n    push!(res.headers, \"Connection\" => \"keep-alive\")\n    push!(res.headers, \"Access-Control-Allow-Origin\" => \"*\")\n    push!(res.headers, \"Content-Type\" => \"text/html; charset=utf-8\")\n    return res\nend\n\nHTTP.@register(ROUTER, \"GET\", \"/hello\", hello)\n\nfunction start_server(p = 8081)\n    HTTP.listen(ip\"127.0.0.1\", p) do http\n        if WebSockets.is_upgrade(http.message)\n            WebSockets.upgrade(http) do ws\n                while !eof(ws)\n                    data = readavailable(ws)\n                    print(String(data))\n                    write(ws, \"Thanks for: $(String(data))\")\n                end\n            end\n        else\n            handler = HTTP.Handlers.gethandler(ROUTER, http.message)\n            HTTP.handle(handler, http)\n        end\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Notice that HTTP server can only be upgraded to WebSockets, and after that it cannot receive simple HTTP requests from browser."}]}]}],"thread_ts":"1613866018.004100","parent_user_id":"UB2QSHWPN"}]