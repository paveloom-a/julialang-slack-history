[{"client_msg_id":"68f8ec60-3844-48f4-8745-cdfd8876f628","type":"message","text":"Not sure if this is the right channel to ask this. I'm writing an interpretator for a Probabilistic Programming course and I'm opting to implement it in Julia. I need to use primitive types that can be auto-differentiated. i.e. every other classmate implementing the project in python is urged to use TensorFlow for primitives to ensure auto-differentiability. With Julia, can I get away with using floats and arrays of floats or should I immediately consider employing auto-differentiability package? Note, auto-differentiability is not a requirement currently, but in a month or two I will need to be able to hook up my interpreter to an auto-differentiation package or implement it myself.","user":"UHFCQS332","ts":"1612550593.116000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cfRLl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure if this is the right channel to ask this. I'm writing an interpretator for a Probabilistic Programming course and I'm opting to implement it in Julia. I need to use primitive types that can be auto-differentiated. i.e. every other classmate implementing the project in python is urged to use TensorFlow for primitives to ensure auto-differentiability. With Julia, can I get away with using floats and arrays of floats or should I immediately consider employing auto-differentiability package? Note, auto-differentiability is not a requirement currently, but in a month or two I will need to be able to hook up my interpreter to an auto-differentiation package or implement it myself."}]}]}],"thread_ts":"1612550593.116000","reply_count":1,"reply_users_count":1,"latest_reply":"1612551072.118100","reply_users":["U01C3624SGJ"],"subscribed":false},{"client_msg_id":"2e495de7-84c0-4f0b-b128-3e2ad685eef6","type":"message","text":"You can get away with it because in julia, all code (exceptions may apply) can be auto-differentiated.\nYou may want to take a look at the available autodiff packages in <https://www.juliadiff.org/>","user":"U01C3624SGJ","ts":"1612551072.118100","team":"T68168MUP","attachments":[{"title":"JuliaDiff","title_link":"https://www.juliadiff.org/","text":"Home of the JuliaDiff project.","fallback":"JuliaDiff","from_url":"https://www.juliadiff.org/","service_icon":"https://www.juliadiff.org/images/favicon.ico","service_name":"juliadiff.org","id":1,"original_url":"https://www.juliadiff.org/"}],"blocks":[{"type":"rich_text","block_id":"mo5x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can get away with it because in julia, all code (exceptions may apply) can be auto-differentiated.\nYou may want to take a look at the available autodiff packages in "},{"type":"link","url":"https://www.juliadiff.org/"}]}]}],"thread_ts":"1612550593.116000","parent_user_id":"UHFCQS332"}]