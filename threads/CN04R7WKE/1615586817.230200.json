[{"client_msg_id":"f4794730-e9ea-496a-95f9-9b4759c0c8ca","type":"message","text":"I'm getting an error when I try to optimize a neural network inside a PDE. I'm using DiffEqOperators.jl, and I'm getting `Method Error`s when I try to do the gradient/automatic differentiation. I'm not sure what I'm doing wrong with the types when doing the AD. Alternatively, I could just define my own laplacian and boundary conditions (would that work?), but I wanted to try it with DiffEqOperators. Short code snippet in thread.\n\n```ERROR: LoadError: MethodError: no method matching RobinBC(::Tuple{Float64,Float64,ReverseDiff.TrackedReal{Float64,Float64,Nothing}}, ::Tuple{Float64,Float64,Float64}, ::Float64, ::Int64)```","user":"U0138UTB7A4","ts":"1615586817.230200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"345z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm getting an error when I try to optimize a neural network inside a PDE. I'm using DiffEqOperators.jl, and I'm getting "},{"type":"text","text":"Method Error","style":{"code":true}},{"type":"text","text":"s when I try to do the gradient/automatic differentiation. I'm not sure what I'm doing wrong with the types when doing the AD. Alternatively, I could just define my own laplacian and boundary conditions (would that work?), but I wanted to try it with DiffEqOperators. Short code snippet in thread.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: LoadError: MethodError: no method matching RobinBC(::Tuple{Float64,Float64,ReverseDiff.TrackedReal{Float64,Float64,Nothing}}, ::Tuple{Float64,Float64,Float64}, ::Float64, ::Int64)"}]}]}],"thread_ts":"1615586817.230200","reply_count":8,"reply_users_count":2,"latest_reply":"1615587068.232000","reply_users":["U0138UTB7A4","U69BL50BF"],"subscribed":false},{"client_msg_id":"aa84e792-ca22-4d21-b618-845cc74815b2","type":"message","text":"```    function step_with_NN!(du,u,p,t)\n        NN_generated_local_speed_coefs = re(p)(domain_x')[1, :] .^ 2\n        # Left hand is Neumann0BC, and right hand is moving\n        # Should be exactly same BC as above\n        bc = RobinBC((1.0, 0.0, 1*gaussian(t, 3, 1)), (0.0, 1.0, 0.0),  h, 2)\n    \n        x = @view u[:, 1]\n        v = @view u[:, 2]\n\n        du[:, 1] = v\n        du[:, 2] = NN_generated_local_speed_coefs*Δ*bc*x\n    end\n\n        prob_NN = ODEProblem(step_with_NN!, u0, (t0, t1), p=NN_params)\n        sol_NN = solve(prob_NN, p=NN_params, sensalg=ReverseDiffAdjoint(), saveat=t0:1:t1)```","user":"U0138UTB7A4","ts":"1615586878.230300","team":"T68168MUP","edited":{"user":"U0138UTB7A4","ts":"1615586960.000000"},"blocks":[{"type":"rich_text","block_id":"qbkA","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    function step_with_NN!(du,u,p,t)\n        NN_generated_local_speed_coefs = re(p)(domain_x')[1, :] .^ 2\n        # Left hand is Neumann0BC, and right hand is moving\n        # Should be exactly same BC as above\n        bc = RobinBC((1.0, 0.0, 1*gaussian(t, 3, 1)), (0.0, 1.0, 0.0),  h, 2)\n    \n        x = @view u[:, 1]\n        v = @view u[:, 2]\n\n        du[:, 1] = v\n        du[:, 2] = NN_generated_local_speed_coefs*Δ*bc*x\n    end\n\n        prob_NN = ODEProblem(step_with_NN!, u0, (t0, t1), p=NN_params)\n        sol_NN = solve(prob_NN, p=NN_params, sensalg=ReverseDiffAdjoint(), saveat=t0:1:t1)"}]}]}],"thread_ts":"1615586817.230200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"66306456-f937-4274-8440-0c08d4d1f2de","type":"message","text":"Something like above. I get LoadError with `RobinBC`, and with the `Δ`  (which is a CenteredDifference from DiffEqOperators)","user":"U0138UTB7A4","ts":"1615586882.230500","team":"T68168MUP","edited":{"user":"U0138UTB7A4","ts":"1615586945.000000"},"blocks":[{"type":"rich_text","block_id":"U=+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Something like above. I get LoadError with "},{"type":"text","text":"RobinBC","style":{"code":true}},{"type":"text","text":", and with the "},{"type":"text","text":"Δ","style":{"code":true}},{"type":"text","text":"  (which is a CenteredDifference from DiffEqOperators)"}]}]}],"thread_ts":"1615586817.230200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"e30c1d8c-146e-4327-8003-0819102dabad","type":"message","text":"I'm not sure it will currently work with DiffEqOperators. Hadn't thought about it before, but I think it's mutating too much. It's worth an issue.","user":"U69BL50BF","ts":"1615586958.230900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XDiKo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure it will currently work with DiffEqOperators. Hadn't thought about it before, but I think it's mutating too much. It's worth an issue."}]}]}],"thread_ts":"1615586817.230200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"7abd380a-ae09-40d8-883d-fe8002473aa1","type":"message","text":"Ah ok, no worries. What would you recommend","user":"U0138UTB7A4","ts":"1615586987.231200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rcCos","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah ok, no worries. What would you recommend"}]}]}],"thread_ts":"1615586817.230200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"9140c319-3dba-4def-bf7b-7eea81c007bd","type":"message","text":"Something like making my own stencil/doing all the operations myself without DiffEqOperators?","user":"U0138UTB7A4","ts":"1615587030.231400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hAe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Something like making my own stencil/doing all the operations myself without DiffEqOperators?"}]}]}],"thread_ts":"1615586817.230200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"6ac30e77-60fb-4ec8-bad3-d85ac593b17e","type":"message","text":"(I'll try to clean it up and raise an issue)","user":"U0138UTB7A4","ts":"1615587043.231600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e3W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I'll try to clean it up and raise an issue)"}]}]}],"thread_ts":"1615586817.230200","parent_user_id":"U0138UTB7A4","reactions":[{"name":"thankyou","users":["U01FARY7Q13"],"count":1}]},{"client_msg_id":"06888acd-ed0f-4aac-bc20-0d5d10ae3266","type":"message","text":"yeah","user":"U69BL50BF","ts":"1615587046.231800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fHVG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah"}]}]}],"thread_ts":"1615586817.230200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"eba01121-8a8a-4106-ac85-70adbbf3c5f5","type":"message","text":"Thank you! Sounds good","user":"U0138UTB7A4","ts":"1615587068.232000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IZqgf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you! Sounds good"}]}]}],"thread_ts":"1615586817.230200","parent_user_id":"U0138UTB7A4"}]