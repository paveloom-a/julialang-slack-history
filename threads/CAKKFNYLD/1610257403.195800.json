[{"client_msg_id":"a26626b3-7813-4fc0-8253-e7f56f17df1d","type":"message","text":"Hi all, I had mentioned way back that I was going to make a PyCall wrapper for Hail (<http://hail.is>) and I’m finally finding time to do it. I have one quick style question for you all. In hail you can read in a vcf file into a MatrixTable, let’s call it mt, and then print out information about it with `mt.describe`, `mt.show`, and so on. Those functions all work fine on the PyObject in PyCall, but I was thinking it might be better style to wrap them in function to make them more Julia-like. For example, PyHail.describe(mt). Any thoughts?","user":"USBRJS6BU","ts":"1610257403.195800","team":"T68168MUP","attachments":[{"title":"Hail |  Index ","title_link":"http://hail.is/","text":"Hail Index Page","fallback":"Hail |  Index ","from_url":"http://hail.is/","service_icon":"https://hail.is/hail_logo_sq-sm-opt.ico","service_name":"hail.is","id":1,"original_url":"http://hail.is"}],"blocks":[{"type":"rich_text","block_id":"/TW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all, I had mentioned way back that I was going to make a PyCall wrapper for Hail ("},{"type":"link","url":"http://hail.is"},{"type":"text","text":") and I’m finally finding time to do it. I have one quick style question for you all. In hail you can read in a vcf file into a MatrixTable, let’s call it mt, and then print out information about it with "},{"type":"text","text":"mt.describe","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"mt.show","style":{"code":true}},{"type":"text","text":", and so on. Those functions all work fine on the PyObject in PyCall, but I was thinking it might be better style to wrap them in function to make them more Julia-like. For example, PyHail.describe(mt). Any thoughts?"}]}]}],"thread_ts":"1610257403.195800","reply_count":9,"reply_users_count":2,"latest_reply":"1610321216.197800","reply_users":["USU9FRPEU","USBRJS6BU"],"subscribed":false},{"client_msg_id":"e80e7354-6f00-4147-872d-8e9635c3320b","type":"message","text":"Sure you and might even export them.","user":"USU9FRPEU","ts":"1610317152.196000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2erX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure you and might even export them."}]}]}],"thread_ts":"1610257403.195800","parent_user_id":"USBRJS6BU"},{"client_msg_id":"04f41130-40dd-4e63-91da-e6ff6ffe0b11","type":"message","text":"Show is going to overload `Base.show` maybe... but you might want to look into what that means with regard to `Base.display`","user":"USU9FRPEU","ts":"1610317179.196200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Nf5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Show is going to overload "},{"type":"text","text":"Base.show","style":{"code":true}},{"type":"text","text":" maybe... but you might want to look into what that means with regard to "},{"type":"text","text":"Base.display","style":{"code":true}}]}]}],"thread_ts":"1610257403.195800","parent_user_id":"USBRJS6BU"},{"client_msg_id":"bba6f3c8-98c0-4511-a4af-edfb2e410627","type":"message","text":"<https://docs.julialang.org/en/v1/base/io-network/#Base.Multimedia.display>","user":"USU9FRPEU","ts":"1610317208.196400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rB8","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://docs.julialang.org/en/v1/base/io-network/#Base.Multimedia.display"}]}]}],"thread_ts":"1610257403.195800","parent_user_id":"USBRJS6BU"},{"client_msg_id":"8f3071d6-ab96-40eb-aafe-0e80e7460b3b","type":"message","text":"Also you might want to look into FileIO <https://github.com/JuliaIO/FileIO.jl>","user":"USU9FRPEU","ts":"1610317238.196600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gPp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also you might want to look into FileIO "},{"type":"link","url":"https://github.com/JuliaIO/FileIO.jl"}]}]}],"thread_ts":"1610257403.195800","parent_user_id":"USBRJS6BU"},{"client_msg_id":"dd19078e-519c-4b5e-8bbf-04ccac62045d","type":"message","text":"So one could just call `load(\"somefile.vcf\")`","user":"USU9FRPEU","ts":"1610317262.196800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n7LPt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So one could just call "},{"type":"text","text":"load(\"somefile.vcf\")","style":{"code":true}}]}]}],"thread_ts":"1610257403.195800","parent_user_id":"USBRJS6BU"},{"client_msg_id":"62e275cd-a738-414f-bf3b-d2db36bec058","type":"message","text":"I see that Hail also uses Java. I'm a bit interested on how that integration works since I've had to put some work into making Julia and Java work together. It gets difficult as one starts getting into Julia multitasking. You should see if your command still work under `@async`","user":"USU9FRPEU","ts":"1610317342.197000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B5t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see that Hail also uses Java. I'm a bit interested on how that integration works since I've had to put some work into making Julia and Java work together. It gets difficult as one starts getting into Julia multitasking. You should see if your command still work under "},{"type":"text","text":"@async","style":{"code":true}}]}]}],"thread_ts":"1610257403.195800","parent_user_id":"USBRJS6BU"},{"client_msg_id":"8374dc6e-7bf9-4bf6-99bb-fbab27c5c770","type":"message","text":"I’m not entirely sure how the Python/Java integration works in Hail. It’s something I’ve not worked with before.\n\nI’ll be sure to read up on `Base.show` and `Base.display`.\n\nAs far as FileIO is concerned, do you know what the preferred style is in Julia? For example, Hail can load in all sorts of file types, but each type can only be read in exclusively as either a MatrixTable or Table. Do you think I should be using multiple dispatch with a `load` function, or should I be wrapping each individual import function separately?","user":"USBRJS6BU","ts":"1610321040.197200","team":"T68168MUP","edited":{"user":"USBRJS6BU","ts":"1610321119.000000"},"blocks":[{"type":"rich_text","block_id":"NS//h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m not entirely sure how the Python/Java integration works in Hail. It’s something I’ve not worked with before.\n\nI’ll be sure to read up on "},{"type":"text","text":"Base.show","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Base.display","style":{"code":true}},{"type":"text","text":".\n\nAs far as FileIO is concerned, do you know what the preferred style is in Julia? For example, Hail can load in all sorts of file types, but each type can only be read in exclusively as either a MatrixTable or Table. Do you think I should be using multiple dispatch with a "},{"type":"text","text":"load","style":{"code":true}},{"type":"text","text":" function, or should I be wrapping each individual import function separately?"}]}]}],"thread_ts":"1610257403.195800","parent_user_id":"USBRJS6BU"},{"client_msg_id":"49c2255f-e5df-4f51-a479-cb36af88f639","type":"message","text":"If you look at the Genetics section on this page that question will probably make more sense: <https://hail.is/docs/0.2/methods/impex.html>","user":"USBRJS6BU","ts":"1610321076.197400","team":"T68168MUP","attachments":[{"title":"Hail |  Import / Export ","title_link":"https://hail.is/docs/0.2/methods/impex.html","text":"Import / Export","fallback":"Hail |  Import / Export ","from_url":"https://hail.is/docs/0.2/methods/impex.html","service_icon":"https://hail.is/hail_logo_sq-sm-opt.ico","service_name":"hail.is","id":1,"original_url":"https://hail.is/docs/0.2/methods/impex.html"}],"blocks":[{"type":"rich_text","block_id":"We5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you look at the Genetics section on this page that question will probably make more sense: "},{"type":"link","url":"https://hail.is/docs/0.2/methods/impex.html"}]}]}],"thread_ts":"1610257403.195800","parent_user_id":"USBRJS6BU"},{"client_msg_id":"76d0c737-ef20-4c72-a6d1-8e95615390c5","type":"message","text":"I feel like multiple dispatch would be more consistent with the rest of the ecosystem, I’m just not sure how much these sorts of PyCall projects typically deviate from the original API.","user":"USBRJS6BU","ts":"1610321216.197800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"INlBA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel like multiple dispatch would be more consistent with the rest of the ecosystem, I’m just not sure how much these sorts of PyCall projects typically deviate from the original API."}]}]}],"thread_ts":"1610257403.195800","parent_user_id":"USBRJS6BU"}]