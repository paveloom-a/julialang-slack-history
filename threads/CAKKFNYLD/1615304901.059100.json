[{"client_msg_id":"57a57677-b115-4e3a-ad62-5df988e2d157","type":"message","text":"Small brag (because I'm so excited!):\nLast night I finished writing pairwise FST calculations in PopGen.jl and benchmarked it against the same implementation in R's `hierfstat`. On the mid-sized SNP dataset I use (212 samples x 2209 loci), my version is 170x faster on a single thread, 248x faster on 4 threads :raised_hands::skin-tone-4:","user":"UM4TSHKF1","ts":"1615304901.059100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KoJCK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Small brag (because I'm so excited!):\nLast night I finished writing pairwise FST calculations in PopGen.jl and benchmarked it against the same implementation in R's "},{"type":"text","text":"hierfstat","style":{"code":true}},{"type":"text","text":". On the mid-sized SNP dataset I use (212 samples x 2209 loci), my version is 170x faster on a single thread, 248x faster on 4 threads "},{"type":"emoji","name":"raised_hands","skin_tone":4}]}]}],"thread_ts":"1615304901.059100","reply_count":26,"reply_users_count":3,"latest_reply":"1615308424.068700","reply_users":["U7HAYKY9X","U8JP5B9T2","UM4TSHKF1"],"subscribed":false,"reactions":[{"name":"fast_parrot","users":["U7HAYKY9X","U8JP5B9T2","UCAFZ51L3","U01QUMZP9MF","U01FAHWCMFF"],"count":5},{"name":"tada","users":["U7HAYKY9X","U8JP5B9T2","U01QUMZP9MF"],"count":3}]},{"client_msg_id":"f9dab4e6-78e1-4eb7-83c1-93b33309e2bf","type":"message","text":"Damn that is one beautiful documentation page","user":"U7HAYKY9X","ts":"1615305111.059600","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1615305117.000000"},"blocks":[{"type":"rich_text","block_id":"DsK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Damn that is one beautiful documentation page"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1","reactions":[{"name":"relaxed","users":["UM4TSHKF1"],"count":1}]},{"client_msg_id":"1e31f8b7-3925-4c6c-8e5c-2b60118fa06b","type":"message","text":"That's amazing! How long do such calculations usually take","user":"U8JP5B9T2","ts":"1615305129.059900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T3J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's amazing! How long do such calculations usually take"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"d36616a0-92da-4750-a2da-a7fb359929bf","type":"message","text":"Needs moar Automa for that sweet IO performance though","user":"U7HAYKY9X","ts":"1615305318.060100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7ev","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Needs moar Automa for that sweet IO performance though"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"8f2f3779-1569-4f80-9649-b60ec415c264","type":"message","text":"<@U8JP5B9T2> idk, hard to say. hierfstat is written in R, so it's not exactly performant as something like `poppr` might be, which is Rcpp. But, people really commonly use `hierfstat` or `adegenet`, so I think it's a fair comparison. The data in R took ~200s to do the calc, as a frame of reference.","user":"UM4TSHKF1","ts":"1615305537.060400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6bz","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8JP5B9T2"},{"type":"text","text":" idk, hard to say. hierfstat is written in R, so it's not exactly performant as something like "},{"type":"text","text":"poppr","style":{"code":true}},{"type":"text","text":" might be, which is Rcpp. But, people really commonly use "},{"type":"text","text":"hierfstat","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"adegenet","style":{"code":true}},{"type":"text","text":", so I think it's a fair comparison. The data in R took ~200s to do the calc, as a frame of reference."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"70ab3917-ffde-4ffe-982c-fee7ffe8d6e8","type":"message","text":"That's what I was wondering - is this a seconds, minutes, or hours type of thing.","user":"U8JP5B9T2","ts":"1615305583.060900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UTU8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's what I was wondering - is this a seconds, minutes, or hours type of thing."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"b5d22d0f-1416-478a-9777-57516d371c03","type":"message","text":"Minutes-to-hours kinda thing. I haven't done any significance testing yet, but that would explode the run time b/c of bootstrapping, so the R method would (comparatively) be a crawl on the order of hours, likely.","user":"UM4TSHKF1","ts":"1615305653.061100","team":"T68168MUP","edited":{"user":"UM4TSHKF1","ts":"1615305698.000000"},"blocks":[{"type":"rich_text","block_id":"IK4X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Minutes-to-hours kinda thing. I haven't done any significance testing yet, but that would explode the run time b/c of bootstrapping, so the R method would (comparatively) be a crawl on the order of hours, likely."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"adcaa213-9816-4a08-855a-04d23ae4794e","type":"message","text":"Nice!","user":"U8JP5B9T2","ts":"1615305712.062000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UInzP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice!"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"40ec2912-8422-4b04-b1fd-a276e8412e13","type":"message","text":"<@U7HAYKY9X> where do you think automa would be useful? I use CSV.jl for delim, structure, and genepop files, and GeneticVariations.jl (which uses Automa, right?) for vcf/bcf parsing.","user":"UM4TSHKF1","ts":"1615305791.062600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"paZ4","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" where do you think automa would be useful? I use CSV.jl for delim, structure, and genepop files, and GeneticVariations.jl (which uses Automa, right?) for vcf/bcf parsing."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"2411d1d2-739a-48d6-886f-756e196b0b77","type":"message","text":"I was thinking genepop files - didn't see you used CSV.jl.","user":"U7HAYKY9X","ts":"1615305905.062900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VggU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was thinking genepop files - didn't see you used CSV.jl."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"8afe1184-1904-40a6-a1aa-f590f1d0d5db","type":"message","text":"When I wrote the importers, I realized genepop files are really just annoying-but-convenient CSV's. Do you think there would be a benefit to using Automa for it instead? Also, the Automa docs are really above my head. I might need to invest more in understanding \"states\"","user":"UM4TSHKF1","ts":"1615305995.064100","team":"T68168MUP","edited":{"user":"UM4TSHKF1","ts":"1615306017.000000"},"blocks":[{"type":"rich_text","block_id":"n4/N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When I wrote the importers, I realized genepop files are really just annoying-but-convenient CSV's. Do you think there would be a benefit to using Automa for it instead? Also, the Automa docs are really above my head. I might need to invest more in understanding \"states\""}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"d23ca4e0-714f-4160-b473-8f01dd5039a6","type":"message","text":"Of course there is more to it - CSV is good at \"magically\" figuring out the correct type from input data, whereas Automa needs something more pinned down. I'm not sure where genepop/structure files lie on that spectrim","user":"U7HAYKY9X","ts":"1615306006.064300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h9L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Of course there is more to it - CSV is good at \"magically\" figuring out the correct type from input data, whereas Automa needs something more pinned down. I'm not sure where genepop/structure files lie on that spectrim"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"a15d10be-0fdb-4816-bb94-00d9175b9e8f","type":"message","text":"If you pop out the `POP` lines in a genepop file, they are just a basic delimited file, with the added exception the colnames might be a super-long header","user":"UM4TSHKF1","ts":"1615306099.064800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qYcb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you pop out the "},{"type":"text","text":"POP","style":{"code":true}},{"type":"text","text":" lines in a genepop file, they are just a basic delimited file, with the added exception the colnames might be a super-long header"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"52f10dce-dd9b-4837-bd2f-977a014a3ebc","type":"message","text":"The benefit is that Automa is really fast, and that it's rigid (i.e. the input format must match EXACTLY the stated regular expressions). The latter can be a benefit or a detriment.","user":"U7HAYKY9X","ts":"1615306105.065000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A6UoS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The benefit is that Automa is really fast, and that it's rigid (i.e. the input format must match EXACTLY the stated regular expressions). The latter can be a benefit or a detriment."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"c1489645-397a-47a7-b113-92dcc95a0720","type":"message","text":"For kicks, I might play around with Automa on genepops and see what I can understand from it. Expect questions!","user":"UM4TSHKF1","ts":"1615306200.065300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/1DDc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For kicks, I might play around with Automa on genepops and see what I can understand from it. Expect questions!"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1","reactions":[{"name":"100","users":["U7HAYKY9X"],"count":1},{"name":"heart","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"3a729a89-1d48-4e0d-9122-7fece9662666","type":"message","text":"<@UM4TSHKF1> I recommend you start here: <https://biojulia.net/post/automa1/>","user":"U7HAYKY9X","ts":"1615306240.065700","team":"T68168MUP","attachments":[{"service_name":"BioJulia","title":"Tutorial to Automa: Part 1 | BioJulia","title_link":"https://biojulia.net/post/automa1/","text":"Find this notebook at <https://github.com/jakobnissen/automa_tutorial> In bioinformatics, we have a saying: The first step of any bioinformatics project is to define a new file format, incompatible with all previous ones. The situation might not be quite as bad as the saying implies, but it is true that we have a lot of different file formats, representing the various kinds of data we work with. For that reason, creating file parsers is a central task in bioinformatics, and has almost become a craft in itself.","fallback":"BioJulia: Tutorial to Automa: Part 1 | BioJulia","thumb_url":"https://BioJulia.github.io/images/logo_huf2e28fc1e802707079b8e0ffee62f4dc_19447_300x300_fit_lanczos_2.png","ts":1598797689,"from_url":"https://biojulia.net/post/automa1/","thumb_width":300,"thumb_height":300,"service_icon":"https://biojulia.net/images/icon_huf2e28fc1e802707079b8e0ffee62f4dc_19447_192x192_fill_lanczos_center_2.png","id":1,"original_url":"https://biojulia.net/post/automa1/"}],"blocks":[{"type":"rich_text","block_id":"PbjUY","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UM4TSHKF1"},{"type":"text","text":" I recommend you start here: "},{"type":"link","url":"https://biojulia.net/post/automa1/"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1","reactions":[{"name":"100","users":["U8JP5B9T2","UCAFZ51L3"],"count":2}]},{"client_msg_id":"7b91202d-e7a4-4a72-9f9e-0e7a18eb8187","type":"message","text":"<@U7HAYKY9X> thanks! I've thought about trying Automa so many times. I thought it would be great to split out the IO stuff in PopGen.jl into PopGenIO.jl or something like that","user":"UM4TSHKF1","ts":"1615306310.065900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M+4","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" thanks! I've thought about trying Automa so many times. I thought it would be great to split out the IO stuff in PopGen.jl into PopGenIO.jl or something like that"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"5ea4b713-a158-4eb7-aaa2-2f415f4e9f5b","type":"message","text":"I found <@U7HAYKY9X>’s tutorial super helpful, but automa is still quite challenging to wrap your head around. I still want to make a Genbank parser at some point, but I'll need to get a lot more comfortable with debugging the machines automa generates.","user":"U8JP5B9T2","ts":"1615307065.066500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5ieA+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I found "},{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":"’s tutorial super helpful, but automa is still quite challenging to wrap your head around. I still want to make a Genbank parser at some point, but I'll need to get a lot more comfortable with debugging the machines automa generates."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"6febdc6b-0794-432a-b65b-7f381f620904","type":"message","text":"Ideally, it could use a better interface. Not sure what that would look like, exactly.","user":"U7HAYKY9X","ts":"1615307283.067100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"giLZ1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ideally, it could use a better interface. Not sure what that would look like, exactly."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"93879d68-d1e8-40b9-a6dd-b97e2934c489","type":"message","text":"Also, brave to begin by writing a GenBank parser, that sounds like a terribly difficult thing to do","user":"U7HAYKY9X","ts":"1615307623.067300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1vr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, brave to begin by writing a GenBank parser, that sounds like a terribly difficult thing to do"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"c0b662b2-5fc9-4239-aebe-d5e10029c3cd","type":"message","text":"Yeah, me neither, or I would have opened issues. I think my problem is that, if I run into errors, it's really hard to figure out where they came from.\n\nI fancy myself really good at regular expressions, but the combination of lots of regular expressions and the states they create over a whole file is much harder. Some utility that could step through a given string and highlight the states or something would be the most helpful, but also seems pretty complicated","user":"U8JP5B9T2","ts":"1615307760.067500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tHk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, me neither, or I would have opened issues. I think my problem is that, if I run into errors, it's really hard to figure out where they came from.\n\nI fancy myself really good at regular expressions, but the combination of lots of regular expressions and the states they create over a whole file is much harder. Some utility that could step through a given string and highlight the states or something would be the most helpful, but also seems pretty complicated"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"700e1ed4-75ad-4500-b3a9-8b51aa37d709","type":"message","text":"The main issue is that Automa optimizes the graph to minimize the number of states, so there is not always a clear 1:1 correspondance between regex and state.\nBut maybe there is still some way to make a nice debugger for it","user":"U7HAYKY9X","ts":"1615307915.067700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HKs1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The main issue is that Automa optimizes the graph to minimize the number of states, so there is not always a clear 1:1 correspondance between regex and state.\nBut maybe there is still some way to make a nice debugger for it"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"321213ca-58fc-43f5-8f08-0ca28c3fe398","type":"message","text":"There is actually a debug mode already that prints what it's doing. Let me try to make a MWE","user":"U7HAYKY9X","ts":"1615307955.067900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VUvx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is actually a debug mode already that prints what it's doing. Let me try to make a MWE"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"195748f8-aace-4fa2-baeb-46958302a5af","type":"message","text":"That would be amazing.","user":"U8JP5B9T2","ts":"1615307964.068100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+uBZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That would be amazing."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"2a6ecfbd-8198-4df5-9f04-91fc3ea4c61d","type":"message","text":"Genbank is _rough_, but it was the first format I really dug into when I started coding, and I've been thinking it would be fun to re-write my <https://github.com/DuttonLab/kvasir|first ever> package in julia, knowing what I know now.\n\nPlus, there's a guy over on ubioinfo that said he would give julia a shot if there were a good genbank parser. That was like a year ago, so I don't know if I can hold him to it, but I really want to see if we could beat BioPython... I'm guessing we could","user":"U8JP5B9T2","ts":"1615308018.068300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mxD04","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Genbank is "},{"type":"text","text":"rough","style":{"italic":true}},{"type":"text","text":", but it was the first format I really dug into when I started coding, and I've been thinking it would be fun to re-write my "},{"type":"link","url":"https://github.com/DuttonLab/kvasir","text":"first ever"},{"type":"text","text":" package in julia, knowing what I know now.\n\nPlus, there's a guy over on ubioinfo that said he would give julia a shot if there were a good genbank parser. That was like a year ago, so I don't know if I can hold him to it, but I really want to see if we could beat BioPython... I'm guessing we could"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"d6da9e49-93e6-4a42-813f-90cda66b03ab","type":"message","text":"I remember that guy. I also remember thinking \"I'll just make a GenBank parser, how did that format go again? Oh... nevermind\".","user":"U7HAYKY9X","ts":"1615308415.068500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FJbqt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I remember that guy. I also remember thinking \"I'll just make a GenBank parser, how did that format go again? Oh... nevermind\"."}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"},{"client_msg_id":"56161e80-4908-46a8-b3ab-a62bc6a6a9f4","type":"message","text":"Lol, yeah","user":"U8JP5B9T2","ts":"1615308424.068700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LGxm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Lol, yeah"}]}]}],"thread_ts":"1615304901.059100","parent_user_id":"UM4TSHKF1"}]