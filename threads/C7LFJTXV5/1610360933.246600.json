[{"client_msg_id":"f67d1a43-41d4-4711-8d43-96b7e0df139a","type":"message","text":"Hi, I have changed activation functions in my models from `relu` to `sigmoid` and I save them into `.bson` which used to work with `relu` . Now, I am getting `typeof` error with sigmoid. Do not understand why. Thanks for any help. Error:\n\n```julia&gt; res = BSON.load(file_with_dictionary_results)\nERROR: MethodError: no method matching typeof(σ)()\nStacktrace:\n [1] (::BSON.var\"#37#38\")(::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:76\n [2] _raise_recursive(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:79\n [3] raise_recursive(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:89\n [4] (::BSON.var\"#39#40\"{IdDict{Any,Any}})(::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:124\n [5] iterate at ./generator.jl:47 [inlined]\n [6] collect_to!(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64, ::Int64) at ./array.jl:732\n [7] collect_to!(::Array{Real,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64, ::Int64) at ./array.jl:740 (repeats 3 times)\n [8] collect_to_with_first!(::Array{Int64,1}, ::Int64, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64) at ./array.jl:710\n [9] _collect(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:704\n [10] collect_similar(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}) at ./array.jl:628\n [11] map(::Function, ::Array{Any,1}) at ./abstractarray.jl:2162\n [12] newstruct_raw(::IdDict{Any,Any}, ::Type{T} where T, ::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:124\n [13] (::BSON.var\"#43#44\")(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:140\n [14] raise_recursive(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:88\n [15] (::BSON.var\"#21#22\"{IdDict{Any,Any}})(::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:94\n [16] applychildren!(::BSON.var\"#21#22\"{IdDict{Any,Any}}, ::Array{Any,1}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/BSON.jl:28\n [17] raise_recursive at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:94 [inlined]\n [18] (::BSON.var\"#39#40\"{IdDict{Any,Any}})(::Array{Any,1}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:124\n [19] iterate at ./generator.jl:47 [inlined]\n [20] collect_to!(::Array{Array{Any,1},1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64, ::Int64) at ./array.jl:732\n [21] collect_to_with_first!(::Array{Array{Any,1},1}, ::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64) at ./array.jl:710\n [22] _collect(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:704\n [23] collect_similar(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}) at ./array.jl:628\n [24] map(::Function, ::Array{Any,1}) at ./abstractarray.jl:2162\n [25] newstruct_raw(::IdDict{Any,Any}, ::Type{T} where T, ::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:124\n [26] (::BSON.var\"#43#44\")(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:140\n [27] raise_recursive(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:88\n [28] raise_recursive at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:99 [inlined]\n [29] load(::String) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:104\n [30] top-level scope at REPL[20]:1```","user":"UP345RMJR","ts":"1610360933.246600","team":"T68168MUP","edited":{"user":"UP345RMJR","ts":"1610360997.000000"},"blocks":[{"type":"rich_text","block_id":"PifXU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, I have changed activation functions in my models from "},{"type":"text","text":"relu","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"sigmoid","style":{"code":true}},{"type":"text","text":" and I save them into "},{"type":"text","text":".bson","style":{"code":true}},{"type":"text","text":" which used to work with "},{"type":"text","text":"relu","style":{"code":true}},{"type":"text","text":" . Now, I am getting "},{"type":"text","text":"typeof","style":{"code":true}},{"type":"text","text":" error with sigmoid. Do not understand why. Thanks for any help. Error:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> res = BSON.load(file_with_dictionary_results)\nERROR: MethodError: no method matching typeof(σ)()\nStacktrace:\n [1] (::BSON.var\"#37#38\")(::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:76\n [2] _raise_recursive(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:79\n [3] raise_recursive(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:89\n [4] (::BSON.var\"#39#40\"{IdDict{Any,Any}})(::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:124\n [5] iterate at ./generator.jl:47 [inlined]\n [6] collect_to!(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64, ::Int64) at ./array.jl:732\n [7] collect_to!(::Array{Real,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64, ::Int64) at ./array.jl:740 (repeats 3 times)\n [8] collect_to_with_first!(::Array{Int64,1}, ::Int64, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64) at ./array.jl:710\n [9] _collect(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:704\n [10] collect_similar(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}) at ./array.jl:628\n [11] map(::Function, ::Array{Any,1}) at ./abstractarray.jl:2162\n [12] newstruct_raw(::IdDict{Any,Any}, ::Type{T} where T, ::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:124\n [13] (::BSON.var\"#43#44\")(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:140\n [14] raise_recursive(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:88\n [15] (::BSON.var\"#21#22\"{IdDict{Any,Any}})(::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:94\n [16] applychildren!(::BSON.var\"#21#22\"{IdDict{Any,Any}}, ::Array{Any,1}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/BSON.jl:28\n [17] raise_recursive at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:94 [inlined]\n [18] (::BSON.var\"#39#40\"{IdDict{Any,Any}})(::Array{Any,1}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:124\n [19] iterate at ./generator.jl:47 [inlined]\n [20] collect_to!(::Array{Array{Any,1},1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64, ::Int64) at ./array.jl:732\n [21] collect_to_with_first!(::Array{Array{Any,1},1}, ::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Int64) at ./array.jl:710\n [22] _collect(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:704\n [23] collect_similar(::Array{Any,1}, ::Base.Generator{Array{Any,1},BSON.var\"#39#40\"{IdDict{Any,Any}}}) at ./array.jl:628\n [24] map(::Function, ::Array{Any,1}) at ./abstractarray.jl:2162\n [25] newstruct_raw(::IdDict{Any,Any}, ::Type{T} where T, ::Dict{Symbol,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:124\n [26] (::BSON.var\"#43#44\")(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/extensions.jl:140\n [27] raise_recursive(::Dict{Symbol,Any}, ::IdDict{Any,Any}) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:88\n [28] raise_recursive at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:99 [inlined]\n [29] load(::String) at /Users/luboshanus/.julia/packages/BSON/XAts7/src/read.jl:104\n [30] top-level scope at REPL[20]:1"}]}]}],"thread_ts":"1610360933.246600","reply_count":2,"reply_users_count":2,"latest_reply":"1610389325.247300","reply_users":["UP345RMJR","UAL8DLH7D"],"subscribed":false},{"client_msg_id":"6b01aa04-8859-4c1a-8710-223b65a53167","type":"message","text":"Or, don’t you know how to retrieve the rest of the data? I know I could do `BSON.parse` but then it is a large data/string mess.. Is there a way? Thanks a lot, it is a ton of results and computation time.","user":"UP345RMJR","ts":"1610364309.246900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YGDHB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or, don’t you know how to retrieve the rest of the data? I know I could do "},{"type":"text","text":"BSON.parse","style":{"code":true}},{"type":"text","text":" but then it is a large data/string mess.. Is there a way? Thanks a lot, it is a ton of results and computation time."}]}]}],"thread_ts":"1610360933.246600","parent_user_id":"UP345RMJR"},{"client_msg_id":"b9b94f01-5af3-4458-a00a-8b62a3815150","type":"message","text":"Is `sigmoid` defined in a `Module` ? Consider loading it before loading the results.","user":"UAL8DLH7D","ts":"1610389325.247300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SeU8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is "},{"type":"text","text":"sigmoid","style":{"code":true}},{"type":"text","text":" defined in a "},{"type":"text","text":"Module","style":{"code":true}},{"type":"text","text":" ? Consider loading it before loading the results."}]}]}],"thread_ts":"1610360933.246600","parent_user_id":"UP345RMJR"}]