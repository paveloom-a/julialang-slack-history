[{"client_msg_id":"e1179335-8215-40e3-b566-77c82ea11da6","type":"message","text":"hi guys, someone asked me at worked how does TF compares to Flux speed-wise. Is there like a comparison somewhere?","user":"U013V2CFZAN","ts":"1614719627.115900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ejd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi guys, someone asked me at worked how does TF compares to Flux speed-wise. Is there like a comparison somewhere?"}]}]}],"thread_ts":"1614719627.115900","reply_count":1,"reply_users_count":1,"latest_reply":"1614754513.118200","reply_users":["U6YRZ18GZ"],"subscribed":false},{"client_msg_id":"abbcce5b-705d-4bfc-9751-863282d80fac","type":"message","text":"I would say that it really depends on the problem. If your input are tensors of fixed size, TF would be faster, because it was designed for this. It can do plenty of tricks Julia cannot do, like compiling kernels for a given size, preallocating and reusing memory buffers. Julia’s advantage will be on problems for which TF was not designed, where the input will be very different sample to smaple/","user":"U6YRZ18GZ","ts":"1614754513.118200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OZ9tt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would say that it really depends on the problem. If your input are tensors of fixed size, TF would be faster, because it was designed for this. It can do plenty of tricks Julia cannot do, like compiling kernels for a given size, preallocating and reusing memory buffers. Julia’s advantage will be on problems for which TF was not designed, where the input will be very different sample to smaple/"}]}]}],"thread_ts":"1614719627.115900","parent_user_id":"U013V2CFZAN"}]