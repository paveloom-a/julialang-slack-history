[{"client_msg_id":"833cc011-1788-439b-81b3-7ce9ae411b9e","type":"message","text":"I'm trying to implement word2vec with Flux (thought it shouldn't be too hard), but am having some performance issues around what gradients are being calculated. Any suggestions would be greatly appreciated!\n<https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201>","user":"U01KGUEEBJA","ts":"1613214975.106700","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"How to implement embeddings in Flux that aren't tragically slow?","title_link":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201","text":"I have recently started learning Julia and Flux for machine learning. I am trying to implement word2vec as a starting point, but the gradient calculations slow down dramatically with larger vocabulary sizes. With negative sampling, each iteration should be independent of the vocabulary size. I use two custom layers: struct Embedding W::Array{Float32,2} end Embedding(vocab_size::Integer, embedding_size::Integer) = Embedding(randn(vocab_size, embedding_size)) @functor Embedding (m::Embedding...","fallback":"JuliaLang: How to implement embeddings in Flux that aren't tragically slow?","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1613212736,"from_url":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201"}],"blocks":[{"type":"rich_text","block_id":"GtmIT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm trying to implement word2vec with Flux (thought it shouldn't be too hard), but am having some performance issues around what gradients are being calculated. Any suggestions would be greatly appreciated!\n"},{"type":"link","url":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201"}]}]}],"thread_ts":"1613214975.106700","reply_count":5,"reply_users_count":2,"latest_reply":"1613218341.107900","reply_users":["UD0NS8PDF","U01KGUEEBJA"],"subscribed":false},{"client_msg_id":"7e27cda8-481d-487a-be89-b7bd4d6ac847","type":"message","text":"The big reason this is slow is that the gradient for `getindex(x, :, i)`, which makes those slices, allocates a whole new `similar(x)` every time. I think what you want to do is to find ways to write it in terms of solid arrays, not slices.","user":"UD0NS8PDF","ts":"1613217442.106900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hKNzB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The big reason this is slow is that the gradient for "},{"type":"text","text":"getindex(x, :, i)","style":{"code":true}},{"type":"text","text":", which makes those slices, allocates a whole new "},{"type":"text","text":"similar(x)","style":{"code":true}},{"type":"text","text":" every time. I think what you want to do is to find ways to write it in terms of solid arrays, not slices."}]}]}],"thread_ts":"1613214975.106700","parent_user_id":"U01KGUEEBJA"},{"client_msg_id":"5377e407-1746-42ed-b0c6-5bf73d5ceda7","type":"message","text":"Things like `Wx[[1,2,5,8], :]` will be better, as that’s one call, but I think that the gradient for `Wx[[1,2,1,2], :]` with repeats may have problems, e.g. <https://discourse.julialang.org/t/increment-elements-of-array-by-index/49694> maybe only on GPU","user":"UD0NS8PDF","ts":"1613217565.107100","team":"T68168MUP","edited":{"user":"UD0NS8PDF","ts":"1613217571.000000"},"blocks":[{"type":"rich_text","block_id":"gX8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Things like "},{"type":"text","text":"Wx[[1,2,5,8], :]","style":{"code":true}},{"type":"text","text":" will be better, as that’s one call, but I think that the gradient for "},{"type":"text","text":"Wx[[1,2,1,2], :]","style":{"code":true}},{"type":"text","text":" with repeats may have problems, e.g. "},{"type":"link","url":"https://discourse.julialang.org/t/increment-elements-of-array-by-index/49694"},{"type":"text","text":" maybe only on GPU"}]}]}],"thread_ts":"1613214975.106700","parent_user_id":"U01KGUEEBJA"},{"client_msg_id":"d4d48de3-8200-472d-ad69-116c561d7d85","type":"message","text":"You may want to follow this PR <https://github.com/FluxML/NNlib.jl/pull/255>","user":"UD0NS8PDF","ts":"1613217689.107500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sF7FQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You may want to follow this PR "},{"type":"link","url":"https://github.com/FluxML/NNlib.jl/pull/255"}]}]}],"thread_ts":"1613214975.106700","parent_user_id":"U01KGUEEBJA"},{"client_msg_id":"06b64394-0e1b-4971-a351-9703f5f55042","type":"message","text":"I think Tullio also handles scatter/gather correctly now, it should be careful not to multi-thread unsafely.","user":"UD0NS8PDF","ts":"1613217768.107700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H9o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think Tullio also handles scatter/gather correctly now, it should be careful not to multi-thread unsafely."}]}]}],"thread_ts":"1613214975.106700","parent_user_id":"U01KGUEEBJA"},{"client_msg_id":"a9e16dc9-3612-44ee-9691-6c7d27395975","type":"message","text":"thank you, I'll take a look at those links","user":"U01KGUEEBJA","ts":"1613218341.107900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D2j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you, I'll take a look at those links"}]}]}],"thread_ts":"1613214975.106700","parent_user_id":"U01KGUEEBJA"}]