[{"client_msg_id":"833cc011-1788-439b-81b3-7ce9ae411b9e","type":"message","text":"I'm trying to implement word2vec with Flux (thought it shouldn't be too hard), but am having some performance issues around what gradients are being calculated. Any suggestions would be greatly appreciated!\n<https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201>","user":"U01KGUEEBJA","ts":"1613214975.106700","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"How to implement embeddings in Flux that aren't tragically slow?","title_link":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201","text":"I have recently started learning Julia and Flux for machine learning. I am trying to implement word2vec as a starting point, but the gradient calculations slow down dramatically with larger vocabulary sizes. With negative sampling, each iteration should be independent of the vocabulary size. I use two custom layers: struct Embedding W::Array{Float32,2} end Embedding(vocab_size::Integer, embedding_size::Integer) = Embedding(randn(vocab_size, embedding_size)) @functor Embedding (m::Embedding...","fallback":"JuliaLang: How to implement embeddings in Flux that aren't tragically slow?","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1613212736,"from_url":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201"}],"blocks":[{"type":"rich_text","block_id":"GtmIT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm trying to implement word2vec with Flux (thought it shouldn't be too hard), but am having some performance issues around what gradients are being calculated. Any suggestions would be greatly appreciated!\n"},{"type":"link","url":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201"}]}]}],"thread_ts":"1613214975.106700","reply_count":3,"reply_users_count":2,"latest_reply":"1613226337.111000","reply_users":["U01KGUEEBJA","UC4QQPG4A"],"subscribed":false},{"client_msg_id":"a9e16dc9-3612-44ee-9691-6c7d27395975","type":"message","text":"thank you, I'll take a look at those links","user":"U01KGUEEBJA","ts":"1613218341.107900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D2j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you, I'll take a look at those links"}]}]}],"thread_ts":"1613214975.106700","parent_user_id":"U01KGUEEBJA"},{"client_msg_id":"f2c9e279-81e1-48ab-8a06-b33f63be2df7","type":"message","text":"<https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201/2?u=dhairyagandhi96>","user":"UC4QQPG4A","ts":"1613225954.108500","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"How to implement embeddings in Flux that aren't tragically slow?","title_link":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201/2?u=dhairyagandhi96","text":"So part of the issue is using scalar semantics which lead to a bunch of extra copies, which would be inefficient in reverse mode (but good for Zygote.Forward). I have implemented a slightly modified version of the same, but I might have confused myself with some dimensions. using Flux, Flux.Zygote, Flux.Optimise using LinearAlgebra using Flux: @functor struct Embedding{T} W::T end Embedding(vocab_size::Integer, embedding_size::Integer) = Embedding(randn(Float32, embedding_size, vocab_siz...","fallback":"JuliaLang: How to implement embeddings in Flux that aren't tragically slow?","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1613225907,"from_url":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201/2?u=dhairyagandhi96","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201/2?u=dhairyagandhi96"}],"blocks":[{"type":"rich_text","block_id":"LJbr","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://discourse.julialang.org/t/how-to-implement-embeddings-in-flux-that-arent-tragically-slow/55201/2?u=dhairyagandhi96"}]}]}],"thread_ts":"1613214975.106700","parent_user_id":"U01KGUEEBJA"},{"client_msg_id":"7453da51-b756-421b-8b2a-75d359a3efcd","type":"message","text":"I prefer Flux to be fast. This doesn’t really have much to do with `getindex`, although that does need to be optimised. It is largely using scalar code gen.","user":"UC4QQPG4A","ts":"1613226337.111000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E64Cw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I prefer Flux to be fast. This doesn’t really have much to do with "},{"type":"text","text":"getindex","style":{"code":true}},{"type":"text","text":", although that does need to be optimised. It is largely using scalar code gen."}]}]}],"thread_ts":"1613214975.106700","parent_user_id":"U01KGUEEBJA"}]