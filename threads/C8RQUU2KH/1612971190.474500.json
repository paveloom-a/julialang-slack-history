[{"client_msg_id":"7e6cbff2-63ef-4f77-aa94-71de46e0734d","type":"message","text":"It would be cool if there was a variant of `autolimits!` called `growlimits!` that worked the same way but wouldn’t shrink the limits. Useful for plots that are being updated but you don’t know the full limits a priori.","user":"UH9KWTTD3","ts":"1612971190.474500","team":"T68168MUP","edited":{"user":"UH9KWTTD3","ts":"1612971241.000000"},"blocks":[{"type":"rich_text","block_id":"43R=4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It would be cool if there was a variant of "},{"type":"text","text":"autolimits!","style":{"code":true}},{"type":"text","text":" called "},{"type":"text","text":"growlimits!","style":{"code":true}},{"type":"text","text":" that worked the same way but wouldn’t shrink the limits. Useful for plots that are being updated but you don’t know the full limits a priori."}]}]}],"thread_ts":"1612971190.474500","reply_count":6,"reply_users_count":2,"latest_reply":"1613075324.005500","reply_users":["UK1BNFHFV","UH9KWTTD3"],"subscribed":false,"reactions":[{"name":"heart","users":["U7ZNTQFLH","UEP056STX"],"count":2}]},{"client_msg_id":"5B17B4BA-B8B1-4A9E-9952-FA0833D56C0E","type":"message","text":"You mean you would start with some reasonable values and would not want to shrink down to the actual limits of your plot but expand once they reach further?","user":"UK1BNFHFV","ts":"1613049688.480900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FZT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You mean you would start with some reasonable values and would not want to shrink down to the actual limits of your plot but expand once they reach further?"}]}]}],"thread_ts":"1612971190.474500","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"b3191832-a589-42ad-ab57-7c40a711e58b","type":"message","text":"Like currently I use callbacks in my program to update my observables as the code is running. I generally don’t know what the limits should be, but I call `autolimits!(axis)` in my callback so that the plot limits match the current data. But if the y range shrinks from iteration `i` to `i + 1`, then `autolimits!` would shrink the lims. In the `growlimits!` variant, it would only use the newly calculated limits if the range increased but ignore if it decreased.","user":"UH9KWTTD3","ts":"1613061468.496800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nLcsG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like currently I use callbacks in my program to update my observables as the code is running. I generally don’t know what the limits should be, but I call "},{"type":"text","text":"autolimits!(axis)","style":{"code":true}},{"type":"text","text":" in my callback so that the plot limits match the current data. But if the y range shrinks from iteration "},{"type":"text","text":"i","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"i + 1","style":{"code":true}},{"type":"text","text":", then "},{"type":"text","text":"autolimits!","style":{"code":true}},{"type":"text","text":" would shrink the lims. In the "},{"type":"text","text":"growlimits!","style":{"code":true}},{"type":"text","text":" variant, it would only use the newly calculated limits if the range increased but ignore if it decreased."}]}]}],"thread_ts":"1612971190.474500","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"8b3aaebe-1880-4fb4-995e-c28ba1565a46","type":"message","text":"Hopefully that makes sense","user":"UH9KWTTD3","ts":"1613061474.497000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u6VyS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hopefully that makes sense"}]}]}],"thread_ts":"1612971190.474500","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"E4B333FD-8DB0-4323-8DD2-D071FC00B9ED","type":"message","text":"I do understand what you want, but why is it undesirable that the limits shrink to the correct size? That's what I was trying to understand :)","user":"UK1BNFHFV","ts":"1613074669.002000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"px4A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I do understand what you want, but why is it undesirable that the limits shrink to the correct size? That's what I was trying to understand :)"}]}]}],"thread_ts":"1612971190.474500","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"9b826ce4-9f4e-4112-ac63-6f90ed9b33f6","type":"message","text":"Ah because ideally, for viewing the plot live, I would just set (ymin, ymax) as my limits. That way I can judge the relative difference iteration to iteration without needing to look at the numbers on the yaxis. But I don’t know (ymin, ymax) beforehand, and the y range on a particular run of this program has widely different ranges. So hardcoding overcompensated limits is usually too wide.","user":"UH9KWTTD3","ts":"1613075227.005300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qU9t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah because ideally, for viewing the plot live, I would just set (ymin, ymax) as my limits. That way I can judge the relative difference iteration to iteration without needing to look at the numbers on the yaxis. But I don’t know (ymin, ymax) beforehand, and the y range on a particular run of this program has widely different ranges. So hardcoding overcompensated limits is usually too wide."}]}]}],"thread_ts":"1612971190.474500","parent_user_id":"UH9KWTTD3"},{"client_msg_id":"79e9b0ec-3899-4a1a-b72c-a64b9860dc73","type":"message","text":"I want the limits to widen so I can see all the data when necessary but otherwise act as if I had hardcoded the limits. It’s a minor thing but has come up on several projects where having this function would make my life easier than figuring out the workaround for that project.","user":"UH9KWTTD3","ts":"1613075324.005500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uwq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I want the limits to widen so I can see all the data when necessary but otherwise act as if I had hardcoded the limits. It’s a minor thing but has come up on several projects where having this function would make my life easier than figuring out the workaround for that project."}]}]}],"thread_ts":"1612971190.474500","parent_user_id":"UH9KWTTD3"}]