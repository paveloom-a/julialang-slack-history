[{"client_msg_id":"e05a6a41-5940-4eab-8874-a9f5e89fa026","type":"message","text":"When making an animation in (GL)Makie, what are some recommended ways to clear the scene every frame? Is there a more idiomatic/nicer way to do it other than using `delete!(scene, scene.plots[1])` below?\n```scene = Scene(resolution=(1000, 1000), show_axis=false)\nrecord(scene, \"test.mp4\") do io\n    for t in range(0, 1, length=25)\n        if !isempty(scene.plots)\n            delete!(scene, scene.plots[1])\n        end\n        surface!(scene, 0:0.1:10, 0:0.1:10, (x,y) -&gt; rand())\n        update!(scene)\n        recordframe!(io)\n    end\nend```\n","user":"U0138UTB7A4","ts":"1617851462.266200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kX1a9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When making an animation in (GL)Makie, what are some recommended ways to clear the scene every frame? Is there a more idiomatic/nicer way to do it other than using "},{"type":"text","text":"delete!(scene, scene.plots[1])","style":{"code":true}},{"type":"text","text":" below?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"scene = Scene(resolution=(1000, 1000), show_axis=false)\nrecord(scene, \"test.mp4\") do io\n    for t in range(0, 1, length=25)\n        if !isempty(scene.plots)\n            delete!(scene, scene.plots[1])\n        end\n        surface!(scene, 0:0.1:10, 0:0.1:10, (x,y) -> rand())\n        update!(scene)\n        recordframe!(io)\n    end\nend"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617851462.266200","reply_count":7,"reply_users_count":2,"latest_reply":"1617894683.273100","reply_users":["UK1BNFHFV","U0138UTB7A4"],"is_locked":false,"subscribed":false},{"client_msg_id":"7AFF8BED-1267-494B-9B2B-CD7770FFD40F","type":"message","text":"Don’t create a new plot every frame, that's a makie antipattern <http://makie.juliaplots.org/stable/animation.html#Animations-Using-Observables|http://makie.juliaplots.org/stable/animation.html#Animations-Using-Observables>","user":"UK1BNFHFV","ts":"1617863093.267600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lZO7i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Don’t create a new plot every frame, that's a makie antipattern "},{"type":"link","url":"http://makie.juliaplots.org/stable/animation.html#Animations-Using-Observables","text":"http://makie.juliaplots.org/stable/animation.html#Animations-Using-Observables"}]}]}],"thread_ts":"1617851462.266200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"8e0a4db0-2cd8-4fb7-a6bc-8a65f5bcde53","type":"message","text":"Thank you! I saw this but I wasn't sure how using a `Node` would work with what I had. \n\nRight now I have a function `plot_mesh(a)` that creates u,v coordinates based on the parameter `a` (e.g. `u = range(0, a*pi, length=100)`), then takes the cartesian product of u,v arrays and maps it all to x,y,z using a 3D Klein bottle parametrization. With all the x,y,z values, it plots them using `surface!` \n\nSince the mesh creation has multiple steps I wasn't sure how use to Nodes with it. Now I'm thinking maybe something like `a = Node(0.0)` and   `u = @lift range(...)`, and maybe `@lift` for every line. Would that work or is there another recommended way?","user":"U0138UTB7A4","ts":"1617865009.267800","team":"T68168MUP","edited":{"user":"U0138UTB7A4","ts":"1617866878.000000"},"blocks":[{"type":"rich_text","block_id":"rSJT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you! I saw this but I wasn't sure how using a "},{"type":"text","text":"Node ","style":{"code":true}},{"type":"text","text":"would work with what I had. \n\nRight now I have a function "},{"type":"text","text":"plot_mesh(a)","style":{"code":true}},{"type":"text","text":" that creates u,v coordinates based on the parameter "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" (e.g. "},{"type":"text","text":"u = range(0, a*pi, length=100)","style":{"code":true}},{"type":"text","text":"), then takes the cartesian product of u,v arrays and maps it all to x,y,z using a 3D Klein bottle parametrization. With all the x,y,z values, it plots them using "},{"type":"text","text":"surface!","style":{"code":true}},{"type":"text","text":" \n\nSince the mesh creation has multiple steps I wasn't sure how use to Nodes with it. Now I'm thinking maybe something like "},{"type":"text","text":"a = Node(0.0)","style":{"code":true}},{"type":"text","text":" and  "},{"type":"text","text":" u = @lift range(...)","style":{"code":true}},{"type":"text","text":", and maybe "},{"type":"text","text":"@lift","style":{"code":true}},{"type":"text","text":" for every line. Would that work or is there another recommended way?"}]}]}],"thread_ts":"1617851462.266200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"821100c5-c241-454c-9448-b6fa02dbc70c","type":"message","text":"all the inputs that change in your animation should be nodes, yes. so you have to start at whatever the topmost parameters are you want to change. so if that's `a`, make that a Node and derive the other values from it. the nice thing is that then in your record call you can just do\n```record(scene, ...) ...\n    a[] = newvalue\nend```","user":"UK1BNFHFV","ts":"1617869539.268500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qeQp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"all the inputs that change in your animation should be nodes, yes. so you have to start at whatever the topmost parameters are you want to change. so if that's "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":", make that a Node and derive the other values from it. the nice thing is that then in your record call you can just do\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"record(scene, ...) ...\n    a[] = newvalue\nend"}]}]}],"thread_ts":"1617851462.266200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"37c87d90-aee1-42f9-8380-95feee99d85f","type":"message","text":"Thank you!! This worked really well! It was surprisingly easily to just add the Node, add @lift all along the way, and it just worked!\n\nNow my code is fast and doesn't crash when I had too many frames :sweat_smile: (I must have been making so many plots before, that I ran out of RAM)","user":"U0138UTB7A4","ts":"1617890879.272300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YaW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you!! This worked really well! It was surprisingly easily to just add the Node, add @lift all along the way, and it just worked!\n\nNow my code is fast and doesn't crash when I had too many frames "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":" (I must have been making so many plots before, that I ran out of RAM)"}]}]}],"thread_ts":"1617851462.266200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"24bf06be-c67e-4d78-9329-2b80ee12d428","type":"message","text":"nice! I was hoping you wouldn't run into one of those pesky asynchrony bugs :) that can happen sometimes if you change `x` first and before you have the chance to change `y` to the same length, you already have an error","user":"UK1BNFHFV","ts":"1617894190.272500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"152p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nice! I was hoping you wouldn't run into one of those pesky asynchrony bugs :) that can happen sometimes if you change "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" first and before you have the chance to change "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" to the same length, you already have an error"}]}]}],"thread_ts":"1617851462.266200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"6fa0cd43-628d-454b-a640-fc7f15481faf","type":"message","text":"Oh thank you for letting me know about that! I don't under that exactly, but its good to know that I might run into that in the future!\n\nEDIT: Oh I think I understand now. when you do the node updates one after the other, it might not match properly and get length errors","user":"U0138UTB7A4","ts":"1617894401.272700","team":"T68168MUP","edited":{"user":"U0138UTB7A4","ts":"1617894441.000000"},"blocks":[{"type":"rich_text","block_id":"1Vl4P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh thank you for letting me know about that! I don't under that exactly, but its good to know that I might run into that in the future!\n\nEDIT: Oh I think I understand now. when you do the node updates one after the other, it might not match properly and get length errors"}]}]}],"thread_ts":"1617851462.266200","parent_user_id":"U0138UTB7A4"},{"client_msg_id":"e097d8e0-7c84-4bdf-8c03-3dc8e32998a2","type":"message","text":"<http://makie.juliaplots.org/stable/interaction.html#Problems-With-Synchronous-Updates>","user":"UK1BNFHFV","ts":"1617894683.273100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TgqQV","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"http://makie.juliaplots.org/stable/interaction.html#Problems-With-Synchronous-Updates"}]}]}],"thread_ts":"1617851462.266200","parent_user_id":"U0138UTB7A4"}]