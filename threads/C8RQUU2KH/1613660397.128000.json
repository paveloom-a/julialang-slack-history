[{"client_msg_id":"5a20ff62-b7a3-45d2-b7e7-218a3b445eca","type":"message","text":"What is the status of inserting latex in Makie? (especially for axis labels in CairoMakie) I've seen several issues and had a look at the MakieTex package, but I'm not sure what the state of the matter really is. Also are there plan about it or something I could contribute for it ?","user":"U017LQ3A59U","ts":"1613660397.128000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Qrh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the status of inserting latex in Makie? (especially for axis labels in CairoMakie) I've seen several issues and had a look at the MakieTex package, but I'm not sure what the state of the matter really is. Also are there plan about it or something I could contribute for it ?"}]}]}],"thread_ts":"1613660397.128000","reply_count":11,"reply_users_count":2,"latest_reply":"1614381661.150200","reply_users":["UK1BNFHFV","U017LQ3A59U"],"subscribed":false},{"client_msg_id":"5c2125ac-6d99-49c9-b8a2-285275588c38","type":"message","text":"I thought one option could be to port the simplified latex engine that matplotlib uses and GR adapted as well. We have the ability to draw glyphs from any font at arbitrary positions and scales, so maybe just intercepting latex strings, calling a different layouting algorithm with a font like Computer Modern, and then drawing the glyphs as usual could work. I'm not sure if that covers everything though, or if we also need to support primitives like lines in that setup (for fractions for example)","user":"UK1BNFHFV","ts":"1613669985.131700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OHLc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought one option could be to port the simplified latex engine that matplotlib uses and GR adapted as well. We have the ability to draw glyphs from any font at arbitrary positions and scales, so maybe just intercepting latex strings, calling a different layouting algorithm with a font like Computer Modern, and then drawing the glyphs as usual could work. I'm not sure if that covers everything though, or if we also need to support primitives like lines in that setup (for fractions for example)"}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"f3bd2772-aff5-44b9-98fb-e61f454004a4","type":"message","text":"The roundtrip through real LaTeX will always be quite slow I assume, and then you haven't solved the problem yet how to draw your strings. To be really practical, the normal `text` plotting function should be able to handle it","user":"UK1BNFHFV","ts":"1613670041.131900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vog","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The roundtrip through real LaTeX will always be quite slow I assume, and then you haven't solved the problem yet how to draw your strings. To be really practical, the normal "},{"type":"text","text":"text","style":{"code":true}},{"type":"text","text":" plotting function should be able to handle it"}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"f9f882aa-c16a-45be-9367-3d5bbd6c57f3","type":"message","text":"I had a quick look at what matplotlib does and it's confusing to say the least ^^'. I'll try again later. I've also been wondering if their would be a possibility to use non-string (e.g. images) as label/legend since this could help with higher modularity of the system.","user":"U017LQ3A59U","ts":"1613678409.136500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wU14","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I had a quick look at what matplotlib does and it's confusing to say the least ^^'. I'll try again later. I've also been wondering if their would be a possibility to use non-string (e.g. images) as label/legend since this could help with higher modularity of the system."}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"920D0955-5781-470D-9BE9-D6B642A57929","type":"message","text":"In the end you can put anything in the legend, it just gets more difficult to design the whole observable network when you don't know what your input types are :) So far I always assumed Labels for labels but in theory it can be anything","user":"UK1BNFHFV","ts":"1613678757.138400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cqYe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the end you can put anything in the legend, it just gets more difficult to design the whole observable network when you don't know what your input types are :) So far I always assumed Labels for labels but in theory it can be anything"}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"6F773529-3563-42B6-A7CD-B7F985520451","type":"message","text":"For static plots / hackability I think I would just go directly into the legend internals, then you can do whatever with the underlying GridLayout.","user":"UK1BNFHFV","ts":"1613678796.139700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TN5Kv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For static plots / hackability I think I would just go directly into the legend internals, then you can do whatever with the underlying GridLayout."}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"17350915-d024-4b00-9b49-68bf5077f0c2","type":"message","text":"Okay I get it I think (that was quite a dive into makie code), and I understand why it has not been done yet. What is needed is\n• a latex parser\n• a latex engine that take the parsed expression and tell you what glyph to draw where\n• using that info I can use `text!` to draw individual glyphs (and `lines!` for fractions/square roots)\n• by adding a method to `text` for `LaTeXString` (and/or a recipe for `LaTeXString` , that's actually the point I'm the less sure about design-wise) that do all of the above everything should work as long as the new stuff is able to tell the space it needs to the layout algorithms ie implements `boundingbox`\n• hunt down the bugs that will arise due to the fact some methods expect strings (e.g. xlabel using a regex to determine if the label is empty)","user":"U017LQ3A59U","ts":"1613762742.146400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XKJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay I get it I think (that was quite a dive into makie code), and I understand why it has not been done yet. What is needed is\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a latex parser"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"a latex engine that take the parsed expression and tell you what glyph to draw where"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"using that info I can use "},{"type":"text","text":"text!","style":{"code":true}},{"type":"text","text":" to draw individual glyphs (and "},{"type":"text","text":"lines!","style":{"code":true}},{"type":"text","text":" for fractions/square roots)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"by adding a method to "},{"type":"text","text":"text","style":{"code":true}},{"type":"text","text":" for "},{"type":"text","text":"LaTeXString","style":{"code":true}},{"type":"text","text":" (and/or a recipe for "},{"type":"text","text":"LaTeXString","style":{"code":true}},{"type":"text","text":" , that's actually the point I'm the less sure about design-wise) that do all of the above everything should work as long as the new stuff is able to tell the space it needs to the layout algorithms ie implements "},{"type":"text","text":"boundingbox","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"hunt down the bugs that will arise due to the fact some methods expect strings (e.g. xlabel using a regex to determine if the label is empty)"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"8d566d03-9a16-49a6-bd39-7afb5ebe4894","type":"message","text":"The question whether I actually want to implement this has not yet been answered though :stuck_out_tongue:","user":"U017LQ3A59U","ts":"1613762885.146600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OPYDX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The question whether I actually want to implement this has not yet been answered though "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"C1199144-64CB-4776-97B5-6496FD237E7C","type":"message","text":"Yeah I think you got it :) It's definitely a lot of work, and so far I have always prioritized other things. My number one thing I want to have, which is still waiting in a PR, is text annotations in screen coordinates. That would enable easy text annotations in plots but also better axis labels for 3d plots, which always face the camera and have consistent sizes ","user":"UK1BNFHFV","ts":"1613765022.151900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H0q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah I think you got it :) It's definitely a lot of work, and so far I have always prioritized other things. My number one thing I want to have, which is still waiting in a PR, is text annotations in screen coordinates. That would enable easy text annotations in plots but also better axis labels for 3d plots, which always face the camera and have consistent sizes "}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"71b2a5f6-f731-4480-a137-867a19045ae2","type":"message","text":"Just to let you know, I have started to work on a LaTeX parser here: <https://github.com/Kolaru/MathTeXParser.jl>\nNothing close to be usable yet, but that's a first step.","user":"U017LQ3A59U","ts":"1614286386.131900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VPFl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just to let you know, I have started to work on a LaTeX parser here: "},{"type":"link","url":"https://github.com/Kolaru/MathTeXParser.jl"},{"type":"text","text":"\nNothing close to be usable yet, but that's a first step."}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"e713b826-2888-4c76-aafe-94955f8669bd","type":"message","text":"did you find matplotlibs or GRs implementation of the layout algorithm? I would have tried to start there, but I'm not very knowledgeable about latex anyway","user":"UK1BNFHFV","ts":"1614362685.149500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TIWSJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"did you find matplotlibs or GRs implementation of the layout algorithm? I would have tried to start there, but I'm not very knowledgeable about latex anyway"}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"},{"client_msg_id":"2ed96cbd-99fb-4691-8adf-061899733c71","type":"message","text":"I based the parser on what matplotlib does : <https://github.com/matplotlib/matplotlib/blob/1ec609a3f28fc9858094603c1dd604208bae87f5/lib/matplotlib/_mathtext.py#L1923>. However they have strongly coupled the parser and the latex layouting engine which I don't like (and is probably a nightmare to incrementally build) so I decided to separate the two and first focus on parsing.","user":"U017LQ3A59U","ts":"1614381661.150200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C3Co","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I based the parser on what matplotlib does : "},{"type":"link","url":"https://github.com/matplotlib/matplotlib/blob/1ec609a3f28fc9858094603c1dd604208bae87f5/lib/matplotlib/_mathtext.py#L1923"},{"type":"text","text":". However they have strongly coupled the parser and the latex layouting engine which I don't like (and is probably a nightmare to incrementally build) so I decided to separate the two and first focus on parsing."}]}]}],"thread_ts":"1613660397.128000","parent_user_id":"U017LQ3A59U"}]