[{"client_msg_id":"e01afe5f-1a89-4674-9a9e-ec76987212a6","type":"message","text":"I have a Pluto notebook with three cells.  The first cell creates an Array.  The second cell populates the Array.  The third cell computes a result based on the Array contents.  I find that changes made in the second cell (that change the  Array's contents) do not trigger the third cell to recompute the result.  I guess this is because the second cell is changing the contents of the Array, but the actual variable that references the Array is unchanged.  I've been able to work around this by also setting a dummy variable in the second cell (`pluto_opulate_trigger = nothing`) and then adding a no-op reference the dummy variable in the third cell.  This seems to work OK, but I was wondering: is there a better way to handle this situation?  If not, is there some sort of naming convention for such dummy variables?","user":"U01FKQQ7J0J","ts":"1615879545.007500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=CJYW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a Pluto notebook with three cells.  The first cell creates an Array.  The second cell populates the Array.  The third cell computes a result based on the Array contents.  I find that changes made in the second cell (that change the  Array's contents) do not trigger the third cell to recompute the result.  I guess this is because the second cell is changing the contents of the Array, but the actual variable that references the Array is unchanged.  I've been able to work around this by also setting a dummy variable in the second cell ("},{"type":"text","text":"pluto_opulate_trigger = nothing","style":{"code":true}},{"type":"text","text":") and then adding a no-op reference the dummy variable in the third cell.  This seems to work OK, but I was wondering: is there a better way to handle this situation?  If not, is there some sort of naming convention for such dummy variables?"}]}]}],"thread_ts":"1615879545.007500","reply_count":2,"reply_users_count":1,"latest_reply":"1615896564.008100","reply_users":["UB197FRCL"],"subscribed":false},{"client_msg_id":"297956a6-e7a9-421e-84d7-b6f7cfef62d7","type":"message","text":"I think with Pluto you should avoid mutating things in general. Do you truly need to create the array in a different cell? Can you get away with a `let...end` block? Or a `begin...end` one?","user":"UB197FRCL","ts":"1615896461.007900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vBG8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think with Pluto you should avoid mutating things in general. Do you truly need to create the array in a different cell? Can you get away with a "},{"type":"text","text":"let...end","style":{"code":true}},{"type":"text","text":" block? Or a "},{"type":"text","text":"begin...end","style":{"code":true}},{"type":"text","text":" one?"}]}]}],"thread_ts":"1615879545.007500","parent_user_id":"U01FKQQ7J0J"},{"client_msg_id":"28261340-dac3-41f6-9197-0128c2bafbf0","type":"message","text":"E.g.,\n```begin\n    A = Matrix(undef, 2, 2)\n    @. A[:] = rand()\nend```\nnext cell\n```do stuff with A```","user":"UB197FRCL","ts":"1615896564.008100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6shk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"E.g.,\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"begin\n    A = Matrix(undef, 2, 2)\n    @. A[:] = rand()\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"next cell\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"do stuff with A"}]}]}],"thread_ts":"1615879545.007500","parent_user_id":"U01FKQQ7J0J"}]