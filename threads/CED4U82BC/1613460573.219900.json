[{"client_msg_id":"e48bca53-af4c-4057-b99a-23888eb4bfa5","type":"message","text":"I haven't had time to think about this over the weekend, but I'll go through the proposed mitigations and try to think of ways to break them over the next few days. The mitigation for public registries sounds good - their UUIDs/repo URLs are public already, so requiring those to match between known public registries seems sound. While I'm not in favor of any \"opt-in\" to security (public registries not knowing about this mitigation keep their users vulnerable..), the only other problem I can think of is genuine UUID collision. Very unlikely in 1.6, as the UUIDs stdlib uses `RandomDevice()` as PRNG, but if that happens and both packages are legitimate, there's no way around managing it anyway.","user":"UH24GRBLL","ts":"1613460573.219900","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1613461610.000000"},"blocks":[{"type":"rich_text","block_id":"t1sh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven't had time to think about this over the weekend, but I'll go through the proposed mitigations and try to think of ways to break them over the next few days. The mitigation for public registries sounds good - their UUIDs/repo URLs are public already, so requiring those to match between known public registries seems sound. While I'm not in favor of any \"opt-in\" to security (public registries not knowing about this mitigation keep their users vulnerable..), the only other problem I can think of is genuine UUID collision. Very unlikely in 1.6, as the UUIDs stdlib uses "},{"type":"text","text":"RandomDevice()","style":{"code":true}},{"type":"text","text":" as PRNG, but if that happens and both packages are legitimate, there's no way around managing it anyway."}]}]}],"thread_ts":"1613460573.219900","reply_count":9,"reply_users_count":4,"latest_reply":"1613592798.229900","reply_users":["U6A936746","U6795JH6H","UB7JS9CHF","UH24GRBLL"],"subscribed":false},{"client_msg_id":"df52d983-2407-405d-ac1f-a353d5d36c79","type":"message","text":"Very unlikely is understating it.\n1000 monkeys on 1000 typewriters ...","user":"U6A936746","ts":"1613470801.222300","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1613471048.000000"},"blocks":[{"type":"rich_text","block_id":"7rk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Very unlikely is understating it.\n1000 monkeys on 1000 typewriters ..."}]}]}],"thread_ts":"1613460573.219900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"515B7A38-D910-4E00-96AD-60FC86FB98C4","type":"message","text":"Keep in mind that this is a defense in depth approach: we’re doing uuid checking as a first line of defense; we will also implement some client side defense that will not require anyone to opt into anything","user":"U6795JH6H","ts":"1613582186.225800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gy/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Keep in mind that this is a defense in depth approach: we’re doing uuid checking as a first line of defense; we will also implement some client side defense that will not require anyone to opt into anything"}]}]}],"thread_ts":"1613460573.219900","parent_user_id":"UH24GRBLL","reactions":[{"name":"+1","users":["UH24GRBLL","UB7JS9CHF","U6A936746"],"count":3}]},{"client_msg_id":"a11865a9-6003-4b06-833c-d85771f7500e","type":"message","text":"Would it still be correct to say that Julia’s package manager has a better story with this sort of vulnerability at the moment than most others?","user":"UB7JS9CHF","ts":"1613592051.228700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3CCR/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would it still be correct to say that Julia’s package manager has a better story with this sort of vulnerability at the moment than most others?"}]}]}],"thread_ts":"1613460573.219900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"3f1dcef4-24de-4a87-94dc-b88877d26915","type":"message","text":"depends on what you use most often, I guess","user":"UH24GRBLL","ts":"1613592155.228900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2/4m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"depends on what you use most often, I guess"}]}]}],"thread_ts":"1613460573.219900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"c24e0801-addf-41aa-accb-86ce8d19e734","type":"message","text":"nuget has mostly signed packages, I think - if it's not signed or signed with the wrong key, it won't install","user":"UH24GRBLL","ts":"1613592183.229100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=Sl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nuget has mostly signed packages, I think - if it's not signed or signed with the wrong key, it won't install"}]}]}],"thread_ts":"1613460573.219900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"ba87d0a6-dab5-426e-9c12-46864bff8760","type":"message","text":"that sort of thing is usually mostly security theater in practice","user":"U6795JH6H","ts":"1613592256.229300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iTuL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that sort of thing is usually mostly security theater in practice"}]}]}],"thread_ts":"1613460573.219900","parent_user_id":"UH24GRBLL","reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"52df36cc-d0ca-4c8a-8ac9-e997e0d6aaab","type":"message","text":"For example, suppose we signed package versions. Then how do you distribute the public keys to verify those signatures? The most obvious choice is to put them in registries. But then that’s equivalent to just trusting the registry.","user":"U6795JH6H","ts":"1613592341.229500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v0h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For example, suppose we signed package versions. Then how do you distribute the public keys to verify those signatures? The most obvious choice is to put them in registries. But then that’s equivalent to just trusting the registry."}]}]}],"thread_ts":"1613460573.219900","parent_user_id":"UH24GRBLL","reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"d0d5c15e-1334-46db-811c-16460c73cb0c","type":"message","text":"yeah, the usual gpg problem","user":"UH24GRBLL","ts":"1613592497.229700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4WXhg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, the usual gpg problem"}]}]}],"thread_ts":"1613460573.219900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"1fed0971-ebea-4088-b4b9-36bf11c1643f","type":"message","text":"Right, you need a PKI for any signature system to work. TLS certs are already the most widely deployed end actively maintained PKI so you might as well just piggyback on that and just trust the content of things served over TLS.","user":"U6795JH6H","ts":"1613592798.229900","team":"T68168MUP","edited":{"user":"U6795JH6H","ts":"1613594739.000000"},"blocks":[{"type":"rich_text","block_id":"sCgaJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, you need a PKI for any signature system to work. TLS certs are already the most widely deployed end actively maintained PKI so you might as well just piggyback on that and just trust the content of things served over TLS."}]}]}],"thread_ts":"1613460573.219900","parent_user_id":"UH24GRBLL"}]