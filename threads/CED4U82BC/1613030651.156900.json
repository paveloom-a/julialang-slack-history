[{"client_msg_id":"8479d9ca-cf54-4a86-9a15-ee4fa5ffcbc7","type":"message","text":"I understand the sentiment of not wanting to break this existing workflow, but I don't think this can be mitigated without breaking it. I agree that an advisory of some sort is a good idea though.","user":"UH24GRBLL","ts":"1613030651.156900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IE4sN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I understand the sentiment of not wanting to break this existing workflow, but I don't think this can be mitigated without breaking it. I agree that an advisory of some sort is a good idea though."}]}]}],"thread_ts":"1613030651.156900","reply_count":10,"reply_users_count":3,"latest_reply":"1613067588.173100","reply_users":["U6795JH6H","UH24GRBLL","UBVE598BC"],"subscribed":false},{"client_msg_id":"618DC4B6-1C6B-4556-B61A-AF3031D1B543","type":"message","text":"It’s way too early to conclude that","user":"U6795JH6H","ts":"1613065488.166900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vwvKe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s way too early to conclude that"}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"A197780F-0D5F-4948-B6DD-608725089F05","type":"message","text":"In general we probably can’t protect against this in existing versions of Julia, so that not really the goal","user":"U6795JH6H","ts":"1613065523.168000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E2=U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In general we probably can’t protect against this in existing versions of Julia, so that not really the goal"}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"109B3584-6A3C-49AC-8C4E-51A53158BF57","type":"message","text":"Adding a mechanism that protects new Julia versions and doesn’t break old ones seems entirely doable","user":"U6795JH6H","ts":"1613065555.169200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"059M0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Adding a mechanism that protects new Julia versions and doesn’t break old ones seems entirely doable"}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"79BF237C-9346-42F8-808C-E61EE06181E2","type":"message","text":"The “shadowable” idea is non-breaking with a default of true, for example","user":"U6795JH6H","ts":"1613065591.170500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A=H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The “shadowable” idea is non-breaking with a default of true, for example"}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"68804876-ee70-4d1a-ada8-e3eed106ae64","type":"message","text":"I personally prefer a \"safe default\" way of things, even if it's breaking - I understand if it's not seen as desirable though. \"shadowable\" with a default of true adds knowledge and organizational overhead when wanting to do things similar to this. The equivalent of that default is what npm already has (scopes), but since they're not mandatory to use, even big corporations were/are vulnerable to this.","user":"UH24GRBLL","ts":"1613065745.170700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9fJpQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I personally prefer a \"safe default\" way of things, even if it's breaking - I understand if it's not seen as desirable though. \"shadowable\" with a default of true adds knowledge and organizational overhead when wanting to do things similar to this. The equivalent of that default is what npm already has (scopes), but since they're not mandatory to use, even big corporations were/are vulnerable to this."}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"aaf52b86-ff92-49d1-8ee1-eae6630c5a0d","type":"message","text":"My proposed variation of the mechanism, <https://github.com/JuliaLang/Pkg.jl/issues/2393#issuecomment-777286926>, should also be non-breaking and if I make LocalRegistry default to creating non-mergable registries, that should have a reasonably big impact. Still would require upgrade to new Julia versions supporting this and patching of existing private registries of course.","user":"UBVE598BC","ts":"1613066290.170900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YkItW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My proposed variation of the mechanism, "},{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/issues/2393#issuecomment-777286926"},{"type":"text","text":", should also be non-breaking and if I make LocalRegistry default to creating non-mergable registries, that should have a reasonably big impact. Still would require upgrade to new Julia versions supporting this and patching of existing private registries of course."}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"8dbd79a2-f200-48d2-a7ad-f5c1576a21a6","type":"message","text":"`mergable` is (from my understanding) the same mechanism as `shadowable`","user":"UH24GRBLL","ts":"1613066351.171100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sJ00/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"mergable","style":{"code":true}},{"type":"text","text":" is (from my understanding) the same mechanism as "},{"type":"text","text":"shadowable","style":{"code":true}}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"402915b7-6bf2-4638-966e-92767b8cc824","type":"message","text":"Yes, the critical difference is that registries can choose whether they allow merging by default and therefore you don't need an opt-in from registries that do allow merging, which is the non-breaking setting for General.","user":"UBVE598BC","ts":"1613066728.172700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+e9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, the critical difference is that registries can choose whether they allow merging by default and therefore you don't need an opt-in from registries that do allow merging, which is the non-breaking setting for General."}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"44524311-e89c-45de-884d-da0bed1dd968","type":"message","text":"I see! So e.g. Invenia would set that default to false?","user":"UH24GRBLL","ts":"1613067269.172900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"usNh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see! So e.g. Invenia would set that default to false?"}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"},{"client_msg_id":"b2d83b18-01fb-4210-a139-3e9e252c7399","type":"message","text":"The normal thing would be for a private registry to be set to unmergable and opt in to merging for specific packages if those are also registered in General (and under your control of course).","user":"UBVE598BC","ts":"1613067588.173100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HRlP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The normal thing would be for a private registry to be set to unmergable and opt in to merging for specific packages if those are also registered in General (and under your control of course)."}]}]}],"thread_ts":"1613030651.156900","parent_user_id":"UH24GRBLL"}]