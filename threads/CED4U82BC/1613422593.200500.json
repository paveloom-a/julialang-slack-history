[{"client_msg_id":"da0ac416-a839-48bf-9847-cd12f55733e1","type":"message","text":"Here are all the things I think we should do to mitigate this:\n1. <@UBVE598BC>’s PR above: allow registries that are publicly visible (the packages don’t have to be) to register themselves with the General CI system to prevent PRs to General doing this kind of attack\n2. Add a similar mechanism for registries that aren’t publicly visible that allows publishing a list of hashed package UUIDs and repo URLs (need to determine if salting is necessary). The check logic is similar: if the UUID matches and the repo URL doesn’t, then we consider it an attack and block it; if the UUID and repo URL match, that’s fine; if the UUID doesn’t match that’s also fine.\n3. Write an announcement on discourse that Julia is susceptible to the dependency confusion attack if the attacker knows the name _and_ UUID of the package. Anyone maintaining a public registry should register it with RegistryCI. Anyone maintaining a private registry should try to keep package UUIDs private; once (2) above is done, they should consider publishing a hashed list of package UUIDs that can be checked by RegistryCI.\n4. Add a client-side protection mechanism like the “mergable” option. However, this needs a bit more thought. I think that the client should at least consult all registries that it currently knows about (whether it can update them or not) and make sure that no nefarious package confusion is being attempted. The worry is that if someone loses or deletes a registry that could open the client up to the attack. So we may want to keep the mergability info somewhere even more persistent than where the registries are stored.","user":"U6795JH6H","ts":"1613422593.200500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cv+u8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here are all the things I think we should do to mitigate this:\n1. "},{"type":"user","user_id":"UBVE598BC"},{"type":"text","text":"’s PR above: allow registries that are publicly visible (the packages don’t have to be) to register themselves with the General CI system to prevent PRs to General doing this kind of attack\n2. Add a similar mechanism for registries that aren’t publicly visible that allows publishing a list of hashed package UUIDs and repo URLs (need to determine if salting is necessary). The check logic is similar: if the UUID matches and the repo URL doesn’t, then we consider it an attack and block it; if the UUID and repo URL match, that’s fine; if the UUID doesn’t match that’s also fine.\n3. Write an announcement on discourse that Julia is susceptible to the dependency confusion attack if the attacker knows the name "},{"type":"text","text":"and","style":{"italic":true}},{"type":"text","text":" UUID of the package. Anyone maintaining a public registry should register it with RegistryCI. Anyone maintaining a private registry should try to keep package UUIDs private; once (2) above is done, they should consider publishing a hashed list of package UUIDs that can be checked by RegistryCI.\n4. Add a client-side protection mechanism like the “mergable” option. However, this needs a bit more thought. I think that the client should at least consult all registries that it currently knows about (whether it can update them or not) and make sure that no nefarious package confusion is being attempted. The worry is that if someone loses or deletes a registry that could open the client up to the attack. So we may want to keep the mergability info somewhere even more persistent than where the registries are stored."}]}]}],"thread_ts":"1613422593.200500","reply_count":1,"reply_users_count":1,"latest_reply":"1613424268.214100","reply_users":["U6795JH6H"],"subscribed":false},{"client_msg_id":"30f3d1ac-ae02-44f3-9fa6-4956faec9028","type":"message","text":"oh, one more thing:\n5. Make sure that Pkg.generate, PkgTemplates, etc. all use `RandomDevice()` to generate UUIDs so that package UUIDs are secure. We probably want to do this by changing `uuid4()` so that it uses `RandomDevice()` by default","user":"U6795JH6H","ts":"1613424268.214100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H59K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, one more thing:\n5. Make sure that Pkg.generate, PkgTemplates, etc. all use "},{"type":"text","text":"RandomDevice()","style":{"code":true}},{"type":"text","text":" to generate UUIDs so that package UUIDs are secure. We probably want to do this by changing "},{"type":"text","text":"uuid4()","style":{"code":true}},{"type":"text","text":" so that it uses "},{"type":"text","text":"RandomDevice()","style":{"code":true}},{"type":"text","text":" by default"}]}]}],"thread_ts":"1613422593.200500","parent_user_id":"U6795JH6H"}]