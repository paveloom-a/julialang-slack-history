[{"client_msg_id":"9a907fa4-fa77-48f9-aafc-9d124d817e7f","type":"message","text":"Okay, realised when cleaning my daughter’s room that a log is not all that helpful and that organising this a community effort is hard with so many moving parts. Here are some open questions regarding v1.6.0 (and possibly v1.5.0) from my notes that would be awesome if we could gain some clarity on. 1.) Do the JLLs matter if we have the corresponding `USE_SYSTEM_*` flag enabled? If not, why are the tests always executed then? 2.) Does Julia even support non-OpenBLAS at this point? Related to (1), in that there is now a JLL for it that is tested. 3.) p7zip and MbedTLS look like superfluous dependencies, are they? 4.) There are several file-related test errors, are these because of the build sandbox? Need to check the issue tracker. 5.) The cert test failure should be able to be worked around by setting `export JULIA_SSL_CA_ROOTS_PATH=\"${cacert}/etc/ssl/certs/ca-bundle.crt\"`, yet it seems like it still fails, why? 6.) `libgmpxx.so.4` is reported missing if you run the test suite post-install and it is not symlinked, why? 7.) Is there a way to build Julia’s LLVM as a separate derivation so that we do not have to build it every bloody time we change a line in the Julia expression itself? This would cut many minutes from each check and hopefully make debugging easier. 8.) Does the v1.0.5 expression in my PR work properly on macOS? I am unable to test it as I do not have a Mac.","user":"U677R5Q5A","ts":"1617594284.078700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gp1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, realised when cleaning my daughter’s room that a log is not all that helpful and that organising this a community effort is hard with so many moving parts. Here are some open questions regarding v1.6.0 (and possibly v1.5.0) from my notes that would be awesome if we could gain some clarity on. 1.) Do the JLLs matter if we have the corresponding "},{"type":"text","text":"USE_SYSTEM_*","style":{"code":true}},{"type":"text","text":" flag enabled? If not, why are the tests always executed then? 2.) Does Julia even support non-OpenBLAS at this point? Related to (1), in that there is now a JLL for it that is tested. 3.) p7zip and MbedTLS look like superfluous dependencies, are they? 4.) There are several file-related test errors, are these because of the build sandbox? Need to check the issue tracker. 5.) The cert test failure should be able to be worked around by setting "},{"type":"text","text":"export JULIA_SSL_CA_ROOTS_PATH=\"${cacert}/etc/ssl/certs/ca-bundle.crt\"","style":{"code":true}},{"type":"text","text":", yet it seems like it still fails, why? 6.) "},{"type":"text","text":"libgmpxx.so.4","style":{"code":true}},{"type":"text","text":" is reported missing if you run the test suite post-install and it is not symlinked, why? 7.) Is there a way to build Julia’s LLVM as a separate derivation so that we do not have to build it every bloody time we change a line in the Julia expression itself? This would cut many minutes from each check and hopefully make debugging easier. 8.) Does the v1.0.5 expression in my PR work properly on macOS? I am unable to test it as I do not have a Mac."}]}]}],"thread_ts":"1617594284.078700","reply_count":6,"reply_users_count":3,"latest_reply":"1617599138.080100","reply_users":["UC81ESVH6","U0180T09QV6","U677R5Q5A"],"is_locked":false,"subscribed":false,"reactions":[{"name":"+1","users":["U0180T09QV6"],"count":1}]},{"client_msg_id":"d6c6d4d6-e833-45ef-abf0-190ed6ff45d7","type":"message","text":"2. It supports Intel's MKL at the very least.\n3. 7z is used to extract archives downloaded from PkgServers, it's needed if the user is not getting registry via git. Mbedtls is an indirect dependency, it is used by curl.\n6. You might need the patch for symlinking system CSL, see PR 40217.\n7. Not that I know of, apart from finding the patches used and making your own package out of that. I guess they didn't expect anyone to build without BinaryBuilder LLVM over and over again in source based distros.","user":"UC81ESVH6","ts":"1617596605.078800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Ww","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"2. It supports Intel's MKL at the very least.\n3. 7z is used to extract archives downloaded from PkgServers, it's needed if the user is not getting registry via git. Mbedtls is an indirect dependency, it is used by curl.\n6. You might need the patch for symlinking system CSL, see PR 40217.\n7. Not that I know of, apart from finding the patches used and making your own package out of that. I guess they didn't expect anyone to build without BinaryBuilder LLVM over and over again in source based distros."}]}]}],"thread_ts":"1617594284.078700","parent_user_id":"U677R5Q5A"},{"client_msg_id":"8e7f9c0e-6510-4633-bad4-2ecb686d7d28","type":"message","text":"I'd also like to resolve/work on 7, but I'm not at all familiar with julia's build system. That's something that would really speed up development tho","user":"U0180T09QV6","ts":"1617598026.079300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mnkR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd also like to resolve/work on 7, but I'm not at all familiar with julia's build system. That's something that would really speed up development tho"}]}]}],"thread_ts":"1617594284.078700","parent_user_id":"U677R5Q5A"},{"client_msg_id":"e6f07407-d3cb-4f0a-83f8-5bb7243f3565","type":"message","text":"<@U0180T09QV6>: Yeah, the Makefiles are bloody complex these days unlike back when I was more active on the core language. I have a quick and dirty stab at it that does not work properly. But I suspect we just need to define a derivation above the Julia expression with the right build flags, etc. and then set `USE_SYSTEM_LLVM` to true and add that derivation into `buildInput`. The “bonus” is of course that while developing this you will really need to build LLVM a gorillion times. ;P","user":"U677R5Q5A","ts":"1617598919.079500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ns7FM","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U0180T09QV6"},{"type":"text","text":": Yeah, the Makefiles are bloody complex these days unlike back when I was more active on the core language. I have a quick and dirty stab at it that does not work properly. But I suspect we just need to define a derivation above the Julia expression with the right build flags, etc. and then set "},{"type":"text","text":"USE_SYSTEM_LLVM","style":{"code":true}},{"type":"text","text":" to true and add that derivation into "},{"type":"text","text":"buildInput","style":{"code":true}},{"type":"text","text":". The “bonus” is of course that while developing this you will really need to build LLVM a gorillion times. ;P"}]}]}],"thread_ts":"1617594284.078700","parent_user_id":"U677R5Q5A"},{"client_msg_id":"42133c10-3817-4dd5-ae33-9ce329e01f54","type":"message","text":"<@UC81ESVH6> Regarding (2), yeah, I suspected as much. So I guess the sane thing to do then is just to work out how to get the OpenBLAS JLL to load the right (aaargh!) shared library and not go down in flames later on due to the wonder that is the lack of testing I see for that code path.","user":"U677R5Q5A","ts":"1617599070.079700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UJG+","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UC81ESVH6"},{"type":"text","text":" Regarding (2), yeah, I suspected as much. So I guess the sane thing to do then is just to work out how to get the OpenBLAS JLL to load the right (aaargh!) shared library and not go down in flames later on due to the wonder that is the lack of testing I see for that code path."}]}]}],"thread_ts":"1617594284.078700","parent_user_id":"U677R5Q5A"},{"client_msg_id":"34a065c2-fad1-48fb-bd3f-564f521c9127","type":"message","text":"<@UC81ESVH6> Regarding (3), super, thanks for confirming that.","user":"U677R5Q5A","ts":"1617599097.079900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kRi","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UC81ESVH6"},{"type":"text","text":" Regarding (3), super, thanks for confirming that."}]}]}],"thread_ts":"1617594284.078700","parent_user_id":"U677R5Q5A"},{"client_msg_id":"c314abf8-6630-4ff2-b1ef-4881b2ea78b3","type":"message","text":"<@UC81ESVH6> Regarding (6), sadly that is with that patch. &gt;.&lt; I will see if I can work around it by symlinking manually upon install and report it upstream.","user":"U677R5Q5A","ts":"1617599138.080100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hX3l","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UC81ESVH6"},{"type":"text","text":" Regarding (6), sadly that is with that patch. >.< I will see if I can work around it by symlinking manually upon install and report it upstream."}]}]}],"thread_ts":"1617594284.078700","parent_user_id":"U677R5Q5A"}]