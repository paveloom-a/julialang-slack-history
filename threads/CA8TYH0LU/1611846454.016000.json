[{"client_msg_id":"2b0552b8-9bf7-487d-8a9e-524dce87b1eb","type":"message","text":"re-posting from zulip:\n\nI have some admittedly idiosyncratic preferences for my indentations.  In particular, I want all closing delimiters to occur at the start of new lines,  unless they enclose function arguments.\n\nSo, for example, currently if I write a closing delimiter on a new line I get, e.g.\n```julia\nDict(:a=&gt;1,\n     :b=&gt;2,\n    )```\nWhat I *want* is\n```julia\nDict(:a=&gt;1,\n     :b=&gt;2,\n)```\nFor functions, what I get is\n```julia\nfunction f(x=1;\n        kwarg1=2\n    )\nend```\nbut what I *want* is\n```julia\nfunction f(x=1;\n           kwarg1=2\n          )\nend```\nAnyone know what I can set to achieve this?  I figure the first one is probably easy","user":"U9VG1AYSG","ts":"1611846454.016000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"paKz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"re-posting from zulip:\n\nI have some admittedly idiosyncratic preferences for my indentations.  In particular, I want all closing delimiters to occur at the start of new lines,  unless they enclose function arguments.\n\nSo, for example, currently if I write a closing delimiter on a new line I get, e.g.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia\nDict(:a=>1,\n     :b=>2,\n    )"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What I "},{"type":"text","text":"want","style":{"bold":true}},{"type":"text","text":" is\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia\nDict(:a=>1,\n     :b=>2,\n)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nFor functions, what I get is\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia\nfunction f(x=1;\n        kwarg1=2\n    )\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but what I "},{"type":"text","text":"want","style":{"bold":true}},{"type":"text","text":" is\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia\nfunction f(x=1;\n           kwarg1=2\n          )\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAnyone know what I can set to achieve this?  I figure the first one is probably easy"}]}]}],"thread_ts":"1611846454.016000","reply_count":1,"reply_users_count":1,"latest_reply":"1611849974.016300","reply_users":["ULGMQ3LCB"],"subscribed":false},{"client_msg_id":"96cd7d7f-b48b-44f8-9f0a-b3401d6f03be","type":"message","text":"You'd have to write a custom vimscript (or lua if you are using neovim) function, and set it to `indentexpr`. It'd look something like this:\n\n```setlocal indentexpr=JuliaIndent()\n\nfunction! JuliaIndent()\n\n...\n\nendfunction```\nin this function, you'd have to get the current line and use the context (whether you are closing a function or a expression) and the characters using pattern matching probably and choose the indent level accordingly.\n\nThe Julia Vim plugin is a great place to start if you want to hack on something:\n\n<https://github.com/JuliaEditorSupport/julia-vim/blob/cb5c3c1ef605a950b687fac948a01fc9a68fea5a/indent/julia.vim#L330>\n\nIt is well documented and also has options that might already do what you want.","user":"ULGMQ3LCB","ts":"1611849974.016300","team":"T68168MUP","edited":{"user":"ULGMQ3LCB","ts":"1611849989.000000"},"blocks":[{"type":"rich_text","block_id":"cKH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You'd have to write a custom vimscript (or lua if you are using neovim) function, and set it to "},{"type":"text","text":"indentexpr","style":{"code":true}},{"type":"text","text":". It'd look something like this:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"setlocal indentexpr=JuliaIndent()\n\nfunction! JuliaIndent()\n\n...\n\nendfunction"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"in this function, you'd have to get the current line and use the context (whether you are closing a function or a expression) and the characters using pattern matching probably and choose the indent level accordingly.\n\nThe Julia Vim plugin is a great place to start if you want to hack on something:\n\n"},{"type":"link","url":"https://github.com/JuliaEditorSupport/julia-vim/blob/cb5c3c1ef605a950b687fac948a01fc9a68fea5a/indent/julia.vim#L330"},{"type":"text","text":"\n\nIt is well documented and also has options that might already do what you want."}]}]}],"thread_ts":"1611846454.016000","parent_user_id":"U9VG1AYSG"}]