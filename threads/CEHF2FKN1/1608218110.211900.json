[{"client_msg_id":"18765486-19e3-4950-8db4-b261daf54117","type":"message","text":"I feel like today's question was poorly explained. Given the example\n```.#.\n..#\n###```\nWhy does the next iteration not have\n```???\n???\n???\n # &lt;-```\nthis one since there were exactly three neighbors in the iteration before?","user":"UC81ESVH6","ts":"1608218110.211900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e1yg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel like today's question was poorly explained. Given the example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":".#.\n..#\n###"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Why does the next iteration not have\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"???\n???\n???\n # <-"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"this one since there were exactly three neighbors in the iteration before?"}]}]}],"thread_ts":"1608218110.211900","reply_count":19,"reply_users_count":5,"latest_reply":"1608248016.217600","reply_users":["USU9FRPEU","ULGMQ3LCB","U73KENNG4","UC81ESVH6","U01AVQSBTLJ"],"subscribed":false},{"client_msg_id":"b36b527b-f24d-493e-b63e-0870cff16c2e","type":"message","text":"They compact and re-center the universe between iterations.","user":"USU9FRPEU","ts":"1608218883.212000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DRnOL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They compact and re-center the universe between iterations."}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6","reactions":[{"name":"+1","users":["ULGMQ3LCB","UP0P065ME"],"count":2}]},{"client_msg_id":"04a3935f-dd59-4d60-ac48-a1e2bf066d6d","type":"message","text":"This confused me so much when I had to debug my code in part 2.","user":"ULGMQ3LCB","ts":"1608219641.212300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2F=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This confused me so much when I had to debug my code in part 2."}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"1a7cab16-a9f7-499e-8119-ca0ec36c476b","type":"message","text":"I don’t understand that - but also, why is the lower right corner not “#” in the next iteration? It has two neighbours right?","user":"U73KENNG4","ts":"1608221345.212700","team":"T68168MUP","edited":{"user":"U73KENNG4","ts":"1608221359.000000"},"blocks":[{"type":"rich_text","block_id":"zzbr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t understand that - but also, why is the lower right corner not “#” in the next iteration? It has two neighbours right?"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"type":"message","text":"My original answer (not cleaned up)","files":[{"id":"F01H5D4NVFC","created":1608221854,"timestamp":1608221854,"name":"Untitled.julia","title":"Untitled","mimetype":"text/plain","filetype":"julia","pretty_type":"Julia","user":"UC81ESVH6","editable":true,"size":416,"mode":"snippet","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01H5D4NVFC/Untitled.julia","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01H5D4NVFC/download/Untitled.julia","permalink":"https://julialang.slack.com/files/UC81ESVH6/F01H5D4NVFC/Untitled.julia","permalink_public":"https://slack-files.com/T68168MUP-F01H5D4NVFC-5ab039b2a5","edit_link":"https://julialang.slack.com/files/UC81ESVH6/F01H5D4NVFC/Untitled.julia/edit","preview":"function simulate(active, xs, xe, ys, ye, zs, ze)\r\n    next = deepcopy(active)\r\n    for i in xs:xe, j in ys:ye, k in zs:ze\r\n        c = count(Iterators.product(i-1:i+1, j-1:j+1, k-1:k+1)) do z\r\n            z != (i, j, k) && z in active\r","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">function</span> <span class=\"cm-def\">simulate</span>(<span class=\"cm-def\">active</span>, <span class=\"cm-def\">xs</span>, <span class=\"cm-def\">xe</span>, <span class=\"cm-def\">ys</span>, <span class=\"cm-def\">ye</span>, <span class=\"cm-def\">zs</span>, <span class=\"cm-def\">ze</span>)</pre></div>\n<div><pre>    <span class=\"cm-variable\">next</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">deepcopy</span>(<span class=\"cm-variable-2\">active</span>)</pre></div>\n<div><pre>    <span class=\"cm-keyword\">for</span> <span class=\"cm-variable\">i</span> <span class=\"cm-keyword\">in</span> <span class=\"cm-variable\">xs</span>:<span class=\"cm-variable\">xe</span>, <span class=\"cm-variable\">j</span> <span class=\"cm-keyword\">in</span> <span class=\"cm-variable\">ys</span>:<span class=\"cm-variable\">ye</span>, <span class=\"cm-variable\">k</span> <span class=\"cm-keyword\">in</span> <span class=\"cm-variable\">zs</span>:<span class=\"cm-variable\">ze</span></pre></div>\n<div><pre>        <span class=\"cm-variable\">c</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">count</span>(<span class=\"cm-variable\">Iterators</span>.<span class=\"cm-property\">product</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>:<span class=\"cm-variable\">i</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>, <span class=\"cm-variable\">j</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>:<span class=\"cm-variable\">j</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>, <span class=\"cm-variable\">k</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>:<span class=\"cm-variable\">k</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>)) <span class=\"cm-keyword\">do</span> <span class=\"cm-variable\">z</span></pre></div>\n<div><pre>            <span class=\"cm-variable\">z</span> <span class=\"cm-operator\">!=</span> (<span class=\"cm-variable\">i</span>, <span class=\"cm-variable\">j</span>, <span class=\"cm-variable\">k</span>) <span class=\"cm-operator\">&amp;</span><span class=\"cm-operator\">&amp;</span> <span class=\"cm-variable\">z</span> <span class=\"cm-keyword\">in</span> <span class=\"cm-variable\">active</span></pre></div>\n</div>\n</div>\n","lines":11,"lines_more":6,"preview_is_truncated":false,"is_starred":false,"has_rich_preview":false}],"upload":true,"blocks":[{"type":"rich_text","block_id":"5SN+6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My original answer (not cleaned up)"}]}]}],"user":"UC81ESVH6","display_as_bot":false,"ts":"1608221867.213000","client_msg_id":"8173178d-d664-473c-ae81-b46423a10bc5","thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"type":"message","text":"versus what I guess the answer really is","files":[{"id":"F01GQKVR9U7","created":1608221895,"timestamp":1608221895,"name":"Untitled.julia","title":"Untitled","mimetype":"text/plain","filetype":"julia","pretty_type":"Julia","user":"UC81ESVH6","editable":true,"size":478,"mode":"snippet","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01GQKVR9U7/Untitled.julia","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01GQKVR9U7/download/Untitled.julia","permalink":"https://julialang.slack.com/files/UC81ESVH6/F01GQKVR9U7/Untitled.julia","permalink_public":"https://slack-files.com/T68168MUP-F01GQKVR9U7-230c7431b2","edit_link":"https://julialang.slack.com/files/UC81ESVH6/F01GQKVR9U7/Untitled.julia/edit","preview":"function simulate!(active, xs, xe, ys, ye, zs, ze)\r\n    counts = Dict(\r\n        (i, j, k) => count(Iterators.product(i-1:i+1, j-1:j+1, k-1:k+1)) do z\r\n            z != (i, j, k) && z in active\r\n        end\r","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">function</span> <span class=\"cm-def\">simulate!</span>(<span class=\"cm-variable\">active</span>, <span class=\"cm-variable\">xs</span>, <span class=\"cm-variable\">xe</span>, <span class=\"cm-variable\">ys</span>, <span class=\"cm-variable\">ye</span>, <span class=\"cm-variable\">zs</span>, <span class=\"cm-variable\">ze</span>)</pre></div>\n<div><pre>    <span class=\"cm-variable\">counts</span> <span class=\"cm-operator\">=</span> <span class=\"cm-builtin\">Dict</span>(</pre></div>\n<div><pre>        (<span class=\"cm-variable\">i</span>, <span class=\"cm-variable\">j</span>, <span class=\"cm-variable\">k</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-builtin\">count</span>(<span class=\"cm-variable\">Iterators</span><span class=\"cm-operator\">.</span><span class=\"cm-builtin\">product</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span><span class=\"cm-operator\">:</span><span class=\"cm-variable\">i</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>, <span class=\"cm-variable\">j</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span><span class=\"cm-operator\">:</span><span class=\"cm-variable\">j</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>, <span class=\"cm-variable\">k</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span><span class=\"cm-operator\">:</span><span class=\"cm-variable\">k</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>)) <span class=\"cm-keyword\">do</span> <span class=\"cm-variable\">z</span></pre></div>\n<div><pre>            <span class=\"cm-variable\">z</span> <span class=\"cm-operator\">!=</span> (<span class=\"cm-variable\">i</span>, <span class=\"cm-variable\">j</span>, <span class=\"cm-variable\">k</span>) <span class=\"cm-operator\">&amp;</span><span class=\"cm-operator\">&amp;</span> <span class=\"cm-variable\">z</span> <span class=\"cm-operator\">in</span> <span class=\"cm-variable\">active</span></pre></div>\n<div><pre>        <span class=\"cm-keyword\">end</span></pre></div>\n</div>\n</div>\n","lines":15,"lines_more":10,"preview_is_truncated":false,"is_starred":false,"has_rich_preview":false}],"upload":true,"blocks":[{"type":"rich_text","block_id":"tF7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"versus what I guess the answer really is"}]}]}],"user":"UC81ESVH6","display_as_bot":false,"ts":"1608221897.213400","client_msg_id":"8c6abc14-c41f-43cd-879d-5b6512fbc00e","thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"bf27df28-fdfe-44ed-ae39-d8f02c6a190e","type":"message","text":"<@UC81ESVH6> don’t really want to look at the answer before I’ve solved it myself, but am I not right that the test example is broken?","user":"U73KENNG4","ts":"1608222133.214000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W8OoJ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UC81ESVH6"},{"type":"text","text":" don’t really want to look at the answer before I’ve solved it myself, but am I not right that the test example is broken?"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"549e1474-d1a5-4d7d-999b-d275461b3add","type":"message","text":"oh I think I get it after seeing the discussion on zulip. What a borked example","user":"U73KENNG4","ts":"1608222253.214200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I4uzA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh I think I get it after seeing the discussion on zulip. What a borked example"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"7dc02fb3-e857-4d12-8588-d21b8d375cb0","type":"message","text":"~From my understanding, you need two passes, one to make the cubes inactive, and another one to make the cubes active. That's a little contradictory to \"_all_ cubes _simultaneously_ change their state\" so I don't really follow why this is correct.~","user":"UC81ESVH6","ts":"1608222741.214400","team":"T68168MUP","edited":{"user":"UC81ESVH6","ts":"1608247725.000000"},"blocks":[{"type":"rich_text","block_id":"0kMj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From my understanding, you need two passes, one to make the cubes inactive, and another one to make the cubes active. That's a little contradictory to \"","style":{"strike":true}},{"type":"text","text":"all","style":{"italic":true,"strike":true}},{"type":"text","text":" cubes ","style":{"strike":true}},{"type":"text","text":"simultaneously","style":{"italic":true,"strike":true}},{"type":"text","text":" change their state\" so I don't really follow why this is correct.","style":{"strike":true}}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"b2e2da6f-9a4b-4504-8897-958e7a17940e","type":"message","text":"The example is truncated  <https://www.reddit.com/r/adventofcode/comments/ker0wi/2020_day_17_part_1_sample_input_wrong/>","user":"U01AVQSBTLJ","ts":"1608223989.214600","team":"T68168MUP","attachments":[{"service_name":"reddit","title":"[2020 Day 17 (Part 1)] Sample input wrong?","title_link":"https://www.reddit.com/r/adventofcode/comments/ker0wi/2020_day_17_part_1_sample_input_wrong/","text":"Before any cycles: z=0 .#. ..# ### After 1 cycle: z=-1 #.. ..# .#. z=0 #.# ...","fallback":"reddit: [2020 Day 17 (Part 1)] Sample input wrong?","thumb_url":"https://www.redditstatic.com/new-icon.png","from_url":"https://www.reddit.com/r/adventofcode/comments/ker0wi/2020_day_17_part_1_sample_input_wrong/","thumb_width":256,"thumb_height":256,"service_icon":"http://www.redditstatic.com/desktop2x/img/favicon/apple-icon-57x57.png","id":1,"original_url":"https://www.reddit.com/r/adventofcode/comments/ker0wi/2020_day_17_part_1_sample_input_wrong/"}],"blocks":[{"type":"rich_text","block_id":"muXh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The example is truncated  "},{"type":"link","url":"https://www.reddit.com/r/adventofcode/comments/ker0wi/2020_day_17_part_1_sample_input_wrong/"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"4f5b824e-c5fa-4bf2-bf97-2faaab98f18e","type":"message","text":"I had same problem and finding that the example is truncated helped me in finding bug in my own code","user":"U01AVQSBTLJ","ts":"1608224029.214900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0Puzh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I had same problem and finding that the example is truncated helped me in finding bug in my own code"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"9c0a0f34-6a9b-4df7-abfe-1031089b6f52","type":"message","text":"<@UC81ESVH6> What that means is that you evaluate the neighbors all at once, and then change the state based on that information.","user":"USU9FRPEU","ts":"1608224141.215300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WL59","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UC81ESVH6"},{"type":"text","text":" What that means is that you evaluate the neighbors all at once, and then change the state based on that information."}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"153c0a7e-ae99-46ce-82ba-8e99533f8e95","type":"message","text":"Here's my n-dimensional truncation code in case that helps.\n```    function compact(universe::AbstractArray)\n        e = extrema(findall(universe))\n\n        # 3D\n        # v = view(universe, e[1][1]:e[2][1], e[1][2]:e[2][2], e[1][3]:e[2][3])\n        # 4D\n        # v = view(universe, e[1][1]:e[2][1], e[1][2]:e[2][2], e[1][3]:e[2][3], e[1][4]:e[2][4])\n\n        # ND\n        v = view(universe, [a:b for (a,b) in zip(Tuple.(e)...)]...)\n        copy(v)\n    end```","user":"USU9FRPEU","ts":"1608224523.215500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uO6ZH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's my n-dimensional truncation code in case that helps.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    function compact(universe::AbstractArray)\n        e = extrema(findall(universe))\n\n        # 3D\n        # v = view(universe, e[1][1]:e[2][1], e[1][2]:e[2][2], e[1][3]:e[2][3])\n        # 4D\n        # v = view(universe, e[1][1]:e[2][1], e[1][2]:e[2][2], e[1][3]:e[2][3], e[1][4]:e[2][4])\n\n        # ND\n        v = view(universe, [a:b for (a,b) in zip(Tuple.(e)...)]...)\n        copy(v)\n    end"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"abd754f3-d5d1-46fb-b861-a982bbad3624","type":"message","text":"No the two-pass solution isn’t unclear, it’s a direct contradiction of the problem text","user":"U73KENNG4","ts":"1608224639.215700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TGl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No the two-pass solution isn’t unclear, it’s a direct contradiction of the problem text"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"89582140-262a-449a-8ab4-f18e67fa69ed","type":"message","text":"I don't think you _need_ two passes (and honestly I don't know if it would work or not in that case. if it does, it is a happy accident / exploiting the current state of the portal dimension).","user":"ULGMQ3LCB","ts":"1608225059.215900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e7QjR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think you "},{"type":"text","text":"need","style":{"italic":true}},{"type":"text","text":" two passes (and honestly I don't know if it would work or not in that case. if it does, it is a happy accident / exploiting the current state of the portal dimension)."}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"4cd66fb7-58bf-4069-bad2-f7c9cc22d52d","type":"message","text":"I don't mean \"two passes\" as in gathering neighbors twice, but the difference in my two snippets above is the first works the way I think cellular automatas usually work, while the second (and apparently correct one) counts once, then removes and adds in separate passes based on that initial count, which feels wrong.","user":"UC81ESVH6","ts":"1608225307.216300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GMwuh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't mean \"two passes\" as in gathering neighbors twice, but the difference in my two snippets above is the first works the way I think cellular automatas usually work, while the second (and apparently correct one) counts once, then removes and adds in separate passes based on that initial count, which feels wrong."}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"2a434210-2c75-4a05-bc88-003d642a912f","type":"message","text":"That’s very weird, must be something else","user":"U73KENNG4","ts":"1608231998.216800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rhE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That’s very weird, must be something else"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"c55ed1fa-0bc6-4b1f-814d-eb49b44f714b","type":"message","text":"<@UC81ESVH6> I took your first `simulate` implementation... and it actually seems to work","user":"USU9FRPEU","ts":"1608245964.217100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G5Xw","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UC81ESVH6"},{"type":"text","text":" I took your first "},{"type":"text","text":"simulate","style":{"code":true}},{"type":"text","text":" implementation... and it actually seems to work"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"a59194f2-4645-4527-b872-0c2ebf73c0d3","type":"message","text":"```function read_input(filename, nd = 3)\n    lines = readlines(filename)\n    universe = permutedims(hcat(Vector{Char}.(lines)...)) .== '#'\n    array = reshape(universe, ( size(universe)..., ntuple(i-&gt;1, nd-2)... ) )\n    return Set(findall(array))\nend\n\nfunction simulate(active::Set{Tuple{Int,Int,Int}}, xs, xe, ys, ye, zs, ze)\n    next = deepcopy(active)\n    for i in xs:xe, j in ys:ye, k in zs:ze\n        c = count(Iterators.product(i-1:i+1, j-1:j+1, k-1:k+1)) do z\n            z != (i, j, k) &amp;&amp; z in active\n        end\n        (i, j, k) in active &amp;&amp; (c != 2 &amp;&amp; c != 3) &amp;&amp; pop!(next, (i, j, k))\n        !((i, j, k) in active) &amp;&amp; c == 3 &amp;&amp; push!(next, (i, j, k))\n    end\n    next\nend\n\nfunction simulate(active::Set{CartesianIndex{3}})\n    e = extrema(active)\n    s = Set(Tuple.(active))\n    Set(CartesianIndex.(simulate(s, e[1][1]-1, e[2][1]+1, e[1][2]-1, e[2][2]+1, e[1][3]-1, e[2][3]+1)))\nend\n\nfunction part1()\n    active = read_input(\"input.txt\")\n    for i = 1:6\n        active = simulate(active)\n    end\n    length(active)\nend```","user":"USU9FRPEU","ts":"1608246333.217300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"36A/","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function read_input(filename, nd = 3)\n    lines = readlines(filename)\n    universe = permutedims(hcat(Vector{Char}.(lines)...)) .== '#'\n    array = reshape(universe, ( size(universe)..., ntuple(i->1, nd-2)... ) )\n    return Set(findall(array))\nend\n\nfunction simulate(active::Set{Tuple{Int,Int,Int}}, xs, xe, ys, ye, zs, ze)\n    next = deepcopy(active)\n    for i in xs:xe, j in ys:ye, k in zs:ze\n        c = count(Iterators.product(i-1:i+1, j-1:j+1, k-1:k+1)) do z\n            z != (i, j, k) && z in active\n        end\n        (i, j, k) in active && (c != 2 && c != 3) && pop!(next, (i, j, k))\n        !((i, j, k) in active) && c == 3 && push!(next, (i, j, k))\n    end\n    next\nend\n\nfunction simulate(active::Set{CartesianIndex{3}})\n    e = extrema(active)\n    s = Set(Tuple.(active))\n    Set(CartesianIndex.(simulate(s, e[1][1]-1, e[2][1]+1, e[1][2]-1, e[2][2]+1, e[1][3]-1, e[2][3]+1)))\nend\n\nfunction part1()\n    active = read_input(\"input.txt\")\n    for i = 1:6\n        active = simulate(active)\n    end\n    length(active)\nend"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6"},{"client_msg_id":"5b4a2f5f-bd51-4109-ba2a-6f64a6ee1724","type":"message","text":"Ugh, went through my vim history and saw that last night I had `c != 2 || c != 3`  instead of `&amp;&amp;`, and must have fixed it without much thought when making the two functions look as similar as possible before posting. But that mistake coupled with the odd example really threw me for a loop! :sweat_smile:","user":"UC81ESVH6","ts":"1608248016.217600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NNH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ugh, went through my vim history and saw that last night I had "},{"type":"text","text":"c != 2 || c != 3","style":{"code":true}},{"type":"text","text":"  instead of "},{"type":"text","text":"&&","style":{"code":true}},{"type":"text","text":", and must have fixed it without much thought when making the two functions look as similar as possible before posting. But that mistake coupled with the odd example really threw me for a loop! "},{"type":"emoji","name":"sweat_smile"}]}]}],"thread_ts":"1608218110.211900","parent_user_id":"UC81ESVH6","reactions":[{"name":"vim","users":["ULGMQ3LCB","USU9FRPEU"],"count":2}]}]