[{"client_msg_id":"c2cfece9-5315-493d-b95b-eac81990ab0d","type":"message","text":"Hej hej! Was there a recent change to `BinaryBuilder` that forced the addition of new dependencies to the `Project.toml` files for the resulting JLL packages?\n\nAs far as I can tell, <@U68P09RFZ> made a trivial change to the `build_tarballs.jl` script of the `MicrosoftMPI` package (<https://github.com/JuliaPackaging/Yggdrasil/commit/24422dfb49fbbc7b290e6e28cb1ab3cd4b150c57#diff-9fca967e1c89129c272e31b3d4c6207d891b8c14c7ff4579a844b8f615c161f6|https://github.com/JuliaPackaging/Yggdrasil/commit/24422dfb49fbbc7b290e6e28cb1ab3cd4b150c57#diff-9fca967e1c89129c272e3[…]c14c7ff4579a844b8f615c161f6>), which caused a rebuild with an increased build count in the version number `10.1.2+3` --&gt; `10.1.2+4`.\n\nHowever, at the same time, two new dependencies were added, `Artifacts` and `JLLWrappers`, and at least for `JLLWrappers` a restrictive `[compat]` entry was added: <https://github.com/JuliaBinaryWrappers/MicrosoftMPI_jll.jl/commit/2954eb86ac669516279e14ac7722e1ba52f57cde#diff-72ed386c2a0cd1d23c0968297e70023ed98c22490d146dd89fc91f48369bad4d|https://github.com/JuliaBinaryWrappers/MicrosoftMPI_jll.jl/commit/2954eb86ac669516279e14ac7722e1ba52f57cde#diff-72ed386c2a0cd1[…]dd89fc91f48369bad4d>\n\nThe one possible culprit I could identify was the commit by <@UDB26738Q> to increase the compat of the BinaryBuilder JLLs in <https://github.com/JuliaPackaging/BinaryBuilder.jl/commit/696d9f9ad1c5a105b1b369a1f45b88a6647b790d>, but I am completely out of my depth here if this is related at all.\n\nIn any case, it seems to me that somehow BinaryBuilder creates new rebuilds with added compatibility requirements, which to me at least feels like it is against the ideas of semantic versioning, where a rebuild should not break existing code. This is a problem for at least one of our \"reproducible science\" repositories (<https://github.com/trixi-framework/talk-2021-julia-adaptive-multi-physics-simulations>), since now the dependencies cannot be resolved anymore:\n```Unsatisfiable requirements detected for package JLLWrappers [692b3bcd]:\n JLLWrappers [692b3bcd] log:\n ├─possible versions are: [1.0.0-1.0.2, 1.1.0-1.1.4, 1.2.0] or uninstalled\n ├─restricted to versions 1.1.4 by an explicit requirement, leaving only versions 1.1.4\n └─restricted by compatibility requirements with MicrosoftMPI_jll [9237b28f] to versions: 1.2.0 — no versions left\n   └─MicrosoftMPI_jll [9237b28f] log:\n     ├─possible versions are: 10.1.2 or uninstalled\n     └─restricted to versions 10.1.2 by an explicit requirement, leaving only versions 10.1.2```\nIs there anything we can do to fix this on our side without having to manually check all our repositories? Or is there something that can be done on Yggdrasil/JuliaBinaryWrapper side?\n\nOf course, maybe nothing is broken and I just didn't correctly use `Project.toml` and `Manifest.toml`, in which case I'd be grateful for some hints on where I went wrong.","user":"UTKCH2WFL","ts":"1611906170.164500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lcB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hej hej! Was there a recent change to "},{"type":"text","text":"BinaryBuilder","style":{"code":true}},{"type":"text","text":" that forced the addition of new dependencies to the "},{"type":"text","text":"Project.toml","style":{"code":true}},{"type":"text","text":" files for the resulting JLL packages?\n\nAs far as I can tell, "},{"type":"user","user_id":"U68P09RFZ"},{"type":"text","text":" made a trivial change to the "},{"type":"text","text":"build_tarballs.jl","style":{"code":true}},{"type":"text","text":" script of the "},{"type":"text","text":"MicrosoftMPI","style":{"code":true}},{"type":"text","text":" package ("},{"type":"link","url":"https://github.com/JuliaPackaging/Yggdrasil/commit/24422dfb49fbbc7b290e6e28cb1ab3cd4b150c57#diff-9fca967e1c89129c272e31b3d4c6207d891b8c14c7ff4579a844b8f615c161f6","text":"https://github.com/JuliaPackaging/Yggdrasil/commit/24422dfb49fbbc7b290e6e28cb1ab3cd4b150c57#diff-9fca967e1c89129c272e3[…]c14c7ff4579a844b8f615c161f6"},{"type":"text","text":"), which caused a rebuild with an increased build count in the version number "},{"type":"text","text":"10.1.2+3","style":{"code":true}},{"type":"text","text":" --> "},{"type":"text","text":"10.1.2+4","style":{"code":true}},{"type":"text","text":".\n\nHowever, at the same time, two new dependencies were added, "},{"type":"text","text":"Artifacts","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"JLLWrappers","style":{"code":true}},{"type":"text","text":", and at least for "},{"type":"text","text":"JLLWrappers","style":{"code":true}},{"type":"text","text":" a restrictive "},{"type":"text","text":"[compat]","style":{"code":true}},{"type":"text","text":" entry was added: "},{"type":"link","url":"https://github.com/JuliaBinaryWrappers/MicrosoftMPI_jll.jl/commit/2954eb86ac669516279e14ac7722e1ba52f57cde#diff-72ed386c2a0cd1d23c0968297e70023ed98c22490d146dd89fc91f48369bad4d","text":"https://github.com/JuliaBinaryWrappers/MicrosoftMPI_jll.jl/commit/2954eb86ac669516279e14ac7722e1ba52f57cde#diff-72ed386c2a0cd1[…]dd89fc91f48369bad4d"},{"type":"text","text":"\n\nThe one possible culprit I could identify was the commit by "},{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" to increase the compat of the BinaryBuilder JLLs in "},{"type":"link","url":"https://github.com/JuliaPackaging/BinaryBuilder.jl/commit/696d9f9ad1c5a105b1b369a1f45b88a6647b790d"},{"type":"text","text":", but I am completely out of my depth here if this is related at all.\n\nIn any case, it seems to me that somehow BinaryBuilder creates new rebuilds with added compatibility requirements, which to me at least feels like it is against the ideas of semantic versioning, where a rebuild should not break existing code. This is a problem for at least one of our \"reproducible science\" repositories ("},{"type":"link","url":"https://github.com/trixi-framework/talk-2021-julia-adaptive-multi-physics-simulations"},{"type":"text","text":"), since now the dependencies cannot be resolved anymore:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Unsatisfiable requirements detected for package JLLWrappers [692b3bcd]:\n JLLWrappers [692b3bcd] log:\n ├─possible versions are: [1.0.0-1.0.2, 1.1.0-1.1.4, 1.2.0] or uninstalled\n ├─restricted to versions 1.1.4 by an explicit requirement, leaving only versions 1.1.4\n └─restricted by compatibility requirements with MicrosoftMPI_jll [9237b28f] to versions: 1.2.0 — no versions left\n   └─MicrosoftMPI_jll [9237b28f] log:\n     ├─possible versions are: 10.1.2 or uninstalled\n     └─restricted to versions 10.1.2 by an explicit requirement, leaving only versions 10.1.2"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Is there anything we can do to fix this on our side without having to manually check all our repositories? Or is there something that can be done on Yggdrasil/JuliaBinaryWrapper side?\n\nOf course, maybe nothing is broken and I just didn't correctly use "},{"type":"text","text":"Project.toml","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Manifest.toml","style":{"code":true}},{"type":"text","text":", in which case I'd be grateful for some hints on where I went wrong."}]}]}],"thread_ts":"1611906170.164500","reply_count":65,"reply_users_count":4,"latest_reply":"1611942457.181600","reply_users":["UTKCH2WFL","U66GD0880","UDB26738Q","U68P09RFZ"],"subscribed":false},{"client_msg_id":"2c19b155-f657-479c-93b9-b99a93f2ab20","type":"message","text":"Btw, if this is the wrong channel or should go to Discourse, please let me know","user":"UTKCH2WFL","ts":"1611906188.164600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2wO7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Btw, if this is the wrong channel or should go to Discourse, please let me know"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"dcd9c288-403d-4d63-bc9b-05bbf2e56b1a","type":"message","text":"Nope, you’re correct, we have added more dependencies to JLLs generated from BB.","user":"U66GD0880","ts":"1611939330.167500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EKP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nope, you’re correct, we have added more dependencies to JLLs generated from BB."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"cb6c9d97-ae02-45eb-a801-69ed18b1a564","type":"message","text":"BB doesn’t look at what your package previously used; it just always generates its template to create a JLL; so if you update BB and the template changes, the JLL may have new dependencies","user":"U66GD0880","ts":"1611939396.167700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zFJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BB doesn’t look at what your package previously used; it just always generates its template to create a JLL; so if you update BB and the template changes, the JLL may have new dependencies"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"c67cd826-a526-4a98-a47e-d9dc7ef490ac","type":"message","text":"It’s up to the user to change the version number of the generated JLL","user":"U66GD0880","ts":"1611939413.167900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HLhb2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s up to the user to change the version number of the generated JLL"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"b5831059-1a95-47f1-af95-08691761d1cd","type":"message","text":"In the past, we strongly encouraged users to keep the JLL version number locked to the upstream source version; (e.g. if `LibFoo_jll` contains `libfoo` `v3.2.1`, then `LibFoo_jll` shuold have a `v3.2.1+X` version number) but that doesn’t play well with the Registry, because if there are changes to resolver-sensitive information (such as compat bounds or dependencies) they aren’t properly processed if the change happens between two versions that differ only in their build number (the `+X` part)","user":"U66GD0880","ts":"1611939530.168200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UpLvC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the past, we strongly encouraged users to keep the JLL version number locked to the upstream source version; (e.g. if "},{"type":"text","text":"LibFoo_jll","style":{"code":true}},{"type":"text","text":" contains "},{"type":"text","text":"libfoo","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"v3.2.1","style":{"code":true}},{"type":"text","text":", then "},{"type":"text","text":"LibFoo_jll","style":{"code":true}},{"type":"text","text":" shuold have a "},{"type":"text","text":"v3.2.1+X","style":{"code":true}},{"type":"text","text":" version number) but that doesn’t play well with the Registry, because if there are changes to resolver-sensitive information (such as compat bounds or dependencies) they aren’t properly processed if the change happens between two versions that differ only in their build number (the "},{"type":"text","text":"+X","style":{"code":true}},{"type":"text","text":" part)"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"8b357e8b-c37d-457c-94f3-9c76c959cea9","type":"message","text":"So nowadays we’re in a limbo where some JLLs have broken free of the versioning of their upstream sources, but not all, and we don’t have the best tooling available for mapping from JLL version -&gt; upstream source number, but we’ll get there, slowly.","user":"U66GD0880","ts":"1611939627.168400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"su9E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So nowadays we’re in a limbo where some JLLs have broken free of the versioning of their upstream sources, but not all, and we don’t have the best tooling available for mapping from JLL version -> upstream source number, but we’ll get there, slowly."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"869e2929-728e-4343-9b8b-457c0b4d5e25","type":"message","text":"So the answer to your question is; if you’ve updated your BB version (or you’re using Yggdrasil, where we update BB quite often) and it’s generating JLLs with a different compat set, and you want that to be a different version number, then you’ll need to change the version number your JLL is being published under.","user":"U66GD0880","ts":"1611939707.168600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fLRf5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the answer to your question is; if you’ve updated your BB version (or you’re using Yggdrasil, where we update BB quite often) and it’s generating JLLs with a different compat set, and you want that to be a different version number, then you’ll need to change the version number your JLL is being published under."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"3345e1b1-f634-474b-bf5a-542f5f928edb","type":"message","text":"for NetCDF we're doing this (which is what <@U012FH66MFW> is doing in the cxxwrap world): <https://github.com/Alexander-Barth/Yggdrasil/blob/afd76378a9c9baf2cafe1b9069a15dc15d6cd2d3/N/NetCDF/common.jl#L12-L15>.  I'm not a huge fan of these ridiculously large numbers, but it does have some advantages, like having a way to get the upstream version and being able to distinguish between different builds within the same upstream version (until you do the 101th build....)","user":"UDB26738Q","ts":"1611939829.168800","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1611939842.000000"},"blocks":[{"type":"rich_text","block_id":"H61dv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for NetCDF we're doing this (which is what "},{"type":"user","user_id":"U012FH66MFW"},{"type":"text","text":" is doing in the cxxwrap world): "},{"type":"link","url":"https://github.com/Alexander-Barth/Yggdrasil/blob/afd76378a9c9baf2cafe1b9069a15dc15d6cd2d3/N/NetCDF/common.jl#L12-L15"},{"type":"text","text":".  I'm not a huge fan of these ridiculously large numbers, but it does have some advantages, like having a way to get the upstream version and being able to distinguish between different builds within the same upstream version (until you do the 101th build....)"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"11f2a03b-9687-4d72-b253-aeddcc137746","type":"message","text":"Yeah, the only thing I caution against this is that once you choose this numbering style, there’s no going back.","user":"U66GD0880","ts":"1611939887.169100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ebI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, the only thing I caution against this is that once you choose this numbering style, there’s no going back."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"0e8f5750-951f-4ae2-b207-94db476d5572","type":"message","text":"yes, that's the main issue of the ridiculously large numbers, but we do need a way to not use the build number, it now does more harm than good","user":"UDB26738Q","ts":"1611939942.169300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JNsu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, that's the main issue of the ridiculously large numbers, but we do need a way to not use the build number, it now does more harm than good"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL","reactions":[{"name":"+1","users":["U66GD0880"],"count":1}]},{"client_msg_id":"374c2b20-a145-4c96-9f9b-ca2535209045","type":"message","text":"also, the 100x is particularly useful when you want to keep parallel versions of the package, for example for different versions of julia","user":"UDB26738Q","ts":"1611939992.169700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0X5pV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, the 100x is particularly useful when you want to keep parallel versions of the package, for example for different versions of julia"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"2eee4448-86ce-4f82-bd86-0b6e9af29719","type":"message","text":"how so?","user":"U66GD0880","ts":"1611940065.169900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AxI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how so?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"5283bf63-3abc-4e46-aef1-d5b96b55b13e","type":"message","text":"* version for Julia v1.3 adds 0.1.0: <https://github.com/JuliaPackaging/Yggdrasil/blob/7fd3e809a5425c39a91dfd2b83b32fa6d87840ef/N/NetCDF/NetCDF%40julia-1.3/build_tarballs.jl#L4>\n* version for Julia v1.6 adds 0.2.0: <https://github.com/JuliaPackaging/Yggdrasil/blob/7fd3e809a5425c39a91dfd2b83b32fa6d87840ef/N/NetCDF/NetCDF%40julia-1.6/build_tarballs.jl#L4>","user":"UDB26738Q","ts":"1611940196.170100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OdxfH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"* version for Julia v1.3 adds 0.1.0: "},{"type":"link","url":"https://github.com/JuliaPackaging/Yggdrasil/blob/7fd3e809a5425c39a91dfd2b83b32fa6d87840ef/N/NetCDF/NetCDF%40julia-1.3/build_tarballs.jl#L4"},{"type":"text","text":"\n* version for Julia v1.6 adds 0.2.0: "},{"type":"link","url":"https://github.com/JuliaPackaging/Yggdrasil/blob/7fd3e809a5425c39a91dfd2b83b32fa6d87840ef/N/NetCDF/NetCDF%40julia-1.6/build_tarballs.jl#L4"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"a5f366ed-8f08-4227-92c5-a43f5ba74fa0","type":"message","text":"…….huh","user":"U66GD0880","ts":"1611940292.170300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xQk6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"…….huh"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"9c6b0b48-81f2-461a-b41d-5dac60ca8450","type":"message","text":"OK, thanks a lot for the elaborate answer, folks! But what is it that I can concretely do to resolve this issue for me? I do not want to mess with `MicrosoftMPI_jll`, since I am not maintaining it, but apparently having a reference to version `10.1.2+3` in the `Manifest.toml` (<https://github.com/trixi-framework/talk-2021-julia-adaptive-multi-physics-simulations/blob/cb9e816c9cf786e5b2704fe8eac6693e6870fe0e/Manifest.toml#L593-L597|see here>) will still cause version `10.1.2+4` to be installed, which breaks the whole setup due to `JLLWrappers`. I tried to only update the version for `JLLWrappers`  using `] up JLLWrappers` , but since it is not a direct dependency in `Project.toml`, it will not change the Manifest","user":"UTKCH2WFL","ts":"1611940293.170500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u1eQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, thanks a lot for the elaborate answer, folks! But what is it that I can concretely do to resolve this issue for me? I do not want to mess with "},{"type":"text","text":"MicrosoftMPI_jll","style":{"code":true}},{"type":"text","text":", since I am not maintaining it, but apparently having a reference to version "},{"type":"text","text":"10.1.2+3","style":{"code":true}},{"type":"text","text":" in the "},{"type":"text","text":"Manifest.toml","style":{"code":true}},{"type":"text","text":" ("},{"type":"link","url":"https://github.com/trixi-framework/talk-2021-julia-adaptive-multi-physics-simulations/blob/cb9e816c9cf786e5b2704fe8eac6693e6870fe0e/Manifest.toml#L593-L597","text":"see here"},{"type":"text","text":") will still cause version "},{"type":"text","text":"10.1.2+4","style":{"code":true}},{"type":"text","text":" to be installed, which breaks the whole setup due to "},{"type":"text","text":"JLLWrappers","style":{"code":true}},{"type":"text","text":". I tried to only update the version for "},{"type":"text","text":"JLLWrappers","style":{"code":true}},{"type":"text","text":"  using "},{"type":"text","text":"] up JLLWrappers","style":{"code":true}},{"type":"text","text":" , but since it is not a direct dependency in "},{"type":"text","text":"Project.toml","style":{"code":true}},{"type":"text","text":", it will not change the Manifest"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"84f1a05d-7854-4d22-937a-03a5a03c0d34","type":"message","text":"The fundamental issue is this:\n\n```restricted to versions 1.1.4 by an explicit requirement, leaving only versions 1.1.4```","user":"U66GD0880","ts":"1611940352.170700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a7H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The fundamental issue is this:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"restricted to versions 1.1.4 by an explicit requirement, leaving only versions 1.1.4"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"210e8280-2dd5-40dd-9670-54b48dd39468","type":"message","text":"Something in your environment is restricting `JLLWrappers` to only `v1.1.4`.  Is this intended?","user":"U66GD0880","ts":"1611940376.170900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qGVb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Something in your environment is restricting "},{"type":"text","text":"JLLWrappers","style":{"code":true}},{"type":"text","text":" to only "},{"type":"text","text":"v1.1.4","style":{"code":true}},{"type":"text","text":".  Is this intended?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"39a33ea7-2009-4dba-8bf9-7e918d1c2973","type":"message","text":"Ideally, you shouldn’t have to worry about these new compat entries if you’re just a user; you should just always be getting the latest and greatest for all of your JLLs, but perhaps there is a corner-case like an older JLL that requires an old `JLLWrappers`, and a new JLL that requires newer `JLLWrappers`.","user":"U66GD0880","ts":"1611940445.171100","team":"T68168MUP","edited":{"user":"U66GD0880","ts":"1611940457.000000"},"blocks":[{"type":"rich_text","block_id":"L1O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ideally, you shouldn’t have to worry about these new compat entries if you’re just a user; you should just always be getting the latest and greatest for all of your JLLs, but perhaps there is a corner-case like an older JLL that requires an old "},{"type":"text","text":"JLLWrappers","style":{"code":true}},{"type":"text","text":", and a new JLL that requires newer "},{"type":"text","text":"JLLWrappers","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"5a59697e-2887-403f-9765-61edd0afd682","type":"message","text":"Well, not necessarily. We wanted the repo to be fully reproducible, thus the Manifest. It probably would work with a newer version as well, but then I'd had to retest all the code samples (no biggie for just one project, but there are others who might have the same issue).","user":"UTKCH2WFL","ts":"1611940461.171400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QSj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, not necessarily. We wanted the repo to be fully reproducible, thus the Manifest. It probably would work with a newer version as well, but then I'd had to retest all the code samples (no biggie for just one project, but there are others who might have the same issue)."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"e0e193bd-d1b3-4ecf-a5b3-df8351f2e957","type":"message","text":"Preferably, I'd like to have a mechanism in which I can force `Pkg` to get the offending `MicrosoftMPI_jll` package at *exactly* version `10.1.2+3` (and not `+4`), since that would not require me to retest everything","user":"UTKCH2WFL","ts":"1611940509.171600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4aA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Preferably, I'd like to have a mechanism in which I can force "},{"type":"text","text":"Pkg","style":{"code":true}},{"type":"text","text":" to get the offending "},{"type":"text","text":"MicrosoftMPI_jll","style":{"code":true}},{"type":"text","text":" package at "},{"type":"text","text":"exactly","style":{"bold":true}},{"type":"text","text":" version "},{"type":"text","text":"10.1.2+3","style":{"code":true}},{"type":"text","text":" (and not "},{"type":"text","text":"+4","style":{"code":true}},{"type":"text","text":"), since that would not require me to retest everything"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"9a3c6fda-2bc0-445c-85bd-56f3556d4129","type":"message","text":"If you want reproducibility, then you should only be using `pkg&gt; instantiate`, which will not change any package versions.  If you add/remove/update, then the package versions can change.","user":"U66GD0880","ts":"1611940510.171800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l8MQ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you want reproducibility, then you should only be using "},{"type":"text","text":"pkg> instantiate","style":{"code":true}},{"type":"text","text":", which will not change any package versions.  If you add/remove/update, then the package versions can change."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"eac85175-6b81-4f99-9045-367d7663bb3f","type":"message","text":"&gt; If you want reproducibility, then you should only be using pkg&gt; instantiate,\nYeah, but that's exactly the issue. If I clone the repo, start Julia with `julia --project` and just do `pkg&gt; instantiate`, it will get the latest build `+4` and not the one referenced in the manifest (`+3`)","user":"UTKCH2WFL","ts":"1611940580.172000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GCXWu","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If you want reproducibility, then you should only be using pkg> instantiate,"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, but that's exactly the issue. If I clone the repo, start Julia with "},{"type":"text","text":"julia --project","style":{"code":true}},{"type":"text","text":" and just do "},{"type":"text","text":"pkg> instantiate","style":{"code":true}},{"type":"text","text":", it will get the latest build "},{"type":"text","text":"+4","style":{"code":true}},{"type":"text","text":" and not the one referenced in the manifest ("},{"type":"text","text":"+3","style":{"code":true}},{"type":"text","text":")"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"8ea21891-4506-40e9-9c1e-f386e36c21df","type":"message","text":"I can’t reproduce that","user":"U66GD0880","ts":"1611940672.172200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n+bTu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can’t reproduce that"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"ad5b7e87-3b34-4480-8646-b8ebf5b1de89","type":"message","text":"I assume you’re on Windows?","user":"U66GD0880","ts":"1611940678.172400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c3jtA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I assume you’re on Windows?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"de232adb-2ea7-40ea-8333-273539bf9f57","type":"message","text":"(sorry for pestering you with this, maybe I am just too inexperienced to have properly set up)","user":"UTKCH2WFL","ts":"1611940682.172600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6cGy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(sorry for pestering you with this, maybe I am just too inexperienced to have properly set up)"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"70442cca-c3fb-4bd1-909a-1278280fa608","type":"message","text":"what version of Julia are you using?","user":"U66GD0880","ts":"1611940686.172800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wEF9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what version of Julia are you using?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"b037c5aa-fa3b-4d58-bdb1-4066f0abb713","type":"message","text":"Nope, on a Ubuntu machine","user":"UTKCH2WFL","ts":"1611940690.173000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tyw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nope, on a Ubuntu machine"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"0c1709d7-e5d4-4927-94e1-07f2d117c225","type":"message","text":"1.5.3","user":"UTKCH2WFL","ts":"1611940692.173200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MwFzy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1.5.3"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"aba81225-cf87-42e4-b9e6-79e3cee5e75b","type":"message","text":"Ironic that the trouble package is a Windows MPI package…. but it’s the principle of the thing!","user":"U66GD0880","ts":"1611940718.173400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WhiX=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ironic that the trouble package is a Windows MPI package…. but it’s the principle of the thing!"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"4c51576f-52b8-484e-b466-c5bd4674eb12","type":"message","text":"(and I deleted `~/.julia` before to start fresh, since if I had one of the offending packages already installed, it will apparently use the older version that works)","user":"UTKCH2WFL","ts":"1611940740.173600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ux/7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and I deleted "},{"type":"text","text":"~/.julia","style":{"code":true}},{"type":"text","text":" before to start fresh, since if I had one of the offending packages already installed, it will apparently use the older version that works)"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"e814994a-255c-4b95-bd52-a69fae9acd02","type":"message","text":"alright, can you show me the output of `pkg&gt; instantiate`?","user":"U66GD0880","ts":"1611940760.173800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/H/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"alright, can you show me the output of "},{"type":"text","text":"pkg> instantiate","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"289fc2fe-8f4e-4359-bb81-ef6318133d47","type":"message","text":"I just used Julia 1.5.3 on a Linux machine and it worked perfectly","user":"U66GD0880","ts":"1611940773.174000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eg/6m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just used Julia 1.5.3 on a Linux machine and it worked perfectly"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"5e2b4fda-c809-48e1-9489-970baf328f35","type":"message","text":"I could also only reproduce this when I tried to do it with a fresh environment","user":"UTKCH2WFL","ts":"1611940784.174200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"niW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I could also only reproduce this when I tried to do it with a fresh environment"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"9f381c42-02d1-4642-a2c4-9628cfccbe84","type":"message","text":"by a “fresh environment” do you mean with a fresh depot?","user":"U66GD0880","ts":"1611940812.174400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M/+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"by a “fresh environment” do you mean with a fresh depot?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"a2b5828a-3c05-477c-9967-c1c9533f4b8b","type":"message","text":"e.g. after deleting `~/.julia`?","user":"U66GD0880","ts":"1611940864.174600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6u9Fb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"e.g. after deleting "},{"type":"text","text":"~/.julia","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"8f458005-ee73-46bb-9798-93bffd2563ce","type":"message","text":"Yes, exactly","user":"UTKCH2WFL","ts":"1611940875.174800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kyd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, exactly"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"564fda04-3821-47ba-8bd3-c1ad6a5bb409","type":"message","text":"<https://gist.github.com/sloede/f40a31aa6037928f252e640c5a5312d4>","user":"UTKCH2WFL","ts":"1611940877.175000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LqVk+","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://gist.github.com/sloede/f40a31aa6037928f252e640c5a5312d4"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"e58e19a1-8eeb-4ae2-9fd4-d0236bd11c36","type":"message","text":"(sorry, too long to post here)","user":"UTKCH2WFL","ts":"1611940884.175200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ds6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(sorry, too long to post here)"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"005367cd-f5ca-4bc0-9349-139d8cd9cafc","type":"message","text":"So I see the following:\n```Installed MicrosoftMPI_jll ───────────── v10.1.2+3```","user":"U66GD0880","ts":"1611940912.175400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yWF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I see the following:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Installed MicrosoftMPI_jll ───────────── v10.1.2+3"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"type":"message","text":"It's not only me: I actually noticed the issue because Mybinder was reproducibly broken:","files":[{"id":"F01L9CEU0MB","created":1611940921,"timestamp":1611940921,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UTKCH2WFL","editable":false,"size":286068,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01L9CEU0MB/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01L9CEU0MB/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01L9CEU0MB-df7bea11af/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01L9CEU0MB-df7bea11af/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01L9CEU0MB-df7bea11af/image_360.png","thumb_360_w":360,"thumb_360_h":181,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01L9CEU0MB-df7bea11af/image_480.png","thumb_480_w":480,"thumb_480_h":242,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01L9CEU0MB-df7bea11af/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01L9CEU0MB-df7bea11af/image_720.png","thumb_720_w":720,"thumb_720_h":363,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01L9CEU0MB-df7bea11af/image_800.png","thumb_800_w":800,"thumb_800_h":403,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01L9CEU0MB-df7bea11af/image_960.png","thumb_960_w":960,"thumb_960_h":484,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01L9CEU0MB-df7bea11af/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":516,"original_w":2123,"original_h":1070,"thumb_tiny":"AwAYADDTorEubiZbmULK4AY4ANRfaZ/+ez/99UDsb9FYH2qf/ns//fVH2qf/AJ7P+dAjoKK5/wC1T/8APV/++qfBczNOgMrkFh3oAS6U/apeD949qh2t6H8qu3P/AB8Sf7xqKgCvtb+6fyo2t6H8qsUUAVtjeh/KpLdSLiPg/eHapafF/rU/3hQB/9k=","permalink":"https://julialang.slack.com/files/UTKCH2WFL/F01L9CEU0MB/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01L9CEU0MB-ba88d4dabf","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"yB/Km","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's not only me: I actually noticed the issue because Mybinder was reproducibly broken:"}]}]}],"user":"UTKCH2WFL","display_as_bot":false,"ts":"1611940924.175600","thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"b3ecb05a-3686-45d3-b4b0-d7fe71be0536","type":"message","text":"How are you determining that you are getting the wrong `MicrosoftMPI_jll` version?","user":"U66GD0880","ts":"1611940933.176000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H4JvJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How are you determining that you are getting the wrong "},{"type":"text","text":"MicrosoftMPI_jll","style":{"code":true}},{"type":"text","text":" version?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"c29cff13-5973-40d4-9c47-da7b6844cabb","type":"message","text":"ahhhhh I know what’s happening here","user":"U66GD0880","ts":"1611940978.176200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8S3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ahhhhh I know what’s happening here"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"893cbcb9-2485-4125-a44e-381209718197","type":"message","text":"`instantiate` is working perfectly","user":"U66GD0880","ts":"1611940989.176400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vTxJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"instantiate","style":{"code":true}},{"type":"text","text":" is working perfectly"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"type":"message","text":"By this one here:","files":[{"id":"F01M2AHEPL0","created":1611940991,"timestamp":1611940991,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UTKCH2WFL","editable":false,"size":49619,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01M2AHEPL0/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01M2AHEPL0/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01M2AHEPL0-ee9287e7b7/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01M2AHEPL0-ee9287e7b7/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01M2AHEPL0-ee9287e7b7/image_360.png","thumb_360_w":360,"thumb_360_h":55,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01M2AHEPL0-ee9287e7b7/image_480.png","thumb_480_w":480,"thumb_480_h":73,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01M2AHEPL0-ee9287e7b7/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01M2AHEPL0-ee9287e7b7/image_720.png","thumb_720_w":720,"thumb_720_h":110,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01M2AHEPL0-ee9287e7b7/image_800.png","thumb_800_w":800,"thumb_800_h":122,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01M2AHEPL0-ee9287e7b7/image_960.png","thumb_960_w":960,"thumb_960_h":147,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01M2AHEPL0-ee9287e7b7/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":156,"original_w":1407,"original_h":215,"thumb_tiny":"AwAHADCkDRQOlFUQFH4UUUAJiilPSm0Af//Z","permalink":"https://julialang.slack.com/files/UTKCH2WFL/F01M2AHEPL0/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01M2AHEPL0-16b4dcae55","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"vVfEq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"By this one here:"}]}]}],"user":"UTKCH2WFL","display_as_bot":false,"ts":"1611940994.176600","thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"bdcce85f-41dc-4bf6-862e-92803c3cdae5","type":"message","text":"yeah, so the issue is what I was talking about above","user":"U66GD0880","ts":"1611941007.177000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8y7Od","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, so the issue is what I was talking about above"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"c3300040-7dcf-41b5-9592-36b32f8bb8ed","type":"message","text":"It seems like MicrosoftMPI is restricting JLLWrappers, and this only happens since `+4`","user":"UTKCH2WFL","ts":"1611941014.177200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NtnN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems like MicrosoftMPI is restricting JLLWrappers, and this only happens since "},{"type":"text","text":"+4","style":{"code":true}}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"cb2f3907-8962-43d1-a972-21281b894fb5","type":"message","text":"because the compatibility bounds changed across just a build version change, the resolver gets confused and things that all `MicrosoftMPI_jll` versions `v10.2.1+X` have the same compat entries as the `+4` version","user":"U66GD0880","ts":"1611941058.177400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KZJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because the compatibility bounds changed across just a build version change, the resolver gets confused and things that all "},{"type":"text","text":"MicrosoftMPI_jll","style":{"code":true}},{"type":"text","text":" versions "},{"type":"text","text":"v10.2.1+X","style":{"code":true}},{"type":"text","text":" have the same compat entries as the "},{"type":"text","text":"+4","style":{"code":true}},{"type":"text","text":" version"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"8c4418da-be98-4312-810e-c3b0bd96c160","type":"message","text":"This is….. a problem with the Julia resolver.  A minor one that doesn’t bite us very often, but does every now and then","user":"U66GD0880","ts":"1611941086.177600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xdMs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is….. a problem with the Julia resolver.  A minor one that doesn’t bite us very often, but does every now and then"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"36d76270-2a51-4b19-b520-4e6d562bbff0","type":"message","text":"As Mosè said above, we’re trying to move away from `+X` numbering to address this, but our workflows are a little slow to change","user":"U66GD0880","ts":"1611941107.177800","team":"T68168MUP","edited":{"user":"U66GD0880","ts":"1611941108.000000"},"blocks":[{"type":"rich_text","block_id":"ySO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As Mosè said above, we’re trying to move away from "},{"type":"text","text":"+X","style":{"code":true}},{"type":"text","text":" numbering to address this, but our workflows are a little slow to change"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"3bbc945e-353d-4b5d-ab37-23746dbf6597","type":"message","text":"Concretely, we can do a few things:\n\n* You can re-resolve your manifest to get newer versions of other JLLs that are compatible with the latest release of JLLWrappers\n\n* We can alter the registry to no longer confuse the resolver","user":"U66GD0880","ts":"1611941168.178100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Yr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Concretely, we can do a few things:\n\n* You can re-resolve your manifest to get newer versions of other JLLs that are compatible with the latest release of JLLWrappers\n\n* We can alter the registry to no longer confuse the resolver"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"f0152e97-ed41-4847-add3-916ee951b35e","type":"message","text":"&gt; As Mosè said above, we’re trying to move away from `+X` numbering to address this, but our workflows are a little slow to change (\nYes, no worries about that. I absolutely do appreciate all the work y'all are doing around tooling for Julia, and I see the continuous improvement of Julia and its toolchain!\n\nI really am just looking for a \"simple\" way to fix my project repos...","user":"UTKCH2WFL","ts":"1611941172.178300","team":"T68168MUP","edited":{"user":"UTKCH2WFL","ts":"1611941193.000000"},"blocks":[{"type":"rich_text","block_id":"esd","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"As Mosè said above, we’re trying to move away from "},{"type":"text","text":"+X","style":{"code":true}},{"type":"text","text":" numbering to address this, but our workflows are a little slow to change ("}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYes, no worries about that. I absolutely do appreciate all the work y'all are doing around tooling for Julia, and I see the continuous improvement of Julia and its toolchain!\n\nI really am just looking for a \"simple\" way to fix my project repos..."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"f2265974-54dc-4d9c-9b64-bad967a9b92b","type":"message","text":"&gt; * We can alter the registry to no longer confuse the resolver\nhow? :thinking_face:","user":"UDB26738Q","ts":"1611941195.178600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C1S","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"* We can alter the registry to no longer confuse the resolver"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nhow? "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"ca3c60cc-1860-4f18-832f-c1a9bd022b29","type":"message","text":"&gt; how?\nYank `MicrosoftMPI_jll v10.2.1+4`, re-register as `v10.2.2`","user":"U66GD0880","ts":"1611941227.178800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PnJ4","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"how?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYank "},{"type":"text","text":"MicrosoftMPI_jll v10.2.1+4","style":{"code":true}},{"type":"text","text":", re-register as "},{"type":"text","text":"v10.2.2","style":{"code":true}}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"971760ed-2d90-410a-b821-cbbefa257b8b","type":"message","text":"does it help with an existing manifest?","user":"UDB26738Q","ts":"1611941249.179000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"675s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does it help with an existing manifest?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"b6a0148c-1170-494f-bb7c-e606b9ec582c","type":"message","text":"yes; the issue is that his `v10.2.1+3` in the manifest is getting trampled with the compat bounds from `v10.2.1+4` because the resolver can’t tell them apart.","user":"U66GD0880","ts":"1611941278.179200","team":"T68168MUP","edited":{"user":"U66GD0880","ts":"1611941284.000000"},"blocks":[{"type":"rich_text","block_id":"/Rtf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes; the issue is that his "},{"type":"text","text":"v10.2.1+3","style":{"code":true}},{"type":"text","text":" in the manifest is getting trampled with the compat bounds from "},{"type":"text","text":"v10.2.1+4","style":{"code":true}},{"type":"text","text":" because the resolver can’t tell them apart."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"17721df9-a4e5-4021-9c97-e7394750f6d8","type":"message","text":"&gt; Yank MicrosoftMPI_jll v10.2.1+4, re-register as v10.2.2\nI think this would help, yes, as it would allow the resolver to fall back on a previous version if the exact version is not specified (and the `+3` would again be unbroken). But I'd like to not do it without getting a nod from the guys at `MPI.jl` who maintain this, as I don't know if their versions still track the MS MPI version (I don't think they do, but just to be sure)","user":"UTKCH2WFL","ts":"1611941454.179500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z1JW","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Yank MicrosoftMPI_jll v10.2.1+4, re-register as v10.2.2"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I think this would help, yes, as it would allow the resolver to fall back on a previous version if the exact version is not specified (and the "},{"type":"text","text":"+3","style":{"code":true}},{"type":"text","text":" would again be unbroken). But I'd like to not do it without getting a nod from the guys at "},{"type":"text","text":"MPI.jl","style":{"code":true}},{"type":"text","text":" who maintain this, as I don't know if their versions still track the MS MPI version (I don't think they do, but just to be sure)"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"fa10745b-b92a-4695-ba34-e1a829a33d3e","type":"message","text":"oh, +4 is the new one, right","user":"UDB26738Q","ts":"1611941496.179700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Il","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, +4 is the new one, right"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"e49aed9e-dd00-4065-9cbd-9992bc573ed7","type":"message","text":"Yes, +4 is the one that breaks stuff","user":"UTKCH2WFL","ts":"1611941513.179900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z59","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, +4 is the one that breaks stuff"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"5f764626-f64b-43a7-877d-7ab66e152e88","type":"message","text":"+3 is the one that didn't have a direct dependency on `JLLWrappers` and thus no restrictions on it","user":"UTKCH2WFL","ts":"1611941536.180100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"and","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"+3 is the one that didn't have a direct dependency on "},{"type":"text","text":"JLLWrappers","style":{"code":true}},{"type":"text","text":" and thus no restrictions on it"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"33f72812-b697-4749-a0ab-907fcbd1e49f","type":"message","text":"X-ref: <https://github.com/JuliaRegistries/General/issues/28955>","user":"U66GD0880","ts":"1611941552.180300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qBJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"X-ref: "},{"type":"link","url":"https://github.com/JuliaRegistries/General/issues/28955"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"055060e7-c56c-4b1a-acd9-777fb8c83eda","type":"message","text":"<@U68P09RFZ> the summary of the above discussion is that because the latest `MicrosoftMPI_jll` release changed some compat bounds (because of BB, not because of you) we need to change the version number","user":"U66GD0880","ts":"1611941640.180500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V=VxW","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U68P09RFZ"},{"type":"text","text":" the summary of the above discussion is that because the latest "},{"type":"text","text":"MicrosoftMPI_jll","style":{"code":true}},{"type":"text","text":" release changed some compat bounds (because of BB, not because of you) we need to change the version number"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"2b2a7361-801a-416d-8695-33691379b723","type":"message","text":"can we bump `MicrosoftMPI_jll` to `v10.1.3` instead of `v10.1.2+4`, or is that too much of an annoyance?","user":"U66GD0880","ts":"1611941663.180700","team":"T68168MUP","edited":{"user":"U66GD0880","ts":"1611941818.000000"},"blocks":[{"type":"rich_text","block_id":"5qVr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can we bump "},{"type":"text","text":"MicrosoftMPI_jll","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"v10.1.3","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"v10.1.2+4","style":{"code":true}},{"type":"text","text":", or is that too much of an annoyance?"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"25aa572d-63fa-4329-9494-751552c3d8cf","type":"message","text":"<@UDB26738Q> <@U66GD0880> Thanks for the fast response! It's dinner &amp; bed time for the kids, so I will not be able to answer in a timely manner for the next 2-3 hours. I'll definitely read everything later though, in case input is needed from my side. For now I'll wait if this can be resolved by altering the registry, which seems like the easiest way for me :slightly_smiling_face:","user":"UTKCH2WFL","ts":"1611941825.181000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xAu","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" "},{"type":"user","user_id":"U66GD0880"},{"type":"text","text":" Thanks for the fast response! It's dinner & bed time for the kids, so I will not be able to answer in a timely manner for the next 2-3 hours. I'll definitely read everything later though, in case input is needed from my side. For now I'll wait if this can be resolved by altering the registry, which seems like the easiest way for me "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL","reactions":[{"name":"+1","users":["U66GD0880","UDB26738Q"],"count":2}]},{"client_msg_id":"4d3aa03a-f191-4ff2-9d9c-f906baf85ca2","type":"message","text":"sounds good, thanks for the complete reports!","user":"U66GD0880","ts":"1611941843.181300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ot0R5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sounds good, thanks for the complete reports!"}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"82f435f6-5cd2-41c3-b0e9-ef2d7ad86c1c","type":"message","text":"Okay, thanks. Bumping the version is fine by my for now.","user":"U68P09RFZ","ts":"1611942457.181600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"as/r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, thanks. Bumping the version is fine by my for now."}]}]}],"thread_ts":"1611906170.164500","parent_user_id":"UTKCH2WFL"}]