[{"client_msg_id":"f6c12444-a33b-4305-a0ed-2f43c42b4cf3","type":"message","text":"How do I build binaries of packages without a configure file?\n\nI am building binary for Trilinos. It has multiple packages and (for simplicity's sake) YES packages have configure files and NEY packages don't. So when I finish the cmake (of all), configure (of YESs), make and install, binaries are generated only for YES packages. So it turns out NEY packages won't build with this resulting build_tarball:sweat_smile: So now I have a completed build_tarball\n which only builds half the packages required","user":"UN5FQHFNY","ts":"1612359793.267600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OlfW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do I build binaries of packages without a configure file?\n\nI am building binary for Trilinos. It has multiple packages and (for simplicity's sake) YES packages have configure files and NEY packages don't. So when I finish the cmake (of all), configure (of YESs), make and install, binaries are generated only for YES packages. So it turns out NEY packages won't build with this resulting build_tarball"},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":" So now I have a completed build_tarball\n which only builds half the packages required"}]}]}],"thread_ts":"1612359793.267600","reply_count":7,"reply_users_count":3,"latest_reply":"1612459072.293000","reply_users":["UDB26738Q","UN5FQHFNY","U66GD0880"],"subscribed":false},{"client_msg_id":"7af8bad2-8356-4086-9a01-ee7b23e49c95","type":"message","text":"does <https://docs.binarybuilder.org/latest/build_tips/#Build-strategy> help?","user":"UDB26738Q","ts":"1612364789.267700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1FJF8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does "},{"type":"link","url":"https://docs.binarybuilder.org/latest/build_tips/#Build-strategy"},{"type":"text","text":" help?"}]}]}],"thread_ts":"1612359793.267600","parent_user_id":"UN5FQHFNY"},{"client_msg_id":"e595c86f-1e85-4f83-93bb-dc571e20353b","type":"message","text":"Thank you for the suggestion. But it progressed but didn't solve the prob tho.\nI tried moving the files manually.\n\n```cmake --flags\nmake -j${nproc}\nmake install\n```\nAnd then I tried to move\n```mv /usr/local/include_or_/bin/files $prefix/include_or_bin\n```\nor copy\n```cp /usr/local/include_or_/bin/files $prefix/include_or_bin\n```\nor install `make DESTDIR=$prefix install` which installed .h and .a in `workspace/destdir/usr/local/include_or_bin`\n\nSo I realize without running ./configure `.so` file is not generated and static `libsoandso.a` isn't a build artifact. If I run the only available ./configure for subdirectories then only those packages are built bringing us back to origin.","user":"UN5FQHFNY","ts":"1612376055.268300","team":"T68168MUP","edited":{"user":"UN5FQHFNY","ts":"1612376743.000000"},"blocks":[{"type":"rich_text","block_id":"iA7R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you for the suggestion. But it progressed but didn't solve the prob tho.\nI tried moving the files manually.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"cmake --flags\nmake -j${nproc}\nmake install\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"And then I tried to move\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"mv /usr/local/include_or_/bin/files $prefix/include_or_bin\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"or copy\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"cp /usr/local/include_or_/bin/files $prefix/include_or_bin\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"or install "},{"type":"text","text":"make DESTDIR=$prefix install","style":{"code":true}},{"type":"text","text":" which installed .h and .a in "},{"type":"text","text":"workspace/destdir/usr/local/include_or_bin","style":{"code":true}},{"type":"text","text":"\n\nSo I realize without running ./configure "},{"type":"text","text":".so","style":{"code":true}},{"type":"text","text":" file is not generated and static "},{"type":"text","text":"libsoandso.a","style":{"code":true}},{"type":"text","text":" isn't a build artifact. If I run the only available ./configure for subdirectories then only those packages are built bringing us back to origin."}]}]}],"thread_ts":"1612359793.267600","parent_user_id":"UN5FQHFNY"},{"client_msg_id":"db8702d4-1e8e-41e3-822f-6d336b3268bd","type":"message","text":"This sounds like you just need to figure out how that software package is supposed to be built.  What does the documentation of the package itself say?","user":"U66GD0880","ts":"1612376723.268600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pvz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This sounds like you just need to figure out how that software package is supposed to be built.  What does the documentation of the package itself say?"}]}]}],"thread_ts":"1612359793.267600","parent_user_id":"UN5FQHFNY"},{"client_msg_id":"7f15cef6-d94c-40f3-bf6c-8cce8a243648","type":"message","text":"[So I got `.a` and `.h` files in $prefix/include_or_bin by adding a flag I had missed in cmake. So no more mv, cp to be done. But it still doesn't have binary artifacts]\n\nThe guide online asks for cmake, make -j&lt;N&gt; and make install. <https://github.com/trilinos/Trilinos/blob/master/INSTALL.rst#instructions>\n\nThe doc mentions a `make package_source` to create a source tarball.  (-- in sec 9 of <https://docs.trilinos.org/files/TrilinosBuildReference.html#configuring-with-mpi-support>) Which is not useful again.\n\nI found a *bad* workaround tho. After `make install`, I ran `./configure` of one of the submodules which creates a binary artifact for wizard to continue wrapping  `.a` files from previous step as well. This way even the packages without submodules are included.","user":"UN5FQHFNY","ts":"1612434978.292400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6cfv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"[So I got "},{"type":"text","text":".a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":".h","style":{"code":true}},{"type":"text","text":" files in $prefix/include_or_bin by adding a flag I had missed in cmake. So no more mv, cp to be done. But it still doesn't have binary artifacts]\n\nThe guide online asks for cmake, make -j<N> and make install. "},{"type":"link","url":"https://github.com/trilinos/Trilinos/blob/master/INSTALL.rst#instructions"},{"type":"text","text":"\n\nThe doc mentions a "},{"type":"text","text":"make package_source","style":{"code":true}},{"type":"text","text":" to create a source tarball.  (-- in sec 9 of "},{"type":"link","url":"https://docs.trilinos.org/files/TrilinosBuildReference.html#configuring-with-mpi-support"},{"type":"text","text":") Which is not useful again.\n\nI found a "},{"type":"text","text":"bad","style":{"bold":true}},{"type":"text","text":" workaround tho. After "},{"type":"text","text":"make install","style":{"code":true}},{"type":"text","text":", I ran "},{"type":"text","text":"./configure","style":{"code":true}},{"type":"text","text":" of one of the submodules which creates a binary artifact for wizard to continue wrapping  "},{"type":"text","text":".a","style":{"code":true}},{"type":"text","text":" files from previous step as well. This way even the packages without submodules are included."}]}]}],"thread_ts":"1612359793.267600","parent_user_id":"UN5FQHFNY"},{"client_msg_id":"ec9ec1f9-1537-46d2-b1d1-f717a0826353","type":"message","text":"```1 cmake -DTOO_MANY_FLAGS_FOR_ALL_PACKAGES\n2 make -j${nproc}\n3 make install  # this installs all libpackages.a\n4 cd ..; cd Trilinos/packages/zoltan # goes to one package with configure\n5 autoreconf -fiv\n6 cd ../../..\n7 cd build\n8 /workspace/srcdir/Trilinos/packages/zoltan/./configure --disable-mpi --prefix=${prefix} --build=${MACHTYPE} --host=${target}\n9 make -j${nprocs}\n10 make install # a binary artifact is created as well```\nThe raw script looks like this now","user":"UN5FQHFNY","ts":"1612435289.292600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/Qw","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1 cmake -DTOO_MANY_FLAGS_FOR_ALL_PACKAGES\n2 make -j${nproc}\n3 make install  # this installs all libpackages.a\n4 cd ..; cd Trilinos/packages/zoltan # goes to one package with configure\n5 autoreconf -fiv\n6 cd ../../..\n7 cd build\n8 /workspace/srcdir/Trilinos/packages/zoltan/./configure --disable-mpi --prefix=${prefix} --build=${MACHTYPE} --host=${target}\n9 make -j${nprocs}\n10 make install # a binary artifact is created as well"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The raw script looks like this now"}]}]}],"thread_ts":"1612359793.267600","parent_user_id":"UN5FQHFNY"},{"client_msg_id":"018b26ab-a15b-4655-a170-94b63082846c","type":"message","text":"so if it is only building `.a`files, that usually means it’s a library that is intended to be used as a static library, rather than a dynamic one","user":"U66GD0880","ts":"1612459053.292800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lXc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so if it is only building `.a`files, that usually means it’s a library that is intended to be used as a static library, rather than a dynamic one"}]}]}],"thread_ts":"1612359793.267600","parent_user_id":"UN5FQHFNY"},{"client_msg_id":"813dc319-f258-4a7d-b0c5-e8be33abec2a","type":"message","text":"often times there is a flag you can enable to convince it to build a dynamic library for you","user":"U66GD0880","ts":"1612459072.293000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6N6X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"often times there is a flag you can enable to convince it to build a dynamic library for you"}]}]}],"thread_ts":"1612359793.267600","parent_user_id":"UN5FQHFNY"}]