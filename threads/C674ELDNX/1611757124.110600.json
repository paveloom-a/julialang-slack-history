[{"client_msg_id":"1889a141-953f-43a7-a2f9-407ac2a995c6","type":"message","text":"so I was looking at <https://github.com/JuliaPackaging/BinaryBuilder.jl/issues/687> again, specifically the bit about `ncurses_jll` where one needs to set `TERMINFO` or `TERMINFINO_DIRS` suitably to make sure initializing it works. Back then the idea was that we adjust the `__init__` of the JLL to set them -- which we could now do. This would solve some issues for me, so I'd be willing to implement it (it's easy enough to do). BUT I am (still) worried whether this might not cause further issues down the road; specifically: this would mean that loading `ncurses_jll` (even indirectly) would modify the env vars of the Julia process, globally. While I am sure this would be fine for 99.9% cases, I wonder whether there are situations where it is not? Say, some user for some reason must set a custom TERMINO/TERMINFO_DIRS setting for their terminal; would we want to override that? Or perhaps only set those vars *if they are not already set*? But of course that, too, could cause issues (in cases where a user set them but not deliberately). Alas, the latter case is easy for a user to workaround (just unset those vars before loading Julia).... Am I worrying too much? Well, depends on who has to handle the bug reports, should they come in... :wink:","user":"U012FH66MFW","ts":"1611757124.110600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NOf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I was looking at "},{"type":"link","url":"https://github.com/JuliaPackaging/BinaryBuilder.jl/issues/687"},{"type":"text","text":" again, specifically the bit about "},{"type":"text","text":"ncurses_jll","style":{"code":true}},{"type":"text","text":" where one needs to set "},{"type":"text","text":"TERMINFO","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"TERMINFINO_DIRS","style":{"code":true}},{"type":"text","text":" suitably to make sure initializing it works. Back then the idea was that we adjust the "},{"type":"text","text":"__init__","style":{"code":true}},{"type":"text","text":" of the JLL to set them -- which we could now do. This would solve some issues for me, so I'd be willing to implement it (it's easy enough to do). BUT I am (still) worried whether this might not cause further issues down the road; specifically: this would mean that loading "},{"type":"text","text":"ncurses_jll","style":{"code":true}},{"type":"text","text":" (even indirectly) would modify the env vars of the Julia process, globally. While I am sure this would be fine for 99.9% cases, I wonder whether there are situations where it is not? Say, some user for some reason must set a custom TERMINO/TERMINFO_DIRS setting for their terminal; would we want to override that? Or perhaps only set those vars "},{"type":"text","text":"if they are not already set","style":{"bold":true}},{"type":"text","text":"? But of course that, too, could cause issues (in cases where a user set them but not deliberately). Alas, the latter case is easy for a user to workaround (just unset those vars before loading Julia).... Am I worrying too much? Well, depends on who has to handle the bug reports, should they come in... "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1611757124.110600","reply_count":4,"reply_users_count":3,"latest_reply":"1611783499.136700","reply_users":["U66GD0880","UDB26738Q","U01CH05FTMM"],"subscribed":false},{"client_msg_id":"4C6B8C9F-82DF-4390-8A0C-E61121FA0741","type":"message","text":"Yeah; this is exactly the reason I was somewhat hesitant to add these init blocks in the first place. But on balance, I’d rather have some foot guns than no tools at all! In most of these cases I think the best policy is to set the envvar if it doesn’t already exist. ","user":"U66GD0880","ts":"1611768674.114600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3pw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah; this is exactly the reason I was somewhat hesitant to add these init blocks in the first place. But on balance, I’d rather have some foot guns than no tools at all! In most of these cases I think the best policy is to set the envvar if it doesn’t already exist. "}]}]}],"thread_ts":"1611757124.110600","parent_user_id":"U012FH66MFW"},{"client_msg_id":"c6c02dbb-1fd3-4144-b21e-921ab9e16f45","type":"message","text":"yes, that's what I did for Fontconfig: <https://github.com/JuliaPackaging/Yggdrasil/pull/1287>","user":"UDB26738Q","ts":"1611769317.114800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d8U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, that's what I did for Fontconfig: "},{"type":"link","url":"https://github.com/JuliaPackaging/Yggdrasil/pull/1287"}]}]}],"thread_ts":"1611757124.110600","parent_user_id":"U012FH66MFW"},{"client_msg_id":"ee253fd5-2045-4271-aacd-a6bb4c847376","type":"message","text":"I think it is fine the way it currently is, `polymake_jll` doesn't even use the init block anymore as it needs to setup a dependency tree as a new artifact which is not possible there anymore.\nIn many cases appending or prepending to the existing variables should be fine and I think that needs to be decided per package.\nFor `ncurses_jll` I do think it would make sense to replace the `TERMINFO` variables as the directory layout can be configured in different incompatible ways. So we cannot assume that whatever is at a given `$TERMINFO_DIRS` is compatible with the `ncurses_jll` binaries.","user":"U01CH05FTMM","ts":"1611783334.136500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HO/I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it is fine the way it currently is, "},{"type":"text","text":"polymake_jll","style":{"code":true}},{"type":"text","text":" doesn't even use the init block anymore as it needs to setup a dependency tree as a new artifact which is not possible there anymore.\nIn many cases appending or prepending to the existing variables should be fine and I think that needs to be decided per package.\nFor "},{"type":"text","text":"ncurses_jll","style":{"code":true}},{"type":"text","text":" I do think it would make sense to replace the "},{"type":"text","text":"TERMINFO","style":{"code":true}},{"type":"text","text":" variables as the directory layout can be configured in different incompatible ways. So we cannot assume that whatever is at a given "},{"type":"text","text":"$TERMINFO_DIRS","style":{"code":true}},{"type":"text","text":" is compatible with the "},{"type":"text","text":"ncurses_jll","style":{"code":true}},{"type":"text","text":" binaries."}]}]}],"thread_ts":"1611757124.110600","parent_user_id":"U012FH66MFW"},{"client_msg_id":"819444a5-10d1-42a7-a8be-e9310fa1715d","type":"message","text":"Also the since julia discourages / avoids using any external dependencies, not keeping external environment variables does fit quite well ...\n(even though I do not like that approach and am maintaining a quite long `Overrides.toml` replacing almost all the default stuff with the corresponding system packages)","user":"U01CH05FTMM","ts":"1611783499.136700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8X1g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also the since julia discourages / avoids using any external dependencies, not keeping external environment variables does fit quite well ...\n(even though I do not like that approach and am maintaining a quite long "},{"type":"text","text":"Overrides.toml","style":{"code":true}},{"type":"text","text":" replacing almost all the default stuff with the corresponding system packages)"}]}]}],"thread_ts":"1611757124.110600","parent_user_id":"U012FH66MFW"}]