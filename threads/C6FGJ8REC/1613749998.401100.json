[{"client_msg_id":"315ff1b7-ce66-423a-82ef-6e2958e4b8cc","type":"message","text":"<@UD0NS8PDF> KeyedArrays are such a thing of beauty.\nI am deleting so much\n```foo_inds = findall(in(the_index), bars)\nbar_data = data[foo_inds]```\nand replacing it with just:\n```bar_data = data(foo=bars)```\n","user":"U6A936746","ts":"1613749998.401100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QZF","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UD0NS8PDF"},{"type":"text","text":" KeyedArrays are such a thing of beauty.\nI am deleting so much\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"foo_inds = findall(in(the_index), bars)\nbar_data = data[foo_inds]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and replacing it with just:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bar_data = data(foo=bars)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613749998.401100","reply_count":22,"reply_users_count":9,"latest_reply":"1614168144.039000","reply_users":["UBF9YRB6H","U7PGB5DU3","U6A936746","U9L5Y89H7","U8JP5B9T2","UD0NS8PDF","UHDQQ4GN6","UB197FRCL","URN898S15"],"subscribed":false,"reactions":[{"name":"heavy_check_mark","users":["UBF9YRB6H","UGR3910CQ","U695B1S2X","UC7FP1MQV"],"count":4}]},{"client_msg_id":"2d2d4f98-492a-47ab-9092-ece555ab511c","type":"message","text":"Never having to keep track of which indices belong to what is also so nice","user":"UBF9YRB6H","ts":"1613750096.401500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RqVaj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Never having to keep track of which indices belong to what is also so nice"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746","reactions":[{"name":"heavy_check_mark","users":["U6A936746"],"count":1}]},{"client_msg_id":"1d61cb34-0c94-425c-8118-5a237ca68117","type":"message","text":"sorry, where?","user":"U7PGB5DU3","ts":"1613750885.402200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CYYK9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sorry, where?"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"bf26dd23-5097-4279-8615-421fc8273f98","type":"message","text":"AxisKeys.jl","user":"U6A936746","ts":"1613751007.402400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E2UQm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"AxisKeys.jl"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746","reactions":[{"name":"+1","users":["U7PGB5DU3"],"count":1}]},{"client_msg_id":"b5e0d881-b1d9-4c45-9aeb-b34ce1fbc28b","type":"message","text":"nice!!!","user":"U7PGB5DU3","ts":"1613751137.402800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ibnru","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nice!!!"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"aefe0668-4812-45d2-889d-3b8f9dab23b0","type":"message","text":"Wow this looks so great. I often handle spectral data and keeping track of the frequency-&gt;data mapping has always been a pain. I know the various axisarrays and nameddim type packages all try to handle that problem but none has seemed intuitive enough to me to bother with. This seems great on the other hand.","user":"U9L5Y89H7","ts":"1613769550.406900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2O1oV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow this looks so great. I often handle spectral data and keeping track of the frequency->data mapping has always been a pain. I know the various axisarrays and nameddim type packages all try to handle that problem but none has seemed intuitive enough to me to bother with. This seems great on the other hand."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"8f80eac2-e64e-4972-9d72-11a6b4ccc65b","type":"message","text":"Can someone give a \"how this is different\" explanation? I know there are a bunch of approaches to this problem (I recently started using AxisIndices), but it's there a cogent summary if advantages/disadvantages anywhere?","user":"U8JP5B9T2","ts":"1613771397.407400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e2U=q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can someone give a \"how this is different\" explanation? I know there are a bunch of approaches to this problem (I recently started using AxisIndices), but it's there a cogent summary if advantages/disadvantages anywhere?"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"80776582-75ad-47a0-9625-40cf37f4b717","type":"message","text":"Glad if it’s useful, it was fun to write although I haven’t ended up using it as much as I thought I was going to. It is a pity there are so many, I feel a bit guilty about contributing to this state of affairs…","user":"UD0NS8PDF","ts":"1613771915.407700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XLF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Glad if it’s useful, it was fun to write although I haven’t ended up using it as much as I thought I was going to. It is a pity there are so many, I feel a bit guilty about contributing to this state of affairs…"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"98ff7a89-f69a-439a-9bc6-4a570c5006fa","type":"message","text":"I guess this one’s goals were (1) to separate dimension names &amp; axis info into two commuting wrappers, so that you can use either or both, with NamedDims handling the names. And (2) to treat these “keys” more consistently, and enforce some kind of separation between “lookup” and indexing. AxisArrays rolls these together, `A[:x]` looks up the symbol &amp; `A[2]` indexes, but that gets messy if both might be integers… so the idea was to use completely distinct notation `A(:x)` for lookup. And (3) otherwise be fairly minimal, there are no special axis types to know about, I think AxisArrays has its own special categorical vector type, others have special ranges… but that can all be outsourced to other packages if required, it just accepts an AbstractVector and calls `findfirst(isequal(k), v)`. And (4) print the labels next to the data, so that you can see what you’re doing.","user":"UD0NS8PDF","ts":"1613772541.408000","team":"T68168MUP","edited":{"user":"UD0NS8PDF","ts":"1613774625.000000"},"blocks":[{"type":"rich_text","block_id":"4qYSX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess this one’s goals were (1) to separate dimension names & axis info into two commuting wrappers, so that you can use either or both, with NamedDims handling the names. And (2) to treat these “keys” more consistently, and enforce some kind of separation between “lookup” and indexing. AxisArrays rolls these together, "},{"type":"text","text":"A[:x]","style":{"code":true}},{"type":"text","text":" looks up the symbol & "},{"type":"text","text":"A[2]","style":{"code":true}},{"type":"text","text":" indexes, but that gets messy if both might be integers… so the idea was to use completely distinct notation "},{"type":"text","text":"A(:x)","style":{"code":true}},{"type":"text","text":" for lookup. And (3) otherwise be fairly minimal, there are no special axis types to know about, I think AxisArrays has its own special categorical vector type, others have special ranges… but that can all be outsourced to other packages if required, it just accepts an AbstractVector and calls "},{"type":"text","text":"findfirst(isequal(k), v)","style":{"code":true}},{"type":"text","text":". And (4) print the labels next to the data, so that you can see what you’re doing."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"3f176bfd-b4cc-4d8e-bef3-ef8e484b382c","type":"message","text":"I would love something written up. It's entering my standard packages I use with everything, along with Exfiltrator and Parameters. It's particularly good for dynamic programming with a finite grid.","user":"UBF9YRB6H","ts":"1613772749.408200","team":"T68168MUP","edited":{"user":"UBF9YRB6H","ts":"1613772758.000000"},"blocks":[{"type":"rich_text","block_id":"S0ee","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would love something written up. It's entering my standard packages I use with everything, along with Exfiltrator and Parameters. It's particularly good for dynamic programming with a finite grid."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746","reactions":[{"name":"+1","users":["U7PGB5DU3","UB197FRCL"],"count":2}]},{"client_msg_id":"ec5b2be8-b676-488f-9220-9b76ed480a54","type":"message","text":"The differences I describe above seem like quite low-level things, I’m not sure there are very distinct user niches for the end results. At JuliaCon last year <@U6A936746> organised a session to discuss all these packages (there are quite a few!), and gather what features people thought essential. Did anything come of the notes of that?","user":"UD0NS8PDF","ts":"1613773704.408800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MLk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The differences I describe above seem like quite low-level things, I’m not sure there are very distinct user niches for the end results. At JuliaCon last year "},{"type":"user","user_id":"U6A936746"},{"type":"text","text":" organised a session to discuss all these packages (there are quite a few!), and gather what features people thought essential. Did anything come of the notes of that?"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"8021c2f6-a85e-48c7-9027-d1b2bfa9e341","type":"message","text":"The doc still exists\n<https://docs.google.com/document/d/1imBX3k0EEejauWVyXONZDRj8LTr0PeLOJNGEgo6ow1g/edit?usp=drivesdk|https://docs.google.com/document/d/1imBX3k0EEejauWVyXONZDRj8LTr0PeLOJNGEgo6ow1g/edit?usp=drivesdk>\n\nThings that came out of it for me was that we are going to stop developing IndexedDims, and start testing these.\nWe did some consideration, and AxisKeys came out as the one to test first.\nBecause while the design isn't the same as AxisKeys it is close enough.","user":"U6A936746","ts":"1613775460.409300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4TC3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The doc still exists\n"},{"type":"link","url":"https://docs.google.com/document/d/1imBX3k0EEejauWVyXONZDRj8LTr0PeLOJNGEgo6ow1g/edit?usp=drivesdk","text":"https://docs.google.com/document/d/1imBX3k0EEejauWVyXONZDRj8LTr0PeLOJNGEgo6ow1g/edit?usp=drivesdk"},{"type":"text","text":"\n\nThings that came out of it for me was that we are going to stop developing IndexedDims, and start testing these.\nWe did some consideration, and AxisKeys came out as the one to test first.\nBecause while the design isn't the same as AxisKeys it is close enough."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"09f415fc-22c7-4a20-b761-420f8529d353","type":"message","text":"OK, thanks for the link, which I lost. Will be interesting to see how the package holds up under real use, what the unexpected warts are, etc.","user":"UD0NS8PDF","ts":"1613777590.410400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"stX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, thanks for the link, which I lost. Will be interesting to see how the package holds up under real use, what the unexpected warts are, etc."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"bb06e122-4694-4954-9e0d-0e6c5eff8c3a","type":"message","text":"Well so far in 2 weeks of 2 people using it fairly intensely.\n(And like 4 more using it less intensely) we found 2 bugs, both of which you saw the issues for, 1 of which we fixed.\n\nSo I would rate that a decent start.","user":"U6A936746","ts":"1613787219.008800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6SP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well so far in 2 weeks of 2 people using it fairly intensely.\n(And like 4 more using it less intensely) we found 2 bugs, both of which you saw the issues for, 1 of which we fixed.\n\nSo I would rate that a decent start."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"63d55df2-9f63-41aa-a27f-113f1520bf0b","type":"message","text":"Any thoughts on how/whether custom plotting rules should be implemented, similar to for AxisArrays, so that Plots shows the keys for the axis ticks?","user":"UHDQQ4GN6","ts":"1613789193.009300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"80g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any thoughts on how/whether custom plotting rules should be implemented, similar to for AxisArrays, so that Plots shows the keys for the axis ticks?"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"e796d539-109c-460a-aa40-e0160eb57cd7","type":"message","text":"Given a KeyedArray is a Tables.jl Table I feel like we should answer that first.","user":"U6A936746","ts":"1613792127.009900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CueO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Given a KeyedArray is a Tables.jl Table I feel like we should answer that first."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"3e296355-a1e5-48b2-b6ea-426a0131da37","type":"message","text":"Answer what?","user":"UHDQQ4GN6","ts":"1613792193.010100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LjtFq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Answer what?"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"8ec88602-3fda-401e-9536-00cc7a7ef1c5","type":"message","text":"Custom plotting for tables.\nOr is that answered?","user":"U6A936746","ts":"1613793953.010700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+SX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Custom plotting for tables.\nOr is that answered?"}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"ed0484c9-8dc7-4205-acf5-c58c5f2238c3","type":"message","text":"Sort of. The `@df` macro in StatsPlots works with the Tables interface and does a lot but I don't think everything one might want. It's a bit weird to me that there's a different solution for types implementing the Tables interface than the recursive conversion pipeline used elsewhere in Plots.","user":"UHDQQ4GN6","ts":"1613794126.010900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WJqxD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sort of. The "},{"type":"text","text":"@df","style":{"code":true}},{"type":"text","text":" macro in StatsPlots works with the Tables interface and does a lot but I don't think everything one might want. It's a bit weird to me that there's a different solution for types implementing the Tables interface than the recursive conversion pipeline used elsewhere in Plots."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"b1aa0e1b-9426-454a-874f-9a4c65e6a5b3","type":"message","text":"There are some simple plot recipes here: <https://github.com/mcabbott/NamedPlus.jl/blob/master/src/plots.jl>\n```julia&gt; using AxisKeys, NamedPlus, Plots\njulia&gt; KeyedArray(rand(10), ex='a':'j') |&gt; plot\njulia&gt; KeyedArray(rand(10,3), ex='a':'j', why=[10,20,30]) |&gt; plot # forgets x ticks```\nWasn’t sure whether to include them by default.","user":"UD0NS8PDF","ts":"1613807251.013000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"li0Zo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are some simple plot recipes here: "},{"type":"link","url":"https://github.com/mcabbott/NamedPlus.jl/blob/master/src/plots.jl"},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using AxisKeys, NamedPlus, Plots\njulia> KeyedArray(rand(10), ex='a':'j') |> plot\njulia> KeyedArray(rand(10,3), ex='a':'j', why=[10,20,30]) |> plot # forgets x ticks"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Wasn’t sure whether to include them by default."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746","reactions":[{"name":"+1","users":["UHDQQ4GN6","UCZ7VBGUD"],"count":2}]},{"type":"message","subtype":"thread_broadcast","text":"&gt; Is there a cogent summary of advantages/disadvantages anywhere?\nI asked exactly for that <https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc|on discourse> a couple days ago... It's been about a year since <https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253|the last post on the status of xarray-like packages>, so it would be timely — and very appreciated IMHO — to get an update soon (from knowledgable peeps preferably)!","user":"UB197FRCL","ts":"1613952005.026800","thread_ts":"1613749998.401100","root":{"client_msg_id":"315ff1b7-ce66-423a-82ef-6e2958e4b8cc","type":"message","text":"<@UD0NS8PDF> KeyedArrays are such a thing of beauty.\nI am deleting so much\n```foo_inds = findall(in(the_index), bars)\nbar_data = data[foo_inds]```\nand replacing it with just:\n```bar_data = data(foo=bars)```\n","user":"U6A936746","ts":"1613749998.401100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QZF","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UD0NS8PDF"},{"type":"text","text":" KeyedArrays are such a thing of beauty.\nI am deleting so much\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"foo_inds = findall(in(the_index), bars)\nbar_data = data[foo_inds]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and replacing it with just:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bar_data = data(foo=bars)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613749998.401100","reply_count":22,"reply_users_count":9,"latest_reply":"1614168144.039000","reply_users":["UBF9YRB6H","U7PGB5DU3","U6A936746","U9L5Y89H7","U8JP5B9T2","UD0NS8PDF","UHDQQ4GN6","UB197FRCL","URN898S15"],"subscribed":false},"attachments":[{"service_name":"JuliaLang","title":"Converting between AxisArray like packages?","title_link":"https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc","text":"FWIW, I think it would be timely for the main AxisArray-like-package devs to re-address the state of the ecosystem. This could be done, IMHO: by directly digging up and updating the The fate of DimensionalArrays / AxisArrays in Julia, and which to actually use discussion, by writing up a short blog entry that could serve as a reference, or maybe by having a little write-up in the docs of AxisArrayConversion.jl. To give context to this comment, I recently tried to answer a related question on...","fallback":"JuliaLang: Converting between AxisArray like packages?","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1613706634,"from_url":"https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc"},{"service_name":"JuliaLang","title":"The fate of DimensionalArrays / AxisArrays in Julia, and which to actually use","title_link":"https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253","text":"I wasn’t sure whether I should open this at “Domains” or “Community”, given how many different areas it touches So, as far as I can tell, at the moment the story of using array data coupled with information about dimensions is not at all settled in Julia, as is evident from the existence of numerous in-use or under-development collections like e.g. AxisArrays, AxisArraysFuture, NamedDims.jl, DimensionalData.jl (and its derivatives), NamedArrays.jl to name a few (there are probably more, and I’l...","fallback":"JuliaLang: The fate of DimensionalArrays / AxisArrays in Julia, and which to actually use","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"2 mins :clock2:","short":true},{"title":"Likes","value":"13 :heart:","short":true}],"ts":1578786760,"from_url":"https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":2,"original_url":"https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253"}],"blocks":[{"type":"rich_text","block_id":"0ErA3","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Is there a cogent summary of advantages/disadvantages anywhere?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I asked exactly for that "},{"type":"link","url":"https://discourse.julialang.org/t/converting-between-axisarray-like-packages/52510/4?u=briochemc","text":"on discourse"},{"type":"text","text":" a couple days ago... It's been about a year since "},{"type":"link","url":"https://discourse.julialang.org/t/the-fate-of-dimensionalarrays-axisarrays-in-julia-and-which-to-actually-use/33253","text":"the last post on the status of xarray-like packages"},{"type":"text","text":", so it would be timely — and very appreciated IMHO — to get an update soon (from knowledgable peeps preferably)!"}]}]}],"client_msg_id":"f8a2ddb7-36e2-4991-ac64-ab4df76e82b6"},{"client_msg_id":"4652045b-d5b6-45c4-8894-d68ee31c72e8","type":"message","text":"<@UHDQQ4GN6> On the topic of plot recipes for keyed arrays, DimensionalData.jl has pretty extensive recipes for automatic axis permutation and dimension naming, extended in GeoData.jl for spatial heatmaps.","user":"URN898S15","ts":"1614165715.038800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r6BPz","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UHDQQ4GN6"},{"type":"text","text":" On the topic of plot recipes for keyed arrays, DimensionalData.jl has pretty extensive recipes for automatic axis permutation and dimension naming, extended in GeoData.jl for spatial heatmaps."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746"},{"client_msg_id":"77a5d162-a70b-49bf-b5c3-bcd13e1bb8f7","type":"message","text":"<@UB197FRCL> thanks for linking discourse I tried to add a few points about the current status there.","user":"URN898S15","ts":"1614168144.039000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=dem","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UB197FRCL"},{"type":"text","text":" thanks for linking discourse I tried to add a few points about the current status there."}]}]}],"thread_ts":"1613749998.401100","parent_user_id":"U6A936746","reactions":[{"name":"+1","users":["UB197FRCL"],"count":1},{"name":"pray","users":["UB197FRCL"],"count":1}]}]