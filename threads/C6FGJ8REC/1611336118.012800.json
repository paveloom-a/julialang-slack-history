[{"client_msg_id":"e2044b1c-6218-4a2b-96f7-197362083540","type":"message","text":"are there any other languages that have syntax for this?  I'm not aware of any","user":"U9VG1AYSG","ts":"1611336118.012800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3=YMQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are there any other languages that have syntax for this?  I'm not aware of any"}]}]}],"thread_ts":"1611336118.012800","reply_count":26,"reply_users_count":5,"latest_reply":"1611346419.023200","reply_users":["U69KQT9DL","U6G4M02N4","U01HD5VFXJM","UD0NS8PDF","U6740K1SP"],"subscribed":false},{"client_msg_id":"9caa9995-1656-4685-8c3b-00a1387be312","type":"message","text":"In numpy, you can initialize with arrays of arrays.\n```In [3]: np.array([[[1,2,3],[4,5,6]],[[7,8,9],[10,11,12]]])\nOut[3]:\narray([[[ 1,  2,  3],\n        [ 4,  5,  6]],\n\n       [[ 7,  8,  9],\n        [10, 11, 12]]])```","user":"U69KQT9DL","ts":"1611339409.015900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N52B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In numpy, you can initialize with arrays of arrays.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"In [3]: np.array([[[1,2,3],[4,5,6]],[[7,8,9],[10,11,12]]])\nOut[3]:\narray([[[ 1,  2,  3],\n        [ 4,  5,  6]],\n\n       [[ 7,  8,  9],\n        [10, 11, 12]]])"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"d993c6d0-e6a3-4816-8a18-4016dff60806","type":"message","text":"Mathematica also works this way","user":"U6G4M02N4","ts":"1611339985.016400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b2Du","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Mathematica also works this way"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"0f252b60-a216-484a-9f7b-0fc6faa5dacf","type":"message","text":"(I still need to wrap my head around the new ;;; syntax, sounds powerful, although nested lists are probably easier to understand)","user":"U6G4M02N4","ts":"1611340032.016600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+kYd+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I still need to wrap my head around the new ;;; syntax, sounds powerful, although nested lists are probably easier to understand)"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"1cf6279f-f1c4-4f60-b3dc-3bd4a2302e7c","type":"message","text":"<@U6G4M02N4> Does this help? Think of it like marking the boundary of a slice in that dimension.\n\n`[1 2 ;;; 3 4]`\nwill be printed as\n```1×2×2 Array{Int64, 3}:\n[:, :, 1] =\n 1  2\n\n[:, :, 2] =\n 3  4```\nPreferring nested vectors is not unreasonable. But if you prefer that for readability, you could write something similar:\n`[[[1,2,3] [4,5,6]] ;;; [[7,8,9] [10,11,12]]]`","user":"U01HD5VFXJM","ts":"1611341373.016900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rve","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6G4M02N4"},{"type":"text","text":" Does this help? Think of it like marking the boundary of a slice in that dimension.\n\n"},{"type":"text","text":"[1 2 ;;; 3 4]","style":{"code":true}},{"type":"text","text":"\nwill be printed as\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1×2×2 Array{Int64, 3}:\n[:, :, 1] =\n 1  2\n\n[:, :, 2] =\n 3  4"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nPreferring nested vectors is not unreasonable. But if you prefer that for readability, you could write something similar:\n"},{"type":"text","text":"[[[1,2,3] [4,5,6]] ;;; [[7,8,9] [10,11,12]]]","style":{"code":true}}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"1eeb9067-c6c5-4d10-829b-121daa5736e8","type":"message","text":"Oh!","user":"U6G4M02N4","ts":"1611341428.017100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UG3fE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh!"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"5daa9639-b3f9-4d31-91c4-44523f4fc45f","type":"message","text":"So if I want a 3D tensor `t` with `t[:,:,1] = [1 2; 3 4]` and `t[:,:,2] = [5 6; 7 8]` how would I write it?","user":"U6G4M02N4","ts":"1611341554.017300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tm5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So if I want a 3D tensor "},{"type":"text","text":"t","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"t[:,:,1] = [1 2; 3 4]","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"t[:,:,2] = [5 6; 7 8]","style":{"code":true}},{"type":"text","text":" how would I write it?"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"f6a9c686-5542-42e3-af47-27bd558688e5","type":"message","text":"And how would it change if the slice is different, say `t[:,1,:] = [1 2; 3 4]` and `t[:,2,:] = [5 6; 7 8]` ?","user":"U6G4M02N4","ts":"1611341600.017500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oQj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And how would it change if the slice is different, say "},{"type":"text","text":"t[:,1,:] = [1 2; 3 4]","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"t[:,2,:] = [5 6; 7 8]","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"4e7fb7e9-9375-46a2-a4b2-4092ad49ef3d","type":"message","text":"I think your first is `t = [1 2; 3 4 ;;; 5 6; 7 8]` or else (less sure)  `[1; 3 ;; 2 ; 4 ;;; 5 ; 7 ;; 6; 8]`.","user":"UD0NS8PDF","ts":"1611342025.018100","team":"T68168MUP","edited":{"user":"UD0NS8PDF","ts":"1611342178.000000"},"blocks":[{"type":"rich_text","block_id":"T=m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think your first is "},{"type":"text","text":"t = [1 2; 3 4 ;;; 5 6; 7 8]","style":{"code":true}},{"type":"text","text":" or else (less sure)  "},{"type":"text","text":"[1; 3 ;; 2 ; 4 ;;; 5 ; 7 ;; 6; 8]","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"b40928d2-960c-4de8-aa84-6d27fd7022fe","type":"message","text":"I haven't worked with tensors so I may need a bit more context for these operations. For the first, `t = [1 2; 3 4 ;;; 5 6 ; 7 8]` . For the second, `t = [1 5; 3 7 ;;; 2 6 ; 4 8]`.\n\nIt will also be valid to write column-first expressions by not using spaces, where the first would be `[1 ; 3 ;; 2 ; 4 ;;; 5 ; 7 ;; 6 ; 8]`.","user":"U01HD5VFXJM","ts":"1611342122.018500","team":"T68168MUP","edited":{"user":"U01HD5VFXJM","ts":"1611342256.000000"},"blocks":[{"type":"rich_text","block_id":"mFeyz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven't worked with tensors so I may need a bit more context for these operations. For the first, "},{"type":"text","text":"t = [1 2; 3 4 ;;; 5 6 ; 7 8]","style":{"code":true}},{"type":"text","text":" . For the second, "},{"type":"text","text":"t = [1 5; 3 7 ;;; 2 6 ; 4 8]","style":{"code":true}},{"type":"text","text":".\n\nIt will also be valid to write column-first expressions by not using spaces, where the first would be "},{"type":"text","text":"[1 ; 3 ;; 2 ; 4 ;;; 5 ; 7 ;; 6 ; 8]","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"2ced6bc0-3dcf-453d-80e1-e5f222d38ea6","type":"message","text":"Aaaaah! I think I get it: a space is a step along the second dimension, which is the same as ;;. A single ; is a step along the first dimension. And n consecutive ; is a step along the n dimension","user":"U6G4M02N4","ts":"1611342137.018700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5aCgZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aaaaah! I think I get it: a space is a step along the second dimension, which is the same as ;;. A single ; is a step along the first dimension. And n consecutive ; is a step along the n dimension"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG","reactions":[{"name":"+1","users":["U01HD5VFXJM","UD0NS8PDF","UKG4WF8PJ","U6QGE7S86","U6740K1SP","U90JR0C80"],"count":6}]},{"client_msg_id":"90e6d335-0f6f-4c7f-84ae-ddf587eadac8","type":"message","text":"Awesome","user":"U6G4M02N4","ts":"1611342160.019200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"537=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Awesome"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"fc6ff3bd-f14e-47e9-b5a3-258dde484ddf","type":"message","text":"Is it decided which will be preferred for compact printing, like `print(t)`? At the moment `print(rand(Int8, 2,2,2))` is awful.","user":"UD0NS8PDF","ts":"1611342253.019500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7l2i0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it decided which will be preferred for compact printing, like "},{"type":"text","text":"print(t)","style":{"code":true}},{"type":"text","text":"? At the moment "},{"type":"text","text":"print(rand(Int8, 2,2,2))","style":{"code":true}},{"type":"text","text":" is awful."}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"c4f2bd9b-19dd-4f63-bca5-c838c9c2db27","type":"message","text":"Great question. I think spaces are probably easier to read. But I just noticed it doesn't print the type, which I'll note. `[1 72; 95 -43;;; -43 45; -125 111]`","user":"U01HD5VFXJM","ts":"1611342562.019800","team":"T68168MUP","edited":{"user":"U01HD5VFXJM","ts":"1611342761.000000"},"blocks":[{"type":"rich_text","block_id":"aL+e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Great question. I think spaces are probably easier to read. But I just noticed it doesn't print the type, which I'll note. "},{"type":"text","text":"[1 72; 95 -43;;; -43 45; -125 111]","style":{"code":true}}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"9be8a9af-5cef-41da-bea2-4df742f0a0fe","type":"message","text":"One more check, if I may: would `t=[1 ;;; 2 ; 3 ;;; 4 ;; 5 ;;; 6 ; 7 ;;; 8]` also parse to `t[:,1,:] = [1 2; 3 4]` and `t[:,2,:] = [5 6; 7 8]` ?","user":"U6G4M02N4","ts":"1611342633.020000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PznwC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One more check, if I may: would "},{"type":"text","text":"t=[1 ;;; 2 ; 3 ;;; 4 ;; 5 ;;; 6 ; 7 ;;; 8]","style":{"code":true}},{"type":"text","text":" also parse to "},{"type":"text","text":"t[:,1,:] = [1 2; 3 4]","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"t[:,2,:] = [5 6; 7 8]","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"2960f8f5-6ac7-4859-be37-0b4f10ff6547","type":"message","text":"<@U6G4M02N4> - No, fewer semicolons take prescedence. So the first expression would be equivalent to `[1 ;;; [2 ; 3] ;;; [4 ;; 5] ;;; [6 ; 7] ;;; 8]`, which fails because the sizes don't match.","user":"U01HD5VFXJM","ts":"1611342902.020300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QXzVK","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6G4M02N4"},{"type":"text","text":" - No, fewer semicolons take prescedence. So the first expression would be equivalent to "},{"type":"text","text":"[1 ;;; [2 ; 3] ;;; [4 ;; 5] ;;; [6 ; 7] ;;; 8]","style":{"code":true}},{"type":"text","text":", which fails because the sizes don't match."}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"dbeb27ec-54c8-411a-ad2e-e3ae2375fafa","type":"message","text":"Ah, ok. Why the precedence rule? Would it make any sense to parse things from left to right as slice steps?","user":"U6G4M02N4","ts":"1611342985.020500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Kn73","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, ok. Why the precedence rule? Would it make any sense to parse things from left to right as slice steps?"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"aae90500-465d-475b-bfb0-72b20390c12d","type":"message","text":"(Perhaps I should study your PR better and shut up for a bit :slightly_smiling_face:)","user":"U6G4M02N4","ts":"1611343065.020700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tQ0X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(Perhaps I should study your PR better and shut up for a bit "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":")"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"63329b4f-382b-4131-9442-d55879547fc3","type":"message","text":"Because the syntax we already have is shorthand for concatenation. `[A ; B] =&gt; vcat(A, B)` `[A B] =&gt; hcat(A, B)` etc.","user":"U01HD5VFXJM","ts":"1611343108.020900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8QO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because the syntax we already have is shorthand for concatenation. "},{"type":"text","text":"[A ; B] => vcat(A, B)","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"[A B] => hcat(A, B)","style":{"code":true}},{"type":"text","text":" etc."}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"bedcbcfb-76a0-45d5-9dbe-816032fa9ec6","type":"message","text":"No worries!","user":"U01HD5VFXJM","ts":"1611343114.021100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fp6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No worries!"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"614451b1-4a97-4ff4-9914-3d65561c7ca7","type":"message","text":"Oh","user":"U01HD5VFXJM","ts":"1611343200.021300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"65T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"ce6ead79-eabc-4c5d-98c2-cdae7eb9690e","type":"message","text":"I see where you were coming from","user":"U01HD5VFXJM","ts":"1611343209.021500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Deh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see where you were coming from"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"b355fea1-5ed1-45cc-9000-991acd8f24c4","type":"message","text":"The `[A B ; C D]` hvcat expression has precedence, and that's what I was building from. I think it's probably easier to understand the whole expression if you don't have to think about the ordering? I'd maybe want to think about it more, but my instinct is that it would be a lot more complex to parse and lower.","user":"U01HD5VFXJM","ts":"1611343473.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SxQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":"[A B ; C D]","style":{"code":true}},{"type":"text","text":" hvcat expression has precedence, and that's what I was building from. I think it's probably easier to understand the whole expression if you don't have to think about the ordering? I'd maybe want to think about it more, but my instinct is that it would be a lot more complex to parse and lower."}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"0802c019-b170-46e0-9a1e-a02b94b1d0cf","type":"message","text":"The whole array expression gets mapped to a single underlying function.","user":"U01HD5VFXJM","ts":"1611343653.022000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zdv0W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The whole array expression gets mapped to a single underlying function."}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"93c3458f-1e9c-4fe2-bb87-69dec48d3d23","type":"message","text":"I say we punt printing to another PR","user":"U6740K1SP","ts":"1611346379.022800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9KgI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I say we punt printing to another PR"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG","reactions":[{"name":"+1","users":["UD0NS8PDF","UM30MT6RF"],"count":2}]},{"client_msg_id":"9c8abadd-3e8a-4a4b-81f4-4d2e90efaac6","type":"message","text":"The fact that this enables better printing is alone a huge deal","user":"U6740K1SP","ts":"1611346397.023000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jfa6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The fact that this enables better printing is alone a huge deal"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"ff8ec065-6d9b-4770-81d3-84bd62ade579","type":"message","text":"But printing is messy and just as opinionated (if not moreso) as surface syntax","user":"U6740K1SP","ts":"1611346419.023200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zHR0P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But printing is messy and just as opinionated (if not moreso) as surface syntax"}]}]}],"thread_ts":"1611336118.012800","parent_user_id":"U9VG1AYSG","reactions":[{"name":"+1","users":["U01HD5VFXJM"],"count":1}]}]