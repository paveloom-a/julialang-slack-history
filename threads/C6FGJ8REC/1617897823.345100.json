[{"client_msg_id":"6175df9d-d552-4350-84f1-dc04b57f0236","type":"message","text":"Really getting into metaprogramming, starting to click! Loving it.","user":"ULNHYTCJC","ts":"1617897823.345100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f94DN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Really getting into metaprogramming, starting to click! Loving it."}]}]}],"thread_ts":"1617897823.345100","reply_count":56,"reply_users_count":2,"latest_reply":"1618081922.376400","reply_users":["UBF9YRB6H","ULNHYTCJC"],"is_locked":false,"subscribed":false,"reactions":[{"name":"100","users":["U8D9768Q6","U6NFPDBV1","U6795JH6H","U67G3QRJM","U013B3NSZGB","U9MED583T","U8T0YV7QC"],"count":7}]},{"client_msg_id":"2906995d-6d8c-4c2e-aaa7-bfb22ed1d510","type":"message","text":"Are you working on a PR for dataframesmeta?","user":"UBF9YRB6H","ts":"1617898353.345500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zep","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you working on a PR for dataframesmeta?"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"88b23703-018c-4fb5-8d49-76215a179f07","type":"message","text":"Thinking more of a separate package that uses dataframesmeta as a dependency. Thinking it will be too idiosyncratic to be a PR. But happy for it to be heavily drawn on if others find it useful.","user":"ULNHYTCJC","ts":"1617898516.345800","team":"T68168MUP","edited":{"user":"ULNHYTCJC","ts":"1617898537.000000"},"blocks":[{"type":"rich_text","block_id":"P4/n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thinking more of a separate package that uses dataframesmeta as a dependency. Thinking it will be too idiosyncratic to be a PR. But happy for it to be heavily drawn on if others find it useful."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"c1d4651d-7568-43d0-b2c9-31e40dea09e8","type":"message","text":"Kind of a decade long goal of finding/stylizing another data management/wrangling tool which is as accessible to new users as Stata.","user":"ULNHYTCJC","ts":"1617898607.346300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A48","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Kind of a decade long goal of finding/stylizing another data management/wrangling tool which is as accessible to new users as Stata."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"e820aa82-59f6-4ca3-827d-af09ec167fbf","type":"message","text":"I really think DataFramesMeta will be close, soon! Once we get `where` and `@byrow` sorted  out in DataFrames, I think `@chain` with `@transform!` is very close.\n\nPlease file an issue with your more detailed design decisions when you finish working on this package. I don't want people to feel like they have to re-invent the wheel.","user":"UBF9YRB6H","ts":"1617898704.347300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tY1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I really think DataFramesMeta will be close, soon! Once we get "},{"type":"text","text":"where","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"@byrow","style":{"code":true}},{"type":"text","text":" sorted  out in DataFrames, I think "},{"type":"text","text":"@chain","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"@transform!","style":{"code":true}},{"type":"text","text":" is very close.\n\nPlease file an issue with your more detailed design decisions when you finish working on this package. I don't want people to feel like they have to re-invent the wheel."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"cbaff701-e914-41e3-9821-c7123fdbcb6a","type":"message","text":"Right now I have:\n```n = 7\nx = DataFrame(A=1:n, B=rand(1:2, n), C=rand(1:2, n))\n@mount x\n@make E = :C + :B\n@make (E = round.(:A .^ .5, digits = 1)) iff(:B .&lt; :A .- 1)\n@make by(B) ( H = round(mean(:A),digits = 1)) iff(:A .&gt; 2)```\nProducing\n```7 rows × 5 columns\n    A\tB\tC\tE\tH\n    Int64\tInt64\tInt64\tFloat64?\tFloat64?\n1\t1\t2\t2\t4.0\tmissing\n2\t2\t2\t2\t4.0\tmissing\n3\t3\t2\t1\t3.0\t3.5\n4\t4\t2\t2\t2.0\t3.5\n5\t5\t1\t2\t2.2\t6.0\n6\t6\t1\t2\t2.4\t6.0\n7\t7\t1\t2\t2.6\t6.0```","user":"ULNHYTCJC","ts":"1617898716.347500","team":"T68168MUP","edited":{"user":"ULNHYTCJC","ts":"1617899082.000000"},"blocks":[{"type":"rich_text","block_id":"QMf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right now I have:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"n = 7\nx = DataFrame(A=1:n, B=rand(1:2, n), C=rand(1:2, n))\n@mount x\n@make E = :C + :B\n@make (E = round.(:A .^ .5, digits = 1)) iff(:B .< :A .- 1)\n@make by(B) ( H = round(mean(:A),digits = 1)) iff(:A .> 2)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Producing\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"7 rows × 5 columns\n    A\tB\tC\tE\tH\n    Int64\tInt64\tInt64\tFloat64?\tFloat64?\n1\t1\t2\t2\t4.0\tmissing\n2\t2\t2\t2\t4.0\tmissing\n3\t3\t2\t1\t3.0\t3.5\n4\t4\t2\t2\t2.0\t3.5\n5\t5\t1\t2\t2.2\t6.0\n6\t6\t1\t2\t2.4\t6.0\n7\t7\t1\t2\t2.6\t6.0"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"d56f129f-b1cb-4fc7-8664-492525945b25","type":"message","text":"How is that different from DataFramesMeta with `@chain` though?\n\n```julia&gt; @chain x begin \n       @transform E = :C + :B\n       @transform(\n           E = :A .^ .5, \n           F = :A .^ 2, \n           G = 1, \n           status = \"Map 1\"\n       )\n       groupby(:B); @transform H = mean(:A)\n       end\n7×8 DataFrame\n Row │ A      B      C      E        F      G      status  H       \n     │ Int64  Int64  Int64  Float64  Int64  Int64  String  Float64 \n─────┼─────────────────────────────────────────────────────────────\n   1 │     1      1      2  1.0          1      1  Map 1       3.6\n   2 │     2      1      2  1.41421      4      1  Map 1       3.6\n   3 │     3      2      2  1.73205      9      1  Map 1       5.0\n   4 │     4      1      2  2.0         16      1  Map 1       3.6\n   5 │     5      1      2  2.23607     25      1  Map 1       3.6\n   6 │     6      1      2  2.44949     36      1  Map 1       3.6\n   7 │     7      2      2  2.64575     49      1  Map 1       5.0```","user":"UBF9YRB6H","ts":"1617899007.349000","team":"T68168MUP","edited":{"user":"UBF9YRB6H","ts":"1617899135.000000"},"blocks":[{"type":"rich_text","block_id":"nG7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How is that different from DataFramesMeta with "},{"type":"text","text":"@chain","style":{"code":true}},{"type":"text","text":" though?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @chain x begin \n       @transform E = :C + :B\n       @transform(\n           E = :A .^ .5, \n           F = :A .^ 2, \n           G = 1, \n           status = \"Map 1\"\n       )\n       groupby(:B); @transform H = mean(:A)\n       end\n7×8 DataFrame\n Row │ A      B      C      E        F      G      status  H       \n     │ Int64  Int64  Int64  Float64  Int64  Int64  String  Float64 \n─────┼─────────────────────────────────────────────────────────────\n   1 │     1      1      2  1.0          1      1  Map 1       3.6\n   2 │     2      1      2  1.41421      4      1  Map 1       3.6\n   3 │     3      2      2  1.73205      9      1  Map 1       5.0\n   4 │     4      1      2  2.0         16      1  Map 1       3.6\n   5 │     5      1      2  2.23607     25      1  Map 1       3.6\n   6 │     6      1      2  2.44949     36      1  Map 1       3.6\n   7 │     7      2      2  2.64575     49      1  Map 1       5.0"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"c5f1a7ed-ecdc-462b-9a3f-b60d9fa90875","type":"message","text":"the only thing missing is the `@iff`, bits. Which doesn't need a \"decade-long\" project and a new package","user":"UBF9YRB6H","ts":"1617899039.349200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZflWv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the only thing missing is the "},{"type":"text","text":"@iff","style":{"code":true}},{"type":"text","text":", bits. Which doesn't need a \"decade-long\" project and a new package"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC","reactions":[{"name":"wink","users":["ULNHYTCJC"],"count":1}]},{"client_msg_id":"bd19aa54-ed9e-44a2-9560-4650c74ec779","type":"message","text":"LoL, :slightly_smiling_face:","user":"ULNHYTCJC","ts":"1617899133.349500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=zw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LoL, "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"a66c40df-d758-4825-b415-8fbab4d81dd2","type":"message","text":"That is why I said it is probably be too idiosyncratic. I know, I know you guys/gals who have programming in your blood find `@chain` and other things of this sort second nature. But if you want to teach data management and analysis to medical doctors or economists or whatever who spent years honing their skills in their field, they are going to find the above both confusing and unnecessarily complicated. It will hopefully be more clear as I add functionality.","user":"ULNHYTCJC","ts":"1617899500.350300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tPEHK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is why I said it is probably be too idiosyncratic. I know, I know you guys/gals who have programming in your blood find "},{"type":"text","text":"@chain","style":{"code":true}},{"type":"text","text":" and other things of this sort second nature. But if you want to teach data management and analysis to medical doctors or economists or whatever who spent years honing their skills in their field, they are going to find the above both confusing and unnecessarily complicated. It will hopefully be more clear as I add functionality."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"5b30f0d5-e214-4749-80ba-da9a2ca68e33","type":"message","text":"I understand that the above may be confusing. But the differences between the two approaches don't seem very meaningful to me at the moment. For reference, I am an economist and have spent plenty of time teaching new comers data-cleaning.\n\nIt's a bummer that you think the `@chain` approach is too complicated. To be clear, this is the same approach used by `dplyr`, which plenty of new-comers can pick up easily.\n\nThat said, I look forward to seeing more of your design choices! I hope that I can learn from your package and some of your features can be merged into DataFramesMeta.","user":"UBF9YRB6H","ts":"1617899665.350500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"79vZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I understand that the above may be confusing. But the differences between the two approaches don't seem very meaningful to me at the moment. For reference, I am an economist and have spent plenty of time teaching new comers data-cleaning.\n\nIt's a bummer that you think the "},{"type":"text","text":"@chain","style":{"code":true}},{"type":"text","text":" approach is too complicated. To be clear, this is the same approach used by "},{"type":"text","text":"dplyr","style":{"code":true}},{"type":"text","text":", which plenty of new-comers can pick up easily.\n\nThat said, I look forward to seeing more of your design choices! I hope that I can learn from your package and some of your features can be merged into DataFramesMeta."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"3e956df3-1b45-4867-aaa6-b7c455691996","type":"message","text":"It is not about _complexity_ so much as about _emphasis_. With regards to _dplyr_, I have spent a lot of time posting on the use of both R and Stata with data analysis and simulations (<http://econometricsbysimulation.com/>) and while I am quite experienced with `dplyr`, I have never been entirely happy with it as compared with Stata though it is certainly an improvement over the base R environment.","user":"ULNHYTCJC","ts":"1617901213.351300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kNQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is not about "},{"type":"text","text":"complexity ","style":{"italic":true}},{"type":"text","text":"so much as about "},{"type":"text","text":"emphasis","style":{"italic":true}},{"type":"text","text":". With regards to "},{"type":"text","text":"dplyr","style":{"italic":true}},{"type":"text","text":", I have spent a lot of time posting on the use of both R and Stata with data analysis and simulations ("},{"type":"link","url":"http://econometricsbysimulation.com/"},{"type":"text","text":") and while I am quite experienced with "},{"type":"text","text":"dplyr","style":{"code":true}},{"type":"text","text":", I have never been entirely happy with it as compared with Stata though it is certainly an improvement over the base R environment."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"44f1a057-b341-4d2b-acaa-60c7f18349a6","type":"message","text":"Could you clarify what you mean by emphasis?","user":"UBF9YRB6H","ts":"1617902983.352500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qAV3o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could you clarify what you mean by emphasis?"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"53854171-5b88-43b7-b9cd-92cc296f2c86","type":"message","text":"Lets look at the simplest example. If a lay person had a data set with the variables `x` and `y` then they want to create a new variable `z = x + y` then they would need to write something like `df = @transform df z = :x .+ :y` which is fine but really about 60%-70% of the statement is effectively coding artifacts. Sure we can add the macro `@transform!`  to make it `@transform! df z = :x .+ :y`  but really we have more than half the expression dedicated to something the user doesn't care about. So why not just?\n```@mount df\n@make z = :x .+ :y\n\n## User does something else for 100 lines.\n@make z2 = :x .+ :y     iff(:z .&lt; 0)```","user":"ULNHYTCJC","ts":"1617903213.352900","team":"T68168MUP","edited":{"user":"ULNHYTCJC","ts":"1617903714.000000"},"blocks":[{"type":"rich_text","block_id":"rb383","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Lets look at the simplest example. If a lay person had a data set with the variables "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" then they want to create a new variable "},{"type":"text","text":"z = x + y","style":{"code":true}},{"type":"text","text":" then they would need to write something like "},{"type":"text","text":"df = @transform df z = :x .+ :y","style":{"code":true}},{"type":"text","text":" which is fine but really about 60%-70% of the statement is effectively coding artifacts. Sure we can add the macro "},{"type":"text","text":"@transform!","style":{"code":true}},{"type":"text","text":"  to make it "},{"type":"text","text":"@transform! df z = :x .+ :y","style":{"code":true}},{"type":"text","text":"  but really we have more than half the expression dedicated to something the user doesn't care about. So why not just?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@mount df\n@make z = :x .+ :y\n\n## User does something else for 100 lines.\n@make z2 = :x .+ :y     iff(:z .< 0)"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"0ed1d8bc-5dcc-4e50-9759-df79b64c3be1","type":"message","text":"Oh. well I think this is a bit of an anti-pattern. How should I know, 100 lines later, that `df` is he one that's being modified? This approach introduces a hidden state that can be create hard-to-interpret code","user":"UBF9YRB6H","ts":"1617903706.353700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1rz7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh. well I think this is a bit of an anti-pattern. How should I know, 100 lines later, that "},{"type":"text","text":"df","style":{"code":true}},{"type":"text","text":" is he one that's being modified? This approach introduces a hidden state that can be create hard-to-interpret code"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"724a19a3-35db-42eb-ba7d-1b11a46069b5","type":"message","text":"True. But in 90% of real world applications (in economics at least) there is only one dataset.","user":"ULNHYTCJC","ts":"1617903783.354000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h0Rz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"True. But in 90% of real world applications (in economics at least) there is only one dataset."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"c8e3429c-a94c-4676-9061-e27aede74762","type":"message","text":"If you have multiple datasets first you figure out how to merge them into one dataset. Then you modify. That is pretty much how everybody talks and acts among econometricians and the like.","user":"ULNHYTCJC","ts":"1617903841.354200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+kw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you have multiple datasets first you figure out how to merge them into one dataset. Then you modify. That is pretty much how everybody talks and acts among econometricians and the like."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"635b11b5-53e9-4c4c-9658-cbd1f82afbc9","type":"message","text":"I'm not sure that's true, at least in economics. I regularly see people using `use d, clear` multiple times in a Stata code. Or long blocks of `preserve ... restore`. These annoy me and I split them into separate files.","user":"UBF9YRB6H","ts":"1617903857.354400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ypWS8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure that's true, at least in economics. I regularly see people using "},{"type":"text","text":"use d, clear","style":{"code":true}},{"type":"text","text":" multiple times in a Stata code. Or long blocks of "},{"type":"text","text":"preserve ... restore","style":{"code":true}},{"type":"text","text":". These annoy me and I split them into separate files."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"b30f9b91-4c9c-4dac-a69c-f497b36d66c7","type":"message","text":"Agreed. There are some annoying things about Stata that makes sophisticated users frustrated.","user":"ULNHYTCJC","ts":"1617903896.354600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eb=q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Agreed. There are some annoying things about Stata that makes sophisticated users frustrated."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"7e47ec70-f279-46d0-930a-2fa03558a464","type":"message","text":"I think one workflow which would work well is a script consisting of one big `@chain` block (one dataset per file, per Grentzkow-Shapiro). That would basically be Stata.\n\nThe user can use the `@aside` constructs to do extraneous calculations. It's basically a \"flipped\" version of what you are proposing. 90% of the calculation is within the dataframe. But you have a bunch of those scripts. That's probably how I would see a typical economic application.","user":"UBF9YRB6H","ts":"1617904062.354800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qin","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think one workflow which would work well is a script consisting of one big "},{"type":"text","text":"@chain","style":{"code":true}},{"type":"text","text":" block (one dataset per file, per Grentzkow-Shapiro). That would basically be Stata.\n\nThe user can use the "},{"type":"text","text":"@aside","style":{"code":true}},{"type":"text","text":" constructs to do extraneous calculations. It's basically a \"flipped\" version of what you are proposing. 90% of the calculation is within the dataframe. But you have a bunch of those scripts. That's probably how I would see a typical economic application."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"8e99848c-bd26-4cfc-8195-4498a5783553","type":"message","text":"```@chain begin\nCSV.File(...)\nDataFrame\n@transform y = :x + :z\n@aside begin\n    # like making locals\n    a = 1\nend\n@transform z2 = z: .+ a\nend```","user":"UBF9YRB6H","ts":"1617904155.355000","team":"T68168MUP","edited":{"user":"UBF9YRB6H","ts":"1617904162.000000"},"blocks":[{"type":"rich_text","block_id":"qc6nR","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@chain begin\nCSV.File(...)\nDataFrame\n@transform y = :x + :z\n@aside begin\n    # like making locals\n    a = 1\nend\n@transform z2 = z: .+ a\nend"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"200f42c2-4161-4949-9a6d-bf74924dc16a","type":"message","text":"I guess in my ideal world one would do:\n```@mount df1 \n@make ...\n@rename ...\n@drop ....\n# modifications to df1\n\n@mount df2\n@make ...\n@rename ...\n@drop ....\n# modifications to df2\n\nmerge(df1, df2, by = :ID)```","user":"ULNHYTCJC","ts":"1617904183.355300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V=eDS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess in my ideal world one would do:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@mount df1 \n@make ...\n@rename ...\n@drop ....\n# modifications to df1\n\n@mount df2\n@make ...\n@rename ...\n@drop ....\n# modifications to df2\n\nmerge(df1, df2, by = :ID)"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"743e5794-69d4-4f71-a574-c2d04733cf2c","type":"message","text":"That's basically two `@chain` blocks, thoug. Right?","user":"UBF9YRB6H","ts":"1617904204.355500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jOdO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's basically two "},{"type":"text","text":"@chain","style":{"code":true}},{"type":"text","text":" blocks, thoug. Right?"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"30627c58-bee1-40f4-ab4f-3bb2f2b39972","type":"message","text":"The only difference is that `@chain` is slightly more explicit about what dataset is being acted upon.","user":"UBF9YRB6H","ts":"1617904225.355700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t5S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The only difference is that "},{"type":"text","text":"@chain","style":{"code":true}},{"type":"text","text":" is slightly more explicit about what dataset is being acted upon."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"186f02ee-fd72-4b41-afbf-030f49f1be85","type":"message","text":"Yes but doesn't chain break interactivity? Everything has to be compiled.","user":"ULNHYTCJC","ts":"1617904234.355900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"49G4X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes but doesn't chain break interactivity? Everything has to be compiled."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"61037c27-f3a7-487f-ad12-299645922485","type":"message","text":"jointly","user":"ULNHYTCJC","ts":"1617904241.356100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t2cuq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"jointly"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"4808d946-0b43-4683-9158-807321de96a3","type":"message","text":"hmmm good point. you mean it makes REPL use harder?","user":"UBF9YRB6H","ts":"1617904275.356300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kb0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmmm good point. you mean it makes REPL use harder?"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"d2fddeae-03ca-42d7-b58f-eeb670c66f04","type":"message","text":"Yeah","user":"ULNHYTCJC","ts":"1617904285.356500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sx+U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"3074d134-8257-4fb9-9d8b-b6f4b5ee1168","type":"message","text":"yeah, that's a good point.\n\nI mean, I guess I don't think `@transform!(df, ...)` is that burdensome.\n\nThis is essentially what this package does: <https://github.com/jmboehm/Douglass.jl>, which I was going to mention earlier but couldn't remember the name of","user":"UBF9YRB6H","ts":"1617904667.356700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f62U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, that's a good point.\n\nI mean, I guess I don't think "},{"type":"text","text":"@transform!(df, ...)","style":{"code":true}},{"type":"text","text":" is that burdensome.\n\nThis is essentially what this package does: "},{"type":"link","url":"https://github.com/jmboehm/Douglass.jl"},{"type":"text","text":", which I was going to mention earlier but couldn't remember the name of"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"6d01e571-c8cd-4ac1-ac7c-bb2df8db5d7e","type":"message","text":"I think a `@chain` REPL mode would solve this problem really well though","user":"UBF9YRB6H","ts":"1617904682.356900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vjs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think a "},{"type":"text","text":"@chain","style":{"code":true}},{"type":"text","text":" REPL mode would solve this problem really well though"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"e8f90f61-2140-4b83-96f0-8d68255d9c89","type":"message","text":"Well, there are some things to like about Stata but I don't want to clone it. Creating a different REPL will get users stuck in a world in which interacting with the interface outside of Julia feel daunting. I just want something that is simple and makes sense.","user":"ULNHYTCJC","ts":"1617905043.357100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"luhEk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, there are some things to like about Stata but I don't want to clone it. Creating a different REPL will get users stuck in a world in which interacting with the interface outside of Julia feel daunting. I just want something that is simple and makes sense."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"4aeb7e06-9bfa-4d2b-9d75-d97a5084aa0b","type":"message","text":"I am not sure what a @chain REPL mode would look like.","user":"ULNHYTCJC","ts":"1617905178.357300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JtkFX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am not sure what a @chain REPL mode would look like."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"246ac557-37b1-4e9f-a7d1-cc58e5586cb9","type":"message","text":"I think that in a non-stata world where you can have multiple data frames at the same time, requiring users to always be explicit about what data frame is being acted on is important.\n\nActually just wrote a package which gets close to solving this problem\n\n<https://pdeffebach.github.io/AddToField.jl/stable/>\n\nWhat's missing is some sort of special reference about columns in the DataFrame.","user":"UBF9YRB6H","ts":"1617905289.357500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"amy=n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think that in a non-stata world where you can have multiple data frames at the same time, requiring users to always be explicit about what data frame is being acted on is important.\n\nActually just wrote a package which gets close to solving this problem\n\n"},{"type":"link","url":"https://pdeffebach.github.io/AddToField.jl/stable/"},{"type":"text","text":"\n\nWhat's missing is some sort of special reference about columns in the DataFrame."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"fba3c7ab-0d7f-4a38-a306-05a6a6056cdc","type":"message","text":"I would be open to a DataFramesMeta-esque use of `Symbol`s to refer to properties of the data frame.","user":"UBF9YRB6H","ts":"1617905393.357700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Tl9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would be open to a DataFramesMeta-esque use of `Symbol`s to refer to properties of the data frame."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"3236d26d-a96e-4ede-a6fb-1479fa24a65b","type":"message","text":"I would be fine with something like this.\n`@transform! mydf :  z = :x .+ :y     iff(:z .&lt; 0)`\nor\n`@transform! mydf :  xstandarized = (:x - mean(:x)) ./ var(:x)     by(:group)`\n I don't know how `:` is treated yet so I don't know if it presents any technical difficulties.","user":"ULNHYTCJC","ts":"1617906358.357900","team":"T68168MUP","edited":{"user":"ULNHYTCJC","ts":"1617906386.000000"},"blocks":[{"type":"rich_text","block_id":"KVrwQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would be fine with something like this.\n"},{"type":"text","text":"@transform! mydf :  z = :x .+ :y     iff(:z .< 0)","style":{"code":true}},{"type":"text","text":"\nor\n"},{"type":"text","text":"@transform! mydf :  xstandarized = (:x - mean(:x)) ./ var(:x)     by(:group)","style":{"code":true}},{"type":"text","text":"\n I don't know how "},{"type":"text","text":":","style":{"code":true}},{"type":"text","text":" is treated yet so I don't know if it presents any technical difficulties."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"793b8d0c-92cf-4b2b-9d0f-79564b1aef25","type":"message","text":"`:` would probably be tough.\n\nOne option that I pushed for earlier on, which was a bit similar, was\n\n```@genby df :group y = f(:x)```\nBut that was determined not to be needed in the presence of multiple dispatch.","user":"UBF9YRB6H","ts":"1617906467.358300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HGdHi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":":","style":{"code":true}},{"type":"text","text":" would probably be tough.\n\nOne option that I pushed for earlier on, which was a bit similar, was\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@genby df :group y = f(:x)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nBut that was determined not to be needed in the presence of multiple dispatch."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"2d6b10f9-7cb1-48e3-80ae-e46553016efa","type":"message","text":"The `:group` was used to pass operation sets to different processors - sorry - multiple dispatch style? I am thinking of `group` as in `groupby(DataFrame)` .","user":"ULNHYTCJC","ts":"1617906656.358500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ftx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":":group","style":{"code":true}},{"type":"text","text":" was used to pass operation sets to different processors - sorry - multiple dispatch style? I am thinking of "},{"type":"text","text":"group","style":{"code":true}},{"type":"text","text":" as in "},{"type":"text","text":"groupby(DataFrame)","style":{"code":true}},{"type":"text","text":" ."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"165a143e-7ef8-4d03-afbd-d5178ca09266","type":"message","text":"What do you mean \"different processors\"?\n\nThe multiple-dispatch style would be that there's no reason for `@genby` when we can have both `@gen(gd::GroupedDataFrame)` and `@gen(df::AbstractDataFrame)` with contextual behavior based on the type.","user":"UBF9YRB6H","ts":"1617906782.358700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=LM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean \"different processors\"?\n\nThe multiple-dispatch style would be that there's no reason for "},{"type":"text","text":"@genby","style":{"code":true}},{"type":"text","text":" when we can have both "},{"type":"text","text":"@gen(gd::GroupedDataFrame)","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"@gen(df::AbstractDataFrame)","style":{"code":true}},{"type":"text","text":" with contextual behavior based on the type."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"ce4cb038-ceaf-4075-b71a-6295e8175933","type":"message","text":"Sorry, get confused. Multiple dispatch not multi-threading, nevermind. Makes sense.","user":"ULNHYTCJC","ts":"1617907142.358900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j7yQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry, get confused. Multiple dispatch not multi-threading, nevermind. Makes sense."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"48e1bc45-7ad5-475d-8fbf-295fa5c4ede1","type":"message","text":"But the performance consideration is important. There are going to be a lot of performance enhancements to the `src =&gt; fun =&gt; dest` stuff in the future. So making sure that you take advantage of that infrastructure is important.","user":"UBF9YRB6H","ts":"1617907222.359100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ou5T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But the performance consideration is important. There are going to be a lot of performance enhancements to the "},{"type":"text","text":"src => fun => dest","style":{"code":true}},{"type":"text","text":" stuff in the future. So making sure that you take advantage of that infrastructure is important."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"5b0045a7-eaaf-470a-a5c2-3c494a0cd52e","type":"message","text":"Well, right now I am calling on `@transform` to preproccess any `iff()` clause then slicing the DataFrame, performing my `groupby` and `@transform` on the slice before ungrouping and feeding it back to the original dataframe, filling any missing columns values with missing values. Since I am building entirely on `@transform` I don't anticipate any performance issues that are not already present in `@transform`\n\nI don't know. I don't feel very good about `@mount df` but I might be happy with: `@make! df    z = :x .+ :y    iff(:x .&gt; :y)` .\n\nThis would allow me to avoid the failure to explicitly reference dataframes when modifying them.","user":"ULNHYTCJC","ts":"1617908046.359400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X/KY5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, right now I am calling on "},{"type":"text","text":"@transform","style":{"code":true}},{"type":"text","text":" to preproccess any "},{"type":"text","text":"iff()","style":{"code":true}},{"type":"text","text":" clause then slicing the DataFrame, performing my "},{"type":"text","text":"groupby","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"@transform","style":{"code":true}},{"type":"text","text":" on the slice before ungrouping and feeding it back to the original dataframe, filling any missing columns values with missing values. Since I am building entirely on "},{"type":"text","text":"@transform","style":{"code":true}},{"type":"text","text":" I don't anticipate any performance issues that are not already present in "},{"type":"text","text":"@transform","style":{"code":true}},{"type":"text","text":"\n\nI don't know. I don't feel very good about "},{"type":"text","text":"@mount df","style":{"code":true}},{"type":"text","text":" but I might be happy with: "},{"type":"text","text":"@make! df    z = :x .+ :y    iff(:x .> :y)","style":{"code":true}},{"type":"text","text":" .\n\nThis would allow me to avoid the failure to explicitly reference dataframes when modifying them."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"4ebcf05b-a6d6-4402-b8f5-059ef94b2095","type":"message","text":"Maybe:`@mod! df    z = :x .+ :y    iff(:x .&gt; :y)`","user":"ULNHYTCJC","ts":"1617908336.360900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HOwj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe:"},{"type":"text","text":"@mod! df    z = :x .+ :y    iff(:x .> :y)","style":{"code":true}}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"15f7283e-b535-45d9-b3b9-3cce6d6ba156","type":"message","text":"This is great to hear.\n\nI really think that if we just hold on a few months, we will get a `where` keyword argument in DataFrames. This will make the `iff` behavior inside DataFrames. It will basically be what you describe, except I would imagine there would be some sort of wrapper function that transforms all array inputs into `view`s and outputs arrays with missing values added.\n\nIt sounds like some of your problems might be solved by just having `@transform` have a shorter name.","user":"UBF9YRB6H","ts":"1617908392.361100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2KI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is great to hear.\n\nI really think that if we just hold on a few months, we will get a "},{"type":"text","text":"where","style":{"code":true}},{"type":"text","text":" keyword argument in DataFrames. This will make the "},{"type":"text","text":"iff","style":{"code":true}},{"type":"text","text":" behavior inside DataFrames. It will basically be what you describe, except I would imagine there would be some sort of wrapper function that transforms all array inputs into `view`s and outputs arrays with missing values added.\n\nIt sounds like some of your problems might be solved by just having "},{"type":"text","text":"@transform","style":{"code":true}},{"type":"text","text":" have a shorter name."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"b9076691-0ec1-4a08-af23-fac2a72d7edd","type":"message","text":"You might also be interested in `@as` from Lazy.jl. You could have `@as _ long_data_name begin ...` which means you only have to write\n\n```@transform _ y = :x```\ninstead of `df` or a longer name.","user":"UBF9YRB6H","ts":"1617914705.363100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+0R+w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might also be interested in "},{"type":"text","text":"@as","style":{"code":true}},{"type":"text","text":" from Lazy.jl. You could have "},{"type":"text","text":"@as _ long_data_name begin ...","style":{"code":true}},{"type":"text","text":" which means you only have to write\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@transform _ y = :x"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\ninstead of "},{"type":"text","text":"df","style":{"code":true}},{"type":"text","text":" or a longer name."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC","reactions":[{"name":"+1","users":["ULNHYTCJC"],"count":1}]},{"client_msg_id":"3ca23ca5-94d4-4d58-9415-2b7c55451327","type":"message","text":"Not sure if `@transform!` is feasible as the only way I have found to code it breaks scope.\n```macro transform!(x::DataFrame, args...)\n    quote\n        global $x\n        $x = @transform $x $(args...)\n    end\nend```","user":"ULNHYTCJC","ts":"1617916795.363500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VVq9X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure if "},{"type":"text","text":"@transform!","style":{"code":true}},{"type":"text","text":" is feasible as the only way I have found to code it breaks scope.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"macro transform!(x::DataFrame, args...)\n    quote\n        global $x\n        $x = @transform $x $(args...)\n    end\nend"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"5c686b82-9583-4fbe-99e4-cf2527a4c897","type":"message","text":"`@transform!` already exists on master. it just modifies the data frame in place, just like `transform!` in DataFrames.","user":"UBF9YRB6H","ts":"1617916895.363700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jnI=q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@transform!","style":{"code":true}},{"type":"text","text":" already exists on master. it just modifies the data frame in place, just like "},{"type":"text","text":"transform!","style":{"code":true}},{"type":"text","text":" in DataFrames."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"7c2e1a00-21a3-4c2f-8ba7-f3379610d681","type":"message","text":"I didn't do a release when I should have, which is a something I messed up on. It should have been around for a few months, unfortunately","user":"UBF9YRB6H","ts":"1617916918.363900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vMM3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I didn't do a release when I should have, which is a something I messed up on. It should have been around for a few months, unfortunately"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC","reactions":[{"name":"+1","users":["ULNHYTCJC"],"count":1}]},{"client_msg_id":"26e4ffac-b1d6-4696-b5e0-546f76c85cf4","type":"message","text":"The next thing I will after this one: <https://github.com/JuliaData/DataFramesMeta.jl/pull/221>\n\nis add `@byrow`.","user":"UBF9YRB6H","ts":"1617917211.364200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x2u0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The next thing I will after this one: "},{"type":"link","url":"https://github.com/JuliaData/DataFramesMeta.jl/pull/221"},{"type":"text","text":"\n\nis add "},{"type":"text","text":"@byrow","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"38267c0c-68f1-45d7-8681-3b401721a238","type":"message","text":"I've also filed this issue with DataFrames: <https://github.com/JuliaData/DataFrames.jl/issues/2706>\n\nso that the `combine` part could also operate in-place.","user":"UBF9YRB6H","ts":"1617981022.372500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dom0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've also filed this issue with DataFrames: "},{"type":"link","url":"https://github.com/JuliaData/DataFrames.jl/issues/2706"},{"type":"text","text":"\n\nso that the "},{"type":"text","text":"combine","style":{"code":true}},{"type":"text","text":" part could also operate in-place."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"fb53444e-02a3-4a38-9531-bbdd0e3ee555","type":"message","text":"Ended up revising what I had. Probably going to try to get back to my day job. Don't know if this is helpful to anybody. Would have been helpful to me six months ago when I was trying to convince my team that `Julia` was a good option. Instead we are stuck in the mediocrity which is Pandas with a ton of custom methods and tools.","user":"ULNHYTCJC","ts":"1618000486.373400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2YTfI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ended up revising what I had. Probably going to try to get back to my day job. Don't know if this is helpful to anybody. Would have been helpful to me six months ago when I was trying to convince my team that "},{"type":"text","text":"Julia","style":{"code":true}},{"type":"text","text":" was a good option. Instead we are stuck in the mediocrity which is Pandas with a ton of custom methods and tools."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"1039c59e-3cb0-4dd2-8f93-2bc3c09c60ea","type":"message","text":"<https://github.com/EconometricsBySimulation/DataWrangler.jl/blob/main/DataWrangler.jl.ipynb>","user":"ULNHYTCJC","ts":"1618000491.373600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WLIo","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/EconometricsBySimulation/DataWrangler.jl/blob/main/DataWrangler.jl.ipynb"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"b9f0329c-1ee1-4ac4-8a54-bdc01968c5ac","type":"message","text":"Please comment on the issue above to show your support! It's important for your feedback to stay permanent and not get lost in the slack hole","user":"UBF9YRB6H","ts":"1618001072.373800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QGb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please comment on the issue above to show your support! It's important for your feedback to stay permanent and not get lost in the slack hole"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"b7c1747f-aa33-4ab8-907e-fa47c319865e","type":"message","text":"I also posted an issue here which might help your use-cases a bit. <https://github.com/jkrumbiegel/Chain.jl/issues/26>","user":"UBF9YRB6H","ts":"1618001092.374000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vwo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I also posted an issue here which might help your use-cases a bit. "},{"type":"link","url":"https://github.com/jkrumbiegel/Chain.jl/issues/26"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"f7618b26-885d-4b66-bbb0-dbf4d324236f","type":"message","text":"I appreciate posting what you wrote. I will try and get an `ifelse` macro going based on what you wrote and see if I can get it into DataFramesMeta","user":"UBF9YRB6H","ts":"1618001122.374200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z5/V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I appreciate posting what you wrote. I will try and get an "},{"type":"text","text":"ifelse","style":{"code":true}},{"type":"text","text":" macro going based on what you wrote and see if I can get it into DataFramesMeta"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"5d47b13c-d5a7-44f4-ad8a-aa77392420b6","type":"message","text":"Thanks for that! Appreciate it. I really want Julia to be the next thing. Pushing `Julia` or at least Data Management to be a bit more \"declarative\" I believe is essential. I cannot expect anybody else to take up the language when I find little quirks like how to declare new columns in a `DataFrame` that could contain missing values taking up hours of my time. Maybe there could be `Declarative mode` for those of us who don't care if we lose a little performance so long as I can figure out how to get my question answered.\n\nI feel that if I fully switched to Julia it would allow me to save maybe collectively 100 hours of my work time per year yet in speed yet cost me 200 hours+ of time debugging.\n\nRight now I have three large projects ongoing at work, one in R, another in Julia, and the largest in Python. Anyways, thanks so much for your time!","user":"ULNHYTCJC","ts":"1618007084.374700","team":"T68168MUP","edited":{"user":"ULNHYTCJC","ts":"1618011829.000000"},"blocks":[{"type":"rich_text","block_id":"kry3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for that! Appreciate it. I really want Julia to be the next thing. Pushing "},{"type":"text","text":"Julia","style":{"code":true}},{"type":"text","text":" or at least Data Management to be a bit more \"declarative\" I believe is essential. I cannot expect anybody else to take up the language when I find little quirks like how to declare new columns in a "},{"type":"text","text":"DataFrame","style":{"code":true}},{"type":"text","text":" that could contain missing values taking up hours of my time. Maybe there could be "},{"type":"text","text":"Declarative mode","style":{"code":true}},{"type":"text","text":" for those of us who don't care if we lose a little performance so long as I can figure out how to get my question answered.\n\nI feel that if I fully switched to Julia it would allow me to save maybe collectively 100 hours of my work time per year yet in speed yet cost me 200 hours+ of time debugging.\n\nRight now I have three large projects ongoing at work, one in R, another in Julia, and the largest in Python. Anyways, thanks so much for your time!"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"dda4a811-010a-4d69-aab1-5962609b2b8f","type":"message","text":"Sorry been a bit obnoxious. Thanks for feedback. Anything I can help with?","user":"ULNHYTCJC","ts":"1618020233.375100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Gi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry been a bit obnoxious. Thanks for feedback. Anything I can help with?"}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"},{"client_msg_id":"7cdca766-81bc-41aa-8017-3ac48327ddb9","type":"message","text":"I'm glad you are still pushing forward with dataframesmeta ands julia. I think the number one thing to do would be to file issues with new ideas and proposals for syntax to keep track of them. This includes Missings.jl, as well. But I would encourage you to think \"at the margins\" for changes to existing packages you think would help your specific problems.\n\nI'm going to do a deeper dive into a `when` keyword argument for DataFrames soon. I think there will be lots of unexpected corner cases to handle when we pitch the idea to Bogumil. So helping with that proposal and being able to say \"here is what stata does, I think it's good / bad for X reasons...\" on that is helpful.\n\nI wrote a little REPL mode for `@chain` yesterday using ReplMaker.jl. I think it seems promising but is kind of clunky at the moment. It might be somewhat close to a \"declarative\" mode, at least at the REPL. Bogumil seems somewhat on board with a `combine!` (and `hcat!`, `leftjoin!` etc.) so more vocal support for those kinds of proposals would also help get the changes you want merged in.","user":"UBF9YRB6H","ts":"1618081922.376400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SMb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm glad you are still pushing forward with dataframesmeta ands julia. I think the number one thing to do would be to file issues with new ideas and proposals for syntax to keep track of them. This includes Missings.jl, as well. But I would encourage you to think \"at the margins\" for changes to existing packages you think would help your specific problems.\n\nI'm going to do a deeper dive into a "},{"type":"text","text":"when","style":{"code":true}},{"type":"text","text":" keyword argument for DataFrames soon. I think there will be lots of unexpected corner cases to handle when we pitch the idea to Bogumil. So helping with that proposal and being able to say \"here is what stata does, I think it's good / bad for X reasons...\" on that is helpful.\n\nI wrote a little REPL mode for "},{"type":"text","text":"@chain","style":{"code":true}},{"type":"text","text":" yesterday using ReplMaker.jl. I think it seems promising but is kind of clunky at the moment. It might be somewhat close to a \"declarative\" mode, at least at the REPL. Bogumil seems somewhat on board with a "},{"type":"text","text":"combine!","style":{"code":true}},{"type":"text","text":" (and "},{"type":"text","text":"hcat!","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"leftjoin!","style":{"code":true}},{"type":"text","text":" etc.) so more vocal support for those kinds of proposals would also help get the changes you want merged in."}]}]}],"thread_ts":"1617897823.345100","parent_user_id":"ULNHYTCJC"}]