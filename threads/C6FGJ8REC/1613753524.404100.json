[{"client_msg_id":"36fa394f-4e15-4272-a540-f06962bc9501","type":"message","text":"Julia is a gateway drug to machine assembly. A year after starting to work with Julia, I've now got IDA (Interactive Disassembler) open looking through a DLL. After occasionally using `@code_native` , this doesn't seem so hard...","user":"USU9FRPEU","ts":"1613753524.404100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fPE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia is a gateway drug to machine assembly. A year after starting to work with Julia, I've now got IDA (Interactive Disassembler) open looking through a DLL. After occasionally using "},{"type":"text","text":"@code_native","style":{"code":true}},{"type":"text","text":" , this doesn't seem so hard..."}]}]}],"thread_ts":"1613753524.404100","reply_count":9,"reply_users_count":6,"latest_reply":"1613783936.004700","reply_users":["U7HAYKY9X","U8D9768Q6","U8T0YV7QC","U66GD0880","USU9FRPEU","UB7JS9CHF"],"subscribed":false,"reactions":[{"name":"heart","users":["U687RKK0E","U8T0YV7QC","U6CJRSR63","U6QGE7S86","U6CCK2SCV","UAUPJLBQX","U69HXAL7P","U89GY9W1J","UB7JS9CHF"],"count":9},{"name":"100","users":["U7HAYKY9X","UGU761DU2","U01HD5VFXJM","U8D9768Q6","U0179G7FG4F","U6QGE7S86","UB7JS9CHF"],"count":7},{"name":"deep_fortran","users":["UGU761DU2","U9VG1AYSG","U8T0YV7QC","U6QGE7S86","U9V8ZQVEY","U89GY9W1J","UB7JS9CHF"],"count":7},{"name":"joy","users":["U6CCK2SCV","UB7JS9CHF","U9MED583T"],"count":3}]},{"client_msg_id":"c11e3e40-09ba-4129-aa17-ec673edddf9c","type":"message","text":"And to low-level coding in general!","user":"U7HAYKY9X","ts":"1613756241.404500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UUl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And to low-level coding in general!"}]}]}],"thread_ts":"1613753524.404100","parent_user_id":"USU9FRPEU"},{"client_msg_id":"bec7a2ee-9f34-424a-a9fb-4c9a1b32c846","type":"message","text":"I've really come to think of julia as a code generation platform. You could think of any language this way, but I think it's actually a useful way to look at julia in particular because almost everything in julia is about taking and modifying code.\n\nSure we have macros which give us the classical lispy metaprogramming, but looked at in a certain way, muiltiple dispatch is like a form of code injection. It's almost like a restricted form of Cassette.\n\nThen of course, we also have Cassette, IRTools and now the abstract interpreter.\n\nAlmost every step between a plaintext represntation of a program and the generation of assembly code can be intercepted, reflected on, and modified","user":"U8D9768Q6","ts":"1613764291.405400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uaUp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've really come to think of julia as a code generation platform. You could think of any language this way, but I think it's actually a useful way to look at julia in particular because almost everything in julia is about taking and modifying code.\n\nSure we have macros which give us the classical lispy metaprogramming, but looked at in a certain way, muiltiple dispatch is like a form of code injection. It's almost like a restricted form of Cassette.\n\nThen of course, we also have Cassette, IRTools and now the abstract interpreter.\n\nAlmost every step between a plaintext represntation of a program and the generation of assembly code can be intercepted, reflected on, and modified"}]}]}],"thread_ts":"1613753524.404100","parent_user_id":"USU9FRPEU","reactions":[{"name":"100","users":["UAUPJLBQX","UB7JS9CHF"],"count":2},{"name":"lisp","users":["UM8JUNJG7","UB7JS9CHF"],"count":2}]},{"client_msg_id":"bcb9525c-44d9-4dd4-a506-9fbdae990f74","type":"message","text":"Just copy &amp; paste `@code_native` result and make your own binary!","user":"U8T0YV7QC","ts":"1613766022.405900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vpVP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just copy & paste "},{"type":"text","text":"@code_native","style":{"code":true}},{"type":"text","text":" result and make your own binary!"}]}]}],"thread_ts":"1613753524.404100","parent_user_id":"USU9FRPEU"},{"client_msg_id":"a3b38419-d945-441f-9f5b-f675234ca3d6","type":"message","text":"I’m curious; what are you disassembling for?","user":"U66GD0880","ts":"1613773068.408500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WUTe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m curious; what are you disassembling for?"}]}]}],"thread_ts":"1613753524.404100","parent_user_id":"USU9FRPEU"},{"client_msg_id":"368839d5-7358-4645-8322-3e2ae4547c33","type":"message","text":"Hardware OEM has an API targeted at LabView which builds upon a C API. I want to port a LabView program to C or Julia so I can use API calls not exposed to LabView. In order to do that I need to figure out which C API calls the LabView API makes.","user":"USU9FRPEU","ts":"1613776912.409800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IdJwI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hardware OEM has an API targeted at LabView which builds upon a C API. I want to port a LabView program to C or Julia so I can use API calls not exposed to LabView. In order to do that I need to figure out which C API calls the LabView API makes."}]}]}],"thread_ts":"1613753524.404100","parent_user_id":"USU9FRPEU"},{"client_msg_id":"90cbe4b0-b68c-46b7-b052-1e96cf5480b9","type":"message","text":"This is on Windows. ltrace or similar might have worked on Linux. procmon only gave a partial answer.","user":"USU9FRPEU","ts":"1613776993.410000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HCrp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is on Windows. ltrace or similar might have worked on Linux. procmon only gave a partial answer."}]}]}],"thread_ts":"1613753524.404100","parent_user_id":"USU9FRPEU"},{"client_msg_id":"03ebc7e1-2864-404e-be34-c07e51a2eac8","type":"message","text":"I have no idea why the second DLL for LabView exists or why it seems to be purposely obfuscated.","user":"USU9FRPEU","ts":"1613777232.410200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9vCP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have no idea why the second DLL for LabView exists or why it seems to be purposely obfuscated."}]}]}],"thread_ts":"1613753524.404100","parent_user_id":"USU9FRPEU"},{"client_msg_id":"8aecb77d-c8a1-493c-95ad-a65da14c3c84","type":"message","text":"I look forward to when someone decides `Cthulhu.jl` isn’t hungry enough and creates a tool to explore arbitrary machine code in Julia","user":"U66GD0880","ts":"1613780390.000100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ylP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I look forward to when someone decides "},{"type":"text","text":"Cthulhu.jl","style":{"code":true}},{"type":"text","text":" isn’t hungry enough and creates a tool to explore arbitrary machine code in Julia"}]}]}],"thread_ts":"1613753524.404100","parent_user_id":"USU9FRPEU","reactions":[{"name":"fire","users":["U89GY9W1J","UB7JS9CHF"],"count":2},{"name":"octopus","users":["U66GD0880","UB7JS9CHF"],"count":2}]},{"client_msg_id":"1996d6ba-9d60-43ce-a87a-8d2feef60288","type":"message","text":"I get chills every time I read that package name (I read Lovecraft at a very young and impressionable age!)","user":"UB7JS9CHF","ts":"1613783936.004700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L15Fj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I get chills every time I read that package name (I read Lovecraft at a very young and impressionable age!)"}]}]}],"thread_ts":"1613753524.404100","parent_user_id":"USU9FRPEU"}]