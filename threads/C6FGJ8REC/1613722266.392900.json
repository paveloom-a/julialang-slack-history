[{"client_msg_id":"9bad9dfc-6824-4281-95a5-c96255a1c035","type":"message","text":"Appreciation for <@UH1BLK14H>’s work on <https://github.com/JuliaLang/julia/pull/38905> - I just learned about it a few days ago here on Slack, and since then I've found multiple places where this seemingly small compiler optimization will make my code noticably more efficient. For example, I just now struggled with making a `FilterMap` iterator that can gain some efficiency over filter + map by fusing the operations, but it turns out if that PR is merged, the chaining the lazy filter and map from `Iterators` lead to optimal codegen. So I just scrapped that work and wait for the PR to come through. :+1:","user":"U7HAYKY9X","ts":"1613722266.392900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lBOI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Appreciation for "},{"type":"user","user_id":"UH1BLK14H"},{"type":"text","text":"’s work on "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/38905"},{"type":"text","text":" - I just learned about it a few days ago here on Slack, and since then I've found multiple places where this seemingly small compiler optimization will make my code noticably more efficient. For example, I just now struggled with making a "},{"type":"text","text":"FilterMap","style":{"code":true}},{"type":"text","text":" iterator that can gain some efficiency over filter + map by fusing the operations, but it turns out if that PR is merged, the chaining the lazy filter and map from "},{"type":"text","text":"Iterators","style":{"code":true}},{"type":"text","text":" lead to optimal codegen. So I just scrapped that work and wait for the PR to come through. "},{"type":"emoji","name":"+1"}]}]}],"thread_ts":"1613722266.392900","reply_count":1,"reply_users_count":1,"latest_reply":"1613750781.401900","reply_users":["UH1BLK14H"],"subscribed":false,"reactions":[{"name":"100","users":["U6A936746","U66QZ3QF3","UM30MT6RF","U0179G7FG4F","UN97XTLCV","UKG4WF8PJ","U89GY9W1J","UAUPJLBQX","U6795JH6H"],"count":9},{"name":"heart","users":["UH1BLK14H","UKG4WF8PJ","U89GY9W1J","U6795JH6H"],"count":4}]},{"client_msg_id":"4fa9d82b-9aed-44bc-bdcd-3bda2ca9693d","type":"message","text":"Well the changes are not so small that we could skip nanosoldier benchmark.\nThe PR is kinda pending now, since unfortunately the machine is down for some reason..","user":"UH1BLK14H","ts":"1613750781.401900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v84T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well the changes are not so small that we could skip nanosoldier benchmark.\nThe PR is kinda pending now, since unfortunately the machine is down for some reason.."}]}]}],"thread_ts":"1613722266.392900","parent_user_id":"U7HAYKY9X"}]