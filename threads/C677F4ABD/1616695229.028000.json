[{"client_msg_id":"cee3b095-4759-4e4c-8dd3-3dfa6baf0e0b","type":"message","text":"But yes, `axes` is the way to go. There's also `ArrayInterface.indices`, for when you have several arrays that should have the same axes.","user":"UAUPJLBQX","ts":"1616695229.028000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tlk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But yes, "},{"type":"text","text":"axes","style":{"code":true}},{"type":"text","text":" is the way to go. There's also "},{"type":"text","text":"ArrayInterface.indices","style":{"code":true}},{"type":"text","text":", for when you have several arrays that should have the same axes."}]}]}],"thread_ts":"1616695229.028000","reply_count":5,"reply_users_count":2,"latest_reply":"1616729198.054400","reply_users":["UAUPJLBQX","U6N6VQE30"],"is_locked":false,"subscribed":false},{"client_msg_id":"b5d586cb-dff7-4de1-bec7-7e014f891b77","type":"message","text":"```julia&gt; using ArrayInterface: indices\n\njulia&gt; A = rand(2,3); B = rand(3,3);\n\njulia&gt; indices((A,B),2) # axes(A,2) axes(B,2)\nBase.Slice(static(1):3)\n\njulia&gt; indices((A,B),(2,1)) # axes(A,2) axes(B,1)\nBase.Slice(static(1):3)\n\njulia&gt; indices((A,B),1) # axes(A,1) axes(B,1)\nERROR: AssertionError: Unequal Indices: x == 2 != 3 == y```","user":"UAUPJLBQX","ts":"1616695401.030700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Xp","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using ArrayInterface: indices\n\njulia> A = rand(2,3); B = rand(3,3);\n\njulia> indices((A,B),2) # axes(A,2) axes(B,2)\nBase.Slice(static(1):3)\n\njulia> indices((A,B),(2,1)) # axes(A,2) axes(B,1)\nBase.Slice(static(1):3)\n\njulia> indices((A,B),1) # axes(A,1) axes(B,1)\nERROR: AssertionError: Unequal Indices: x == 2 != 3 == y"}]}]}],"thread_ts":"1616695229.028000","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"30ca334a-f1f9-4f8b-a246-ff6618464487","type":"message","text":"To be honest I did not find the gemm example in loopvectorization much more clear after this was added :thinking_face:","user":"U6N6VQE30","ts":"1616712761.053700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eDDe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To be honest I did not find the gemm example in loopvectorization much more clear after this was added "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1616695229.028000","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"d6cc2565-1022-4b8a-8cd6-12e119e361c3","type":"message","text":"Hmm","user":"UAUPJLBQX","ts":"1616722619.054000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gAMa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm"}]}]}],"thread_ts":"1616695229.028000","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"fede67fc-580a-4939-82f0-219350d34dc2","type":"message","text":"Do you get that `indices((A,B),(i,j))` returns the equivalent of either `axes(A,i)` or `axes(B,j)`, and implies they're equal?","user":"UAUPJLBQX","ts":"1616722806.054200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7za2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you get that "},{"type":"text","text":"indices((A,B),(i,j))","style":{"code":true}},{"type":"text","text":" returns the equivalent of either "},{"type":"text","text":"axes(A,i)","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"axes(B,j)","style":{"code":true}},{"type":"text","text":", and implies they're equal?"}]}]}],"thread_ts":"1616695229.028000","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"37c8b798-0212-48c6-bfd9-59164920cffc","type":"message","text":"I always welcome documentation improvements","user":"UAUPJLBQX","ts":"1616729198.054400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0=E+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I always welcome documentation improvements"}]}]}],"thread_ts":"1616695229.028000","parent_user_id":"UAUPJLBQX"}]