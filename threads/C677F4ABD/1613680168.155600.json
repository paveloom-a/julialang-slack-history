[{"client_msg_id":"442bfb2e-42de-4d8d-ab55-0dfdce0a3f40","type":"message","text":"something like\n```struct RankOneMatrix{T} &lt;:AbstractMatrix\nu::UT\nv::VT\nend\n\nBase.size(R::RankOneMatrix) = (length(u), length(v))```","user":"U82RE6STE","ts":"1613680168.155600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uab","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct RankOneMatrix{T} <:AbstractMatrix\nu::UT\nv::VT\nend\n\nBase.size(R::RankOneMatrix) = (length(u), length(v))"}]}]}],"thread_ts":"1613680168.155600","reply_count":37,"reply_users_count":4,"latest_reply":"1613685282.166000","reply_users":["U9MD78Z9N","U82RE6STE","UMDEUKM29","U8D9768Q6"],"subscribed":false},{"type":"message","text":"Does <https://github.com/alan-turing-institute/NearestNeighborModels.jl/blob/ed454469733f13506ce8703fd06c6eff18141650/src/utils.jl#L127> look like what you want","user":"U9MD78Z9N","ts":"1613680524.155700","team":"T68168MUP","thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"e94d2e66-597c-4744-abb7-c942d628e0b1","type":"message","text":"thanks for the pointer! I thought of representing the rank one as an outer product of two vectors","user":"U82RE6STE","ts":"1613680771.155900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b4IB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks for the pointer! I thought of representing the rank one as an outer product of two vectors"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"af6dabb6-16b1-4e5e-8ad5-df299aea0673","type":"message","text":"actually I think the representation from above is a special case of rank one where all columns are identical, instead of being colinear","user":"U82RE6STE","ts":"1613680811.156100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qKb3e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"actually I think the representation from above is a special case of rank one where all columns are identical, instead of being colinear"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"type":"message","text":"Yeah other than that i found nothing else searching GitHub","user":"U9MD78Z9N","ts":"1613680829.156300","team":"T68168MUP","thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"988a695e-8f45-41c4-94be-536bbb49e93d","type":"message","text":"thanks again, this is already useful. For now this is in a private package but I might pull it out at some point","user":"U82RE6STE","ts":"1613681027.156500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fDqdz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks again, this is already useful. For now this is in a private package but I might pull it out at some point"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"type":"message","text":"Ok, please consider releasing it at some time.","user":"U9MD78Z9N","ts":"1613681174.156700","team":"T68168MUP","thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"9962f520-a7fe-4ad4-885b-47a66d5b15cd","type":"message","text":"yes definitely","user":"U82RE6STE","ts":"1613681342.156900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+CcV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes definitely"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"type":"message","text":"I think you can do a lot of fun optimizations for this matrix type.","user":"U9MD78Z9N","ts":"1613681405.157200","team":"T68168MUP","thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"e964a153-2156-4764-8c89-02cfea0d7118","type":"message","text":"yes definitely, right and left multiplication with matrices and vectors, etc","user":"U82RE6STE","ts":"1613681473.157400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NTkp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes definitely, right and left multiplication with matrices and vectors, etc"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE","reactions":[{"name":"correct_answer","users":["UKG4WF8PJ","U9MD78Z9N"],"count":2}]},{"client_msg_id":"03447f14-ca7b-4dbb-a340-24a1dd0c2e9c","type":"message","text":"There's Woodbury matrices which is related","user":"UMDEUKM29","ts":"1613681549.157700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2FIvQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There's Woodbury matrices which is related"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"66585802-a403-44c1-bfa0-018f097d05b2","type":"message","text":"Presumably you just need a zero A matrix?","user":"UMDEUKM29","ts":"1613681578.157900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aW=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Presumably you just need a zero A matrix?"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"0cfc6859-aece-40c5-8ce6-1f38b34575a8","type":"message","text":"yes that would work, it sounds a bit overkill for rank one?","user":"U82RE6STE","ts":"1613681711.158100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FFrVZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes that would work, it sounds a bit overkill for rank one?"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"type":"message","text":"Yes, total overkil","user":"U9MD78Z9N","ts":"1613681728.158300","team":"T68168MUP","thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"a4da594f-d91e-44ad-97a2-90542acca6e9","type":"message","text":"a neat thing would be if an SVD struct was already a matrix-like object","user":"U82RE6STE","ts":"1613681749.158500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j=3XG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a neat thing would be if an SVD struct was already a matrix-like object"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"17910e83-d8d3-4707-acb2-740c56a9d0d0","type":"message","text":"Something you could also do is have a linear operator type that would store a list of matrices and then apply them lazily","user":"UMDEUKM29","ts":"1613681759.158800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h3et","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Something you could also do is have a linear operator type that would store a list of matrices and then apply them lazily"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"type":"message","text":"going from 2n to 5*n^2  + 4n storage","user":"U9MD78Z9N","ts":"1613681830.159000","team":"T68168MUP","thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"121286db-b068-43a6-91b3-cd2b8c8b2019","type":"message","text":"Like struct Op ops end where ops is a tuple of matrices, and if you multiply two objects of type op it just concatenate the ops","user":"UMDEUKM29","ts":"1613681840.159200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uYLZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like struct Op ops end where ops is a tuple of matrices, and if you multiply two objects of type op it just concatenate the ops"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"2f5411de-4669-4e1f-994d-1340da858c3b","type":"message","text":"so in that case storing `(u, v')` as matrices?","user":"U82RE6STE","ts":"1613681842.159400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"etkk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so in that case storing "},{"type":"text","text":"(u, v')","style":{"code":true}},{"type":"text","text":" as matrices?"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"6f671f51-d2eb-43d0-970d-d48c3e54da67","type":"message","text":"Yeah","user":"UMDEUKM29","ts":"1613681859.159600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z9Or","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"77a9552a-dc26-4ed9-8bff-a9b662510944","type":"message","text":"And a svd would be (U, S, V')","user":"UMDEUKM29","ts":"1613681935.159800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2TjM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And a svd would be (U, S, V')"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"1cbf335e-2ae8-4a5e-b2f1-f2e0408270d2","type":"message","text":"I have some code that could be simplified with such an abstraction","user":"UMDEUKM29","ts":"1613682018.160000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PH=Hx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have some code that could be simplified with such an abstraction"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"191fddea-4699-462e-8597-07920a904166","type":"message","text":"Also I think there's a package somewhere for figuring out the optimal order of doing matrix products","user":"UMDEUKM29","ts":"1613682042.160200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q5yZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also I think there's a package somewhere for figuring out the optimal order of doing matrix products"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"2c80d6d8-3b9c-4d76-a4ee-8a4a046b72df","type":"message","text":"the generic form you present could definitely be a part of some linear operator packages","user":"U82RE6STE","ts":"1613682046.160400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V2lUB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the generic form you present could definitely be a part of some linear operator packages"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"15d74231-75d1-4bd6-acf3-60c3705f14ba","type":"message","text":"&gt; figuring out the optimal order of doing matrix products\n\nisn't that a hard problem if you don't assume they are all dense?","user":"U82RE6STE","ts":"1613682090.160600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/3u88","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> figuring out the optimal order of doing matrix products\n\nisn't that a hard problem if you don't assume they are all dense?"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"f43e9c39-ae8e-473a-bdd7-08b3ccb979bd","type":"message","text":"Right, so in that case for the low rank you could also do it with a linear operator package","user":"UMDEUKM29","ts":"1613682126.160800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+GAXq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, so in that case for the low rank you could also do it with a linear operator package"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"be78f79f-49aa-476f-b267-f0c6b653f9c3","type":"message","text":"Yeah it's for dense I think","user":"UMDEUKM29","ts":"1613682134.161000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"drJ+0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah it's for dense I think"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"c877ff4a-d4ae-4120-bacc-91a39ec10372","type":"message","text":"because if you include some sparsity pattern information, this looks like the problem of finding the optimal way to compute a derivative given a bunch of compositions, which is NP-hard I believe, and which boils down to knowing in which order to compose the linear maps","user":"U82RE6STE","ts":"1613682186.161200","team":"T68168MUP","edited":{"user":"U82RE6STE","ts":"1613682379.000000"},"blocks":[{"type":"rich_text","block_id":"RICk1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because if you include some sparsity pattern information, this looks like the problem of finding the optimal way to compute a derivative given a bunch of compositions, which is NP-hard I believe, and which boils down to knowing in which order to compose the linear maps"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"fdf9c8f4-8e01-4670-854a-9bf50976891d","type":"message","text":"So LinearOperators looks pretty awesome, you can probably just do that for your low rank matrices","user":"UMDEUKM29","ts":"1613682634.161500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cRGe0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So LinearOperators looks pretty awesome, you can probably just do that for your low rank matrices"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"type":"message","text":"<@U82RE6STE> Do you have something ot read on this?","user":"U9MD78Z9N","ts":"1613682679.161700","team":"T68168MUP","thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"2384abab-a4d3-4927-8d86-6cf26b9e24a0","type":"message","text":"Ie LinearOperator(u) * LinearOperator(v')","user":"UMDEUKM29","ts":"1613682693.161900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"axf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ie LinearOperator(u) * LinearOperator(v')"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"908d0c91-e051-4e80-a6a7-a318690a20b8","type":"message","text":"I think I'm going to do that for my packages","user":"UMDEUKM29","ts":"1613682710.162100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5N7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I'm going to do that for my packages"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"68183dcb-1aa0-4a9b-acfc-91bfede99433","type":"message","text":"<@U9MD78Z9N> I think this is this problem:\n<https://link.springer.com/article/10.1007/s10107-006-0042-z>","user":"U82RE6STE","ts":"1613682926.162300","team":"T68168MUP","edited":{"user":"U82RE6STE","ts":"1613682970.000000"},"blocks":[{"type":"rich_text","block_id":"V5w","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U9MD78Z9N"},{"type":"text","text":" I think this is this problem:\n"},{"type":"link","url":"https://link.springer.com/article/10.1007/s10107-006-0042-z"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"00fe92ec-b366-45da-8d32-3704a73c09da","type":"message","text":"I think I might have heard it in one of Alan Edelman's recent talks? As in, before-COVID recent","user":"U82RE6STE","ts":"1613683013.162700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eY4+g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I might have heard it in one of Alan Edelman's recent talks? As in, before-COVID recent"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"fa0d9bbf-550d-4599-adc8-70e8de919e32","type":"message","text":"Are there actual performance differences between orderings?","user":"U9MD78Z9N","ts":"1613683358.162900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5i5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there actual performance differences between orderings?"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"8d18800f-f56a-444f-9a32-c361be848471","type":"message","text":"good question, I think it can be arbitrary large with some setup of Jacobian chains?","user":"U82RE6STE","ts":"1613683694.163100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2ms","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"good question, I think it can be arbitrary large with some setup of Jacobian chains?"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"37f28574-1cf4-490c-8d3b-8faa24b82dc6","type":"message","text":"You could also use <https://github.com/MichielStock/Kronecker.jl>","user":"U8D9768Q6","ts":"1613684870.165700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HLJXa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could also use "},{"type":"link","url":"https://github.com/MichielStock/Kronecker.jl"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"},{"client_msg_id":"c78a0ac5-705c-4dc1-aaaf-e04f0629018e","type":"message","text":"that looks a lot more like what I was doing, with something less meta than generic linear operators, thanks!","user":"U82RE6STE","ts":"1613685282.166000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZFK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that looks a lot more like what I was doing, with something less meta than generic linear operators, thanks!"}]}]}],"thread_ts":"1613680168.155600","parent_user_id":"U82RE6STE"}]