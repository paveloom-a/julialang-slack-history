[{"client_msg_id":"f1906b53-28f6-4176-91e1-34aee2751c98","type":"message","text":"The A \\ b operator finds the minimum-norm solution if the matrix is rectangular, but tries to solve the system as-is when A is square - and fails if it is singular. How to always get the min-norm solution, even for square matrix?","user":"UGTUKUHLN","ts":"1614089364.037200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jpe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The A \\ b operator finds the minimum-norm solution if the matrix is rectangular, but tries to solve the system as-is when A is square - and fails if it is singular. How to always get the min-norm solution, even for square matrix?"}]}]}],"thread_ts":"1614089364.037200","reply_count":16,"reply_users_count":4,"latest_reply":"1614093455.040900","reply_users":["U67SCG4HG","UCT7E536E","UGTUKUHLN","UGG8Z375L"],"subscribed":false},{"client_msg_id":"02ba6573-4263-4ffc-bae8-8401f4257c9b","type":"message","text":"You mean you want to use the same dispatch? `qr(A, Val(true)) \\ b`","user":"U67SCG4HG","ts":"1614090091.037400","team":"T68168MUP","edited":{"user":"U67SCG4HG","ts":"1614090120.000000"},"blocks":[{"type":"rich_text","block_id":"pZK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You mean you want to use the same dispatch? "},{"type":"text","text":"qr(A, Val(true)) \\ b","style":{"code":true}}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"25583724-5ef0-4685-b3b4-436c7c3d7468","type":"message","text":"<https://github.com/JuliaLang/julia/blob/3230aef393d23a75d6ad5793ca4ca2f8feb62f65/stdlib/LinearAlgebra/src/generic.jl#L1125-L1142>","user":"U67SCG4HG","ts":"1614090157.037800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0l3o","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/blob/3230aef393d23a75d6ad5793ca4ca2f8feb62f65/stdlib/LinearAlgebra/src/generic.jl#L1125-L1142"}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"5f37fa3a-4d0f-4e52-a9c3-e5d58896f307","type":"message","text":"A min-norm solution is well-defined when you have an over-determined system, i.e., there are multiple solutions and you pick one with minimum norm.\nIf `A` is square and singular, then `A*x = b` may not have any solution, in which case a \"minimum norm solution\" doesn't exactly make sense.\nObviously, if `A` is square and invertible, then `A*x = b` has a unique solution `x = inv(A) * b`.","user":"UCT7E536E","ts":"1614090305.038000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nDd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A min-norm solution is well-defined when you have an over-determined system, i.e., there are multiple solutions and you pick one with minimum norm.\nIf "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" is square and singular, then "},{"type":"text","text":"A*x = b","style":{"code":true}},{"type":"text","text":" may not have any solution, in which case a \"minimum norm solution\" doesn't exactly make sense.\nObviously, if "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" is square and invertible, then "},{"type":"text","text":"A*x = b","style":{"code":true}},{"type":"text","text":" has a unique solution "},{"type":"text","text":"x = inv(A) * b","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"e61029b7-e96c-4d15-bf0a-17007680c673","type":"message","text":"I don't know what the properties of the `QR`-based solution will be. In general you won't have `A*x == b` . (which may or may not be a concern to you)","user":"UCT7E536E","ts":"1614090381.038200","team":"T68168MUP","edited":{"user":"UCT7E536E","ts":"1614090397.000000"},"blocks":[{"type":"rich_text","block_id":"7xOJD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know what the properties of the "},{"type":"text","text":"QR","style":{"code":true}},{"type":"text","text":"-based solution will be. In general you won't have "},{"type":"text","text":"A*x == b","style":{"code":true}},{"type":"text","text":" . (which may or may not be a concern to you)"}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"89048e81-0669-4c9f-b89d-586de8b3b120","type":"message","text":"Yes, I understand that. What I need is a min-norm least-squares solution actually.","user":"UGTUKUHLN","ts":"1614090772.038500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hH4k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, I understand that. What I need is a min-norm least-squares solution actually."}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"103f7b71-baa9-4e8e-ac8b-7e8df11b59ee","type":"message","text":"Looking more into the docs, looks like `pinv(A) * b` should do that, right?","user":"UGTUKUHLN","ts":"1614090815.038700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hO+3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looking more into the docs, looks like "},{"type":"text","text":"pinv(A) * b","style":{"code":true}},{"type":"text","text":" should do that, right?"}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"03f1635c-7cb7-464f-a605-316192e05eb1","type":"message","text":"That sounds about right. Another option is to use an `LQ` factorization of `A`, if I'm not mistaken. You can also use an iterative method, see e.g. <https://juliasmoothoptimizers.github.io/Krylov.jl/dev/>","user":"UCT7E536E","ts":"1614091007.038900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/Xv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That sounds about right. Another option is to use an "},{"type":"text","text":"LQ","style":{"code":true}},{"type":"text","text":" factorization of "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":", if I'm not mistaken. You can also use an iterative method, see e.g. "},{"type":"link","url":"https://juliasmoothoptimizers.github.io/Krylov.jl/dev/"}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"d6fc0b34-53bf-4796-be6e-4d7e3ac7fd62","type":"message","text":"<@UGG8Z375L> would know more than me, but I think Krylov methods like `lslq`, `lsmr` or `lsqr` would fit your use case.","user":"UCT7E536E","ts":"1614091299.039100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KNpgM","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UGG8Z375L"},{"type":"text","text":" would know more than me, but I think Krylov methods like "},{"type":"text","text":"lslq","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"lsmr","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"lsqr","style":{"code":true}},{"type":"text","text":" would fit your use case."}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"5932c9b3-0fd6-4455-8a1d-492f9d97f634","type":"message","text":"If you have a symmetric square system the best solution is `minres_qlp`.","user":"UGG8Z375L","ts":"1614092884.039300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0jCb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you have a symmetric square system the best solution is "},{"type":"text","text":"minres_qlp","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"5e5b648c-c4c5-4e36-b351-59af3c30191a","type":"message","text":"No, I have a general rectangular matrix, that just happens to be square sometimes.","user":"UGTUKUHLN","ts":"1614093063.039500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CGu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, I have a general rectangular matrix, that just happens to be square sometimes."}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"3f261f49-fa63-481b-b1ee-1bc49fe4fd91","type":"message","text":"`lsmr`  and `craigmr` should be the best solutions for general rectangular matrix.","user":"UGG8Z375L","ts":"1614093093.039700","team":"T68168MUP","edited":{"user":"UGG8Z375L","ts":"1614093504.000000"},"blocks":[{"type":"rich_text","block_id":"xm+t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lsmr","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"craigmr","style":{"code":true}},{"type":"text","text":" should be the best solutions for general rectangular matrix."}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"3b8e8d91-3ed4-486f-ba88-93af440ad066","type":"message","text":"And what are drawbacks of `pinv(A) * b`?","user":"UGTUKUHLN","ts":"1614093202.040000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dPh/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And what are drawbacks of "},{"type":"text","text":"pinv(A) * b","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"06126ab8-0438-45d8-b2c8-54116afe9d3c","type":"message","text":"Seems to give correct results in my testing","user":"UGTUKUHLN","ts":"1614093217.040300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d4B=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems to give correct results in my testing"}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"f6a00090-9e95-46c7-8b3b-532595bc4e93","type":"message","text":"`pinv(A)` is not working for sparse matrices.","user":"UGG8Z375L","ts":"1614093273.040500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VdZwJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pinv(A)","style":{"code":true}},{"type":"text","text":" is not working for sparse matrices."}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"5a8580c0-2e84-4ba4-a93a-2e17305e4d17","type":"message","text":"Haven't even thought of sparsity :)","user":"UGTUKUHLN","ts":"1614093315.040700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8+gcb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haven't even thought of sparsity :)"}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"b809b567-55ea-457e-a081-fff80bf4e887","type":"message","text":"Besides, It could be faster to use a Krylov method if you have large linear systems (dense or sparse).\nIf you work with small dense problems `pinv(A)` is fine.","user":"UGG8Z375L","ts":"1614093455.040900","team":"T68168MUP","edited":{"user":"UGG8Z375L","ts":"1614093470.000000"},"blocks":[{"type":"rich_text","block_id":"rbxg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Besides, It could be faster to use a Krylov method if you have large linear systems (dense or sparse).\nIf you work with small dense problems "},{"type":"text","text":"pinv(A)","style":{"code":true}},{"type":"text","text":" is fine."}]}]}],"thread_ts":"1614089364.037200","parent_user_id":"UGTUKUHLN"}]