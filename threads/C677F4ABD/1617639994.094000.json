[{"client_msg_id":"292e31ac-ca42-4f55-9ffd-cf564c4efa3b","type":"message","text":"is there a package for Kronecker products, but aimed at small matrices (e.g., kron of matrices with O(10) dimensions)? Kronecker.jl is great for larger matrices, but seems to have some overhead for small matrices\n\nedit: to clarify, mainly for matvecs of Kronecker products","user":"U011LUQ182G","ts":"1617639994.094000","team":"T68168MUP","edited":{"user":"U011LUQ182G","ts":"1617640137.000000"},"blocks":[{"type":"rich_text","block_id":"PCJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a package for Kronecker products, but aimed at small matrices (e.g., kron of matrices with O(10) dimensions)? Kronecker.jl is great for larger matrices, but seems to have some overhead for small matrices\n\nedit: to clarify, mainly for matvecs of Kronecker products"}]}]}],"thread_ts":"1617639994.094000","reply_count":10,"reply_users_count":5,"latest_reply":"1617642878.096700","reply_users":["UM8JUNJG7","UPUBAM63X","U011LUQ182G","UHDQQ4GN6","UCT7E536E"],"is_locked":false,"subscribed":false},{"client_msg_id":"9f865295-4e06-4e67-953e-cca37c4a4dde","type":"message","text":"isn't there a kron in base?","user":"UM8JUNJG7","ts":"1617640108.094200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=ee","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"isn't there a kron in base?"}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G","reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"5f76a858-a13e-47ab-a35f-4d2068fe8b5b","type":"message","text":"I don't think so, I have some naive code somewhere for kronecker products laying around... Not sure if its any better than Kronecker jl... Iirc it was just reshape, mat mul, reshape.","user":"UPUBAM63X","ts":"1617640121.094400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XH+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think so, I have some naive code somewhere for kronecker products laying around... Not sure if its any better than Kronecker jl... Iirc it was just reshape, mat mul, reshape."}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G"},{"client_msg_id":"cbabceea-b042-465d-b804-310f0bea333e","type":"message","text":"<@UM8JUNJG7> yeah, but it forms the full Kron product matrix. I’m just trying for low-overhead mat-vecs with Kronecker products.\n\n<@UPUBAM63X> yeah, I think I had some too a while back. I’ll dig those out, maybe I can throw a fast package together for this","user":"U011LUQ182G","ts":"1617640209.094800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N7K","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UM8JUNJG7"},{"type":"text","text":" yeah, but it forms the full Kron product matrix. I’m just trying for low-overhead mat-vecs with Kronecker products.\n\n"},{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" yeah, I think I had some too a while back. I’ll dig those out, maybe I can throw a fast package together for this"}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G","reactions":[{"name":"+1","users":["UM8JUNJG7"],"count":1}]},{"client_msg_id":"5b7a481f-c472-484a-a84c-1c0c5c456e86","type":"message","text":"if you did I'd probably use it from time to time because yea I had a similar experience back in the day","user":"UPUBAM63X","ts":"1617640253.095100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C26B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you did I'd probably use it from time to time because yea I had a similar experience back in the day"}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G","reactions":[{"name":"+1","users":["U011LUQ182G"],"count":1}]},{"client_msg_id":"51f32020-5290-4c7a-898e-41ffc78da4db","type":"message","text":"it might be best to just contribute it to kronecker with a size switch or something? maybe not, might get political. `LittleKronecker.jl` hahaha","user":"UPUBAM63X","ts":"1617640284.095400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G49","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it might be best to just contribute it to kronecker with a size switch or something? maybe not, might get political. "},{"type":"text","text":"LittleKronecker.jl","style":{"code":true}},{"type":"text","text":" hahaha"}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G","reactions":[{"name":"+1","users":["U011LUQ182G"],"count":1}]},{"client_msg_id":"ed2d212b-e456-4b90-8acc-31d09b4d8ecd","type":"message","text":"yeah, i’m finding I need it for a bunch of apps too.","user":"U011LUQ182G","ts":"1617640287.095600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/Oo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, i’m finding I need it for a bunch of apps too."}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G"},{"client_msg_id":"8f4a4b0c-a005-4ac1-b3b6-cee7d48b6684","type":"message","text":"Hah yeah, I was thinking of that too. I still think it’ll be nice to have an unregistered standalone that I can fiddle with, and then once it stabilizes try to look at Kronecker.jl","user":"U011LUQ182G","ts":"1617640409.095900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U8F4W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hah yeah, I was thinking of that too. I still think it’ll be nice to have an unregistered standalone that I can fiddle with, and then once it stabilizes try to look at Kronecker.jl"}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G"},{"client_msg_id":"7f04a5c6-9ef4-4084-a870-e2b907a3746d","type":"message","text":"Does passing StaticArrays types to Kroncker.jl; get the necessary speed-up? I think around 10x10 matrices is right at the edge of where StaticArrays is useful.","user":"UHDQQ4GN6","ts":"1617642355.096300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZIgzG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does passing StaticArrays types to Kroncker.jl; get the necessary speed-up? I think around 10x10 matrices is right at the edge of where StaticArrays is useful."}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G"},{"client_msg_id":"3320e412-b5a7-40ad-b23a-aa2ab4774841","type":"message","text":"`LinearOperators.jl` have a `kron` operator. Don't know how fast it is.\n<https://juliasmoothoptimizers.github.io/LinearOperators.jl/latest/>","user":"UCT7E536E","ts":"1617642715.096500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x2=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LinearOperators.jl","style":{"code":true}},{"type":"text","text":" have a "},{"type":"text","text":"kron","style":{"code":true}},{"type":"text","text":" operator. Don't know how fast it is.\n"},{"type":"link","url":"https://juliasmoothoptimizers.github.io/LinearOperators.jl/latest/"}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G"},{"client_msg_id":"840051a6-c914-43f3-a5e9-e7926988c197","type":"message","text":"<@UHDQQ4GN6> good question…looks like the discrepancy actually gets worse. For Kron of two 5x5 matrices:\n```  440.536 ns (6 allocations: 768 bytes) # Kronecker.jl using Matrix\n  151.496 ns (1 allocation: 288 bytes)  # dense matvec using Matrix\n  600.376 ns (14 allocations: 1.19 KiB) # Kronecker.jl using SMatrix\n  33.930 ns (0 allocations: 0 bytes)    # dense matvec using SizedMatrix```\nThe last timing uses a SizedMatrix, which is what `kron` of two SMatrices returns","user":"U011LUQ182G","ts":"1617642878.096700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uA2T","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UHDQQ4GN6"},{"type":"text","text":" good question…looks like the discrepancy actually gets worse. For Kron of two 5x5 matrices:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"  440.536 ns (6 allocations: 768 bytes) # Kronecker.jl using Matrix\n  151.496 ns (1 allocation: 288 bytes)  # dense matvec using Matrix\n  600.376 ns (14 allocations: 1.19 KiB) # Kronecker.jl using SMatrix\n  33.930 ns (0 allocations: 0 bytes)    # dense matvec using SizedMatrix"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The last timing uses a SizedMatrix, which is what "},{"type":"text","text":"kron","style":{"code":true}},{"type":"text","text":" of two SMatrices returns"}]}]}],"thread_ts":"1617639994.094000","parent_user_id":"U011LUQ182G"}]