[{"type":"message","text":"is there any algorithm that exists that takes a matrix with a sparsity pattern something like this and pivots it to cluster more of the non-zero entries near the diagonal?","files":[{"id":"F01MTQH8BU6","created":1613175007,"timestamp":1613175007,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UUMJUCYRK","editable":false,"size":30108,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01MTQH8BU6/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01MTQH8BU6/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01MTQH8BU6-9b47ae4ea5/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01MTQH8BU6-9b47ae4ea5/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01MTQH8BU6-9b47ae4ea5/image_360.png","thumb_360_w":360,"thumb_360_h":360,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01MTQH8BU6-9b47ae4ea5/image_480.png","thumb_480_w":480,"thumb_480_h":480,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01MTQH8BU6-9b47ae4ea5/image_160.png","original_w":577,"original_h":577,"thumb_tiny":"AwAwADC+8m2QLkZIOB61ROoSq5UxANnGCaXU93mRbc55xj8KhLpdRfOQsyjg/wB6ltr0KSJDqEijBjHP+1SjUcryoBHPXrVFkZDhlKn3FNq7Jjsi/wD2m+c+WPzNSLfgyBQB82OT0zWZT4v9cn+8P503ELIu6kQrxkYPXOaoKdrAjqDmtHUSm+Lepxz0rNoQLYu5W9TBwsw6ehqmylWKsMEdqASCCDgirG5bgEyf6wDGelTbk9Blanxf61P94fzprKVJBGCKlQx+amxT1HJPfNVcRa1XO6POO/8ASs+ti5Rmkj43AEk8Vl+RN/zyf/vk0ovoC2I6UEggg4Ip/kTf88n/AO+TU0cUnllTG33W/hPtTbsA0bZ1x0cen+f/ANX0qOMFZ1B6hgD+dKIZgciOQH/dNXdhZkTZg4XLbD9cVLfKB//Z","permalink":"https://julialang.slack.com/files/UUMJUCYRK/F01MTQH8BU6/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01MTQH8BU6-313d10f8e4","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"ycH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there any algorithm that exists that takes a matrix with a sparsity pattern something like this and pivots it to cluster more of the non-zero entries near the diagonal?"}]}]}],"user":"UUMJUCYRK","display_as_bot":false,"ts":"1613175025.125900","thread_ts":"1613175025.125900","reply_count":24,"reply_users_count":4,"latest_reply":"1613185885.136600","reply_users":["U019K6Q9N15","UUMJUCYRK","UB197FRCL","UGG8Z375L"],"subscribed":false},{"client_msg_id":"0a9fe8d2-62f1-41c6-ad2a-76ace5b47132","type":"message","text":"I believe that's the Jordan decomposition. Correct me if I'm wrong.","user":"U019K6Q9N15","ts":"1613175335.126200","team":"T68168MUP","edited":{"user":"U019K6Q9N15","ts":"1613175396.000000"},"blocks":[{"type":"rich_text","block_id":"4LE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe that's the Jordan decomposition. Correct me if I'm wrong."}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK","reactions":[{"name":"eyes","users":["UUMJUCYRK","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"87b083a4-98d7-4e87-9615-f2191cae81e6","type":"message","text":"<https://discourse.julialang.org/t/jordan-form-of-a-matrix/7123/5|Here's> an old reference in discourse","user":"U019K6Q9N15","ts":"1613175432.126500","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Jordan form of a matrix","title_link":"https://discourse.julialang.org/t/jordan-form-of-a-matrix/7123/5","text":"You could try using the NORMFORM package with Reduce.jl, which is a julia pkg I made to interface the Reduce computer algebra system within Julia, the NORMFORM package can be called from it. using Reduce load_package(:normform) If I have some time available, I might also create a built-in feature to interface the Jordan form into a julia function directly, there are still many opportunities for extended that pacakge.","fallback":"JuliaLang: Jordan form of a matrix","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1510968220,"from_url":"https://discourse.julialang.org/t/jordan-form-of-a-matrix/7123/5","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/jordan-form-of-a-matrix/7123/5"}],"blocks":[{"type":"rich_text","block_id":"uRbUl","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://discourse.julialang.org/t/jordan-form-of-a-matrix/7123/5","text":"Here's"},{"type":"text","text":" an old reference in discourse"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"06d1da0c-bfb3-49aa-8454-ebeaeb2532da","type":"message","text":"Thanks for the suggestion, although Im not immediately seeing how that helps. Jordan decomposition writes a matrix `M` as `J == inv(P) * M * P`, but those `P` arent just permutation matrices. What I'm looking for is basically the case where they are just permutations","user":"UUMJUCYRK","ts":"1613176443.126900","team":"T68168MUP","edited":{"user":"UUMJUCYRK","ts":"1613176447.000000"},"blocks":[{"type":"rich_text","block_id":"jNq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for the suggestion, although Im not immediately seeing how that helps. Jordan decomposition writes a matrix "},{"type":"text","text":"M","style":{"code":true}},{"type":"text","text":" as "},{"type":"text","text":"J == inv(P) * M * P","style":{"code":true}},{"type":"text","text":", but those "},{"type":"text","text":"P","style":{"code":true}},{"type":"text","text":" arent just permutation matrices. What I'm looking for is basically the case where they are just permutations"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"68be21f6-8b98-4336-ab0d-0b506ff6158b","type":"message","text":"<http://www.sscm.kg.ac.rs/jsscm/downloads/Vol12No1/Vol12No1_09.pdf> maybe?","user":"UB197FRCL","ts":"1613177450.127200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hjb","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"http://www.sscm.kg.ac.rs/jsscm/downloads/Vol12No1/Vol12No1_09.pdf"},{"type":"text","text":" maybe?"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"ed31e730-3e0f-40a6-9885-545007f9252f","type":"message","text":"(just googled that one)","user":"UB197FRCL","ts":"1613177464.127400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7kx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(just googled that one)"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"type":"message","text":"Thanks, Fig 13 looks promising","files":[{"id":"F01N0KVLATU","created":1613177515,"timestamp":1613177515,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UUMJUCYRK","editable":false,"size":186309,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01N0KVLATU/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01N0KVLATU/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01N0KVLATU-de4204b610/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01N0KVLATU-de4204b610/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01N0KVLATU-de4204b610/image_360.png","thumb_360_w":360,"thumb_360_h":357,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01N0KVLATU-de4204b610/image_480.png","thumb_480_w":480,"thumb_480_h":476,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01N0KVLATU-de4204b610/image_160.png","original_w":674,"original_h":669,"thumb_tiny":"AwAvADDTqG5GUGCRz2qaorj7g+tAFYMehPNAY9yQaTGeDzTQ5Bw1AFy3/wBX+NS1FbDEZx61LQAVFPtKgMwXnvUtQ3QzGB70ARbFIyJV/KhokYcyCoQSp708HPSgCzbrsjIDBuetS1Fb/wCrP1qWgAqK4+4PrUnOegpGXeMEfrQBTIzUfKGrhiUfw/rQIkbjb+tAC2xzH+NS0xE8tcKOOvWnjPcUAf/Z","permalink":"https://julialang.slack.com/files/UUMJUCYRK/F01N0KVLATU/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01N0KVLATU-f372024c48","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"y3zu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, Fig 13 looks promising"}]}]}],"user":"UUMJUCYRK","display_as_bot":false,"ts":"1613177517.127600","thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK","reactions":[{"name":"ninja","users":["UB197FRCL"],"count":1}]},{"type":"message","text":"Their 2 examples:","files":[{"id":"F01N0RVL4N7","created":1613177506,"timestamp":1613177506,"name":"Screen Shot 2021-02-13 at 11.51.42 am.png","title":"Screen Shot 2021-02-13 at 11.51.42 am.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UB197FRCL","editable":false,"size":130456,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01N0RVL4N7/screen_shot_2021-02-13_at_11.51.42_am.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01N0RVL4N7/download/screen_shot_2021-02-13_at_11.51.42_am.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVL4N7-dda03d9c1a/screen_shot_2021-02-13_at_11.51.42_am_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVL4N7-dda03d9c1a/screen_shot_2021-02-13_at_11.51.42_am_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVL4N7-dda03d9c1a/screen_shot_2021-02-13_at_11.51.42_am_360.png","thumb_360_w":360,"thumb_360_h":171,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVL4N7-dda03d9c1a/screen_shot_2021-02-13_at_11.51.42_am_480.png","thumb_480_w":480,"thumb_480_h":228,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVL4N7-dda03d9c1a/screen_shot_2021-02-13_at_11.51.42_am_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVL4N7-dda03d9c1a/screen_shot_2021-02-13_at_11.51.42_am_720.png","thumb_720_w":720,"thumb_720_h":341,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVL4N7-dda03d9c1a/screen_shot_2021-02-13_at_11.51.42_am_800.png","thumb_800_w":800,"thumb_800_h":379,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVL4N7-dda03d9c1a/screen_shot_2021-02-13_at_11.51.42_am_960.png","thumb_960_w":960,"thumb_960_h":455,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVL4N7-dda03d9c1a/screen_shot_2021-02-13_at_11.51.42_am_1024.png","thumb_1024_w":1024,"thumb_1024_h":486,"original_w":1278,"original_h":606,"thumb_tiny":"AwAWADDTqEnBPXqe/SpqjJyeD0PrQAN83GCKbJkPnJ6dBR93BIyD0HpUh5oAarZAy2SakHSoCCpHQd+tSxnKA0AL83tSYP8As06igCMsVOCAaFcscYFJJ98fSiL734UAP2n2/GlAYemKWigD/9k=","permalink":"https://julialang.slack.com/files/UB197FRCL/F01N0RVL4N7/screen_shot_2021-02-13_at_11.51.42_am.png","permalink_public":"https://slack-files.com/T68168MUP-F01N0RVL4N7-c85ac70156","is_starred":false,"has_rich_preview":false},{"id":"F01N0RVQR51","created":1613177513,"timestamp":1613177513,"name":"Screen Shot 2021-02-13 at 11.51.34 am.png","title":"Screen Shot 2021-02-13 at 11.51.34 am.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UB197FRCL","editable":false,"size":291819,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01N0RVQR51/screen_shot_2021-02-13_at_11.51.34_am.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01N0RVQR51/download/screen_shot_2021-02-13_at_11.51.34_am.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVQR51-de86af77b2/screen_shot_2021-02-13_at_11.51.34_am_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVQR51-de86af77b2/screen_shot_2021-02-13_at_11.51.34_am_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVQR51-de86af77b2/screen_shot_2021-02-13_at_11.51.34_am_360.png","thumb_360_w":327,"thumb_360_h":360,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVQR51-de86af77b2/screen_shot_2021-02-13_at_11.51.34_am_480.png","thumb_480_w":436,"thumb_480_h":480,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVQR51-de86af77b2/screen_shot_2021-02-13_at_11.51.34_am_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVQR51-de86af77b2/screen_shot_2021-02-13_at_11.51.34_am_720.png","thumb_720_w":654,"thumb_720_h":720,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVQR51-de86af77b2/screen_shot_2021-02-13_at_11.51.34_am_800.png","thumb_800_w":800,"thumb_800_h":881,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVQR51-de86af77b2/screen_shot_2021-02-13_at_11.51.34_am_960.png","thumb_960_w":872,"thumb_960_h":960,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01N0RVQR51-de86af77b2/screen_shot_2021-02-13_at_11.51.34_am_1024.png","thumb_1024_w":930,"thumb_1024_h":1024,"original_w":1232,"original_h":1356,"thumb_tiny":"AwAwACvTqOTIbIP4VJUcnXigBu4kcUuT6mmn1HWgEMMHrQBOOgooHQUUAFMYZbqKfUUo+bPtQAu056immPJyCAaQNzzTqAJR0FFA6CigApj/AHqdu/2TTSMnODQBGy+lIG9afx70bA3IzQBKOgopoOBjBpc+xoA//9k=","permalink":"https://julialang.slack.com/files/UB197FRCL/F01N0RVQR51/screen_shot_2021-02-13_at_11.51.34_am.png","permalink_public":"https://slack-files.com/T68168MUP-F01N0RVQR51-4b4e46c5f3","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"Dz=JZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Their 2 examples:"}]}]}],"user":"UB197FRCL","ts":"1613177521.128000","thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK","reactions":[{"name":"+1","users":["UUMJUCYRK"],"count":1},{"name":"magic_wand","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"9b2f5154-a7cb-4b87-8e80-57e6f689a274","type":"message","text":"out of curiosity what did you google? I didnt really know what this might be called","user":"UUMJUCYRK","ts":"1613177550.128800","team":"T68168MUP","edited":{"user":"UUMJUCYRK","ts":"1613177554.000000"},"blocks":[{"type":"rich_text","block_id":"7iKKd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"out of curiosity what did you google? I didnt really know what this might be called"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"7e322574-6949-4fe3-b8b8-9c5fb7d31de2","type":"message","text":"\"permutation band reduce matrix\"","user":"UB197FRCL","ts":"1613177590.129100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tTEQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"permutation band reduce matrix\""}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"df11a3c7-4901-49cd-88d0-d0cef92a2da1","type":"message","text":"FWIW — and I may be completely wrong — I _think_ there is some of that type of thing implemented under the hood to figure out the permutation vectors of some factorizations, like sparse `lu`:\n```  lu(A::SparseMatrixCSC; check = true) -&gt; F::UmfpackLU\n\n\n  Compute the LU factorization of a sparse matrix A.\n\n  For sparse A with real or complex element type, the return type of F is UmfpackLU{Tv, Ti}, with Tv = Float64 or ComplexF64 respectively and Ti is an integer type\n  (Int32 or Int64).\n\n  When check = true, an error is thrown if the decomposition fails. When check = false, responsibility for checking the decomposition's validity (via issuccess) lies\n  with the user.\n\n  The individual components of the factorization F can be accessed by indexing:\n\n  Component Description\n  ––––––––– –––––––––––––––––––––––––––––––\n  L         L (lower triangular) part of LU\n  U         U (upper triangular) part of LU\n  p         right permutation Vector\n  q         left permutation Vector\n  Rs        Vector of scaling factors\n  :         (L,U,p,q,Rs) components```","user":"UB197FRCL","ts":"1613177735.129300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jazS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW — and I may be completely wrong — I "},{"type":"text","text":"think","style":{"italic":true}},{"type":"text","text":" there is some of that type of thing implemented under the hood to figure out the permutation vectors of some factorizations, like sparse "},{"type":"text","text":"lu","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"  lu(A::SparseMatrixCSC; check = true) -> F::UmfpackLU\n\n\n  Compute the LU factorization of a sparse matrix A.\n\n  For sparse A with real or complex element type, the return type of F is UmfpackLU{Tv, Ti}, with Tv = Float64 or ComplexF64 respectively and Ti is an integer type\n  (Int32 or Int64).\n\n  When check = true, an error is thrown if the decomposition fails. When check = false, responsibility for checking the decomposition's validity (via issuccess) lies\n  with the user.\n\n  The individual components of the factorization F can be accessed by indexing:\n\n  Component Description\n  ––––––––– –––––––––––––––––––––––––––––––\n  L         L (lower triangular) part of LU\n  U         U (upper triangular) part of LU\n  p         right permutation Vector\n  q         left permutation Vector\n  Rs        Vector of scaling factors\n  :         (L,U,p,q,Rs) components"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"bf944318-5b08-4537-a20f-c401abb18b5a","type":"message","text":"Maybe it's worth checking what they do too (but not sure)","user":"UB197FRCL","ts":"1613177762.129500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NBem","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe it's worth checking what they do too (but not sure)"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"40b86c09-5354-4146-a667-14b451175984","type":"message","text":"Thats a good call, ultimately a part of why I'm doing this is to try and speed up sparse LU on matrices with this pattern, maybe something can be factored out of there or precomputed based on the sparsity pattern. I need to remind myself what the permute in LU does...","user":"UUMJUCYRK","ts":"1613177910.129700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OA4Pi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thats a good call, ultimately a part of why I'm doing this is to try and speed up sparse LU on matrices with this pattern, maybe something can be factored out of there or precomputed based on the sparsity pattern. I need to remind myself what the permute in LU does..."}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"bfa3d2c0-7440-4a4f-9856-61005caad350","type":"message","text":"You can use the Cuthill-McKee or the reverse Cuthill-McKee algorithm. An implementation in Julia is available with the <https://github.com/PetrKryslUCSD/SymRCM.jl|SymRCM.jl> package.","user":"UGG8Z375L","ts":"1613180426.129900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ecjg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can use the Cuthill-McKee or the reverse Cuthill-McKee algorithm. An implementation in Julia is available with the "},{"type":"link","url":"https://github.com/PetrKryslUCSD/SymRCM.jl","text":"SymRCM.jl"},{"type":"text","text":" package."}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK","reactions":[{"name":"dart","users":["UUMJUCYRK","UKG4WF8PJ","U011LUQ182G"],"count":3}]},{"client_msg_id":"8cf65b06-ec98-4362-b013-e693344767cc","type":"message","text":"_There_ it is.. I knew it had to exist and have a name :slightly_smiling_face:","user":"UUMJUCYRK","ts":"1613180517.130200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1wXuG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There","style":{"italic":true}},{"type":"text","text":" it is.. I knew it had to exist and have a name "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"211713ec-c618-4261-9026-515a05c7e3b5","type":"message","text":"AMD and METIS compute ordering permutations that are used for reducing the fill-in of the factors during a decomposion (LL', LU, etc...). Cuthill-McKee and the reverse Cuthill-McKee algorithms are a little bit different and cluster the non-zero entries near the diagonal. It's useful for building block Jacobi preconditioners for example.","user":"UGG8Z375L","ts":"1613180818.130400","team":"T68168MUP","edited":{"user":"UGG8Z375L","ts":"1613185263.000000"},"blocks":[{"type":"rich_text","block_id":"BfJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"AMD and METIS compute ordering permutations that are used for reducing the fill-in of the factors during a decomposion (LL', LU, etc...). Cuthill-McKee and the reverse Cuthill-McKee algorithms are a little bit different and cluster the non-zero entries near the diagonal. It's useful for building block Jacobi preconditioners for example."}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"6588ed35-583b-45a1-b412-435f2e1c3948","type":"message","text":"Do you know if any of these are built into Julia sparse array support? Like is there a way to precompute something based on a know sparsity pattern to speed up subsequent factorizations?","user":"UUMJUCYRK","ts":"1613181152.130900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OHYYh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you know if any of these are built into Julia sparse array support? Like is there a way to precompute something based on a know sparsity pattern to speed up subsequent factorizations?"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"48a286fc-e95d-40bf-a026-53e08f0e597c","type":"message","text":"Just seeing Metis.jl which seems promising","user":"UUMJUCYRK","ts":"1613181249.131100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4OEFM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just seeing Metis.jl which seems promising"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"9ea6e793-a285-43ac-83e6-11c7208d7d41","type":"message","text":"Yes AMD.jl (amd, colamd  or symamd functions) and METIS.jl (Metis.permutation function)","user":"UGG8Z375L","ts":"1613181533.131300","team":"T68168MUP","edited":{"user":"UGG8Z375L","ts":"1613181799.000000"},"blocks":[{"type":"rich_text","block_id":"tQ3GM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes AMD.jl (amd, colamd  or symamd functions) and METIS.jl (Metis.permutation function)"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"b7bdedcc-5376-4f52-8f53-f9df17679acc","type":"message","text":"Sorry to bug you with questions, but do you know if its easy to actually plug these into SparseArrays solvers somehow? If I naively just plug in the original vs. a permuted version of the matrix (via those packages) to `lu(::SparseMatrix)` , theres no speed difference. Maybe this is just too small a problem? I may also not really understand how this is supposed to work.","user":"UUMJUCYRK","ts":"1613181939.131700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=HqF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry to bug you with questions, but do you know if its easy to actually plug these into SparseArrays solvers somehow? If I naively just plug in the original vs. a permuted version of the matrix (via those packages) to "},{"type":"text","text":"lu(::SparseMatrix)","style":{"code":true}},{"type":"text","text":" , theres no speed difference. Maybe this is just too small a problem? I may also not really understand how this is supposed to work."}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"41ac97ce-7d58-435f-89b9-728fa9c6f3f5","type":"message","text":"The sparse `lu` function of Julia already uses METIS / AMD. It calls UmfpackLU of SuiteSparse.","user":"UGG8Z375L","ts":"1613182328.131900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KXmW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The sparse "},{"type":"text","text":"lu","style":{"code":true}},{"type":"text","text":" function of Julia already uses METIS / AMD. It calls UmfpackLU of SuiteSparse."}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"d9085e39-5bd9-4815-a624-dd73d167a3f7","type":"message","text":"If I'm solving a problem with the same sparsity pattern many times, some of this can in theory be precomputed? I did find mentions of `umfpack_di_symbolic` which seems like that maybe, but havent had a chance to look at if its easily usable from Julia","user":"UUMJUCYRK","ts":"1613182423.132100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0x0/=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I'm solving a problem with the same sparsity pattern many times, some of this can in theory be precomputed? I did find mentions of "},{"type":"text","text":"umfpack_di_symbolic","style":{"code":true}},{"type":"text","text":" which seems like that maybe, but havent had a chance to look at if its easily usable from Julia"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"47f557ff-6319-4f52-a1d1-6b26583970df","type":"message","text":"Yes, it should be the  `lu!` function.","user":"UGG8Z375L","ts":"1613182534.132300","team":"T68168MUP","edited":{"user":"UGG8Z375L","ts":"1613182743.000000"},"blocks":[{"type":"rich_text","block_id":"rh2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, it should be the  "},{"type":"text","text":"lu!","style":{"code":true}},{"type":"text","text":" function."}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"9cef3a57-d890-49bc-9cfd-64cb1a228d7d","type":"message","text":"Nice, thanks, this was super helpful!","user":"UUMJUCYRK","ts":"1613183435.132700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9uM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice, thanks, this was super helpful!"}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"921288EC-36B8-45EA-ABA3-A8F5378EB268","type":"message","text":"I recall asking something similar (“reusing the sparsity pattern part”) to Tim Davis (suitesparse guy) when I was using MATLAB and at the time I think he told me it was not a priority of his to factor this part out. But it may be worth asking him precisely what you want directly. He’s certainly very interested in adjacency matrix / graph stuff.","user":"UB197FRCL","ts":"1613185885.136600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WwUq=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I recall asking something similar (“reusing the sparsity pattern part”) to Tim Davis (suitesparse guy) when I was using MATLAB and at the time I think he told me it was not a priority of his to factor this part out. But it may be worth asking him precisely what you want directly. He’s certainly very interested in adjacency matrix / graph stuff."}]}]}],"thread_ts":"1613175025.125900","parent_user_id":"UUMJUCYRK"}]