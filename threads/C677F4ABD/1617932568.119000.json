[{"client_msg_id":"254e6073-2fab-481a-b34c-9b60dbea3dcd","type":"message","text":"This is half linear algebra ignorance, half Julia: is there a simple formula to find the condition number of a rank one outer product of vectors? Ie for some potentially large `v` find the `cond(v * transpose(v))` without making that potentially massive and dense matrix concrete?","user":"U7Z4938R3","ts":"1617932568.119000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V98","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is half linear algebra ignorance, half Julia: is there a simple formula to find the condition number of a rank one outer product of vectors? Ie for some potentially large "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":" find the "},{"type":"text","text":"cond(v * transpose(v))","style":{"code":true}},{"type":"text","text":" without making that potentially massive and dense matrix concrete?"}]}]}],"thread_ts":"1617932568.119000","reply_count":6,"reply_users_count":3,"latest_reply":"1617938618.120700","reply_users":["U01DD7Z0D89","U7Z4938R3","U7LNECWEA"],"is_locked":false,"subscribed":false},{"client_msg_id":"d3b60258-cf2a-4eb9-acd0-cef974e9eb17","type":"message","text":"Isn't the condition number of any rank-deficient matrix infinity? In some sense, the condition number is a measure of how close the matrix is to not being full rank, and a rank one outer product is genuinely not full rank.","user":"U01DD7Z0D89","ts":"1617933434.119100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PTA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Isn't the condition number of any rank-deficient matrix infinity? In some sense, the condition number is a measure of how close the matrix is to not being full rank, and a rank one outer product is genuinely not full rank."}]}]}],"thread_ts":"1617932568.119000","parent_user_id":"U7Z4938R3","reactions":[{"name":"point_up","users":["U011LUQ182G","U7LNECWEA"],"count":2},{"name":"point_up::skin-tone-3","users":["UJ7DVTVQ8"],"count":1}]},{"client_msg_id":"aacb2fb8-ce2a-45c1-8c2a-fdc44f8109ce","type":"message","text":"Hmmm...","user":"U7Z4938R3","ts":"1617933471.119300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MmB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmm..."}]}]}],"thread_ts":"1617932568.119000","parent_user_id":"U7Z4938R3"},{"client_msg_id":"71a444fd-2581-4eb3-9781-c4621b203c41","type":"message","text":"<@UJDHH8CG4>","user":"U7Z4938R3","ts":"1617933524.119500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YXdx9","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UJDHH8CG4"}]}]}],"thread_ts":"1617932568.119000","parent_user_id":"U7Z4938R3"},{"client_msg_id":"68ef7751-434e-4ce4-945a-84cf3664a4d3","type":"message","text":"I don’t know if anything exists offhand, but you could exploit an  SVD algorithm to just iterate over the elements of `v` and compute the condition number as the ratio of the largest to smallest singular values.  I’m not sure how fast it’ll be, but you can avoid making the matrix “concrete”.","user":"U7LNECWEA","ts":"1617938421.120300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Av2c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t know if anything exists offhand, but you could exploit an  SVD algorithm to just iterate over the elements of "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":" and compute the condition number as the ratio of the largest to smallest singular values.  I’m not sure how fast it’ll be, but you can avoid making the matrix “concrete”."}]}]}],"thread_ts":"1617932568.119000","parent_user_id":"U7Z4938R3"},{"client_msg_id":"b2911905-b719-43db-97a2-078c2ea6d6a4","type":"message","text":"You could make a Matrix type that only stores `v`. But if the `cond` passes that to a C or BLAS routine that requires a dense matrix, it’ll become concrete. It’s a twist on how sparse matrices formats are often stored.","user":"U7LNECWEA","ts":"1617938581.120500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uFLy1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could make a Matrix type that only stores "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":". But if the "},{"type":"text","text":"cond","style":{"code":true}},{"type":"text","text":" passes that to a C or BLAS routine that requires a dense matrix, it’ll become concrete. It’s a twist on how sparse matrices formats are often stored."}]}]}],"thread_ts":"1617932568.119000","parent_user_id":"U7Z4938R3"},{"client_msg_id":"53d25fa6-d6e9-4bff-942d-dd485c2a7faa","type":"message","text":"OK,  then you sure have answered the quetsion!  Should have tried a few examples first.  OK.  Looks like the condition number is not the way to diagnose poorly conditioned MLE-style problems from the product of the gradients.","user":"U7Z4938R3","ts":"1617938618.120700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FN77k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK,  then you sure have answered the quetsion!  Should have tried a few examples first.  OK.  Looks like the condition number is not the way to diagnose poorly conditioned MLE-style problems from the product of the gradients."}]}]}],"thread_ts":"1617932568.119000","parent_user_id":"U7Z4938R3"}]