[{"client_msg_id":"e27760fc-8dfe-4139-a125-fdd1b398d088","type":"message","text":"I'm implementing the real matrix square root and logarithm using the Schur decomposition and blocking (i.e. those described in Section 4.3 of <https://www.maths.manchester.ac.uk/~higham/narep/narep89.pdf> and Algorithm 6.1 of <http://eprints.maths.manchester.ac.uk/2015/1/120885991.pdf>, respectively). Is there an appropriate existing package to which I should contribute these?","user":"UHDQQ4GN6","ts":"1614283857.050800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VED2L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm implementing the real matrix square root and logarithm using the Schur decomposition and blocking (i.e. those described in Section 4.3 of "},{"type":"link","url":"https://www.maths.manchester.ac.uk/~higham/narep/narep89.pdf"},{"type":"text","text":" and Algorithm 6.1 of "},{"type":"link","url":"http://eprints.maths.manchester.ac.uk/2015/1/120885991.pdf"},{"type":"text","text":", respectively). Is there an appropriate existing package to which I should contribute these?"}]}]}],"thread_ts":"1614283857.050800","reply_count":6,"reply_users_count":3,"latest_reply":"1614329420.052300","reply_users":["UHDQQ4GN6","UJ7DVTVQ8","U680T6770"],"subscribed":false},{"client_msg_id":"f38ff9c9-2ce7-45d7-add2-8340c4c5c9c8","type":"message","text":"Note that LinearAlgebra implements the complex Schur approach, which promotes to complex even in cases where the square root is real. The above-referenced approaches avoid this and use only real arithmetic.","user":"UHDQQ4GN6","ts":"1614283955.050900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JP0Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Note that LinearAlgebra implements the complex Schur approach, which promotes to complex even in cases where the square root is real. The above-referenced approaches avoid this and use only real arithmetic."}]}]}],"thread_ts":"1614283857.050800","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"a5bdb0a6-c3db-47c6-819a-d85ac1b04264","type":"message","text":"It would be great if it was in LinearAlgebra, but perhaps GenericLinearAlgebra?","user":"UJ7DVTVQ8","ts":"1614284931.051100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ghLC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It would be great if it was in LinearAlgebra, but perhaps GenericLinearAlgebra?"}]}]}],"thread_ts":"1614283857.050800","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"3d3f9cfa-38f6-4428-8869-ca76d27ce02d","type":"message","text":"I could contribute it to LinearAlgebra, but for it to be fast, it would require hand implementing the 2x2 Sylvester equation, so I've been using StaticArrays.","user":"UHDQQ4GN6","ts":"1614286222.051300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tm43","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I could contribute it to LinearAlgebra, but for it to be fast, it would require hand implementing the 2x2 Sylvester equation, so I've been using StaticArrays."}]}]}],"thread_ts":"1614283857.050800","parent_user_id":"UHDQQ4GN6","reactions":[{"name":"+1","users":["UJ7DVTVQ8","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"a66d73f8-dc6c-4063-920e-1192dfa9e186","type":"message","text":"Rough ballpark, a really non-optimized StaticArrays-based solution is ~7x faster than using `LAPACK.trsyl!`","user":"UHDQQ4GN6","ts":"1614287566.051600","team":"T68168MUP","edited":{"user":"UHDQQ4GN6","ts":"1614287592.000000"},"blocks":[{"type":"rich_text","block_id":"Hr1nK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rough ballpark, a really non-optimized StaticArrays-based solution is ~7x faster than using "},{"type":"text","text":"LAPACK.trsyl!","style":{"code":true}}]}]}],"thread_ts":"1614283857.050800","parent_user_id":"UHDQQ4GN6","reactions":[{"name":"sonic","users":["UJ7DVTVQ8","UMQME35EV","U011TRN4QBU"],"count":3}]},{"client_msg_id":"ccb9ff20-c958-4035-a9f7-3159b7de52ce","type":"message","text":"Recently, there has been some discussion about moving all the matrix functions out to a separate package, but I don’t recall where the discussion happened so maybe it was here on Slack and the conversation is gone.\n\nSince we currently have matrix functions in LinearAlgebra, I think it would make sense to contribute your version to that module. Couldn’t you add a version of the 2x2 Sylvester solver that takes the elements as inputs? Then that method could be added as well.","user":"U680T6770","ts":"1614326892.052100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lFc8I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Recently, there has been some discussion about moving all the matrix functions out to a separate package, but I don’t recall where the discussion happened so maybe it was here on Slack and the conversation is gone.\n\nSince we currently have matrix functions in LinearAlgebra, I think it would make sense to contribute your version to that module. Couldn’t you add a version of the 2x2 Sylvester solver that takes the elements as inputs? Then that method could be added as well."}]}]}],"thread_ts":"1614283857.050800","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"bdfbceeb-5a4d-4922-a54a-a795ee7ed7b9","type":"message","text":"&gt; Couldn’t you add a version of the 2x2 Sylvester solver that takes the elements as inputs? Then that method could be added as well.\nI could, and this would be handy to have. I believe it involves implementing either a 2x2 Schur decomposition with solve or a 4x4 LU decomposition with corresponding solve. I have a prototype of the latter, but I need to add pivoting.","user":"UHDQQ4GN6","ts":"1614329420.052300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yen","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Couldn’t you add a version of the 2x2 Sylvester solver that takes the elements as inputs? Then that method could be added as well."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I could, and this would be handy to have. I believe it involves implementing either a 2x2 Schur decomposition with solve or a 4x4 LU decomposition with corresponding solve. I have a prototype of the latter, but I need to add pivoting."}]}]}],"thread_ts":"1614283857.050800","parent_user_id":"UHDQQ4GN6"}]