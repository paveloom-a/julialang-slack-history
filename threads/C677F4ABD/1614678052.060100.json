[{"client_msg_id":"6ef28f67-8a0b-430c-8f77-d5f2a3827b21","type":"message","text":"I have some complex code involving compound types with sparse matrices in them. To make the code a bit more cleaner and readable, I introduced these redefinitions, which allow for Matlab-like behaviour, allowing sparse right-hand sides. (I know memory is not an issue)\n```ldiv!(A::Factorization, B::AbstractSparseMatrix) = ldiv!(A, Matrix(B))\nldiv!(A::Factorization, B::AbstractSparseVector) = ldiv!(A, Vector(B))\nrdiv!(A::AbstractSparseMatrix, B::Factorization) = rdiv!(Matrix(A), B)\nrdiv!(A::AbstractSparseVector, B::Factorization) = rdiv!(Vector(A), B)\nldiv!(A::AbstractMatrix, B::AbstractSparseMatrix) = ldiv!(A, Matrix(B))\nldiv!(A::AbstractMatrix, B::AbstractSparseVector) = ldiv!(A, Vector(B))\nrdiv!(A::AbstractSparseMatrix, B::AbstractMatrix) = rdiv!(Matrix(A), B)\nrdiv!(A::AbstractSparseVector, B::AbstractMatrix) = rdiv!(Vector(A), B)```\nHowever, I get this warning: An imported function has been extended without using module defined typed arguments. Any clues on how to resolve this?","user":"U01L0RJC6FM","ts":"1614678052.060100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sxp8y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have some complex code involving compound types with sparse matrices in them. To make the code a bit more cleaner and readable, I introduced these redefinitions, which allow for Matlab-like behaviour, allowing sparse right-hand sides. (I know memory is not an issue)\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ldiv!(A::Factorization, B::AbstractSparseMatrix) = ldiv!(A, Matrix(B))\nldiv!(A::Factorization, B::AbstractSparseVector) = ldiv!(A, Vector(B))\nrdiv!(A::AbstractSparseMatrix, B::Factorization) = rdiv!(Matrix(A), B)\nrdiv!(A::AbstractSparseVector, B::Factorization) = rdiv!(Vector(A), B)\nldiv!(A::AbstractMatrix, B::AbstractSparseMatrix) = ldiv!(A, Matrix(B))\nldiv!(A::AbstractMatrix, B::AbstractSparseVector) = ldiv!(A, Vector(B))\nrdiv!(A::AbstractSparseMatrix, B::AbstractMatrix) = rdiv!(Matrix(A), B)\nrdiv!(A::AbstractSparseVector, B::AbstractMatrix) = rdiv!(Vector(A), B)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"However, I get this warning: An imported function has been extended without using module defined typed arguments. Any clues on how to resolve this?"}]}]}],"thread_ts":"1614678052.060100","reply_count":1,"reply_users_count":1,"latest_reply":"1614679060.067000","reply_users":["UCZ7VBGUD"],"subscribed":false},{"client_msg_id":"49BAFDB3-3EE5-477F-9366-82818761C58D","type":"message","text":"This warning is because this kind of definition is “type piracy” (<https://docs.julialang.org/en/v1/manual/style-guide/#Avoid-type-piracy|https://docs.julialang.org/en/v1/manual/style-guide/#Avoid-type-piracy>). This particular case is probably not a very dangerous one because it changes code that errors into code that runs (instead of changing code that runs to code that does something else). But it’s generally not good practice to have such code in packages because it changes the behavior for all users and downstream packages. (It can be very convenient and powerful in scripts though, as long as you’re aware of what you’re doing).","user":"UCZ7VBGUD","ts":"1614679060.067000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ez/dX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This warning is because this kind of definition is “type piracy” ("},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/style-guide/#Avoid-type-piracy","text":"https://docs.julialang.org/en/v1/manual/style-guide/#Avoid-type-piracy"},{"type":"text","text":"). This particular case is probably not a very dangerous one because it changes code that errors into code that runs (instead of changing code that runs to code that does something else). But it’s generally not good practice to have such code in packages because it changes the behavior for all users and downstream packages. (It can be very convenient and powerful in scripts though, as long as you’re aware of what you’re doing)."}]}]}],"thread_ts":"1614678052.060100","parent_user_id":"U01L0RJC6FM"}]