[{"client_msg_id":"b94cb020-ecd9-42fb-9a30-824cd0337082","type":"message","text":"you can do it in place if you compute the LU decomp of C and use ldiv! and rdiv!","user":"U6N6VQE30","ts":"1615892700.008400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kTqm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can do it in place if you compute the LU decomp of C and use ldiv! and rdiv!"}]}]}],"thread_ts":"1615892700.008400","reply_count":11,"reply_users_count":5,"latest_reply":"1615983062.003100","reply_users":["U01PLQWQXPV","U6N6VQE30","U6A936746","U6C937ENB","U680T6770"],"subscribed":false},{"client_msg_id":"12dcc866-709b-44c7-9a96-252063194b59","type":"message","text":"But what about the conjugate of the inverse of `C`?","user":"U01PLQWQXPV","ts":"1615894057.008800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"05t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But what about the conjugate of the inverse of "},{"type":"text","text":"C","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"1c8e7bd3-af19-49f9-806d-09b63d941bdc","type":"message","text":"ugh, seems like there are missing methods. I would have expected `rdiv!(ldiv!(F, B), F')` or `ldiv!(F, ldiv!(F, B)')'` to work, but both do not","user":"U6N6VQE30","ts":"1615895041.009000","team":"T68168MUP","edited":{"user":"U6N6VQE30","ts":"1615895054.000000"},"blocks":[{"type":"rich_text","block_id":"Pj4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ugh, seems like there are missing methods. I would have expected "},{"type":"text","text":"rdiv!(ldiv!(F, B), F')","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"ldiv!(F, ldiv!(F, B)')'","style":{"code":true}},{"type":"text","text":" to work, but both do not"}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"3cbf66c8-8618-4dac-9798-a53f52cf3934","type":"message","text":"where `F = lu!(C)` and `B = R`","user":"U6N6VQE30","ts":"1615895090.009300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hwI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where "},{"type":"text","text":"F = lu!(C)","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"B = R","style":{"code":true}}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"cc2698ae-c546-4598-8e42-e72b4f74bb85","type":"message","text":"Even ignoring the complex conjugation, I find that solving the inverse and the 2 matrix multiplications has practically the same performance as the lu + rdiv and ldiv operations.\n\nIt may add a bit more error, but that's not relevant for my use case.\n\nDo you find better benchmarks with the `LU` method?","user":"U01PLQWQXPV","ts":"1615898566.009500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hm8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Even ignoring the complex conjugation, I find that solving the inverse and the 2 matrix multiplications has practically the same performance as the lu + rdiv and ldiv operations.\n\nIt may add a bit more error, but that's not relevant for my use case.\n\nDo you find better benchmarks with the "},{"type":"text","text":"LU","style":{"code":true}},{"type":"text","text":" method?"}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"0689f647-066c-407b-a06b-403cd2ede0f7","type":"message","text":"I have been promised adjoints (i.e. conjugate transposes) of all factorizations will be in julia 1.7\n<https://github.com/JuliaLang/julia/issues/38293>\n\nBut I thought LU already had them, and that it was just QR varients that didn’t","user":"U6A936746","ts":"1615906425.009700","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1615906475.000000"},"blocks":[{"type":"rich_text","block_id":"cBuOe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have been promised adjoints (i.e. conjugate transposes) of all factorizations will be in julia 1.7\n"},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/38293"},{"type":"text","text":"\n\nBut I thought LU already had them, and that it was just QR varients that didn’t"}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"F617E012-6AF4-40CA-9593-75C970604851","type":"message","text":"You could stopgap with one of the ad hoc patches here <https://github.com/mschauer/BridgeLandmarks.jl/blob/master/src/patches.jl|https://github.com/mschauer/BridgeLandmarks.jl/blob/master/src/patches.jl> if I understand correctly ","user":"U6C937ENB","ts":"1615960465.001600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PIJ7i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could stopgap with one of the ad hoc patches here "},{"type":"link","url":"https://github.com/mschauer/BridgeLandmarks.jl/blob/master/src/patches.jl","text":"https://github.com/mschauer/BridgeLandmarks.jl/blob/master/src/patches.jl"},{"type":"text","text":" if I understand correctly "}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"0954ff1a-d28a-4307-9b83-7ffe6dc82ddb","type":"message","text":"<@U6A936746> Was it a really promise or an empty one? There seems to have been no progress on the implementations?","user":"U01PLQWQXPV","ts":"1615974296.001800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F8c1y","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6A936746"},{"type":"text","text":" Was it a really promise or an empty one? There seems to have been no progress on the implementations?"}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"c2c169d0-a582-4764-9ca7-83996bd935de","type":"message","text":"Invenia made a request under our support contract with Julia Computing. And was told yes will get it into 1.7, and <@U680T6770> recently confirmed that was still the plan.\n\n(If you are an industry user, the Julia Computing support contract is a no brainer. Not that the unpaid response on open source is bad. But given we (industry) have money that can support Julia work in this way, it would be good even if we never called upon it.)","user":"U6A936746","ts":"1615974433.002000","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1615974679.000000"},"blocks":[{"type":"rich_text","block_id":"Gd2K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Invenia made a request under our support contract with Julia Computing. And was told yes will get it into 1.7, and "},{"type":"user","user_id":"U680T6770"},{"type":"text","text":" recently confirmed that was still the plan.\n\n(If you are an industry user, the Julia Computing support contract is a no brainer. Not that the unpaid response on open source is bad. But given we (industry) have money that can support Julia work in this way, it would be good even if we never called upon it.)"}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30","reactions":[{"name":"heart","users":["U6C937ENB","UHDQQ4GN6"],"count":2}]},{"client_msg_id":"a1e3bcc4-1902-4601-9856-06684e4b4708","type":"message","text":"Academic user. I was ready to jump into implementing those but good to hear that there's big fish also interested in this","user":"U01PLQWQXPV","ts":"1615974749.002600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=L9g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Academic user. I was ready to jump into implementing those but good to hear that there's big fish also interested in this"}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"c569aeeb-4f6e-49b4-aaba-e3d387182423","type":"message","text":"I doubt anyone (certainly not me) is going to complain if you implement them before <@U680T6770> has time to.\nIt's probably fun for someone with a linear algebra bent.","user":"U6A936746","ts":"1615975106.002800","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1615975142.000000"},"blocks":[{"type":"rich_text","block_id":"w1IZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I doubt anyone (certainly not me) is going to complain if you implement them before "},{"type":"user","user_id":"U680T6770"},{"type":"text","text":" has time to.\nIt's probably fun for someone with a linear algebra bent."}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"278161fb-d575-4856-be06-9cf8bc8e48b1","type":"message","text":"Ha. Not at all. <@U01PLQWQXPV> it would be great if you could take a look and I’ll be happy to review it. So please ping me if you take a stab at this.","user":"U680T6770","ts":"1615983062.003100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PxPI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ha. Not at all. "},{"type":"user","user_id":"U01PLQWQXPV"},{"type":"text","text":" it would be great if you could take a look and I’ll be happy to review it. So please ping me if you take a stab at this."}]}]}],"thread_ts":"1615892700.008400","parent_user_id":"U6N6VQE30"}]