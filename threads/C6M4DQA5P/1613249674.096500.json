[{"client_msg_id":"b07e7149-f2d4-4c74-abca-b57d2dd42859","type":"message","text":"I’m working on an automerge guideline for RegistryCI to check if the package has an OSI-approved license. Sometimes license files contain more than one license, for example in my package there are two MIT licenses, since some of the code is derived from another package: <https://github.com/ericphanson/GuessworkQuantumSideInfo.jl/blob/master/LICENSE>. In the case that we find more than 1 license in the license file, should we require *all* the licenses found are OSI approved, or just that one of them is? or just that the first one is?","user":"UCZ7VBGUD","ts":"1613249674.096500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cXn0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m working on an automerge guideline for RegistryCI to check if the package has an OSI-approved license. Sometimes license files contain more than one license, for example in my package there are two MIT licenses, since some of the code is derived from another package: "},{"type":"link","url":"https://github.com/ericphanson/GuessworkQuantumSideInfo.jl/blob/master/LICENSE"},{"type":"text","text":". In the case that we find more than 1 license in the license file, should we require "},{"type":"text","text":"all","style":{"bold":true}},{"type":"text","text":" the licenses found are OSI approved, or just that one of them is? or just that the first one is?"}]}]}],"thread_ts":"1613249674.096500","reply_count":10,"reply_users_count":2,"latest_reply":"1613254836.099200","reply_users":["UCZ7VBGUD","U6A936746"],"subscribed":false},{"client_msg_id":"dd5f9187-4475-40ff-948d-d54dd8ec9f4b","type":"message","text":"my inclination is the require all are OSI-approved for automerging, since we can always take a look. But I think the license-check should ideally be for new versions, not new packages, since you can re-license between versions. So if there are lots of false-positives, then they require a manual merge every version, and that would be really annoying.","user":"UCZ7VBGUD","ts":"1613249742.096600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Moh0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"my inclination is the require all are OSI-approved for automerging, since we can always take a look. But I think the license-check should ideally be for new versions, not new packages, since you can re-license between versions. So if there are lots of false-positives, then they require a manual merge every version, and that would be really annoying."}]}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"cffe6540-198c-4ece-9f1f-56e098a895f8","type":"message","text":"Can we have the licence field in the Project.toml server as an over-ride/clarifier for if reading LISCENSE.md results in confusion to the system?","user":"U6A936746","ts":"1613249865.096800","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1613249896.000000"},"blocks":[{"type":"rich_text","block_id":"=5ul","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can we have the licence field in the Project.toml server as an over-ride/clarifier for if reading LISCENSE.md results in confusion to the system?"}]}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"a09480de-16db-423b-a6a2-07b68772ee68","type":"message","text":"there’s a license field in Project.toml?","user":"UCZ7VBGUD","ts":"1613250796.097200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WsDoB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there’s a license field in Project.toml?"}]}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"9b27ae47-3e9a-4669-a3c4-e6746b9669c6","type":"message","text":"there isn’t one listed in <https://julialang.github.io/Pkg.jl/dev/toml-files/#Project.toml>, but I think you can add whatever keys you want to the Project and Pkg doesn’t delete them","user":"UCZ7VBGUD","ts":"1613250888.097400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GBO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there isn’t one listed in "},{"type":"link","url":"https://julialang.github.io/Pkg.jl/dev/toml-files/#Project.toml"},{"type":"text","text":", but I think you can add whatever keys you want to the Project and Pkg doesn’t delete them"}]}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"93b5a591-f184-4905-ab4d-aab03e4c0f96","type":"message","text":"I guess that could help solve the annoyance issue though, we could just tell people to use that field if automerge is confused by their license file.\n\nI feel like that could maybe be used sketchily to by-pass the check, like someone could not put a license at all, then put MIT in that field, and then later claim that that field isn’t a legal license and people are violating their copyright? But maybe that’s being too paranoid and we should assume some good faith.","user":"UCZ7VBGUD","ts":"1613251150.097600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CvOf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess that could help solve the annoyance issue though, we could just tell people to use that field if automerge is confused by their license file.\n\nI feel like that could maybe be used sketchily to by-pass the check, like someone could not put a license at all, then put MIT in that field, and then later claim that that field isn’t a legal license and people are violating their copyright? But maybe that’s being too paranoid and we should assume some good faith."}]}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"386d7c51-6549-4eaf-8c2b-219f392f7036","type":"message","text":"It used to be common, and I think the registry used to record it.\nSomething changed.\nIt is still mentioned in the glossary\n<https://julialang.github.io/Pkg.jl/dev/glossary/|https://julialang.github.io/Pkg.jl/dev/glossary/>","user":"U6A936746","ts":"1613252491.097800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"toE3d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It used to be common, and I think the registry used to record it.\nSomething changed.\nIt is still mentioned in the glossary\n"},{"type":"link","url":"https://julialang.github.io/Pkg.jl/dev/glossary/","text":"https://julialang.github.io/Pkg.jl/dev/glossary/"}]}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"397272f1-421a-4d21-92d6-26297fde8cb2","type":"message","text":"&gt; I feel like that could maybe be used sketchily to by-pass the check, like someone could not put a license at all, then put MIT in that field, and then later claim that that field isn't a legal license and people are violating their copyright? But maybe that's being too paranoid and we should assume some good faith.\n\n\nIntellectual property is governed by civil law.\nCivil law actually let's you get away with very little in practice, because the judges are not bound letter of the law and take into account sensibility, and intent.\n\nIf someone registers a package in the public registry and sets the license field it's hard to say they were not intending for people to think that they can use it under that lisence.\n\n(IANAL)","user":"U6A936746","ts":"1613252752.098100","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1613254536.000000"},"blocks":[{"type":"rich_text","block_id":"11jQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> I feel like that could maybe be used sketchily to by-pass the check, like someone could not put a license at all, then put MIT in that field, and then later claim that that field isn't a legal license and people are violating their copyright? But maybe that's being too paranoid and we should assume some good faith.\n\n\nIntellectual property is governed by civil law.\nCivil law actually let's you get away with very little in practice, because the judges are not bound letter of the law and take into account sensibility, and intent.\n\nIf someone registers a package in the public registry and sets the license field it's hard to say they were not intending for people to think that they can use it under that lisence.\n\n(IANAL)"}]}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"325daa6f-551b-4373-b762-95541462005a","type":"message","text":"Ok, good enough for me :slightly_smiling_face:. Two followups:\n1. if they put a license field in the Project, should we do the file-search find-a-license procedure at all? or should we just take what they put in the Project as the final word on it? \n2. if they put a license field in the Project, but call it something other than an SPDX 3.10 identifier for an OSI-approved license, should we flag it for manual review? that list is here btw: <https://github.com/ericphanson/LicenseCheck.jl/blob/main/src/OSI_LICENSES.jl>","user":"UCZ7VBGUD","ts":"1613253104.098400","team":"T68168MUP","edited":{"user":"UCZ7VBGUD","ts":"1613253149.000000"},"blocks":[{"type":"rich_text","block_id":"a1ad7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, good enough for me "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":". Two followups:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if they put a license field in the Project, should we do the file-search find-a-license procedure at all? or should we just take what they put in the Project as the final word on it? "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"if they put a license field in the Project, but call it something other than an SPDX 3.10 identifier for an OSI-approved license, should we flag it for manual review? that list is here btw: "},{"type":"link","url":"https://github.com/ericphanson/LicenseCheck.jl/blob/main/src/OSI_LICENSES.jl"}]}],"style":"ordered","indent":0}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"e22f76c2-e318-4c6f-8f01-e14e60fc133b","type":"message","text":"1.\nI think we can skip it.\nProject.toml is how you tell the registry things after all.\n\n2. Yes.","user":"U6A936746","ts":"1613254562.098900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Eb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1.\nI think we can skip it.\nProject.toml is how you tell the registry things after all.\n\n2. Yes."}]}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"8ba85b9d-061c-48f7-85e4-59c24d0f467b","type":"message","text":"cool, sounds good! I’ll update the PR","user":"UCZ7VBGUD","ts":"1613254836.099200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m/fbJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cool, sounds good! I’ll update the PR"}]}]}],"thread_ts":"1613249674.096500","parent_user_id":"UCZ7VBGUD"}]