[{"client_msg_id":"fafab707-71cd-4c2c-b402-b85d2ebd2414","type":"message","text":"Thought experiment.\nWhat's the worst that could happen if we allowed anyone to use Registror to trigger a release of a package?\nRather than just people with permissions. :thread:","user":"U6A936746","ts":"1609099430.121200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"15ljs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thought experiment.\nWhat's the worst that could happen if we allowed anyone to use Registror to trigger a release of a package?\nRather than just people with permissions. "},{"type":"emoji","name":"thread"}]}]}],"thread_ts":"1609099430.121200","reply_count":25,"reply_users_count":6,"latest_reply":"1609152033.129500","reply_users":["U6A936746","U7THT3TM3","UBVE598BC","U6NFPDBV1","UDB26738Q","U67D54KS8"],"subscribed":false},{"client_msg_id":"ed642a1d-37cb-46c6-9be0-e62607f50580","type":"message","text":"If the version hasn't been incremented since last release but changes have been pushed.\n\nSo triggering a release will just be rejected as that release already has been made","user":"U6A936746","ts":"1609099533.121300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cmYq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If the version hasn't been incremented since last release but changes have been pushed.\n\nSo triggering a release will just be rejected as that release already has been made"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"92454157-977c-47fe-86ba-13e4440fb4cd","type":"message","text":"If the version number has been incremented to and given a `-DEV` prerelease suffix. Like Julia does, and like ColPrac recommends.\nAnd changes have been pushed.\n\nThen release will be rejected since can't register releases with a SemVer prerelease suffix","user":"U6A936746","ts":"1609099655.121500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=9OMH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If the version number has been incremented to and given a "},{"type":"text","text":"-DEV","style":{"code":true}},{"type":"text","text":" prerelease suffix. Like Julia does, and like ColPrac recommends.\nAnd changes have been pushed.\n\nThen release will be rejected since can't register releases with a SemVer prerelease suffix"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"a6e98d33-a25b-42e1-97eb-bbd95e3bccba","type":"message","text":"I thought maybe there could be a problem where some bad actor creates a branch that doesn't get merged to master, and they register that branch.\nBut that would be rejected since that branch would not be on the registered repo, it would be on the bad actor's fork.\nUnless the bad actor had rights to create branches on the main repo.\nBut at that point they would also have rights to use Registror today","user":"U6A936746","ts":"1609099866.121700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ly4o/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought maybe there could be a problem where some bad actor creates a branch that doesn't get merged to master, and they register that branch.\nBut that would be rejected since that branch would not be on the registered repo, it would be on the bad actor's fork.\nUnless the bad actor had rights to create branches on the main repo.\nBut at that point they would also have rights to use Registror today"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"656da0f1-935b-4540-9916-0619110a7c26","type":"message","text":"One case is if you incremented the version number.\nBut did not tag a release yet and did not add a prerelease suffix.\nA bad actor here could register something while you were still in the middle of making a series of changes that you wanted to register all at once.\n\nIdk if anyone does this way of incrementing. Seems bad and confusing.\nBut I guess some people might \n\nThat would be pretty bad.\nEspecially since it would trigger CompatHelper.","user":"U6A936746","ts":"1609100014.121900","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609100106.000000"},"blocks":[{"type":"rich_text","block_id":"1mVM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One case is if you incremented the version number.\nBut did not tag a release yet and did not add a prerelease suffix.\nA bad actor here could register something while you were still in the middle of making a series of changes that you wanted to register all at once.\n\nIdk if anyone does this way of incrementing. Seems bad and confusing.\nBut I guess some people might \n\nThat would be pretty bad.\nEspecially since it would trigger CompatHelper."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"1fa2d15d-73cf-4b0d-ad19-f0b0bb58fab5","type":"message","text":"Another case is if you mistakenly over-increment the version number.\nTrigger release.\nAnd then cancel it before it goes through. Either because Automerge said it was non-sequential.\nOr because you changed your mind.\nThis is particularly bad if it's a major release.\n\n\nThen a bad actor could go later (before that version number is used) and trigger a release on that commit from history.\nAt a time that it is legal\n\n\nI guess we could defend from that with git history checks.\nLike not Automerging commits that are not from the head of the repo.\nProbably reasonable\nCos while people can have legit reasons to do so, they are rare and probably want manually insight anyway","user":"U6A936746","ts":"1609100266.122300","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609100411.000000"},"blocks":[{"type":"rich_text","block_id":"Y6uZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Another case is if you mistakenly over-increment the version number.\nTrigger release.\nAnd then cancel it before it goes through. Either because Automerge said it was non-sequential.\nOr because you changed your mind.\nThis is particularly bad if it's a major release.\n\n\nThen a bad actor could go later (before that version number is used) and trigger a release on that commit from history.\nAt a time that it is legal\n\n\nI guess we could defend from that with git history checks.\nLike not Automerging commits that are not from the head of the repo.\nProbably reasonable\nCos while people can have legit reasons to do so, they are rare and probably want manually insight anyway"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"FAEA2BC1-41A4-4D83-A464-B22B7C972029","type":"message","text":"Plenty of people have master in a non-stable state","user":"U7THT3TM3","ts":"1609104810.123100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TKvu1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Plenty of people have master in a non-stable state"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"D85D1046-B4C2-4560-A559-6641F0B5C1F3","type":"message","text":"It would be chaotic if just anyone could register a new version off of your package's master branch ","user":"U7THT3TM3","ts":"1609104838.124000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9qW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It would be chaotic if just anyone could register a new version off of your package's master branch "}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"38138324-eba9-4a3f-9042-81fecd89478d","type":"message","text":"Yes, but think about it carefully.\nWork through all the paths, and situations.\nThat is the point of the thought experiment.\nWhat happens when they trigger Registror.\nUnder what circumstances does a release actually get made?\n\nThe thought experiment is to understand they system we have.\nBy removing 1 part of it and seeing how it acts.","user":"U6A936746","ts":"1609104939.124200","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609105278.000000"},"blocks":[{"type":"rich_text","block_id":"iVqA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, but think about it carefully.\nWork through all the paths, and situations.\nThat is the point of the thought experiment.\nWhat happens when they trigger Registror.\nUnder what circumstances does a release actually get made?\n\nThe thought experiment is to understand they system we have.\nBy removing 1 part of it and seeing how it acts."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"ceead3e2-c12f-4f1a-bcd2-085f4972ca83","type":"message","text":"Another path.\nThe package has never been registered.\nBut it has a Project.toml with all the fields.\nIncluding version set to `0.1.0`\n(I think this is the default from PkgTemplates).\nThis is a place where you probably will make a series of PRs before registering\nThis one is pretty bad.\n\nHere though we do have the 3 day window.\nAnd we could e.g. automatically ping everyone who has made a commit in that first registration PR.\n\nBut I don't think that is enough, since they could be on holidays etc","user":"U6A936746","ts":"1609105406.124800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hi5m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Another path.\nThe package has never been registered.\nBut it has a Project.toml with all the fields.\nIncluding version set to "},{"type":"text","text":"0.1.0","style":{"code":true}},{"type":"text","text":"\n(I think this is the default from PkgTemplates).\nThis is a place where you probably will make a series of PRs before registering\nThis one is pretty bad.\n\nHere though we do have the 3 day window.\nAnd we could e.g. automatically ping everyone who has made a commit in that first registration PR.\n\nBut I don't think that is enough, since they could be on holidays etc"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"a2092ba9-d84e-42cd-a53d-1317fe1f9da9","type":"message","text":"I think first registration should be much stricter than subsequent versions. There also other inconvenient attack vectors against a package that hasn't been registered yet, such as stealing the name or the uuid and register another repo.","user":"UBVE598BC","ts":"1609105709.125600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ygVTy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think first registration should be much stricter than subsequent versions. There also other inconvenient attack vectors against a package that hasn't been registered yet, such as stealing the name or the uuid and register another repo."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"c006cd60-a158-4ab1-b932-d946d01dd084","type":"message","text":"But generally I don't see that there is that much harm that really can be done with unsolicited registrations.","user":"UBVE598BC","ts":"1609105782.125800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rcdH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But generally I don't see that there is that much harm that really can be done with unsolicited registrations."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"71085797-83f4-4d3e-9369-d13dccd2f9e1","type":"message","text":"Not everyone has the same workflow, allowing this would ruin things for anyone that ever keeps unreleased changes in the main branch. And saying \"don't do that\" is not a valid rebuttal haha.","user":"U6NFPDBV1","ts":"1609109855.126000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bcj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not everyone has the same workflow, allowing this would ruin things for anyone that ever keeps unreleased changes in the main branch. And saying \"don't do that\" is not a valid rebuttal haha."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746","reactions":[{"name":"correct_answer","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"63d5257e-8efd-484c-b71f-434741308382","type":"message","text":"Unreleased changes in the main branch would only be a problem if you have also bumped your version number to a valid release version.","user":"UBVE598BC","ts":"1609112445.126300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sm0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Unreleased changes in the main branch would only be a problem if you have also bumped your version number to a valid release version."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"189b489d-23d9-4e54-aee1-7240e4f99d94","type":"message","text":"&gt; Not everyone has the same workflow, ... And saying \"don't do that\" is not a valid rebuttal haha.\n\n:face_with_rolling_eyes:  Again.\nNot saying that.\nThat's obvious.\nWhat is interesting is exactly what ways exactly what workflows break.\n\nWhole point of this discussion is understand things.\nThis isn't a proposal for a change.\nIt's an exploration of the domain.","user":"U6A936746","ts":"1609113557.126500","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609114378.000000"},"blocks":[{"type":"rich_text","block_id":"Q+jml","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> Not everyone has the same workflow, ... And saying \"don't do that\" is not a valid rebuttal haha.\n\n"},{"type":"emoji","name":"face_with_rolling_eyes"},{"type":"text","text":"  Again.\nNot saying that.\nThat's obvious.\nWhat is interesting is exactly what ways exactly what workflows break.\n\nWhole point of this discussion is understand things.\nThis isn't a proposal for a change.\nIt's an exploration of the domain."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"6ecc91ce-6fd8-41c8-80d5-547a2f5cc27e","type":"message","text":"&gt; I thought maybe there could be a problem where some bad actor creates a branch that doesn't get merged to master, and they register that branch.\n&gt; But that would be rejected since that branch would not be on the registered repo, it would be on the bad actor's fork.\nI don't know how GitHub API handles this, but all branches of all forks are, under the hood, on the upstream repo.  you don't even need to open a pull request","user":"UDB26738Q","ts":"1609120979.127200","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1609120990.000000"},"blocks":[{"type":"rich_text","block_id":"o+6","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I thought maybe there could be a problem where some bad actor creates a branch that doesn't get merged to master, and they register that branch.\nBut that would be rejected since that branch would not be on the registered repo, it would be on the bad actor's fork."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know how GitHub API handles this, but all branches of all forks are, under the hood, on the upstream repo.  you don't even need to open a pull request"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"736be234-96da-478f-b4f1-e98037049e9c","type":"message","text":"Really? I don't recall seeing them when I do `git fetch --all` and I only have the origin.\nGit has a whole conception of multiple remotes?","user":"U6A936746","ts":"1609121604.127500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UOhT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Really? I don't recall seeing them when I do "},{"type":"text","text":"git fetch --all","style":{"code":true}},{"type":"text","text":" and I only have the origin.\nGit has a whole conception of multiple remotes?"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"6ce2623d-8470-42d8-a933-cfd2505a0a7b","type":"message","text":"Basically all forks share the same backend","user":"UDB26738Q","ts":"1609121666.127700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aWgu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Basically all forks share the same backend"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"3c6ef958-618f-4e76-9861-724ef43128d2","type":"message","text":"On any repository webpage you can see any commits in any of the forks. I'd expect github API to be able to tell you that a commit isn't formally in the git repository, they recently started adding a banner on the website to do so","user":"UDB26738Q","ts":"1609121908.127900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xiQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"On any repository webpage you can see any commits in any of the forks. I'd expect github API to be able to tell you that a commit isn't formally in the git repository, they recently started adding a banner on the website to do so"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"0cb21bb8-fb68-4828-a2d1-8f5f7617e56c","type":"message","text":"But it's important to check that, otherwise it's _very_ easy for a bad actor to add a comment on a malicious commit from the upstream repository webpage (maybe in a repo with few people watching it)","user":"UDB26738Q","ts":"1609122019.128100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QlDsx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But it's important to check that, otherwise it's "},{"type":"text","text":"very","style":{"italic":true}},{"type":"text","text":" easy for a bad actor to add a comment on a malicious commit from the upstream repository webpage (maybe in a repo with few people watching it)"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"f7ccd8ea-a0d5-446a-8043-aefcee89ce17","type":"message","text":"For the record, the package with most dependants has a single user watching it :sweat_smile:","user":"UDB26738Q","ts":"1609122086.128300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0D=Jw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For the record, the package with most dependants has a single user watching it "},{"type":"emoji","name":"sweat_smile"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"3f1598de-6922-40f6-905a-5b12d09710e2","type":"message","text":"Didn't mean to sound brash, I am just unsure of what we hope to get out of this experiment :slightly_smiling_face:","user":"U6NFPDBV1","ts":"1609127635.128500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bvZs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Didn't mean to sound brash, I am just unsure of what we hope to get out of this experiment "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746","reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"59355869-9ed8-4d31-b889-26efa1bfdd7a","type":"message","text":"One possible gain is that JuliaHub wouldn't have to require write permissions to repositories. For my part I'm exploring the possibility of supporting registration of General packages from LocalRegistry (that's technically already possible today of course, but the workflow is far from smooth). Another possibility that I think should be explored is having a github action that automatically registers a new version if CI is green and the version number in `Project.toml` has been  bumped.","user":"UBVE598BC","ts":"1609144305.128800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EfoIV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One possible gain is that JuliaHub wouldn't have to require write permissions to repositories. For my part I'm exploring the possibility of supporting registration of General packages from LocalRegistry (that's technically already possible today of course, but the workflow is far from smooth). Another possibility that I think should be explored is having a github action that automatically registers a new version if CI is green and the version number in "},{"type":"text","text":"Project.toml","style":{"code":true}},{"type":"text","text":" has been  bumped."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"0262d50d-c88b-43ca-b61a-0f3098ea8a6e","type":"message","text":"The latter is not a question of who should be able to trigger Registrator and JuliaHub though, but under what conditions AutoMerge can be allowed. A first step could be to allow PRs from the owner of the package repository, provided they perfectly match the updates that RegistryTools computes for a given new version number and tree hash, as discussed in the preceding thread.","user":"UBVE598BC","ts":"1609144849.129000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E31","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The latter is not a question of who should be able to trigger Registrator and JuliaHub though, but under what conditions AutoMerge can be allowed. A first step could be to allow PRs from the owner of the package repository, provided they perfectly match the updates that RegistryTools computes for a given new version number and tree hash, as discussed in the preceding thread."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"c5d33c4b-04bc-4251-b73d-aca768cfad42","type":"message","text":"&gt; What is interesting is exactly what ways exactly what workflows break.\nIt breaks my desire to not have random people be able to tag new releases of my package? Like, this seems kinda obvious, or?","user":"U67D54KS8","ts":"1609146436.129200","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1609146440.000000"},"blocks":[{"type":"rich_text","block_id":"Do8ss","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"What is interesting is exactly what ways exactly what workflows break."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It breaks my desire to not have random people be able to tag new releases of my package? Like, this seems kinda obvious, or?"}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"},{"client_msg_id":"9483591f-ebb1-4556-9b3b-b8c2ac67c1f9","type":"message","text":"&gt; Didn't mean to sound brash, I am just unsure of what we hope to get out of this experiment :slightly_smiling_face:\n\nSorry, I was grouchy.\nIt's a reasonable question.\n\nHope to gain an understanding of the context\nThat might provide insight into how things might change for Julia 2.0.\n(What if some set of things (not just this) were different and it was better in some way)\nOr might reveal other issues with what we do.\nPerhaps ways we might have \"security in depth\".\nIt's unknown unknowns\n\nI don't know what we would get until we try it.\nOne thing I have learned so far is that disallowing registering a release with the same version number actually prevents a lot of problems.\n(So it another reason that it's good we don't let people reregister to correct mistakes.)\n\nFor example a similar thought experiment:\nQ: What  if we used a file kept in the repo listing GitHub usernames allowed to merge?\nA: this would run into issues, because GitHub usernames are not forever. You can claim an abandoned one from GitHub support. This would open up a vulnerablity if that list gets out of date and someone leaves the community, and someone claims there name. A pretty small one though.\n\nAnother experiment:\nQ: what if we only used public GitHub org membership to determine if can tag.\nA: this is fine for orgs with tight membership, since all people have connection to all repos.\nBut for really big orgs that are just kind of just a collection of packages without much community, this is similar to allowing randoms, especially ones that have non-julia packages (e.g. dmlc has 75 public members). Still most people are not bad actors especially when it is linked to their actual identity like a GitHub account that is well enough established to join an org.","user":"U6A936746","ts":"1609152033.129500","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609153186.000000"},"blocks":[{"type":"rich_text","block_id":"xg=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> Didn't mean to sound brash, I am just unsure of what we hope to get out of this experiment "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\n\nSorry, I was grouchy.\nIt's a reasonable question.\n\nHope to gain an understanding of the context\nThat might provide insight into how things might change for Julia 2.0.\n(What if some set of things (not just this) were different and it was better in some way)\nOr might reveal other issues with what we do.\nPerhaps ways we might have \"security in depth\".\nIt's unknown unknowns\n\nI don't know what we would get until we try it.\nOne thing I have learned so far is that disallowing registering a release with the same version number actually prevents a lot of problems.\n(So it another reason that it's good we don't let people reregister to correct mistakes.)\n\nFor example a similar thought experiment:\nQ: What  if we used a file kept in the repo listing GitHub usernames allowed to merge?\nA: this would run into issues, because GitHub usernames are not forever. You can claim an abandoned one from GitHub support. This would open up a vulnerablity if that list gets out of date and someone leaves the community, and someone claims there name. A pretty small one though.\n\nAnother experiment:\nQ: what if we only used public GitHub org membership to determine if can tag.\nA: this is fine for orgs with tight membership, since all people have connection to all repos.\nBut for really big orgs that are just kind of just a collection of packages without much community, this is similar to allowing randoms, especially ones that have non-julia packages (e.g. dmlc has 75 public members). Still most people are not bad actors especially when it is linked to their actual identity like a GitHub account that is well enough established to join an org."}]}]}],"thread_ts":"1609099430.121200","parent_user_id":"U6A936746"}]