[{"client_msg_id":"79dd73e6-f8d9-4612-9e41-20ebb9db11f0","type":"message","text":"I wrote up an announcement for the license check; we’ve already turned it on, but maybe it’ll still help others who haven’t registered new versions yet. Text in the thread, in case anyone has comments/suggestions; otherwise I’ll post it in a few hours.","user":"UCZ7VBGUD","ts":"1615548401.175500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rmY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wrote up an announcement for the license check; we’ve already turned it on, but maybe it’ll still help others who haven’t registered new versions yet. Text in the thread, in case anyone has comments/suggestions; otherwise I’ll post it in a few hours."}]}]}],"thread_ts":"1615548401.175500","reply_count":6,"reply_users_count":2,"latest_reply":"1615551874.177500","reply_users":["UCZ7VBGUD","U7THT3TM3"],"subscribed":false,"reactions":[{"name":"+1","users":["U7THT3TM3","U85R3JJ8L","U679VPJ8L"],"count":3}]},{"client_msg_id":"0f8057aa-fa1e-4cd4-b33f-3eab5817caff","type":"message","text":"Title: “FYI: the General registry now checks for an OSI-approved software license when registering new packages and new versions”\n\nText:\n\nSome of you may have noticed this in the last few days since we turned the check on in &lt;<https://github.com/JuliaRegistries/General/pull/31535>&gt;. This announcement is to just make sure everyone knows and is not caught at a bad time when trying to make a quick patch release.\n\n## What’s the General registry?\n\nIt’s a registry of packages that is automatically included with Julia, and is what is used to look up packages for `Pkg.add(...)` or `] add ...`. By adding your package to General, you let anyone easily use it or use it as a dependency in their packages. It’s located on GitHub here: &lt;<https://github.com/JuliaRegistries/General>&gt;.\n\nPackages and new versions of packages are proposed by automatically-generated pull requests, using [Registrator.jl](<https://github.com/JuliaRegistries/Registrator.jl>) or [<http://JuliaHub.com|JuliaHub.com>](<https://juliahub.com/ui/Registrator>). Merging those pull requests adds the package or new version of the package to the registry.\n\n## What is a software license?\n\nWhen you write a piece of code, you own the rights to it, particularly the copyright. Other people don’t automatically have the right to download or use your code; you need to give them a license to do so. A software license is a piece of text saying who can use your code for what purposes, usually written in a file called LICENSE or LICENSE.md.\n\n## What does the check do?\n\nIf you try to register a new package or new version of a package that doesn’t have an “OSI-approved license”, the pull request associated with the registration won’t be automatically merged into General.\n\nAutoMerge is a piece of tooling in [RegistryCI](<https://github.com/JuliaRegistries/RegistryCI.jl>) that performs some automatic checks of various guidelines (which are all listed here: &lt;<https://github.com/JuliaRegistries/General#automatic-merging-of-pull-requests>&gt;), and if all the guidelines are met, it merges the pull request. AutoMerge was added in the fall of 2019 to replace manual review of every pull request.\n\n## What is an OSI-approved license?\n\nThe Open Source Initiative curates a list of licenses which fit its definition of “open source”; in short, they are licenses which provide rights that allow the software to be “freely used, modified, and shared” (see &lt;<https://opensource.org/licenses>&gt; for more and a list of approved licenses, which includes many common ones like MIT, GPLv3, etc.).\n\nThe General registry is maintained by volunteers (like me) and we don’t have a legal team to look at all sorts of license variants and see which ones give the appropriate rights for packages to be used freely in General. Therefore we stick to only allowing OSI-approved licenses.\n\n## Do I need a OSI-approved license?\n\nYes. From the README of General:\n\n&gt; Registered packages must have an [Open Source Initiative approved license](<https://opensource.org/licenses>), clearly marked via a `LICENSE.md`, `LICENSE`, `COPYING` or similarly named file in the package repository. Packages that wrap proprietary libraries are acceptable if the licenses of those libraries permit open source distribution of the Julia wrapper code.\n\nThis rule is not new, and in fact it [goes back to the days of METADATA.jl](<https://github.com/JuliaLang/METADATA.jl/pull/3788>), the precursor to General. The new piece being announced here is the automatic check to try to verify that this policy is being upheld.\n\nHowever, while you need to comply with this policy, it’s not essential that the AutoMerge check passes; if the AutoMerge check fails but you do have a valid OSI-approved license, please explain the situation and ask for a manual merge in the pull request or in the <#C6M4DQA5P|pkg-registration> channel on Slack.","user":"UCZ7VBGUD","ts":"1615548432.175600","team":"T68168MUP","edited":{"user":"UCZ7VBGUD","ts":"1615551612.000000"},"blocks":[{"type":"rich_text","block_id":"5n8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Title: “FYI: the General registry now checks for an OSI-approved software license when registering new packages and new versions”\n\nText:\n\nSome of you may have noticed this in the last few days since we turned the check on in <"},{"type":"link","url":"https://github.com/JuliaRegistries/General/pull/31535"},{"type":"text","text":">. This announcement is to just make sure everyone knows and is not caught at a bad time when trying to make a quick patch release.\n\n## What’s the General registry?\n\nIt’s a registry of packages that is automatically included with Julia, and is what is used to look up packages for `Pkg.add(...)` or `] add ...`. By adding your package to General, you let anyone easily use it or use it as a dependency in their packages. It’s located on GitHub here: <"},{"type":"link","url":"https://github.com/JuliaRegistries/General"},{"type":"text","text":">.\n\nPackages and new versions of packages are proposed by automatically-generated pull requests, using [Registrator.jl]("},{"type":"link","url":"https://github.com/JuliaRegistries/Registrator.jl"},{"type":"text","text":") or ["},{"type":"link","url":"http://JuliaHub.com","text":"JuliaHub.com"},{"type":"text","text":"]("},{"type":"link","url":"https://juliahub.com/ui/Registrator"},{"type":"text","text":"). Merging those pull requests adds the package or new version of the package to the registry.\n\n## What is a software license?\n\nWhen you write a piece of code, you own the rights to it, particularly the copyright. Other people don’t automatically have the right to download or use your code; you need to give them a license to do so. A software license is a piece of text saying who can use your code for what purposes, usually written in a file called LICENSE or LICENSE.md.\n\n## What does the check do?\n\nIf you try to register a new package or new version of a package that doesn’t have an “OSI-approved license”, the pull request associated with the registration won’t be automatically merged into General.\n\nAutoMerge is a piece of tooling in [RegistryCI]("},{"type":"link","url":"https://github.com/JuliaRegistries/RegistryCI.jl"},{"type":"text","text":") that performs some automatic checks of various guidelines (which are all listed here: <"},{"type":"link","url":"https://github.com/JuliaRegistries/General#automatic-merging-of-pull-requests"},{"type":"text","text":">), and if all the guidelines are met, it merges the pull request. AutoMerge was added in the fall of 2019 to replace manual review of every pull request.\n\n## What is an OSI-approved license?\n\nThe Open Source Initiative curates a list of licenses which fit its definition of “open source”; in short, they are licenses which provide rights that allow the software to be “freely used, modified, and shared” (see <"},{"type":"link","url":"https://opensource.org/licenses"},{"type":"text","text":"> for more and a list of approved licenses, which includes many common ones like MIT, GPLv3, etc.).\n\nThe General registry is maintained by volunteers (like me) and we don’t have a legal team to look at all sorts of license variants and see which ones give the appropriate rights for packages to be used freely in General. Therefore we stick to only allowing OSI-approved licenses.\n\n## Do I need a OSI-approved license?\n\nYes. From the README of General:\n\n> Registered packages must have an [Open Source Initiative approved license]("},{"type":"link","url":"https://opensource.org/licenses"},{"type":"text","text":"), clearly marked via a `LICENSE.md`, `LICENSE`, `COPYING` or similarly named file in the package repository. Packages that wrap proprietary libraries are acceptable if the licenses of those libraries permit open source distribution of the Julia wrapper code.\n\nThis rule is not new, and in fact it [goes back to the days of METADATA.jl]("},{"type":"link","url":"https://github.com/JuliaLang/METADATA.jl/pull/3788"},{"type":"text","text":"), the precursor to General. The new piece being announced here is the automatic check to try to verify that this policy is being upheld.\n\nHowever, while you need to comply with this policy, it’s not essential that the AutoMerge check passes; if the AutoMerge check fails but you do have a valid OSI-approved license, please explain the situation and ask for a manual merge in the pull request or in the "},{"type":"channel","channel_id":"C6M4DQA5P"},{"type":"text","text":" channel on Slack."}]}]}],"thread_ts":"1615548401.175500","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["U7THT3TM3","U679VPJ8L"],"count":2}]},{"client_msg_id":"f24694ec-bdc0-4e02-b71f-383645db92f7","type":"message","text":"LGTM","user":"U7THT3TM3","ts":"1615551391.176400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QUlQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LGTM"}]}]}],"thread_ts":"1615548401.175500","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"916c43a4-7290-403c-b5ce-c45aaeb12680","type":"message","text":"You might also add that, even though we only now added an AutoMerge rule for it, we have always required that all packages in General have an OSI-approved license. You could also link to the old METADATA.jl README to show that we have had the rule since the METADATA days.","user":"U7THT3TM3","ts":"1615551447.176600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PiUi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might also add that, even though we only now added an AutoMerge rule for it, we have always required that all packages in General have an OSI-approved license. You could also link to the old METADATA.jl README to show that we have had the rule since the METADATA days."}]}]}],"thread_ts":"1615548401.175500","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"b8871925-57df-4bfa-a1ad-207ea92a176d","type":"message","text":"sounds good, I added a paragraph to address that (the 2nd to last one now)","user":"UCZ7VBGUD","ts":"1615551641.177000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"acH58","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sounds good, I added a paragraph to address that (the 2nd to last one now)"}]}]}],"thread_ts":"1615548401.175500","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"34779082-a07d-4a2a-be23-378bb1eb6bba","type":"message","text":"I wonder how many people ever saw the METADATA README aha. I assume in the early days of pre-1k packages it was doable, but I don’t think I ever saw it. Anyway, I linked to the PR that added the language instead, since it nicely gives the history","user":"UCZ7VBGUD","ts":"1615551789.177200","team":"T68168MUP","edited":{"user":"UCZ7VBGUD","ts":"1615551826.000000"},"blocks":[{"type":"rich_text","block_id":"3GZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder how many people ever saw the METADATA README aha. I assume in the early days of pre-1k packages it was doable, but I don’t think I ever saw it. Anyway, I linked to the PR that added the language instead, since it nicely gives the history"}]}]}],"thread_ts":"1615548401.175500","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"fb602e01-b494-4bb3-91dc-d6e82dc1cb6e","type":"message","text":"ah actually it is visible if you scroll far enough, nevermind!","user":"UCZ7VBGUD","ts":"1615551874.177500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gW1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah actually it is visible if you scroll far enough, nevermind!"}]}]}],"thread_ts":"1615548401.175500","parent_user_id":"UCZ7VBGUD"}]