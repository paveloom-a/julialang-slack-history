[{"client_msg_id":"f9376189-45d5-4a93-a53b-60dac64bf876","type":"message","text":"Is this the best place to discuss the RegistryCI implementation? I'm trying to read the code and will post some reflections as thread comments.","user":"UBVE598BC","ts":"1609238196.142800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/+=mw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this the best place to discuss the RegistryCI implementation? I'm trying to read the code and will post some reflections as thread comments."}]}]}],"thread_ts":"1609238196.142800","reply_count":6,"reply_users_count":2,"latest_reply":"1609249848.143900","reply_users":["UBVE598BC","UCZ7VBGUD"],"subscribed":false},{"client_msg_id":"b0080866-32bd-470a-983f-56e8eed89d34","type":"message","text":"`src/utils.jl`: Does `with_temp_dir` do anything different from `mktempdir` in Julia 1.3 and later? (Julia 1.3 is minimum version for RegistryCI today.)","user":"UBVE598BC","ts":"1609238400.142900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TCFmd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"src/utils.jl","style":{"code":true}},{"type":"text","text":": Does "},{"type":"text","text":"with_temp_dir","style":{"code":true}},{"type":"text","text":" do anything different from "},{"type":"text","text":"mktempdir","style":{"code":true}},{"type":"text","text":" in Julia 1.3 and later? (Julia 1.3 is minimum version for RegistryCI today.)"}]}]}],"thread_ts":"1609238196.142800","parent_user_id":"UBVE598BC"},{"client_msg_id":"9b57dce5-43e0-4b78-a966-94d856a8a394","type":"message","text":"`src/AutoMerge/cron.jl`: `cron_or_api_build(pr, registry)` is crazy. Has anyone been able to review that seven levels of `if/else` nesting comes out right? More constructively, would a PR that reverses the logic and immediately returns after a failed check be welcome?","user":"UBVE598BC","ts":"1609238722.143100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/nZj0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"src/AutoMerge/cron.jl","style":{"code":true}},{"type":"text","text":": "},{"type":"text","text":"cron_or_api_build(pr, registry)","style":{"code":true}},{"type":"text","text":" is crazy. Has anyone been able to review that seven levels of "},{"type":"text","text":"if/else","style":{"code":true}},{"type":"text","text":" nesting comes out right? More constructively, would a PR that reverses the logic and immediately returns after a failed check be welcome?"}]}]}],"thread_ts":"1609238196.142800","parent_user_id":"UBVE598BC"},{"client_msg_id":"3bc0721b-4764-4369-9222-cc4fe12a19ca","type":"message","text":"In multiple places the `UppercaseInitial/PackageName` naming convention is hardcoded. This\n• goes against the DRY principle\n• should at least in some places instead use the path recorded in `Registry.toml`\n• will fall flat if <https://github.com/JuliaRegistries/RegistryTools.jl/pull/38> is merged and put to use.","user":"UBVE598BC","ts":"1609239371.143300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dvTm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In multiple places the "},{"type":"text","text":"UppercaseInitial/PackageName","style":{"code":true}},{"type":"text","text":" naming convention is hardcoded. This\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"goes against the DRY principle"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"should at least in some places instead use the path recorded in "},{"type":"text","text":"Registry.toml","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"will fall flat if "},{"type":"link","url":"https://github.com/JuliaRegistries/RegistryTools.jl/pull/38"},{"type":"text","text":" is merged and put to use."}]}],"style":"bullet","indent":0}]}],"thread_ts":"1609238196.142800","parent_user_id":"UBVE598BC"},{"client_msg_id":"5ecc7891-ba6e-444d-9c05-c22536c11c7b","type":"message","text":"Is there some styleguide thing that prefers `Vector{T}(undef, 0)` over `T[]`?","user":"UBVE598BC","ts":"1609243199.143500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WU1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there some styleguide thing that prefers "},{"type":"text","text":"Vector{T}(undef, 0)","style":{"code":true}},{"type":"text","text":" over "},{"type":"text","text":"T[]","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1609238196.142800","parent_user_id":"UBVE598BC"},{"client_msg_id":"b243736e-ea10-4241-8fba-c3ba5faa8928","type":"message","text":"I'm not 100% familiar with the codebase but I'll try to answer what I can:\n&gt; Is this the best place to discuss the RegistryCI implementation?\nAn issue might be a good place to persist these notes.\n&gt; Does `with_temp_dir` do anything different from `mktempdir` in Julia 1.3 and later?\nlooking at the code I think the difference is that it also `cd`s to the temp folder, but I'm not sure if this is relied on or not.\n&gt; `src/AutoMerge/cron.jl`: `cron_or_api_build(pr, registry)` is crazy. Has anyone been able to review that seven levels of `if/else` nesting comes out right?\nI have not. I've also found the flow of code kind of hard to follow and extend, e.g. the numeric steps in `src/AutoMerge/new-package.jl` need to be renumbered if you add a step in the middle. I wonder if there's a way to write it more explicitly/modularly as a state machine?\n&gt;  More constructively, would a PR that reverses the logic and immediately returns after a failed check be welcome?\nas sort of a form of mutation-testing? Sure, I think that would be appreciated (as long as it's clear what it's for and that it's not, e.g. a suggestion to make the logic backwards).\n&gt;  In multiple places the `UppercaseInitial/PackageName` naming convention is hardcoded\nseems like a good issue!\n&gt; Is there some styleguide thing that prefers `Vector{T}(undef, 0)` over `T[]`?\nNot that I know of\n\nThanks for taking a look! More eyes the better imo, since RegistryCI is kind of a crucial bit of infrastructure. I think you'll find \"lack of time to change things\" is the reason many things are the way they currently are :slightly_smiling_face:.","user":"UCZ7VBGUD","ts":"1609247535.143700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rr+S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not 100% familiar with the codebase but I'll try to answer what I can:\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Is this the best place to discuss the RegistryCI implementation?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"An issue might be a good place to persist these notes.\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Does "},{"type":"text","text":"with_temp_dir","style":{"code":true}},{"type":"text","text":" do anything different from "},{"type":"text","text":"mktempdir","style":{"code":true}},{"type":"text","text":" in Julia 1.3 and later?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"looking at the code I think the difference is that it also "},{"type":"text","text":"cd","style":{"code":true}},{"type":"text","text":"s to the temp folder, but I'm not sure if this is relied on or not.\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"src/AutoMerge/cron.jl","style":{"code":true}},{"type":"text","text":": "},{"type":"text","text":"cron_or_api_build(pr, registry)","style":{"code":true}},{"type":"text","text":" is crazy. Has anyone been able to review that seven levels of "},{"type":"text","text":"if/else","style":{"code":true}},{"type":"text","text":" nesting comes out right?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I have not. I've also found the flow of code kind of hard to follow and extend, e.g. the numeric steps in "},{"type":"text","text":"src/AutoMerge/new-package.jl","style":{"code":true}},{"type":"text","text":" need to be renumbered if you add a step in the middle. I wonder if there's a way to write it more explicitly/modularly as a state machine?\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":" More constructively, would a PR that reverses the logic and immediately returns after a failed check be welcome?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"as sort of a form of mutation-testing? Sure, I think that would be appreciated (as long as it's clear what it's for and that it's not, e.g. a suggestion to make the logic backwards).\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":" In multiple places the "},{"type":"text","text":"UppercaseInitial/PackageName","style":{"code":true}},{"type":"text","text":" naming convention is hardcoded"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"seems like a good issue!\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Is there some styleguide thing that prefers "},{"type":"text","text":"Vector{T}(undef, 0)","style":{"code":true}},{"type":"text","text":" over "},{"type":"text","text":"T[]","style":{"code":true}},{"type":"text","text":"?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Not that I know of\n\nThanks for taking a look! More eyes the better imo, since RegistryCI is kind of a crucial bit of infrastructure. I think you'll find \"lack of time to change things\" is the reason many things are the way they currently are "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"."}]}]}],"thread_ts":"1609238196.142800","parent_user_id":"UBVE598BC"},{"client_msg_id":"175c005e-fb15-4f05-9a07-92cc4b67b176","type":"message","text":"With reversed logic I mean rewriting\n```if x\n    y\nelse\n    z\nend\nreturn nothing```\nto\n```if !x\n    z\n    return nothing\nend\ny\nreturn nothing```\nwhich can be repeated at least five times in that function.","user":"UBVE598BC","ts":"1609249848.143900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Bgh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With reversed logic I mean rewriting\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"if x\n    y\nelse\n    z\nend\nreturn nothing"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"to\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"if !x\n    z\n    return nothing\nend\ny\nreturn nothing"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which can be repeated at least five times in that function."}]}]}],"thread_ts":"1609238196.142800","parent_user_id":"UBVE598BC"}]