[{"client_msg_id":"fd642dbf-4af4-463a-b055-6758bea172b8","type":"message","text":"I've taken all the crazy syntax and documentation work I've been doing on `range` and put the maximum compatible set in a new package: <https://github.com/mkitti/Ranges.jl> . It's a little hacky because most of it was intended for Base, but it seems like the pull requests are stalling out.\n\nLet me know if there are any issues with the merge or package name:\n<https://github.com/JuliaRegistries/General/pull/27338#issuecomment-754435146>","user":"USU9FRPEU","ts":"1609863239.021000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=zOZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've taken all the crazy syntax and documentation work I've been doing on "},{"type":"text","text":"range","style":{"code":true}},{"type":"text","text":" and put the maximum compatible set in a new package: "},{"type":"link","url":"https://github.com/mkitti/Ranges.jl"},{"type":"text","text":" . It's a little hacky because most of it was intended for Base, but it seems like the pull requests are stalling out.\n\nLet me know if there are any issues with the merge or package name:\n"},{"type":"link","url":"https://github.com/JuliaRegistries/General/pull/27338#issuecomment-754435146"}]}]}],"thread_ts":"1609863239.021000","reply_count":16,"reply_users_count":4,"latest_reply":"1610041149.058200","reply_users":["U67SCG4HG","U6740K1SP","USU9FRPEU","U67D54KS8"],"subscribed":false},{"client_msg_id":"a0eb828a-6207-43de-9405-91653ee44ff3","type":"message","text":"What do you mean it is stalling?\nAlso, it is 100% type piracy?","user":"U67SCG4HG","ts":"1609863520.021100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tiRq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean it is stalling?\nAlso, it is 100% type piracy?"}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"0537e460-fb98-4498-8d91-230d36522051","type":"message","text":"I wouldn’t call your PRs stalled yet by any means","user":"U6740K1SP","ts":"1609863855.021300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xujv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wouldn’t call your PRs stalled yet by any means"}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"fd7c5a1d-76c9-45af-acd9-8718aff956cb","type":"message","text":"I'm being patient, but my sense is there is plenty of debate to still have. Even the least controversial one, the <https://github.com/JuliaLang/julia/pull/37875|documentation only PR>, has been sitting there for months.\n\nIt's absolutely 90% type piracy because most of it extends the functionality of base `range` in different ways that people have proposed. #<https://github.com/JuliaLang/julia/issues/38750|38750> #<https://github.com/JuliaLang/julia/issues/37875|37875> #<https://github.com/JuliaLang/julia/pull/38041|38041> <https://github.com/JuliaLang/julia/pull/39055|#39055>\n\nThe 10% not type piracy is because I created a `PartialRange` type as a way of currying parameters.\n\nAnyways, this package is basically a testbed to try all of these proposed extension live along the lines of the former <https://github.com/JuliaArrays/Ranges.jl>\n\nI can understand though if it doesn't belong in the registry. Even if the PRs are merged, I could imagine it might be useful to backport some of the functionality.","user":"USU9FRPEU","ts":"1609864479.021500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SbSf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm being patient, but my sense is there is plenty of debate to still have. Even the least controversial one, the "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/37875","text":"documentation only PR"},{"type":"text","text":", has been sitting there for months.\n\nIt's absolutely 90% type piracy because most of it extends the functionality of base "},{"type":"text","text":"range","style":{"code":true}},{"type":"text","text":" in different ways that people have proposed. #"},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/38750","text":"38750"},{"type":"text","text":" #"},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/37875","text":"37875"},{"type":"text","text":" #"},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/38041","text":"38041"},{"type":"text","text":" "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/39055","text":"#39055"},{"type":"text","text":"\n\nThe 10% not type piracy is because I created a "},{"type":"text","text":"PartialRange","style":{"code":true}},{"type":"text","text":" type as a way of currying parameters.\n\nAnyways, this package is basically a testbed to try all of these proposed extension live along the lines of the former "},{"type":"link","url":"https://github.com/JuliaArrays/Ranges.jl"},{"type":"text","text":"\n\nI can understand though if it doesn't belong in the registry. Even if the PRs are merged, I could imagine it might be useful to backport some of the functionality."}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"d011346b-dc6c-432d-a56c-e430a3362ca6","type":"message","text":"If it is mostly type piracy then it more seems like a \"proof of concept\" package and not something you should depend on in an \"official way\". What is the reason for registering it?","user":"U67D54KS8","ts":"1609864532.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3qkR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it is mostly type piracy then it more seems like a \"proof of concept\" package and not something you should depend on in an \"official way\". What is the reason for registering it?"}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"f49c1b9d-cf47-4bb7-9270-ac42c9c972f5","type":"message","text":"It seems apparent there people keep asking for the same functionality over the years. It feels like we've been going in circles since 2018, first deprecating `linrange`... now someone wants `linrange` back (specifically lowercase).\n\nThe thought is that maybe if there was a package that just provided the frequently debated syntax that it would curtail the endless circle of PRs.","user":"USU9FRPEU","ts":"1609864679.021900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zbl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems apparent there people keep asking for the same functionality over the years. It feels like we've been going in circles since 2018, first deprecating "},{"type":"text","text":"linrange","style":{"code":true}},{"type":"text","text":"... now someone wants "},{"type":"text","text":"linrange","style":{"code":true}},{"type":"text","text":" back (specifically lowercase).\n\nThe thought is that maybe if there was a package that just provided the frequently debated syntax that it would curtail the endless circle of PRs."}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"80b99ac1-815c-45a7-a048-35abeedf68c8","type":"message","text":"Much of it is just one line stuff like:\n```Base.range(start::Number, stop, length::Integer) = Base.range(start, stop; length)```\nYet, there's been a lot of discussion about that single line of code.\n<https://github.com/JuliaLang/julia/issues/38750>","user":"USU9FRPEU","ts":"1609864918.022100","team":"T68168MUP","edited":{"user":"USU9FRPEU","ts":"1609864946.000000"},"blocks":[{"type":"rich_text","block_id":"ZYF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Much of it is just one line stuff like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Base.range(start::Number, stop, length::Integer) = Base.range(start, stop; length)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYet, there's been a lot of discussion about that single line of code.\n"},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/38750"}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"1d1cbbc1-1f0a-4f60-a10c-942d60872901","type":"message","text":"Probably because most developers don't like it. I don't like it for example, I think the keywords are very clear. For 1.0 there was lot of public API that was made keyword arguments for clarity and this goes against that.","user":"U67SCG4HG","ts":"1609865166.022500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sRTS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Probably because most developers don't like it. I don't like it for example, I think the keywords are very clear. For 1.0 there was lot of public API that was made keyword arguments for clarity and this goes against that."}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"74419cf4-7e3d-4878-be93-8712978a6a09","type":"message","text":"I agree. Honestly, I don't really like it either.\n\nThe main problem I have is the current documentation:\n<https://github.com/JuliaLang/julia/pull/39069#issuecomment-754387150>","user":"USU9FRPEU","ts":"1609865474.022700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u7L38","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree. Honestly, I don't really like it either.\n\nThe main problem I have is the current documentation:\n"},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/39069#issuecomment-754387150"}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"072edcba-d7d8-4009-a1bd-b91c18a712bc","type":"message","text":"```range(start[, stop]; length, stop, step=1)\n\nGiven a starting value, construct a range either by length or from start to stop, optionally with a given step (defaults to 1, a UnitRange).```\nYou might expect the `range(start, stop)` might work after reading that. You might also think that `step` is always `1` even if you specify `length`.","user":"USU9FRPEU","ts":"1609865630.022900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cS1Aq","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"range(start[, stop]; length, stop, step=1)\n\nGiven a starting value, construct a range either by length or from start to stop, optionally with a given step (defaults to 1, a UnitRange)."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYou might expect the "},{"type":"text","text":"range(start, stop)","style":{"code":true}},{"type":"text","text":" might work after reading that. You might also think that "},{"type":"text","text":"step","style":{"code":true}},{"type":"text","text":" is always "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" even if you specify "},{"type":"text","text":"length","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"4c040eab-413e-4de9-92ad-06908f1efdb9","type":"message","text":"Seems easy to split that signature to something like\n```\nrange(start, stop; length)\nrange(start, stop; step)\n```\nfor example","user":"U67SCG4HG","ts":"1609865733.023100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n8slc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems easy to split that signature to something like\n```\nrange(start, stop; length)\nrange(start, stop; step)\n```\nfor example"}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"0b35ac9f-b544-4b39-9623-de0f38a264d8","type":"message","text":"Exactly. That's exactly what <https://github.com/JuliaLang/julia/pull/37875> is.\n\nIt would be great if something just said\n```range(start, stop; length = len)\n\nCreates a range from start to stop, inclusive of both endpoints, with the given length. Step is calculated.```","user":"USU9FRPEU","ts":"1609865810.023300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=DqF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Exactly. That's exactly what "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/37875"},{"type":"text","text":" is.\n\nIt would be great if something just said\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"range(start, stop; length = len)\n\nCreates a range from start to stop, inclusive of both endpoints, with the given length. Step is calculated."}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU","reactions":[{"name":"+1","users":["U67SCG4HG"],"count":1}]},{"client_msg_id":"5e6ffe56-28a8-4138-b89b-1ae5bb2a496d","type":"message","text":"I suspect we could deprecate something like `range(start; stop)` because you would almost always just do `start:stop`. By deprecate, I mean undocument it rather than remove it.","user":"USU9FRPEU","ts":"1609865995.023600","team":"T68168MUP","edited":{"user":"USU9FRPEU","ts":"1609866075.000000"},"blocks":[{"type":"rich_text","block_id":"4BX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I suspect we could deprecate something like "},{"type":"text","text":"range(start; stop)","style":{"code":true}},{"type":"text","text":" because you would almost always just do "},{"type":"text","text":"start:stop","style":{"code":true}},{"type":"text","text":". By deprecate, I mean undocument it rather than remove it."}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU","reactions":[{"name":"+1","users":["U67SCG4HG"],"count":1}]},{"client_msg_id":"e9c7b4aa-9537-4e71-91cd-7d037d16104d","type":"message","text":"The main reason for proposing `range(start =&gt; stop, length)` is because it seemed that `range(start, stop, length)` was becoming a possibility from Stefan's comment.\n\nI was trying to avoid the headache of having to first think about whether I was writing Python or Julia before trying to remember argument order.","user":"USU9FRPEU","ts":"1609866213.023900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vmiF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The main reason for proposing "},{"type":"text","text":"range(start => stop, length)","style":{"code":true}},{"type":"text","text":" is because it seemed that "},{"type":"text","text":"range(start, stop, length)","style":{"code":true}},{"type":"text","text":" was becoming a possibility from Stefan's comment.\n\nI was trying to avoid the headache of having to first think about whether I was writing Python or Julia before trying to remember argument order."}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"4839a797-f43d-4a3a-9250-b22a0e85a8b4","type":"message","text":"Anyways... too much typing from me on this.\n\nThanks for the encouragement <@U6740K1SP>.","user":"USU9FRPEU","ts":"1609866235.024100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ej=0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyways... too much typing from me on this.\n\nThanks for the encouragement "},{"type":"user","user_id":"U6740K1SP"},{"type":"text","text":"."}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"66a205b2-a1e1-40ab-9df4-a9e47090294e","type":"message","text":"Thumbs up from Jeff on 38041 <https://github.com/JuliaLang/julia/pull/38041>\n\nBesides adding all the keywords for `range`, it also fixes the documentation issue.","user":"USU9FRPEU","ts":"1609902494.029100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"31xjJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thumbs up from Jeff on 38041 "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/38041"},{"type":"text","text":"\n\nBesides adding all the keywords for "},{"type":"text","text":"range","style":{"code":true}},{"type":"text","text":", it also fixes the documentation issue."}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"d8499c95-c02b-43aa-9b51-ddfbb21d8ab9","type":"message","text":"&gt;  too much typing from me on this\nThere’s a big value to conciseness… and lots of text can make review harder :slightly_smiling_face:","user":"U6740K1SP","ts":"1610041149.058200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RGE","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" too much typing from me on this"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThere’s a big value to conciseness… and lots of text can make review harder "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1609863239.021000","parent_user_id":"USU9FRPEU"}]