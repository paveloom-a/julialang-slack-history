[{"client_msg_id":"11cb9a81-bb43-44ca-b3c8-3f87a3d74616","type":"message","text":"Thank you for the responses. In particular I’m trying to differentiate through `Base.:exp` (matrix exponential). I overloaded `exp` with my own method and it’s working up until differentiating through `Base.:\\`. Here’s a MWE\n```using CUDA\nusing ForwardDiff\nA = CuArray([1. 0; 0 1])\nb = CuArray([1.; 1]) \ng(b_) = A\\b_\nForwardDiff.jacobian(g,b)\nERROR: MethodError: no method matching getrs!...```\nBased on CUDA’s definition of `\\` [0] it looks like I need to provide getrf! [1] and getrs! [2] that work with ForwardDiff’s dual type, so I tried to implement my own versions of [1] and [2] that don’t do type checking on the eltype for function signature, and just use the Float64 methods. This is giving a weird error that I don’t know how to resolve though.\n```ERROR: CUDA error: an illegal memory access was encountered (code 700, ERROR_ILLEGAL_ADDRESS)  ```\nI don’t understand what any of these functions are doing so if anyone sees something obviously wrong it would be helpful if you could point it out.\n[0] <https://github.com/JuliaGPU/CUDA.jl/blob/master/src/linalg.jl#L9>\n[1] <https://github.com/JuliaGPU/CUDA.jl/blob/621972b4cb3e386dbbd43f2cd873325e59c8d60f/lib/cusolver/dense.jl#L106>\n[2] <https://github.com/JuliaGPU/CUDA.jl/blob/621972b4cb3e386dbbd43f2cd873325e59c8d60f/lib/cusolver/dense.jl#L197>","user":"U01122ME7C5","ts":"1617121744.078400","team":"T68168MUP","edited":{"user":"U01122ME7C5","ts":"1617122041.000000"},"blocks":[{"type":"rich_text","block_id":"BpaG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you for the responses. In particular I’m trying to differentiate through "},{"type":"text","text":"Base.:exp","style":{"code":true}},{"type":"text","text":" (matrix exponential). I overloaded "},{"type":"text","text":"exp","style":{"code":true}},{"type":"text","text":" with my own method and it’s working up until differentiating through "},{"type":"text","text":"Base.:\\","style":{"code":true}},{"type":"text","text":". Here’s a MWE\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using CUDA\nusing ForwardDiff\nA = CuArray([1. 0; 0 1])\nb = CuArray([1.; 1]) \ng(b_) = A\\b_\nForwardDiff.jacobian(g,b)\nERROR: MethodError: no method matching getrs!..."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Based on CUDA’s definition of "},{"type":"text","text":"\\","style":{"code":true}},{"type":"text","text":" [0] it looks like I need to provide getrf! [1] and getrs! [2] that work with ForwardDiff’s dual type, so I tried to implement my own versions of [1] and [2] that don’t do type checking on the eltype for function signature, and just use the Float64 methods. This is giving a weird error that I don’t know how to resolve though.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: CUDA error: an illegal memory access was encountered (code 700, ERROR_ILLEGAL_ADDRESS)  "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t understand what any of these functions are doing so if anyone sees something obviously wrong it would be helpful if you could point it out.\n[0] "},{"type":"link","url":"https://github.com/JuliaGPU/CUDA.jl/blob/master/src/linalg.jl#L9"},{"type":"text","text":"\n[1] "},{"type":"link","url":"https://github.com/JuliaGPU/CUDA.jl/blob/621972b4cb3e386dbbd43f2cd873325e59c8d60f/lib/cusolver/dense.jl#L106"},{"type":"text","text":"\n[2] "},{"type":"link","url":"https://github.com/JuliaGPU/CUDA.jl/blob/621972b4cb3e386dbbd43f2cd873325e59c8d60f/lib/cusolver/dense.jl#L197"}]}]}],"thread_ts":"1617121744.078400","reply_count":3,"reply_users_count":1,"latest_reply":"1617126878.079400","reply_users":["U66SR8JHX"],"is_locked":false,"subscribed":false},{"client_msg_id":"16da9562-ac97-40fb-86bc-514bb3e87b3c","type":"message","text":"That sound that somewhere along the way some intermediate array is being computed in the CPU and its pointer passed to the GPU. There's still work than needs to be done in the linear algebra side of CUDA.jl and in base (and in the ecosystem in general) for more methods to be generically used.","user":"U66SR8JHX","ts":"1617125243.078700","team":"T68168MUP","edited":{"user":"U66SR8JHX","ts":"1617125555.000000"},"blocks":[{"type":"rich_text","block_id":"pZbP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That sound that somewhere along the way some intermediate array is being computed in the CPU and its pointer passed to the GPU. There's still work than needs to be done in the linear algebra side of CUDA.jl and in base (and in the ecosystem in general) for more methods to be generically used."}]}]}],"thread_ts":"1617121744.078400","parent_user_id":"U01122ME7C5"},{"client_msg_id":"5dea1beb-7b9a-4e5a-853a-bc3da5c76b54","type":"message","text":"I believe you can get at least your example to work for now with `DiffResults.jl` . Let me check","user":"U66SR8JHX","ts":"1617125479.078900","team":"T68168MUP","edited":{"user":"U66SR8JHX","ts":"1617125498.000000"},"blocks":[{"type":"rich_text","block_id":"gBeG4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe you can get at least your example to work for now with "},{"type":"text","text":"DiffResults.jl","style":{"code":true}},{"type":"text","text":" . Let me check"}]}]}],"thread_ts":"1617121744.078400","parent_user_id":"U01122ME7C5"},{"client_msg_id":"70f03e1f-fd4c-4249-bf39-1d59186f42dc","type":"message","text":"I read it wrong, I see why it fails. It seems to be working with Zygote, though:\n```julia&gt; Zygote.jacobian(g, b)\n([1.0 0.0; 0.0 1.0],)```","user":"U66SR8JHX","ts":"1617126878.079400","team":"T68168MUP","edited":{"user":"U66SR8JHX","ts":"1617126904.000000"},"blocks":[{"type":"rich_text","block_id":"WNCk+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I read it wrong, I see why it fails. It seems to be working with Zygote, though:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Zygote.jacobian(g, b)\n([1.0 0.0; 0.0 1.0],)"}]}]}],"thread_ts":"1617121744.078400","parent_user_id":"U01122ME7C5"}]