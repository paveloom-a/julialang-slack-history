[{"client_msg_id":"a45c9e33-bf03-4511-acfa-c9dc5c8e0ecf","type":"message","text":"that's an internal function from libcudnn, not wrapped by CUDA.jl. have a look at the CUDNN docs and existing libcudnn wrappers in CUDA.jl","user":"U68A3ASP9","ts":"1616597677.043100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y+SzE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's an internal function from libcudnn, not wrapped by CUDA.jl. have a look at the CUDNN docs and existing libcudnn wrappers in CUDA.jl"}]}]}],"thread_ts":"1616597677.043100","reply_count":6,"reply_users_count":3,"latest_reply":"1616604141.044400","reply_users":["ULDCM1P9P","U68A3ASP9","UC4QQPG4A"],"is_locked":false,"subscribed":false},{"client_msg_id":"b8505618-3095-4464-aa2c-6347241053f3","type":"message","text":"OK, if I follow this path, then I'd have to do the same for the corresponding backward pass function, but I don't see anything like that in CUDA.jl. So, it looks like I'll be better off trying to write my own kernel for it. Am I assessing the situation correctly?","user":"ULDCM1P9P","ts":"1616602237.043300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Cn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, if I follow this path, then I'd have to do the same for the corresponding backward pass function, but I don't see anything like that in CUDA.jl. So, it looks like I'll be better off trying to write my own kernel for it. Am I assessing the situation correctly?"}]}]}],"thread_ts":"1616597677.043100","parent_user_id":"U68A3ASP9"},{"client_msg_id":"f44b050e-3822-41c2-8748-649b2b9d1dcc","type":"message","text":"I don't know. maybe <@UC4QQPG4A> does.","user":"U68A3ASP9","ts":"1616602414.043500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dm4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know. maybe "},{"type":"user","user_id":"UC4QQPG4A"},{"type":"text","text":" does."}]}]}],"thread_ts":"1616597677.043100","parent_user_id":"U68A3ASP9"},{"client_msg_id":"d784164a-bad2-4b58-849b-6afafcee9ea2","type":"message","text":"So if you are interested in just im2col then the wrappers work, else using the nnlib api would be ideal. Same for the backwards pass.","user":"UC4QQPG4A","ts":"1616602522.043700","team":"T68168MUP","edited":{"user":"UC4QQPG4A","ts":"1616602553.000000"},"blocks":[{"type":"rich_text","block_id":"zXBC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So if you are interested in just im2col then the wrappers work, else using the nnlib api would be ideal. Same for the backwards pass."}]}]}],"thread_ts":"1616597677.043100","parent_user_id":"U68A3ASP9"},{"client_msg_id":"5cce1919-da13-4a1d-a1e4-fc5835388167","type":"message","text":"Ideally we would hook im2col into nnlib api, it might be the case already","user":"UC4QQPG4A","ts":"1616602586.044000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uB14","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ideally we would hook im2col into nnlib api, it might be the case already"}]}]}],"thread_ts":"1616597677.043100","parent_user_id":"U68A3ASP9"},{"client_msg_id":"8de741f6-9603-4635-a7d3-8af98174a594","type":"message","text":"OK, thanks for the advise, beginner here so I'm trying to make sense of it. Just cloned NNlib.jl and there's quite a bit about im2col. Should I look into the NNlibCuda folder?","user":"ULDCM1P9P","ts":"1616602978.044200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sVd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, thanks for the advise, beginner here so I'm trying to make sense of it. Just cloned NNlib.jl and there's quite a bit about im2col. Should I look into the NNlibCuda folder?"}]}]}],"thread_ts":"1616597677.043100","parent_user_id":"U68A3ASP9"},{"client_msg_id":"92c405f7-7044-49dc-a3e1-fefbaccd860b","type":"message","text":"I think I understand. So, the nnlib api would be just to do it well, reusing all the cdims stuff and so on... Not that I can find stuff in nnlib that simplifies wrapping the functions, as done in CUDA.jl.","user":"ULDCM1P9P","ts":"1616604141.044400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tusj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I understand. So, the nnlib api would be just to do it well, reusing all the cdims stuff and so on... Not that I can find stuff in nnlib that simplifies wrapping the functions, as done in CUDA.jl."}]}]}],"thread_ts":"1616597677.043100","parent_user_id":"U68A3ASP9"}]