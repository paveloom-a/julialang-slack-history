[{"client_msg_id":"b464d63d-1348-4b29-8620-0d55ee2fa92a","type":"message","text":"Hi there. I've run unto an issue with `LowerTriangular` and `CuArray`s:\n```julia&gt; L = LowerTriangular(CUDA.rand(3,3));\njulia&gt; L * CUDA.rand(3)\nERROR: ArgumentError: cannot take the CPU address of a CuArray{Float32,2}\nStacktrace:\n [1] unsafe_convert(::Type{Ptr{Float32}}, ::CuArray{Float32,2}) at /home/vargonis/.julia/packages/CUDA/YeS8q/src/array.jl:211\n [2] trmv!(::Char, ::Char, ::Char, ::CuArray{Float32,2}, ::CuArray{Float32,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl:1171\n [3] lmul!(::LowerTriangular{Float32,CuArray{Float32,2}}, ::CuArray{Float32,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/triangular.jl:737\n [4] *(::LowerTriangular{Float32,CuArray{Float32,2}}, ::CuArray{Float32,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/triangular.jl:2003\n [5] top-level scope at REPL[8]:1```\nIt's funny though that `L * L'`, for instance, works fine. Any workaround suggestion, beyond dropping `LowerTriangular`? I'm using it because it is what `cholesky` gives me. I tried using `L.data` but that actually contains stuff above the diagonal.","user":"ULDCM1P9P","ts":"1615669767.050700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/R+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi there. I've run unto an issue with "},{"type":"text","text":"LowerTriangular","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"CuArray","style":{"code":true}},{"type":"text","text":"s:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> L = LowerTriangular(CUDA.rand(3,3));\njulia> L * CUDA.rand(3)\nERROR: ArgumentError: cannot take the CPU address of a CuArray{Float32,2}\nStacktrace:\n [1] unsafe_convert(::Type{Ptr{Float32}}, ::CuArray{Float32,2}) at /home/vargonis/.julia/packages/CUDA/YeS8q/src/array.jl:211\n [2] trmv!(::Char, ::Char, ::Char, ::CuArray{Float32,2}, ::CuArray{Float32,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl:1171\n [3] lmul!(::LowerTriangular{Float32,CuArray{Float32,2}}, ::CuArray{Float32,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/triangular.jl:737\n [4] *(::LowerTriangular{Float32,CuArray{Float32,2}}, ::CuArray{Float32,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/triangular.jl:2003\n [5] top-level scope at REPL[8]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It's funny though that "},{"type":"text","text":"L * L'","style":{"code":true}},{"type":"text","text":", for instance, works fine. Any workaround suggestion, beyond dropping "},{"type":"text","text":"LowerTriangular","style":{"code":true}},{"type":"text","text":"? I'm using it because it is what "},{"type":"text","text":"cholesky","style":{"code":true}},{"type":"text","text":" gives me. I tried using "},{"type":"text","text":"L.data","style":{"code":true}},{"type":"text","text":" but that actually contains stuff above the diagonal."}]}]}],"thread_ts":"1615669767.050700","reply_count":3,"reply_users_count":1,"latest_reply":"1615823174.061400","reply_users":["U68A3ASP9"],"subscribed":false},{"client_msg_id":"db799541-1168-4afe-903e-2b3aa629d2f1","type":"message","text":"we do have `CUDA.CUBLAS.trmv!`, but apparently it's not hooked up to `lmul!` correctly","user":"U68A3ASP9","ts":"1615823129.061000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x4TK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we do have "},{"type":"text","text":"CUDA.CUBLAS.trmv!","style":{"code":true}},{"type":"text","text":", but apparently it's not hooked up to "},{"type":"text","text":"lmul!","style":{"code":true}},{"type":"text","text":" correctly"}]}]}],"thread_ts":"1615669767.050700","parent_user_id":"ULDCM1P9P"},{"client_msg_id":"136ab96f-d375-4e61-8172-860c1f5215be","type":"message","text":"is this on 1.6?","user":"U68A3ASP9","ts":"1615823159.061200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8k4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is this on 1.6?"}]}]}],"thread_ts":"1615669767.050700","parent_user_id":"ULDCM1P9P"},{"client_msg_id":"e027786e-c783-4c59-b9f6-5a30ae0d2440","type":"message","text":"some things changed there, so you may want to check the latest CUDA.jl using Julia 1.6","user":"U68A3ASP9","ts":"1615823174.061400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sVRqr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"some things changed there, so you may want to check the latest CUDA.jl using Julia 1.6"}]}]}],"thread_ts":"1615669767.050700","parent_user_id":"ULDCM1P9P"}]