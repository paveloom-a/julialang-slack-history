[{"client_msg_id":"2678ec7f-97f4-4a04-9d07-22dbbe28de75","type":"message","text":"How do I write a CUDA.jl kernel, that returns a scalar? I tried the following, which does not work:\n```module MWE\nusing CUDA\nfunction give_1_kernel!(out)\n    out[] = 1f0\n    return\nend\nfunction give_1()\n    out = CuRef(0f0)\n    @cuda give_1_kernel!(out)\n    out\nend\n\ngive_1()\n\nend\nGPU compilation of kernel give_1_kernel!(CUDA.CuRefArray{Float32,CuArray{Float32,1}}) failed\nKernelError: kernel returns a value of type `Union{}`\n\nMake sure your kernel function ends in `return`, `return nothing` or `nothing`.\nIf the returned value is of type `Union{}`, your Julia code probably throws an exception.\nInspect the code with `@device_code_warntype` for more details.```","user":"UKZ78GR8Q","ts":"1611041950.021600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j/q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do I write a CUDA.jl kernel, that returns a scalar? I tried the following, which does not work:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"module MWE\nusing CUDA\nfunction give_1_kernel!(out)\n    out[] = 1f0\n    return\nend\nfunction give_1()\n    out = CuRef(0f0)\n    @cuda give_1_kernel!(out)\n    out\nend\n\ngive_1()\n\nend\nGPU compilation of kernel give_1_kernel!(CUDA.CuRefArray{Float32,CuArray{Float32,1}}) failed\nKernelError: kernel returns a value of type `Union{}`\n\nMake sure your kernel function ends in `return`, `return nothing` or `nothing`.\nIf the returned value is of type `Union{}`, your Julia code probably throws an exception.\nInspect the code with `@device_code_warntype` for more details."}]}]}],"thread_ts":"1611041950.021600","reply_count":13,"reply_users_count":3,"latest_reply":"1611070539.025100","reply_users":["U01C10FSAM8","UKZ78GR8Q","U68A3ASP9"],"subscribed":false},{"client_msg_id":"14ab4dbd-08bf-4f8b-8d58-e5d17e5c782e","type":"message","text":"I haven’t written any cuda.jl kernels, but I imagine it follows the pattern as pure CUDA. CUDA kernels must return `void` (meaning nothing), so you need to write your output/return values in some buffer address. You can of course have utility functions that run on the device that return other types, but those aren’t kernels.","user":"U01C10FSAM8","ts":"1611042498.021700","team":"T68168MUP","edited":{"user":"U01C10FSAM8","ts":"1611042704.000000"},"blocks":[{"type":"rich_text","block_id":"0cL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven’t written any cuda.jl kernels, but I imagine it follows the pattern as pure CUDA. CUDA kernels must return "},{"type":"text","text":"void","style":{"code":true}},{"type":"text","text":" (meaning nothing), so you need to write your output/return values in some buffer address. You can of course have utility functions that run on the device that return other types, but those aren’t kernels."}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q","reactions":[{"name":"heavy_check_mark","users":["U68A3ASP9"],"count":1}]},{"client_msg_id":"3d755494-155f-43c6-9d52-5bf0bb7a75ca","type":"message","text":"yeah, this is the approach I tried in the above code. Note that `give_1_kernel!` indeed returns `nothing`.","user":"UKZ78GR8Q","ts":"1611042740.022200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2G/MY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, this is the approach I tried in the above code. Note that "},{"type":"text","text":"give_1_kernel!","style":{"code":true}},{"type":"text","text":" indeed returns "},{"type":"text","text":"nothing","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"},{"client_msg_id":"368100b2-def8-4026-825a-9eac8c5076f0","type":"message","text":"yes, but `give_1()` returns `out` which is non-void","user":"U01C10FSAM8","ts":"1611042780.022400","team":"T68168MUP","edited":{"user":"U01C10FSAM8","ts":"1611042791.000000"},"blocks":[{"type":"rich_text","block_id":"onBP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, but "},{"type":"text","text":"give_1()","style":{"code":true}},{"type":"text","text":" returns "},{"type":"text","text":"out","style":{"code":true}},{"type":"text","text":" which is non-void"}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"},{"client_msg_id":"9f693e1d-e98a-4559-9de3-81a6f60f48b4","type":"message","text":"as I understand `give_1` is just some julia function, that calls the kernel. And thus is free to return anything?","user":"UKZ78GR8Q","ts":"1611042792.022700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kzBx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as I understand "},{"type":"text","text":"give_1","style":{"code":true}},{"type":"text","text":" is just some julia function, that calls the kernel. And thus is free to return anything?"}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"},{"client_msg_id":"303eb3ff-56c7-42b1-8fa5-2045ac9afc94","type":"message","text":"It seems that the julia compiler is interpreting it as a kernel, and therefor complains. Maybe there’s some semantic definition detail you missed. Unfortunately I don’t know the details there :confused:","user":"U01C10FSAM8","ts":"1611042905.022900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UQh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems that the julia compiler is interpreting it as a kernel, and therefor complains. Maybe there’s some semantic definition detail you missed. Unfortunately I don’t know the details there "},{"type":"emoji","name":"confused"}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"},{"client_msg_id":"7386b634-c19e-4b85-91b1-960d4d1e79d7","type":"message","text":"If I replace `CuRef` by a zero dim array `CUDA.zeros()` it works. So I probably I use `CuRef` incorrectly?","user":"UKZ78GR8Q","ts":"1611042989.023100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0NI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I replace "},{"type":"text","text":"CuRef","style":{"code":true}},{"type":"text","text":" by a zero dim array "},{"type":"text","text":"CUDA.zeros()","style":{"code":true}},{"type":"text","text":" it works. So I probably I use "},{"type":"text","text":"CuRef","style":{"code":true}},{"type":"text","text":" incorrectly?"}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"},{"client_msg_id":"2c4497e8-ba35-4f05-9353-b31696d63439","type":"message","text":"It’s possible. It could be that `CuRef` is reserved for use in kernels, so by finding it, the compiler assumes your function is a kernel. But I’m just speculating here","user":"U01C10FSAM8","ts":"1611043139.023300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c8hJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s possible. It could be that "},{"type":"text","text":"CuRef","style":{"code":true}},{"type":"text","text":" is reserved for use in kernels, so by finding it, the compiler assumes your function is a kernel. But I’m just speculating here"}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"},{"client_msg_id":"5e62c735-6891-4b7e-96ee-2008d5fe005e","type":"message","text":"thanks for all the ideas <@U01C10FSAM8> . Would be great, if somebody could confirm that and point out the ideomatic way to do this. E.g. should I use zero dimensional array or some kind of Ref?","user":"UKZ78GR8Q","ts":"1611043368.023500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"maWN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks for all the ideas "},{"type":"user","user_id":"U01C10FSAM8"},{"type":"text","text":" . Would be great, if somebody could confirm that and point out the ideomatic way to do this. E.g. should I use zero dimensional array or some kind of Ref?"}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"},{"client_msg_id":"f0404199-8d61-4c05-919b-7ba545f1e662","type":"message","text":"no worries :slightly_smiling_face:","user":"U01C10FSAM8","ts":"1611043713.023700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bZO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no worries "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"},{"type":"message","subtype":"thread_broadcast","text":"can anyone confirm this?","user":"U01C10FSAM8","ts":"1611058650.024100","thread_ts":"1611041950.021600","root":{"client_msg_id":"2678ec7f-97f4-4a04-9d07-22dbbe28de75","type":"message","text":"How do I write a CUDA.jl kernel, that returns a scalar? I tried the following, which does not work:\n```module MWE\nusing CUDA\nfunction give_1_kernel!(out)\n    out[] = 1f0\n    return\nend\nfunction give_1()\n    out = CuRef(0f0)\n    @cuda give_1_kernel!(out)\n    out\nend\n\ngive_1()\n\nend\nGPU compilation of kernel give_1_kernel!(CUDA.CuRefArray{Float32,CuArray{Float32,1}}) failed\nKernelError: kernel returns a value of type `Union{}`\n\nMake sure your kernel function ends in `return`, `return nothing` or `nothing`.\nIf the returned value is of type `Union{}`, your Julia code probably throws an exception.\nInspect the code with `@device_code_warntype` for more details.```","user":"UKZ78GR8Q","ts":"1611041950.021600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j/q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do I write a CUDA.jl kernel, that returns a scalar? I tried the following, which does not work:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"module MWE\nusing CUDA\nfunction give_1_kernel!(out)\n    out[] = 1f0\n    return\nend\nfunction give_1()\n    out = CuRef(0f0)\n    @cuda give_1_kernel!(out)\n    out\nend\n\ngive_1()\n\nend\nGPU compilation of kernel give_1_kernel!(CUDA.CuRefArray{Float32,CuArray{Float32,1}}) failed\nKernelError: kernel returns a value of type `Union{}`\n\nMake sure your kernel function ends in `return`, `return nothing` or `nothing`.\nIf the returned value is of type `Union{}`, your Julia code probably throws an exception.\nInspect the code with `@device_code_warntype` for more details."}]}]}],"thread_ts":"1611041950.021600","reply_count":13,"reply_users_count":3,"latest_reply":"1611070539.025100","reply_users":["U01C10FSAM8","UKZ78GR8Q","U68A3ASP9"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"sHkyY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can anyone confirm this?"}]}]}],"client_msg_id":"eff2177a-b1ad-45e5-9409-74195bdfba34","reactions":[{"name":"heart","users":["UKZ78GR8Q"],"count":1}]},{"client_msg_id":"d505c9d4-16cb-45dd-8494-8cf61f0c137a","type":"message","text":"`CuRef` is mostly an implementation detail for `ccall`ing functions with `CuPtr`, it wasn't intended/tested for this use here","user":"U68A3ASP9","ts":"1611060210.024400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JTT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"CuRef","style":{"code":true}},{"type":"text","text":" is mostly an implementation detail for `ccall`ing functions with "},{"type":"text","text":"CuPtr","style":{"code":true}},{"type":"text","text":", it wasn't intended/tested for this use here"}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"},{"client_msg_id":"394f2ce6-618c-4b77-9940-2a3ada4a2fc6","type":"message","text":"just use a 0-dimensional or single value array","user":"U68A3ASP9","ts":"1611060230.024600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tif","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just use a 0-dimensional or single value array"}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q","reactions":[{"name":"point_up","users":["U67BJLYCS"],"count":1},{"name":"heart","users":["UKZ78GR8Q"],"count":1}]},{"client_msg_id":"53408e13-b04c-4bbd-9968-1d420dce08a8","type":"message","text":"Okay thanks a lot for pointing this out.","user":"UKZ78GR8Q","ts":"1611070539.025100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mhr6x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay thanks a lot for pointing this out."}]}]}],"thread_ts":"1611041950.021600","parent_user_id":"UKZ78GR8Q"}]