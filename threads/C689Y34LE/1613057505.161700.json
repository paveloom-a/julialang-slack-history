[{"client_msg_id":"ef958ea3-a029-4906-a4c2-4c2359f28864","type":"message","text":"Does anybody know why the following code generates an illegal memory access error (code 700, ERROR_ILLEGAL_ADDRESS)? I restarted Julia and just ran the following.\n```using CUDA\n\nfunction kernel(n::Int, arr::CuDeviceArray{Float64})\n    x = @cuDynamicSharedMem(Float64, n)\n    xl = @cuDynamicSharedMem(Float64, n, n*sizeof(Float64))\n\n    I = blockIdx().x\n\n    xl[5] = arr[I]\n    xl[6] = arr[I]\n    CUDA.sync_threads()\n\n    return\nend\n\nn = 8\nnblk = 9\narr = CuArray{Float64}(undef, nblk)\ncopyto!(arr, ones(nblk))\n\nCUDA.@sync @cuda threads=32 blocks=nblk shmem=((2*n)*sizeof(Float64)) kernel(n,arr)```\nI'm using Julia 1.5.2 and CUDA.jl 2.3.0.","user":"U01FXSDEXN3","ts":"1613057505.161700","team":"T68168MUP","edited":{"user":"U01FXSDEXN3","ts":"1613058140.000000"},"blocks":[{"type":"rich_text","block_id":"ugg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anybody know why the following code generates an illegal memory access error (code 700, ERROR_ILLEGAL_ADDRESS)? I restarted Julia and just ran the following.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using CUDA\n\nfunction kernel(n::Int, arr::CuDeviceArray{Float64})\n    x = @cuDynamicSharedMem(Float64, n)\n    xl = @cuDynamicSharedMem(Float64, n, n*sizeof(Float64))\n\n    I = blockIdx().x\n\n    xl[5] = arr[I]\n    xl[6] = arr[I]\n    CUDA.sync_threads()\n\n    return\nend\n\nn = 8\nnblk = 9\narr = CuArray{Float64}(undef, nblk)\ncopyto!(arr, ones(nblk))\n\nCUDA.@sync @cuda threads=32 blocks=nblk shmem=((2*n)*sizeof(Float64)) kernel(n,arr)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I'm using Julia 1.5.2 and CUDA.jl 2.3.0."}]}]}],"thread_ts":"1613057505.161700","reply_count":16,"reply_users_count":2,"latest_reply":"1613120756.169500","reply_users":["U68A3ASP9","U01FXSDEXN3"],"subscribed":false},{"client_msg_id":"15e64de7-50f5-4fc4-a98a-b93f57fdd04e","type":"message","text":"works here without errors","user":"U68A3ASP9","ts":"1613058435.162300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zGuMy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"works here without errors"}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"75fe414a-6184-4426-a08e-43a050e46446","type":"message","text":"Thanks a lot for checking. Do you think I might have to restart the computer? Not sure what to do in this case. By the way, the error messages were\n```ERROR: LoadError: CUDA error: an illegal memory access was encountered (code 700, ERROR_ILLEGAL_ADDRESS)\nStacktrace:\n [1] throw_api_error(::CUDA.cudaError_enum) at /home/youngdae/.julia/packages/CUDA/YeS8q/lib/cudadrv/error.jl:97\n [2] macro expansion at /home/youngdae/.julia/packages/CUDA/YeS8q/lib/cudadrv/error.jl:104 [inlined]\n [3] cuEventSynchronize at /home/youngdae/.julia/packages/CUDA/YeS8q/lib/utils/call.jl:93 [inlined]\n [4] synchronize(::CuEvent) at /home/youngdae/.julia/packages/CUDA/YeS8q/lib/cudadrv/events.jl:52\n [5] top-level scope at /home/youngdae/.julia/packages/CUDA/YeS8q/src/utilities.jl:37\n [6] include(::String) at ./client.jl:457\n [7] top-level scope at REPL[1]:1\nin expression starting at /home/youngdae/git-repos/admm/src/test.jl:21```\nand when I exit Julia it also gives me the following errors:\n```error in running finalizer: CUDA.CuError(code=CUDA.cudaError_enum(0x000002bc), meta=nothing)\nerror in running finalizer: CUDA.CuError(code=CUDA.cudaError_enum(0x000002bc), meta=nothing)```\n","user":"U01FXSDEXN3","ts":"1613058768.162500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eJF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks a lot for checking. Do you think I might have to restart the computer? Not sure what to do in this case. By the way, the error messages were\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: LoadError: CUDA error: an illegal memory access was encountered (code 700, ERROR_ILLEGAL_ADDRESS)\nStacktrace:\n [1] throw_api_error(::CUDA.cudaError_enum) at /home/youngdae/.julia/packages/CUDA/YeS8q/lib/cudadrv/error.jl:97\n [2] macro expansion at /home/youngdae/.julia/packages/CUDA/YeS8q/lib/cudadrv/error.jl:104 [inlined]\n [3] cuEventSynchronize at /home/youngdae/.julia/packages/CUDA/YeS8q/lib/utils/call.jl:93 [inlined]\n [4] synchronize(::CuEvent) at /home/youngdae/.julia/packages/CUDA/YeS8q/lib/cudadrv/events.jl:52\n [5] top-level scope at /home/youngdae/.julia/packages/CUDA/YeS8q/src/utilities.jl:37\n [6] include(::String) at ./client.jl:457\n [7] top-level scope at REPL[1]:1\nin expression starting at /home/youngdae/git-repos/admm/src/test.jl:21"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and when I exit Julia it also gives me the following errors:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"error in running finalizer: CUDA.CuError(code=CUDA.cudaError_enum(0x000002bc), meta=nothing)\nerror in running finalizer: CUDA.CuError(code=CUDA.cudaError_enum(0x000002bc), meta=nothing)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"943c3942-2b56-4984-a378-4902d010f785","type":"message","text":"reboot shouldn't help here","user":"U68A3ASP9","ts":"1613058940.162700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u3l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reboot shouldn't help here"}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"584db0e9-4d89-45dc-ac10-e60998fad528","type":"message","text":"try running under `cuda-memcheck`","user":"U68A3ASP9","ts":"1613058950.162900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VKeTf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"try running under "},{"type":"text","text":"cuda-memcheck","style":{"code":true}}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"b606f825-9ed0-4978-8539-bb7351e59790","type":"message","text":"It threw a bunch of error messages, but they were all the same errors occurred when writing to the shared memory by threads of each block:\n```========= Invalid __shared__ write of size 8\n=========     at 0x00000250 in julia_kernel_2095(Int64, CuDeviceArray&lt;Float64, int=1, int=1&gt;)\n=========     by thread (31,0,0) in block (8,0,0)\n=========     Address 0x32000068 is out of bounds\n=========     Device Frame:julia_kernel_2095(Int64, CuDeviceArray&lt;Float64, int=1, int=1&gt;) (julia_kernel_2095(Int64, CuDeviceArray&lt;Float64, int=1, int=1&gt;) : 0x250)\n=========     Saved host backtrace up to driver entry point at kernel launch time```","user":"U01FXSDEXN3","ts":"1613059394.163100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fFSt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It threw a bunch of error messages, but they were all the same errors occurred when writing to the shared memory by threads of each block:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"========= Invalid __shared__ write of size 8\n=========     at 0x00000250 in julia_kernel_2095(Int64, CuDeviceArray<Float64, int=1, int=1>)\n=========     by thread (31,0,0) in block (8,0,0)\n=========     Address 0x32000068 is out of bounds\n=========     Device Frame:julia_kernel_2095(Int64, CuDeviceArray<Float64, int=1, int=1>) (julia_kernel_2095(Int64, CuDeviceArray<Float64, int=1, int=1>) : 0x250)\n=========     Saved host backtrace up to driver entry point at kernel launch time"}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"641ec8f3-1146-4491-a7ac-42e7e036b037","type":"message","text":"Is there a way to see where the shared memory was allocated? I would like to verify if the address 0x32000068 is within range or not.","user":"U01FXSDEXN3","ts":"1613059509.163300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PZ1A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to see where the shared memory was allocated? I would like to verify if the address 0x32000068 is within range or not."}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"fd6c6f05-554d-4bf2-bdf8-2d832d5652b8","type":"message","text":"you can `@cushow pointer(x)`","user":"U68A3ASP9","ts":"1613059763.163500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xijE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can "},{"type":"text","text":"@cushow pointer(x)","style":{"code":true}}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"babac201-6fc6-47d4-aa4e-e92c3d2aa8e2","type":"message","text":"might have to reinterpret the pointer to a `Ptr`","user":"U68A3ASP9","ts":"1613059785.163700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2U1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"might have to reinterpret the pointer to a "},{"type":"text","text":"Ptr","style":{"code":true}}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"cf7daf8f-acd4-4719-a473-df75d3c1b46b","type":"message","text":"The results are a bit puzzling. I ran with `@cushow(reinterpret(Ptr{Float64}, pointer(x)))` and `@cushow(reinterpret(Ptr{Float64}, pointer(xl)))`  and it gave me the following:\n```reinterpret(Ptr{Float64}, pointer(x)) = (nil)\nreinterpret(Ptr{Float64}, pointer(xl)) = 0x40```\nActually, memory errors occurred with `xl` , not with `x` . But the message says `x` points to null...","user":"U01FXSDEXN3","ts":"1613061299.163900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mSzW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The results are a bit puzzling. I ran with "},{"type":"text","text":"@cushow(reinterpret(Ptr{Float64}, pointer(x)))","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"@cushow(reinterpret(Ptr{Float64}, pointer(xl)))","style":{"code":true}},{"type":"text","text":"  and it gave me the following:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"reinterpret(Ptr{Float64}, pointer(x)) = (nil)\nreinterpret(Ptr{Float64}, pointer(xl)) = 0x40"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Actually, memory errors occurred with "},{"type":"text","text":"xl","style":{"code":true}},{"type":"text","text":" , not with "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" . But the message says "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" points to null..."}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"8fa77b41-2c02-4eeb-92b7-8da1479cf820","type":"message","text":"yeah that's expected I think; shared memory in a CUDA module (on device) starts at address 0","user":"U68A3ASP9","ts":"1613062050.164100","team":"T68168MUP","edited":{"user":"U68A3ASP9","ts":"1613062067.000000"},"blocks":[{"type":"rich_text","block_id":"+R+GK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah that's expected I think; shared memory in a CUDA module (on device) starts at address 0"}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"3e6be80c-362f-4956-9c5b-08b1b4efe934","type":"message","text":"you can try `@cushow`ing the result of `pointer(xl, 6)` too. no idea how it becomes `0x32000068`","user":"U68A3ASP9","ts":"1613062506.164400","team":"T68168MUP","edited":{"user":"U68A3ASP9","ts":"1613062509.000000"},"blocks":[{"type":"rich_text","block_id":"r3Snd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can try `@cushow`ing the result of "},{"type":"text","text":"pointer(xl, 6)","style":{"code":true}},{"type":"text","text":" too. no idea how it becomes "},{"type":"text","text":"0x32000068","style":{"code":true}}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"ecca9f0b-e7d8-4bd2-b658-d1e315f255b3","type":"message","text":"you can also try CUDA.jl#master on Julia 1.6, but I don't recall changing anything here","user":"U68A3ASP9","ts":"1613062531.164800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0OMT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can also try CUDA.jl#master on Julia 1.6, but I don't recall changing anything here"}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"40b14654-10ad-42a0-9d60-e94ba821ed8c","type":"message","text":"the access to `xl[6]` maps onto `0x68` here ,which is suspicious given your access to 0x32000068","user":"U68A3ASP9","ts":"1613062985.165000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WNjr0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the access to "},{"type":"text","text":"xl[6]","style":{"code":true}},{"type":"text","text":" maps onto "},{"type":"text","text":"0x68","style":{"code":true}},{"type":"text","text":" here ,which is suspicious given your access to 0x32000068"}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"9f43db8e-c9e2-4730-96c9-732209515f34","type":"message","text":"It seems related to Julia and CUDA.jl versions. It worked fine with Julia 1.6rc1 and CUDA.jl 2.6.1. My colleague also verified that it generated the same error with Julia 1.5.2 and CUDA.jl 2.3.0. I ran the code with Julia 1.5.2 and CUDA.jl 2.4.1, but it didn't work there.\n\nSo far, only Julia 1.6.rc1 and CUDA.jl 2.6.1 didn't generate errors in my case.","user":"U01FXSDEXN3","ts":"1613066292.165200","team":"T68168MUP","edited":{"user":"U01FXSDEXN3","ts":"1613066349.000000"},"blocks":[{"type":"rich_text","block_id":"kYYb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems related to Julia and CUDA.jl versions. It worked fine with Julia 1.6rc1 and CUDA.jl 2.6.1. My colleague also verified that it generated the same error with Julia 1.5.2 and CUDA.jl 2.3.0. I ran the code with Julia 1.5.2 and CUDA.jl 2.4.1, but it didn't work there.\n\nSo far, only Julia 1.6.rc1 and CUDA.jl 2.6.1 didn't generate errors in my case."}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"bdc7b78e-d14a-47ad-9e53-4b2aead32092","type":"message","text":"<https://reviews.llvm.org/D92210> is another possibility, which is only included in Julia 1.6","user":"U68A3ASP9","ts":"1613120733.169300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gJS","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://reviews.llvm.org/D92210"},{"type":"text","text":" is another possibility, which is only included in Julia 1.6"}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"},{"client_msg_id":"3578dfdc-0083-4b80-9ed6-87125b8c5509","type":"message","text":"the 0x320000000 offset looks like a window transformation","user":"U68A3ASP9","ts":"1613120756.169500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tB1uz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the 0x320000000 offset looks like a window transformation"}]}]}],"thread_ts":"1613057505.161700","parent_user_id":"U01FXSDEXN3"}]