[{"client_msg_id":"4811235f-fcdb-4b45-bfa7-4265263e7004","type":"message","text":"Is there a way to create a CuArray with a constant value in a way that can go inside a function that ends up passing through Zygote? This eg does not work (CUDA v2.6.1, Zygote v0.6.3; stack trace in thread):\n```gradient(A -&gt; sum(A * fill!(CuArray{Float32}(undef, 10), 2)), 2)```\nThis does work for `Array`. Also any chance this is a regression in CUDA? I have some code that did this that I feel like used to work, although I don't have it bisected carefully so I could be wrong.","user":"UUMJUCYRK","ts":"1617764381.140600","team":"T68168MUP","edited":{"user":"UUMJUCYRK","ts":"1617765438.000000"},"blocks":[{"type":"rich_text","block_id":"uPHM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to create a CuArray with a constant value in a way that can go inside a function that ends up passing through Zygote? This eg does not work (CUDA v2.6.1, Zygote v0.6.3; stack trace in thread):\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"gradient(A -> sum(A * fill!(CuArray{Float32}(undef, 10), 2)), 2)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"This does work for "},{"type":"text","text":"Array","style":{"code":true}},{"type":"text","text":". Also any chance this is a regression in CUDA? I have some code that did this that I feel like used to work, although I don't have it bisected carefully so I could be wrong."}]}]}],"thread_ts":"1617764381.140600","reply_count":6,"reply_users_count":2,"latest_reply":"1617778562.142700","reply_users":["UUMJUCYRK","U68A3ASP9"],"is_locked":false,"subscribed":false},{"client_msg_id":"344c6909-ddd5-4a96-a492-8407a0946a25","type":"message","text":"```Can't differentiate foreigncall expression\n\nStacktrace:\n  [1] error(s::String)\n    @ Base ./error.jl:33\n  [2] Pullback\n    @ ./gcutils.jl:48 [inlined]\n  [3] (::typeof(∂(finalizer)))(Δ::Nothing)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n  [4] Pullback\n    @ ~/.julia/packages/CUDA/Zmd60/src/array.jl:22 [inlined]\n  [5] (::typeof(∂(CuArray{Float32, 1})))(Δ::Nothing)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n  [6] Pullback\n    @ ~/.julia/packages/CUDA/Zmd60/src/array.jl:76 [inlined]\n  [7] Pullback\n    @ ~/.julia/packages/CUDA/Zmd60/src/array.jl:77 [inlined]\n  [8] (::typeof(∂(CuArray{Float32, N} where N)))(Δ::Nothing)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n  [9] Pullback\n    @ ./In[14]:1 [inlined]\n [10] (::Zygote.var\"#41#42\"{typeof(∂(#13))})(Δ::Float32)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:40\n [11] gradient(f::Function, args::Int64)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:49\n [12] top-level scope\n    @ In[14]:1\n [13] eval\n    @ ./boot.jl:360 [inlined]\n [14] include_string(mapexpr::typeof(REPL.softscope), mod::Module, code::String, filename::String)\n    @ Base ./loading.jl:1094```\n","user":"UUMJUCYRK","ts":"1617764397.140700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z8LF","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Can't differentiate foreigncall expression\n\nStacktrace:\n  [1] error(s::String)\n    @ Base ./error.jl:33\n  [2] Pullback\n    @ ./gcutils.jl:48 [inlined]\n  [3] (::typeof(∂(finalizer)))(Δ::Nothing)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n  [4] Pullback\n    @ ~/.julia/packages/CUDA/Zmd60/src/array.jl:22 [inlined]\n  [5] (::typeof(∂(CuArray{Float32, 1})))(Δ::Nothing)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n  [6] Pullback\n    @ ~/.julia/packages/CUDA/Zmd60/src/array.jl:76 [inlined]\n  [7] Pullback\n    @ ~/.julia/packages/CUDA/Zmd60/src/array.jl:77 [inlined]\n  [8] (::typeof(∂(CuArray{Float32, N} where N)))(Δ::Nothing)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface2.jl:0\n  [9] Pullback\n    @ ./In[14]:1 [inlined]\n [10] (::Zygote.var\"#41#42\"{typeof(∂(#13))})(Δ::Float32)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:40\n [11] gradient(f::Function, args::Int64)\n    @ Zygote ~/.julia/packages/Zygote/KpME9/src/compiler/interface.jl:49\n [12] top-level scope\n    @ In[14]:1\n [13] eval\n    @ ./boot.jl:360 [inlined]\n [14] include_string(mapexpr::typeof(REPL.softscope), mod::Module, code::String, filename::String)\n    @ Base ./loading.jl:1094"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617764381.140600","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"0d66729d-b203-41c6-8bd5-cf8677e12f6d","type":"message","text":"how would this be a CUDA.jl issue? Zygote fails to work its way through `GC.@preserve` here, I think.","user":"U68A3ASP9","ts":"1617777030.141800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S8Zy3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how would this be a CUDA.jl issue? Zygote fails to work its way through "},{"type":"text","text":"GC.@preserve","style":{"code":true}},{"type":"text","text":" here, I think."}]}]}],"thread_ts":"1617764381.140600","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"f56988dd-5bc8-407d-b63f-45e633b0b5ab","type":"message","text":"I only commented here since that exact code works with CuArray -&gt; Array","user":"UUMJUCYRK","ts":"1617778203.142000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ATGU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I only commented here since that exact code works with CuArray -> Array"}]}]}],"thread_ts":"1617764381.140600","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"a2e6e559-96f9-47ce-96d6-d34a367b4366","type":"message","text":"Tbh it surprised me somewhat that it _does_ work with Array. Mainly I'm just interested in any workarounds. I found and tried CUDA.fill but thats the same error","user":"UUMJUCYRK","ts":"1617778264.142200","team":"T68168MUP","edited":{"user":"UUMJUCYRK","ts":"1617778272.000000"},"blocks":[{"type":"rich_text","block_id":"5Mjz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Tbh it surprised me somewhat that it "},{"type":"text","text":"does","style":{"italic":true}},{"type":"text","text":" work with Array. Mainly I'm just interested in any workarounds. I found and tried CUDA.fill but thats the same error"}]}]}],"thread_ts":"1617764381.140600","parent_user_id":"UUMJUCYRK"},{"client_msg_id":"ed0af052-c483-4d54-9791-dc5d12a951b1","type":"message","text":"Zygote has a bunch of custom adjoints for Array, I assume those are missing for CuArray? <https://github.com/FluxML/Zygote.jl/blob/fef5b433a7035705259956e78f323ffcdbabaf35/src/lib/array.jl>","user":"U68A3ASP9","ts":"1617778545.142500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KXU4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Zygote has a bunch of custom adjoints for Array, I assume those are missing for CuArray? "},{"type":"link","url":"https://github.com/FluxML/Zygote.jl/blob/fef5b433a7035705259956e78f323ffcdbabaf35/src/lib/array.jl"}]}]}],"thread_ts":"1617764381.140600","parent_user_id":"UUMJUCYRK","reactions":[{"name":"+1","users":["UUMJUCYRK"],"count":1}]},{"client_msg_id":"0933e33b-9269-459a-a1ea-be36fc4df4a4","type":"message","text":"I'm not really familiar with the inner workings of Zygote/AD packages","user":"U68A3ASP9","ts":"1617778562.142700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uo8E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not really familiar with the inner workings of Zygote/AD packages"}]}]}],"thread_ts":"1617764381.140600","parent_user_id":"UUMJUCYRK"}]