[{"client_msg_id":"e2c171fd-cb4c-4908-b42a-5a30d3ab803f","type":"message","text":"As FYI, <https://github.com/omlins/ParallelStencil.jl|ParallelStencil.jl> is now registered (Threads and CUDA backends). Enthusiastic to see if in the near future one could add the AMDGPU backend as well. Would mainly require to have functional AMD equivalent of `CuArrays` , and equivalent of thread/block/grid (index) as well as kernel launch params. Next steps may include “AMD-aware”  MPI (GPU pointer exchange) and streams priority handling for asynchronous execution if this will be available at some point to interact with <https://github.com/eth-cscs/ImplicitGlobalGrid.jl|ImplicitGlobalGrid.jl>.","user":"U019A495ZM3","ts":"1617219372.088900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f8xn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As FYI, "},{"type":"link","url":"https://github.com/omlins/ParallelStencil.jl","text":"ParallelStencil.jl"},{"type":"text","text":" is now registered (Threads and CUDA backends). Enthusiastic to see if in the near future one could add the AMDGPU backend as well. Would mainly require to have functional AMD equivalent of "},{"type":"text","text":"CuArrays","style":{"code":true}},{"type":"text","text":" , and equivalent of thread/block/grid (index) as well as kernel launch params. Next steps may include “AMD-aware”  MPI (GPU pointer exchange) and streams priority handling for asynchronous execution if this will be available at some point to interact with "},{"type":"link","url":"https://github.com/eth-cscs/ImplicitGlobalGrid.jl","text":"ImplicitGlobalGrid.jl"},{"type":"text","text":"."}]}]}],"thread_ts":"1617219372.088900","reply_count":26,"reply_users_count":4,"latest_reply":"1617698522.130800","reply_users":["U67BJLYCS","U019A495ZM3","U6A0PD8CR","URN898S15"],"is_locked":false,"subscribed":false,"reactions":[{"name":"+1","users":["UM5RTMK6V"],"count":1}]},{"client_msg_id":"5542e990-a11a-45bf-bce9-454f544a8776","type":"message","text":"We recently added a ROC backend to KernelAbstractions.jl","user":"U67BJLYCS","ts":"1617221518.089000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hyny","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We recently added a ROC backend to KernelAbstractions.jl"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"6ab6be4a-2832-4118-afd8-755b90df269c","type":"message","text":"Cool - just read about it :slightly_smiling_face:\nHope it performs similarly to CUDA. Would be nice to see if one could add AMDGPU backend to ParallelStencil.jl and later do the AMDGPU MPI with ImplicitGlobalGrid.jl. We use fairly “basic” features in there ()with excpetion of the async streams for communication / computation overlap.","user":"U019A495ZM3","ts":"1617223932.089300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D0fae","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool - just read about it "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\nHope it performs similarly to CUDA. Would be nice to see if one could add AMDGPU backend to ParallelStencil.jl and later do the AMDGPU MPI with ImplicitGlobalGrid.jl. We use fairly “basic” features in there ()with excpetion of the async streams for communication / computation overlap."}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"b206a656-3d0d-4826-9f23-cf1c3d71d9f6","type":"message","text":"Yeah KA helps with that since the dependency management is explicit","user":"U67BJLYCS","ts":"1617223980.089500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o9c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah KA helps with that since the dependency management is explicit"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"c17a0f66-8e37-44e7-b851-37df10a7687f","type":"message","text":"so you get async streams \"for free\"","user":"U67BJLYCS","ts":"1617224013.089700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W7K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you get async streams \"for free\""}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"b38613fd-41b4-4489-a8f1-d0c8a2a26f74","type":"message","text":"Cool :slightly_smiling_face:","user":"U019A495ZM3","ts":"1617224186.089900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A6hX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"74a557e6-1726-43dd-8ac6-eaa7212cc8e5","type":"message","text":"Where free is explicitly reasoning about dependencies everywhere :wink:","user":"U67BJLYCS","ts":"1617224318.090100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tACzw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Where free is explicitly reasoning about dependencies everywhere "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"2af17994-adfb-4abb-9bdf-c60025983ace","type":"message","text":"Nice. I was wondering about the mapping of functions like `Base.sin` (“are mapped to `CUDA.sin`”); is there an “automated” way to get those or do you implement it via a macro (or function) ?","user":"U019A495ZM3","ts":"1617224648.090400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I=nES","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nice. I was wondering about the mapping of functions like "},{"type":"text","text":"Base.sin","style":{"code":true}},{"type":"text","text":" (“are mapped to "},{"type":"text","text":"CUDA.sin","style":{"code":true}},{"type":"text","text":"”); is there an “automated” way to get those or do you implement it via a macro (or function) ?"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"ccbb3044-c92e-42ff-8d85-4e5b11aefc7f","type":"message","text":"CUDA 3.0 implements a solution for that","user":"U67BJLYCS","ts":"1617224910.090600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"woklf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"CUDA 3.0 implements a solution for that"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3","reactions":[{"name":"raised_hands","users":["U019A495ZM3"],"count":1}]},{"client_msg_id":"683ac262-fbd8-444a-a575-edeaec9c9342","type":"message","text":"and KA does it using Cassette","user":"U67BJLYCS","ts":"1617224915.090800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yii1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and KA does it using Cassette"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3","reactions":[{"name":"+1","users":["U019A495ZM3"],"count":1}]},{"client_msg_id":"734c461f-866f-4a28-bd90-c6272f9b9741","type":"message","text":"AMDGPU won't be implementing the same overrides as CUDA until we lower-bound Julia to 1.7, because the implementation with 1.6 breaks when both CUDA and AMDGPU are loaded.","user":"U6A0PD8CR","ts":"1617285106.092800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VimF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"AMDGPU won't be implementing the same overrides as CUDA until we lower-bound Julia to 1.7, because the implementation with 1.6 breaks when both CUDA and AMDGPU are loaded."}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"d4b4d1d1-fb82-46ce-8ce9-d4fa67f39f0b","type":"message","text":"But KA has a working 1.6 implementation, so I'd recommend using that","user":"U6A0PD8CR","ts":"1617285125.093000","team":"T68168MUP","edited":{"user":"U6A0PD8CR","ts":"1617285138.000000"},"blocks":[{"type":"rich_text","block_id":"bRhm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But KA has a working 1.6 implementation, so I'd recommend using that"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"949d9fc0-e6bb-4c84-a125-96cc50a841c2","type":"message","text":"Thanks <@U6A0PD8CR> for the advise and looking fwd to further AMD support (a Julia GPU “HPC” battle horse) in these times where cheaper AMD-based solutions are economically attractive but running codes are missing…","user":"U019A495ZM3","ts":"1617309197.112300","team":"T68168MUP","edited":{"user":"U019A495ZM3","ts":"1617309210.000000"},"blocks":[{"type":"rich_text","block_id":"PrMRE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks "},{"type":"user","user_id":"U6A0PD8CR"},{"type":"text","text":" for the advise and looking fwd to further AMD support (a Julia GPU “HPC” battle horse) in these times where cheaper AMD-based solutions are economically attractive but running codes are missing…"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3","reactions":[{"name":"+1","users":["U6A0PD8CR"],"count":1}]},{"client_msg_id":"be94f690-efbc-4c65-a551-93c4183dcb37","type":"message","text":"Please do try out ROCKernels and file lots of issues about bugs and missing features! I too wish most Julia code worked on my favorite kind of GPUs","user":"U6A0PD8CR","ts":"1617309334.112700","team":"T68168MUP","edited":{"user":"U6A0PD8CR","ts":"1617309362.000000"},"blocks":[{"type":"rich_text","block_id":"TNA+J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please do try out ROCKernels and file lots of issues about bugs and missing features! I too wish most Julia code worked on my favorite kind of GPUs"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3","reactions":[{"name":"+1","users":["U019A495ZM3"],"count":1}]},{"client_msg_id":"9a394e91-b8bd-405a-8f8e-e32a52045695","type":"message","text":"<@U019A495ZM3> are you going to add api docs? just trying to find what your macros do","user":"URN898S15","ts":"1617694645.127100","team":"T68168MUP","edited":{"user":"URN898S15","ts":"1617694744.000000"},"blocks":[{"type":"rich_text","block_id":"jxK","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U019A495ZM3"},{"type":"text","text":" are you going to add api docs? just trying to find what your macros do"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"a2c8e37e-ce7d-4e86-ba11-51025fe38e03","type":"message","text":"<@URN898S15> for ParallelStencil or ImplicitGlobalGrid ? We may add API docs if needed. For now we’ve put all infos as docstring accessible via the REPL help.","user":"U019A495ZM3","ts":"1617694985.127500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eel","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"URN898S15"},{"type":"text","text":" for ParallelStencil or ImplicitGlobalGrid ? We may add API docs if needed. For now we’ve put all infos as docstring accessible via the REPL help."}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"f488a617-cff9-4746-85db-69f9b684bf77","type":"message","text":"Both I guess. API docs are pretty good for an overview of the package (one of the first things I read normally), most packages have have the little blue buttons at the top of the readme for stable and dev docs. It's all automated with Documenter.jl `@autodocs`, you don't have to actually write anything.","user":"URN898S15","ts":"1617695178.127700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"523y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Both I guess. API docs are pretty good for an overview of the package (one of the first things I read normally), most packages have have the little blue buttons at the top of the readme for stable and dev docs. It's all automated with Documenter.jl "},{"type":"text","text":"@autodocs","style":{"code":true}},{"type":"text","text":", you don't have to actually write anything."}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3","reactions":[{"name":"+1","users":["U019A495ZM3"],"count":1}]},{"client_msg_id":"75d1376b-04c8-4954-a434-3320076f768c","type":"message","text":"I'm also writing GPU stencil code (actually right now) so just wanting to see how you were organising things.","user":"URN898S15","ts":"1617695342.127900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WsHdx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm also writing GPU stencil code (actually right now) so just wanting to see how you were organising things."}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3","reactions":[{"name":"blush","users":["U019A495ZM3"],"count":1}]},{"client_msg_id":"b1b55859-406d-4751-902f-088b0b20591e","type":"message","text":"That’s cool. Thanks for the feedback regarding API docs. We will certainly generate those in the near future and started checking out Documenter.jl.\nIf you are interested in using things from these packages and have any questions, do not hesitate to ping me ! Docs is still sparse but we are working on it. Examples should show and implement majority of the features though :wink:","user":"U019A495ZM3","ts":"1617695798.128900","team":"T68168MUP","edited":{"user":"U019A495ZM3","ts":"1617695848.000000"},"blocks":[{"type":"rich_text","block_id":"O+fA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That’s cool. Thanks for the feedback regarding API docs. We will certainly generate those in the near future and started checking out Documenter.jl.\nIf you are interested in using things from these packages and have any questions, do not hesitate to ping me ! Docs is still sparse but we are working on it. Examples should show and implement majority of the features though "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3","reactions":[{"name":"+1","users":["URN898S15"],"count":1}]},{"client_msg_id":"4c9829d6-0786-4ce6-8912-120294272f47","type":"message","text":"Thanks! I'm thinking some of the tooling might be useful later on if we need to run simulations larger than a single GPU in DynamicGrids.jl. It's 2d spatial modelling for ecology/geography etc, but that does involve a lot of stencils! It has really fast CPU stencils, but a rubbish GPU implementation currently, because I'm just getting my head around GPU memory optimisation...\n\nYour examples are actually great, and probably good for most users. I guess I was just wanting to see everything quickly, which is where the API docs help.","user":"URN898S15","ts":"1617696234.129200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QB2p7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! I'm thinking some of the tooling might be useful later on if we need to run simulations larger than a single GPU in DynamicGrids.jl. It's 2d spatial modelling for ecology/geography etc, but that does involve a lot of stencils! It has really fast CPU stencils, but a rubbish GPU implementation currently, because I'm just getting my head around GPU memory optimisation...\n\nYour examples are actually great, and probably good for most users. I guess I was just wanting to see everything quickly, which is where the API docs help."}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"0f5e0fe5-5651-4a6d-a454-cae360c5a3fe","type":"message","text":"If you need an example of how simple and automated docs can be: <https://github.com/rafaqz/Flatten.jl/tree/master/docs>","user":"URN898S15","ts":"1617696518.129400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r4/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you need an example of how simple and automated docs can be: "},{"type":"link","url":"https://github.com/rafaqz/Flatten.jl/tree/master/docs"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"209de52b-e14a-4cbf-9577-bd0b3b4b375f","type":"message","text":"Cool. And yes, the API stuff is a good point. We will look into it asap and certainly set it up with Documenter.jl.\nFor the brief overview, ParallelStencil.jl comes with some backend independent macros that will be executed on either `Threads` or `CUDA` upon selecting the one you want in the init macro `@init_parallel_stencil()` .\n```const USE_GPU = true      # Use GPU? If this is set false, then the CUDA packages do not need to be installed! :)\nusing ParallelStencil\nusing ParallelStencil.FiniteDifferences3D\n@static if USE_GPU\n    @init_parallel_stencil(CUDA, Float64, 3)\nelse\n    @init_parallel_stencil(Threads, Float64, 3)\nend```\nThen, you have access to FD stencil macros in 1D, 2D and 3D by using the appropriate submodule, e,g, `ParallelStencil.FiniteDifferences3D`  accessible within kernels declared as `@parallel` .\nYou can also program the kernels in a standard lower-level fashion with indexes `(ix,iy,iz)` when defining those kernels as `@parallel_indices` .","user":"U019A495ZM3","ts":"1617696858.129700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Qd+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool. And yes, the API stuff is a good point. We will look into it asap and certainly set it up with Documenter.jl.\nFor the brief overview, ParallelStencil.jl comes with some backend independent macros that will be executed on either "},{"type":"text","text":"Threads","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"CUDA","style":{"code":true}},{"type":"text","text":" upon selecting the one you want in the init macro "},{"type":"text","text":"@init_parallel_stencil()","style":{"code":true}},{"type":"text","text":" .\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"const USE_GPU = true      # Use GPU? If this is set false, then the CUDA packages do not need to be installed! :)\nusing ParallelStencil\nusing ParallelStencil.FiniteDifferences3D\n@static if USE_GPU\n    @init_parallel_stencil(CUDA, Float64, 3)\nelse\n    @init_parallel_stencil(Threads, Float64, 3)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Then, you have access to FD stencil macros in 1D, 2D and 3D by using the appropriate submodule, e,g, "},{"type":"text","text":"ParallelStencil.FiniteDifferences3D","style":{"code":true}},{"type":"text","text":"  accessible within kernels declared as "},{"type":"text","text":"@parallel","style":{"code":true}},{"type":"text","text":" .\nYou can also program the kernels in a standard lower-level fashion with indexes "},{"type":"text","text":"(ix,iy,iz)","style":{"code":true}},{"type":"text","text":" when defining those kernels as "},{"type":"text","text":"@parallel_indices","style":{"code":true}},{"type":"text","text":" ."}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"6d9bc692-0836-4d40-9487-e6b9768d4b9f","type":"message","text":"Yep similar, DynamicGrids.jl has `CuGPU` and `ThreadedCPU` / `SingleCPU` etc that will run rules on whatever hardware.\nGood to know you can index directly too. The other main thing we need is a generic `mapwindow` for e.g. convolutions and cellular automata.","user":"URN898S15","ts":"1617697727.129900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PDm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yep similar, DynamicGrids.jl has "},{"type":"text","text":"CuGPU","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"ThreadedCPU","style":{"code":true}},{"type":"text","text":" / "},{"type":"text","text":"SingleCPU","style":{"code":true}},{"type":"text","text":" etc that will run rules on whatever hardware.\nGood to know you can index directly too. The other main thing we need is a generic "},{"type":"text","text":"mapwindow","style":{"code":true}},{"type":"text","text":" for e.g. convolutions and cellular automata."}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"80f2f8b6-865f-439f-b5e8-ce4b3f93eecb","type":"message","text":"So you mean a window kernel you can swipe through your grid as one would do in a convolution ?","user":"U019A495ZM3","ts":"1617698120.130100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iPXS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So you mean a window kernel you can swipe through your grid as one would do in a convolution ?"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"37a8117c-24b2-4ab6-8ca2-5ad4b9f46f66","type":"message","text":"Yeah, assuming that is something ParallelStencil.jl does?","user":"URN898S15","ts":"1617698188.130300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R9jr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, assuming that is something ParallelStencil.jl does?"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"2be62a06-39eb-477a-8f23-12906f5711b3","type":"message","text":"Also, this may be of interest since I see you are using some random fields <https://github.com/luraess/ParallelRandomFields.jl> (main target being able to generate large random fields having GPU/CPU-MPI in mind where parallelising FFT may become painful)","user":"U019A495ZM3","ts":"1617698232.130500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fiYx/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, this may be of interest since I see you are using some random fields "},{"type":"link","url":"https://github.com/luraess/ParallelRandomFields.jl"},{"type":"text","text":" (main target being able to generate large random fields having GPU/CPU-MPI in mind where parallelising FFT may become painful)"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3"},{"client_msg_id":"a358a23c-dd1b-403c-84e0-7aad75fde594","type":"message","text":"Those random fields look great. We just wrote this at EcoJulia <https://github.com/EcoJulia/NeutralLandscapes.jl>, it's all a bit lower powered when you only need 2D :laughing:","user":"URN898S15","ts":"1617698522.130800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vv8ru","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Those random fields look great. We just wrote this at EcoJulia "},{"type":"link","url":"https://github.com/EcoJulia/NeutralLandscapes.jl"},{"type":"text","text":", it's all a bit lower powered when you only need 2D "},{"type":"emoji","name":"laughing"}]}]}],"thread_ts":"1617219372.088900","parent_user_id":"U019A495ZM3","reactions":[{"name":"+1","users":["U019A495ZM3"],"count":1}]}]