[{"client_msg_id":"62b98dd1-69af-4b08-859b-b7e4c8466487","type":"message","text":"I'm trying to make FastChain twice differentiable (it somehow mutates arrays)\n\nI rewrote FastChain as:\n\n```split_at(p, idx) = view(p, 1:idx), view(p, (idx+1):lastindex(p))\n\nfunction ChainRulesCore.rrule(\n  ::typeof(split_at),\n  p::AbstractVector{S},\n  idx::Int,\n  ) where S\n\n  function split_at_pullback(Δ)\n    return (\n      ChainRulesCore.NO_FIELDS,\n      ChainRulesCore.@thunk(vcat(Δ...)),\n      ChainRulesCore.NO_FIELDS,\n    )\n  end\n  split_at(p, idx), split_at_pullback\nend\n\napplychain(::Tuple{}, x, p) = x\n# applychain(fs::Tuple, x, p) = applychain(Base.tail(fs), first(fs)(x,p[1:paramlength(first(fs))]), p[(paramlength(first(fs))+1):end])\nfunction DiffEqFlux.applychain(fs::Tuple, x, p)\n  p₁, p₂ = split_at(p, DiffEqFlux.paramlength(first(fs)))\n  DiffEqFlux.applychain(Base.tail(fs), first(fs)(x, p₁), p₂)\nend\n(c::FastChain)(x,p) = applychain(c.layers, x, p)```\nYes it's ugly :slightly_smiling_face:\n\nIf I run:\n\n```nn = FastChain(\n    FastDense(1,2, selu),\n    FastDense(2,1),\n    )\np = initial_params(nnb)\n\nfunction ftest(p)\n    gz, back = Zygote.pullback(z -&gt; nn(z, p), rand(1, 100))\n    back(gz)[1]\nend\n\ny, back = Zygote.pullback(ftest, p)\nback(y)[1]```\nI get a stray `Zero()` . Any ideas ?\n\n```8-element Array{Any,1}:\n -4.961157245626697\n  4.776112584950887\n -3.0912947608064307\n  3.257924132096858\n -3.3781788944196873\n -2.207525737666333\n  3.504429379232563\n   Zero()```\n","user":"UKJSNT1QR","ts":"1616451914.144000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mWX+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm trying to make FastChain twice differentiable (it somehow mutates arrays)\n\nI rewrote FastChain as:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"split_at(p, idx) = view(p, 1:idx), view(p, (idx+1):lastindex(p))\n\nfunction ChainRulesCore.rrule(\n  ::typeof(split_at),\n  p::AbstractVector{S},\n  idx::Int,\n  ) where S\n\n  function split_at_pullback(Δ)\n    return (\n      ChainRulesCore.NO_FIELDS,\n      ChainRulesCore.@thunk(vcat(Δ...)),\n      ChainRulesCore.NO_FIELDS,\n    )\n  end\n  split_at(p, idx), split_at_pullback\nend\n\napplychain(::Tuple{}, x, p) = x\n# applychain(fs::Tuple, x, p) = applychain(Base.tail(fs), first(fs)(x,p[1:paramlength(first(fs))]), p[(paramlength(first(fs))+1):end])\nfunction DiffEqFlux.applychain(fs::Tuple, x, p)\n  p₁, p₂ = split_at(p, DiffEqFlux.paramlength(first(fs)))\n  DiffEqFlux.applychain(Base.tail(fs), first(fs)(x, p₁), p₂)\nend\n(c::FastChain)(x,p) = applychain(c.layers, x, p)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYes it's ugly "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\n\nIf I run:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"nn = FastChain(\n    FastDense(1,2, selu),\n    FastDense(2,1),\n    )\np = initial_params(nnb)\n\nfunction ftest(p)\n    gz, back = Zygote.pullback(z -> nn(z, p), rand(1, 100))\n    back(gz)[1]\nend\n\ny, back = Zygote.pullback(ftest, p)\nback(y)[1]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI get a stray "},{"type":"text","text":"Zero()","style":{"code":true}},{"type":"text","text":" . Any ideas ?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"8-element Array{Any,1}:\n -4.961157245626697\n  4.776112584950887\n -3.0912947608064307\n  3.257924132096858\n -3.3781788944196873\n -2.207525737666333\n  3.504429379232563\n   Zero()"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1616451914.144000","reply_count":1,"reply_users_count":1,"latest_reply":"1616617316.187100","reply_users":["U69BL50BF"],"is_locked":false,"subscribed":false},{"client_msg_id":"624489ce-05a5-458b-ab94-3210114c7f63","type":"message","text":"Zygote isn't generally twice differentiable so I don't know if it'll work. Open an issue to track it?","user":"U69BL50BF","ts":"1616617316.187100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0se","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Zygote isn't generally twice differentiable so I don't know if it'll work. Open an issue to track it?"}]}]}],"thread_ts":"1616451914.144000","parent_user_id":"UKJSNT1QR"}]