[{"client_msg_id":"61925aed-5f25-41a7-9409-42c12d15b58a","type":"message","text":"I mean, you can specify it. `Dt(u(t,x)) ~ Dx(K(x) * Dx(u(t,x)))`","user":"U69BL50BF","ts":"1614115833.154700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RyYm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, you can specify it. "},{"type":"text","text":"Dt(u(t,x)) ~ Dx(K(x) * Dx(u(t,x)))","style":{"code":true}}]}]}],"thread_ts":"1614115833.154700","reply_count":19,"reply_users_count":2,"latest_reply":"1614138400.159600","reply_users":["U01CFQU8UFL","U69BL50BF"],"subscribed":false},{"client_msg_id":"a5a8b823-34ca-4558-afeb-9a1469c5381a","type":"message","text":"K(x) must be a function? can it be discretized values? Or, maybe I can  have a data function that take x and retrieve the corresponding K","user":"U01CFQU8UFL","ts":"1614115941.155500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WPZ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"K(x) must be a function? can it be discretized values? Or, maybe I can  have a data function that take x and retrieve the corresponding K"}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"1e978265-ad81-43ef-a19b-17955897b658","type":"message","text":"you can turn data into a function via something like <https://github.com/PumasAI/DataInterpolations.jl>","user":"U69BL50BF","ts":"1614115989.155700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7hor","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can turn data into a function via something like "},{"type":"link","url":"https://github.com/PumasAI/DataInterpolations.jl"}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"373f52b0-3a34-419d-a790-72ff2ff850c0","type":"message","text":"if you want to work with a specific discretization, you probably don't want to use the symbolic interface","user":"U69BL50BF","ts":"1614116015.155900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ozf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you want to work with a specific discretization, you probably don't want to use the symbolic interface"}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"963f4ea3-9b3e-4222-8a75-b2fbbda748ac","type":"message","text":"the symbolic interface is purely for \"automatic\" PDE solving.","user":"U69BL50BF","ts":"1614116024.156100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hgo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the symbolic interface is purely for \"automatic\" PDE solving."}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"30879b7d-85f0-44eb-a98b-8c9d129eee1d","type":"message","text":"It just wants high level descriptions","user":"U69BL50BF","ts":"1614116032.156300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bsE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It just wants high level descriptions"}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"30d74b3c-7202-4b41-bdde-9a8570a9c1b5","type":"message","text":"(and it's not quite done yet)","user":"U69BL50BF","ts":"1614116036.156500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O40","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and it's not quite done yet)"}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"3bc254ca-bc85-4d1f-a4c1-da22880ba0d5","type":"message","text":"If you're directly writing discretizations, you'd use <http://diffeqoperators.sciml.ai/dev/nonlinear_derivatives/nonlinear_diffusion/>","user":"U69BL50BF","ts":"1614116060.156700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i7i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you're directly writing discretizations, you'd use "},{"type":"link","url":"http://diffeqoperators.sciml.ai/dev/nonlinear_derivatives/nonlinear_diffusion/"}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"43e82c91-7c61-4715-9ecf-9b54d87a40dc","type":"message","text":"This is my confusion, too, and sorry for asking dummy questions:\n\n1. when should I use the symbolic toolbox; \n2. when should I use another differentiable toolsets (other examples)? ---- the only examples I've seen are in DiffEqOperators and PINN.\n3. Is there a performance penalty for using the symbolic approach (I recall the Matlab symbolic toolbox was quite slow)","user":"U01CFQU8UFL","ts":"1614117191.156900","team":"T68168MUP","edited":{"user":"U01CFQU8UFL","ts":"1614117337.000000"},"blocks":[{"type":"rich_text","block_id":"5fltX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is my confusion, too, and sorry for asking dummy questions:\n\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"when should I use the symbolic toolbox; "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"when should I use another differentiable toolsets (other examples)? ---- the only examples I've seen are in DiffEqOperators and PINN."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a performance penalty for using the symbolic approach (I recall the Matlab symbolic toolbox was quite slow)"}]}],"style":"ordered","indent":0}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"29b26b45-ea06-4913-83c6-ab1414745aeb","type":"message","text":"there's no penalty to using the symbolic approach here: the purpose of it is to use the rest of the DiffEqOperators.jl library automatically for the user. So it will in theory be the same code and same speed at the end of the day, when it's done. It's just not done yet.","user":"U69BL50BF","ts":"1614117725.157500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DG71","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's no penalty to using the symbolic approach here: the purpose of it is to use the rest of the DiffEqOperators.jl library automatically for the user. So it will in theory be the same code and same speed at the end of the day, when it's done. It's just not done yet."}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"9a989f53-88d3-48a6-ab64-a30a7cf000e7","type":"message","text":"The symbolic version is great for if (a) you don't know what you're doing or (b) you want to switch discretizations around a ton and don't know which discretization is best.","user":"U69BL50BF","ts":"1614117768.157700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vaYl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The symbolic version is great for if (a) you don't know what you're doing or (b) you want to switch discretizations around a ton and don't know which discretization is best."}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"faed75cf-3662-475e-8da8-2ef7041d34e0","type":"message","text":"Today, it's not so great for (a) because it's not done yet :rolling_on_the_floor_laughing: , so it's still a dev tool","user":"U69BL50BF","ts":"1614117781.157900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DpvG4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Today, it's not so great for (a) because it's not done yet "},{"type":"emoji","name":"rolling_on_the_floor_laughing"},{"type":"text","text":" , so it's still a dev tool"}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"7b0a681a-a3a4-4a51-98ca-7e224c0142c3","type":"message","text":"but in theory, about 2 years from now we can point students who know nothing about numerical PDEs to it, they can slap a PDE down and get a solution without knowing things like finite difference method discretizations of the Laplace equation.","user":"U69BL50BF","ts":"1614117815.158100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ljn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but in theory, about 2 years from now we can point students who know nothing about numerical PDEs to it, they can slap a PDE down and get a solution without knowing things like finite difference method discretizations of the Laplace equation."}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"e1e449ef-122e-4a25-921c-a8cff59e3a66","type":"message","text":"Right now all of the examples are DiffEqOperators and PINNs because those are the first two discretizations we're developing. We should get 2 very different ones working first, have the interface settle down, and then more onwards. Only doing 1 means an \"interface\" becomes too tied to implementation, and doing more is just more up front work.","user":"U69BL50BF","ts":"1614117884.158300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9KH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right now all of the examples are DiffEqOperators and PINNs because those are the first two discretizations we're developing. We should get 2 very different ones working first, have the interface settle down, and then more onwards. Only doing 1 means an \"interface\" becomes too tied to implementation, and doing more is just more up front work."}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"77cc7e6d-367d-4e4a-a559-1a2100baeb8b","type":"message","text":"But ApproxFun spectral discretizations and Gridap.jl FEM discretizations are both planned.","user":"U69BL50BF","ts":"1614117908.158500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UvY49","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But ApproxFun spectral discretizations and Gridap.jl FEM discretizations are both planned."}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"0d0efc48-5133-4fdd-ac44-e709cadf7c87","type":"message","text":"so you should be able to write a PDE at a high level and solve it with FDM, FVM, FEM, spectral, and PINNs where switching between them is one line of code. But that's probably like 2-3 years away.","user":"U69BL50BF","ts":"1614117957.158700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kM2VU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you should be able to write a PDE at a high level and solve it with FDM, FVM, FEM, spectral, and PINNs where switching between them is one line of code. But that's probably like 2-3 years away."}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"9863d8a6-c141-4c78-9e9c-28eddd1102b6","type":"message","text":"So the non-symbolic example is\nExample 2: Finite Difference Operator Solution for the Heat Equation\non this page?\n<https://github.com/SciML/DiffEqOperators.jl>\n\nI'm just trying to find an example to follow (which should allow heterogeneity and adjoints/AD down the line), but I might have got into the symbolic example by accident. Maybe I should write down my experience for future noobs.","user":"U01CFQU8UFL","ts":"1614118183.158900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E/V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the non-symbolic example is\nExample 2: Finite Difference Operator Solution for the Heat Equation\non this page?\n"},{"type":"link","url":"https://github.com/SciML/DiffEqOperators.jl"},{"type":"text","text":"\n\nI'm just trying to find an example to follow (which should allow heterogeneity and adjoints/AD down the line), but I might have got into the symbolic example by accident. Maybe I should write down my experience for future noobs."}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"5c257a13-c6e0-4dff-8284-6625c32c32cb","type":"message","text":"I'm looking at this now <https://github.com/SciML/DiffEqOperators.jl/blob/master/examples/heat_equation.jl>","user":"U01CFQU8UFL","ts":"1614118429.159100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wn3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm looking at this now "},{"type":"link","url":"https://github.com/SciML/DiffEqOperators.jl/blob/master/examples/heat_equation.jl"}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"3b45a471-ee1f-4836-83c0-5bc9a7a16ce4","type":"message","text":"DiffEqOperators definitely needs more docs.","user":"U69BL50BF","ts":"1614118922.159300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0=HGf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"DiffEqOperators definitely needs more docs."}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"},{"client_msg_id":"7a74a1ae-a731-4179-adc8-191ca27cbf52","type":"message","text":"I exactly want to do sth like `Dt(u(t,x)) ~ Dx(K(x) * Dx(u(t,x)))`. I think this is something I can start doing, as my \"entry point\".\n\nI looked at the source code for centeredDifference\n<https://github.com/SciML/DiffEqOperators.jl/blob/master/src/derivative_operators/derivative_operator.jl>\n\nDo you think I can write the equation as  `Dt(u(t,x)) ~ Dx(K(x) * Dx(u(t,x)))`\nand keep using centeredDifference? Or do the old way of constructing matrix A instead?\n\nI'll move forward on this for one of our problems. I'll also look for the advection diffusion equation (or Fokker Planck, depending on which is easier to drive.)","user":"U01CFQU8UFL","ts":"1614138400.159600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VsC76","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I exactly want to do sth like "},{"type":"text","text":"Dt(u(t,x)) ~ Dx(K(x) * Dx(u(t,x)))","style":{"code":true}},{"type":"text","text":". I think this is something I can start doing, as my \"entry point\".\n\nI looked at the source code for centeredDifference\n"},{"type":"link","url":"https://github.com/SciML/DiffEqOperators.jl/blob/master/src/derivative_operators/derivative_operator.jl"},{"type":"text","text":"\n\nDo you think I can write the equation as  "},{"type":"text","text":"Dt(u(t,x)) ~ Dx(K(x) * Dx(u(t,x)))","style":{"code":true}},{"type":"text","text":"\nand keep using centeredDifference? Or do the old way of constructing matrix A instead?\n\nI'll move forward on this for one of our problems. I'll also look for the advection diffusion equation (or Fokker Planck, depending on which is easier to drive.)"}]}]}],"thread_ts":"1614115833.154700","parent_user_id":"U69BL50BF"}]