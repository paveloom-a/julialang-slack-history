[{"client_msg_id":"D285828B-49B6-4249-9747-814ADE01A51F","type":"message","text":"Why not just use `@avxt`?","user":"U8D9768Q6","ts":"1618198778.487100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YNXqg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why not just use "},{"type":"text","text":"@avxt","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1618198778.487100","reply_count":8,"reply_users_count":3,"latest_reply":"1618199640.491200","reply_users":["U011LUQ182G","U8D9768Q6","UAUPJLBQX"],"is_locked":false,"subscribed":false},{"client_msg_id":"2dc33dc7-ad0c-43f8-aa46-ad476517ada4","type":"message","text":"Doesn’t yet support broadcasting over StructArrays","user":"U011LUQ182G","ts":"1618198841.487700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kmXz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Doesn’t yet support broadcasting over StructArrays"}]}]}],"thread_ts":"1618198778.487100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"35da5251-ddd9-44f3-9d7e-44d9222240fb","type":"message","text":"<https://julialang.slack.com/archives/CF53T1DU4/p1618189873188800>","user":"U011LUQ182G","ts":"1618198867.487900","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/CF53T1DU4/p1618189873188800","fallback":"[April 11th, 2021 6:11 PM] jesse.chan: is it possible to use LoopVectorization’s threaded broadcasting `@avxt` on StructArrays? e.g.,\n```using StructArrays\nusing BenchmarkTools\nusing LoopVectorization\n\nu,v = ntuple(x-&gt;randn(10,1000),2)\nU = StructArray(u=u,v=v)\nf(U) = exp(U.u)*sin(U.v)\n\n@avxt f.(U)```\nWhen I tried on v.12.12, `@avxt f.(U)` wasn’t any faster than the non-threaded broadcast version.","ts":"1618189873.188800","author_id":"U011LUQ182G","author_subname":"Jesse Chan","channel_id":"CF53T1DU4","channel_name":"performance-helpdesk","is_msg_unfurl":true,"is_thread_root_unfurl":true,"text":"is it possible to use LoopVectorization’s threaded broadcasting `@avxt` on StructArrays? e.g.,\n```using StructArrays\nusing BenchmarkTools\nusing LoopVectorization\n\nu,v = ntuple(x-&gt;randn(10,1000),2)\nU = StructArray(u=u,v=v)\nf(U) = exp(U.u)*sin(U.v)\n\n@avxt f.(U)```\nWhen I tried on v.12.12, `@avxt f.(U)` wasn’t any faster than the non-threaded broadcast version.","author_name":"Jesse Chan","author_link":"https://julialang.slack.com/team/U011LUQ182G","author_icon":"https://avatars.slack-edge.com/2020-06-03/1162078265395_cd57e1cbf026d843f4b4_48.jpg","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/CF53T1DU4/p1618189873188800","footer":"Thread in #performance-helpdesk"}],"blocks":[{"type":"rich_text","block_id":"/ldF","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://julialang.slack.com/archives/CF53T1DU4/p1618189873188800"}]}]}],"thread_ts":"1618198778.487100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"90c67ac8-7dd2-4ee3-b338-a67b94d3050b","type":"message","text":"<@UAUPJLBQX> mentioned that `@avxt` might be easier to support for a more restrictive version of broadcasting, and mentioned `@..`","user":"U011LUQ182G","ts":"1618199061.488200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i0f5y","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UAUPJLBQX"},{"type":"text","text":" mentioned that "},{"type":"text","text":"@avxt","style":{"code":true}},{"type":"text","text":" might be easier to support for a more restrictive version of broadcasting, and mentioned "},{"type":"text","text":"@..","style":{"code":true}}]}]}],"thread_ts":"1618198778.487100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"5110ebb7-c76b-42d4-a63b-48b672b9c525","type":"message","text":"Ah I see","user":"U8D9768Q6","ts":"1618199188.488400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zxhwk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah I see"}]}]}],"thread_ts":"1618198778.487100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"69dd2621-66dc-47a8-83cb-4199edf8f924","type":"message","text":"LoopVectorization also gets better performance with loops","user":"UAUPJLBQX","ts":"1618199499.490100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tUph=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LoopVectorization also gets better performance with loops"}]}]}],"thread_ts":"1618198778.487100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"3ca2aad0-4d58-4e93-917c-a3a537025475","type":"message","text":"But in most cases the difference is hopefully small.","user":"UAUPJLBQX","ts":"1618199541.490300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D8uz3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But in most cases the difference is hopefully small."}]}]}],"thread_ts":"1618198778.487100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"cc1f8939-7c9a-4642-93d3-43547ea6ea95","type":"message","text":"Because LoopVectorization doesn't flatten yet, the biggest differences will be when `eachindex` returns linear indices for multidimensional arrays.","user":"UAUPJLBQX","ts":"1618199596.490700","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1618199613.000000"},"blocks":[{"type":"rich_text","block_id":"1Vzt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Because LoopVectorization doesn't flatten yet, the biggest differences will be when "},{"type":"text","text":"eachindex","style":{"code":true}},{"type":"text","text":" returns linear indices for multidimensional arrays."}]}]}],"thread_ts":"1618198778.487100","parent_user_id":"U8D9768Q6","reactions":[{"name":"+1","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"7a37722b-9a3f-4b62-a937-3e9307920be8","type":"message","text":"Once it starts flattening, there'll be a lot more examples, since that optimization isn't valid for broadcasts","user":"UAUPJLBQX","ts":"1618199640.491200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"exq3u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Once it starts flattening, there'll be a lot more examples, since that optimization isn't valid for broadcasts"}]}]}],"thread_ts":"1618198778.487100","parent_user_id":"U8D9768Q6"}]