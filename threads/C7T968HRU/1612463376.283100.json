[{"client_msg_id":"0b44f85b-b305-4255-9261-9c6622583183","type":"message","text":"is there documentation somewhere on how `solve` determines when it needs to allocate new instances of `u`? I guess it's at least partially solver dependent.","user":"U01H36BUDJB","ts":"1612463376.283100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gdje","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there documentation somewhere on how "},{"type":"text","text":"solve","style":{"code":true}},{"type":"text","text":" determines when it needs to allocate new instances of "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":"? I guess it's at least partially solver dependent."}]}]}],"thread_ts":"1612463376.283100","reply_count":5,"reply_users_count":2,"latest_reply":"1612477897.286400","reply_users":["U69BL50BF","U01H36BUDJB"],"subscribed":false},{"client_msg_id":"775448b5-ed98-4366-8af3-48ae40a999a5","type":"message","text":"what do you mean?","user":"U69BL50BF","ts":"1612476529.285600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iOPGO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you mean?"}]}]}],"thread_ts":"1612463376.283100","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"23a2f171-991f-479f-ab2c-1794f850111d","type":"message","text":"it seems like `u` sometimes gets re-allocated (a new array) and sometimes gets overwritten; if you try testing for reference equality  `===`  with the u from the previous iteration, it will be true for several steps and then false for several steps, for example. So I guess it's just not clear to me how the state `u` is handled under the hood and when/why it gets reallocated vs being overwritten.","user":"U01H36BUDJB","ts":"1612477350.285800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rmhk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it seems like "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":" sometimes gets re-allocated (a new array) and sometimes gets overwritten; if you try testing for reference equality  "},{"type":"text","text":"===","style":{"code":true}},{"type":"text","text":"  with the u from the previous iteration, it will be true for several steps and then false for several steps, for example. So I guess it's just not clear to me how the state "},{"type":"text","text":"u","style":{"code":true}},{"type":"text","text":" is handled under the hood and when/why it gets reallocated vs being overwritten."}]}]}],"thread_ts":"1612463376.283100","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"4ae9e509-bc95-49a1-918a-70363fe89ad2","type":"message","text":"you can't have a single cache for it","user":"U69BL50BF","ts":"1612477826.286000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6sK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can't have a single cache for it"}]}]}],"thread_ts":"1612463376.283100","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"739fe4bc-9733-4654-8d39-8994acc3e53f","type":"message","text":"it's solver dependent based on the number of independent registers required for that method.","user":"U69BL50BF","ts":"1612477849.286200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yAGfg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's solver dependent based on the number of independent registers required for that method."}]}]}],"thread_ts":"1612463376.283100","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"a37a87e2-af27-46ce-81a4-852dc42156de","type":"message","text":"Ok. I guess also depends on the interpolation scheme.","user":"U01H36BUDJB","ts":"1612477897.286400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R8js/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok. I guess also depends on the interpolation scheme."}]}]}],"thread_ts":"1612463376.283100","parent_user_id":"U01H36BUDJB"}]