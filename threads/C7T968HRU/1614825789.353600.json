[{"client_msg_id":"201eac53-5560-4976-bf07-93572a03b8cb","type":"message","text":"<@U6788D83U> Thanks for helping, I need to rewrite the problem since I call this ODE in Turing and consequently the ODE solution is in Dual type which could not be applied to Symmetric().","user":"U01Q398M3QB","ts":"1614825789.353600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SCruQ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6788D83U"},{"type":"text","text":" Thanks for helping, I need to rewrite the problem since I call this ODE in Turing and consequently the ODE solution is in Dual type which could not be applied to Symmetric()."}]}]}],"thread_ts":"1614825789.353600","reply_count":2,"reply_users_count":2,"latest_reply":"1615248592.059300","reply_users":["UQEDP1Q5V","U01Q398M3QB"],"subscribed":false},{"client_msg_id":"af02f64d-7461-4c8f-aec4-087d2bf09dc3","type":"message","text":"What is the issue with Dual numbers and Symmetric?\n```using ForwardDiff\nusing LinearAlgebra\nusing Distributions\nfunction test(x)\n    A = [1.0 x+eps(x);x 1.0]\n    MvNormal(A)\n    y = det(A)\nend\nx = 0.0\ntest(x)\nForwardDiff.derivative(test,x)\n\nfunction test2(x)\n    A = [1.0 x+eps(x);x 1.0]\n    A = Symmetric(A)\n    MvNormal(A)\n    y = det(A)\nend\nx = 0.0\ntest2(x)\nForwardDiff.derivative(test2,x)```\n","user":"UQEDP1Q5V","ts":"1614865353.354700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nYGmo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the issue with Dual numbers and Symmetric?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using ForwardDiff\nusing LinearAlgebra\nusing Distributions\nfunction test(x)\n    A = [1.0 x+eps(x);x 1.0]\n    MvNormal(A)\n    y = det(A)\nend\nx = 0.0\ntest(x)\nForwardDiff.derivative(test,x)\n\nfunction test2(x)\n    A = [1.0 x+eps(x);x 1.0]\n    A = Symmetric(A)\n    MvNormal(A)\n    y = det(A)\nend\nx = 0.0\ntest2(x)\nForwardDiff.derivative(test2,x)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1614825789.353600","parent_user_id":"U01Q398M3QB"},{"type":"message","text":"<@UQEDP1Q5V> Hi! Arno. Thanks a lot and so sorry for a pause. I wrote the code in Turing MCMC function. This Turing will automatically change Float64 type number into ForwarDdiff.dual type. Like in the test 2, I could not call Symmetric(A) while A is ForwardDiff.dual type and this will raise the issue. I also tried GenericLinearAlgebra.Symmetric() from other helpers in <#C6G240ENA|autodiff> . However, it still raise the same error message.","files":[{"id":"F01QL7C6JJF","created":1615248473,"timestamp":1615248473,"name":"using_GenericLinearAlgebra_and_no_ProximalOperators (1).pdf","title":"using_GenericLinearAlgebra_and_no_ProximalOperators (1).pdf","mimetype":"application/pdf","filetype":"pdf","pretty_type":"PDF","user":"U01Q398M3QB","editable":false,"size":51723,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01QL7C6JJF/using_genericlinearalgebra_and_no_proximaloperators__1_.pdf","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01QL7C6JJF/download/using_genericlinearalgebra_and_no_proximaloperators__1_.pdf","thumb_pdf":"https://files.slack.com/files-tmb/T68168MUP-F01QL7C6JJF-3e289e3cc5/using_genericlinearalgebra_and_no_proximaloperators__1__thumb_pdf.png","thumb_pdf_w":935,"thumb_pdf_h":1210,"permalink":"https://julialang.slack.com/files/U01Q398M3QB/F01QL7C6JJF/using_genericlinearalgebra_and_no_proximaloperators__1_.pdf","permalink_public":"https://slack-files.com/T68168MUP-F01QL7C6JJF-548b51c02c","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"D3i8","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UQEDP1Q5V"},{"type":"text","text":" Hi! Arno. Thanks a lot and so sorry for a pause. I wrote the code in Turing MCMC function. This Turing will automatically change Float64 type number into ForwarDdiff.dual type. Like in the test 2, I could not call Symmetric(A) while A is ForwardDiff.dual type and this will raise the issue. I also tried GenericLinearAlgebra.Symmetric() from other helpers in "},{"type":"channel","channel_id":"C6G240ENA"},{"type":"text","text":" . However, it still raise the same error message."}]}]}],"user":"U01Q398M3QB","display_as_bot":false,"ts":"1615248592.059300","thread_ts":"1614825789.353600","parent_user_id":"U01Q398M3QB"}]