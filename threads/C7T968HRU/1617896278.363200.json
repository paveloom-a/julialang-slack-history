[{"client_msg_id":"c66c831c-58bd-4157-a379-1b2f7fb73904","type":"message","text":"Do you know precisely the equation and just want to fit the parameters?","user":"U69BL50BF","ts":"1617896278.363200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f2faw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you know precisely the equation and just want to fit the parameters?"}]}]}],"thread_ts":"1617896278.363200","reply_count":19,"reply_users_count":2,"latest_reply":"1617971965.373900","reply_users":["URPFQPSEQ","U69BL50BF"],"is_locked":false,"subscribed":false},{"client_msg_id":"2183d80a-3326-4c0e-b708-d3aa51fadfee","type":"message","text":"No, there is no known equation behind it. We build the spring and measure it. The alternative would be to use nonlinear FEM to solve the elasticity problem but even then you just get numbers, no equation.. for the simulation only the numbers are needed.... but we follow more a build and test oriented approach.","user":"URPFQPSEQ","ts":"1617968170.369500","team":"T68168MUP","edited":{"user":"URPFQPSEQ","ts":"1617968403.000000"},"blocks":[{"type":"rich_text","block_id":"n1E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, there is no known equation behind it. We build the spring and measure it. The alternative would be to use nonlinear FEM to solve the elasticity problem but even then you just get numbers, no equation.. for the simulation only the numbers are needed.... but we follow more a build and test oriented approach."}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"40fe2be4-1f56-419e-9ab9-a0be785b3238","type":"message","text":"so you're trying to train a neural differential equation of sorts?","user":"U69BL50BF","ts":"1617968603.369800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8tDA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you're trying to train a neural differential equation of sorts?"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"f06c3168-e4b5-46b8-b1cd-11565efeb98e","type":"message","text":"well... maybe not the differential equation.. but I need a \"black box\" /lookup-table  that tells me the force/torque of the spring given the relative postion/orientation of the both interfaces of the spring.... this \"box\" I would use in a multi body simulation environment which then solves the equations of motion of the whole system.... so I need just the complicated version of  hookes law: F = k*x","user":"URPFQPSEQ","ts":"1617969039.370000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"71UwX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well... maybe not the differential equation.. but I need a \"black box\" /lookup-table  that tells me the force/torque of the spring given the relative postion/orientation of the both interfaces of the spring.... this \"box\" I would use in a multi body simulation environment which then solves the equations of motion of the whole system.... so I need just the complicated version of  hookes law: F = k*x"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"b8917341-57f2-4813-a841-2c4832b293fd","type":"message","text":"have you tried the physics-informed neural net approach? Or the UDE?","user":"U69BL50BF","ts":"1617969131.370200","team":"T68168MUP","edited":{"user":"U69BL50BF","ts":"1617969144.000000"},"blocks":[{"type":"rich_text","block_id":"r2t2Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"have you tried the physics-informed neural net approach? Or the UDE?"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"78bc108b-3ecc-446b-8f49-31a8da1d3ef2","type":"message","text":"I have no experience with this... do I have to feed this with some trajectories from a dynamic test/simulation... and this gives me a nerual net which mimics the right side of the ODE? ist this the approach you mean?","user":"URPFQPSEQ","ts":"1617969234.370500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wAR0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have no experience with this... do I have to feed this with some trajectories from a dynamic test/simulation... and this gives me a nerual net which mimics the right side of the ODE? ist this the approach you mean?"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"e0510b54-0c64-4946-a87f-100d6b6b68c7","type":"message","text":"<https://arxiv.org/abs/2001.04385>","user":"U69BL50BF","ts":"1617969838.370700","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Universal Differential Equations for Scientific Machine Learning","title_link":"https://arxiv.org/abs/2001.04385","text":"In the context of science, the well-known adage \"a picture is worth a thousand words\" might well be \"a model is worth a thousand datasets.\" Scientific models, such as Newtonian physics or...","fallback":"arXiv.org: Universal Differential Equations for Scientific Machine Learning","from_url":"https://arxiv.org/abs/2001.04385","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/2001.04385"}],"blocks":[{"type":"rich_text","block_id":"z5X","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://arxiv.org/abs/2001.04385"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"3054c741-ee40-4917-9d00-85e1adb83af8","type":"message","text":"or <https://mitmath.github.io/18337/lecture3/sciml.html>","user":"U69BL50BF","ts":"1617969852.371000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2A1o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or "},{"type":"link","url":"https://mitmath.github.io/18337/lecture3/sciml.html"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"2090ac60-0143-4e38-9e13-cad5bab4e0e0","type":"message","text":"you have already hookes law as an example :slightly_smiling_face:","user":"URPFQPSEQ","ts":"1617969965.371200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=bqc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you have already hookes law as an example "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"7113d593-c259-4a60-9581-3d813a850c51","type":"message","text":"yes","user":"U69BL50BF","ts":"1617969972.371400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7208F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"dcd135e9-980c-4a8a-84cd-c0bad99c0352","type":"message","text":"that's why I thought you were asking about PINNs haha","user":"U69BL50BF","ts":"1617969979.371600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ekmzk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's why I thought you were asking about PINNs haha"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"5ec2cb50-6e24-4b04-b995-dc1912df4c9a","type":"message","text":"so in the PINN example you learn F(x) based on a dynamic input (position/velocity)... my example is: I  have samples of F_i(x_i) , because I measure the spring under static conditions. I wondered: can machine learning help me to get an approximation for F(x) without taking a dense grid of measurement points and if yes, how can i choose the measurement points to get a good approximation for F(x)...","user":"URPFQPSEQ","ts":"1617970499.371800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0q0pB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so in the PINN example you learn F(x) based on a dynamic input (position/velocity)... my example is: I  have samples of F_i(x_i) , because I measure the spring under static conditions. I wondered: can machine learning help me to get an approximation for F(x) without taking a dense grid of measurement points and if yes, how can i choose the measurement points to get a good approximation for F(x)..."}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF","reactions":[{"name":"cool","users":["UM8JUNJG7"],"count":1}]},{"client_msg_id":"70a900a3-5233-4faf-b366-5261eeb5b99b","type":"message","text":"It can, but","user":"U69BL50BF","ts":"1617970846.372000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R8XtI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It can, but"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"80a6f1fe-6c04-48f4-bb39-8ca19ec7f001","type":"message","text":"&gt; how can i choose the measurement points to get a good approximation for F(x)","user":"U69BL50BF","ts":"1617970847.372200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yqf2","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"how can i choose the measurement points to get a good approximation for F(x)"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"1a5926ba-d4b0-4bcc-9c8f-ea1a14921dd2","type":"message","text":"That's a really fun question","user":"U69BL50BF","ts":"1617970851.372400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kP84","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's a really fun question"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"7c5be75c-8920-4678-8ec8-8ed7f49e5d02","type":"message","text":"I don't know right now.","user":"U69BL50BF","ts":"1617970853.372600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WRr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know right now."}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"557a908f-f139-4f3e-9b4e-52a2291bd566","type":"message","text":"i guess this is trial and error.... so I would take the measurements and then instead to sort the data which is then used by some interpolation method, i can throw it at a nerual network. If I have a function with 6 inputs and 6 outputs...i need 6 neural networks, each with 6 inputs and 1 output or is there some \"intelligence\" advantage to use one nerual network with 6 inputs AND 6 outputs?","user":"URPFQPSEQ","ts":"1617971688.373000","team":"T68168MUP","edited":{"user":"URPFQPSEQ","ts":"1617971723.000000"},"blocks":[{"type":"rich_text","block_id":"dsvn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i guess this is trial and error.... so I would take the measurements and then instead to sort the data which is then used by some interpolation method, i can throw it at a nerual network. If I have a function with 6 inputs and 6 outputs...i need 6 neural networks, each with 6 inputs and 1 output or is there some \"intelligence\" advantage to use one nerual network with 6 inputs AND 6 outputs?"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"9189d5fd-1a80-49c8-8979-34e2cf66c6d0","type":"message","text":"if it's a truly lower dimensional object (which I think it would be), then it would be better to use a single neural network there.","user":"U69BL50BF","ts":"1617971732.373400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p39","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if it's a truly lower dimensional object (which I think it would be), then it would be better to use a single neural network there."}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"fd59bd04-fb88-42f2-baf6-4bcc5f528307","type":"message","text":"so my naive understaning of a neural network is, that is a sort of \"universal curve fitting model\"...not more not less ?","user":"URPFQPSEQ","ts":"1617971944.373600","team":"T68168MUP","edited":{"user":"URPFQPSEQ","ts":"1617971950.000000"},"blocks":[{"type":"rich_text","block_id":"qQvDa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so my naive understaning of a neural network is, that is a sort of \"universal curve fitting model\"...not more not less ?"}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"},{"client_msg_id":"9422bac1-33ff-4009-9669-1896e64e7044","type":"message","text":"essentially yes.","user":"U69BL50BF","ts":"1617971965.373900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u9E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"essentially yes."}]}]}],"thread_ts":"1617896278.363200","parent_user_id":"U69BL50BF"}]