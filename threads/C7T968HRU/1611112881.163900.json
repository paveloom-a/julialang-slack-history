[{"client_msg_id":"07471eca-64fb-41df-88e6-4f981e690cea","type":"message","text":"assuming that the callbacks are very frequent (every 10steps?) do you think there would be a big performance boost?","user":"UR7P24FRC","ts":"1611112881.163900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oiBeF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"assuming that the callbacks are very frequent (every 10steps?) do you think there would be a big performance boost?"}]}]}],"thread_ts":"1611112881.163900","reply_count":4,"reply_users_count":3,"latest_reply":"1611156665.179200","reply_users":["U01H36BUDJB","U9MD78Z9N","U69BL50BF"],"subscribed":false},{"client_msg_id":"449d9f01-ecce-4c5c-896a-ad2a5176b489","type":"message","text":"I thought `ContinuousCallback` was called only when a function evaluates to zero. I'm sure you could write a function that checks the time and returns zero (or is a periodic function of time), but I think the point of `PresetTimeCallback` is to be more convenient.","user":"U01H36BUDJB","ts":"1611132053.164300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aZGh0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought "},{"type":"text","text":"ContinuousCallback","style":{"code":true}},{"type":"text","text":" was called only when a function evaluates to zero. I'm sure you could write a function that checks the time and returns zero (or is a periodic function of time), but I think the point of "},{"type":"text","text":"PresetTimeCallback","style":{"code":true}},{"type":"text","text":" is to be more convenient."}]}]}],"thread_ts":"1611112881.163900","parent_user_id":"UR7P24FRC"},{"client_msg_id":"73d2d807-bd8b-4b21-80d4-68335e11b863","type":"message","text":"I'm not sure about performance, but my guess would be that `ContinuousCallback` assumes that the function being evaluated is continuous, so using a discontinuous step function might cause problems. Perhaps <@U69BL50BF> can weigh in, though.","user":"U01H36BUDJB","ts":"1611132155.164500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r+w0G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure about performance, but my guess would be that "},{"type":"text","text":"ContinuousCallback","style":{"code":true}},{"type":"text","text":" assumes that the function being evaluated is continuous, so using a discontinuous step function might cause problems. Perhaps "},{"type":"user","user_id":"U69BL50BF"},{"type":"text","text":" can weigh in, though."}]}]}],"thread_ts":"1611112881.163900","parent_user_id":"UR7P24FRC"},{"type":"message","text":" `Continous Callbacks` always involve a root finding process to find the stop time. If you know the stop time ahead of time is quicker.\nAs for how much? That depends much on your problem and solver (degree of interpolation). Since  it's almost a one line change, just benchmark it.","user":"U9MD78Z9N","ts":"1611132672.164700","team":"T68168MUP","thread_ts":"1611112881.163900","parent_user_id":"UR7P24FRC","reactions":[{"name":"+1","users":["UR75SQMCZ"],"count":1}]},{"client_msg_id":"5244c2eb-397f-4d48-b61d-258511187be0","type":"message","text":"&gt; I'm not sure about performance, but my guess would be that `ContinuousCallback` assumes that the function being evaluated is continuous, so using a discontinuous step function might cause problems.\nYes, if you know where the discontinuity is, just say where it is. It's more correct and faster than using rootfinding for it.","user":"U69BL50BF","ts":"1611156665.179200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"En/","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I'm not sure about performance, but my guess would be that "},{"type":"text","text":"ContinuousCallback","style":{"code":true}},{"type":"text","text":" assumes that the function being evaluated is continuous, so using a discontinuous step function might cause problems."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, if you know where the discontinuity is, just say where it is. It's more correct and faster than using rootfinding for it."}]}]}],"thread_ts":"1611112881.163900","parent_user_id":"UR7P24FRC"}]