[{"type":"message","subtype":"bot_message","text":"New here and not sure if I am right here with this question, but I am trying to create an `ODESystem` in  `ModelingToolkit.jl` using a for loop like so: ``` parnames = [\"k1\", \"k2\"] for parname in parnames        @parameters parname end  k1 ERROR: UndefVarError: k1 not defined ```  I think this is wrong on several levels (including for loop scoping). Does anyone have an idea how I can use strings with the `@parameter` macro in a for loop (or otherwise know where to ask this question best)? Thanks!","ts":"1612906415.397800","username":"[gitter] <paulflang>","bot_id":"B795XHD0X","thread_ts":"1612906415.397800","reply_count":3,"reply_users_count":2,"latest_reply":"1612910702.399000","reply_users":["U01H36BUDJB","U69BL50BF"],"subscribed":false,"blocks":[{"type":"section","block_id":"matterbridge_c05cuukg27ibs0bi3tjg","text":{"type":"mrkdwn","text":"New here and not sure if I am right here with this question, but I am trying to create an `ODESystem` in  `ModelingToolkit.jl` using a for loop like so:\n```\nparnames = [\"k1\", \"k2\"]\nfor parname in parnames\n       @parameters parname\nend\n\nk1\nERROR: UndefVarError: k1 not defined\n```\n\nI think this is wrong on several levels (including for loop scoping). Does anyone have an idea how I can use strings with the `@parameter` macro in a for loop (or otherwise know where to ask this question best)?\nThanks!","verbatim":false}}]},{"client_msg_id":"4612499f-cab0-4373-a698-0ec54ecf359e","type":"message","text":"There are a few solutions. One would be to use the direct API rather than the macros (i.e. just directly create parameter types). Another would be to do `ps = @parameters parname` and then append `ps` to an outer list. And finally, you could also make the loop a generator `((@parameters parname)[1] for parname in parnames)` and evaluate the generator to get your list of parameter terms.","user":"U01H36BUDJB","ts":"1612907495.398000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XFC50","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There are a few solutions. One would be to use the direct API rather than the macros (i.e. just directly create parameter types). Another would be to do "},{"type":"text","text":"ps = @parameters parname","style":{"code":true}},{"type":"text","text":" and then append "},{"type":"text","text":"ps","style":{"code":true}},{"type":"text","text":" to an outer list. And finally, you could also make the loop a generator "},{"type":"text","text":"((@parameters parname)[1] for parname in parnames)","style":{"code":true}},{"type":"text","text":" and evaluate the generator to get your list of parameter terms."}]}]}],"thread_ts":"1612906415.397800"},{"client_msg_id":"ec59c300-be96-468a-8cd0-910f7c5fe6ab","type":"message","text":"Also you could just do\n`ps = @parameters k1 k2`\nand then k1,k2 will be declared in the local scope and `ps` will be a tuple holding both of them.","user":"U01H36BUDJB","ts":"1612907579.398200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HbTm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also you could just do\n"},{"type":"text","text":"ps = @parameters k1 k2","style":{"code":true}},{"type":"text","text":"\nand then k1,k2 will be declared in the local scope and "},{"type":"text","text":"ps","style":{"code":true}},{"type":"text","text":" will be a tuple holding both of them."}]}]}],"thread_ts":"1612906415.397800"},{"client_msg_id":"f47fac5e-593d-4430-be75-397566a865a4","type":"message","text":"yeah the direct API is probably best for using MTK in a loop","user":"U69BL50BF","ts":"1612910702.399000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Oiq/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah the direct API is probably best for using MTK in a loop"}]}]}],"thread_ts":"1612906415.397800"}]