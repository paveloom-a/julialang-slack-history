[{"client_msg_id":"ab23b862-f56f-447e-935c-6e63907cdcd8","type":"message","text":"I am currently working on a function which converts a `VersionSpec` into a string suitable for use in Project.toml compat entries, at least when possible, i.e., a (partial) inverse to `semver_spec`. The goal is to use this in BinaryBuilder when generating JLL wrappers; that means it needs to be compatible with Julia 1.0, so I can't output `X - Y` ranges, hence I don't think I'll be able to convert all possible `VersionSpec` values; but that's OK, I believe that in almost all real world use cases the input will be of the form `VersionSpec(\"1.2\")` anyway. I've done some work on it already, but I just was wondering if something like this perhaps already exists somewhere, and thus could safe me some work","user":"U012FH66MFW","ts":"1610407341.049300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GR+pb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am currently working on a function which converts a "},{"type":"text","text":"VersionSpec","style":{"code":true}},{"type":"text","text":" into a string suitable for use in Project.toml compat entries, at least when possible, i.e., a (partial) inverse to "},{"type":"text","text":"semver_spec","style":{"code":true}},{"type":"text","text":". The goal is to use this in BinaryBuilder when generating JLL wrappers; that means it needs to be compatible with Julia 1.0, so I can't output "},{"type":"text","text":"X - Y","style":{"code":true}},{"type":"text","text":" ranges, hence I don't think I'll be able to convert all possible "},{"type":"text","text":"VersionSpec","style":{"code":true}},{"type":"text","text":" values; but that's OK, I believe that in almost all real world use cases the input will be of the form "},{"type":"text","text":"VersionSpec(\"1.2\")","style":{"code":true}},{"type":"text","text":" anyway. I've done some work on it already, but I just was wondering if something like this perhaps already exists somewhere, and thus could safe me some work"}]}]}],"thread_ts":"1610407341.049300","reply_count":2,"reply_users_count":2,"latest_reply":"1610412137.052400","reply_users":["U67SCG4HG","U012FH66MFW"],"subscribed":false},{"client_msg_id":"b798a390-5793-497d-b130-48f9b5517c1a","type":"message","text":"This exists in <https://github.com/GunnarFarneback/PackageCompatUI.jl> IIRC","user":"U67SCG4HG","ts":"1610407857.049400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rAho0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This exists in "},{"type":"link","url":"https://github.com/GunnarFarneback/PackageCompatUI.jl"},{"type":"text","text":" IIRC"}]}]}],"thread_ts":"1610407341.049300","parent_user_id":"U012FH66MFW"},{"client_msg_id":"eb4843cf-0c62-4e3f-9707-b7b95e0c0d46","type":"message","text":"hmm, that doesn't seem to work on `VersionSpec`, though, instead on lists of `VersionNumber` specs which it then somehow merges...","user":"U012FH66MFW","ts":"1610412137.052400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A8vxf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm, that doesn't seem to work on "},{"type":"text","text":"VersionSpec","style":{"code":true}},{"type":"text","text":", though, instead on lists of "},{"type":"text","text":"VersionNumber","style":{"code":true}},{"type":"text","text":" specs which it then somehow merges..."}]}]}],"thread_ts":"1610407341.049300","parent_user_id":"U012FH66MFW"}]