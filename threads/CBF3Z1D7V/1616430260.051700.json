[{"client_msg_id":"84189cc5-b1b2-4f7f-a741-afaa325fc4a3","type":"message","text":"My experience is that packages sometimes are breaking (particularly when pre-v1.0), and the current specifier then forces mass downgrades in the ecosystem if I install an unmaintained package","user":"U67BXBF99","ts":"1616430260.051700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u7ii","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My experience is that packages sometimes are breaking (particularly when pre-v1.0), and the current specifier then forces mass downgrades in the ecosystem if I install an unmaintained package"}]}]}],"thread_ts":"1616430260.051700","reply_count":37,"reply_users_count":3,"latest_reply":"1616442631.097900","reply_users":["U67D54KS8","UDB26738Q","U67BXBF99"],"subscribed":false,"reactions":[{"name":"heavy_check_mark","users":["UGU761DU2"],"count":1}]},{"type":"message","subtype":"thread_broadcast","text":"And what about when `DataFrames` releases 2.0 with a bunch of breakage and suddenly every package is broken by default for a new user?","user":"U67D54KS8","ts":"1616432006.060600","thread_ts":"1616430260.051700","root":{"client_msg_id":"84189cc5-b1b2-4f7f-a741-afaa325fc4a3","type":"message","text":"My experience is that packages sometimes are breaking (particularly when pre-v1.0), and the current specifier then forces mass downgrades in the ecosystem if I install an unmaintained package","user":"U67BXBF99","ts":"1616430260.051700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u7ii","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My experience is that packages sometimes are breaking (particularly when pre-v1.0), and the current specifier then forces mass downgrades in the ecosystem if I install an unmaintained package"}]}]}],"thread_ts":"1616430260.051700","reply_count":37,"reply_users_count":3,"latest_reply":"1616442631.097900","reply_users":["U67D54KS8","UDB26738Q","U67BXBF99"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"r00","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And what about when "},{"type":"text","text":"DataFrames","style":{"code":true}},{"type":"text","text":" releases 2.0 with a bunch of breakage and suddenly every package is broken by default for a new user?"}]}]}],"client_msg_id":"7517d60a-6960-4a89-ad91-c446e44ea47c","edited":{"user":"U67D54KS8","ts":"1616432094.000000"},"reactions":[{"name":"+1","users":["U7THT3TM3","U6795JH6H"],"count":2}]},{"client_msg_id":"87e404c9-677c-4bd9-81fe-8adef4a62bd1","type":"message","text":"or JLLWrappers :smiling_imp:","user":"UDB26738Q","ts":"1616432114.062000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ojCX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or JLLWrappers "},{"type":"emoji","name":"smiling_imp"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99","reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"3f635015-73d6-44f7-9718-bb6ae6e54a16","type":"message","text":"Sure, but what happens when it releases 2.0, and some unmaintained package which didn’t actually care, then causes everything to downgrade","user":"U67BXBF99","ts":"1616433636.063000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xBM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure, but what happens when it releases 2.0, and some unmaintained package which didn’t actually care, then causes everything to downgrade"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"2bbf0148-952e-4736-b596-4d4f1a5456da","type":"message","text":"Then you would have to use the unmaintained package with the lower DataFrames version (where it works).","user":"U67D54KS8","ts":"1616433678.063200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ygw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Then you would have to use the unmaintained package with the lower DataFrames version (where it works)."}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"01af6564-a713-45fd-92a4-9e9e53cc7171","type":"message","text":"But since those packages probably weren’t tested with old combinations either, now lots of old bugs suddenly reappear, while Pkg.update reports everything is great","user":"U67BXBF99","ts":"1616433681.063400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Md4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But since those packages probably weren’t tested with old combinations either, now lots of old bugs suddenly reappear, while Pkg.update reports everything is great"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"9e619cad-1b8c-4d60-829a-66d6cc9fe619","type":"message","text":"But the observation is that it doesn’t work, so some associated dependency had published a new version to fix those bugs","user":"U67BXBF99","ts":"1616433747.063600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ULar4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But the observation is that it doesn’t work, so some associated dependency had published a new version to fix those bugs"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"f849c926-0983-4635-a578-22d4c9f7e021","type":"message","text":"Since when old versions of packages fail tests, e.g. on PkgEval, we don’t correct their compat bounds","user":"U67BXBF99","ts":"1616433802.063800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YCPd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Since when old versions of packages fail tests, e.g. on PkgEval, we don’t correct their compat bounds"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"dc15d7d4-23fa-4889-9766-396e72afb17e","type":"message","text":"We only seem to maintain the list as a snapshot of the last release of the package","user":"U67BXBF99","ts":"1616433852.064000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+S+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We only seem to maintain the list as a snapshot of the last release of the package"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"fb013da1-5714-4e72-93dd-e593fea5853e","type":"message","text":"Assuming that packages only use public APIs and that breaking public APIs are coupled with a semver breaking package bump, you should only be in a state where all packages work with each other. Clearly, this doesn't happen in practice but I don't think it is at the level where getting rid of `compat` completely is a better state of affairs.","user":"U67D54KS8","ts":"1616433940.064200","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616433957.000000"},"blocks":[{"type":"rich_text","block_id":"MMPyI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Assuming that packages only use public APIs and that breaking public APIs are coupled with a semver breaking package bump, you should only be in a state where all packages work with each other. Clearly, this doesn't happen in practice but I don't think it is at the level where getting rid of "},{"type":"text","text":"compat","style":{"code":true}},{"type":"text","text":" completely is a better state of affairs."}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"c3c01869-127f-41e2-b111-e62bd1c13cf3","type":"message","text":"The case where a popular package releases a breaking version and every single user ends up in a broken state after a `Pkg.update` seems a lot worse.","user":"U67D54KS8","ts":"1616433983.064500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LJg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The case where a popular package releases a breaking version and every single user ends up in a broken state after a "},{"type":"text","text":"Pkg.update","style":{"code":true}},{"type":"text","text":" seems a lot worse."}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99","reactions":[{"name":"100","users":["U6795JH6H"],"count":1},{"name":"point_up","users":["U6795JH6H"],"count":1}]},{"client_msg_id":"2ec9b1db-cc8d-4603-b953-1d808acb7f61","type":"message","text":"Fortunately, removing all `compat` is really easy to add to Pkg. I should just finish <https://github.com/JuliaLang/Pkg.jl/pull/1607> and merge it and everyone can remove `compat` to their hearts content.","user":"U67D54KS8","ts":"1616434076.065400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8t/e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Fortunately, removing all "},{"type":"text","text":"compat","style":{"code":true}},{"type":"text","text":" is really easy to add to Pkg. I should just finish "},{"type":"link","url":"https://github.com/JuliaLang/Pkg.jl/pull/1607"},{"type":"text","text":" and merge it and everyone can remove "},{"type":"text","text":"compat","style":{"code":true}},{"type":"text","text":" to their hearts content."}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"9c12aa29-81a8-4e3c-ba7d-1bc38171872a","type":"message","text":"I agree, it is also the case that `NLopt` didn’t fix their compat bounds, to ensure the old version was uninstallable on new Julia releases after the bug was fixed in a newer release version","user":"U67BXBF99","ts":"1616434242.067000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hFwo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree, it is also the case that "},{"type":"text","text":"NLopt","style":{"code":true}},{"type":"text","text":" didn’t fix their compat bounds, to ensure the old version was uninstallable on new Julia releases after the bug was fixed in a newer release version"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"c0ff95d2-4223-4b81-8fe9-6fa7bbe08913","type":"message","text":"Yes, I've also run into the NLopt thing when looking at PkgEval logs heh. So I know your pain :wink:","user":"U67D54KS8","ts":"1616434285.067200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m9uL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, I've also run into the NLopt thing when looking at PkgEval logs heh. So I know your pain "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"c088557f-6f53-422e-b919-2aceed9b537a","type":"message","text":"But that seems like a concrete fixable thing","user":"U67D54KS8","ts":"1616434311.067400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ozhv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But that seems like a concrete fixable thing"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"33515d34-6ebe-4fdb-9080-d9b9f4e6b415","type":"message","text":"It just seems non-trivial to expect package authors to know about that","user":"U67BXBF99","ts":"1616434312.067600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G+B7L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It just seems non-trivial to expect package authors to know about that"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"5a429a29-c8b8-4cfb-be79-219a88572f74","type":"message","text":"So because there exists an old NLopt that doesn't work with a new version of Julia AND there exists packages that upper bounds NLopt to that version,we should get rid of `compat`?","user":"U67D54KS8","ts":"1616434382.068700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bFx4n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So because there exists an old NLopt that doesn't work with a new version of Julia AND there exists packages that upper bounds NLopt to that version,we should get rid of "},{"type":"text","text":"compat","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"b5029012-d634-45ae-aa13-80098afd7411","type":"message","text":"I don’t know what I’m proposing, I’m trying to state a problem and discussion solutions","user":"U67BXBF99","ts":"1616434596.070200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LBscW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t know what I’m proposing, I’m trying to state a problem and discussion solutions"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"15debfdd-d773-4dc1-8da8-e8c78f30d710","type":"message","text":"I think the solution for situations like the one with NLopt is to just fix the registry","user":"U67D54KS8","ts":"1616434642.070400","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616434691.000000"},"blocks":[{"type":"rich_text","block_id":"HbK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the solution for situations like the one with NLopt is to just fix the registry"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"af8ad508-dafb-47cc-a90b-2a4ecb3e3f94","type":"message","text":"My current observation was that because packages don’t follow semver (particularly pre-v1) AND there doesn’t exist a mechanism by which the registry gets maintained for many packages (those without Dependabot or similar), we should change the default for `compat` to assume they aren’t upper-bounded","user":"U67BXBF99","ts":"1616434714.070900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dT+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My current observation was that because packages don’t follow semver (particularly pre-v1) AND there doesn’t exist a mechanism by which the registry gets maintained for many packages (those without Dependabot or similar), we should change the default for "},{"type":"text","text":"compat","style":{"code":true}},{"type":"text","text":" to assume they aren’t upper-bounded"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"26194cb4-1245-4753-8559-e7ffe17a0568","type":"message","text":"My observation/argument is that they already assume they aren’t upper-bounded (or lower-bounded) if you remove compat","user":"U67BXBF99","ts":"1616434743.071100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kCIl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My observation/argument is that they already assume they aren’t upper-bounded (or lower-bounded) if you remove compat"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"ecf9b441-e04d-4913-afc4-113d5684d992","type":"message","text":"So it punishes users who want to use `compat` bounds, as it skews the ecosystem towards preferring older, buggier releases","user":"U67BXBF99","ts":"1616434775.071300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rmyjj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So it punishes users who want to use "},{"type":"text","text":"compat","style":{"code":true}},{"type":"text","text":" bounds, as it skews the ecosystem towards preferring older, buggier releases"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"12f71f90-5ec3-4770-aa5d-64adf995b49f","type":"message","text":"&gt; So it punishes users who want to use compat bounds\nI don't think you'll find many packages without compat bounds in the registry","user":"UDB26738Q","ts":"1616434834.071500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SdK+f","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"So it punishes users who want to use compat bounds"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI don't think you'll find many packages without compat bounds in the registry"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"bb889146-60bc-4c88-8dce-c0fbf426e0b7","type":"message","text":"Ah good. Though the key requirement is that there should not be many package _versions_ without compat bounds","user":"U67BXBF99","ts":"1616434905.072200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VObcj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah good. Though the key requirement is that there should not be many package "},{"type":"text","text":"versions","style":{"italic":true}},{"type":"text","text":" without compat bounds"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"15412829-cadc-4431-b69f-7200cd74cc97","type":"message","text":"Otherwise, when DataFrames v2 comes out, the user might be surprised when we “solve” the compat bounds by picking some ancient v0 release of everything else","user":"U67BXBF99","ts":"1616434948.073200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PN/i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Otherwise, when DataFrames v2 comes out, the user might be surprised when we “solve” the compat bounds by picking some ancient v0 release of everything else"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"e24df355-cdbf-489d-95bf-743ff7da7513","type":"message","text":"automerge requires compat bounds (as you've seen in the BenchmarkTools PR) and 99.99% of the times I personally don't manually merge PRs without compat bounds","user":"UDB26738Q","ts":"1616435005.074400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"09d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"automerge requires compat bounds (as you've seen in the BenchmarkTools PR) and 99.99% of the times I personally don't manually merge PRs without compat bounds"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"b24741d2-2611-417e-b959-ae1db10f6391","type":"message","text":"Ah, so this is perhaps mostly an issue for old releases?","user":"U67BXBF99","ts":"1616435124.076100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1sE2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, so this is perhaps mostly an issue for old releases?"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"ddc1cf7d-81ff-432e-ba5b-8312971de243","type":"message","text":"Could we script a one-time update that retroactively add compat bounds for deprecated releases?","user":"U67BXBF99","ts":"1616435170.076400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pWqQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could we script a one-time update that retroactively add compat bounds for deprecated releases?"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"3b66fda5-2a17-4232-aeca-22d463377fba","type":"message","text":"<https://github.com/JuliaRegistries/RetroCap.jl>","user":"UDB26738Q","ts":"1616435218.077600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YL1","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaRegistries/RetroCap.jl"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"d67d5fc4-1f0f-4575-9f94-cf232885a52d","type":"message","text":"and it was already used: <https://github.com/JuliaRegistries/General/pulls?q=is%3Apr+retrocap+>","user":"UDB26738Q","ts":"1616435269.079000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=fh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it was already used: "},{"type":"link","url":"https://github.com/JuliaRegistries/General/pulls?q=is%3Apr+retrocap+"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"0c15c9a0-9720-4e9c-ad7e-866cfb1f07e7","type":"message","text":"ah, okay","user":"U67BXBF99","ts":"1616435366.080600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FhD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, okay"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"044d5712-24d8-4b93-a626-c98b3261c5cc","type":"message","text":"What is allowing NLopt / EfficientGlobalOptimization to claim compatibility with Julia master then, when it is actually known to be broken?","user":"U67BXBF99","ts":"1616435481.082700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xGo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is allowing NLopt / EfficientGlobalOptimization to claim compatibility with Julia master then, when it is actually known to be broken?"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"c507c8b0-9a3a-47e7-a5f9-84a7545b3d41","type":"message","text":"How do we fix that?","user":"U67BXBF99","ts":"1616435487.083000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7OFbJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do we fix that?"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"2f734b0e-67eb-4686-9df4-bbfcb88421c6","type":"message","text":"(and RCA: how to keep it from happening much again)","user":"U67BXBF99","ts":"1616435509.084000","team":"T68168MUP","edited":{"user":"U67BXBF99","ts":"1616435516.000000"},"blocks":[{"type":"rich_text","block_id":"FrkMU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and RCA: how to keep it from happening much again)"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"23f6dced-73e7-42f5-a02a-c2caecad2190","type":"message","text":"Also, this seems like such an awkward situation: <https://github.com/JuliaIO/JSON.jl/pull/310#issuecomment-688351796>","user":"U67BXBF99","ts":"1616436072.090600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UBe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, this seems like such an awkward situation: "},{"type":"link","url":"https://github.com/JuliaIO/JSON.jl/pull/310#issuecomment-688351796"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"51acef84-2a21-4e74-9b28-41e524088bfd","type":"message","text":"&gt; Also, this seems like such an awkward situation: <https://github.com/JuliaIO/JSON.jl/pull/310#issuecomment-688351796>\nThe way that is solved is by (in the same PR that one goes from 0.x to 1.0 without breaking changes) is to also bump everything that curently upper bounds JSON to 0.x to allow 1.0.","user":"U67D54KS8","ts":"1616441862.097000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/QTY","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Also, this seems like such an awkward situation: "},{"type":"link","url":"https://github.com/JuliaIO/JSON.jl/pull/310#issuecomment-688351796"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThe way that is solved is by (in the same PR that one goes from 0.x to 1.0 without breaking changes) is to also bump everything that curently upper bounds JSON to 0.x to allow 1.0."}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"0926e05c-635b-41a1-be70-6efd69377b4f","type":"message","text":"&gt; What is allowing NLopt / EfficientGlobalOptimization to claim compatibility with Julia master then, when it is actually known to be broken?\nBecause NLopt had a bug that caused it to segfault for later Julias. This was clearly unknown when the compat was claimed so has to be adjusted after the fact.","user":"U67D54KS8","ts":"1616441916.097200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VyoG","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"What is allowing NLopt / EfficientGlobalOptimization to claim compatibility with Julia master then, when it is actually known to be broken?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nBecause NLopt had a bug that caused it to segfault for later Julias. This was clearly unknown when the compat was claimed so has to be adjusted after the fact."}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"},{"client_msg_id":"8761cc91-7a21-4fe2-b5ec-b24921771124","type":"message","text":"Doesn’t that JSON PR also need to update all of the dependent repositories with a new bugfix release?","user":"U67BXBF99","ts":"1616442631.097900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=bwd3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Doesn’t that JSON PR also need to update all of the dependent repositories with a new bugfix release?"}]}]}],"thread_ts":"1616430260.051700","parent_user_id":"U67BXBF99"}]