[{"client_msg_id":"836089a0-92a4-4285-9619-a909ef2b4837","type":"message","text":"Regarding slow files on windows e.g. with registry update: <https://gregoryszorc.com/blog/2021/04/06/surprisingly-slow/>\n\n&gt; Closing File Handles on Windows\n&gt; ...\n&gt; While I didn't realize it at the time, the cause for this was/is Windows Defender. Windows Defender (and other anti-virus / scanning software) typically work on Windows by installing what's called a filesystem filter driver. This is a kernel driver that essentially hooks itself into the kernel and receives callbacks on I/O and filesystem events. It turns out the close file callback triggers scanning of written data. And this scanning appears to occur synchronously, blocking CloseHandle() from returning. This adds milliseconds of overhead. The net effect is that file mutation I/O on Windows is drastically reduced by Windows Defender and other A/V scanners.\n&gt; \n&gt; As far as I can tell, as long as Windows Defender (and presumably other A/V scanners) are running, there's no way to make the Windows I/O APIs consistently fast. You can disable A/V scanning (at your own peril). But the trick that Mercurial employs (which has later been emulated by rustup among other tools) is to use a thread pool for calling CloseHandle(). Even if you perform all file open and write I/O on a single thread and use a background thread pool only for calling CloseHandle(), you can see a &gt;3x speedup in time to write files. This optimization should ideally be employed by any software that creates or mutates as little as a few hundred files on Windows.\n&gt; Fun fact: rustup can extract tar files on Windows faster than open source and commercial fast extraction/copy tools because it employs this trick and more. I believe rustup on Windows is actually faster at extracting tar archives than it is on Linux!","user":"U67D54KS8","ts":"1617864954.178800","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1617864988.000000"},"blocks":[{"type":"rich_text","block_id":"WlU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Regarding slow files on windows e.g. with registry update: "},{"type":"link","url":"https://gregoryszorc.com/blog/2021/04/06/surprisingly-slow/"},{"type":"text","text":"\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Closing File Handles on Windows\n...\nWhile I didn't realize it at the time, the cause for this was/is Windows Defender. Windows Defender (and other anti-virus / scanning software) typically work on Windows by installing what's called a filesystem filter driver. This is a kernel driver that essentially hooks itself into the kernel and receives callbacks on I/O and filesystem events. It turns out the close file callback triggers scanning of written data. And this scanning appears to occur synchronously, blocking CloseHandle() from returning. This adds milliseconds of overhead. The net effect is that file mutation I/O on Windows is drastically reduced by Windows Defender and other A/V scanners.\n\nAs far as I can tell, as long as Windows Defender (and presumably other A/V scanners) are running, there's no way to make the Windows I/O APIs consistently fast. You can disable A/V scanning (at your own peril). But the trick that Mercurial employs (which has later been emulated by rustup among other tools) is to use a thread pool for calling CloseHandle(). Even if you perform all file open and write I/O on a single thread and use a background thread pool only for calling CloseHandle(), you can see a >3x speedup in time to write files. This optimization should ideally be employed by any software that creates or mutates as little as a few hundred files on Windows.\nFun fact: rustup can extract tar files on Windows faster than open source and commercial fast extraction/copy tools because it employs this trick and more. I believe rustup on Windows is actually faster at extracting tar archives than it is on Linux!"}]}]}],"thread_ts":"1617864954.178800","reply_count":1,"reply_users_count":1,"latest_reply":"1617889119.179200","reply_users":["U67BJLYCS"],"is_locked":false,"subscribed":false,"reactions":[{"name":"picard_facepalm","users":["U6795JH6H","UGU761DU2","U9VG1AYSG"],"count":3}]},{"client_msg_id":"b610f8cf-d84b-473b-814e-af0eba6617a4","type":"message","text":"We could maybe use `@threadccall` then :)","user":"U67BJLYCS","ts":"1617889119.179200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"auByf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We could maybe use "},{"type":"text","text":"@threadccall","style":{"code":true}},{"type":"text","text":" then :)"}]}]}],"thread_ts":"1617864954.178800","parent_user_id":"U67D54KS8"}]