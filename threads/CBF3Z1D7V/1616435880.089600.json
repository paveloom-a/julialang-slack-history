[{"client_msg_id":"e6705b57-623e-447b-b87a-8b1bd77635f4","type":"message","text":"compat bounds only need to be updated when someone tags a breaking release, which shouldn’t be that often. But I think many people (like Jameson, ref <https://github.com/JuliaRegistries/General/pull/32561#issuecomment-804266045>) don’t understand when they are tagging a breaking release or not, so it ends up happening way too much. So there’s at least some kind of docs/knowledge issue. But I don’t think the solution is remove compat.","user":"UCZ7VBGUD","ts":"1616435880.089600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VuG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"compat bounds only need to be updated when someone tags a breaking release, which shouldn’t be that often. But I think many people (like Jameson, ref "},{"type":"link","url":"https://github.com/JuliaRegistries/General/pull/32561#issuecomment-804266045"},{"type":"text","text":") don’t understand when they are tagging a breaking release or not, so it ends up happening way too much. So there’s at least some kind of docs/knowledge issue. But I don’t think the solution is remove compat."}]}]}],"thread_ts":"1616435880.089600","reply_count":11,"reply_users_count":3,"latest_reply":"1616448493.103200","reply_users":["UCZ7VBGUD","UGU761DU2","U6795JH6H"],"subscribed":false,"reactions":[{"name":"+1","users":["U7THT3TM3","UGU761DU2"],"count":2}]},{"client_msg_id":"0f66f997-f1dc-4286-bbea-2599e180a4e2","type":"message","text":"I think <https://julialang.slack.com/archives/CBF3Z1D7V/p1616431382057900> could probably help more effectively than docs though","user":"UCZ7VBGUD","ts":"1616435898.089700","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/CBF3Z1D7V/p1616431382057900","fallback":"[March 22nd, 2021 9:43 AM] erich404: I think maybe we should make package authors give confirmation that they intend to make a breaking release when registering the new version of their package. “Do you mean to make a breaking release? Thumbs-up react for yes and registration will proceed. Otherwise please update the version in your Project.toml and re-trigger registration.” Because I think there are spurious non-breaking releases which are versioned as breaking which causes these problems. (Like bugfixes being marked as breaking). A breaking release should be a big deal and shouldn’t be regarded as “well let’s tag it as breaking to be safe” since that causes a problems too.","ts":"1616431382.057900","author_id":"UCZ7VBGUD","author_subname":"Eric Hanson","channel_id":"CBF3Z1D7V","channel_name":"pkg-dev","is_msg_unfurl":true,"text":"I think maybe we should make package authors give confirmation that they intend to make a breaking release when registering the new version of their package. “Do you mean to make a breaking release? Thumbs-up react for yes and registration will proceed. Otherwise please update the version in your Project.toml and re-trigger registration.” Because I think there are spurious non-breaking releases which are versioned as breaking which causes these problems. (Like bugfixes being marked as breaking). A breaking release should be a big deal and shouldn’t be regarded as “well let’s tag it as breaking to be safe” since that causes a problems too.","author_name":"Eric Hanson","author_link":"https://julialang.slack.com/team/UCZ7VBGUD","author_icon":"https://avatars.slack-edge.com/2020-06-19/1180364446567_d7522fa720e84835b9f8_48.png","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/CBF3Z1D7V/p1616431382057900","footer":"Posted in #pkg-dev"}],"blocks":[{"type":"rich_text","block_id":"38DRm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think "},{"type":"link","url":"https://julialang.slack.com/archives/CBF3Z1D7V/p1616431382057900"},{"type":"text","text":" could probably help more effectively than docs though"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["U7THT3TM3","UGU761DU2"],"count":2}]},{"client_msg_id":"ab37708d-8fe4-4dd9-a54c-d9fb0093233c","type":"message","text":"That makes sense. I think the other underlying problem (for which I don’t know if there’s really any technical solution) is that breaking-ness is treated as binary, when really it’s more of a spectrum","user":"UGU761DU2","ts":"1616436343.092500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"21aUN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That makes sense. I think the other underlying problem (for which I don’t know if there’s really any technical solution) is that breaking-ness is treated as binary, when really it’s more of a spectrum"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"0463acc2-399e-4441-b718-1c772afc369f","type":"message","text":"(i.e., in what percentage of cases will something depending on this break — and the answer is never really 0 unless the release is provably bug-free)","user":"UGU761DU2","ts":"1616436398.093200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h92","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(i.e., in what percentage of cases will something depending on this break — and the answer is never really 0 unless the release is provably bug-free)"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"100d8276-8826-428b-a7b6-0c417c9e7d53","type":"message","text":"yeah, to have a good definition of breaking depends on having a well-specified public API, and many packages don’t have a very clear public API. BenchmarkTools actually does have a document laying out the API though","user":"UCZ7VBGUD","ts":"1616436667.093400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0jq3C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, to have a good definition of breaking depends on having a well-specified public API, and many packages don’t have a very clear public API. BenchmarkTools actually does have a document laying out the API though"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UGU761DU2","U7THT3TM3"],"count":2}]},{"client_msg_id":"6ed4f89c-c445-4b1d-a8b9-5232b1a12f87","type":"message","text":"but technically adding a bug doesn’t count as “breaking”; that’s just a bug, which should be fixed. But “breaking” means you are changing the public API in a backwards incompatible way.","user":"UCZ7VBGUD","ts":"1616436724.093700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cjhl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but technically adding a bug doesn’t count as “breaking”; that’s just a bug, which should be fixed. But “breaking” means you are changing the public API in a backwards incompatible way."}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"c3b98807-1bad-4b3c-a75c-35061dab8070","type":"message","text":"I filed an issue for this here: <https://github.com/JuliaRegistries/RegistryCI.jl/issues/375>","user":"UCZ7VBGUD","ts":"1616437123.094000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3PXxI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I filed an issue for this here: "},{"type":"link","url":"https://github.com/JuliaRegistries/RegistryCI.jl/issues/375"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["U7THT3TM3","UGU761DU2"],"count":2},{"name":"tada","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"508D0C3D-CFC9-47D9-B6E9-F1FC07714722","type":"message","text":"But they don’t even need to be updated then","user":"U6795JH6H","ts":"1616443777.098400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"koB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But they don’t even need to be updated then"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"A53101CD-A021-4A0B-AB06-7760FFDCB278","type":"message","text":"There is only one very specific scenario where a compat bounds bump alone is needed:\n\n1. A breaking release of a dependency is made\n2. Something needs the new breaking version\n3. They determine that they are actually compatible with the newer version despite the breakage","user":"U6795JH6H","ts":"1616443929.101700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kNgU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is only one very specific scenario where a compat bounds bump alone is needed:\n"},{"type":"text","text":"\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A breaking release of a dependency is made"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Something needs the new breaking version"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"They determine that they are actually compatible with the newer version despite the breakage"}]}],"style":"ordered","indent":0,"offset":0}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"18542F22-10BF-48E6-838C-7343F49F681C","type":"message","text":"If any of those is not the case it’s fine to leave the compat bound alone","user":"U6795JH6H","ts":"1616443946.102400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fVwx4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If any of those is not the case it’s fine to leave the compat bound alone"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"20953b2a-e61f-471c-bb47-521e42315bb8","type":"message","text":"If the release isn’t breaking, there’s no problem. If no one needs the new breaking version, there’s no problem. If an old depender isn’t compatible the new breaking release of the dependency, then a new release of the depender needs to be made anyway, and we typically leave old compat bounds alone in that case, so no bump is required, the bound is raised in the new release.","user":"U6795JH6H","ts":"1616448455.103000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mdo7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If the release isn’t breaking, there’s no problem. If no one needs the new breaking version, there’s no problem. If an old depender isn’t compatible the new breaking release of the dependency, then a new release of the depender needs to be made anyway, and we typically leave old compat bounds alone in that case, so no bump is required, the bound is raised in the new release."}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"03ec71e4-ab1c-4dfe-909a-03fb9c4e1150","type":"message","text":"Note that if we defaulted to `≥` then we would need a compat bound in that case since the old version would get installed even though it’s actually broken.","user":"U6795JH6H","ts":"1616448493.103200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zteN9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Note that if we defaulted to "},{"type":"text","text":"≥","style":{"code":true}},{"type":"text","text":" then we would need a compat bound in that case since the old version would get installed even though it’s actually broken."}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UGU761DU2"],"count":1}]}]