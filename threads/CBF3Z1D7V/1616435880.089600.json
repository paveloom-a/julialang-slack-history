[{"client_msg_id":"e6705b57-623e-447b-b87a-8b1bd77635f4","type":"message","text":"compat bounds only need to be updated when someone tags a breaking release, which shouldn’t be that often. But I think many people (like Jameson, ref <https://github.com/JuliaRegistries/General/pull/32561#issuecomment-804266045>) don’t understand when they are tagging a breaking release or not, so it ends up happening way too much. So there’s at least some kind of docs/knowledge issue. But I don’t think the solution is remove compat.","user":"UCZ7VBGUD","ts":"1616435880.089600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VuG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"compat bounds only need to be updated when someone tags a breaking release, which shouldn’t be that often. But I think many people (like Jameson, ref "},{"type":"link","url":"https://github.com/JuliaRegistries/General/pull/32561#issuecomment-804266045"},{"type":"text","text":") don’t understand when they are tagging a breaking release or not, so it ends up happening way too much. So there’s at least some kind of docs/knowledge issue. But I don’t think the solution is remove compat."}]}]}],"thread_ts":"1616435880.089600","reply_count":6,"reply_users_count":2,"latest_reply":"1616437123.094000","reply_users":["UCZ7VBGUD","UGU761DU2"],"subscribed":false,"reactions":[{"name":"+1","users":["U7THT3TM3","UGU761DU2"],"count":2}]},{"client_msg_id":"0f66f997-f1dc-4286-bbea-2599e180a4e2","type":"message","text":"I think <https://julialang.slack.com/archives/CBF3Z1D7V/p1616431382057900> could probably help more effectively than docs though","user":"UCZ7VBGUD","ts":"1616435898.089700","team":"T68168MUP","attachments":[{"from_url":"https://julialang.slack.com/archives/CBF3Z1D7V/p1616431382057900","fallback":"[March 22nd, 2021 9:43 AM] erich404: I think maybe we should make package authors give confirmation that they intend to make a breaking release when registering the new version of their package. “Do you mean to make a breaking release? Thumbs-up react for yes and registration will proceed. Otherwise please update the version in your Project.toml and re-trigger registration.” Because I think there are spurious non-breaking releases which are versioned as breaking which causes these problems. (Like bugfixes being marked as breaking). A breaking release should be a big deal and shouldn’t be regarded as “well let’s tag it as breaking to be safe” since that causes a problems too.","ts":"1616431382.057900","author_id":"UCZ7VBGUD","author_subname":"Eric Hanson","channel_id":"CBF3Z1D7V","channel_name":"pkg-dev","is_msg_unfurl":true,"text":"I think maybe we should make package authors give confirmation that they intend to make a breaking release when registering the new version of their package. “Do you mean to make a breaking release? Thumbs-up react for yes and registration will proceed. Otherwise please update the version in your Project.toml and re-trigger registration.” Because I think there are spurious non-breaking releases which are versioned as breaking which causes these problems. (Like bugfixes being marked as breaking). A breaking release should be a big deal and shouldn’t be regarded as “well let’s tag it as breaking to be safe” since that causes a problems too.","author_name":"Eric Hanson","author_link":"https://julialang.slack.com/team/UCZ7VBGUD","author_icon":"https://avatars.slack-edge.com/2020-06-19/1180364446567_d7522fa720e84835b9f8_48.png","mrkdwn_in":["text"],"id":1,"original_url":"https://julialang.slack.com/archives/CBF3Z1D7V/p1616431382057900","footer":"Posted in #pkg-dev"}],"blocks":[{"type":"rich_text","block_id":"38DRm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think "},{"type":"link","url":"https://julialang.slack.com/archives/CBF3Z1D7V/p1616431382057900"},{"type":"text","text":" could probably help more effectively than docs though"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["U7THT3TM3","UGU761DU2"],"count":2}]},{"client_msg_id":"ab37708d-8fe4-4dd9-a54c-d9fb0093233c","type":"message","text":"That makes sense. I think the other underlying problem (for which I don’t know if there’s really any technical solution) is that breaking-ness is treated as binary, when really it’s more of a spectrum","user":"UGU761DU2","ts":"1616436343.092500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"21aUN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That makes sense. I think the other underlying problem (for which I don’t know if there’s really any technical solution) is that breaking-ness is treated as binary, when really it’s more of a spectrum"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"0463acc2-399e-4441-b718-1c772afc369f","type":"message","text":"(i.e., in what percentage of cases will something depending on this break — and the answer is never really 0 unless the release is provably bug-free)","user":"UGU761DU2","ts":"1616436398.093200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h92","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(i.e., in what percentage of cases will something depending on this break — and the answer is never really 0 unless the release is provably bug-free)"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"100d8276-8826-428b-a7b6-0c417c9e7d53","type":"message","text":"yeah, to have a good definition of breaking depends on having a well-specified public API, and many packages don’t have a very clear public API. BenchmarkTools actually does have a document laying out the API though","user":"UCZ7VBGUD","ts":"1616436667.093400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0jq3C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, to have a good definition of breaking depends on having a well-specified public API, and many packages don’t have a very clear public API. BenchmarkTools actually does have a document laying out the API though"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UGU761DU2","U7THT3TM3"],"count":2}]},{"client_msg_id":"6ed4f89c-c445-4b1d-a8b9-5232b1a12f87","type":"message","text":"but technically adding a bug doesn’t count as “breaking”; that’s just a bug, which should be fixed. But “breaking” means you are changing the public API in a backwards incompatible way.","user":"UCZ7VBGUD","ts":"1616436724.093700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cjhl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but technically adding a bug doesn’t count as “breaking”; that’s just a bug, which should be fixed. But “breaking” means you are changing the public API in a backwards incompatible way."}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["U7THT3TM3"],"count":1}]},{"client_msg_id":"c3b98807-1bad-4b3c-a75c-35061dab8070","type":"message","text":"I filed an issue for this here: <https://github.com/JuliaRegistries/RegistryCI.jl/issues/375>","user":"UCZ7VBGUD","ts":"1616437123.094000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3PXxI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I filed an issue for this here: "},{"type":"link","url":"https://github.com/JuliaRegistries/RegistryCI.jl/issues/375"}]}]}],"thread_ts":"1616435880.089600","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["U7THT3TM3","UGU761DU2"],"count":2},{"name":"tada","users":["UGU761DU2"],"count":1}]}]