[{"client_msg_id":"211e9e04-c3e8-4f3c-a86c-348224d84ccf","type":"message","text":"<https://www.datadoghq.com/blog/engineering/introducing-glommio/>\n\ncould we make use of these APIs somewhere?","user":"UH24GRBLL","ts":"1617874287.060000","team":"T68168MUP","attachments":[{"title":"Introducing Glommio, a Thread per Core Crate for Rust &amp; Linux","title_link":"https://www.datadoghq.com/blog/engineering/introducing-glommio/","text":"Glommio (pronounced glom-io or |glomjəʊ|) is a cooperative thread-per-core crate for Rust &amp; Linux based on io_uring. It allows you to write asynchronous code that takes advantage of rust async/await, but it doesn't use helper threads anywhere.","fallback":"Introducing Glommio, a Thread per Core Crate for Rust &amp; Linux","image_url":"https://imgix.datadoghq.com/img/blog/engineering/introducing-glommio/glommio.png?fit=crop&w=1200&h=630","ts":1604275200,"from_url":"https://www.datadoghq.com/blog/engineering/introducing-glommio/","image_width":476,"image_height":250,"image_bytes":59302,"service_icon":"https://www.datadoghq.com/favicon.ico","service_name":"datadoghq.com","id":1,"original_url":"https://www.datadoghq.com/blog/engineering/introducing-glommio/"}],"blocks":[{"type":"rich_text","block_id":"0JqcT","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://www.datadoghq.com/blog/engineering/introducing-glommio/"},{"type":"text","text":"\n\ncould we make use of these APIs somewhere?"}]}]}],"thread_ts":"1617874287.060000","reply_count":8,"reply_users_count":2,"latest_reply":"1617893889.061800","reply_users":["U6A0PD8CR","UH24GRBLL"],"is_locked":false,"subscribed":false},{"client_msg_id":"01ef6ab0-1804-4eb5-a573-971b6e35592d","type":"message","text":"We already do thread-per-core (that's the point of Julia's task system, to schedule multiple tasks on a fixed pool of threads), and io_uring will eventually get added to libuv (there is a PR open for it).","user":"U6A0PD8CR","ts":"1617892644.060400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wnx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We already do thread-per-core (that's the point of Julia's task system, to schedule multiple tasks on a fixed pool of threads), and io_uring will eventually get added to libuv (there is a PR open for it)."}]}]}],"thread_ts":"1617874287.060000","parent_user_id":"UH24GRBLL"},{"client_msg_id":"ad126086-5379-466c-9160-2854f2e1842c","type":"message","text":"So the hope is that libuv will use io_uring to do operations in the application thread, instead of its own threadpool.","user":"U6A0PD8CR","ts":"1617892884.060600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0nP8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the hope is that libuv will use io_uring to do operations in the application thread, instead of its own threadpool."}]}]}],"thread_ts":"1617874287.060000","parent_user_id":"UH24GRBLL"},{"client_msg_id":"1dd0f096-5c3c-4ecd-b89c-7ccc65d86e42","type":"message","text":"If it doesn't, we could always just do that directly in Julia. We don't really need libuv to do it for us, we'd just need to tell libuv to epoll on the right file descriptor so completed events wake up one or more io_uring management tasks (or just directly the submitting task).","user":"U6A0PD8CR","ts":"1617892956.060800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ruWE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it doesn't, we could always just do that directly in Julia. We don't really need libuv to do it for us, we'd just need to tell libuv to epoll on the right file descriptor so completed events wake up one or more io_uring management tasks (or just directly the submitting task)."}]}]}],"thread_ts":"1617874287.060000","parent_user_id":"UH24GRBLL"},{"client_msg_id":"955a58fe-9b30-42ee-8ae3-3ac4692c22ad","type":"message","text":"We'd also need to pin threads to cores, which shouldn't be terribly difficult.","user":"U6A0PD8CR","ts":"1617892989.061000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zN=3u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We'd also need to pin threads to cores, which shouldn't be terribly difficult."}]}]}],"thread_ts":"1617874287.060000","parent_user_id":"UH24GRBLL"},{"client_msg_id":"48a187d5-af69-4b56-a416-5f175b484960","type":"message","text":"better thread management inside of julia would certainly be nice to have","user":"UH24GRBLL","ts":"1617893054.061200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"plJI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"better thread management inside of julia would certainly be nice to have"}]}]}],"thread_ts":"1617874287.060000","parent_user_id":"UH24GRBLL"},{"client_msg_id":"b8f79b14-2a38-4b12-abf7-a214f630490f","type":"message","text":"The point that the article makes about \"not needing locking anymore\" is maybe somewhat true, but you still need to properly use atomics anytime you have 2 or more threads reading and writing a shared region of data. So Jameson's atomics PR would be helpful for that.","user":"U6A0PD8CR","ts":"1617893193.061400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zaTv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The point that the article makes about \"not needing locking anymore\" is maybe somewhat true, but you still need to properly use atomics anytime you have 2 or more threads reading and writing a shared region of data. So Jameson's atomics PR would be helpful for that."}]}]}],"thread_ts":"1617874287.060000","parent_user_id":"UH24GRBLL"},{"client_msg_id":"38033ee9-92c3-4ced-8411-92d6e2da8259","type":"message","text":"yeah - I have a bunch of things I'd like to try once that PR lands","user":"UH24GRBLL","ts":"1617893875.061600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WALxm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah - I have a bunch of things I'd like to try once that PR lands"}]}]}],"thread_ts":"1617874287.060000","parent_user_id":"UH24GRBLL"},{"client_msg_id":"33543b98-35ef-4ca4-9786-d2773343eed2","type":"message","text":"I want to play around with lock free data structures","user":"UH24GRBLL","ts":"1617893889.061800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2cvJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I want to play around with lock free data structures"}]}]}],"thread_ts":"1617874287.060000","parent_user_id":"UH24GRBLL"}]