[{"client_msg_id":"5f5b7662-e5e7-4320-b75b-81ff4e51bee6","type":"message","text":"Can I pin Julia threads to specific cores? If so, how?","user":"U881D0W2C","ts":"1616799582.036100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h7t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can I pin Julia threads to specific cores? If so, how?"}]}]}],"thread_ts":"1616799582.036100","reply_count":12,"reply_users_count":4,"latest_reply":"1617098310.046700","reply_users":["UAUPJLBQX","U6QGE7S86","UC7AF7NSU","U881D0W2C"],"is_locked":false,"subscribed":false},{"client_msg_id":"996b21fe-146a-41a7-b797-58bbff112a0e","type":"message","text":"<https://github.com/JuliaLang/julia/blob/master/doc/src/manual/environment-variables.md#julia_exclusive|https://github.com/JuliaLang/julia/blob/master/doc/src/manual/environment-variables.md#julia_exclusive> might help?","user":"UAUPJLBQX","ts":"1616801928.036400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ykKH","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/blob/master/doc/src/manual/environment-variables.md#julia_exclusive","text":"https://github.com/JuliaLang/julia/blob/master/doc/src/manual/environment-variables.md#julia_exclusive"},{"type":"text","text":" might help?"}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"8c8c13c2-20ee-4a0b-99c7-df33311fd074","type":"message","text":"&gt; JULIA_EXCLUSIVE\n&gt; If set to anything besides `0`, then Julia's thread policy is consistent with running on a dedicated machine: the master thread is on proc 0, and threads are affinitized. Otherwise, Julia lets the operating system handle thread policy.","user":"UAUPJLBQX","ts":"1616801993.036600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AJUmJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> JULIA_EXCLUSIVE\n> If set to anything besides "},{"type":"text","text":"0","style":{"code":true}},{"type":"text","text":", then Julia's thread policy is consistent with running on a dedicated machine: the master thread is on proc 0, and threads are affinitized. Otherwise, Julia lets the operating system handle thread policy."}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"d6e4c69e-172b-443e-aabd-e2863eff68bd","type":"message","text":"<@UAUPJLBQX> Is there a way to calculate the average distance pairs for sending data from thread to thread and schedule according to that?","user":"U6QGE7S86","ts":"1616808461.036800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WUcHm","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UAUPJLBQX"},{"type":"text","text":" Is there a way to calculate the average distance pairs for sending data from thread to thread and schedule according to that?"}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"92e0f145-348d-49eb-9f0b-f14969e52a21","type":"message","text":"<@UC7AF7NSU> shared a latency script on Zulip.\nI haven't had the time to get back to him/adapt the benchmarks to ThreadingUtilities, but using JULIA_EXCLUSIVE would be a means of doing that on a per core basis.","user":"UAUPJLBQX","ts":"1616812985.037000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cTZWP","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UC7AF7NSU"},{"type":"text","text":" shared a latency script on Zulip.\nI haven't had the time to get back to him/adapt the benchmarks to ThreadingUtilities, but using JULIA_EXCLUSIVE would be a means of doing that on a per core basis."}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"71b90c56-2b63-4dfc-9725-fb37d19ae3be","type":"message","text":"x-ref'ing... <https://julialang.zulipchat.com/#narrow/stream/137791-general/topic/Measuring.20overheads.20of.20some.20threading.20APIs/near/231903613>","user":"UC7AF7NSU","ts":"1616813097.037200","team":"T68168MUP","attachments":[{"service_name":"Zulip","title":"JuliaLang","title_link":"https://julialang.zulipchat.com/#narrow/stream/137791-general/topic/Measuring.20overheads.20of.20some.20threading.20APIs/near/231903613","text":"This is the Zulip server for the Julia programming language community. We ask anyone joining to adhere to the Julia Code of Conduct. | To learn more about Julia, check out <https://julialang.org/>, or just come ask us here! | You can reach out to the admins of this Zulip by sending a direct message to @zulip-admins.","fallback":"Zulip: JuliaLang","thumb_url":"https://zulip-avatars.s3.amazonaws.com/7178/realm/icon.png?version=6","from_url":"https://julialang.zulipchat.com/#narrow/stream/137791-general/topic/Measuring.20overheads.20of.20some.20threading.20APIs/near/231903613","thumb_width":100,"thumb_height":100,"id":1,"original_url":"https://julialang.zulipchat.com/#narrow/stream/137791-general/topic/Measuring.20overheads.20of.20some.20threading.20APIs/near/231903613"}],"blocks":[{"type":"rich_text","block_id":"zSD1Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"x-ref'ing... "},{"type":"link","url":"https://julialang.zulipchat.com/#narrow/stream/137791-general/topic/Measuring.20overheads.20of.20some.20threading.20APIs/near/231903613"}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"230acfdc-8326-4d80-8b0d-a1a41cadec5e","type":"message","text":"<https://nbviewer.jupyter.org/gist/tkf/edfee477d8d225120f46e45105aff024>","user":"UC7AF7NSU","ts":"1616813098.037400","team":"T68168MUP","attachments":[{"title":"Notebook on nbviewer","title_link":"https://nbviewer.jupyter.org/gist/tkf/edfee477d8d225120f46e45105aff024","text":"Check out this Jupyter notebook!","fallback":"Notebook on nbviewer","from_url":"https://nbviewer.jupyter.org/gist/tkf/edfee477d8d225120f46e45105aff024","service_icon":"https://nbviewer.jupyter.org/static/ico/apple-touch-icon-144-precomposed.png","service_name":"nbviewer.jupyter.org","id":1,"original_url":"https://nbviewer.jupyter.org/gist/tkf/edfee477d8d225120f46e45105aff024"}],"blocks":[{"type":"rich_text","block_id":"Sve","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://nbviewer.jupyter.org/gist/tkf/edfee477d8d225120f46e45105aff024"}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"f5fd6978-fb4c-4edb-b896-1ee7caa75390","type":"message","text":"though this is for measuring Julia runtime timings and I think you'd need something very different for checking hardware properties","user":"UC7AF7NSU","ts":"1616813332.037800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CDO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"though this is for measuring Julia runtime timings and I think you'd need something very different for checking hardware properties"}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"7c768786-43be-4c24-a6e2-03e999f7440b","type":"message","text":"I was thinking that ThreadingUtilities should mostly let me measure the hardware properties.","user":"UAUPJLBQX","ts":"1616814209.038000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SO17k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was thinking that ThreadingUtilities should mostly let me measure the hardware properties."}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"25a4bd94-e2f7-4820-ba9b-1aad3d38e9bb","type":"message","text":"Rounded to the nearest `pause`","user":"UAUPJLBQX","ts":"1616814259.038200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Daq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rounded to the nearest "},{"type":"text","text":"pause","style":{"code":true}}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"81a320db-0078-4d97-8b43-f87a37c88029","type":"message","text":"it's cool if you can get some inspiration from my script, but I just thought it was too strongly coupled to Juila API","user":"UC7AF7NSU","ts":"1616815992.038400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PZZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's cool if you can get some inspiration from my script, but I just thought it was too strongly coupled to Juila API"}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"be3fa483-be79-46f9-bf50-e554ad9372b8","type":"message","text":"Not a bad idea for a small package or a PR to Hwloc.jl methinks","user":"U6QGE7S86","ts":"1616816033.038600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j+4p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not a bad idea for a small package or a PR to Hwloc.jl methinks"}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"},{"client_msg_id":"8c57f303-6481-4879-a23c-259152ed9ef1","type":"message","text":"FYI: <https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069/5>","user":"U881D0W2C","ts":"1617098310.046700","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Thread affinitization: pinning Julia threads to cores","title_link":"https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069/5","text":"Alright, I’ve done some testing and had some discussion on Slack/GitHub. Let me share my findings. 1) Query the core id of a thread. Let’s start with the second question of the OP first: Is there a way in Julia to figure out which core a thread is running on? Thanks @pbayer for the pointer to schedule_getcpu(). We can call it in Julia like so: glibc_coreid() = @ccall sched_getcpu()::Cint and query the core id of a specific thread using ThreadPools’ @tspawnat: using ThreadPools tglibc_co...","fallback":"JuliaLang: Thread affinitization: pinning Julia threads to cores","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1617097649,"from_url":"https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069/5","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069/5"}],"blocks":[{"type":"rich_text","block_id":"+rRqL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FYI: "},{"type":"link","url":"https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069/5"}]}]}],"thread_ts":"1616799582.036100","parent_user_id":"U881D0W2C"}]