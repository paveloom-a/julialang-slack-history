[{"client_msg_id":"582ed514-df63-4644-8c51-42d9df4f73a6","type":"message","text":"I was expecting they’d go with Java’s approach (like ours)","user":"U67BXBF99","ts":"1611004100.019600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5i4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was expecting they’d go with Java’s approach (like ours)"}]}]}],"thread_ts":"1611004100.019600","reply_count":10,"reply_users_count":4,"latest_reply":"1611070566.034600","reply_users":["U67BJLYCS","U6795JH6H","U67BXBF99","U67431ELR"],"subscribed":false},{"client_msg_id":"0fa7dfe3-e4e8-4b3c-a251-8ba9a132a5de","type":"message","text":"Wait we have preemption? :P","user":"U67BJLYCS","ts":"1611007189.019700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fdi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wait we have preemption? :P"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99","reactions":[{"name":"point_up","users":["U6795JH6H","U89GY9W1J"],"count":2}]},{"client_msg_id":"0a5e5946-c0c3-4e14-b6a2-bd662f36b556","type":"message","text":"What is Javas approach?","user":"U67BJLYCS","ts":"1611007199.019900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JoPW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is Javas approach?"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99"},{"client_msg_id":"0ded4c6a-9023-4395-b4e1-ceaf4f4c641a","type":"message","text":"I was also under the impression that we do not have preemption","user":"U6795JH6H","ts":"1611015056.021500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dg=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was also under the impression that we do not have preemption"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99"},{"client_msg_id":"b06c500f-6d44-42f2-99eb-a4d23f302b69","type":"message","text":"Neither does Java, but doesn’t mean we don’t support it","user":"U67BXBF99","ts":"1611015501.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xGzqx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Neither does Java, but doesn’t mean we don’t support it"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99"},{"client_msg_id":"e6c7798e-4cbe-414e-a4f7-8c7723990ac0","type":"message","text":"what does that mean?","user":"U6795JH6H","ts":"1611015688.021900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tdIB0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what does that mean?"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99"},{"client_msg_id":"708b18ed-b706-4907-b12e-ddf57c3eba23","type":"message","text":"do we or don’t we have preemption?","user":"U6795JH6H","ts":"1611015700.022100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nEYN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do we or don’t we have preemption?"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99"},{"client_msg_id":"414ce38a-e6d2-40e2-9aa6-3e1cec315931","type":"message","text":"We mostly would already have it, but the only thread we support switching to is GC","user":"U67BXBF99","ts":"1611016039.022300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hbD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We mostly would already have it, but the only thread we support switching to is GC"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99"},{"client_msg_id":"6e0587c4-9e90-4d89-9777-b79488314ce0","type":"message","text":"Funny, <@U8JAMQGQY> and I bumped exactly into this issue a few days ago when adding multithreading support to DataFrames. I worked around it by splitting the loop into chunks of 100,000 indices and calling `GC.safepoint` after each chunk. That's what the manual recommends so I'm not sure why you say we already have preemption. :slightly_smiling_face:","user":"U67431ELR","ts":"1611063019.034100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kwh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Funny, "},{"type":"user","user_id":"U8JAMQGQY"},{"type":"text","text":" and I bumped exactly into this issue a few days ago when adding multithreading support to DataFrames. I worked around it by splitting the loop into chunks of 100,000 indices and calling "},{"type":"text","text":"GC.safepoint","style":{"code":true}},{"type":"text","text":" after each chunk. That's what the manual recommends so I'm not sure why you say we already have preemption. "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99"},{"client_msg_id":"7ef37f02-c9c7-4ef1-9699-0c4d791069e5","type":"message","text":"that’s Jameson for “we don’t have preemption”","user":"U6795JH6H","ts":"1611068880.034300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YO1gk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that’s Jameson for “we don’t have preemption”"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99","reactions":[{"name":"smile","users":["U67431ELR","U678RKJ5A"],"count":2}]},{"client_msg_id":"f9348bdd-70a1-4552-959b-68baae30e318","type":"message","text":"if I’m interpreting it correctly, the answer is: we don’t have preemption, but we almost have the ability to add preemption because we’re already doing much of what is required to implement it","user":"U6795JH6H","ts":"1611070566.034600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mdho","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if I’m interpreting it correctly, the answer is: we don’t have preemption, but we almost have the ability to add preemption because we’re already doing much of what is required to implement it"}]}]}],"thread_ts":"1611004100.019600","parent_user_id":"U67BXBF99"}]