[{"client_msg_id":"6876ff0b-f813-41fe-ba58-ae62d1ccad1a","type":"message","text":"I am slowly getting familiar with julia's multi threading system. Except for the Computation Thinking course and a few other stuff(docs etc.) there isn't a great info/example of the capabilities.\nI wish to use multithreading(or other parallel methods) to speedup reading and writing into an in-memory data structure. Anything(pacakge, gist, blog)  covering lock/unlock, @async etc. would be really helpful. Thank you. :slightly_smiling_face:","user":"ULX78CTC3","ts":"1612698271.050000","team":"T68168MUP","edited":{"user":"ULX78CTC3","ts":"1612698427.000000"},"blocks":[{"type":"rich_text","block_id":"3vW/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am slowly getting familiar with julia's multi threading system. Except for the Computation Thinking course and a few other stuff(docs etc.) there isn't a great info/example of the capabilities.\nI wish to use multithreading(or other parallel methods) to speedup reading and writing into an in-memory data structure. Anything(pacakge, gist, blog)  covering lock/unlock, @async etc. would be really helpful. Thank you. "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1612698271.050000","reply_count":3,"reply_users_count":3,"latest_reply":"1612738552.051200","reply_users":["U6A0PD8CR","U6A936746","UC7AF7NSU"],"subscribed":false},{"client_msg_id":"01a047fb-f90d-433f-af54-66388b9950a2","type":"message","text":"<https://julialang.org/blog/2019/07/multithreading/>","user":"U6A0PD8CR","ts":"1612712759.050400","team":"T68168MUP","attachments":[{"title":"Announcing composable multi-threaded parallelism in Julia","title_link":"https://julialang.org/blog/2019/07/multithreading/","text":"Announcing composable multi-threaded parallelism in Julia | Software performance depends more and more on exploiting multiple processor cores....","fallback":"Announcing composable multi-threaded parallelism in Julia","image_url":"https://julialang.org/assets/images/julia-open-graph.png","from_url":"https://julialang.org/blog/2019/07/multithreading/","image_width":500,"image_height":250,"image_bytes":742374,"service_name":"julialang.org","id":1,"original_url":"https://julialang.org/blog/2019/07/multithreading/"}],"blocks":[{"type":"rich_text","block_id":"HzXN","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://julialang.org/blog/2019/07/multithreading/"}]}]}],"thread_ts":"1612698271.050000","parent_user_id":"ULX78CTC3"},{"client_msg_id":"a427435f-e341-4c20-8227-8c246ae0b0b4","type":"message","text":"Doesn't covered multithreading but does cover distributed and asynchronous\n<https://www.oxinabox.net/2018/07/14/Asynchronous-and-Distributed-File-Loading.html|https://www.oxinabox.net/2018/07/14/Asynchronous-and-Distributed-File-Loading.html>\nMay still be of interest.\nA bit dated","user":"U6A936746","ts":"1612737216.050700","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1612737235.000000"},"blocks":[{"type":"rich_text","block_id":"YDdJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Doesn't covered multithreading but does cover distributed and asynchronous\n"},{"type":"link","url":"https://www.oxinabox.net/2018/07/14/Asynchronous-and-Distributed-File-Loading.html","text":"https://www.oxinabox.net/2018/07/14/Asynchronous-and-Distributed-File-Loading.html"},{"type":"text","text":"\nMay still be of interest.\nA bit dated"}]}]}],"thread_ts":"1612698271.050000","parent_user_id":"ULX78CTC3"},{"client_msg_id":"03d9e29b-169c-4df2-af1e-6fff8a7cbfe9","type":"message","text":"It might be a bit too high-level for your taste, but there is \"A quick introduction to data parallelism\" that I wrote <https://juliafolds.github.io/data-parallelism/tutorials/quick-introduction/>\n\nWith the new work stealing scheduler etc., JuliaFolds packages should in principle work well with I/O now <https://discourse.julialang.org/t/ann-foldsthreads-jl-a-zoo-of-pluggable-thread-based-data-parallel-execution-mechanisms/54662>","user":"UC7AF7NSU","ts":"1612738552.051200","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"[ANN] FoldsThreads.jl: A zoo of pluggable thread-based data-parallel execution mechanisms","title_link":"https://discourse.julialang.org/t/ann-foldsthreads-jl-a-zoo-of-pluggable-thread-based-data-parallel-execution-mechanisms/54662","text":"Data parallelism is a very useful approach to parallelism because we can describe what to compute rather than how to compute. It’s especially nice for parallel computing since specifying how to compute often leads to subtle concurrency bugs. However, each user’s each program might have specific requirements for scheduling to obtain decent performance. In particular, it is challenging to create a single scheduler that can manage very imbalanced load, terminatable reduction, resource requirements,...","fallback":"JuliaLang: [ANN] FoldsThreads.jl: A zoo of pluggable thread-based data-parallel execution mechanisms","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/3X/d/d/dd61f3c4c4b4fafc9e56a633391c6627bf22393f.png","fields":[{"title":"Reading time","value":"4 mins :clock2:","short":true},{"title":"Likes","value":"45 :heart:","short":true}],"ts":1612487293,"from_url":"https://discourse.julialang.org/t/ann-foldsthreads-jl-a-zoo-of-pluggable-thread-based-data-parallel-execution-mechanisms/54662","thumb_width":518,"thumb_height":245,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/ann-foldsthreads-jl-a-zoo-of-pluggable-thread-based-data-parallel-execution-mechanisms/54662"}],"blocks":[{"type":"rich_text","block_id":"wN8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It might be a bit too high-level for your taste, but there is \"A quick introduction to data parallelism\" that I wrote "},{"type":"link","url":"https://juliafolds.github.io/data-parallelism/tutorials/quick-introduction/"},{"type":"text","text":"\n\nWith the new work stealing scheduler etc., JuliaFolds packages should in principle work well with I/O now "},{"type":"link","url":"https://discourse.julialang.org/t/ann-foldsthreads-jl-a-zoo-of-pluggable-thread-based-data-parallel-execution-mechanisms/54662"}]}]}],"thread_ts":"1612698271.050000","parent_user_id":"ULX78CTC3"}]