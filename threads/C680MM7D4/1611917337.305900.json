[{"client_msg_id":"2862bdf8-530d-48c7-9c51-439af811d4b8","type":"message","text":"I've noticed there are a few \"functional languages for parallel array computing\" that seems interesting from an ML perspective (e.g. halide, futhark, dexlang). I was curious if people here have experience with those, or are aware of a broad review on the topic comparing pros and cons (in particular, I'm interested about stencil opertations, but I'm curious about the whole approach)","user":"U6BJ9E351","ts":"1611917337.305900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EEe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've noticed there are a few \"functional languages for parallel array computing\" that seems interesting from an ML perspective (e.g. halide, futhark, dexlang). I was curious if people here have experience with those, or are aware of a broad review on the topic comparing pros and cons (in particular, I'm interested about stencil opertations, but I'm curious about the whole approach)"}]}]}],"thread_ts":"1611917337.305900","reply_count":19,"reply_users_count":5,"latest_reply":"1611949934.330000","reply_users":["U82RE6STE","U6BJ9E351","UD0NS8PDF","UMY1LV01G","U6A936746"],"subscribed":false},{"client_msg_id":"540c2c9e-f69b-4f6d-b379-559fd7831d32","type":"message","text":"<@U6A936746> has been toying a lot with dexlang, which given the WIP state of the project, implied many PRs I believe","user":"U82RE6STE","ts":"1611918766.306400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HI5mM","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6A936746"},{"type":"text","text":" has been toying a lot with dexlang, which given the WIP state of the project, implied many PRs I believe"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"93b3cbcb-671d-4ce1-950b-26de217bdbf2","type":"message","text":"Curious to know what his experience is. I only went briefly through dexlang docs, but could not figure out how to do a convolution, maybe it's still an undocumented feature.","user":"U6BJ9E351","ts":"1611920389.307800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h7Sam","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Curious to know what his experience is. I only went briefly through dexlang docs, but could not figure out how to do a convolution, maybe it's still an undocumented feature."}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"1b4aab2b-c1a5-4b32-92f6-9cbe7888b9f5","type":"message","text":"That was my question too, I was pointed to this PR recently: <https://github.com/google-research/dex-lang/pull/456/files#diff-bcced3748a9b282a26c9bd64cd2a907277e61fbe272d8a7f4854c3f8c6fb4129R53>","user":"UD0NS8PDF","ts":"1611921306.308000","team":"T68168MUP","edited":{"user":"UD0NS8PDF","ts":"1611921449.000000"},"blocks":[{"type":"rich_text","block_id":"dkFi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That was my question too, I was pointed to this PR recently: "},{"type":"link","url":"https://github.com/google-research/dex-lang/pull/456/files#diff-bcced3748a9b282a26c9bd64cd2a907277e61fbe272d8a7f4854c3f8c6fb4129R53"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351","reactions":[{"name":"thankyou","users":["U6BJ9E351"],"count":1},{"name":"point_up","users":["U6A936746"],"count":1}]},{"client_msg_id":"8a672fc2-f41b-4227-9bf5-87914f611373","type":"message","text":"There is some scattered discussion on zulip… <https://julialang.zulipchat.com/#narrow/streams/public/search/dex> but not sure that finds all of it.","user":"UD0NS8PDF","ts":"1611921338.308200","team":"T68168MUP","edited":{"user":"UD0NS8PDF","ts":"1611921404.000000"},"blocks":[{"type":"rich_text","block_id":"cGxt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is some scattered discussion on zulip… "},{"type":"link","url":"https://julialang.zulipchat.com/#narrow/streams/public/search/dex"},{"type":"text","text":" but not sure that finds all of it."}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"55d00036-b891-45e7-b56b-53f7ee14b533","type":"message","text":"I agree with your point in Zulip that one probably has to try it for real to make up an informed opinion. I somehow imagined their index inference would work for convolution as well, though I guess there it is less trivial.","user":"U6BJ9E351","ts":"1611922376.308900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FQNc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree with your point in Zulip that one probably has to try it for real to make up an informed opinion. I somehow imagined their index inference would work for convolution as well, though I guess there it is less trivial."}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"474edac0-d032-481f-a4ff-f2337223747f","type":"message","text":"(I'm also curious about performance there, tbh if Tullio performs well on the GPU, there is even less incentive to try out different languages for this)","user":"U6BJ9E351","ts":"1611922429.309100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8ASE3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I'm also curious about performance there, tbh if Tullio performs well on the GPU, there is even less incentive to try out different languages for this)"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"a5e1fc37-ef2d-4c73-8007-848242987bb8","type":"message","text":"Yes, I can’t see whether index inference through the convolution is just something they haven’t got around to yet, or somehow breaks assumptions they have built in deeply. Am curious but haven’t found time…","user":"UD0NS8PDF","ts":"1611923087.309400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5uIy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, I can’t see whether index inference through the convolution is just something they haven’t got around to yet, or somehow breaks assumptions they have built in deeply. Am curious but haven’t found time…"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"e880d6ab-31c8-49bc-9d06-a88095a5cfe5","type":"message","text":"Tullio writes the most naiive KernelAbstractions code possible. For something like matmul I think this ends up slow, there are all kinds of memory tricks which it doesn’t try at all. Maybe better for other operations? Not well-explored.","user":"UD0NS8PDF","ts":"1611923206.309600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ne6Ns","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Tullio writes the most naiive KernelAbstractions code possible. For something like matmul I think this ends up slow, there are all kinds of memory tricks which it doesn’t try at all. Maybe better for other operations? Not well-explored."}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"29209868-0a60-4d34-aae0-c7f0d7bd78b5","type":"message","text":"ah, so it ends up with things like this example here <https://juliagpu.gitlab.io/KernelAbstractions.jl/examples/matmul/>?","user":"U6BJ9E351","ts":"1611928407.310000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cYa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, so it ends up with things like this example here "},{"type":"link","url":"https://juliagpu.gitlab.io/KernelAbstractions.jl/examples/matmul/"},{"type":"text","text":"?"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"2b6039da-bbed-4dc7-ad7c-9cc20cb4286c","type":"message","text":"Maybe just standardising the tiling infrastructure would allow to make this more modular (one macro that does everything is hard to tweak for performance on the user side). So far I've seen <https://github.com/JuliaArrays/TiledIteration.jl> which seems helpful, even though targeted at the CPU mostly. Does Tullio have its own tiling machinery?","user":"U6BJ9E351","ts":"1611928412.310200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wTJi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe just standardising the tiling infrastructure would allow to make this more modular (one macro that does everything is hard to tweak for performance on the user side). So far I've seen "},{"type":"link","url":"https://github.com/JuliaArrays/TiledIteration.jl"},{"type":"text","text":" which seems helpful, even though targeted at the CPU mostly. Does Tullio have its own tiling machinery?"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"6e150aa0-f24d-4a0a-bf01-46ef7a592bce","type":"message","text":"Yes, it recursively divides the longest dimension, like so:  <https://github.com/mcabbott/Tullio.jl/blob/master/src/threads.jl#L133> I don’t think it’s optimal but it seems good at quite a few things.","user":"UD0NS8PDF","ts":"1611933214.314300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lEn0m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, it recursively divides the longest dimension, like so:  "},{"type":"link","url":"https://github.com/mcabbott/Tullio.jl/blob/master/src/threads.jl#L133"},{"type":"text","text":" I don’t think it’s optimal but it seems good at quite a few things."}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"d0e8f11e-80d0-4950-8bbb-e8e3614ea817","type":"message","text":"And yes, exactly like the KA.jl example.","user":"UD0NS8PDF","ts":"1611933261.314500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dn5wg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And yes, exactly like the KA.jl example."}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"89869c62-38da-4784-967f-90873ad25f04","type":"message","text":"Thanks for all the info! (And for the amazing work on Tullio!) For the brave, there also seems to be a pretty good julia implementation of matrix multiplication on GPU <https://github.com/JuliaGPU/GemmKernels.jl> but the technical details are way over my head. I guess in theory it may even be possible to recycle those tricks in the code generated by Tullio, but that seems like a largish project on its own","user":"U6BJ9E351","ts":"1611934850.314800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4L/Q5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for all the info! (And for the amazing work on Tullio!) For the brave, there also seems to be a pretty good julia implementation of matrix multiplication on GPU "},{"type":"link","url":"https://github.com/JuliaGPU/GemmKernels.jl"},{"type":"text","text":" but the technical details are way over my head. I guess in theory it may even be possible to recycle those tricks in the code generated by Tullio, but that seems like a largish project on its own"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"3b882580-118b-4bfe-a8a5-e85960bb6e51","type":"message","text":"There has been quite a bit of material around stencil codegen as part of the MLIR project. See e.g. <https://people.inf.ethz.ch/suz/teaching/252-0210-f20/lec24.pdf> and <https://arxiv.org/abs/2005.13014>","user":"UMY1LV01G","ts":"1611936529.315000","team":"T68168MUP","edited":{"user":"UMY1LV01G","ts":"1611936578.000000"},"attachments":[{"service_name":"arXiv.org","title":"Domain-Specific Multi-Level IR Rewriting for GPU","title_link":"https://arxiv.org/abs/2005.13014","text":"Traditional compilers operate on a single generic intermediate representation (IR). These IRs are usually low-level and close to machine instructions. As a result, optimizations relying on...","fallback":"arXiv.org: Domain-Specific Multi-Level IR Rewriting for GPU","from_url":"https://arxiv.org/abs/2005.13014","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/2005.13014"}],"blocks":[{"type":"rich_text","block_id":"KOn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There has been quite a bit of material around stencil codegen as part of the MLIR project. See e.g. "},{"type":"link","url":"https://people.inf.ethz.ch/suz/teaching/252-0210-f20/lec24.pdf"},{"type":"text","text":" and "},{"type":"link","url":"https://arxiv.org/abs/2005.13014"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"44a28430-c4f9-4776-b208-dc6b175352fc","type":"message","text":"I want to say it's been discussed more than once in their design meetings as well: <https://docs.google.com/document/d/1y_9f1AbfgcoVdJh4_aM6-BaSHvrHl8zuA5G4jv_94K8>","user":"UMY1LV01G","ts":"1611936642.315400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5D+d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I want to say it's been discussed more than once in their design meetings as well: "},{"type":"link","url":"https://docs.google.com/document/d/1y_9f1AbfgcoVdJh4_aM6-BaSHvrHl8zuA5G4jv_94K8"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"c2ef2ed1-41c8-45fe-b8f2-c58c449bf226","type":"message","text":"re: Dex.\nYeah its pretty cool.\nFor a long time my particle swarm optimizer was the longest piece of dex code in existance.\n\nThere are a ton of examples in the `examples`  folder in the repo,\n\nIf you really want more, I did about a 1/3 of advent of code in DexLang\n<https://gist.github.com/oxinabox/e64ec6c764b9ab367d1920626a9ece72/>","user":"U6A936746","ts":"1611936930.315600","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1611936936.000000"},"blocks":[{"type":"rich_text","block_id":"fJw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"re: Dex.\nYeah its pretty cool.\nFor a long time my particle swarm optimizer was the longest piece of dex code in existance.\n\nThere are a ton of examples in the "},{"type":"text","text":"examples","style":{"code":true}},{"type":"text","text":"  folder in the repo,\n\nIf you really want more, I did about a 1/3 of advent of code in DexLang\n"},{"type":"link","url":"https://gist.github.com/oxinabox/e64ec6c764b9ab367d1920626a9ece72/"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351","reactions":[{"name":"+1","users":["UMY1LV01G","U6BJ9E351"],"count":2}]},{"client_msg_id":"0a3ce244-6de4-4e1b-ba3b-9daed909dfaa","type":"message","text":"re convolution.\nI find that doing anything with indexes in Dex basically sucks unless you want to use all positions in that index.\n.e.g filtering lists also sucks.\nIts going to be fixed i am sure.","user":"U6A936746","ts":"1611936990.316000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HMzB7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"re convolution.\nI find that doing anything with indexes in Dex basically sucks unless you want to use all positions in that index.\n.e.g filtering lists also sucks.\nIts going to be fixed i am sure."}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"383673e6-6b6b-4bcc-bd98-a43fc839b93f","type":"message","text":"mhm, turns out in their (dex) paper <https://openreview.net/pdf?id=rJxd7vsWPS> they mention stencil operations in the \"help wanted\" section (to be done), but yes, both that and filtering seems like crucial things to have","user":"U6BJ9E351","ts":"1611949763.329800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eDwS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"mhm, turns out in their (dex) paper "},{"type":"link","url":"https://openreview.net/pdf?id=rJxd7vsWPS"},{"type":"text","text":" they mention stencil operations in the \"help wanted\" section (to be done), but yes, both that and filtering seems like crucial things to have"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"},{"client_msg_id":"6f88a9f2-40ab-4587-bd40-774cfc72f8d8","type":"message","text":"Dex paper is ridiculously out of date","user":"U6A936746","ts":"1611949934.330000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jQMoi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Dex paper is ridiculously out of date"}]}]}],"thread_ts":"1611917337.305900","parent_user_id":"U6BJ9E351"}]