[{"client_msg_id":"128f2243-a866-43cc-a57e-9723a54b2eb1","type":"message","text":"Maps, broadcasts, list comprehension. They can all be technically used for the same thing so which do you guys prefer to use?\n\nI personally prefer `map` for functions, because its nice and explicit; and `broadcast` for operators because it looks nice. I rarely try and use list comprehensions.\n\nAlso on a related note, why is `broadcast` slightly faster than `map` on my PC?","user":"U01FAHWCMFF","ts":"1613501228.089100","team":"T68168MUP","edited":{"user":"U01FAHWCMFF","ts":"1613501635.000000"},"blocks":[{"type":"rich_text","block_id":"7/q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maps, broadcasts, list comprehension. They can all be technically used for the same thing so which do you guys prefer to use?\n\nI personally prefer "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" for functions, because its nice and explicit; and "},{"type":"text","text":"broadcast","style":{"code":true}},{"type":"text","text":" for operators because it looks nice. I rarely try and use list comprehensions.\n\nAlso on a related note, why is "},{"type":"text","text":"broadcast","style":{"code":true}},{"type":"text","text":" slightly faster than "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" on my PC?"}]}]}],"thread_ts":"1613501228.089100","reply_count":1,"reply_users_count":1,"latest_reply":"1613503142.092100","reply_users":["U019K6Q9N15"],"subscribed":false},{"client_msg_id":"d002c969-774f-4921-bd65-97ef4499f281","type":"message","text":"Maps are explicit and functorial. I think that they are really important for readability when one is transforming inherently multi-dimensional data.\n\nWhen one is just working with a business-domain lists, a broadcast can be short and sweet.\n\nDetest comprehensions. Pythonic slog alternative to a well-established functional convention.","user":"U019K6Q9N15","ts":"1613503142.092100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jn337","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maps are explicit and functorial. I think that they are really important for readability when one is transforming inherently multi-dimensional data.\n\nWhen one is just working with a business-domain lists, a broadcast can be short and sweet.\n\nDetest comprehensions. Pythonic slog alternative to a well-established functional convention."}]}]}],"thread_ts":"1613501228.089100","parent_user_id":"U01FAHWCMFF"}]