[{"client_msg_id":"36be8e36-8535-4adb-8074-047d97366e47","type":"message","text":"How far out is 1.6 final?","user":"U8Z3LTQ8Y","ts":"1611331660.040400","team":"T68168MUP","edited":{"user":"U8Z3LTQ8Y","ts":"1611331670.000000"},"blocks":[{"type":"rich_text","block_id":"iz2G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How far out is 1.6 final?"}]}]}],"thread_ts":"1611331660.040400","reply_count":37,"reply_users_count":10,"latest_reply":"1611394151.064000","reply_users":["U0179G7FG4F","U6740K1SP","U67BJLYCS","UGD4K0Z25","U8Z3LTQ8Y","U6A936746","U011V2YN59N","U69BL50BF","UB7JS9CHF","UM30MT6RF"],"subscribed":false,"reactions":[{"name":"soon","users":["ULDQSHD41","U01HFCRH5ML"],"count":2}]},{"client_msg_id":"377ca4b2-d6c9-4c6b-bdcc-209b7f643882","type":"message","text":"RC1 backport PR in progress <https://github.com/JuliaLang/julia/pull/39160> RC1 release probably happens after that","user":"U0179G7FG4F","ts":"1611331773.040700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+MiPO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"RC1 backport PR in progress "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/39160"},{"type":"text","text":" RC1 release probably happens after that"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"4df8b907-c455-41a2-84e6-2dc08eb8e3f8","type":"message","text":"It’ll be a number of weeks after RC1, though, in my estimation.","user":"U6740K1SP","ts":"1611332547.040900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hr5=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’ll be a number of weeks after RC1, though, in my estimation."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"4b046b0b-9393-4866-8313-1e759ce9faa3","type":"message","text":"(Sometime before 2020 ends :wink: )","user":"U67BJLYCS","ts":"1611332574.041100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XOIB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(Sometime before 2020 ends "},{"type":"emoji","name":"wink"},{"type":"text","text":" )"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"df830e6b-2f57-456b-bbde-c8c7cbfadac3","type":"message","text":"Before 2020 or 2021 ends?","user":"UGD4K0Z25","ts":"1611333064.041300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nikF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Before 2020 or 2021 ends?"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"2de97e05-8815-4a6d-8276-721c98cdbaf5","type":"message","text":"Well 2020 has leaked into 2021, we are still in 2020 according to my time keeping","user":"U67BJLYCS","ts":"1611333086.041500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ID40V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well 2020 has leaked into 2021, we are still in 2020 according to my time keeping"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y","reactions":[{"name":"joy","users":["ULDQSHD41","U6CCK2SCV","U69KQT9DL","UM8JUNJG7","U01HFCRH5ML","UBG5JAHS7","UPUBAM63X","UNF9QDRNJ","UPQP0RWTH","U011LUQ182G","U9MED583T","U01GXNFKY6R","UH8A351DJ","UKLKS1WC8"],"count":14}]},{"client_msg_id":"72ec8402-6559-49a6-8af2-a3b83f9bb111","type":"message","text":"Ic.","user":"UGD4K0Z25","ts":"1611333103.041700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xbO=S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ic."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"038f6281-e766-4329-aa79-500772a7c507","type":"message","text":"we're officially changing the start of 2021 to 1.6 release","user":"U0179G7FG4F","ts":"1611333119.041900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q4rX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we're officially changing the start of 2021 to 1.6 release"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y","reactions":[{"name":"slow_parrot","users":["U67BJLYCS","U8JP5B9T2","UM8JUNJG7","U01GXNFKY6R","UKLKS1WC8"],"count":5}]},{"client_msg_id":"d630e71d-6603-42a2-82ed-f884752f101e","type":"message","text":"And it only becomes LTS at 1.6.1 right?","user":"U8Z3LTQ8Y","ts":"1611336329.042800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v0MQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And it only becomes LTS at 1.6.1 right?"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y","reactions":[{"name":"+1","users":["U0179G7FG4F","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"431fee47-71ea-4685-8814-33d857602f61","type":"message","text":"So probably a few months off from LTS still.","user":"U8Z3LTQ8Y","ts":"1611336349.043000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0Gy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So probably a few months off from LTS still."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"0c5b25c9-af0e-4eb5-a742-557b33b0bbfd","type":"message","text":"&gt;  And it only becomes LTS at 1.6.1 right?\nIt only becomes LTS once it stops being Stable.\nSo if it is the LTS (which i think is still not decided)\nit will be come the LTS when 1.7 becoems the Stable\n\nAs I understand it:\nAny given julia version exactly one of 5 states:\n\n[unsupported]: 1.1, 1.2, 1.3, 1.4\n[stable] 1.5\n[LTS] 1.0\n[Releasing] 1.6\n[nightly] 1.7","user":"U6A936746","ts":"1611336980.043300","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1611337050.000000"},"blocks":[{"type":"rich_text","block_id":"aV=MN","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" And it only becomes LTS at 1.6.1 right?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIt only becomes LTS once it stops being Stable.\nSo if it is the LTS (which i think is still not decided)\nit will be come the LTS when 1.7 becoems the Stable\n\nAs I understand it:\nAny given julia version exactly one of 5 states:\n\n[unsupported]: 1.1, 1.2, 1.3, 1.4\n[stable] 1.5\n[LTS] 1.0\n[Releasing] 1.6\n[nightly] 1.7"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y","reactions":[{"name":"+1","users":["U0179G7FG4F","U6740K1SP","U9MED583T","UKLKS1WC8"],"count":4}]},{"client_msg_id":"c1a51598-e5af-4307-989a-6fb3b8ae2455","type":"message","text":"I am hoping  it is decided if it will be LTS or not soon.\nI don’t think it is fully decided.\nAnd right now I think 1.7 is more likely to be the LTS than 1.6 is.","user":"U6A936746","ts":"1611337114.043700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KYngA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am hoping  it is decided if it will be LTS or not soon.\nI don’t think it is fully decided.\nAnd right now I think 1.7 is more likely to be the LTS than 1.6 is."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"46dd913a-a67d-40b5-959c-f1664dde905a","type":"message","text":"really? I'd gotten the sense that there was some talk of doing that, but that 1.6 LTS was most likely","user":"U0179G7FG4F","ts":"1611337189.044000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5DP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"really? I'd gotten the sense that there was some talk of doing that, but that 1.6 LTS was most likely"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"e8ef5240-4408-4c2f-be76-b490bd127685","type":"message","text":"The main driver is Keno’s new Autodiff support which didn’t make it into 1.6","user":"U6740K1SP","ts":"1611337252.044200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VueU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The main driver is Keno’s new Autodiff support which didn’t make it into 1.6"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"7ec4f233-c877-43e1-95fc-3d6b5c0ea30c","type":"message","text":"Personally, I think ideal would be if 1.7 was the LTS,\nand if it was feature frozen on the same day as 1.6 final was released. Or like a week later.\n\nSo we have a short release cycle, rather than 1.6's long release cycle.","user":"U6A936746","ts":"1611337760.044500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A8hn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Personally, I think ideal would be if 1.7 was the LTS,\nand if it was feature frozen on the same day as 1.6 final was released. Or like a week later.\n\nSo we have a short release cycle, rather than 1.6's long release cycle."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"93377c26-595f-4bb8-908f-3511cb15c2a2","type":"message","text":"that sounds a little extreme, but we should probably be feature freezing sooner","user":"U0179G7FG4F","ts":"1611337910.044700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"je+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that sounds a little extreme, but we should probably be feature freezing sooner"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"c83592fc-f3ff-4194-a2c7-e4e6aeee9712","type":"message","text":"Why is it extreme?\nWe got all the good things that we wanted for the LTS into 1.6.\nExcept 1 major one.\nso lets get that one, plus the other nice things that have been added since, the 1.6 feature freeze,\nand cut a release","user":"U6A936746","ts":"1611337995.044900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HtY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why is it extreme?\nWe got all the good things that we wanted for the LTS into 1.6.\nExcept 1 major one.\nso lets get that one, plus the other nice things that have been added since, the 1.6 feature freeze,\nand cut a release"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"bbd7d205-eef9-423f-b98e-d806da95bae7","type":"message","text":"the autodiff stuff still isn't in Master, right? A 1.7 freeze when 1.6 was released probably wouldn't have the autodiff stuff","user":"U0179G7FG4F","ts":"1611338070.045100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L0a3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the autodiff stuff still isn't in Master, right? A 1.7 freeze when 1.6 was released probably wouldn't have the autodiff stuff"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"1ffa91d8-07d0-4dcf-8422-dd5f9b55c666","type":"message","text":"It isn’t in master today, but by my (uninformed) guess we are over a month away from 1.6's final release.\nJust from historical patterns that is my guess.\n1.6-beta is pretty broken still.\nThen 2 weeks of RC1, + 2 weeks of RC2.\nThen final.\n\nCould be that we don’t need a RC2.\nBut still means we are over 2 weeks away","user":"U6A936746","ts":"1611338160.045300","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1611338366.000000"},"blocks":[{"type":"rich_text","block_id":"Rmo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It isn’t in master today, but by my (uninformed) guess we are over a month away from 1.6's final release.\nJust from historical patterns that is my guess.\n1.6-beta is pretty broken still.\nThen 2 weeks of RC1, + 2 weeks of RC2.\nThen final.\n\nCould be that we don’t need a RC2.\nBut still means we are over 2 weeks away"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y","reactions":[{"name":"+1","users":["U0179G7FG4F"],"count":1}]},{"type":"message","subtype":"thread_broadcast","text":"A bit of a tangent here: will only people that are currently using Zygote/reverse diff see benefits from the new autodiff framework?","user":"U011V2YN59N","ts":"1611351268.053200","thread_ts":"1611331660.040400","root":{"client_msg_id":"36be8e36-8535-4adb-8074-047d97366e47","type":"message","text":"How far out is 1.6 final?","user":"U8Z3LTQ8Y","ts":"1611331660.040400","team":"T68168MUP","edited":{"user":"U8Z3LTQ8Y","ts":"1611331670.000000"},"blocks":[{"type":"rich_text","block_id":"iz2G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How far out is 1.6 final?"}]}]}],"thread_ts":"1611331660.040400","reply_count":37,"reply_users_count":10,"latest_reply":"1611394151.064000","reply_users":["U0179G7FG4F","U6740K1SP","U67BJLYCS","UGD4K0Z25","U8Z3LTQ8Y","U6A936746","U011V2YN59N","U69BL50BF","UB7JS9CHF","UM30MT6RF"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"UzI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A bit of a tangent here: will only people that are currently using Zygote/reverse diff see benefits from the new autodiff framework?"}]}]}],"client_msg_id":"a0e678e8-f0d4-4823-839c-78bc01216c57"},{"client_msg_id":"91216ac1-826a-4621-9cee-21b5265241c6","type":"message","text":"the new framework will eventually end up in a not yet released package called Difractor","user":"U0179G7FG4F","ts":"1611351311.053500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ruO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the new framework will eventually end up in a not yet released package called Difractor"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"459a2e20-0e82-4814-8a8f-b66b596d2c60","type":"message","text":"I think you might see some limited benefit from it in Zygote.\nwe will probably turn all the closures in ChainRules and Zygote opaque, which will let the optimizer do much more to them.\nNot as much as it will probably be able to do inside Diffractor, but *something*.","user":"U6A936746","ts":"1611351420.053700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b1F2F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you might see some limited benefit from it in Zygote.\nwe will probably turn all the closures in ChainRules and Zygote opaque, which will let the optimizer do much more to them.\nNot as much as it will probably be able to do inside Diffractor, but "},{"type":"text","text":"something","style":{"bold":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"086d843e-0e0f-4948-a59a-5e9a0da62409","type":"message","text":"Even people not using autodiff will see benefits from it, because the new compiler tooling will show up in a lot of different packages. As far as AD, the main difference you'd see is in higher order AD or AD of quick operations (scalar) where getting inference correct would help a lot. Standard matmuls, not so much difference there.","user":"U69BL50BF","ts":"1611354283.054600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hcg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Even people not using autodiff will see benefits from it, because the new compiler tooling will show up in a lot of different packages. As far as AD, the main difference you'd see is in higher order AD or AD of quick operations (scalar) where getting inference correct would help a lot. Standard matmuls, not so much difference there."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"42c4df72-9d2a-4b15-8ed4-bc5f1b04e468","type":"message","text":"As for other AD, we were just talking about forward mode yesterday. It's on the docket. I'm going to hold <@U674T3KB3> to it at least :rolling_on_the_floor_laughing:","user":"U69BL50BF","ts":"1611354304.054800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kw/U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As for other AD, we were just talking about forward mode yesterday. It's on the docket. I'm going to hold "},{"type":"user","user_id":"U674T3KB3"},{"type":"text","text":" to it at least "},{"type":"emoji","name":"rolling_on_the_floor_laughing"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y","reactions":[{"name":"arrow_forward","users":["UM6JW2SF9"],"count":1}]},{"client_msg_id":"eee8dab8-4ffd-4559-a8dc-19e78719a9d6","type":"message","text":"what is left in the forward mode universe that ForwardDiff doesn't currently cover?","user":"U0179G7FG4F","ts":"1611354509.055000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xYCuD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what is left in the forward mode universe that ForwardDiff doesn't currently cover?"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"3e8869de-a553-436e-87b4-62c7f2c319ce","type":"message","text":"vector mode","user":"U69BL50BF","ts":"1611354541.055200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OI9Bm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"vector mode"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"4551bd41-e6f7-4beb-a4c7-8625a2354a88","type":"message","text":"SO MANY THINGS. I have a document with like 36 things AD could have that it doesn’t.\nAt least 1/3rd are related to forward mode","user":"U6A936746","ts":"1611354552.055400","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1611354558.000000"},"blocks":[{"type":"rich_text","block_id":"sbI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"SO MANY THINGS. I have a document with like 36 things AD could have that it doesn’t.\nAt least 1/3rd are related to forward mode"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y","reactions":[{"name":"+1","users":["U0179G7FG4F","U6740K1SP","UB7JS9CHF","UM6JW2SF9"],"count":4}]},{"client_msg_id":"855eea49-573d-45a4-8a2f-66cecfb4793e","type":"message","text":"but for a scalarized forward mode AD, it's really good.","user":"U69BL50BF","ts":"1611354579.055800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9+lq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but for a scalarized forward mode AD, it's really good."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"3f8b1149-6aa6-44f9-ae3a-b27cbc2a1c17","type":"message","text":"it really is","user":"U6A936746","ts":"1611354586.056000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oGk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it really is"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"2bc1a524-556d-4701-b028-32af8649f6f9","type":"message","text":"A  full source to source forward mode so that it doesn’t mess with your types, would be great.\nSupporting not just scalars, not just vectors, but also structures would also be great.","user":"U6A936746","ts":"1611354688.056200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O+6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A  full source to source forward mode so that it doesn’t mess with your types, would be great.\nSupporting not just scalars, not just vectors, but also structures would also be great."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"2a10add4-9607-47b2-a69a-93a87c7c14a2","type":"message","text":"All rules are only scalar (so you lose BLAS, when in reality you shouldn't even differentiate through linear operations!), the rule system is not extendable (DiffRules.jl doesn't let you add rules posthoc), chunk size is always compile time information (this is because of the representation via scalars), not being able to handle things like `::Float64`, doesn't use the ChainRules system","user":"U69BL50BF","ts":"1611354727.056400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QCi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"All rules are only scalar (so you lose BLAS, when in reality you shouldn't even differentiate through linear operations!), the rule system is not extendable (DiffRules.jl doesn't let you add rules posthoc), chunk size is always compile time information (this is because of the representation via scalars), not being able to handle things like "},{"type":"text","text":"::Float64","style":{"code":true}},{"type":"text","text":", doesn't use the ChainRules system"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"f2504399-c805-462d-b362-1d3434e904a1","type":"message","text":"There's a lot, I don't know if I can get to 36 though :rolling_on_the_floor_laughing:","user":"U69BL50BF","ts":"1611354738.056600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kXi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There's a lot, I don't know if I can get to 36 though "},{"type":"emoji","name":"rolling_on_the_floor_laughing"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"6fe17d33-aef1-4ad5-b0f6-af3b64fc2d1a","type":"message","text":"Only single partial mode is compatible with compiler reverse modes (and only if you `using DiffEqFlux`)","user":"U69BL50BF","ts":"1611354769.056800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fv2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Only single partial mode is compatible with compiler reverse modes (and only if you "},{"type":"text","text":"using DiffEqFlux","style":{"code":true}},{"type":"text","text":")"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"588ad877-2813-4e68-86cb-86ffb76160dc","type":"message","text":"more generally than that is things to make it really suitable for mixed mode.\nWhich is less a forward mode thing, so much as you need a forward-mode that is semantically similar enough to your reverse mode that they play nice..\n\nFor example Nabla is a reverse mode AD, but it automatically flips around under the hood to run a ton of code in forward mode. Things like `map` .\nThis is great for performance cos forward mode is much faster than reverse mode for single input single output functions.\nBut Zygote doesn’t do this.\nIn part because the changes you need to make your code work with ForwardDiff are different to the ones you need to make Zygote work (though not incompatible) '","user":"U6A936746","ts":"1611355023.057000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qvREb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"more generally than that is things to make it really suitable for mixed mode.\nWhich is less a forward mode thing, so much as you need a forward-mode that is semantically similar enough to your reverse mode that they play nice..\n\nFor example Nabla is a reverse mode AD, but it automatically flips around under the hood to run a ton of code in forward mode. Things like "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" .\nThis is great for performance cos forward mode is much faster than reverse mode for single input single output functions.\nBut Zygote doesn’t do this.\nIn part because the changes you need to make your code work with ForwardDiff are different to the ones you need to make Zygote work (though not incompatible) '"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"ede00a06-3351-4b61-a144-729e327dbc85","type":"message","text":"36 is the full list.\nI think there are 12 forward mode ones on there, but maybe I am over estimating. Might just be 6 or so.\nI would need to check\n\nThis is my 5 year AD outlook","user":"U6A936746","ts":"1611355109.057200","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1611355118.000000"},"blocks":[{"type":"rich_text","block_id":"aOJ8w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"36 is the full list.\nI think there are 12 forward mode ones on there, but maybe I am over estimating. Might just be 6 or so.\nI would need to check\n\nThis is my 5 year AD outlook"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"5889e512-986e-4fc2-b70d-7694a3c82597","type":"message","text":"imo the biggest difference between a comunist 5 year plan, and one in Julia is the comunist one ends in 3 years because of a coup, but the Julia one ends then because all the work got done faster than expected.","user":"U0179G7FG4F","ts":"1611356631.057800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wMAwU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"imo the biggest difference between a comunist 5 year plan, and one in Julia is the comunist one ends in 3 years because of a coup, but the Julia one ends then because all the work got done faster than expected."}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y","reactions":[{"name":"rolling_on_the_floor_laughing","users":["UB7JS9CHF","U9MED583T"],"count":2}]},{"client_msg_id":"4f6d35dd-e251-4ad0-8132-d2be144459fb","type":"message","text":"Reading this thread, I kept thinking of the song “The Future’s So Bright, I Gotta Wear Shades” :slightly_smiling_face:","user":"UB7JS9CHF","ts":"1611392241.063600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T5Cm4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Reading this thread, I kept thinking of the song “The Future’s So Bright, I Gotta Wear Shades” "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y"},{"client_msg_id":"776a4384-2673-4034-a7e5-a98ef5c01e2d","type":"message","text":"&gt; For example Nabla is a reverse mode AD, but it automatically flips around under the hood to run a ton of code in forward mode. Things like `map` .\nThis is great for performance cos forward mode is much faster than reverse mode for single input single output functions.\n&gt; But Zygote doesn't do this.\n\nZygote does do this for CuArrays at least, which caused problems when I wanted to use it with `CuArrays` of `SVectors` though","user":"UM30MT6RF","ts":"1611394151.064000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F23c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"> For example Nabla is a reverse mode AD, but it automatically flips around under the hood to run a ton of code in forward mode. Things like "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" .\nThis is great for performance cos forward mode is much faster than reverse mode for single input single output functions.\n> But Zygote doesn't do this.\n\nZygote does do this for CuArrays at least, which caused problems when I wanted to use it with "},{"type":"text","text":"CuArrays","style":{"code":true}},{"type":"text","text":" of "},{"type":"text","text":"SVectors","style":{"code":true}},{"type":"text","text":" though"}]}]}],"thread_ts":"1611331660.040400","parent_user_id":"U8Z3LTQ8Y","reactions":[{"name":"+1","users":["U6A936746"],"count":1}]}]