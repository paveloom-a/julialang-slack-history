[{"client_msg_id":"9506b184-3d1e-44a4-a95e-e63da434225f","type":"message","text":"any suggestion how to do this: i have a wrapper using pycall to access the ensembles in python: ENS=pyimport(“sklearn.ensemble”). there are several of them but i just want to load them dynamically. Normally, you would access for example “RandomForestClassifier” as ENS.RandomForestClassifier. However, if i assign name to a variable like, rf=“RandomForestClassfier”, how can i programmatically access the pyobject because ENS.rf won’t work or @eval ENS.$rf. basically i want to access the value of rf and use it to ENS.valueof(rf). any idea how to do this?","user":"U6SHSF4R0","ts":"1617042351.156600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KIT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"any suggestion how to do this: i have a wrapper using pycall to access the ensembles in python: ENS=pyimport(“sklearn.ensemble”). there are several of them but i just want to load them dynamically. Normally, you would access for example “RandomForestClassifier” as ENS.RandomForestClassifier. However, if i assign name to a variable like, rf=“RandomForestClassfier”, how can i programmatically access the pyobject because ENS.rf won’t work or @eval ENS.$rf. basically i want to access the value of rf and use it to ENS.valueof(rf). any idea how to do this?"}]}]}],"thread_ts":"1617042351.156600","reply_count":5,"reply_users_count":2,"latest_reply":"1617042769.160200","reply_users":["UN97XTLCV","U6SHSF4R0"],"is_locked":false,"subscribed":false},{"client_msg_id":"f6eb9cbb-262e-43be-9790-89af550edfbb","type":"message","text":"why not\n```mods = [pyimport(\"sklearn.ensemble.$METHOD\") for METHOD in METHODS]```","user":"UN97XTLCV","ts":"1617042558.157900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BxuF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why not\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"mods = [pyimport(\"sklearn.ensemble.$METHOD\") for METHOD in METHODS]"}]}]}],"thread_ts":"1617042351.156600","parent_user_id":"U6SHSF4R0"},{"client_msg_id":"3858c69b-971c-4bb1-b60e-0284b62c638e","type":"message","text":"no, this is dynamic, a user can pass the name from the REPL","user":"U6SHSF4R0","ts":"1617042595.158700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jIPzl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, this is dynamic, a user can pass the name from the REPL"}]}]}],"thread_ts":"1617042351.156600","parent_user_id":"U6SHSF4R0"},{"client_msg_id":"e8095dd6-f620-4602-a0c3-59700e235ee3","type":"message","text":"and it is in the module already so the init function just load the pointer of the sklearn.ensemble without loading the classes inside","user":"U6SHSF4R0","ts":"1617042648.159300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VQN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it is in the module already so the init function just load the pointer of the sklearn.ensemble without loading the classes inside"}]}]}],"thread_ts":"1617042351.156600","parent_user_id":"U6SHSF4R0"},{"client_msg_id":"f25a763e-d353-4172-b61d-f98675698e82","type":"message","text":"basically, you make sure the init function loads the pointer upon loading of the module. we use the ENS pointer to dynamically load the object. ah, maybe i can do that pyimport. let me check","user":"U6SHSF4R0","ts":"1617042742.159700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dN9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"basically, you make sure the init function loads the pointer upon loading of the module. we use the ENS pointer to dynamically load the object. ah, maybe i can do that pyimport. let me check"}]}]}],"thread_ts":"1617042351.156600","parent_user_id":"U6SHSF4R0"},{"client_msg_id":"636fd987-57f9-4cb6-9279-be89c46d54f2","type":"message","text":"i don’t understand why you can’t pyimport based off user input. Perhaps I’m not understanding the full problem-\n\n```function load_ens_module(name)\n    return pyimport(\"sklearn.ensemble.$name\")\nend```","user":"UN97XTLCV","ts":"1617042769.160200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aZqk1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i don’t understand why you can’t pyimport based off user input. Perhaps I’m not understanding the full problem-\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function load_ens_module(name)\n    return pyimport(\"sklearn.ensemble.$name\")\nend"}]}]}],"thread_ts":"1617042351.156600","parent_user_id":"U6SHSF4R0"}]