[{"type":"message","text":"I've seen a talk about LISP machines at rC3 yesterday.\nA LISP machine is characterized by the fact that the underlying Operating System, System drivers are all written in LISP. \n\nLisp machines usually come with a lot of niceties for developing their target language.\nHas someone considered writing an OS for a Julia machine?\n(All the scheduling, file abstractions, ... are written in Julia)","user":"U9MD78Z9N","ts":"1609150839.124700","team":"T68168MUP","thread_ts":"1609150839.124700","reply_count":35,"reply_users_count":7,"latest_reply":"1609199535.140700","reply_users":["UH24GRBLL","UDSU53PEG","UPUBAM63X","U9MD78Z9N","UGU761DU2","U01CQTKB86N","U6QGE7S86"],"subscribed":false,"reactions":[{"name":"emacs","users":["UDB26738Q","UMDEUKM29","U6NFPDBV1","UH8A351DJ","UKG4WF8PJ"],"count":5}]},{"client_msg_id":"8aaf942c-958f-49d1-ad3e-6ab11c40ab8e","type":"message","text":"You'd have to make julia fully bootstrapped first","user":"UH24GRBLL","ts":"1609151938.124800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dtf3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You'd have to make julia fully bootstrapped first"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"5a357279-22cf-4c5b-958d-80550d4f4226","type":"message","text":"but if you ignore that - I've considered it, but haven't entertained the idea seriously","user":"UH24GRBLL","ts":"1609152006.125200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NmiMA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but if you ignore that - I've considered it, but haven't entertained the idea seriously"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"d56b8d2c-2417-4492-bb8c-1522cd1802ab","type":"message","text":"like a boot to REPL setup?","user":"UDSU53PEG","ts":"1609152054.125400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZQ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like a boot to REPL setup?"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"d7b554e6-26e5-4cdd-922a-2bd054961eb0","type":"message","text":"like a `open(\"file\")`-is-julia-all-the-way-down setup","user":"UH24GRBLL","ts":"1609152093.125600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gabj9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like a "},{"type":"text","text":"open(\"file\")","style":{"code":true}},{"type":"text","text":"-is-julia-all-the-way-down setup"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"f130732d-e93c-477f-b6a4-5fe1772550d8","type":"message","text":"boot to REPL would just be setting your login shell to point to `julia`","user":"UH24GRBLL","ts":"1609152117.125800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UZY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"boot to REPL would just be setting your login shell to point to "},{"type":"text","text":"julia","style":{"code":true}}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"0299f417-4c3f-4216-a714-1570d4e4efaa","type":"message","text":"but the login shell would be julia...","user":"UDSU53PEG","ts":"1609152351.126300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M49zP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but the login shell would be julia..."}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"4e52b53e-2256-4195-929b-c9f5aea165d1","type":"message","text":"true, but you're still relying on all the non-julia dependencies :thinking_face:","user":"UH24GRBLL","ts":"1609152386.126500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VkB6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"true, but you're still relying on all the non-julia dependencies "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"d6315c06-de10-471e-9578-8c30f4f187ce","type":"message","text":"like `sh` for the shell mode","user":"UH24GRBLL","ts":"1609152394.126700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+qPrk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like "},{"type":"text","text":"sh","style":{"code":true}},{"type":"text","text":" for the shell mode"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"b73346bb-5a40-4e17-b99d-3d89dccf7bba","type":"message","text":"hmm how much work would it be to rework shell mode to call the binaries directly..?","user":"UH24GRBLL","ts":"1609152426.126900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kYW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm how much work would it be to rework shell mode to call the binaries directly..?"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"db07b043-5eb0-4bdd-b18a-524ddcc4d413","type":"message","text":"an immense amount?","user":"UDSU53PEG","ts":"1609152440.127100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m0n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"an immense amount?"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"45ea54e3-4259-4b95-aabb-c8f54d098b1f","type":"message","text":"I don't know","user":"UH24GRBLL","ts":"1609152445.127300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GnT8g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"1fa1d367-2741-48d2-80ee-77713c42f5ae","type":"message","text":"we could use the shell literal parsing stuff, right?","user":"UH24GRBLL","ts":"1609152455.127500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9wB=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"we could use the shell literal parsing stuff, right?"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"edca3668-61b1-4ef8-8f4d-862e498223f8","type":"message","text":"and with shell mode becoming sticky in a future version iirc.. :eyes:","user":"UH24GRBLL","ts":"1609152480.127700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rrl4t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and with shell mode becoming sticky in a future version iirc.. "},{"type":"emoji","name":"eyes"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"38007c7b-9f7c-45b0-879a-c23798d5f59c","type":"message","text":"I'm not even really sure what it means when people say Julia is LISP'y tbh","user":"UDSU53PEG","ts":"1609152546.127900","team":"T68168MUP","edited":{"user":"UDSU53PEG","ts":"1609152555.000000"},"blocks":[{"type":"rich_text","block_id":"iow","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not even really sure what it means when people say Julia is LISP'y tbh"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"750b86ee-f153-49c8-acc3-2eb795119d37","type":"message","text":"I think that's the association being made by the OP","user":"UDSU53PEG","ts":"1609152587.128200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FZhS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think that's the association being made by the OP"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"c0c685a8-0ae4-4ab5-9ff8-a5be895c3491","type":"message","text":"but it seems like a stretch to me and not really overlapping into some deeper technical merits","user":"UDSU53PEG","ts":"1609152624.128400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"snOF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but it seems like a stretch to me and not really overlapping into some deeper technical merits"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"8a910579-2d92-4fae-a9cd-100ee1f58e32","type":"message","text":"it's LSIPy in the sense that everything is an Expression and every expression returns some value","user":"UH24GRBLL","ts":"1609152848.128600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BXu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's LSIPy in the sense that everything is an Expression and every expression returns some value"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"33934028-c52d-4eda-b9d6-47d0d30ba1cd","type":"message","text":":shrug:","user":"UDSU53PEG","ts":"1609152904.128800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"degyq","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"shrug"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"ab2ef9fb-2e11-4a24-8aa0-b2c11c3a6ce2","type":"message","text":"If julia crosses into static compilation maybe this wouldn't be the most crazy idea.","user":"UPUBAM63X","ts":"1609154969.129100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rutL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If julia crosses into static compilation maybe this wouldn't be the most crazy idea."}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"e2ae1925-b0fe-48f2-9286-6e78b5430011","type":"message","text":"don't get your hopes up","user":"UH24GRBLL","ts":"1609158292.129300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bop","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"don't get your hopes up"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"80908f28-5cb5-4ccf-a6cc-42b370cd3c92","type":"message","text":"irrespective of static compilation, writing an OS is no easy task","user":"UH24GRBLL","ts":"1609158307.129500","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609158457.000000"},"blocks":[{"type":"rich_text","block_id":"+Ui","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"irrespective of static compilation, writing an OS is no easy task"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"596ae396-5bc7-45e6-b99b-5fd740b52da6","type":"message","text":"especially if you want to interface with any existing programs at all","user":"UH24GRBLL","ts":"1609158324.129700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uj/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"especially if you want to interface with any existing programs at all"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"127288bb-3956-4611-b547-8dd2130c589e","type":"message","text":"just look at how much resistance there is to musl or seL4 adoption","user":"UH24GRBLL","ts":"1609158338.129900","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609158560.000000"},"blocks":[{"type":"rich_text","block_id":"aZR7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just look at how much resistance there is to musl or seL4 adoption"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"c2611739-e21e-46bb-9328-d1ec63a24806","type":"message","text":"tho implementing a micro-kernel is an undergraduate exercise","user":"UDSU53PEG","ts":"1609160718.130300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gvv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"tho implementing a micro-kernel is an undergraduate exercise"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"2ebd12c3-d73a-449f-8414-e2aa062a45ef","type":"message","text":"yes - been there, done that, was fun, can recommend","user":"UH24GRBLL","ts":"1609161372.130500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9mP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes - been there, done that, was fun, can recommend"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"Legacy apps naturally wouldn't run on a Julia machine. It might be possible to give some semblance of an C standard library using Julia so some C libraries might work but that's all i would expect at most.\nThe file system doesn't have to be hierarchical. You can make lot's of fun changes when you are making a Julia machine...","user":"U9MD78Z9N","ts":"1609167780.130900","team":"T68168MUP","thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"There could be an GUI framework written in Julia.","user":"U9MD78Z9N","ts":"1609167812.131100","team":"T68168MUP","thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"2e7c05bf-3b16-47ad-a3d8-235ba8e79cdd","type":"message","text":"sounds like the start of a spec :laughing:","user":"UDSU53PEG","ts":"1609168902.131300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Cf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sounds like the start of a spec "},{"type":"emoji","name":"laughing"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"cfb7531c-790d-4a75-8b10-2a00730c298f","type":"message","text":"&gt; I’m not even really sure what it means when people say Julia is LISP’y tbh\nWell so AFAICT one of the things people mean when they say Julia is lisp-y is homoiconicity. There’s some debate as to whether normal Julia is fully homoiconic, because the representation of code in which we interact with it looks different than the representation of code-as-data, but it turns out Julia does have a perfectly good s-expression form, which you can get at with `Meta.show_sexpr`.","user":"UGU761DU2","ts":"1609180054.134000","team":"T68168MUP","edited":{"user":"UGU761DU2","ts":"1609180285.000000"},"blocks":[{"type":"rich_text","block_id":"brICq","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I’m not even really sure what it means when people say Julia is LISP’y tbh"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Well so AFAICT one of the things people mean when they say Julia is lisp-y is homoiconicity. There’s some debate as to whether normal Julia is fully homoiconic, because the representation of code in which we interact with it looks different than the representation of code-as-data, but it turns out Julia does have a perfectly good s-expression form, which you can get at with "},{"type":"text","text":"Meta.show_sexpr","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"So basically, just paste this in your REPL and you get a Julia-as-LISP-s-expression REPL\n```to_expr(x) = x\nto_expr(t::Tuple) = isa(t[1], Symbol) ? Expr(to_expr.(t)...) : Expr(:tuple, to_expr.(t)...)\nlisparse(x) = to_expr(eval(Meta.parse(x)))\nfunction lispmode()\n    # READ\n    printstyled(\"\\nlisp&gt; \", color=:magenta, bold=true)\n    l = readline()\n    while l !== \"(:exit)\"\n        try # So we don't get thrown out of the mode\n            # EVAL\n            result = eval(lisparse(l))\n            # PRINT\n            if isa(result, Expr)\n                Meta.show_sexpr(result)\n                println()\n            elseif isa(result, Tuple)\n                Meta.show_sexpr(:($(result...),))\n                println()\n            else\n                display(result)\n            end\n        catch e\n            display(e)\n        end\n        # LOOP\n        printstyled(\"\\nlisp&gt; \", color=:magenta, bold=true)\n        l = readline()\n    end\nend\nlispmode()```","files":[{"id":"F01J2J83J9F","created":1609180203,"timestamp":1609180203,"name":"Screen Shot 2020-10-18 at 10.59.44 PM.png","title":"Screen Shot 2020-10-18 at 10.59.44 PM.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UGU761DU2","editable":false,"size":99243,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01J2J83J9F/screen_shot_2020-10-18_at_10.59.44_pm.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01J2J83J9F/download/screen_shot_2020-10-18_at_10.59.44_pm.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01J2J83J9F-71908a3ded/screen_shot_2020-10-18_at_10.59.44_pm_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01J2J83J9F-71908a3ded/screen_shot_2020-10-18_at_10.59.44_pm_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01J2J83J9F-71908a3ded/screen_shot_2020-10-18_at_10.59.44_pm_360.png","thumb_360_w":360,"thumb_360_h":194,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01J2J83J9F-71908a3ded/screen_shot_2020-10-18_at_10.59.44_pm_480.png","thumb_480_w":480,"thumb_480_h":259,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01J2J83J9F-71908a3ded/screen_shot_2020-10-18_at_10.59.44_pm_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01J2J83J9F-71908a3ded/screen_shot_2020-10-18_at_10.59.44_pm_720.png","thumb_720_w":720,"thumb_720_h":389,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01J2J83J9F-71908a3ded/screen_shot_2020-10-18_at_10.59.44_pm_800.png","thumb_800_w":800,"thumb_800_h":432,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01J2J83J9F-71908a3ded/screen_shot_2020-10-18_at_10.59.44_pm_960.png","thumb_960_w":960,"thumb_960_h":518,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01J2J83J9F-71908a3ded/screen_shot_2020-10-18_at_10.59.44_pm_1024.png","thumb_1024_w":1024,"thumb_1024_h":553,"original_w":1222,"original_h":660,"thumb_tiny":"AwAZADCpznoaME9jQc/5NH+etMBMH0oxRz6/rRigBKKXHuKSgB35flSflSn7pptAgooooGFFFFAH/9k=","permalink":"https://julialang.slack.com/files/UGU761DU2/F01J2J83J9F/screen_shot_2020-10-18_at_10.59.44_pm.png","permalink_public":"https://slack-files.com/T68168MUP-F01J2J83J9F-de0166721f","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"OkOeB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So basically, just paste this in your REPL and you get a Julia-as-LISP-s-expression REPL\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"to_expr(x) = x\nto_expr(t::Tuple) = isa(t[1], Symbol) ? Expr(to_expr.(t)...) : Expr(:tuple, to_expr.(t)...)\nlisparse(x) = to_expr(eval(Meta.parse(x)))\nfunction lispmode()\n    # READ\n    printstyled(\"\\nlisp> \", color=:magenta, bold=true)\n    l = readline()\n    while l !== \"(:exit)\"\n        try # So we don't get thrown out of the mode\n            # EVAL\n            result = eval(lisparse(l))\n            # PRINT\n            if isa(result, Expr)\n                Meta.show_sexpr(result)\n                println()\n            elseif isa(result, Tuple)\n                Meta.show_sexpr(:($(result...),))\n                println()\n            else\n                display(result)\n            end\n        catch e\n            display(e)\n        end\n        # LOOP\n        printstyled(\"\\nlisp> \", color=:magenta, bold=true)\n        l = readline()\n    end\nend\nlispmode()"}]}]}],"user":"UGU761DU2","display_as_bot":false,"ts":"1609180293.135400","thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N","subtype":"thread_broadcast","root":{"type":"message","text":"I've seen a talk about LISP machines at rC3 yesterday.\nA LISP machine is characterized by the fact that the underlying Operating System, System drivers are all written in LISP. \n\nLisp machines usually come with a lot of niceties for developing their target language.\nHas someone considered writing an OS for a Julia machine?\n(All the scheduling, file abstractions, ... are written in Julia)","user":"U9MD78Z9N","ts":"1609150839.124700","team":"T68168MUP","thread_ts":"1609150839.124700","reply_count":35,"reply_users_count":7,"latest_reply":"1609199535.140700","reply_users":["UH24GRBLL","UDSU53PEG","UPUBAM63X","U9MD78Z9N","UGU761DU2","U01CQTKB86N","U6QGE7S86"],"subscribed":false},"reactions":[{"name":"star-struck","users":["UDSU53PEG","U0179G7FG4F","UPUBAM63X"],"count":3},{"name":"ahhhhhhh","users":["UPUBAM63X"],"count":1}]},{"type":"message","text":"Some fun tidbits about this lisp-y REPL mode:\n1) any variables, functions, etc. that you define in the normal Julia REPL are fully available in the s-expression REPL, and vice versa (they just might print a bit differently)\n2) Normal Julia code can be used as a sort of “preprocessor macro” relative to the s-expression code (will get evaluated before the s-expression does):","files":[{"id":"F01HW5EH23E","created":1609181421,"timestamp":1609181421,"name":"Screen Shot 2020-12-28 at 1.43.50 PM.png","title":"Screen Shot 2020-12-28 at 1.43.50 PM.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"UGU761DU2","editable":false,"size":20540,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01HW5EH23E/screen_shot_2020-12-28_at_1.43.50_pm.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01HW5EH23E/download/screen_shot_2020-12-28_at_1.43.50_pm.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01HW5EH23E-fc4f72ed1b/screen_shot_2020-12-28_at_1.43.50_pm_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01HW5EH23E-fc4f72ed1b/screen_shot_2020-12-28_at_1.43.50_pm_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01HW5EH23E-fc4f72ed1b/screen_shot_2020-12-28_at_1.43.50_pm_360.png","thumb_360_w":360,"thumb_360_h":50,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01HW5EH23E-fc4f72ed1b/screen_shot_2020-12-28_at_1.43.50_pm_480.png","thumb_480_w":480,"thumb_480_h":67,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01HW5EH23E-fc4f72ed1b/screen_shot_2020-12-28_at_1.43.50_pm_160.png","original_w":705,"original_h":98,"thumb_tiny":"AwAGADCnkelGR6U2imA7K+lGV7D86bRQIXPsKM+wpKKAP//Z","permalink":"https://julialang.slack.com/files/UGU761DU2/F01HW5EH23E/screen_shot_2020-12-28_at_1.43.50_pm.png","permalink_public":"https://slack-files.com/T68168MUP-F01HW5EH23E-cf1c06c6a6","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"Olt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some fun tidbits about this lisp-y REPL mode:\n1) any variables, functions, etc. that you define in the normal Julia REPL are fully available in the s-expression REPL, and vice versa (they just might print a bit differently)\n2) Normal Julia code can be used as a sort of “preprocessor macro” relative to the s-expression code (will get evaluated before the s-expression does):"}]}]}],"user":"UGU761DU2","display_as_bot":false,"ts":"1609181431.137400","thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"58c7b3f8-5ba6-488e-95f4-b47e6b87a312","type":"message","text":"There’s a femtoLisp inside Julia, but I don’t know if you can use it and how.","user":"U01CQTKB86N","ts":"1609187426.137800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rzJ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There’s a femtoLisp inside Julia, but I don’t know if you can use it and how."}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"9c259600-a468-42fb-ba90-1bfe201a541d","type":"message","text":"`julia --lisp`","user":"UH24GRBLL","ts":"1609188435.138800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tpuuZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"julia --lisp","style":{"code":true}}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N","reactions":[{"name":"juliaislisp","users":["UGU761DU2","U6QGE7S86"],"count":2}]},{"client_msg_id":"82fe3b89-6e29-4e67-ac18-628bb09681a7","type":"message","text":"doesn't hook into julia though","user":"UH24GRBLL","ts":"1609188450.139000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kbNHq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"doesn't hook into julia though"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"ebd8567f-a38a-43d5-8b99-41e4857d755f","type":"message","text":"LispSyntax.jl also works","user":"U6QGE7S86","ts":"1609199535.140700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AwcK+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LispSyntax.jl also works"}]}]}],"thread_ts":"1609150839.124700","parent_user_id":"U9MD78Z9N"}]