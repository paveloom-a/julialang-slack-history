[{"client_msg_id":"7565e6ef-56ec-426b-9019-2a26b8ceef55","type":"message","text":"PyTorch is getting JAX like code transforms: <https://twitter.com/cHHillee/status/1367621541693857794>","user":"UDGT4PM41","ts":"1614965145.034100","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/cHHillee|@cHHillee>: Since your transformation takes in Python code and outputs Python source code, they're\n1. Automatically composable with each other\n2. Automatically composable with anything else (like Torchscript).\n3. Able to be dumped out as Python code. \n\nHere's an example (2/4) <https://pbs.twimg.com/media/EvrDp5TVkAAJt7z.png>","ts":1614901359,"author_name":"Horace He","author_link":"https://twitter.com/cHHillee/status/1367621541693857794","author_icon":"https://pbs.twimg.com/profile_images/918522465478987776/4rqdxVqQ_normal.jpg","author_subname":"@cHHillee","text":"Since your transformation takes in Python code and outputs Python source code, they're\n1. Automatically composable with each other\n2. Automatically composable with anything else (like Torchscript).\n3. Able to be dumped out as Python code. \n\nHere's an example (2/4) <https://pbs.twimg.com/media/EvrDp5TVkAAJt7z.png>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/cHHillee/status/1367621541693857794","image_url":"https://pbs.twimg.com/media/EvrDp5TVkAAJt7z.png","image_width":811,"image_height":433,"image_bytes":49251,"id":1,"original_url":"https://twitter.com/cHHillee/status/1367621541693857794","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"=cO9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"PyTorch is getting JAX like code transforms: "},{"type":"link","url":"https://twitter.com/cHHillee/status/1367621541693857794"}]}]}],"thread_ts":"1614965145.034100","reply_count":10,"reply_users_count":5,"latest_reply":"1615441620.269100","reply_users":["UDGT4PM41","U017D621ELC","UMY1LV01G","U011V2YN59N","UN3R6SDDW"],"subscribed":false},{"client_msg_id":"1a0f1b94-a685-48da-b2c2-9f7f92740e40","type":"message","text":"<@UMY1LV01G>","user":"UDGT4PM41","ts":"1614965399.034900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"irr","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UMY1LV01G"}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"4ca47b9f-0a78-4c99-985b-65af067fe8dd","type":"message","text":"TF includes dynamic graphs from Pytorch\nPytorch includes functional transforms from JAX\nWhat next?","user":"U017D621ELC","ts":"1614966282.035800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1ilM2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"TF includes dynamic graphs from Pytorch\nPytorch includes functional transforms from JAX\nWhat next?"}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"7c3cb641-767f-4c30-84f6-d08d915f4002","type":"message","text":"The convergence between both frameworks was inevitable once PyTorch started eating TF's lunch for research and looking into edge/mobile deployment","user":"UMY1LV01G","ts":"1614966383.036000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MCRdn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The convergence between both frameworks was inevitable once PyTorch started eating TF's lunch for research and looking into edge/mobile deployment"}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"8453bd4f-519a-483f-bb2e-9f55a080ff8a","type":"message","text":"I'm not sure how I feel about the new graph framework. It looks nice, but does feel a bit \"bolted on\" and adds to the kitchen sink","user":"UMY1LV01G","ts":"1614966494.036200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hV8I3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure how I feel about the new graph framework. It looks nice, but does feel a bit \"bolted on\" and adds to the kitchen sink"}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41","reactions":[{"name":"confused","users":["U017D621ELC","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"ef8091a7-1f2a-4dc1-a7ad-a155c0a3bb47","type":"message","text":"JAX definitely has the cleanest conceptual model and least amount of API bloat. I guess we'll see if their strategy of outsourcing higher level libraries to the community pays off, or if the core library accumulates more and more orthogonal features.","user":"UMY1LV01G","ts":"1614966678.036700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w5IL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"JAX definitely has the cleanest conceptual model and least amount of API bloat. I guess we'll see if their strategy of outsourcing higher level libraries to the community pays off, or if the core library accumulates more and more orthogonal features."}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41","reactions":[{"name":"heart","users":["U017D621ELC","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"b0217498-953e-4907-b55c-ae66a596db7b","type":"message","text":"PyTorch started off small, after all. Though in fairness they never claimed to be just a library like JAX does","user":"UMY1LV01G","ts":"1614966722.036900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b+A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"PyTorch started off small, after all. Though in fairness they never claimed to be just a library like JAX does"}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"d373c6a9-1830-4e64-be56-339345b913a4","type":"message","text":"I hurts how much money and effort are being put into making python fast.","user":"U011V2YN59N","ts":"1614973220.041300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zcc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I hurts how much money and effort are being put into making python fast."}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41","reactions":[{"name":"100","users":["UDGT4PM41","U93BUBZP0"],"count":2},{"name":"disappointed_relieved","users":["U017D621ELC"],"count":1}]},{"client_msg_id":"85d12e6a-17c4-4b1f-9f26-6b0e9a73b5e8","type":"message","text":"when like python is very unpleasant to write","user":"U011V2YN59N","ts":"1614973389.042100","team":"T68168MUP","edited":{"user":"U011V2YN59N","ts":"1614973396.000000"},"blocks":[{"type":"rich_text","block_id":"6mXQt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"when like python is very unpleasant to write"}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41","reactions":[{"name":"+1","users":["U93BUBZP0"],"count":1}]},{"client_msg_id":"c4c4f3b0-005d-43ec-bc2c-8e4f764b10a8","type":"message","text":"<@UMY1LV01G> Definitely agree that Jax the least amount of API float - not sure if I agree that it has the cleanest conceptual model :stuck_out_tongue: Or well, I'd argue that perhaps it's the cleanest, but that doesn't make it the easiest to reason about.\n\nI do sympathize with your concerns about FX haha - in some sense it's 100% bolted on. PyTorch was never meant to have a dynamic graph representation.\n\nEssentially, the hope is that there are a subset of programs that users want function transformations for, where they're willing to deal with the limitations that come from trying to acquire a graph in Python.","user":"UN3R6SDDW","ts":"1615438766.268100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7Fg","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UMY1LV01G"},{"type":"text","text":" Definitely agree that Jax the least amount of API float - not sure if I agree that it has the cleanest conceptual model "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":" Or well, I'd argue that perhaps it's the cleanest, but that doesn't make it the easiest to reason about.\n\nI do sympathize with your concerns about FX haha - in some sense it's 100% bolted on. PyTorch was never meant to have a dynamic graph representation.\n\nEssentially, the hope is that there are a subset of programs that users want function transformations for, where they're willing to deal with the limitations that come from trying to acquire a graph in Python."}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41"},{"client_msg_id":"0f0c80b4-6670-4a1d-95a3-eddc47fd182a","type":"message","text":"Hi Horace :)\nFWIW I do think fx is a worthwhile addition and will eliminate whole class of nasty hacks people have been doing in the name of getting good performance out of network primitives. I think my point about JAX would've been better phrased as \"fewer moving parts\" since Torch's autograd is pretty dang simple conceptually (while running circles around e.g. TF when it comes to resource usage in practice). What I hope is that we're seeing a breakdown of the old \"private island\" model of incompatible library ecosystems with these newer libraries. Julia obviously has the benefit of hindsight and not being the first mover in that respect.","user":"UMY1LV01G","ts":"1615441620.269100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RPbj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi Horace :)\nFWIW I do think fx is a worthwhile addition and will eliminate whole class of nasty hacks people have been doing in the name of getting good performance out of network primitives. I think my point about JAX would've been better phrased as \"fewer moving parts\" since Torch's autograd is pretty dang simple conceptually (while running circles around e.g. TF when it comes to resource usage in practice). What I hope is that we're seeing a breakdown of the old \"private island\" model of incompatible library ecosystems with these newer libraries. Julia obviously has the benefit of hindsight and not being the first mover in that respect."}]}]}],"thread_ts":"1614965145.034100","parent_user_id":"UDGT4PM41"}]