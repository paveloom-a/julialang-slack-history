[{"client_msg_id":"e9bc28c8-15c0-4968-8478-2e43711df048","type":"message","text":"Someone remember the link to a swift feature that resulted not being able to always be solvable by the compiler because something related to group theory?","user":"U0110B59U0Y","ts":"1618079961.302200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kPr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Someone remember the link to a swift feature that resulted not being able to always be solvable by the compiler because something related to group theory?"}]}]}],"thread_ts":"1618079961.302200","reply_count":3,"reply_users_count":2,"latest_reply":"1618171294.313200","reply_users":["U0110B59U0Y","U6795JH6H"],"is_locked":false,"subscribed":false},{"client_msg_id":"82dbd7ea-cc8d-4430-8827-660f87cdc044","type":"message","text":"Found it! It was the type checking.\n<https://forums.swift.org/t/swift-type-checking-is-undecidable/39024>","user":"U0110B59U0Y","ts":"1618080150.302300","team":"T68168MUP","attachments":[{"service_name":"Swift Forums","title":"Swift type checking is undecidable","title_link":"https://forums.swift.org/t/swift-type-checking-is-undecidable/39024","text":"More precisely, the introduction of SE-0142 and SE-0157 has made canonical type computation into an undecidable problem. I'll begin with the necessary background information before presenting my argument, and then outlining the next steps. Canonical types Consider these two protocols, stripped down from the real implementations in the standard library: protocol IteratorProtocol { associatedtype Element } protocol Sequence { associatedtype Iterator : IteratorProtocol associatedtype Eleme...","fallback":"Swift Forums: Swift type checking is undecidable","thumb_url":"https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png","fields":[{"title":"Reading time","value":"13 mins :clock2:","short":true},{"title":"Likes","value":"260 :heart:","short":true}],"ts":1596488258,"from_url":"https://forums.swift.org/t/swift-type-checking-is-undecidable/39024","thumb_width":590,"thumb_height":585,"service_icon":"https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png","id":1,"original_url":"https://forums.swift.org/t/swift-type-checking-is-undecidable/39024"}],"blocks":[{"type":"rich_text","block_id":"bRTz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Found it! It was the type checking.\n"},{"type":"link","url":"https://forums.swift.org/t/swift-type-checking-is-undecidable/39024"}]}]}],"thread_ts":"1618079961.302200","parent_user_id":"U0110B59U0Y"},{"client_msg_id":"0AE6F8E0-7E7F-4D7F-8D4A-5192D0F63C18","type":"message","text":"Very interesting","user":"U6795JH6H","ts":"1618171228.311500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zJs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Very interesting"}]}]}],"thread_ts":"1618079961.302200","parent_user_id":"U0110B59U0Y"},{"client_msg_id":"CB9E9386-8BEC-420F-88DD-326518C06CCE","type":"message","text":"Seems like a somewhat obviously too powerful feature IMO, but some limitation would no doubt allow it to continue to work and be decidable","user":"U6795JH6H","ts":"1618171294.313200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/qO54","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems like a somewhat obviously too powerful feature IMO, but some limitation would no doubt allow it to continue to work and be decidable"}]}]}],"thread_ts":"1618079961.302200","parent_user_id":"U0110B59U0Y"}]