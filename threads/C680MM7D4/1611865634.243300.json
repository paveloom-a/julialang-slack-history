[{"client_msg_id":"a4fd57a2-2828-4b77-906c-f9a2451ea785","type":"message","text":"This very very old post by Stephan (<https://news.ycombinator.com/item?id=3607238>), made me realize that Julia actually has a mechanism to share behavior between types. Just make abstract type and use multiple dispatch to get any combination of abstract types you like. The whole method written to class thing was drilled into my head so much that I forgot what exactly its enabling me to do.","user":"U010LT79LKX","ts":"1611865634.243300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sn2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This very very old post by Stephan ("},{"type":"link","url":"https://news.ycombinator.com/item?id=3607238"},{"type":"text","text":"), made me realize that Julia actually has a mechanism to share behavior between types. Just make abstract type and use multiple dispatch to get any combination of abstract types you like. The whole method written to class thing was drilled into my head so much that I forgot what exactly its enabling me to do."}]}]}],"thread_ts":"1611865634.243300","reply_count":1,"reply_users_count":1,"latest_reply":"1611865667.243400","reply_users":["U010LT79LKX"],"subscribed":false},{"client_msg_id":"c2b67383-447f-4f7e-b329-8e5c4cce22ab","type":"message","text":"And its not like I have not done it in my own Julia code. Just that I didn't realize its the same thing.","user":"U010LT79LKX","ts":"1611865667.243400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KfJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And its not like I have not done it in my own Julia code. Just that I didn't realize its the same thing."}]}]}],"thread_ts":"1611865634.243300","parent_user_id":"U010LT79LKX"}]