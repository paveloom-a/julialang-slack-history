[{"client_msg_id":"2cf66a9e-5e3f-4b3b-869c-2b412cc9a053","type":"message","text":"Why do we have optimizations for literal powers, but then they don't inline?\n\n```for i = 1:100\n    j += i^5\nend```\ndoes a function call to `power_by_squaring` every iteration (where j has integer type)","user":"U6N6VQE30","ts":"1611937698.318400","team":"T68168MUP","edited":{"user":"U6N6VQE30","ts":"1611937720.000000"},"blocks":[{"type":"rich_text","block_id":"0VpS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why do we have optimizations for literal powers, but then they don't inline?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for i = 1:100\n    j += i^5\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"does a function call to "},{"type":"text","text":"power_by_squaring","style":{"code":true}},{"type":"text","text":" every iteration (where j has integer type)"}]}]}],"thread_ts":"1611937698.318400","reply_count":22,"reply_users_count":5,"latest_reply":"1612026177.371600","reply_users":["U6N6VQE30","U7HAYKY9X","UAUPJLBQX","U6795JH6H","UDD5Z7FLZ"],"subscribed":false},{"client_msg_id":"261dfdd8-8604-4af4-a1e8-92ed7507bde1","type":"message","text":"ok, answering my own question: power_by_squaring is much more complex than i thought it would be","user":"U6N6VQE30","ts":"1611938067.320000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1aS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, answering my own question: power_by_squaring is much more complex than i thought it would be"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"d0106a9b-169d-46a6-b51e-56a37593ea58","type":"message","text":"I wonder if it could be simplified for unsigned integers, such that it inlines. You wouldn't necessarily need all the if statements at the beginning, and you could use native bitshifts instead of Julia's...","user":"U7HAYKY9X","ts":"1611941144.321800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CGr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder if it could be simplified for unsigned integers, such that it inlines. You wouldn't necessarily need all the if statements at the beginning, and you could use native bitshifts instead of Julia's..."}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"976b4aef-732d-4d18-9c28-44132dd95e13","type":"message","text":"Nope, nevermind, it doesn't change that much","user":"U7HAYKY9X","ts":"1611942221.322000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ztumi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nope, nevermind, it doesn't change that much"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"c187b0c2-fce5-4899-aa0e-89a143f52cde","type":"message","text":"LoopVectorization simplifies things","user":"UAUPJLBQX","ts":"1611945788.323800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K=h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LoopVectorization simplifies things"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"6e35cf48-3db1-438b-8009-38b59345165e","type":"message","text":"```julia&gt; using LoopVectorization\n[ Info: Precompiling LoopVectorization [bdcacae8-1622-11e9-2a5c-532679323890]\n\njulia&gt; j = 0;\n\njulia&gt; ls = LoopVectorization.@avx_debug for i = 1:100\n           j += i^5\n       end\nOPS = (:LoopVectorization, :LOOPCONSTANTINSTRUCTION, LoopVectorization.OperationStruct(0x0000000000000000, 0x0000000000000000, 0x0000000000000001, 0x0000000000000000, LoopVectorization.constant, 0x00, 0x01), :i, :i, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000, LoopVectorization.loopvalue, 0x00, 0x02), :LoopVectorization, :abs2, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000002, LoopVectorization.compute, 0x00, 0x03), :LoopVectorization, :abs2, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000003, LoopVectorization.compute, 0x00, 0x04), :LoopVectorization, :*, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000402, LoopVectorization.compute, 0x00, 0x05), :LoopVectorization, :add_fast, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000001, 0x0000000000000000, 0x0000000000000105, LoopVectorization.compute, 0x00, 0x01))\nARF = ()\nAM = (0, (6,), (1,), (), (), (), ())\nLPSYM = (:i,)\n_vargs = (Tuple{ArrayInterface.OptionallyStaticUnitRange{ArrayInterface.StaticInt{1}, ArrayInterface.StaticInt{100}}}, (0,))\nbegin\n    begin\n        (lb, vargs) = _vargs\n        var\"##symlicm#263\" = #= /home/chriselrod/.julia/packages/LoopVectorization/WMBeW/src/reconstruct_loopset.jl:213 =# @inbounds(vargs[1])\n        var\"##Tloopeltype##\" = typeof(var\"##symlicm#263\")\n        var\"##Wvecwidth##\" = LoopVectorization.pick_vector_width_val(Val{100}(), var\"##Tloopeltype##\")\n        var\"####op#257_\" = var\"##symlicm#263\"\n        var\"####op#257_0\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_1\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_2\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_3\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_4\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_5\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_6\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n    end\n    begin\n        let\n            let i = 0\n                begin\n                    begin\n                        var\"####op#259_0\" = LoopVectorization.abs2(<http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#259_1\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(var\"##Wvecwidth##\", <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_2\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 2), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_3\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 3), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_4\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 4), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_5\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 5), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_6\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 6), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#260_0\" = LoopVectorization.abs2(var\"####op#259_0\")\n                        var\"####op#260_1\" = LoopVectorization.abs2(var\"####op#259_1\")\n                        var\"####op#260_2\" = LoopVectorization.abs2(var\"####op#259_2\")\n                        var\"####op#260_3\" = LoopVectorization.abs2(var\"####op#259_3\")\n                        var\"####op#260_4\" = LoopVectorization.abs2(var\"####op#259_4\")\n                        var\"####op#260_5\" = LoopVectorization.abs2(var\"####op#259_5\")\n                        var\"####op#260_6\" = LoopVectorization.abs2(var\"####op#259_6\")\n                        var\"####op#261_0\" = var\"####op#260_0\" * <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))\n                        var\"####op#261_1\" = var\"####op#260_1\" * LoopVectorization.vadd_fast(var\"##Wvecwidth##\", <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_2\" = var\"####op#260_2\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 2), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_3\" = var\"####op#260_3\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 3), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_4\" = var\"####op#260_4\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 4), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_5\" = var\"####op#260_5\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 5), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_6\" = var\"####op#260_6\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 6), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#257_0\" = LoopVectorization.add_fast(var\"####op#257_0\", var\"####op#261_0\")\n                        var\"####op#257_1\" = LoopVectorization.add_fast(var\"####op#257_1\", var\"####op#261_1\")\n                        var\"####op#257_2\" = LoopVectorization.add_fast(var\"####op#257_2\", var\"####op#261_2\")\n                        var\"####op#257_3\" = LoopVectorization.add_fast(var\"####op#257_3\", var\"####op#261_3\")\n                        var\"####op#257_4\" = LoopVectorization.add_fast(var\"####op#257_4\", var\"####op#261_4\")\n                        var\"####op#257_5\" = LoopVectorization.add_fast(var\"####op#257_5\", var\"####op#261_5\")\n                        var\"####op#257_6\" = LoopVectorization.add_fast(var\"####op#257_6\", var\"####op#261_6\")\n                        begin\n                            i = LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", LoopVectorization.Static{7}()), i)\n                        end\n                    end\n                end\n                begin\n                    var\"##mask##\" = LoopVectorization.mask(var\"##Wvecwidth##\", 100)\n                    begin\n                        var\"####op#259_0\" = LoopVectorization.abs2(<http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#259_1\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(var\"##Wvecwidth##\", <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_2\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 2), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_3\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 3), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_4\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 4), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_5\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 5), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#260_0\" = LoopVectorization.abs2(var\"####op#259_0\")\n                        var\"####op#260_1\" = LoopVectorization.abs2(var\"####op#259_1\")\n                        var\"####op#260_2\" = LoopVectorization.abs2(var\"####op#259_2\")\n                        var\"####op#260_3\" = LoopVectorization.abs2(var\"####op#259_3\")\n                        var\"####op#260_4\" = LoopVectorization.abs2(var\"####op#259_4\")\n                        var\"####op#260_5\" = LoopVectorization.abs2(var\"####op#259_5\")\n                        var\"####op#261_0\" = var\"####op#260_0\" * <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))\n                        var\"####op#261_1\" = var\"####op#260_1\" * LoopVectorization.vadd_fast(var\"##Wvecwidth##\", <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_2\" = var\"####op#260_2\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 2), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_3\" = var\"####op#260_3\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 3), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_4\" = var\"####op#260_4\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 4), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_5\" = var\"####op#260_5\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 5), <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#257_0\" = LoopVectorization.add_fast(var\"####op#257_0\", var\"####op#261_0\")\n                        var\"####op#257_1\" = LoopVectorization.add_fast(var\"####op#257_1\", var\"####op#261_1\")\n                        var\"####op#257_2\" = LoopVectorization.add_fast(var\"####op#257_2\", var\"####op#261_2\")\n                        var\"####op#257_3\" = LoopVectorization.add_fast(var\"####op#257_3\", var\"####op#261_3\")\n                        var\"####op#257_4\" = LoopVectorization.add_fast(var\"####op#257_4\", var\"####op#261_4\")\n                        var\"####op#257_5\" = LoopVectorization.ifelse(var\"##mask##\", LoopVectorization.add_fast(var\"####op#257_5\", var\"####op#261_5\"), var\"####op#257_5\")\n                        begin\n                            i = LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", LoopVectorization.Static{6}()), i)\n                        end\n                    end\n                end\n            end\n        end\n        var\"####op#257_0\" = var\"####op#257_0\" + var\"####op#257_3\"\n        var\"####op#257_1\" = var\"####op#257_1\" + var\"####op#257_4\"\n        var\"####op#257_2\" = var\"####op#257_2\" + var\"####op#257_5\"\n        var\"####op#257_0\" = var\"####op#257_0\" + var\"####op#257_6\"\n        var\"####op#257_0\" = var\"####op#257_0\" + var\"####op#257_1\"\n        var\"####op#257_0\" = var\"####op#257_0\" + var\"####op#257_2\"\n    end\nend```","user":"UAUPJLBQX","ts":"1611945882.324000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FDR4","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using LoopVectorization\n[ Info: Precompiling LoopVectorization [bdcacae8-1622-11e9-2a5c-532679323890]\n\njulia> j = 0;\n\njulia> ls = LoopVectorization.@avx_debug for i = 1:100\n           j += i^5\n       end\nOPS = (:LoopVectorization, :LOOPCONSTANTINSTRUCTION, LoopVectorization.OperationStruct(0x0000000000000000, 0x0000000000000000, 0x0000000000000001, 0x0000000000000000, LoopVectorization.constant, 0x00, 0x01), :i, :i, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000000, LoopVectorization.loopvalue, 0x00, 0x02), :LoopVectorization, :abs2, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000002, LoopVectorization.compute, 0x00, 0x03), :LoopVectorization, :abs2, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000003, LoopVectorization.compute, 0x00, 0x04), :LoopVectorization, :*, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000000, 0x0000000000000000, 0x0000000000000402, LoopVectorization.compute, 0x00, 0x05), :LoopVectorization, :add_fast, LoopVectorization.OperationStruct(0x0000000000000001, 0x0000000000000001, 0x0000000000000000, 0x0000000000000105, LoopVectorization.compute, 0x00, 0x01))\nARF = ()\nAM = (0, (6,), (1,), (), (), (), ())\nLPSYM = (:i,)\n_vargs = (Tuple{ArrayInterface.OptionallyStaticUnitRange{ArrayInterface.StaticInt{1}, ArrayInterface.StaticInt{100}}}, (0,))\nbegin\n    begin\n        (lb, vargs) = _vargs\n        var\"##symlicm#263\" = #= /home/chriselrod/.julia/packages/LoopVectorization/WMBeW/src/reconstruct_loopset.jl:213 =# @inbounds(vargs[1])\n        var\"##Tloopeltype##\" = typeof(var\"##symlicm#263\")\n        var\"##Wvecwidth##\" = LoopVectorization.pick_vector_width_val(Val{100}(), var\"##Tloopeltype##\")\n        var\"####op#257_\" = var\"##symlicm#263\"\n        var\"####op#257_0\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_1\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_2\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_3\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_4\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_5\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_6\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n    end\n    begin\n        let\n            let i = 0\n                begin\n                    begin\n                        var\"####op#259_0\" = LoopVectorization.abs2(LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#259_1\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(var\"##Wvecwidth##\", LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_2\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 2), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_3\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 3), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_4\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 4), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_5\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 5), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_6\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 6), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#260_0\" = LoopVectorization.abs2(var\"####op#259_0\")\n                        var\"####op#260_1\" = LoopVectorization.abs2(var\"####op#259_1\")\n                        var\"####op#260_2\" = LoopVectorization.abs2(var\"####op#259_2\")\n                        var\"####op#260_3\" = LoopVectorization.abs2(var\"####op#259_3\")\n                        var\"####op#260_4\" = LoopVectorization.abs2(var\"####op#259_4\")\n                        var\"####op#260_5\" = LoopVectorization.abs2(var\"####op#259_5\")\n                        var\"####op#260_6\" = LoopVectorization.abs2(var\"####op#259_6\")\n                        var\"####op#261_0\" = var\"####op#260_0\" * LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))\n                        var\"####op#261_1\" = var\"####op#260_1\" * LoopVectorization.vadd_fast(var\"##Wvecwidth##\", LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_2\" = var\"####op#260_2\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 2), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_3\" = var\"####op#260_3\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 3), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_4\" = var\"####op#260_4\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 4), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_5\" = var\"####op#260_5\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 5), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_6\" = var\"####op#260_6\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 6), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#257_0\" = LoopVectorization.add_fast(var\"####op#257_0\", var\"####op#261_0\")\n                        var\"####op#257_1\" = LoopVectorization.add_fast(var\"####op#257_1\", var\"####op#261_1\")\n                        var\"####op#257_2\" = LoopVectorization.add_fast(var\"####op#257_2\", var\"####op#261_2\")\n                        var\"####op#257_3\" = LoopVectorization.add_fast(var\"####op#257_3\", var\"####op#261_3\")\n                        var\"####op#257_4\" = LoopVectorization.add_fast(var\"####op#257_4\", var\"####op#261_4\")\n                        var\"####op#257_5\" = LoopVectorization.add_fast(var\"####op#257_5\", var\"####op#261_5\")\n                        var\"####op#257_6\" = LoopVectorization.add_fast(var\"####op#257_6\", var\"####op#261_6\")\n                        begin\n                            i = LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", LoopVectorization.Static{7}()), i)\n                        end\n                    end\n                end\n                begin\n                    var\"##mask##\" = LoopVectorization.mask(var\"##Wvecwidth##\", 100)\n                    begin\n                        var\"####op#259_0\" = LoopVectorization.abs2(LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#259_1\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(var\"##Wvecwidth##\", LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_2\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 2), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_3\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 3), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_4\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 4), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#259_5\" = LoopVectorization.abs2(LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 5), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))))\n                        var\"####op#260_0\" = LoopVectorization.abs2(var\"####op#259_0\")\n                        var\"####op#260_1\" = LoopVectorization.abs2(var\"####op#259_1\")\n                        var\"####op#260_2\" = LoopVectorization.abs2(var\"####op#259_2\")\n                        var\"####op#260_3\" = LoopVectorization.abs2(var\"####op#259_3\")\n                        var\"####op#260_4\" = LoopVectorization.abs2(var\"####op#259_4\")\n                        var\"####op#260_5\" = LoopVectorization.abs2(var\"####op#259_5\")\n                        var\"####op#261_0\" = var\"####op#260_0\" * LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))\n                        var\"####op#261_1\" = var\"####op#260_1\" * LoopVectorization.vadd_fast(var\"##Wvecwidth##\", LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_2\" = var\"####op#260_2\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 2), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_3\" = var\"####op#260_3\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 3), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_4\" = var\"####op#260_4\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 4), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#261_5\" = var\"####op#260_5\" * LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", 5), LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                        var\"####op#257_0\" = LoopVectorization.add_fast(var\"####op#257_0\", var\"####op#261_0\")\n                        var\"####op#257_1\" = LoopVectorization.add_fast(var\"####op#257_1\", var\"####op#261_1\")\n                        var\"####op#257_2\" = LoopVectorization.add_fast(var\"####op#257_2\", var\"####op#261_2\")\n                        var\"####op#257_3\" = LoopVectorization.add_fast(var\"####op#257_3\", var\"####op#261_3\")\n                        var\"####op#257_4\" = LoopVectorization.add_fast(var\"####op#257_4\", var\"####op#261_4\")\n                        var\"####op#257_5\" = LoopVectorization.ifelse(var\"##mask##\", LoopVectorization.add_fast(var\"####op#257_5\", var\"####op#261_5\"), var\"####op#257_5\")\n                        begin\n                            i = LoopVectorization.vadd_fast(LoopVectorization.vmul_fast(var\"##Wvecwidth##\", LoopVectorization.Static{6}()), i)\n                        end\n                    end\n                end\n            end\n        end\n        var\"####op#257_0\" = var\"####op#257_0\" + var\"####op#257_3\"\n        var\"####op#257_1\" = var\"####op#257_1\" + var\"####op#257_4\"\n        var\"####op#257_2\" = var\"####op#257_2\" + var\"####op#257_5\"\n        var\"####op#257_0\" = var\"####op#257_0\" + var\"####op#257_6\"\n        var\"####op#257_0\" = var\"####op#257_0\" + var\"####op#257_1\"\n        var\"####op#257_0\" = var\"####op#257_0\" + var\"####op#257_2\"\n    end\nend"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"cd9f7bd6-d7a2-4066-8ffb-a0b25a9645b7","type":"message","text":"Okay, the printing doesn't look simpler","user":"UAUPJLBQX","ts":"1611945899.324200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JTvo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, the printing doesn't look simpler"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"15cb571c-ccef-4672-9e72-b04c3c4ee135","type":"message","text":"Okay, generating code without unrolling:\n```julia&gt; LoopVectorization.lower(ls, 1, -1, 0)\nquote\n    $(Expr(:meta, :inline))\n    begin\n        (lb, vargs) = _vargs\n        var\"##symlicm#263\" = #= /home/chriselrod/.julia/packages/LoopVectorization/WMBeW/src/reconstruct_loopset.jl:213 =# @inbounds(vargs[1])\n        var\"##Tloopeltype##\" = typeof(var\"##symlicm#263\")\n        var\"##Wvecwidth##\" = LoopVectorization.pick_vector_width_val(Val{100}(), var\"##Tloopeltype##\")\n        var\"####op#257_\" = var\"##symlicm#263\"\n        var\"####op#257_0\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_1\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_2\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_3\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_4\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_5\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_6\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"##Tloopeltype##\" = typeof(var\"##symlicm#263\")\n        var\"##Wvecwidth##\" = LoopVectorization.pick_vector_width_val(Val{100}(), var\"##Tloopeltype##\")\n        var\"####op#257_\" = var\"##symlicm#263\"\n        var\"####op#257_0\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n    end\n    begin\n        let\n            let i = 0\n                while i ≤ LoopVectorization.vsub_fast(100, var\"##Wvecwidth##\")\n                    var\"####op#259_0\" = LoopVectorization.abs2(<http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                    var\"####op#260_0\" = LoopVectorization.abs2(var\"####op#259_0\")\n                    var\"####op#261_0\" = var\"####op#260_0\" * <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))\n                    var\"####op#257_0\" = LoopVectorization.add_fast(var\"####op#257_0\", var\"####op#261_0\")\n                    begin\n                        i = LoopVectorization.vadd_fast(var\"##Wvecwidth##\", i)\n                    end\n                end\n                begin\n                    var\"##mask##\" = LoopVectorization.mask(var\"##Wvecwidth##\", 100)\n                    var\"####op#259_0\" = LoopVectorization.abs2(<http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                    var\"####op#260_0\" = LoopVectorization.abs2(var\"####op#259_0\")\n                    var\"####op#261_0\" = var\"####op#260_0\" * <http://LoopVectorization.MM|LoopVectorization.MM>(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))\n                    var\"####op#257_0\" = LoopVectorization.ifelse(var\"##mask##\", LoopVectorization.add_fast(var\"####op#257_0\", var\"####op#261_0\"), var\"####op#257_0\")\n                    begin\n                        i = LoopVectorization.vadd_fast(var\"##Wvecwidth##\", i)\n                    end\n                end\n            end\n        end\n    end\nend```","user":"UAUPJLBQX","ts":"1611945942.324400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0o6V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, generating code without unrolling:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> LoopVectorization.lower(ls, 1, -1, 0)\nquote\n    $(Expr(:meta, :inline))\n    begin\n        (lb, vargs) = _vargs\n        var\"##symlicm#263\" = #= /home/chriselrod/.julia/packages/LoopVectorization/WMBeW/src/reconstruct_loopset.jl:213 =# @inbounds(vargs[1])\n        var\"##Tloopeltype##\" = typeof(var\"##symlicm#263\")\n        var\"##Wvecwidth##\" = LoopVectorization.pick_vector_width_val(Val{100}(), var\"##Tloopeltype##\")\n        var\"####op#257_\" = var\"##symlicm#263\"\n        var\"####op#257_0\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_1\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_2\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_3\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_4\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_5\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"####op#257_6\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n        var\"##Tloopeltype##\" = typeof(var\"##symlicm#263\")\n        var\"##Wvecwidth##\" = LoopVectorization.pick_vector_width_val(Val{100}(), var\"##Tloopeltype##\")\n        var\"####op#257_\" = var\"##symlicm#263\"\n        var\"####op#257_0\" = LoopVectorization.vzero(var\"##Wvecwidth##\", typeof(var\"####op#257_\"))\n    end\n    begin\n        let\n            let i = 0\n                while i ≤ LoopVectorization.vsub_fast(100, var\"##Wvecwidth##\")\n                    var\"####op#259_0\" = LoopVectorization.abs2(LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                    var\"####op#260_0\" = LoopVectorization.abs2(var\"####op#259_0\")\n                    var\"####op#261_0\" = var\"####op#260_0\" * LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))\n                    var\"####op#257_0\" = LoopVectorization.add_fast(var\"####op#257_0\", var\"####op#261_0\")\n                    begin\n                        i = LoopVectorization.vadd_fast(var\"##Wvecwidth##\", i)\n                    end\n                end\n                begin\n                    var\"##mask##\" = LoopVectorization.mask(var\"##Wvecwidth##\", 100)\n                    var\"####op#259_0\" = LoopVectorization.abs2(LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i)))\n                    var\"####op#260_0\" = LoopVectorization.abs2(var\"####op#259_0\")\n                    var\"####op#261_0\" = var\"####op#260_0\" * LoopVectorization.MM(var\"##Wvecwidth##\", LoopVectorization.staticp1(i))\n                    var\"####op#257_0\" = LoopVectorization.ifelse(var\"##mask##\", LoopVectorization.add_fast(var\"####op#257_0\", var\"####op#261_0\"), var\"####op#257_0\")\n                    begin\n                        i = LoopVectorization.vadd_fast(var\"##Wvecwidth##\", i)\n                    end\n                end\n            end\n        end\n    end\nend"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"4d1952c6-305a-4e7b-9e5a-c9896c5b6d18","type":"message","text":"It turned `i^5` into `abs2(abs2(i)) * i` .","user":"UAUPJLBQX","ts":"1611946066.325000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w8SpC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It turned "},{"type":"text","text":"i^5","style":{"code":true}},{"type":"text","text":" into "},{"type":"text","text":"abs2(abs2(i)) * i","style":{"code":true}},{"type":"text","text":" ."}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"ac24d225-8e94-4b1f-bbdf-c10b805757b7","type":"message","text":"(It does this for all integer exponents. Inliining in this way lets the cost modeling know how expensive that power actually is)","user":"UAUPJLBQX","ts":"1611946357.325300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pmDdd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(It does this for all integer exponents. Inliining in this way lets the cost modeling know how expensive that power actually is)"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"365670b0-4047-4e11-bb4f-5f26f45f512c","type":"message","text":"does that mean there are certain edge cases loopvectorization simplifies?","user":"U6N6VQE30","ts":"1611947285.325900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gdi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does that mean there are certain edge cases loopvectorization simplifies?"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"3e4f95cf-de12-4747-aa84-d06bd66cda3d","type":"message","text":"It does this for arbitrary literal integer exponents, if that's what you're asking","user":"UAUPJLBQX","ts":"1611947976.326100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rtaf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It does this for arbitrary literal integer exponents, if that's what you're asking"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"d3ab776d-f988-4812-bd41-0f0b97c76d2e","type":"message","text":"It might help to add the `@aggressive_constprop` macro annotation to `power_by_squaring`","user":"U6795JH6H","ts":"1611948209.326500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8k2Fr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It might help to add the "},{"type":"text","text":"@aggressive_constprop","style":{"code":true}},{"type":"text","text":" macro annotation to "},{"type":"text","text":"power_by_squaring","style":{"code":true}}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30","reactions":[{"name":"+1","users":["UAUPJLBQX","U6QGE7S86"],"count":2}]},{"client_msg_id":"4eaed514-fe2c-453c-a142-5fbb53f1a4e3","type":"message","text":"i think it has to be refactored a bit, literal pow makes it a Val{p}, but it's not used like that in power_by_squaring","user":"U6N6VQE30","ts":"1611948259.326700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u=xlY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i think it has to be refactored a bit, literal pow makes it a Val{p}, but it's not used like that in power_by_squaring"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"a1a03d65-e803-4e5c-b557-5a12baac5528","type":"message","text":"that’s where the aggressive constant propagation might help since the `p` in `Val{p}` is considered constant by the compiler","user":"U6795JH6H","ts":"1611948423.327000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dc5h9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that’s where the aggressive constant propagation might help since the "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"Val{p}","style":{"code":true}},{"type":"text","text":" is considered constant by the compiler"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"4fd5d118-8077-4500-84ba-55108d222eae","type":"message","text":"but I could be wrong about whether that will actually work","user":"U6795JH6H","ts":"1611948436.327200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xZe3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I could be wrong about whether that will actually work"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"ad2022fd-bd79-481a-ad27-9d423d23c8a3","type":"message","text":"FWIW, I tried forcing to `Base.power_by_squaring` inline into `for i in 1:N; j += i^5; end`:\n```julia&gt; @code_native debuginfo=:none syntax=:intel inlinebase(1200)\n        .text\n        test    rdi, rdi\n        jle     L77\n        mov     rax, rdi\n        sar     rax, 63\n        andn    rcx, rax, rdi\n        mov     edx, 1\n        xor     eax, eax\n        nop     dword ptr [rax + rax]\nL32:\n        mov     edi, 2\n        mov     rsi, rdx\n        nop     dword ptr [rax + rax]\nL48:\n        imul    rsi, rsi\n        dec     rdi\n        jg      L48\n        imul    rsi, rdx\n        add     rax, rsi\n        lea     rsi, [rdx + 1]\n        cmp     rdx, rcx\n        mov     rdx, rsi\n        jne     L32\n        ret\nL77:\n        xor     eax, eax\n        ret\n\njulia&gt; @code_native debuginfo=:none syntax=:intel base(1200)\n        .text\n        push    r15\n        push    r14\n        push    r12\n        push    rbx\n        push    rax\n        test    rdi, rdi\n        jle     L80\n        mov     rax, rdi\n        sar     rax, 63\n        andn    r15, rax, rdi\n        neg     r15\n        mov     ebx, 1\n        xor     r14d, r14d\n        movabs  r12, offset power_by_squaring\n        nop\nL48:\n        mov     esi, 5\n        mov     rdi, rbx\n        call    r12\n        add     r14, rax\n        lea     rax, [r15 + rbx]\n        inc     rax\n        inc     rbx\n        cmp     rax, 1\n        jne     L48\n        jmp     L83\nL80:\n        xor     r14d, r14d\nL83:\n        mov     rax, r14\n        add     rsp, 8\n        pop     rbx\n        pop     r12\n        pop     r14\n        pop     r15\n        ret\n        nop     word ptr cs:[rax + rax] ```","user":"UAUPJLBQX","ts":"1611948519.327600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LaN6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW, I tried forcing to "},{"type":"text","text":"Base.power_by_squaring","style":{"code":true}},{"type":"text","text":" inline into "},{"type":"text","text":"for i in 1:N; j += i^5; end","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @code_native debuginfo=:none syntax=:intel inlinebase(1200)\n        .text\n        test    rdi, rdi\n        jle     L77\n        mov     rax, rdi\n        sar     rax, 63\n        andn    rcx, rax, rdi\n        mov     edx, 1\n        xor     eax, eax\n        nop     dword ptr [rax + rax]\nL32:\n        mov     edi, 2\n        mov     rsi, rdx\n        nop     dword ptr [rax + rax]\nL48:\n        imul    rsi, rsi\n        dec     rdi\n        jg      L48\n        imul    rsi, rdx\n        add     rax, rsi\n        lea     rsi, [rdx + 1]\n        cmp     rdx, rcx\n        mov     rdx, rsi\n        jne     L32\n        ret\nL77:\n        xor     eax, eax\n        ret\n\njulia> @code_native debuginfo=:none syntax=:intel base(1200)\n        .text\n        push    r15\n        push    r14\n        push    r12\n        push    rbx\n        push    rax\n        test    rdi, rdi\n        jle     L80\n        mov     rax, rdi\n        sar     rax, 63\n        andn    r15, rax, rdi\n        neg     r15\n        mov     ebx, 1\n        xor     r14d, r14d\n        movabs  r12, offset power_by_squaring\n        nop\nL48:\n        mov     esi, 5\n        mov     rdi, rbx\n        call    r12\n        add     r14, rax\n        lea     rax, [r15 + rbx]\n        inc     rax\n        inc     rbx\n        cmp     rax, 1\n        jne     L48\n        jmp     L83\nL80:\n        xor     r14d, r14d\nL83:\n        mov     rax, r14\n        add     rsp, 8\n        pop     rbx\n        pop     r12\n        pop     r14\n        pop     r15\n        ret\n        nop     word ptr cs:[rax + rax] "}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"58183a56-25b8-4a82-a5f0-bef9788f5661","type":"message","text":"The inlined version is less code than the function call.","user":"UAUPJLBQX","ts":"1611948530.327800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TDK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The inlined version is less code than the function call."}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"d4b2ca67-b44d-48b3-87ab-20eec7ce2ece","type":"message","text":"Also, more importantly, it's much faster here:\n```julia&gt; @btime base(1200)\n  4.219 μs (0 allocations: 0 bytes)\n498909023999880000\n\njulia&gt; @btime inlinebase(1200)\n  984.786 ns (0 allocations: 0 bytes)\n498909023999880000\n\njulia&gt; @btime lv5(1200) # loopvectorization\n  320.256 ns (0 allocations: 0 bytes)\n498909023999880000```\nStill 3x slower than LoopVectorization on a computer with AVX512.\nSIMD 64-bit integer multiplication is slow, and on computers without AVX512 it has to be done through lo-lo + hi-lo + lo-hi 32-bit multiplication. Meaning I'm not sure the SIMD version would be faster across platforms.\nInlining will almost certainly help a lot though.","user":"UAUPJLBQX","ts":"1611948794.328400","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1611948836.000000"},"blocks":[{"type":"rich_text","block_id":"XKg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, more importantly, it's much faster here:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime base(1200)\n  4.219 μs (0 allocations: 0 bytes)\n498909023999880000\n\njulia> @btime inlinebase(1200)\n  984.786 ns (0 allocations: 0 bytes)\n498909023999880000\n\njulia> @btime lv5(1200) # loopvectorization\n  320.256 ns (0 allocations: 0 bytes)\n498909023999880000"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Still 3x slower than LoopVectorization on a computer with AVX512.\nSIMD 64-bit integer multiplication is slow, and on computers without AVX512 it has to be done through lo-lo + hi-lo + lo-hi 32-bit multiplication. Meaning I'm not sure the SIMD version would be faster across platforms.\nInlining will almost certainly help a lot though."}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"58a9a77b-5b74-4bfb-b144-df433aabc571","type":"message","text":"Related to the fact that power_by_squaring doesn't constant fold? <https://github.com/JuliaLang/julia/issues/30126|https://github.com/JuliaLang/julia/issues/30126>","user":"U7HAYKY9X","ts":"1611949963.330200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WkAta","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Related to the fact that power_by_squaring doesn't constant fold? "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/30126","text":"https://github.com/JuliaLang/julia/issues/30126"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"5c23228b-054f-4994-8014-f07450d1fc60","type":"message","text":"Hmm, I wonder if LLVM in this case will optimise the loop away","user":"UDD5Z7FLZ","ts":"1611998016.356000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LP4V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, I wonder if LLVM in this case will optimise the loop away"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"d92a9221-3e9f-45ed-819a-1c6773ecbeaa","type":"message","text":"Yes, LLVM will if it knows the constant exponent","user":"UAUPJLBQX","ts":"1612026086.371400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dpVG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, LLVM will if it knows the constant exponent"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"},{"client_msg_id":"2127204d-7fdd-4f29-9a69-87c980dd45a0","type":"message","text":"When I made power by squaring `@inline` most of the code disappeared.\nI'll have to double check `code_typed` though, because some of the optimizations probably happened on Julia's side of things","user":"UAUPJLBQX","ts":"1612026177.371600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8ke/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When I made power by squaring "},{"type":"text","text":"@inline","style":{"code":true}},{"type":"text","text":" most of the code disappeared.\nI'll have to double check "},{"type":"text","text":"code_typed","style":{"code":true}},{"type":"text","text":" though, because some of the optimizations probably happened on Julia's side of things"}]}]}],"thread_ts":"1611937698.318400","parent_user_id":"U6N6VQE30"}]