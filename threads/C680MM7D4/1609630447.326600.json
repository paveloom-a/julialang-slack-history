[{"client_msg_id":"7C3EB5CC-CD71-42B2-BE54-0703AA1CC8FA","type":"message","text":"Is this a convention or an actual enforced rule at the compiler level? ","user":"U8D9768Q6","ts":"1609630447.326600","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1609630463.000000"},"blocks":[{"type":"rich_text","block_id":"z2M+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this a convention or an actual enforced rule at the compiler level? "}]}]}],"thread_ts":"1609630447.326600","reply_count":15,"reply_users_count":5,"latest_reply":"1609696813.337200","reply_users":["U6A936746","U8D9768Q6","UPUBAM63X","UDD5Z7FLZ","U011V2YN59N"],"subscribed":false},{"client_msg_id":"7fc8dff5-e3eb-4cdf-a814-ca2fe46e4c75","type":"message","text":"idk, my impression is that it is enforced","user":"U6A936746","ts":"1609630744.326800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CLOM7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"idk, my impression is that it is enforced"}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"1ac2c016-03ba-440d-a7b6-5c8cc0d5cccd","type":"message","text":"This makes it sound like it is enforced\n<https://github.com/Ixrec/rust-orphan-rules>","user":"U6A936746","ts":"1609630898.327000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N6I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This makes it sound like it is enforced\n"},{"type":"link","url":"https://github.com/Ixrec/rust-orphan-rules"}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"842DD510-BD93-4FA1-8142-6E8E8F322D84","type":"message","text":"Ah interesting. Feels like a mis-feature to me. ","user":"U8D9768Q6","ts":"1609630999.327700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3374R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah interesting. Feels like a mis-feature to me. "}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"87CEDA70-8278-4975-9E32-29D3DC64A8D8","type":"message","text":"Type piracy is one of Julia‘a greatest features so long as it’s used responsibly. ","user":"U8D9768Q6","ts":"1609631043.328500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3L9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Type piracy is one of Julia‘a greatest features so long as it’s used responsibly. "}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"e189a908-0356-4492-a917-d1ed86c5b6d8","type":"message","text":"Enforcing disallowing it is inline with Rusts general philosophy from what I have seen.\nAllowing it is definitely inline with Julia’s philosophy.","user":"U6A936746","ts":"1609631112.328700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/ExLI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Enforcing disallowing it is inline with Rusts general philosophy from what I have seen.\nAllowing it is definitely inline with Julia’s philosophy."}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6","reactions":[{"name":"this-is-true","users":["UGU761DU2","U66M57AN4","U6C5KSWAC","UDDUC4R1Q","U90JR0C80"],"count":5}]},{"client_msg_id":"FC8C4FB0-99DB-454F-A669-91D094CA284C","type":"message","text":"Yeah definitely. ","user":"U8D9768Q6","ts":"1609631375.329100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VH8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah definitely. "}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"b7a1d14a-d304-4cd2-acdf-d4c81d4b091e","type":"message","text":"Man you all just need to get into Haskell its great lol. Static types(but has easy polymorphic types), pure FP, static compilation, easy to write.","user":"UPUBAM63X","ts":"1609631784.329400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w14","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Man you all just need to get into Haskell its great lol. Static types(but has easy polymorphic types), pure FP, static compilation, easy to write."}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"051b76d5-ce80-4ad0-b409-e56f4f2d6f43","type":"message","text":"In 1hr I could write extensible code that I couldn't in Rust in 3 days.","user":"UPUBAM63X","ts":"1609631820.329600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/NB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In 1hr I could write extensible code that I couldn't in Rust in 3 days."}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"d75633e3-1fcb-42a1-bf0e-e507b3999f72","type":"message","text":"also list monads are basically equivalent to broadcasting. all that fancy stuff people talk about doing for AD is probably super easy to do in haskell.","user":"UPUBAM63X","ts":"1609631846.329800","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1609632093.000000"},"blocks":[{"type":"rich_text","block_id":"0asPq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also list monads are basically equivalent to broadcasting. all that fancy stuff people talk about doing for AD is probably super easy to do in haskell."}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"88c21fae-88b1-4431-963e-49d28fe782b2","type":"message","text":"I know exactly enough haskell to change the the core of DexLang, and literally nothing else.\nLike I can cobble together relatively complex chunks of Haskel like this:\n<https://github.com/google-research/dex-lang/pull/306/files#diff-9960192242f79fd6a525f528b46ac4376f84553474b18d57b2377e1fc69bae3eR732-R734>\n\nBut I literally don’t know how to compile haskell code except by running the DexLang makefile\nI did work out that `stack ghci --colour always` gets me a REPL though. Not sure if thats the normal way to start one.","user":"U6A936746","ts":"1609635039.330900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jia/8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I know exactly enough haskell to change the the core of DexLang, and literally nothing else.\nLike I can cobble together relatively complex chunks of Haskel like this:\n"},{"type":"link","url":"https://github.com/google-research/dex-lang/pull/306/files#diff-9960192242f79fd6a525f528b46ac4376f84553474b18d57b2377e1fc69bae3eR732-R734"},{"type":"text","text":"\n\nBut I literally don’t know how to compile haskell code except by running the DexLang makefile\nI did work out that "},{"type":"text","text":"stack ghci --colour always","style":{"code":true}},{"type":"text","text":" gets me a REPL though. Not sure if thats the normal way to start one."}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"b31de735-8e9f-4782-bdec-7f4782369fab","type":"message","text":"I bet you'd be really good at it. I'm super new too it and I am kind of a hack in general with comp sci. It's funny the syntax looks a little scary - but it's actually kind of simple. Like sure you can go off the rails because it's deep like that, but you want a Cartesian product?\n```[x*y | x &lt;- [1..3], y &lt;- [1..5]]```\nI've never used stack, I use ghcup which maybe installs stack? but definitely installs cabal. To get the repl I just type `ghci` and it opens prelude. I just use VSCode as an IDE because the plugin is actually solid.\nI think the biggest problem with it is it is difficult to build - but supposedly it can be done cross platform :shrug: and there's always Docker.\nThat code looks pretty advanced lol, I'd start with something smaller, but I'm not a superhero. Didn't realize Dex was written in Haskell. But that's kind of a trend, like Unison lang, etc.","user":"UPUBAM63X","ts":"1609636851.331300","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1609636915.000000"},"blocks":[{"type":"rich_text","block_id":"hyMX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I bet you'd be really good at it. I'm super new too it and I am kind of a hack in general with comp sci. It's funny the syntax looks a little scary - but it's actually kind of simple. Like sure you can go off the rails because it's deep like that, but you want a Cartesian product?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[x*y | x <- [1..3], y <- [1..5]]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I've never used stack, I use ghcup which maybe installs stack? but definitely installs cabal. To get the repl I just type "},{"type":"text","text":"ghci","style":{"code":true}},{"type":"text","text":" and it opens prelude. I just use VSCode as an IDE because the plugin is actually solid.\nI think the biggest problem with it is it is difficult to build - but supposedly it can be done cross platform "},{"type":"emoji","name":"shrug"},{"type":"text","text":" and there's always Docker.\nThat code looks pretty advanced lol, I'd start with something smaller, but I'm not a superhero. Didn't realize Dex was written in Haskell. But that's kind of a trend, like Unison lang, etc."}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"25422b81-ad0a-472e-b902-529d55677ca0","type":"message","text":"It's weird a small group of people use it in production but their real sneaky about what they do with it. I think there's like some secret super powers in it or something lol","user":"UPUBAM63X","ts":"1609637492.331600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uVU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's weird a small group of people use it in production but their real sneaky about what they do with it. I think there's like some secret super powers in it or something lol"}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"011efffe-7f34-42f2-bd00-456b75d58b25","type":"message","text":"Im still waiting for a package to be called `XPiratesPirates.jl`","user":"UDD5Z7FLZ","ts":"1609682713.336500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VCge","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Im still waiting for a package to be called "},{"type":"text","text":"XPiratesPirates.jl","style":{"code":true}}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6","reactions":[{"name":"rolling_on_the_floor_laughing","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"a4afc726-bc66-4176-8990-256d29b6d5da","type":"message","text":"hahaaha <@UPUBAM63X> that is a very good summary of the haskell companies I have seen","user":"U011V2YN59N","ts":"1609696760.337000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N1p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hahaaha "},{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" that is a very good summary of the haskell companies I have seen"}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"531dddad-495a-4a95-8966-1f631c040192","type":"message","text":"the companies using haskell treat it like they're unearthing the old magics","user":"U011V2YN59N","ts":"1609696813.337200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hX1N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the companies using haskell treat it like they're unearthing the old magics"}]}]}],"thread_ts":"1609630447.326600","parent_user_id":"U8D9768Q6","reactions":[{"name":"party_wizard","users":["UPUBAM63X"],"count":1},{"name":"jeff_lambda","users":["UPUBAM63X"],"count":1}]}]