[{"client_msg_id":"5066d163-1da8-4c82-9c64-a98b672af8b0","type":"message","text":"Are there any CPU architectures that have a bunch of 1 bit registers? It seems like you might be able to make a cool architecture where all boolean-returning functions would write to one of a special set of registers that only store booleans, and all instructions had a field for a conditional register that determined if the instruction would run. It seems to me like this type of architecture would remove the expense of small branches which would be really useful","user":"U0179G7FG4F","ts":"1616309232.254500","team":"T68168MUP","edited":{"user":"U0179G7FG4F","ts":"1616309246.000000"},"blocks":[{"type":"rich_text","block_id":"ADCH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any CPU architectures that have a bunch of 1 bit registers? It seems like you might be able to make a cool architecture where all boolean-returning functions would write to one of a special set of registers that only store booleans, and all instructions had a field for a conditional register that determined if the instruction would run. It seems to me like this type of architecture would remove the expense of small branches which would be really useful"}]}]}],"thread_ts":"1616309232.254500","reply_count":52,"reply_users_count":5,"latest_reply":"1616470890.325400","reply_users":["UAUPJLBQX","UH24GRBLL","U7HAYKY9X","U0179G7FG4F","UGXP1QV41"],"is_locked":false,"subscribed":false},{"client_msg_id":"61300e43-388a-4ce1-94b6-457c3b4c1cea","type":"message","text":"AVX512 and SVE (ARM) both have dedicated bitmask registers, which are like a SIMD version of what you suggest.","user":"UAUPJLBQX","ts":"1616313804.256000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fd7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"AVX512 and SVE (ARM) both have dedicated bitmask registers, which are like a SIMD version of what you suggest."}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F","reactions":[{"name":"100","users":["UGU761DU2","U0179G7FG4F"],"count":2}]},{"client_msg_id":"8dfa3220-44cb-4d51-8496-80c07fac19d9","type":"message","text":"I'm not sure about SVE (but would guess it would be similar), but with AVX512 you can also use these mask registers with the scalar variants of SIMD instructions","user":"UAUPJLBQX","ts":"1616314000.256400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SRT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure about SVE (but would guess it would be similar), but with AVX512 you can also use these mask registers with the scalar variants of SIMD instructions"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"c4614168-c4e7-43d5-969c-ea41ee6162bb","type":"message","text":"which would give you exactly what you're asking for.","user":"UAUPJLBQX","ts":"1616314023.256600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LUG+y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which would give you exactly what you're asking for."}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"29e17c23-6d13-488b-aa15-19864a6ca528","type":"message","text":"There is 0 overhead to using them.","user":"UAUPJLBQX","ts":"1616314084.256800","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1616314095.000000"},"blocks":[{"type":"rich_text","block_id":"8ra","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is 0 overhead to using them."}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"e30eaea1-bd31-4d09-ac11-ce08e81a4dac","type":"message","text":"the cost of branching is not in using a \"big\" integer compared to a single bit, it's in figuring out which branch to take","user":"UH24GRBLL","ts":"1616314156.257100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5/uh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the cost of branching is not in using a \"big\" integer compared to a single bit, it's in figuring out which branch to take"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"8b9f7fd1-3561-4f5d-9f8f-4be6518f3eb7","type":"message","text":"There is no branch with the opmask registers","user":"UAUPJLBQX","ts":"1616314182.257300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CAAo=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is no branch with the opmask registers"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"76dbe8ec-ee29-48fe-a6ed-350c68c4bfc4","type":"message","text":"and no overhead in applying them to an instruction.","user":"UAUPJLBQX","ts":"1616314204.257500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JjlT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and no overhead in applying them to an instruction."}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"1e48ba74-8c94-489c-91ca-af5a0727cde8","type":"message","text":"I meant in regards to\n\n&gt; boolean-returning functions would write to one of a special set of registers that only store booleans\n","user":"UH24GRBLL","ts":"1616314223.257700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uNDw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I meant in regards to\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"boolean-returning functions would write to one of a special set of registers that only store booleans"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"3a691dfd-5c30-43ce-8afb-661fbe4743f9","type":"message","text":"Ah.","user":"UAUPJLBQX","ts":"1616314234.257900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pcr0H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah."}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"544e366b-4568-4557-b083-32598ae8872f","type":"message","text":"and not everything is SIMDable, as you well know :p","user":"UH24GRBLL","ts":"1616314239.258100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3lw/B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and not everything is SIMDable, as you well know :p"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"fb0b2c91-d270-461e-909c-378a476d6008","type":"message","text":"That's why I pointed out it works for scalar variants as well, not just the SIMD variants","user":"UAUPJLBQX","ts":"1616314266.258300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mXd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's why I pointed out it works for scalar variants as well, not just the SIMD variants"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"ad7ec60a-d2f5-447d-a206-921535e7d323","type":"message","text":"but it would force you to take \"both sides\" of the branch","user":"UAUPJLBQX","ts":"1616314276.258500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3bt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but it would force you to take \"both sides\" of the branch"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"9f8ba77c-5758-4c1e-a577-6b7ce63162e5","type":"message","text":"yup","user":"UH24GRBLL","ts":"1616314284.258700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"suftF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yup"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"d2e2c3fa-d95e-4011-80af-70fd188efcee","type":"message","text":"(turning off the instructions on the side you aren't taking)","user":"UAUPJLBQX","ts":"1616314288.258900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yRc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(turning off the instructions on the side you aren't taking)"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"69d6a721-690e-4b0d-8353-174ee603e6f5","type":"message","text":"meaning either the branch is relatively trivial, or it is only worthwhile if you're SIMD","user":"UAUPJLBQX","ts":"1616314308.259100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ah6f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"meaning either the branch is relatively trivial, or it is only worthwhile if you're SIMD"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"e485411e-bc65-40fe-86d6-16777ff9155f","type":"message","text":"Also, the reason for being bits for SIMD is so that 64 bits is enough to mask a 512 bit vector of bytes","user":"UAUPJLBQX","ts":"1616314341.259300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GOm75","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, the reason for being bits for SIMD is so that 64 bits is enough to mask a 512 bit vector of bytes"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"1940c08d-8d22-43e0-a044-313f240259ab","type":"message","text":"it's not something you can use everywhere though, e.g. you can't just replace a single `cmp` with an opmask and hope it's fast (which I assume is what <@U0179G7FG4F> was thinking of)","user":"UH24GRBLL","ts":"1616314360.259500","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1616314574.000000"},"blocks":[{"type":"rich_text","block_id":"cqVEe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's not something you can use everywhere though, e.g. you can't just replace a single "},{"type":"text","text":"cmp","style":{"code":true}},{"type":"text","text":" with an opmask and hope it's fast (which I assume is what "},{"type":"user","user_id":"U0179G7FG4F"},{"type":"text","text":" was thinking of)"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"dc955803-b481-41cf-b9fa-abae6620f8ab","type":"message","text":"keeps the registers smaller / if they're dedicated to booleans, may as well make them the smallest possible size","user":"UAUPJLBQX","ts":"1616314368.259700","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1616314375.000000"},"blocks":[{"type":"rich_text","block_id":"8no","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"keeps the registers smaller / if they're dedicated to booleans, may as well make them the smallest possible size"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"8727ca52-36b9-40a5-ae83-789aefbfb9b3","type":"message","text":"addressing single bits would require a lot of extra special access hardware though, not sure that's worth the die space","user":"UH24GRBLL","ts":"1616314398.260000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g90","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"addressing single bits would require a lot of extra special access hardware though, not sure that's worth the die space"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"399de6c6-45fe-451e-9e68-ef6fff61831c","type":"message","text":"best to keep things in word size (or multiples thereof)","user":"UH24GRBLL","ts":"1616314414.260200","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1616314469.000000"},"blocks":[{"type":"rich_text","block_id":"o=N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"best to keep things in word size (or multiples thereof)"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"7dd5365e-e670-4535-b2b0-219ea851f89b","type":"message","text":"Not sure what you mean exactly","user":"UAUPJLBQX","ts":"1616314620.260600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P4RRe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure what you mean exactly"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"6a13ad1a-fc7c-4ac3-9549-0dc0bd6f224c","type":"message","text":"loading single bits from memory?","user":"UAUPJLBQX","ts":"1616314627.260800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WTv5/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"loading single bits from memory?"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"16db33be-7cc8-421e-95e9-8adc3044b20f","type":"message","text":"`BitArray`s already have that problem","user":"UAUPJLBQX","ts":"1616314635.261000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J6imv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BitArray","style":{"code":true}},{"type":"text","text":"s already have that problem"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"c21e0421-3976-47bd-9669-2f6ed2b71253","type":"message","text":"let's assume there was an architecture that used single bits as a boolean store for boolean operations","user":"UH24GRBLL","ts":"1616314652.261200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4/cJC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let's assume there was an architecture that used single bits as a boolean store for boolean operations"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"36d959d4-96a2-4c5c-b4df-5d3fde477b36","type":"message","text":"(and I agree, they can be cumbersome to work with)","user":"UAUPJLBQX","ts":"1616314652.261400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KCi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and I agree, they can be cumbersome to work with)"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"60decb9b-926a-482d-84f8-5c11364ee4e7","type":"message","text":"AVX512?","user":"UAUPJLBQX","ts":"1616314672.261600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"imkN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"AVX512?"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"6e2fcbc4-3298-4308-8f31-bd79f2db623c","type":"message","text":"how would you get that information out of those registers to interface with anything else (hardware wise)?","user":"UH24GRBLL","ts":"1616314691.261800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TJqIv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how would you get that information out of those registers to interface with anything else (hardware wise)?"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"8a2a6c38-7b63-4e47-b30f-e73d07f49eca","type":"message","text":"`kmovd`","user":"UAUPJLBQX","ts":"1616314702.262000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F=HCx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"kmovd","style":{"code":true}}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"341afa75-7e67-45a0-a68b-9c7951b4739e","type":"message","text":"I'm not talking about vectorextensions! I'm talking hypotheticals","user":"UH24GRBLL","ts":"1616314716.262200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IpM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not talking about vectorextensions! I'm talking hypotheticals"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"335789b3-8aed-403f-93fc-6c5545e9ad9b","type":"message","text":"Well, we have an actual example?","user":"UAUPJLBQX","ts":"1616314730.262400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"guYX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, we have an actual example?"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"9672d66b-111d-4ddb-bc25-036b455efc13","type":"message","text":"The main way you use it is having it apply to operations while still in the registers","user":"UAUPJLBQX","ts":"1616314754.262600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E=rn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The main way you use it is having it apply to operations while still in the registers"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"463bb31e-a923-4cc3-aa50-070837a2735a","type":"message","text":"and comparisons automatically create them in those registers","user":"UAUPJLBQX","ts":"1616314769.262800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XO7A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and comparisons automatically create them in those registers"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"e40ba577-02cf-4ddb-98fc-99e86fb446e2","type":"message","text":"so moving them in/out isn't all that typical","user":"UAUPJLBQX","ts":"1616314779.263000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aVb1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so moving them in/out isn't all that typical"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"d5df14ee-52b0-40ea-ac0d-17eb98f9a458","type":"message","text":"right, what I think Oscar meant was a bitstore for results of `cmp`","user":"UH24GRBLL","ts":"1616315438.263200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8uHKK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, what I think Oscar meant was a bitstore for results of "},{"type":"text","text":"cmp","style":{"code":true}}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"838c34c4-448b-4f73-ae86-a1a435ab9993","type":"message","text":"literal single bit registers","user":"UH24GRBLL","ts":"1616315471.263600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VW9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"literal single bit registers"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"cc127b5f-e163-4792-acff-decdbd051925","type":"message","text":"not larger registers you use individual bits of","user":"UH24GRBLL","ts":"1616315488.263800","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1616315493.000000"},"blocks":[{"type":"rich_text","block_id":"5fn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not larger registers you use individual bits of"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"594e2e17-3d03-43cc-a8d9-c14a7384876f","type":"message","text":"yeah, either store groups of at least 8, or pad however many you have to 8","user":"UAUPJLBQX","ts":"1616315581.264100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sds","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, either store groups of at least 8, or pad however many you have to 8"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"287d1401-d050-4fc5-9fe3-a7b4677c1e7f","type":"message","text":"if you want to store them in memory","user":"UAUPJLBQX","ts":"1616315613.264300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jS4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you want to store them in memory"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"cd5e21f0-07b9-4586-8e0e-dfd2d6631c40","type":"message","text":"yes. Point being, computationally or speculatively, there's no real advantage to saving individual bits and not running instructions based on that compared to a full word + a jump, I think","user":"UH24GRBLL","ts":"1616315824.264500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tc5=k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes. Point being, computationally or speculatively, there's no real advantage to saving individual bits and not running instructions based on that compared to a full word + a jump, I think"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"8ade5078-a645-48ac-99fa-a788e660f912","type":"message","text":"Oscar's smith's original comment didn't mention storing to memory though","user":"UAUPJLBQX","ts":"1616316322.265100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Weipk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oscar's smith's original comment didn't mention storing to memory though"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"ad9335fe-f9f3-4667-bc98-f8419efa0d72","type":"message","text":"just \"storing to a register\"","user":"UAUPJLBQX","ts":"1616316327.265300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l33Sq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just \"storing to a register\""}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"81fc641b-8e4a-41f7-a157-cefaecacce00","type":"message","text":"and having these registers control conditional evaluation (which is what the AVX512 opmask registers are/do)","user":"UAUPJLBQX","ts":"1616316337.265500","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1616316453.000000"},"blocks":[{"type":"rich_text","block_id":"WXk9d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and having these registers control conditional evaluation (which is what the AVX512 opmask registers are/do)"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"1c9ffbdc-77dd-4881-87dd-0a219203b485","type":"message","text":"but FWIW, LLVM seems really good about avoiding branches in such simple cases in general","user":"UAUPJLBQX","ts":"1616316377.265700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XJr0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but FWIW, LLVM seems really good about avoiding branches in such simple cases in general"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F","reactions":[{"name":"+1","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"fcabbd9d-e082-4759-be6e-fda518bb2d58","type":"message","text":"i.e., even on arches without such special registers","user":"UAUPJLBQX","ts":"1616316399.265900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/5k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i.e., even on arches without such special registers"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"b219fcf2-9916-4c16-99be-ddb020c81357","type":"message","text":"it'll try and do things like blends or cmovs to avoid branches","user":"UAUPJLBQX","ts":"1616316415.266100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WIo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it'll try and do things like blends or cmovs to avoid branches"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F","reactions":[{"name":"today-i-learned","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"cbaca328-3659-4dcf-96f1-b402f457b14c","type":"message","text":"I think CPUs actually do have those. cmp instructions set flags in the CPU, which are basically one not registers, no?","user":"U7HAYKY9X","ts":"1616317138.266400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"brzx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think CPUs actually do have those. cmp instructions set flags in the CPU, which are basically one not registers, no?"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"ef79c02d-4489-4fa7-902e-44109c12ea18","type":"message","text":"<https://godbolt.org/z/rxhj6G>","user":"UAUPJLBQX","ts":"1616317230.266600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zLpUC","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://godbolt.org/z/rxhj6G"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F","reactions":[{"name":"+1","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"5b4355fa-3fa4-4193-9ce3-ba75651bfe80","type":"message","text":"The `k*`  registers are mask registers. Just wanted to show an actual example of applying it to `vaddsd` (add a single double; LLVM still represents it here with a vector of 2)","user":"UAUPJLBQX","ts":"1616317328.266800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UuB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":"k*","style":{"code":true}},{"type":"text","text":"  registers are mask registers. Just wanted to show an actual example of applying it to "},{"type":"text","text":"vaddsd","style":{"code":true}},{"type":"text","text":" (add a single double; LLVM still represents it here with a vector of 2)"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"0f6ccf51-a7d0-4124-981b-ff86b2e4f199","type":"message","text":"for good measure, I added three of them, each using a different rounding mode","user":"UAUPJLBQX","ts":"1616317347.267000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iz4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for good measure, I added three of them, each using a different rounding mode"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"fcb9423b-bf4d-41df-b2ec-aa7d4a28fc51","type":"message","text":"yes kinda, but you don't get enabling/disabling of instructions based on that, you jump instead. It's a little different with vector extensions since they can directly reference them, but you always run them, not mark them as \"skip me\"","user":"UH24GRBLL","ts":"1616317365.267200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8OnMM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes kinda, but you don't get enabling/disabling of instructions based on that, you jump instead. It's a little different with vector extensions since they can directly reference them, but you always run them, not mark them as \"skip me\""}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"35eac236-5b1b-4d66-8e2d-9f7b6cd58cc4","type":"message","text":"Thanks for all the conversation on this. I learned a ton!","user":"U0179G7FG4F","ts":"1616339816.279400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gyprE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for all the conversation on this. I learned a ton!"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"066360aa-8254-4963-82d4-b2d4af7f2d0e","type":"message","text":"This is a RISC-V processor that processes one bit at a time: <https://github.com/olofk/serv>","user":"UGXP1QV41","ts":"1616470890.325400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0feo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is a RISC-V processor that processes one bit at a time: "},{"type":"link","url":"https://github.com/olofk/serv"}]}]}],"thread_ts":"1616309232.254500","parent_user_id":"U0179G7FG4F"}]