[{"client_msg_id":"e2c5b8ee-56ec-402e-812c-91508ae240ba","type":"message","text":"Kind of disappointed Julia is not able to solve the Collatz conjecture in O(1) time: <https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/>","user":"UM30MT6RF","ts":"1615981266.063700","team":"T68168MUP","attachments":[{"service_name":"reddit","title":"Tail recursion assumed to terminate? Rustc 'solves' the Collatz conjecture","title_link":"https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/","text":"Compiling this with release optimizations on Rust stable 1.50 results in assembly that just returns `true`: ```rust pub fn collatz(n: usize) -&gt;...","fallback":"reddit: Tail recursion assumed to terminate? Rustc 'solves' the Collatz conjecture","thumb_url":"https://www.redditstatic.com/new-icon.png","from_url":"https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/","thumb_width":256,"thumb_height":256,"service_icon":"http://www.redditstatic.com/desktop2x/img/favicon/apple-icon-57x57.png","id":1,"original_url":"https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/"}],"blocks":[{"type":"rich_text","block_id":"1rm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Kind of disappointed Julia is not able to solve the Collatz conjecture in O(1) time: "},{"type":"link","url":"https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/"}]}]}],"thread_ts":"1615981266.063700","reply_count":12,"reply_users_count":3,"latest_reply":"1615983103.067700","reply_users":["UM30MT6RF","U7HAYKY9X","U6BNE7LTZ"],"subscribed":false},{"client_msg_id":"a7e47bf3-c727-4a48-b24a-8c493a35bd90","type":"message","text":"```julia&gt; function collatz(n)\n           if n == 1\n               true\n           elseif iseven(n)\n               collatz(n ÷ 2)\n           else\n               collatz(3n + 1)\n           end\n       end\ncollatz (generic function with 1 method)\n\njulia&gt; code_llvm(collatz, Tuple{UInt32}; optimize=true)\n;  @ REPL[60]:1 within `collatz'\ndefine i8 @julia_collatz_1027(i32 zeroext %0) {\ntop:\n;  @ REPL[60]:2 within `collatz'\n; ┌ @ int.jl:448 within `==' @ promotion.jl:359 @ promotion.jl:409\n   %.not = icmp eq i32 %0, 1\n; └\n  br i1 %.not, label %L5, label %L6\n\nL5:                                               ; preds = %top\n;  @ REPL[60]:3 within `collatz'\n  ret i8 1\n\nL6:                                               ; preds = %top\n;  @ REPL[60]:4 within `collatz'\n; ┌ @ int.jl:127 within `iseven'\n; │┌ @ int.jl:207 within `rem' @ promotion.jl:363 @ int.jl:266\n    %1 = and i32 %0, 1\n; │└\n; │┌ @ number.jl:40 within `iszero'\n; ││┌ @ promotion.jl:409 within `=='\n     %.not3 = icmp eq i32 %1, 0\n; └└└\n;  @ REPL[60] within `collatz'\n  %2 = zext i32 %0 to i64\n;  @ REPL[60]:4 within `collatz'\n  br i1 %.not3, label %L10, label %L17\n\nL10:                                              ; preds = %L6\n;  @ REPL[60]:5 within `collatz'\n; ┌ @ int.jl:204 within `div' @ div.jl:37 @ div.jl:280 @ int.jl:265\n   %3 = lshr i64 %2, 1\n; └\n  %4 = call i8 @j_collatz_1029(i64 zeroext %3)\n  ret i8 %4\n\nL17:                                              ; preds = %L6\n;  @ REPL[60]:7 within `collatz'\n; ┌ @ int.jl:925 within `*' @ int.jl:88\n   %5 = mul nuw nsw i64 %2, 3\n; └\n; ┌ @ int.jl:87 within `+'\n   %6 = add nuw nsw i64 %5, 1\n; └\n  %7 = call i8 @j_collatz_1030(i64 signext %6)\n  ret i8 %7\n}```","user":"UM30MT6RF","ts":"1615981286.063900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kxn","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function collatz(n)\n           if n == 1\n               true\n           elseif iseven(n)\n               collatz(n ÷ 2)\n           else\n               collatz(3n + 1)\n           end\n       end\ncollatz (generic function with 1 method)\n\njulia> code_llvm(collatz, Tuple{UInt32}; optimize=true)\n;  @ REPL[60]:1 within `collatz'\ndefine i8 @julia_collatz_1027(i32 zeroext %0) {\ntop:\n;  @ REPL[60]:2 within `collatz'\n; ┌ @ int.jl:448 within `==' @ promotion.jl:359 @ promotion.jl:409\n   %.not = icmp eq i32 %0, 1\n; └\n  br i1 %.not, label %L5, label %L6\n\nL5:                                               ; preds = %top\n;  @ REPL[60]:3 within `collatz'\n  ret i8 1\n\nL6:                                               ; preds = %top\n;  @ REPL[60]:4 within `collatz'\n; ┌ @ int.jl:127 within `iseven'\n; │┌ @ int.jl:207 within `rem' @ promotion.jl:363 @ int.jl:266\n    %1 = and i32 %0, 1\n; │└\n; │┌ @ number.jl:40 within `iszero'\n; ││┌ @ promotion.jl:409 within `=='\n     %.not3 = icmp eq i32 %1, 0\n; └└└\n;  @ REPL[60] within `collatz'\n  %2 = zext i32 %0 to i64\n;  @ REPL[60]:4 within `collatz'\n  br i1 %.not3, label %L10, label %L17\n\nL10:                                              ; preds = %L6\n;  @ REPL[60]:5 within `collatz'\n; ┌ @ int.jl:204 within `div' @ div.jl:37 @ div.jl:280 @ int.jl:265\n   %3 = lshr i64 %2, 1\n; └\n  %4 = call i8 @j_collatz_1029(i64 zeroext %3)\n  ret i8 %4\n\nL17:                                              ; preds = %L6\n;  @ REPL[60]:7 within `collatz'\n; ┌ @ int.jl:925 within `*' @ int.jl:88\n   %5 = mul nuw nsw i64 %2, 3\n; └\n; ┌ @ int.jl:87 within `+'\n   %6 = add nuw nsw i64 %5, 1\n; └\n  %7 = call i8 @j_collatz_1030(i64 signext %6)\n  ret i8 %7\n}"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"},{"type":"message","subtype":"thread_broadcast","text":"Kind of tempted to open an issue... :thinking_face:","user":"UM30MT6RF","ts":"1615981318.064100","thread_ts":"1615981266.063700","root":{"client_msg_id":"e2c5b8ee-56ec-402e-812c-91508ae240ba","type":"message","text":"Kind of disappointed Julia is not able to solve the Collatz conjecture in O(1) time: <https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/>","user":"UM30MT6RF","ts":"1615981266.063700","team":"T68168MUP","attachments":[{"service_name":"reddit","title":"Tail recursion assumed to terminate? Rustc 'solves' the Collatz conjecture","title_link":"https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/","text":"Compiling this with release optimizations on Rust stable 1.50 results in assembly that just returns `true`: ```rust pub fn collatz(n: usize) -&gt;...","fallback":"reddit: Tail recursion assumed to terminate? Rustc 'solves' the Collatz conjecture","thumb_url":"https://www.redditstatic.com/new-icon.png","from_url":"https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/","thumb_width":256,"thumb_height":256,"service_icon":"http://www.redditstatic.com/desktop2x/img/favicon/apple-icon-57x57.png","id":1,"original_url":"https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/"}],"blocks":[{"type":"rich_text","block_id":"1rm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Kind of disappointed Julia is not able to solve the Collatz conjecture in O(1) time: "},{"type":"link","url":"https://www.reddit.com/r/rust/comments/ltm4ko/tail_recursion_assumed_to_terminate_rustc_solves/"}]}]}],"thread_ts":"1615981266.063700","reply_count":12,"reply_users_count":3,"latest_reply":"1615983103.067700","reply_users":["UM30MT6RF","U7HAYKY9X","U6BNE7LTZ"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"iew","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Kind of tempted to open an issue... "},{"type":"emoji","name":"thinking_face"}]}]}],"client_msg_id":"af803559-5776-43dd-a2a7-2c84285ec327"},{"client_msg_id":"b48ffe9c-ac8a-4644-87a7-ecc7e15d3c72","type":"message","text":"Finally, the impervious argument to why we should have tail call optimization in Julia","user":"U7HAYKY9X","ts":"1615981607.064800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZPE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Finally, the impervious argument to why we should have tail call optimization in Julia"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"},{"client_msg_id":"7380f66a-059b-4b78-8e09-db40e6ebed41","type":"message","text":"I don't think Rust has tce though? At least, that's what <https://internals.rust-lang.org/t/when-will-rust-have-tco-tce-a-proposal-on-the-subject/8486/11|https://internals.rust-lang.org/t/when-will-rust-have-tco-tce-a-proposal-on-the-subject/8486/11> seems to suggest.","user":"UM30MT6RF","ts":"1615981775.065400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s5i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think Rust has tce though? At least, that's what "},{"type":"link","url":"https://internals.rust-lang.org/t/when-will-rust-have-tco-tce-a-proposal-on-the-subject/8486/11","text":"https://internals.rust-lang.org/t/when-will-rust-have-tco-tce-a-proposal-on-the-subject/8486/11"},{"type":"text","text":" seems to suggest."}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"},{"client_msg_id":"42c7805c-aa50-49bc-bce7-fa8daf42c8d5","type":"message","text":"It does, it's just not a semantic guarantee (which is probably the right way to go about it, especially for Julia)","user":"U7HAYKY9X","ts":"1615981853.065600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E5BG2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It does, it's just not a semantic guarantee (which is probably the right way to go about it, especially for Julia)"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"},{"client_msg_id":"9296ec8c-bb10-4ef0-998f-9db007030a21","type":"message","text":"Ah, interesting!","user":"UM30MT6RF","ts":"1615981901.065800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rfuq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, interesting!"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"},{"client_msg_id":"1c435e20-9897-4922-b49c-cc30473a0ba6","type":"message","text":"I recently read an aritcle that explained that TCO creates more efficient code for literally any function that ends in a call. That blew my mind, I had previously only heard about TCO in the context of recursive functions","user":"U7HAYKY9X","ts":"1615981965.066000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bfpe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I recently read an aritcle that explained that TCO creates more efficient code for literally any function that ends in a call. That blew my mind, I had previously only heard about TCO in the context of recursive functions"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"},{"client_msg_id":"19f83796-114e-4d7e-8f51-902ccca0d93a","type":"message","text":"You'll still need to convince <@U687RKK0E>  though :grin:: <https://github.com/JuliaLang/julia/issues/4964#issuecomment-332582024|https://github.com/JuliaLang/julia/issues/4964#issuecomment-332582024>","user":"UM30MT6RF","ts":"1615982106.066400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/V4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You'll still need to convince "},{"type":"user","user_id":"U687RKK0E"},{"type":"text","text":"  though "},{"type":"emoji","name":"grin"},{"type":"text","text":": "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/4964#issuecomment-332582024","text":"https://github.com/JuliaLang/julia/issues/4964#issuecomment-332582024"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"},{"client_msg_id":"1eea2e92-3511-4154-b8fc-bb539deab786","type":"message","text":"Yeah :sweat_smile: I guess it also needs some guarantee that the called function can never throw exceptions (else, what should the stack trace look like?) And maybe it's not that important for speed, IDK. It's just annoying to have those juicy FLOPS lying on the table","user":"U7HAYKY9X","ts":"1615982284.066600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"48gb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":" I guess it also needs some guarantee that the called function can never throw exceptions (else, what should the stack trace look like?) And maybe it's not that important for speed, IDK. It's just annoying to have those juicy FLOPS lying on the table"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"},{"client_msg_id":"f18c65e0-de2b-4cf9-b874-7f378fd8ed84","type":"message","text":"That's already fixed in Rust, btw :slightly_smiling_face:","user":"U6BNE7LTZ","ts":"1615982359.066800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Fq18","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's already fixed in Rust, btw "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"},{"client_msg_id":"c32f6345-044f-4cc4-b05b-83299d210bd8","type":"message","text":"Yes, although AFAIK, Rust also has stricter guarantees than Julia here (ref <https://github.com/JuliaLang/julia/issues/40009|https://github.com/JuliaLang/julia/issues/40009>)","user":"UM30MT6RF","ts":"1615982481.067000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fmaf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, although AFAIK, Rust also has stricter guarantees than Julia here (ref "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/40009","text":"https://github.com/JuliaLang/julia/issues/40009"},{"type":"text","text":")"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF","reactions":[{"name":"+1","users":["U6BNE7LTZ"],"count":1}]},{"client_msg_id":"66efa0bc-852c-4acd-ae25-1b1eb4db8003","type":"message","text":"Huh, interestingly, Julia doesn't create this error even when manually doing \"TCE\" with goto-statements:\n```\t.section\t__TEXT,__text,regular,pure_instructions\n\tcmpq\t$1, %rdi\n\tje\tL41\n\tnopw\t(%rax,%rax)\nL16:\n\tmovq\t%rdi, %rax\n\tshrq\t%rax\n\ttestb\t$1, %dil\n\tleaq\t1(%rdi,%rdi,2), %rdi\n\tcmoveq\t%rax, %rdi\n\tcmpq\t$1, %rdi\n\tjne\tL16\nL41:\n\tmovb\t$1, %al\n\tretq\n\tnopl\t(%rax)```","user":"U7HAYKY9X","ts":"1615983103.067700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Dh7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Huh, interestingly, Julia doesn't create this error even when manually doing \"TCE\" with goto-statements:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\t.section\t__TEXT,__text,regular,pure_instructions\n\tcmpq\t$1, %rdi\n\tje\tL41\n\tnopw\t(%rax,%rax)\nL16:\n\tmovq\t%rdi, %rax\n\tshrq\t%rax\n\ttestb\t$1, %dil\n\tleaq\t1(%rdi,%rdi,2), %rdi\n\tcmoveq\t%rax, %rdi\n\tcmpq\t$1, %rdi\n\tjne\tL16\nL41:\n\tmovb\t$1, %al\n\tretq\n\tnopl\t(%rax)"}]}]}],"thread_ts":"1615981266.063700","parent_user_id":"UM30MT6RF"}]