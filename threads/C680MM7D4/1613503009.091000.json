[{"client_msg_id":"d39cd0e9-0056-4868-a4f1-8677a153bb33","type":"message","text":"if only we could finally get currying, we could write `map` even more nicely, and list comprehensions would become completely pointless","user":"U9VG1AYSG","ts":"1613503009.091000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C6IPI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if only we could finally get currying, we could write "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" even more nicely, and list comprehensions would become completely pointless"}]}]}],"thread_ts":"1613503009.091000","reply_count":11,"reply_users_count":4,"latest_reply":"1613604423.120900","reply_users":["UGD4K0Z25","U9VG1AYSG","U7HAYKY9X","U66QZ3QF3"],"subscribed":false},{"client_msg_id":"0966c245-a5cc-439c-a9b6-913c7d4f0319","type":"message","text":"I wholeheartedly support currying.","user":"UGD4K0Z25","ts":"1613503209.093600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YaOG3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wholeheartedly support currying."}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"142685f5-5a7c-4f57-83c8-bcc666380596","type":"message","text":"I know me too.. I would definitely abuse the hell out of it","user":"U9VG1AYSG","ts":"1613503234.093800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QanpB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I know me too.. I would definitely abuse the hell out of it"}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"72c0cee5-31d7-48e7-a133-35aaae4d324a","type":"message","text":"It will probably prevent me from touching Haskell again for a long time.","user":"UGD4K0Z25","ts":"1613503252.094000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zQP6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It will probably prevent me from touching Haskell again for a long time."}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"ca189836-c77c-488a-abca-ff8269f2abac","type":"message","text":"I really wish they just could have decided on some convention and put it in, but I suppose they were right to hold off when there was so much confusion about what the syntax should be","user":"U9VG1AYSG","ts":"1613503271.094200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n1wi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I really wish they just could have decided on some convention and put it in, but I suppose they were right to hold off when there was so much confusion about what the syntax should be"}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"6141103b-fc01-475f-8fc2-49be4217aec0","type":"message","text":"I kind of feel like Julia will not get currying until *at least* 2.0 now :disappointed:","user":"U9VG1AYSG","ts":"1613503289.094400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DPcnv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I kind of feel like Julia will not get currying until "},{"type":"text","text":"at least","style":{"bold":true}},{"type":"text","text":" 2.0 now "},{"type":"emoji","name":"disappointed"}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"e3f9727c-2a32-485c-97b1-a0bd0f93fb6c","type":"message","text":"If the designers can get it right, I'm willing to wait.","user":"UGD4K0Z25","ts":"1613503373.094600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cxP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If the designers can get it right, I'm willing to wait."}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"de6ebaaa-7644-4363-8b1a-d89004f1d7fd","type":"message","text":"at least we have poor man's currying implemented for a few operators lol","user":"U9VG1AYSG","ts":"1613503439.094800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OiUG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"at least we have poor man's currying implemented for a few operators lol"}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"a157cd3d-5603-4f95-8dac-b2c202012ba5","type":"message","text":"I just define\n```\nimap(f) = x -&gt; Iterators.map(f, x)\n```\nAt the beginning of the file, then use that","user":"U7HAYKY9X","ts":"1613504868.098200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UCjmZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just define\n```\nimap(f) = x -> Iterators.map(f, x)\n```\nAt the beginning of the file, then use that"}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"fa3dbe79-f9cd-4687-ac8a-2893a3bb9110","type":"message","text":"I think there was an issue that we can't really curry `map` without breaking changes because `map(f, iters...)` generalizes to `map(f)` which just calls `f()`.\n\nI'm not sure we _really_ need that zero-container version though, I'm OK with it requiring at least one container, but it matches the definition using `zip` and `zip()` is defined.","user":"U66QZ3QF3","ts":"1613519657.103800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5xeo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think there was an issue that we can't really curry "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" without breaking changes because "},{"type":"text","text":"map(f, iters...)","style":{"code":true}},{"type":"text","text":" generalizes to "},{"type":"text","text":"map(f)","style":{"code":true}},{"type":"text","text":" which just calls "},{"type":"text","text":"f()","style":{"code":true}},{"type":"text","text":".\n\nI'm not sure we "},{"type":"text","text":"really","style":{"italic":true}},{"type":"text","text":" need that zero-container version though, I'm OK with it requiring at least one container, but it matches the definition using "},{"type":"text","text":"zip","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"zip()","style":{"code":true}},{"type":"text","text":" is defined."}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"5da435fb-d7d3-4c1e-a6d1-f423c3c0cf57","type":"message","text":"But there is no method `map(f, iters...)` ? Nor should there be, I think?","user":"U7HAYKY9X","ts":"1613548938.110900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z2r3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But there is no method "},{"type":"text","text":"map(f, iters...)","style":{"code":true}},{"type":"text","text":" ? Nor should there be, I think?"}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"b985182f-bb99-40bb-b0e1-8a19ec69d736","type":"message","text":"What do you mean?\nYou can do `map(+, [1,2,3], [1,2,3])` and get `[2,4,6]` .\nYou can do `f = () -&gt; 2; map(f)` and get `2`.","user":"U66QZ3QF3","ts":"1613604423.120900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QRB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean?\nYou can do "},{"type":"text","text":"map(+, [1,2,3], [1,2,3])","style":{"code":true}},{"type":"text","text":" and get "},{"type":"text","text":"[2,4,6]","style":{"code":true}},{"type":"text","text":" .\nYou can do "},{"type":"text","text":"f = () -> 2; map(f)","style":{"code":true}},{"type":"text","text":" and get "},{"type":"text","text":"2","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1613503009.091000","parent_user_id":"U9VG1AYSG"}]