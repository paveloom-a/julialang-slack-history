[{"client_msg_id":"5ca9d597-7dcf-40e5-9368-96522c649ec9","type":"message","text":"astropy is listed as a C program :joy:","user":"UDB26738Q","ts":"1607905238.115600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5aI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"astropy is listed as a C program "},{"type":"emoji","name":"joy"}]}]}],"thread_ts":"1607905238.115600","reply_count":5,"reply_users_count":3,"latest_reply":"1607963303.150800","reply_users":["U7EF5AWHW","UDB26738Q","U6795JH6H"],"subscribed":false,"reactions":[{"name":"joy","users":["UDSU53PEG","UPUBAM63X","U6QGE7S86","UKG4WF8PJ","U7HAYKY9X","U7EF5AWHW","U9MED583T","U6CJRSR63","U01GE1N0EP9","U6795JH6H"],"count":10},{"name":"correct_answer","users":["U6795JH6H"],"count":1}]},{"client_msg_id":"a728bdae-78e6-459b-bbc2-459b479a2575","type":"message","text":"#12 most critical C program if I'm reading this correctly :rolling_on_the_floor_laughing:","user":"U7EF5AWHW","ts":"1607938789.130900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6VoB7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"#12 most critical C program if I'm reading this correctly "},{"type":"emoji","name":"rolling_on_the_floor_laughing"}]}]}],"thread_ts":"1607905238.115600","parent_user_id":"UDB26738Q"},{"client_msg_id":"d435851c-88f1-4f0b-b3dd-9aeef1b749ec","type":"message","text":"Yeah... :smile:","user":"UDB26738Q","ts":"1607939105.131100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"alMwR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah... "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1607905238.115600","parent_user_id":"UDB26738Q"},{"client_msg_id":"3ef3c0cc-c2da-40b9-ad26-5f2963fefb73","type":"message","text":"I mean accurate, no? Hardly any of the scipy ecosystem is actually written in Python","user":"U6795JH6H","ts":"1607956793.144300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VlITV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean accurate, no? Hardly any of the scipy ecosystem is actually written in Python"}]}]}],"thread_ts":"1607905238.115600","parent_user_id":"UDB26738Q"},{"client_msg_id":"925b5583-fb95-45ca-ac77-29636810a24e","type":"message","text":"they vendor in the repository some external C libraries.  we also do call the same C libraries as well in astro julia packages, but via JLL packages, we don't copy the source code.  I believe that's what inflating the percentage, the majority of astropy is in Python (but relying on numpy for the heavy lifting)","user":"UDB26738Q","ts":"1607957114.144700","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1607957129.000000"},"blocks":[{"type":"rich_text","block_id":"Ebm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"they vendor in the repository some external C libraries.  we also do call the same C libraries as well in astro julia packages, but via JLL packages, we don't copy the source code.  I believe that's what inflating the percentage, the majority of astropy is in Python (but relying on numpy for the heavy lifting)"}]}]}],"thread_ts":"1607905238.115600","parent_user_id":"UDB26738Q"},{"client_msg_id":"5f7970ec-946a-4d91-a956-3ac3ab257ff0","type":"message","text":"BTW, the fact they rely on numpy is the reason why they had to reimplement themselves an internal module for the propagation of uncertainies.  a similar package already exists in the python ecosystem, but of course you can't use it in astropy, because astropy doesn't know anything about that external class\n\nfun fact: I wrote `Measurements.jl` out of frustration with this precise issue, and it nicely works with all/most astronomical packages in Julia, without having to do anything special","user":"UDB26738Q","ts":"1607963303.150800","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1607963316.000000"},"blocks":[{"type":"rich_text","block_id":"8+X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW, the fact they rely on numpy is the reason why they had to reimplement themselves an internal module for the propagation of uncertainies.  a similar package already exists in the python ecosystem, but of course you can't use it in astropy, because astropy doesn't know anything about that external class\n\nfun fact: I wrote "},{"type":"text","text":"Measurements.jl","style":{"code":true}},{"type":"text","text":" out of frustration with this precise issue, and it nicely works with all/most astronomical packages in Julia, without having to do anything special"}]}]}],"thread_ts":"1607905238.115600","parent_user_id":"UDB26738Q","reactions":[{"name":"julia-smirk","users":["U6CCK2SCV","U80UK1NSJ"],"count":2}]}]