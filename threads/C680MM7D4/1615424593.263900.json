[{"client_msg_id":"6f9d3501-7a67-47bc-97c4-f4a2d4d2e2c6","type":"message","text":"Today in far-left ideas:\nIf the subtyping algorithm of Swift can be recast as a term re-writing problem (vis. <https://forums.swift.org/t/formalizing-swift-generics-as-a-term-rewriting-system/45175>), Can the Julia subtyping algorithm be recast as term rewriting with Symbolics.jl? <@U687RKK0E>","user":"U6QGE7S86","ts":"1615424593.263900","team":"T68168MUP","attachments":[{"service_name":"Swift Forums","title":"Formalizing Swift generics as a term rewriting system","title_link":"https://forums.swift.org/t/formalizing-swift-generics-as-a-term-rewriting-system/45175","text":"Formalizing Swift generics as a term rewriting system Previously I wrote about how the full generality of the Swift generic system is undecidable. The basic idea is that \"finitely-presented monoids\" can be written as a Swift protocol where the \"word problem\" on the monoid reduces to proving an equivalence between two types. Since the word problem is known to be undecidable, this shows that Swift generics (as currently defined) are undecidable. In that post, we started with a finitely-presented ...","fallback":"Swift Forums: Formalizing Swift generics as a term rewriting system","thumb_url":"https://aws1.discourse-cdn.com/swift/original/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6.png","fields":[{"title":"Reading time","value":"10 mins :clock2:","short":true},{"title":"Likes","value":"55 :heart:","short":true}],"ts":1614553684,"from_url":"https://forums.swift.org/t/formalizing-swift-generics-as-a-term-rewriting-system/45175","thumb_width":590,"thumb_height":585,"service_icon":"https://aws1.discourse-cdn.com/swift/optimized/1X/0a90dde98a223f5841eeca49d89dc9f57592e8d6_2_180x180.png","id":1,"original_url":"https://forums.swift.org/t/formalizing-swift-generics-as-a-term-rewriting-system/45175"}],"blocks":[{"type":"rich_text","block_id":"uGkWy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Today in far-left ideas:\nIf the subtyping algorithm of Swift can be recast as a term re-writing problem (vis. "},{"type":"link","url":"https://forums.swift.org/t/formalizing-swift-generics-as-a-term-rewriting-system/45175"},{"type":"text","text":"), Can the Julia subtyping algorithm be recast as term rewriting with Symbolics.jl? "},{"type":"user","user_id":"U687RKK0E"}]}]}],"thread_ts":"1615424593.263900","reply_count":7,"reply_users_count":5,"latest_reply":"1615493348.302900","reply_users":["UDGT4PM41","U01K2JB9GPJ","U6QGE7S86","U677NAWV8","UPUBAM63X"],"subscribed":false,"reactions":[{"name":"julia","users":["U0179G7FG4F","UGU761DU2","U01QUMZP9MF","UDSU53PEG"],"count":4}]},{"client_msg_id":"d2b2208f-536b-45db-af0c-4c93c5836ad0","type":"message","text":"<@U01K2JB9GPJ>","user":"UDGT4PM41","ts":"1615479585.281900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Be5","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01K2JB9GPJ"}]}]}],"thread_ts":"1615424593.263900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"25d946e2-75a6-4a4e-b341-66bd8e687278","type":"message","text":"Why not Metatheory.jl ? <@U6QGE7S86>","user":"U01K2JB9GPJ","ts":"1615479643.282100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Png","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why not Metatheory.jl ? "},{"type":"user","user_id":"U6QGE7S86"}]}]}],"thread_ts":"1615424593.263900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"d1574558-74ed-43e3-9503-bb7a3e1a4372","type":"message","text":"If it works, it works. I don't know theres a clear winner for all term rewriting - go for the Rackauckas strategy and implement both and see which is best and dispatch.","user":"U6QGE7S86","ts":"1615480188.283000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7vG7L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it works, it works. I don't know theres a clear winner for all term rewriting - go for the Rackauckas strategy and implement both and see which is best and dispatch."}]}]}],"thread_ts":"1615424593.263900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"fdce728f-3901-478f-b487-77c00d1d045b","type":"message","text":"I am still in conference mode because I read this as \"Can the Julia subtyping algorithm be racist\"","user":"U677NAWV8","ts":"1615487928.297500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5TTNc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am still in conference mode because I read this as \"Can the Julia subtyping algorithm be racist\""}]}]}],"thread_ts":"1615424593.263900","parent_user_id":"U6QGE7S86","reactions":[{"name":"ahhhhhhh","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"49c3d579-253b-4165-b791-36843a8e4404","type":"message","text":"\"Subtype algorithms, not people\" right?","user":"U6QGE7S86","ts":"1615491252.300500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IMMB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"Subtype algorithms, not people\" right?"}]}]}],"thread_ts":"1615424593.263900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"ea717732-32e1-4ad4-9713-a45a4e457904","type":"message","text":"For the curious:\nJeff says something along the lines of \"You can probably recast the algoritm in terms of term rewriting. TR is Turing Complete, so sure. The difference is the heuristics we have to speed up the hot paths we care about.\"","user":"U6QGE7S86","ts":"1615493275.302600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XAw2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For the curious:\nJeff says something along the lines of \"You can probably recast the algoritm in terms of term rewriting. TR is Turing Complete, so sure. The difference is the heuristics we have to speed up the hot paths we care about.\""}]}]}],"thread_ts":"1615424593.263900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"fa337d48-1f13-44e1-a4e5-66a07a0cb51a","type":"message","text":"thats some nice thinking miguel :slightly_smiling_face:","user":"UPUBAM63X","ts":"1615493348.302900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BSxRR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thats some nice thinking miguel "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1615424593.263900","parent_user_id":"U6QGE7S86","reactions":[{"name":"nyanjeff","users":["U6QGE7S86"],"count":1}]}]