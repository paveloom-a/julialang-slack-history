[{"client_msg_id":"23f4cc2a-7279-47ee-ace4-7efba0930695","type":"message","text":"So I'm writing lecture notes for a course and want to include a section on debugging scientific code. Eg generic advice like start simple, check against known results, debug each part separately, inspect intermediary quantities, make assertions, etc. Anybody knows if this is explained well somewhere? Or is there no shortcut to learning this the hard way?","user":"UMDEUKM29","ts":"1616012832.114200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2e+Ak","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I'm writing lecture notes for a course and want to include a section on debugging scientific code. Eg generic advice like start simple, check against known results, debug each part separately, inspect intermediary quantities, make assertions, etc. Anybody knows if this is explained well somewhere? Or is there no shortcut to learning this the hard way?"}]}]}],"thread_ts":"1616012832.114200","reply_count":1,"reply_users_count":1,"latest_reply":"1616013278.115400","reply_users":["UPUBAM63X"],"subscribed":false},{"client_msg_id":"6ecea5ac-b82d-49a7-be69-1b4ed2d2d0c9","type":"message","text":"So my advice is, the best debugging happens by building smartly.\n\nMake small functions that are easily parsable. Put unit tests on them as you make them, depending on the criticality, test all edge cases you can think of.\n\nDo not write a full algorithm in one shot. Build up too it(lots of scientific algo's build from simpler steps). So start small, add complexity, test, add complexity, test, etc.","user":"UPUBAM63X","ts":"1616013278.115400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g9cBA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So my advice is, the best debugging happens by building smartly.\n\nMake small functions that are easily parsable. Put unit tests on them as you make them, depending on the criticality, test all edge cases you can think of.\n\nDo not write a full algorithm in one shot. Build up too it(lots of scientific algo's build from simpler steps). So start small, add complexity, test, add complexity, test, etc."}]}]}],"thread_ts":"1616012832.114200","parent_user_id":"UMDEUKM29","reactions":[{"name":"+1","users":["U0138UTB7A4"],"count":1},{"name":"this","users":["U0138UTB7A4"],"count":1}]}]