[{"client_msg_id":"113fb341-7411-4443-8d95-4a5b9d54d135","type":"message","text":"How to reverse an integer Number using bitwise operators? Using normal /10 % etc is ok, but how to optimise and do it using bitwise? Any idea anyone?","user":"U01G55LRSQL","ts":"1617702666.057100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ekc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How to reverse an integer Number using bitwise operators? Using normal /10 % etc is ok, but how to optimise and do it using bitwise? Any idea anyone?"}]}]}],"thread_ts":"1617702666.057100","reply_count":16,"reply_users_count":5,"latest_reply":"1617707672.064400","reply_users":["U01G55LRSQL","U7HAYKY9X","UC3SSCQRZ","U9MD78Z9N","UAUCGGD6C"],"is_locked":false,"subscribed":false},{"client_msg_id":"a643794a-c836-4719-a411-619ef4ffa42d","type":"message","text":"It's kinda basic, but still","user":"U01G55LRSQL","ts":"1617702711.057300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iAjm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's kinda basic, but still"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"aa7221c1-8d14-4f0e-bd7a-ba6cf43c78fc","type":"message","text":"What do you mean reverse? Reverse the order of the bits?","user":"U7HAYKY9X","ts":"1617702970.057500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=lO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean reverse? Reverse the order of the bits?"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"db1a0a55-710f-452e-8d3a-3126fd37c752","type":"message","text":"e.g. `010111`  -&gt; `111010` ?","user":"U7HAYKY9X","ts":"1617702982.057700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jKiVu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"e.g. "},{"type":"text","text":"010111","style":{"code":true}},{"type":"text","text":"  -> "},{"type":"text","text":"111010","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"2a91c2bd-78ff-4eac-93aa-0dc726a83821","type":"message","text":"No the number. Reversing the bits is doable, but I'm trying to reverse the number. Ex: 25 it will get converted to binary, then some operations will take place to convert it to binary Value of 52, and then return 52","user":"U01G55LRSQL","ts":"1617703056.057900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BQsIV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No the number. Reversing the bits is doable, but I'm trying to reverse the number. Ex: 25 it will get converted to binary, then some operations will take place to convert it to binary Value of 52, and then return 52"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"74eafac1-63e0-4ee6-ab04-b5a966c9fd65","type":"message","text":"Ah. Then I don't think you can use bit-tricks to be honest. You need to have the division","user":"U7HAYKY9X","ts":"1617703080.058100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1BJd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah. Then I don't think you can use bit-tricks to be honest. You need to have the division"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"42cdaf03-55fb-44f8-96c5-921eda2ce3f3","type":"message","text":"Yes :// I also think so. But I was just curious","user":"U01G55LRSQL","ts":"1617703105.058300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c1DC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes :// I also think so. But I was just curious"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL","reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"5f523ccc-c584-4496-8785-1819943cfbed","type":"message","text":"You can use string operations","user":"UC3SSCQRZ","ts":"1617703653.058600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Obw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can use string operations"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"1ccc744b-e871-474c-bc3a-d8c37ba0ea9a","type":"message","text":"i=25\nparse(Int,join(reverse(collect(string(i)))))","user":"UC3SSCQRZ","ts":"1617703802.061200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hkoD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i=25\nparse(Int,join(reverse(collect(string(i)))))"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"b5958b26-5cbb-43d6-910e-d77f6cea7b0a","type":"message","text":"ah, reading the question, the answer is of course: no, not with bit operations. Sorry for the derail...","user":"UC3SSCQRZ","ts":"1617703916.061400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RVL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, reading the question, the answer is of course: no, not with bit operations. Sorry for the derail..."}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL","reactions":[{"name":"sweat_smile","users":["U01G55LRSQL"],"count":1}]},{"client_msg_id":"41f4bbb2-724a-47a6-806a-059fb883d096","type":"message","text":"Convert to BCD Bit switches on BCD. BCD to Binary.","user":"U9MD78Z9N","ts":"1617705191.061700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ej5G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Convert to BCD Bit switches on BCD. BCD to Binary."}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL","reactions":[{"name":"memo","users":["U01G55LRSQL"],"count":1}]},{"client_msg_id":"b53d3216-f7c4-47c3-a319-7c127dcc0ac4","type":"message","text":"Yeah , after BCD, reversing the BCD and then converting to decimal would be good I guess","user":"U01G55LRSQL","ts":"1617706601.063300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n1S2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah , after BCD, reversing the BCD and then converting to decimal would be good I guess"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"e5a32747-a0f0-430d-9c71-ce4329e60389","type":"message","text":"Using BCD (binary coded decimal) will probably be slower than doing division","user":"UAUCGGD6C","ts":"1617706629.063500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u=Xw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Using BCD (binary coded decimal) will probably be slower than doing division"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL","reactions":[{"name":"sweat_smile","users":["U01G55LRSQL"],"count":1}]},{"client_msg_id":"2139033c-35a9-4110-bf7f-e16fd0dbcdb5","type":"message","text":"But maybe not. x86 still has instructions for doing some BCD stuff. Might be fun to try it out.","user":"UAUCGGD6C","ts":"1617706716.063800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OrB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But maybe not. x86 still has instructions for doing some BCD stuff. Might be fun to try it out."}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"c66be579-7879-4f10-990a-2d7966870ba3","type":"message","text":"Alright, what are those instructions ! I'll try to find a way to optimise using BCD method.","user":"U01G55LRSQL","ts":"1617706850.064000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PvQim","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alright, what are those instructions ! I'll try to find a way to optimise using BCD method."}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL"},{"client_msg_id":"c7adb630-29d7-41e7-bc8d-a72fe79cc7b3","type":"message","text":"Just go with the division. The divisor is a compile time constant, so the compiler will avoid `idivq` instructions and refactor it to a multiplication and a few bitwise operations.","user":"U7HAYKY9X","ts":"1617707390.064200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cBT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just go with the division. The divisor is a compile time constant, so the compiler will avoid `idivq` instructions and refactor it to a multiplication and a few bitwise operations."}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL","reactions":[{"name":"+1","users":["U01G55LRSQL"],"count":1}]},{"client_msg_id":"1b3a8089-3127-4da8-8007-12d1a457149a","type":"message","text":"```function foo(x::Unsigned)\n    y = zero(typeof(x))\n    while !iszero(x)\n        x, r = divrem(x, 10)\n        y = y * 10 + r\n    end\n    y\nend```\nYields\n```julia&gt; @code_native debuginfo=:none foo(UInt(512))\n        .section        __TEXT,__text,regular,pure_instructions\n        xorl    %eax, %eax\n        movl    %eax, %ecx\n        movq    %rcx, -8(%rsp)\n        movq    %rdi, -16(%rsp)\n        jmp     L16\nL16:\n        movq    -16(%rsp), %rax\n        movq    -8(%rsp), %rcx\n        cmpq    $0, %rax\n        movq    %rax, -24(%rsp)\n        movq    %rcx, -32(%rsp)\n        jne     L48\n        movq    -32(%rsp), %rax\n        retq\nL48:\n        movq    -24(%rsp), %rax\n        xorl    %ecx, %ecx\n        movl    %ecx, %edx\n        movl    $10, %esi\n        divq    %rsi\n        movq    -24(%rsp), %rdi\n        movq    %rax, -40(%rsp)\n        movq    %rdi, %rax\n        xorl    %ecx, %ecx\n        movl    %ecx, %edx\n        divq    %rsi\n        movq    -32(%rsp), %rsi\n        imulq   $10, %rsi, %r8\n        addq    %rdx, %r8\n        movq    -40(%rsp), %rdx\n        movq    %r8, -8(%rsp)\n        movq    %rdx, -16(%rsp)\n        jmp     L16\n        nopw    %cs:(%rax,%rax)```\nWhich is pretty hard to beat","user":"U7HAYKY9X","ts":"1617707672.064400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UekIs","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function foo(x::Unsigned)\n    y = zero(typeof(x))\n    while !iszero(x)\n        x, r = divrem(x, 10)\n        y = y * 10 + r\n    end\n    y\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Yields\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @code_native debuginfo=:none foo(UInt(512))\n        .section        __TEXT,__text,regular,pure_instructions\n        xorl    %eax, %eax\n        movl    %eax, %ecx\n        movq    %rcx, -8(%rsp)\n        movq    %rdi, -16(%rsp)\n        jmp     L16\nL16:\n        movq    -16(%rsp), %rax\n        movq    -8(%rsp), %rcx\n        cmpq    $0, %rax\n        movq    %rax, -24(%rsp)\n        movq    %rcx, -32(%rsp)\n        jne     L48\n        movq    -32(%rsp), %rax\n        retq\nL48:\n        movq    -24(%rsp), %rax\n        xorl    %ecx, %ecx\n        movl    %ecx, %edx\n        movl    $10, %esi\n        divq    %rsi\n        movq    -24(%rsp), %rdi\n        movq    %rax, -40(%rsp)\n        movq    %rdi, %rax\n        xorl    %ecx, %ecx\n        movl    %ecx, %edx\n        divq    %rsi\n        movq    -32(%rsp), %rsi\n        imulq   $10, %rsi, %r8\n        addq    %rdx, %r8\n        movq    -40(%rsp), %rdx\n        movq    %r8, -8(%rsp)\n        movq    %rdx, -16(%rsp)\n        jmp     L16\n        nopw    %cs:(%rax,%rax)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Which is pretty hard to beat"}]}]}],"thread_ts":"1617702666.057100","parent_user_id":"U01G55LRSQL","reactions":[{"name":"raised_hands","users":["U01G55LRSQL"],"count":1}]}]