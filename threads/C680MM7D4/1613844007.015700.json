[{"client_msg_id":"4f7f3732-0837-4372-8cd1-b05af7a22af9","type":"message","text":"for me Julia measured with `@btime` is faster than his C implementation, but he includes Julia startup and function compilation.... <https://twitter.com/smllmp/status/1363131262035243012>","user":"UDB26738Q","ts":"1613844007.015700","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/smllmp|@smllmp>: Now results finally updated with all the nice contribs from <https://twitter.com/ducktapeprogra1|@ducktapeprogra1> <https://twitter.com/nilshomer|@nilshomer> <https://twitter.com/egonelbre|@egonelbre> <https://twitter.com/jomarnz|@jomarnz> <https://twitter.com/danielcjones|@danielcjones> <https://twitter.com/nomad421|@nomad421>. 10x:ed the file, 10 reps, 1s delay and some BIOS settings fixed. #rustlang clearly in the top! :slightly_smiling_face: #bioinformatics #dlang #golang #julialang #pypy <https://pbs.twimg.com/media/EurPyI-XEAMzeNE.png>","ts":1613830793,"author_name":"Samuel Lampa","author_link":"https://twitter.com/smllmp/status/1363131262035243012","author_icon":"https://pbs.twimg.com/profile_images/1288165276018712576/Aj-eskGZ_normal.jpg","author_subname":"@smllmp","text":"Now results finally updated with all the nice contribs from <https://twitter.com/ducktapeprogra1|@ducktapeprogra1> <https://twitter.com/nilshomer|@nilshomer> <https://twitter.com/egonelbre|@egonelbre> <https://twitter.com/jomarnz|@jomarnz> <https://twitter.com/danielcjones|@danielcjones> <https://twitter.com/nomad421|@nomad421>. 10x:ed the file, 10 reps, 1s delay and some BIOS settings fixed. #rustlang clearly in the top! :slightly_smiling_face: #bioinformatics #dlang #golang #julialang #pypy <https://pbs.twimg.com/media/EurPyI-XEAMzeNE.png>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/smllmp/status/1363131262035243012","image_url":"https://pbs.twimg.com/media/EurPyI-XEAMzeNE.png","image_width":838,"image_height":875,"image_bytes":139955,"id":1,"original_url":"https://twitter.com/smllmp/status/1363131262035243012","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"RbcQI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for me Julia measured with "},{"type":"text","text":"@btime","style":{"code":true}},{"type":"text","text":" is faster than his C implementation, but he includes Julia startup and function compilation.... "},{"type":"link","url":"https://twitter.com/smllmp/status/1363131262035243012"}]}]}],"thread_ts":"1613844007.015700","reply_count":45,"reply_users_count":12,"latest_reply":"1613908132.050000","reply_users":["UGU761DU2","UDB26738Q","U011V2YN59N","U7HAYKY9X","UPUBAM63X","UPTBGS6CC","U01CQTKB86N","U01AJUF2GEP","U6QGE7S86","UDSU53PEG","U010ZKG6T60","UK1BNFHFV"],"subscribed":false,"reactions":[{"name":"disappointed","users":["U8T0YV7QC","UPUBAM63X","U01FSUY7YES","UH8A351DJ","URN898S15"],"count":5}]},{"client_msg_id":"58e9727e-c248-4276-acf9-a3d398396637","type":"message","text":"Ugh, classic. Should make one including the compilation time for C an Rust to make the point lol","user":"UGU761DU2","ts":"1613844955.016000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dy4pk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ugh, classic. Should make one including the compilation time for C an Rust to make the point lol"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"b3ed7dbc-cc75-413e-9b8c-64c6e6d794c0","type":"message","text":"I left a comment <https://twitter.com/MoseGiordano/status/1363188335917867008>","user":"UDB26738Q","ts":"1613844975.016200","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/MoseGiordano|@MoseGiordano>: <https://twitter.com/smllmp|@smllmp> <https://twitter.com/ducktapeprogra1|@ducktapeprogra1> <https://twitter.com/nilshomer|@nilshomer> <https://twitter.com/egonelbre|@egonelbre> <https://twitter.com/jomarnz|@jomarnz> <https://twitter.com/danielcjones|@danielcjones> <https://twitter.com/nomad421|@nomad421> In your #JuliaLang timing you include Julia startup and compilation time, which you don't do for all other compiled languages.  If I benchmark your #JuliaLang implementation with <https://github.com/JuliaCI/BenchmarkTools.jl>, it's on-par with c.001. <https://pbs.twimg.com/media/EusENgEWgAErVKC.jpg>","ts":1613844400,"author_name":"Mos√® Giordano","author_link":"https://twitter.com/MoseGiordano/status/1363188335917867008","author_icon":"https://pbs.twimg.com/profile_images/918267537661546496/KcCx9zt0_normal.jpg","author_subname":"@MoseGiordano","text":"<https://twitter.com/smllmp|@smllmp> <https://twitter.com/ducktapeprogra1|@ducktapeprogra1> <https://twitter.com/nilshomer|@nilshomer> <https://twitter.com/egonelbre|@egonelbre> <https://twitter.com/jomarnz|@jomarnz> <https://twitter.com/danielcjones|@danielcjones> <https://twitter.com/nomad421|@nomad421> In your #JuliaLang timing you include Julia startup and compilation time, which you don't do for all other compiled languages.  If I benchmark your #JuliaLang implementation with <https://github.com/JuliaCI/BenchmarkTools.jl>, it's on-par with c.001. <https://pbs.twimg.com/media/EusENgEWgAErVKC.jpg>","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/MoseGiordano/status/1363188335917867008","image_url":"https://pbs.twimg.com/media/EusENgEWgAErVKC.jpg","image_width":610,"image_height":912,"image_bytes":88676,"id":1,"original_url":"https://twitter.com/MoseGiordano/status/1363188335917867008","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"3o/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I left a comment "},{"type":"link","url":"https://twitter.com/MoseGiordano/status/1363188335917867008"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"+1","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"337922da-21a5-4134-af9c-ec520aa11a71","type":"message","text":"also, I get much lower times overall, and I don't think I have a superfast machine","user":"UDB26738Q","ts":"1613845003.016500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bHgC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, I get much lower times overall, and I don't think I have a superfast machine"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"617ef9a2-0ee4-461b-a32d-778c83b86ed4","type":"message","text":"like, with his setup julia for me takes 1.058 seconds, almost half of his time.  but I see similar effect for the other languages","user":"UDB26738Q","ts":"1613845064.016700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"amf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like, with his setup julia for me takes 1.058 seconds, almost half of his time.  but I see similar effect for the other languages"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"5eb4a4a5-91a5-4ed2-b47f-389fa884ceef","type":"message","text":"yeah this would be fine if the compilation times for other compiled languages were also included, and I guess most intepreted languages also compile to some sort of bytecode","user":"U011V2YN59N","ts":"1613845185.017200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rdRlw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah this would be fine if the compilation times for other compiled languages were also included, and I guess most intepreted languages also compile to some sort of bytecode"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"+1","users":["U6A936746"],"count":1}]},{"client_msg_id":"b0d42455-31b6-4571-b7ce-34c4a424440f","type":"message","text":"That's a FASTA reading benchmark. Lots of those. Might be interesting to compare to how FASTX.jl does.","user":"U7HAYKY9X","ts":"1613846397.017400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pup","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's a FASTA reading benchmark. Lots of those. Might be interesting to compare to how FASTX.jl does."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"dce8ccfa-7070-4227-8cb1-a3dc4f3e503e","type":"message","text":"you can do a `julia.001.fastx` implementation, but given the way this is benchmarked, loading time of the package may kill total performance :joy:","user":"UDB26738Q","ts":"1613846619.017600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KlRVp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can do a "},{"type":"text","text":"julia.001.fastx","style":{"code":true}},{"type":"text","text":" implementation, but given the way this is benchmarked, loading time of the package may kill total performance "},{"type":"emoji","name":"joy"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"f4a4ed70-6372-48f0-bf77-682a64333979","type":"message","text":"I made a quick performance comparison b/w Rust and Julia about FASTX here: : <https://github.com/BioJulia/FASTX.jl/issues/40>","user":"U7HAYKY9X","ts":"1613846622.017800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mUIP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I made a quick performance comparison b/w Rust and Julia about FASTX here: : "},{"type":"link","url":"https://github.com/BioJulia/FASTX.jl/issues/40"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"0e7a1ebc-19d6-480f-965c-8c54916c80be","type":"message","text":"rust is really really fast in general but, yea this is super unfair...","user":"UPUBAM63X","ts":"1613847450.018100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jWi2w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"rust is really really fast in general but, yea this is super unfair..."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"6c0cba9e-4351-47b1-a423-7c6e81ba23c7","type":"message","text":"there should be like a warning for people the first time they run Julia giving them benchmark instructions....","user":"UPUBAM63X","ts":"1613847471.018400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yFDf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there should be like a warning for people the first time they run Julia giving them benchmark instructions...."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"9db9d461-0e06-4ad4-b498-a51c14780c8f","type":"message","text":"Or it could be interesting to see if the `@btime` macro could differentiate the compile from the actual execution and report both.","user":"UPTBGS6CC","ts":"1613848536.018600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ii8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or it could be interesting to see if the "},{"type":"text","text":"@btime","style":{"code":true}},{"type":"text","text":" macro could differentiate the compile from the actual execution and report both."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"+1","users":["UPUBAM63X","UAEJRV3KJ"],"count":2}]},{"client_msg_id":"1d869d16-a125-4f4c-b10e-56b496ba05c9","type":"message","text":"`@time` now kind of does that","user":"UDB26738Q","ts":"1613848558.018800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"51uCB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@time","style":{"code":true}},{"type":"text","text":" now kind of does that"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"b29f3bce-da35-4351-86ed-6e97b8d1cdf9","type":"message","text":"There is no technical solution to that problem, if you know enough about programming to collect solutions in 10 different languages, then you can understand the difference between compile- and runtime","user":"U7HAYKY9X","ts":"1613848623.019000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6WA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is no technical solution to that problem, if you know enough about programming to collect solutions in 10 different languages, then you can understand the difference between compile- and runtime"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"2d6afe15-9884-4f14-a9ef-9028309ee466","type":"message","text":"it looks like the julia version is cheating <https://twitter.com/ducktapeprogra1/status/1363204637805875200> :joy:","user":"UDB26738Q","ts":"1613849116.019300","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/ducktapeprogra1|@ducktapeprogra1>: <https://twitter.com/MoseGiordano|@MoseGiordano> <https://twitter.com/smllmp|@smllmp> <https://twitter.com/nilshomer|@nilshomer> <https://twitter.com/egonelbre|@egonelbre> <https://twitter.com/jomarnz|@jomarnz> <https://twitter.com/danielcjones|@danielcjones> <https://twitter.com/nomad421|@nomad421> Looking at the Julia version, it's more in line with the C rawio version than reading line by line. Pretty nifty bitmask work in there though.","ts":1613848287,"author_name":"ducktapeprogrammer","author_link":"https://twitter.com/ducktapeprogra1/status/1363204637805875200","author_icon":"https://pbs.twimg.com/profile_images/1163888999783493632/NvTx0q3B_normal.jpg","author_subname":"@ducktapeprogra1","text":"<https://twitter.com/MoseGiordano|@MoseGiordano> <https://twitter.com/smllmp|@smllmp> <https://twitter.com/nilshomer|@nilshomer> <https://twitter.com/egonelbre|@egonelbre> <https://twitter.com/jomarnz|@jomarnz> <https://twitter.com/danielcjones|@danielcjones> <https://twitter.com/nomad421|@nomad421> Looking at the Julia version, it's more in line with the C rawio version than reading line by line. Pretty nifty bitmask work in there though.","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/ducktapeprogra1/status/1363204637805875200","id":1,"original_url":"https://twitter.com/ducktapeprogra1/status/1363204637805875200","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"nA+K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it looks like the julia version is cheating "},{"type":"link","url":"https://twitter.com/ducktapeprogra1/status/1363204637805875200"},{"type":"text","text":" "},{"type":"emoji","name":"joy"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"bbe68c5e-7691-4149-907d-43a1389ab1bd","type":"message","text":"In my timings, Rust is 3x faster than Julia, which comes down to Julia's IO being inefficient","user":"U7HAYKY9X","ts":"1613849821.019600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OV7jU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In my timings, Rust is 3x faster than Julia, which comes down to Julia's IO being inefficient"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"b547924f-b916-4915-9704-45cb7039d2d3","type":"message","text":"How should he have benchmarked it? It‚Äôs a script. If there is a simple compilation command he can use to make it run faster, he probably could be persuaded to add it to the Makefile, but I don‚Äôt think it exists. PackageCompiler exists, but can you make using that a simple one-line command to be run?","user":"U01CQTKB86N","ts":"1613853479.020300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r7Z6I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How should he have benchmarked it? It‚Äôs a script. If there is a simple compilation command he can use to make it run faster, he probably could be persuaded to add it to the Makefile, but I don‚Äôt think it exists. PackageCompiler exists, but can you make using that a simple one-line command to be run?"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"17607c56-31f6-4f3d-aa49-6cfa167e964f","type":"message","text":"Subtract compile time?","user":"U7HAYKY9X","ts":"1613853685.020500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qs/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Subtract compile time?"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"77087bf7-e9fe-4871-8f82-898209fcd4f8","type":"message","text":"<https://twitter.com/smllmp/status/1363207547822501892|https://twitter.com/smllmp/status/1363207547822501892>","user":"UDB26738Q","ts":"1613854318.020800","team":"T68168MUP","attachments":[{"fallback":"<https://twitter.com/smllmp|@smllmp>: <https://twitter.com/danielcjones|@danielcjones> <https://twitter.com/ducktapeprogra1|@ducktapeprogra1> <https://twitter.com/MoseGiordano|@MoseGiordano> <https://twitter.com/nilshomer|@nilshomer> <https://twitter.com/egonelbre|@egonelbre> <https://twitter.com/jomarnz|@jomarnz> <https://twitter.com/nomad421|@nomad421> Well, and I seem to have been sloppy in the code review process :grimacing:\n\nHappy to take an alternative version, and then perhaps this one should indeed be in the other table.\n\nBut I'll look into compiling a static binary to make the comparison more fair...","ts":1613848981,"author_name":"Samuel Lampa","author_link":"https://twitter.com/smllmp/status/1363207547822501892","author_icon":"https://pbs.twimg.com/profile_images/1288165276018712576/Aj-eskGZ_normal.jpg","author_subname":"@smllmp","text":"<https://twitter.com/danielcjones|@danielcjones> <https://twitter.com/ducktapeprogra1|@ducktapeprogra1> <https://twitter.com/MoseGiordano|@MoseGiordano> <https://twitter.com/nilshomer|@nilshomer> <https://twitter.com/egonelbre|@egonelbre> <https://twitter.com/jomarnz|@jomarnz> <https://twitter.com/nomad421|@nomad421> Well, and I seem to have been sloppy in the code review process :grimacing:\n\nHappy to take an alternative version, and then perhaps this one should indeed be in the other table.\n\nBut I'll look into compiling a static binary to make the comparison more fair...","service_name":"twitter","service_url":"https://twitter.com/","from_url":"https://twitter.com/smllmp/status/1363207547822501892","id":1,"original_url":"https://twitter.com/smllmp/status/1363207547822501892","footer":"Twitter","footer_icon":"https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"}],"blocks":[{"type":"rich_text","block_id":"ZfRu","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://twitter.com/smllmp/status/1363207547822501892","text":"https://twitter.com/smllmp/status/1363207547822501892"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"6557f69c-c477-4152-9a6d-c1ed02f464a6","type":"message","text":"I officially don't like Samuel Lampa, until a better review is out:expressionless:","user":"U01AJUF2GEP","ts":"1613856634.021200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Pe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I officially don't like Samuel Lampa, until a better review is out"},{"type":"emoji","name":"expressionless"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"2a1d175c-cce4-4363-9846-f8cb1f0ec149","type":"message","text":"I don't think he knows it's a dynamic language still?","user":"UPUBAM63X","ts":"1613858809.021500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I/UN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think he knows it's a dynamic language still?"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"cb7a0b65-4060-4c5a-9312-39eeed37053f","type":"message","text":"<@U7HAYKY9X> is there some IOBuffer sizehinting to make that a bit more efficient?","user":"U6QGE7S86","ts":"1613862847.024100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vMN","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" is there some IOBuffer sizehinting to make that a bit more efficient?"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"7fa849c4-d34e-4a07-b8b9-a711d3df7bc4","type":"message","text":"Or an package to implement an optimized case?","user":"U6QGE7S86","ts":"1613866220.024500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s=Cb/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or an package to implement an optimized case?"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"29812e86-ca69-4f3c-87fe-0c021130af29","type":"message","text":"including startup and compilation is the right way to benchmark Julia, including the compile time for C or Rust binaries doesn't make sense","user":"UDSU53PEG","ts":"1613881776.026400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Eg3h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"including startup and compilation is the right way to benchmark Julia, including the compile time for C or Rust binaries doesn't make sense"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"-1","users":["UGU761DU2","U6QGE7S86","U010ZKG6T60","U7HAYKY9X","U73KENNG4","UPUBAM63X","UPTBGS6CC"],"count":7},{"name":"+1","users":["U01CQTKB86N","UPUBAM63X"],"count":2}]},{"client_msg_id":"2d2b7106-da02-4d88-9974-dcd6824a5871","type":"message","text":"How is it the right way? Suppose you're doing a long-running computation, how does compilation and startup time matter? How does it make sense to not consider the time spent on compiling the rust version but consider the time spent on compiling the Julia version? If I wait 1 minute to compile a C++ solution, and it finishes running in 10 seconds and on the other hand if I waited again 1 minute to compile a Julia solution and it again finishes running in 10 seconds how does it make sense to take into account Julia's compilation but not C++'s?","user":"U010ZKG6T60","ts":"1613887914.027100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0tP4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How is it the right way? Suppose you're doing a long-running computation, how does compilation and startup time matter? How does it make sense to not consider the time spent on compiling the rust version but consider the time spent on compiling the Julia version? If I wait 1 minute to compile a C++ solution, and it finishes running in 10 seconds and on the other hand if I waited again 1 minute to compile a Julia solution and it again finishes running in 10 seconds how does it make sense to take into account Julia's compilation but not C++'s?"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"963b9ed4-d9b8-4189-9025-00203b08c8f8","type":"message","text":"Let's be real, that guy probably didn't understand how exactly Julia works at first and when told about compilation time he thought it'd be a good idea to find an invalid excuse for whatever reasons. I very much agree with Jakob's \"There is no technical solution to that problem\".","user":"U010ZKG6T60","ts":"1613888064.027300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IBu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's be real, that guy probably didn't understand how exactly Julia works at first and when told about compilation time he thought it'd be a good idea to find an invalid excuse for whatever reasons. I very much agree with Jakob's \"There is no technical solution to that problem\"."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"6bfeace7-97e2-4f39-bd5a-d6753d72ba66","type":"message","text":"I agree, <@UDSU53PEG>, in principle. But the problem is that people take these microbenchmarks and use them to generalise about the speed of Julia, e.g. saying \"look, Julia is multiple times slower than Rust, see this benchmark\". If there were three benchmarks with different timing lengths, like one being minutes long, that would be fine.","user":"U7HAYKY9X","ts":"1613891646.027700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MpA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree, "},{"type":"user","user_id":"UDSU53PEG"},{"type":"text","text":", in principle. But the problem is that people take these microbenchmarks and use them to generalise about the speed of Julia, e.g. saying \"look, Julia is multiple times slower than Rust, see this benchmark\". If there were three benchmarks with different timing lengths, like one being minutes long, that would be fine."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"a8c2919c-1a5f-45de-a8ab-ebb89a4c6515","type":"message","text":"<@U6QGE7S86> I think Julia's IO could take some optimization improvements. E.g. an iterator that reads each line, overwriting the same line. And include a mutable string in Base. And better buffering in Base. It's a little annoying that Julia gets stomped in IO benchmarks unless you use a dedicated buffering and IO package like TranscodingStreams","user":"U7HAYKY9X","ts":"1613891774.027900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/F4","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6QGE7S86"},{"type":"text","text":" I think Julia's IO could take some optimization improvements. E.g. an iterator that reads each line, overwriting the same line. And include a mutable string in Base. And better buffering in Base. It's a little annoying that Julia gets stomped in IO benchmarks unless you use a dedicated buffering and IO package like TranscodingStreams"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"d40e3cbb-c186-4d99-a51d-ab7a30e6259d","type":"message","text":"\"in principle\", is that because you need to compile the rust, c++, etc versions only \"once\" while you don't with Julia?","user":"U010ZKG6T60","ts":"1613891784.028100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pbtWu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"in principle\", is that because you need to compile the rust, c++, etc versions only \"once\" while you don't with Julia?"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"0a4407de-3027-46e7-ab3a-66ca1c6e91da","type":"message","text":"Yes. Because there are real use cases where startup time is real and impactful (e.g. if you try to implement grep or ls in Julia)","user":"U7HAYKY9X","ts":"1613891837.028300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z6nP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes. Because there are real use cases where startup time is real and impactful (e.g. if you try to implement grep or ls in Julia)"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"+1","users":["U010ZKG6T60","U01CQTKB86N"],"count":2}]},{"client_msg_id":"13C3D80E-E874-42A1-8231-DA5E4CF7B658","type":"message","text":"Imho, arguing whether startup and compilation time should be measured is not particularly helpful. People who write benchmarks are going to do what they want.","user":"U01CQTKB86N","ts":"1613894120.031300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PLJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Imho, arguing whether startup and compilation time should be measured is not particularly helpful. People who write benchmarks are going to do what they want."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"735F8E12-BCCF-45C6-A0C0-0CE961713DBD","type":"message","text":"Instead, we should make it easier to benchmark Julia. I don‚Äôt have a solution, but there are pieces like PackageCompiler, but it‚Äôs not clear to me how it could be used here. There could also be some clear guidance on how to benchmark Julia.","user":"U01CQTKB86N","ts":"1613894273.034500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VTdjT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Instead, we should make it easier to benchmark Julia. I don‚Äôt have a solution, but there are pieces like PackageCompiler, but it‚Äôs not clear to me how it could be used here. There could also be some clear guidance on how to benchmark Julia."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"3ad997e3-aceb-41a0-b7e7-66e16f5c3b78","type":"message","text":"PackageCompiler could be used to create an executable binary to satisfy the benchmark writer but it's not exactly a smooth process. like for all statically compiled languages he's compiling them from make but that wouldn't exactly work for Julia.","user":"U010ZKG6T60","ts":"1613894439.034700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vpngm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"PackageCompiler could be used to create an executable binary to satisfy the benchmark writer but it's not exactly a smooth process. like for all statically compiled languages he's compiling them from make but that wouldn't exactly work for Julia."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"C78BC9A2-41E0-4F46-81B5-AF55191EAB25","type":"message","text":"Would it be possible to ease the process?","user":"U01CQTKB86N","ts":"1613894680.035300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o8o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would it be possible to ease the process?"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"ca2c5723-4180-4cda-ba20-1cc0f4818c20","type":"message","text":"&gt; Instead, we should make it easier to benchmark Julia.\n&gt; \nWhat's wrong with BenchmarkTools?","user":"UDB26738Q","ts":"1613894965.035500","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1613894976.000000"},"blocks":[{"type":"rich_text","block_id":"s7gp","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Instead, we should make it easier to benchmark Julia.\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nWhat's wrong with BenchmarkTools?"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"50fa83dd-ea1e-4428-9de7-2225629c4816","type":"message","text":"The process isn't exactly hard, all is needed is\n```using PackageCompiler\ncreate_app(\".\", \"bins\", precompile_execution_file = \"precompilation_statements.jl\")```\nand maybe changing the project's structure slightly.\nIMO, the precompilation recording part is tricky, as you have to try to aim for high coverage of your application. For simple tasks like the benchmark in discussion, it's not a problem. Even then I think Julia doesn't yet actually record all compilations(not sure at all) so there'll still be a slight delay. Also there's a really heavy bundled sys-image and actually building the sys-image take a lot of time.","user":"U010ZKG6T60","ts":"1613895010.035800","team":"T68168MUP","edited":{"user":"U010ZKG6T60","ts":"1613895102.000000"},"blocks":[{"type":"rich_text","block_id":"bMpa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The process isn't exactly hard, all is needed is\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using PackageCompiler\ncreate_app(\".\", \"bins\", precompile_execution_file = \"precompilation_statements.jl\")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and maybe changing the project's structure slightly.\nIMO, the precompilation recording part is tricky, as you have to try to aim for high coverage of your application. For simple tasks like the benchmark in discussion, it's not a problem. Even then I think Julia doesn't yet actually record all compilations(not sure at all) so there'll still be a slight delay. Also there's a really heavy bundled sys-image and actually building the sys-image take a lot of time."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"+1","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"F13A0AC4-77A7-4D06-9310-7D3997564136","type":"message","text":"In this particular case recording the precompilation would be easy: just run the script for one of those dna sequences instead of 10. (The makefile multiplies the input.) What‚Äôs missing is a line to be put in the Makefile that looks like a compilation step.","user":"U01CQTKB86N","ts":"1613896012.039800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9vI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In this particular case recording the precompilation would be easy: just run the script for one of those dna sequences instead of 10. (The makefile multiplies the input.) What‚Äôs missing is a line to be put in the Makefile that looks like a compilation step."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"3C8D2BBD-1F57-4AED-B1FE-6E069C60F24F","type":"message","text":"Some of the discussion reminds me of <https://xkcd.com/1287/|https://xkcd.com/1287/>","user":"U01CQTKB86N","ts":"1613897277.040400","team":"T68168MUP","attachments":[{"title":"Puzzle","title_link":"https://xkcd.com/1287/","author_name":"xkcd","author_link":"https://xkcd.com/","image_url":"https://imgs.xkcd.com/comics/puzzle.png","image_width":246,"image_height":284,"image_bytes":19040,"text":"[Title text] \"Prediction for Carlsen v. Anand: ... 25. Qb8+ Nxb8 26. Rd8# f6 27. \"... dude.\" Qf5 28. \"The game is over, dude.\" Qxg5 29. Rxe8 0-1 30. \"Dude, your move can't be '0-1'. Don't write that down.\" [Black flips board]\"","fallback":"xkcd: Puzzle","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/xkcd.png","id":1,"original_url":"https://xkcd.com/1287/"}],"blocks":[{"type":"rich_text","block_id":"HMF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some of the discussion reminds me of "},{"type":"link","url":"https://xkcd.com/1287/","text":"https://xkcd.com/1287/"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"rolling_on_the_floor_laughing","users":["U010ZKG6T60"],"count":1}]},{"client_msg_id":"fc9901db-afcb-42ca-bfc2-09e4038fbcf1","type":"message","text":"Hm, I wonder what it would take for Julia to actually get to Rust's performance here. What about this?\n‚Ä¢ Include a mutable AbstractString\n‚Ä¢ Add IO functions which reads into the mutable string: at least `readuntil!`  and  `readbytes!`\n‚Ä¢  Add an `eachline` iterator which overwrites a single mutable string at each iteration","user":"U7HAYKY9X","ts":"1613898083.040800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+I5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hm, I wonder what it would take for Julia to actually get to Rust's performance here. What about this?\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Include a mutable AbstractString"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Add IO functions which reads into the mutable string: at least "},{"type":"text","text":"readuntil!","style":{"code":true}},{"type":"text","text":"  and  "},{"type":"text","text":"readbytes!","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":" Add an "},{"type":"text","text":"eachline","style":{"code":true}},{"type":"text","text":" iterator which overwrites a single mutable string at each iteration"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"604db7a5-7cd9-4230-a496-92ab2f6b286e","type":"message","text":"Honestly, maybe there should be a `FasterBaseIO` package of the JuliaIO that implements all of these things, as a proof-of-concept.","user":"U7HAYKY9X","ts":"1613899322.041100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9XJW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Honestly, maybe there should be a "},{"type":"text","text":"FasterBaseIO","style":{"code":true}},{"type":"text","text":" package of the JuliaIO that implements all of these things, as a proof-of-concept."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"+1","users":["U73KENNG4","UDB26738Q"],"count":2}]},{"client_msg_id":"ba07ce56-684b-4906-b946-18409c755d46","type":"message","text":"<@UDSU53PEG> - what you said is kind of a hot take, and initially I disagreed. But then I realized something. Lately my only issues with julia are the jit. I think that's really the only gripe anyone has for it that isn't like \"1 indexing bad dood\". As you move into applications - that precompilation does matter. Its a cost that users feel and sometimes its on the order of minutes.\n\nSo I feel there should be two benchmarks done. 1 - with precomp and 2 - without.","user":"UPUBAM63X","ts":"1613907692.041900","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1613907723.000000"},"blocks":[{"type":"rich_text","block_id":"jwKcN","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDSU53PEG"},{"type":"text","text":" - what you said is kind of a hot take, and initially I disagreed. But then I realized something. Lately my only issues with julia are the jit. I think that's really the only gripe anyone has for it that isn't like \"1 indexing bad dood\". As you move into applications - that precompilation does matter. Its a cost that users feel and sometimes its on the order of minutes.\n\nSo I feel there should be two benchmarks done. 1 - with precomp and 2 - without."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"100","users":["U7HAYKY9X","U010ZKG6T60"],"count":2}]},{"client_msg_id":"9add57db-dc55-4571-a76d-9445c82ca88c","type":"message","text":"My only issue, which might be related, is lack of AOT compilation that's useful which should also open up WASM too. I do admit it's a complex issue though.","user":"U010ZKG6T60","ts":"1613907849.043700","team":"T68168MUP","edited":{"user":"U010ZKG6T60","ts":"1613907865.000000"},"blocks":[{"type":"rich_text","block_id":"326Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My only issue, which might be related, is lack of AOT compilation that's useful which should also open up WASM too. I do admit it's a complex issue though."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"},{"client_msg_id":"6cf97bbb-4ab0-4e3f-8830-b937e8b2fdef","type":"message","text":"I made one benchmark like that. I‚Äôm not claiming this is perfect. <https://statisticalmice.github.io/posts/simple-moving-average-comparison/>","user":"U01CQTKB86N","ts":"1613907870.044700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0Wg8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I made one benchmark like that. I‚Äôm not claiming this is perfect. "},{"type":"link","url":"https://statisticalmice.github.io/posts/simple-moving-average-comparison/"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"100","users":["UPUBAM63X"],"count":1},{"name":"white_check_mark","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"32598A57-CC68-4DB4-9B33-75A3736CAB00","type":"message","text":"Precompilation delays matter wherever a program interacts with a human, because our psychological cost of waiting a couple seconds for something trivial is higher than the amortized duration over multiple runs would predict. As I've noticed with Makie, especially the delays that happen when clicking a button for the first time etc. are super noticeable and annoying because at that time you are in interaction mode and not run-and-wait mode.","user":"UK1BNFHFV","ts":"1613907963.047300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hh=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Precompilation delays matter wherever a program interacts with a human, because our psychological cost of waiting a couple seconds for something trivial is higher than the amortized duration over multiple runs would predict. As I've noticed with Makie, especially the delays that happen when clicking a button for the first time etc. are super noticeable and annoying because at that time you are in interaction mode and not run-and-wait mode."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"+1","users":["UPUBAM63X","U01CQTKB86N","UGU761DU2"],"count":3}]},{"client_msg_id":"7A16398E-8F14-4A7C-A4DA-C1F95B9E6D44","type":"message","text":"With Julia I have kind of gotten used to executing a command and immediately tabbing to something else because my brain knows it will take a bit and wants to avoid staring until the result pops up. With certain longer delays, it frequently happens that I forget what I was doing","user":"UK1BNFHFV","ts":"1613908052.049800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dS0OS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With Julia I have kind of gotten used to executing a command and immediately tabbing to something else because my brain knows it will take a bit and wants to avoid staring until the result pops up. With certain longer delays, it frequently happens that I forget what I was doing"}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q","reactions":[{"name":"rolling_on_the_floor_laughing","users":["U010ZKG6T60","UPUBAM63X","UCTJ1TGBV"],"count":3},{"name":"100","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"f576ee36-6844-47cd-a1b1-7d7967c2a7ea","type":"message","text":"Yea Julius for GUI's Julia is extremely noticeable. For HPC/extreme mathy stuff who cares if you wait 5s-2min if it saves you 20hrs? But for one offs/applications/etc it does matter. People asked me why I felt Julia isn't general purpose the other day. I think this is one of the reasons why. It's not unusable - but, its definitely not inline with its competitors in that space.","user":"UPUBAM63X","ts":"1613908132.050000","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1613908300.000000"},"blocks":[{"type":"rich_text","block_id":"4Y4wQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea Julius for GUI's Julia is extremely noticeable. For HPC/extreme mathy stuff who cares if you wait 5s-2min if it saves you 20hrs? But for one offs/applications/etc it does matter. People asked me why I felt Julia isn't general purpose the other day. I think this is one of the reasons why. It's not unusable - but, its definitely not inline with its competitors in that space."}]}]}],"thread_ts":"1613844007.015700","parent_user_id":"UDB26738Q"}]