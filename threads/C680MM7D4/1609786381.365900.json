[{"client_msg_id":"a34abe26-1b1b-4d11-affa-1647d113d80a","type":"message","text":"Aggressively non backwards compatible but like 10x faster, at least. Also has linear time `simp` search, and a GC that's faster than Haskell's.","user":"U6QGE7S86","ts":"1609786381.365900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fSuy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aggressively non backwards compatible but like 10x faster, at least. Also has linear time "},{"type":"text","text":"simp","style":{"code":true}},{"type":"text","text":" search, and a GC that's faster than Haskell's."}]}]}],"thread_ts":"1609786381.365900","reply_count":14,"reply_users_count":4,"latest_reply":"1609798926.370500","reply_users":["U0179G7FG4F","U6QGE7S86","UH24GRBLL","UPUBAM63X"],"subscribed":false,"reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"0e0f359e-5416-444b-a216-ccc436fa79c6","type":"message","text":"can we steal their GC?","user":"U0179G7FG4F","ts":"1609786462.366200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nf1TA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can we steal their GC?"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"456b9461-e35c-4e5c-86c5-189f9e53c68a","type":"message","text":"Idk. They also use a memalloc \"mimalloc\" that got used by Death Stranding, the video game.","user":"U6QGE7S86","ts":"1609786556.366400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"84LaH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Idk. They also use a memalloc \"mimalloc\" that got used by Death Stranding, the video game."}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"f28f9fa4-6d13-4f0d-8b74-ea0226948849","type":"message","text":"<https://github.com/microsoft/mimalloc>","user":"UH24GRBLL","ts":"1609786666.366600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"42e","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/microsoft/mimalloc"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"d66bf84e-ac00-4d1d-aad9-36cff2a37f52","type":"message","text":"this one?","user":"UH24GRBLL","ts":"1609786668.366800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H9U/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this one?"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"b40c3bc3-5df2-4eab-acd0-b94b69d1fe49","type":"message","text":"IIUC The language allows for what they call \"functional but in place\" programmning style, which means that you can code in a functional style and the type system figures out lrecisely when its worth copying instead of ovwrwriting data - this means there implementatiom for persistent RedBlack trees is 10x faster tham the C++ stdlib one","user":"U6QGE7S86","ts":"1609786673.367000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vb0+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IIUC The language allows for what they call \"functional but in place\" programmning style, which means that you can code in a functional style and the type system figures out lrecisely when its worth copying instead of ovwrwriting data - this means there implementatiom for persistent RedBlack trees is 10x faster tham the C++ stdlib one"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"fb2853c5-18fe-475e-a462-dee32921f078","type":"message","text":"Yeah thats the one Valentin.","user":"U6QGE7S86","ts":"1609786681.367200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hxpzj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah thats the one Valentin."}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"e4cb0a25-0cc2-4312-bdc7-a8670ac45baa","type":"message","text":"Here's the paper for the GC","user":"U6QGE7S86","ts":"1609786722.367400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CM4k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's the paper for the GC"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"7c3f6212-c5bf-457a-833a-21af2a67fdb5","type":"message","text":"<https://arxiv.org/abs/1908.05647|https://arxiv.org/abs/1908.05647>","user":"U6QGE7S86","ts":"1609786725.367600","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Counting Immutable Beans: Reference Counting Optimized for Purely...","title_link":"https://arxiv.org/abs/1908.05647","text":"Most functional languages rely on some garbage collection for automatic memory management. They usually eschew reference counting in favor of a tracing garbage collector, which has less...","fallback":"arXiv.org: Counting Immutable Beans: Reference Counting Optimized for Purely...","from_url":"https://arxiv.org/abs/1908.05647","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/1908.05647"}],"blocks":[{"type":"rich_text","block_id":"Fw=","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://arxiv.org/abs/1908.05647","text":"https://arxiv.org/abs/1908.05647"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"b766f2bd-0bff-42b9-b22f-d81134c8a133","type":"message","text":"LD_PRELOAD able, I like it","user":"UH24GRBLL","ts":"1609786736.368000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vr4Ow","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"LD_PRELOAD able, I like it"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"39abeb35-6472-415f-9bf1-c58de000794f","type":"message","text":"makes it really trivial to try it out","user":"UH24GRBLL","ts":"1609786742.368200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Mvw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"makes it really trivial to try it out"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"2f0e87e2-55da-4976-b327-cc094215f0e2","type":"message","text":"Why is rhat? Is it a single header lib and then change the C bindings?","user":"U6QGE7S86","ts":"1609786955.368400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OGE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why is rhat? Is it a single header lib and then change the C bindings?"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"5255a1d8-b2c0-4f3a-bc41-71e0b9bcc56c","type":"message","text":"well, sort of - LD_PRELOAD just loads bindings before almost anything else, so if something were to normally find some dynamically linked `malloc` from libc, it'll find the definition via LD_PRELOAD instead","user":"UH24GRBLL","ts":"1609787065.368600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C6d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well, sort of - LD_PRELOAD just loads bindings before almost anything else, so if something were to normally find some dynamically linked "},{"type":"text","text":"malloc","style":{"code":true}},{"type":"text","text":" from libc, it'll find the definition via LD_PRELOAD instead"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"e419b7d6-5836-44dc-8e05-95957fad18b9","type":"message","text":"and if you're careful with the API you support &amp; hide that way, you can *poof* create a drop-in replacement for e.g. libc stuff","user":"UH24GRBLL","ts":"1609787166.368800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yuD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and if you're careful with the API you support & hide that way, you can "},{"type":"text","text":"poof","style":{"bold":true}},{"type":"text","text":" create a drop-in replacement for e.g. libc stuff"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"},{"client_msg_id":"1fc327c4-39e9-4b1e-a003-605987f62f9d","type":"message","text":"yea but haskell is still cool :stuck_out_tongue:","user":"UPUBAM63X","ts":"1609798926.370500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jes+P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yea but haskell is still cool "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1609786381.365900","parent_user_id":"U6QGE7S86"}]