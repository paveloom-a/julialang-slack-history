[{"client_msg_id":"8e52077b-1c04-402a-984d-c970f6e0c794","type":"message","text":"Can someone plz implement an entire <https://snakemake.readthedocs.io/en/stable/|Snakemake>-like package in pure Julia with execution of individual jobs in baremodules and a dynamically updated DAG? kthx.","user":"U7HAYKY9X","ts":"1616351792.282100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AERpF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can someone plz implement an entire "},{"type":"link","url":"https://snakemake.readthedocs.io/en/stable/","text":"Snakemake"},{"type":"text","text":"-like package in pure Julia with execution of individual jobs in baremodules and a dynamically updated DAG? kthx."}]}]}],"thread_ts":"1616351792.282100","reply_count":8,"reply_users_count":2,"latest_reply":"1616356028.284900","reply_users":["U6QGE7S86","U7HAYKY9X"],"subscribed":false,"reactions":[{"name":"snake","users":["UGU761DU2","U01HFCRH5ML"],"count":2},{"name":"chart_with_upwards_trend","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"cf9bfbfb-4b53-452e-ab51-60df69b3b6b7","type":"message","text":"Buildable atop Dagger.jl no?","user":"U6QGE7S86","ts":"1616354917.283400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uZOi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Buildable atop Dagger.jl no?"}]}]}],"thread_ts":"1616351792.282100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"4c2df031-76d1-4dde-9303-a95fafb305e5","type":"message","text":"Yeah, probably. It's just really hard to build something like Snakemake, so there is zero percent change I have to time to develop and maintain such a package. I just wished the package would magically appear in the Julia ecosystem without me having to work on it :P","user":"U7HAYKY9X","ts":"1616355371.283700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jTD6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, probably. It's just really hard to build something like Snakemake, so there is zero percent change I have to time to develop and maintain such a package. I just wished the package would magically appear in the Julia ecosystem without me having to work on it :P"}]}]}],"thread_ts":"1616351792.282100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"40736fb9-73ff-4a85-917c-c8b0c95483df","type":"message","text":"IIUC someone in the Julia chat here was a Snakemake dev. Why do ypu find it so cool?","user":"U6QGE7S86","ts":"1616355443.283900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l4SN1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IIUC someone in the Julia chat here was a Snakemake dev. Why do ypu find it so cool?"}]}]}],"thread_ts":"1616351792.282100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"67171a51-ac42-46fa-be54-8ffa0c0d73c9","type":"message","text":"I use it daily for my work. Snakemake is very handy. But it also means I need to maintain my codebase in both Python and Julia","user":"U7HAYKY9X","ts":"1616355502.284100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UPJq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I use it daily for my work. Snakemake is very handy. But it also means I need to maintain my codebase in both Python and Julia"}]}]}],"thread_ts":"1616351792.282100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"eff66f68-16c8-46d2-8df1-f80f2eb40f74","type":"message","text":"And also, because Snakemake creates a new process for each job, and some of these jobs are &lt;1 second long, Julia's startup time is really rough for performance. (I know, I know, PkgCompiler, but it makes quick iteration of the pipeline super annoying)","user":"U7HAYKY9X","ts":"1616355564.284300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D+7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And also, because Snakemake creates a new process for each job, and some of these jobs are <1 second long, Julia's startup time is really rough for performance. (I know, I know, PkgCompiler, but it makes quick iteration of the pipeline super annoying)"}]}]}],"thread_ts":"1616351792.282100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"faa3ea2e-3702-48ee-ae98-67e27f958ca7","type":"message","text":"Oh. So is it like make and cmake but more batcheable?","user":"U6QGE7S86","ts":"1616355608.284500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9rT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh. So is it like make and cmake but more batcheable?"}]}]}],"thread_ts":"1616351792.282100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"b1ebeed7-3572-4143-9468-273ef0afcd15","type":"message","text":"I never actually used `cmake` , so I don't have much of a reference point there. The file is basically a Python script, so you can mix Python code and the workflow logic together, which is really nice, e.g. you can do\n```def some_function(x):\n    ...\n\nif some_function(my_data):\n    # define some rules that define the workflow\nelse:\n    # define other rules```\nIt's particularly useful in bioinformatics (the original author of Snakemake is a bioinformatician who know heads BioRust), because we tend to have long convoluted pipelines with many files. I often have &gt; 1200 individual jobs in a workflow","user":"U7HAYKY9X","ts":"1616355769.284700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YDa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I never actually used "},{"type":"text","text":"cmake","style":{"code":true}},{"type":"text","text":" , so I don't have much of a reference point there. The file is basically a Python script, so you can mix Python code and the workflow logic together, which is really nice, e.g. you can do\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"def some_function(x):\n    ...\n\nif some_function(my_data):\n    # define some rules that define the workflow\nelse:\n    # define other rules"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It's particularly useful in bioinformatics (the original author of Snakemake is a bioinformatician who know heads BioRust), because we tend to have long convoluted pipelines with many files. I often have > 1200 individual jobs in a workflow"}]}]}],"thread_ts":"1616351792.282100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"e6408207-3f89-47cd-827e-252fdfccf2bd","type":"message","text":"Ah, googling reveals make and cmake are about compilation. Nope, Snakemake is a tool for creating file-based workflows. Imagine you have a 15-step workflow you need to do on 100 files, with multiple steps that e.g. merges sets of files. Snakemake is like a \"dependency resolver\" of individual files, so you specify a set of rules for how scripts or shell commands create output files from input files, and then you specify the target output file, and then it resolves the chain of commands you need to execute and executes them in parallel","user":"U7HAYKY9X","ts":"1616356028.284900","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1616356050.000000"},"blocks":[{"type":"rich_text","block_id":"keU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, googling reveals make and cmake are about compilation. Nope, Snakemake is a tool for creating file-based workflows. Imagine you have a 15-step workflow you need to do on 100 files, with multiple steps that e.g. merges sets of files. Snakemake is like a \"dependency resolver\" of individual files, so you specify a set of rules for how scripts or shell commands create output files from input files, and then you specify the target output file, and then it resolves the chain of commands you need to execute and executes them in parallel"}]}]}],"thread_ts":"1616351792.282100","parent_user_id":"U7HAYKY9X"}]