[{"client_msg_id":"5a0563a0-c165-46d5-952f-7af2d7a78b9a","type":"message","text":"You know how you see in books approximations for really large values?  For example, I just read a book saying that 26! is approximately 2^88.  Is there a non-brute-force way to programmatically find a “nice” approximation for any given number?  Is it subjective what “nice” looks like?  I wrote this brute-force method:\n```actual = factorial(big(26)); res = (0, 0); for i in 1:4, j in 1:100\n    difference = (actual - big(i)^(j))\n    if difference &gt; 0\n        if difference &lt; (actual - big(first(res))^(last(res)))\n            res = (i, j)\n        end\n    end\nend```\nBut again, this is brute force (indeed it does find that 2^88 is the “nicest” approximation for base numbers between 1 and 4, and exponents between 1 and 100.  But is there a better way?","user":"U014LRLJXRP","ts":"1610485144.296200","team":"T68168MUP","edited":{"user":"U014LRLJXRP","ts":"1610485354.000000"},"blocks":[{"type":"rich_text","block_id":"a1T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You know how you see in books approximations for really large values?  For example, I just read a book saying that 26! is approximately 2^88.  Is there a non-brute-force way to programmatically find a “nice” approximation for any given number?  Is it subjective what “nice” looks like?  I wrote this brute-force method:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"actual = factorial(big(26)); res = (0, 0); for i in 1:4, j in 1:100\n    difference = (actual - big(i)^(j))\n    if difference > 0\n        if difference < (actual - big(first(res))^(last(res)))\n            res = (i, j)\n        end\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"But again, this is brute force (indeed it does find that 2^88 is the “nicest” approximation for base numbers between 1 and 4, and exponents between 1 and 100.  But is there a better way?"}]}]}],"thread_ts":"1610485144.296200","reply_count":5,"reply_users_count":3,"latest_reply":"1610486000.297500","reply_users":["UDB26738Q","UBEF50B7C","U014LRLJXRP"],"subscribed":false},{"client_msg_id":"3ca6c580-7171-49fe-b7ba-d8c4b2c5bfc7","type":"message","text":"In one year there are about pi*1e7 seconds (just giving some other random approximations :stuck_out_tongue:)","user":"UDB26738Q","ts":"1610485584.296400","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1610485617.000000"},"blocks":[{"type":"rich_text","block_id":"s3lal","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In one year there are about pi*1e7 seconds (just giving some other random approximations "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":")"}]}]}],"thread_ts":"1610485144.296200","parent_user_id":"U014LRLJXRP","reactions":[{"name":"laughing","users":["U014LRLJXRP","U68M6ERG8","U6QGE7S86","U677NAWV8","UPUBAM63X","UR75SQMCZ"],"count":6}]},{"client_msg_id":"1df17f8d-aec1-4a25-9d82-fcf8c6105ee4","type":"message","text":"Isn't this just because 26!  has 89 digits in base 2?","user":"UBEF50B7C","ts":"1610485589.296600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nNEo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Isn't this just because 26!  has 89 digits in base 2?"}]}]}],"thread_ts":"1610485144.296200","parent_user_id":"U014LRLJXRP","reactions":[{"name":"+1","users":["UPUBAM63X","UR75SQMCZ","U67G3QRJM"],"count":3}]},{"client_msg_id":"56dc7e69-4da0-417c-a162-90cd4fa92ce9","type":"message","text":"so you could always find a \"nice\"  approximation by taking log2 of your number","user":"UBEF50B7C","ts":"1610485674.296900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QFw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you could always find a \"nice\"  approximation by taking log2 of your number"}]}]}],"thread_ts":"1610485144.296200","parent_user_id":"U014LRLJXRP"},{"client_msg_id":"348485db-1597-485e-924a-35519e983003","type":"message","text":"Oh, that’s neat <@UBEF50B7C>!  You’re right.  Instead of checking what I do, I can check if `round(Int, log(i, factorial(big(26))))` is any good :slightly_smiling_face:","user":"U014LRLJXRP","ts":"1610485809.297200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zu7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, that’s neat "},{"type":"user","user_id":"UBEF50B7C"},{"type":"text","text":"!  You’re right.  Instead of checking what I do, I can check if "},{"type":"text","text":"round(Int, log(i, factorial(big(26))))","style":{"code":true}},{"type":"text","text":" is any good "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1610485144.296200","parent_user_id":"U014LRLJXRP"},{"client_msg_id":"5242e885-0928-49d1-a40e-ccdb078121d1","type":"message","text":"```actual = factorial(big(26)); res = (0, 0); for i in 1:4\n    j = round(Integer, log(i, actual))\n    difference = (actual - big(i)^(j))\n    if difference &gt; 0\n        if difference &lt; (actual - big(first(res))^(last(res)))\n            res = (i, j)\n        end\n    end\nend```\nMuch nicer than nester loops, thanks <@UBEF50B7C>!","user":"U014LRLJXRP","ts":"1610486000.297500","team":"T68168MUP","edited":{"user":"U014LRLJXRP","ts":"1610486029.000000"},"blocks":[{"type":"rich_text","block_id":"T4FG","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"actual = factorial(big(26)); res = (0, 0); for i in 1:4\n    j = round(Integer, log(i, actual))\n    difference = (actual - big(i)^(j))\n    if difference > 0\n        if difference < (actual - big(first(res))^(last(res)))\n            res = (i, j)\n        end\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Much nicer than nester loops, thanks "},{"type":"user","user_id":"UBEF50B7C"},{"type":"text","text":"!"}]}]}],"thread_ts":"1610485144.296200","parent_user_id":"U014LRLJXRP"}]