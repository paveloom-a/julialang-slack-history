[{"client_msg_id":"92f95b0c-8941-4d39-80d4-9bf200028eff","type":"message","text":"Hi everyone, I was looking through `base/bitarrays.jl` and had a question about a part of the code:\nWhat is does `::$T` represent in this part of the code?\n```for (T, f) in ((:(Union{typeof(&amp;), typeof(*), typeof(min)}), :(&amp;)),\n               (:(Union{typeof(|), typeof(max)}),            :(|)),\n               (:(Union{typeof(xor), typeof(!=)}),           :xor),\n               (:(typeof(nand)),                             :nand),\n               (:(typeof(nor)),                             :nor),\n               (:(Union{typeof(&gt;=), typeof(^)}),             :((p, q) -&gt; p | ~q)),\n               (:(typeof(&lt;=)),                               :((p, q) -&gt; ~p | q)),\n               (:(typeof(==)),                               :((p, q) -&gt; ~xor(p, q))),\n               (:(typeof(&lt;)),                                :((p, q) -&gt; ~p &amp; q)),\n               (:(typeof(&gt;)),                                :((p, q) -&gt; p &amp; ~q)))\n    ## Question Here\n    @eval map(::$T, A::BitArray, B::BitArray) = bit_map!($f, similar(A), A, B)\n    @eval map!(::$T, dest::BitArray, A::BitArray, B::BitArray) = bit_map!($f, dest, A, B)\nend```\nI understand the purpose of `@eval`  and `$`, but I don’t understand what the `::` is doing here without a variable name in front of it. Thanks!","user":"U01RRHVNZUN","ts":"1617834251.220700","team":"T68168MUP","edited":{"user":"U01RRHVNZUN","ts":"1617834385.000000"},"blocks":[{"type":"rich_text","block_id":"Am2u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi everyone, I was looking through "},{"type":"text","text":"base/bitarrays.jl","style":{"code":true}},{"type":"text","text":" and had a question about a part of the code:\nWhat is does "},{"type":"text","text":"::$T","style":{"code":true}},{"type":"text","text":" represent in this part of the code?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for (T, f) in ((:(Union{typeof(&), typeof(*), typeof(min)}), :(&)),\n               (:(Union{typeof(|), typeof(max)}),            :(|)),\n               (:(Union{typeof(xor), typeof(!=)}),           :xor),\n               (:(typeof(nand)),                             :nand),\n               (:(typeof(nor)),                             :nor),\n               (:(Union{typeof(>=), typeof(^)}),             :((p, q) -> p | ~q)),\n               (:(typeof(<=)),                               :((p, q) -> ~p | q)),\n               (:(typeof(==)),                               :((p, q) -> ~xor(p, q))),\n               (:(typeof(<)),                                :((p, q) -> ~p & q)),\n               (:(typeof(>)),                                :((p, q) -> p & ~q)))\n    ## Question Here\n    @eval map(::$T, A::BitArray, B::BitArray) = bit_map!($f, similar(A), A, B)\n    @eval map!(::$T, dest::BitArray, A::BitArray, B::BitArray) = bit_map!($f, dest, A, B)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I understand the purpose of "},{"type":"text","text":"@eval","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"$","style":{"code":true}},{"type":"text","text":", but I don’t understand what the "},{"type":"text","text":"::","style":{"code":true}},{"type":"text","text":" is doing here without a variable name in front of it. Thanks!"}]}]}],"thread_ts":"1617834251.220700","reply_count":3,"reply_users_count":2,"latest_reply":"1617834810.221600","reply_users":["UGV8315SB","U01RRHVNZUN"],"is_locked":false,"subscribed":false},{"client_msg_id":"6d2a7f5a-4255-4351-9c9b-32c4765adaa8","type":"message","text":"a method with an argument of form `::T` only depends on the type of that argument, not its value","user":"UGV8315SB","ts":"1617834506.221100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hhMU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a method with an argument of form "},{"type":"text","text":"::T","style":{"code":true}},{"type":"text","text":" only depends on the type of that argument, not its value"}]}]}],"thread_ts":"1617834251.220700","parent_user_id":"U01RRHVNZUN"},{"client_msg_id":"cd385539-d1f4-433c-8761-9bf0125d4b0b","type":"message","text":"you can see some examples of this in the <https://docs.julialang.org/en/v1/manual/methods/#Extracting-the-type-parameter-from-a-super-type|parameter extraction examples>","user":"UGV8315SB","ts":"1617834544.221300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M6m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can see some examples of this in the "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/methods/#Extracting-the-type-parameter-from-a-super-type","text":"parameter extraction examples"}]}]}],"thread_ts":"1617834251.220700","parent_user_id":"U01RRHVNZUN","reactions":[{"name":"pray","users":["U01RRHVNZUN"],"count":1}]},{"client_msg_id":"317881b8-ca99-4298-925d-1144f5d2fa9d","type":"message","text":"Thank you! <@UGV8315SB>","user":"U01RRHVNZUN","ts":"1617834810.221600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yXtR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you! "},{"type":"user","user_id":"UGV8315SB"}]}]}],"thread_ts":"1617834251.220700","parent_user_id":"U01RRHVNZUN"}]