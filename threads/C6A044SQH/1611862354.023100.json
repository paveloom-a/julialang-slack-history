[{"client_msg_id":"396a8b89-4d56-4f41-8485-d97ba95b10e5","type":"message","text":"Hello All! Thanks in advance for any help. Not sure if Slack is a better place to ask this question over Discourse, but here it is anyways. I am using the <https://alexander-barth.github.io/NCDatasets.jl/stable/|NCDatasets.jl> to read in a NetCDF file. I am trying to pass the variables from a dataset to a Fortran subroutine that I am calling via <https://docs.julialang.org/en/v1/manual/calling-c-and-fortran-code/|ccall>.  In Julia, the dimensions from `rarea = ds[\"rarea\"]` are read as 19 x 31 as a ::NCDataset.Variable, and when turned into a Julia Array, they become 18 x 30 (which is what the Fortran subroutine is expecting). The problem I’m having is when I turn the ::NCDataset.CFVariable or ::NCDataset.Variable into a Julia array (`rarea = ds[\"rarea\"][1:ni, 1:nj]` or `rarea = variable(ds, \"rarea\")`) , I don’t believe the dimensions loaded correctly.\n\nI am successfully able to run the subroutine when passing the variables defined as `rarea = [Array{Float64,2}(undef, 2, 2)]` , but the equations/operations within the Fortran subroutine are not changing the values of these variables as proven with a print statement before and after the Fortran subroutine is run.\n\nThere very well could be a problem on the Fortran side of things when I call the subroutine from within the shared library. Another issue I’m having is the Julia REPL crashes when the argument is not correct, and I do not have access to the stack-trace or any error messages that could potentially be exposed (different issue which I’m unsure how to go about).\n\nI can add code examples if that would help, but If anyone has any suggestions/advice on how to solve this problem, I would greatly appreciate it!","user":"U01H5PPLHAP","ts":"1611862354.023100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fS2b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello All! Thanks in advance for any help. Not sure if Slack is a better place to ask this question over Discourse, but here it is anyways. I am using the "},{"type":"link","url":"https://alexander-barth.github.io/NCDatasets.jl/stable/","text":"NCDatasets.jl"},{"type":"text","text":" to read in a NetCDF file. I am trying to pass the variables from a dataset to a Fortran subroutine that I am calling via "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/calling-c-and-fortran-code/","text":"ccall"},{"type":"text","text":".  In Julia, the dimensions from "},{"type":"text","text":"rarea = ds[\"rarea\"]","style":{"code":true}},{"type":"text","text":" are read as 19 x 31 as a ::NCDataset.Variable, and when turned into a Julia Array, they become 18 x 30 (which is what the Fortran subroutine is expecting). The problem I’m having is when I turn the ::NCDataset.CFVariable or ::NCDataset.Variable into a Julia array ("},{"type":"text","text":"rarea = ds[\"rarea\"][1:ni, 1:nj]","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"rarea = variable(ds, \"rarea\")","style":{"code":true}},{"type":"text","text":") , I don’t believe the dimensions loaded correctly.\n\nI am successfully able to run the subroutine when passing the variables defined as "},{"type":"text","text":"rarea = [Array{Float64,2}(undef, 2, 2)]","style":{"code":true}},{"type":"text","text":" , but the equations/operations within the Fortran subroutine are not changing the values of these variables as proven with a print statement before and after the Fortran subroutine is run.\n\nThere very well could be a problem on the Fortran side of things when I call the subroutine from within the shared library. Another issue I’m having is the Julia REPL crashes when the argument is not correct, and I do not have access to the stack-trace or any error messages that could potentially be exposed (different issue which I’m unsure how to go about).\n\nI can add code examples if that would help, but If anyone has any suggestions/advice on how to solve this problem, I would greatly appreciate it!"}]}]}],"thread_ts":"1611862354.023100","reply_count":6,"reply_users_count":2,"latest_reply":"1611881709.044800","reply_users":["UEGRU91B2","U01H5PPLHAP"],"subscribed":false},{"client_msg_id":"4430c81b-7d6b-4961-8bea-5f2383e478f9","type":"message","text":"Please share some examples. I am not familiar with what you are seeing with respect to the variable in the NCDataset having a different size than when actually read.","user":"UEGRU91B2","ts":"1611868660.025300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g2pW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Please share some examples. I am not familiar with what you are seeing with respect to the variable in the NCDataset having a different size than when actually read."}]}]}],"thread_ts":"1611862354.023100","parent_user_id":"U01H5PPLHAP"},{"client_msg_id":"604dfba2-8cd0-45d3-8a8a-bfa53656f9b8","type":"message","text":"```data = ds[\"rarea_c\"]\n\ndata1 = ds[\"rarea\"][1:ni, 1:nj]\n\ndata2 = variable(ds, \"rarea\")\n\ndata =  typeof: NCDatasets.CFVariable{Float64,2,NCDatasets.Variable{Float64,2,NCDataset},NCDatasets.Attributes{NCDataset{Nothing}},NamedTuple{(:fillvalue, :scale_factor, :add_offset, :calendar, :time_origin, :time_factor),NTuple{6,Nothing}}} size: (19, 31) length: 589\ndata1 =  typeof: Array{Float64,2} size: (18, 30) length: 540\ndata2 =  typeof: NCDatasets.Variable{Float64,2,NCDataset} size: (18, 30) length: 540```","user":"U01H5PPLHAP","ts":"1611872460.025900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hfmPa","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"data = ds[\"rarea_c\"]\n\ndata1 = ds[\"rarea\"][1:ni, 1:nj]\n\ndata2 = variable(ds, \"rarea\")\n\ndata =  typeof: NCDatasets.CFVariable{Float64,2,NCDatasets.Variable{Float64,2,NCDataset},NCDatasets.Attributes{NCDataset{Nothing}},NamedTuple{(:fillvalue, :scale_factor, :add_offset, :calendar, :time_origin, :time_factor),NTuple{6,Nothing}}} size: (19, 31) length: 589\ndata1 =  typeof: Array{Float64,2} size: (18, 30) length: 540\ndata2 =  typeof: NCDatasets.Variable{Float64,2,NCDataset} size: (18, 30) length: 540"}]}]}],"thread_ts":"1611862354.023100","parent_user_id":"U01H5PPLHAP"},{"client_msg_id":"4cc39b10-ee1a-4d4d-9633-05f79b49373e","type":"message","text":"Hello Argel! thanks for being willing to take a look.","user":"U01H5PPLHAP","ts":"1611872493.026100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ee4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello Argel! thanks for being willing to take a look."}]}]}],"thread_ts":"1611862354.023100","parent_user_id":"U01H5PPLHAP"},{"client_msg_id":"e5351110-0f4f-416c-8388-76391fc2a660","type":"message","text":"Interesting, what happens if you do size(data) it should return the same as the other ones I think","user":"UEGRU91B2","ts":"1611879269.042400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rTC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting, what happens if you do size(data) it should return the same as the other ones I think"}]}]}],"thread_ts":"1611862354.023100","parent_user_id":"U01H5PPLHAP"},{"client_msg_id":"7b12927a-0e91-4bd7-907a-bc5f57942cb1","type":"message","text":"Do you get an error message from either the Julia or the Fortran side of things?","user":"UEGRU91B2","ts":"1611879351.042600","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1611879368.000000"},"blocks":[{"type":"rich_text","block_id":"SbH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you get an error message from either the Julia or the Fortran side of things?"}]}]}],"thread_ts":"1611862354.023100","parent_user_id":"U01H5PPLHAP"},{"client_msg_id":"8d8fa2bc-4045-40d5-a34b-a9b28dd07f1c","type":"message","text":"Thats what I would think, but when I run size(data), it is (19,30). I believe that it is on the Fortran side of things? I’m not getting an error in the Julia REPL, and it crashes.","user":"U01H5PPLHAP","ts":"1611881709.044800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RwM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thats what I would think, but when I run size(data), it is (19,30). I believe that it is on the Fortran side of things? I’m not getting an error in the Julia REPL, and it crashes."}]}]}],"thread_ts":"1611862354.023100","parent_user_id":"U01H5PPLHAP"}]