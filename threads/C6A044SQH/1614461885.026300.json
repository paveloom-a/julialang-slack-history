[{"client_msg_id":"b3df268d-e9ee-4309-8749-6adc39751898","type":"message","text":"hi guys - a question on global parameters. I am writing a package with parameters that the user should be able to modify. I dont want to pass them to each individual function separately for multiple reasons. Ideally, I would have something like\n```module MyAwesomeModule\n  ...\n  const param = 1e-3\n  ...\n  # function to set options\n  function setopts(; args...)\n  ...\nend```\nThis doesn't seem to work however as it doesn't modify the parameters. What would be the best way to achieve this?","user":"U01L0RJC6FM","ts":"1614461885.026300","team":"T68168MUP","edited":{"user":"U01L0RJC6FM","ts":"1614462014.000000"},"blocks":[{"type":"rich_text","block_id":"/Ps8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi guys - a question on global parameters. I am writing a package with parameters that the user should be able to modify. I dont want to pass them to each individual function separately for multiple reasons. Ideally, I would have something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"module MyAwesomeModule\n  ...\n  const param = 1e-3\n  ...\n  # function to set options\n  function setopts(; args...)\n  ...\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"This doesn't seem to work however as it doesn't modify the parameters. What would be the best way to achieve this?"}]}]}],"thread_ts":"1614461885.026300","reply_count":5,"reply_users_count":4,"latest_reply":"1614485892.040400","reply_users":["U01HD5VFXJM","U01L0RJC6FM","U67G3QRJM","U01CQ4F7SR2"],"subscribed":false},{"client_msg_id":"2ca0acd1-ec30-401b-b504-48762a44207f","type":"message","text":"```module X\n    param1 = 1\n    setopts(x) = global param1 = x\nend```","user":"U01HD5VFXJM","ts":"1614462543.026600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ie6gS","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"module X\n    param1 = 1\n    setopts(x) = global param1 = x\nend"}]}]}],"thread_ts":"1614461885.026300","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"a130817b-5c5a-443b-9e6c-0b520f1451b4","type":"message","text":"thanks! :slightly_smiling_face:","user":"U01L0RJC6FM","ts":"1614463689.026800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uC3b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks! "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1614461885.026300","parent_user_id":"U01L0RJC6FM","reactions":[{"name":"slightly_smiling_face","users":["U01HD5VFXJM"],"count":1}]},{"client_msg_id":"f48d0146-4e45-4d7a-a7e3-75275054852f","type":"message","text":"Make a parameters struct using Parameters.jl and pass that to each function","user":"U67G3QRJM","ts":"1614464033.029900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GI4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Make a parameters struct using Parameters.jl and pass that to each function"}]}]}],"thread_ts":"1614461885.026300","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"b3481abf-dc86-49e7-9a2a-d926845f4ede","type":"message","text":"follow-up question: I guess a struct would help to  ensure type-stability?","user":"U01L0RJC6FM","ts":"1614465446.030400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lzCr+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"follow-up question: I guess a struct would help to  ensure type-stability?"}]}]}],"thread_ts":"1614461885.026300","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"ff809fba-03b6-4797-9e01-7657f0c4e4f1","type":"message","text":"Yes, it would. Using global variables would reduce performance because the compiler will have a hard time optimizing code involving them since their types can change any time.","user":"U01CQ4F7SR2","ts":"1614485892.040400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ik+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, it would. Using global variables would reduce performance because the compiler will have a hard time optimizing code involving them since their types can change any time."}]}]}],"thread_ts":"1614461885.026300","parent_user_id":"U01L0RJC6FM"}]