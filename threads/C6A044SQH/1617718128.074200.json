[{"client_msg_id":"4f46b708-d1ba-430b-86bc-7d91d01cd919","type":"message","text":"To what extend does the `Float64`  type respect the `≤`  relation wrt actual real numbers? i.e. if I have `m ≤ x ≤ M`  and `n ≤ y ≤ N`  with `m,n,M,N::Float64`  and `x,y`  real numbers, do I always have e.g. `m+n ≤ x+y ≤ M+N`  and `m*n ≤ x*y ≤ M*N`  (assuming everything is ≥0 here) ?","user":"U01MG0TN079","ts":"1617718128.074200","team":"T68168MUP","edited":{"user":"U01MG0TN079","ts":"1617719403.000000"},"blocks":[{"type":"rich_text","block_id":"88j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To what extend does the "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":"  type respect the "},{"type":"text","text":"≤","style":{"code":true}},{"type":"text","text":"  relation wrt actual real numbers? i.e. if I have "},{"type":"text","text":"m ≤ x ≤ M","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"n ≤ y ≤ N","style":{"code":true}},{"type":"text","text":"  with "},{"type":"text","text":"m,n,M,N::Float64","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"x,y","style":{"code":true}},{"type":"text","text":"  real numbers, do I always have e.g. "},{"type":"text","text":"m+n ≤ x+y ≤ M+N","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"m*n ≤ x*y ≤ M*N","style":{"code":true}},{"type":"text","text":"  (assuming everything is ≥0 here) ?"}]}]}],"thread_ts":"1617718128.074200","reply_count":10,"reply_users_count":2,"latest_reply":"1617802350.141000","reply_users":["U0179G7FG4F","U01MG0TN079"],"is_locked":false,"subscribed":false},{"client_msg_id":"867f3517-fdef-4d78-b11f-9d1ec17019a5","type":"message","text":"These don't hold with round to even","user":"U0179G7FG4F","ts":"1617721947.075400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wJ2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"These don't hold with round to even"}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"},{"client_msg_id":"71307b6b-6c43-4949-8a67-553f2865219e","type":"message","text":"Consider `x=m, y=n`","user":"U0179G7FG4F","ts":"1617721998.075600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RdH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Consider "},{"type":"text","text":"x=m, y=n","style":{"code":true}}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"},{"client_msg_id":"ffbe07ff-b90d-466c-9bca-7365341e6fa4","type":"message","text":"you mean rounding? but that's to be expected isn't it? my question is essentially: If I have Float64 boxes for real numbers, can I safely do arithmetic with the boxes, or do I have to work with interval arithmetic","user":"U01MG0TN079","ts":"1617724437.076800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KBzX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you mean rounding? but that's to be expected isn't it? my question is essentially: If I have Float64 boxes for real numbers, can I safely do arithmetic with the boxes, or do I have to work with interval arithmetic"}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"},{"client_msg_id":"83c4d6b8-ffb4-4c30-abc4-4bc0b1dd4911","type":"message","text":"You have to use interval arithmetic. Otherwise your boxes can (and often will) collapse to a single number, which clearly shows that this doesn't work. For a concrete example, consider `0.1+2.0^53` your lower and upper bounds on the result will collapse to `2.0^53` which is wrong. In order to get correct results, you have to use interval arithmetic or, equivalently, manually set the processor rounding mode to round down on the lower bound and to round up on the upper bound","user":"U0179G7FG4F","ts":"1617726298.081200","team":"T68168MUP","edited":{"user":"U0179G7FG4F","ts":"1617726322.000000"},"blocks":[{"type":"rich_text","block_id":"k/kO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You have to use interval arithmetic. Otherwise your boxes can (and often will) collapse to a single number, which clearly shows that this doesn't work. For a concrete example, consider "},{"type":"text","text":"0.1+2.0^53","style":{"code":true}},{"type":"text","text":" your lower and upper bounds on the result will collapse to "},{"type":"text","text":"2.0^53","style":{"code":true}},{"type":"text","text":" which is wrong. In order to get correct results, you have to use interval arithmetic or, equivalently, manually set the processor rounding mode to round down on the lower bound and to round up on the upper bound"}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"},{"client_msg_id":"8fd01dab-6d67-493e-8833-3258f857af3b","type":"message","text":"ah, I see. I fear using interval arithmetic (I'm thinking of the `arb` datatype from Hecke here (don't know if it's all the same)) will be expensive, and I only need \"close enough\" computations as long as I have guarantees on this \"monotonocity\". What's the way to choose the rounding mode?","user":"U01MG0TN079","ts":"1617729280.085300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"asTB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, I see. I fear using interval arithmetic (I'm thinking of the "},{"type":"text","text":"arb","style":{"code":true}},{"type":"text","text":" datatype from Hecke here (don't know if it's all the same)) will be expensive, and I only need \"close enough\" computations as long as I have guarantees on this \"monotonocity\". What's the way to choose the rounding mode?"}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"},{"client_msg_id":"0ab1be34-912c-4ece-8d69-7e2cdba36afe","type":"message","text":"IntervalArithmetic.jl will be as fast as what you would do manually. That said, if you want to do it yourself, I think there is documentation on setting rounding modes. I don't know the details that well though.","user":"U0179G7FG4F","ts":"1617734089.090000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rtYD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IntervalArithmetic.jl will be as fast as what you would do manually. That said, if you want to do it yourself, I think there is documentation on setting rounding modes. I don't know the details that well though."}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"},{"client_msg_id":"e0eab928-23d7-4ac9-9e9e-237c56fa593d","type":"message","text":"Alright, thank you!","user":"U01MG0TN079","ts":"1617770953.123400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CMN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alright, thank you!"}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"},{"client_msg_id":"04ac6b8b-313d-4e3b-a757-bd8e73d795b0","type":"message","text":"Just one last thing: do you have any idea what performance intervararithmetics.jl has compared to simple Float64 operations?","user":"U01MG0TN079","ts":"1617783549.126500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"09pq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just one last thing: do you have any idea what performance intervararithmetics.jl has compared to simple Float64 operations?"}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"},{"client_msg_id":"514097bf-ebd7-493b-aca9-f64b9c5454f9","type":"message","text":"Not fully sure. It partially depends on the operations you're doing, but It's probably in the 2x-5x range","user":"U0179G7FG4F","ts":"1617802052.139800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"asWc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not fully sure. It partially depends on the operations you're doing, but It's probably in the 2x-5x range"}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"},{"client_msg_id":"7f86ddef-0902-43ed-9c5e-a8d6d3e00f95","type":"message","text":"ah, that's very reasonable (can't expect much better anyway I guess), thanks!","user":"U01MG0TN079","ts":"1617802350.141000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bvHhU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, that's very reasonable (can't expect much better anyway I guess), thanks!"}]}]}],"thread_ts":"1617718128.074200","parent_user_id":"U01MG0TN079"}]