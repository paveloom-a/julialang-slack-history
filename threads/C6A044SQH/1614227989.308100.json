[{"client_msg_id":"e37d655d-50a5-4c65-8074-da8eb38c3f55","type":"message","text":"Can anyone give a good answer to <https://stackoverflow.com/questions/66343723/how-to-improve-shared-memory-parallelism-in-julia>? It's a fairly simple question about how to get multithread speedup.","user":"U0179G7FG4F","ts":"1614227989.308100","team":"T68168MUP","attachments":[{"service_name":"Stack Overflow","title":"How to improve shared memory parallelism in Julia?","title_link":"https://stackoverflow.com/questions/66343723/how-to-improve-shared-memory-parallelism-in-julia","text":"I know that questions about multi-threading performance in Julia have already been asked (e.g. here), but they involve fairly complex code in which many things could be at play. Here, I am running ...","fallback":"Stack Overflow: How to improve shared memory parallelism in Julia?","thumb_url":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded","from_url":"https://stackoverflow.com/questions/66343723/how-to-improve-shared-memory-parallelism-in-julia","thumb_width":316,"thumb_height":316,"service_icon":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon.png?v=c78bd457575a","id":1,"original_url":"https://stackoverflow.com/questions/66343723/how-to-improve-shared-memory-parallelism-in-julia"}],"blocks":[{"type":"rich_text","block_id":"CBDX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can anyone give a good answer to "},{"type":"link","url":"https://stackoverflow.com/questions/66343723/how-to-improve-shared-memory-parallelism-in-julia"},{"type":"text","text":"? It's a fairly simple question about how to get multithread speedup."}]}]}],"thread_ts":"1614227989.308100","reply_count":42,"reply_users_count":4,"latest_reply":"1614229973.318200","reply_users":["B01J9QZ4SP8","UH8A351DJ","U0179G7FG4F","UAUPJLBQX"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614227991.308200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"0663f1c7-19a4-469f-ac46-4a1d886f4040","type":"message","text":"(at a glance: classic task is too light, atomic is slow)","user":"UH8A351DJ","ts":"1614228084.308500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bH+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(at a glance: classic task is too light, atomic is slow)"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"73b9b6e6-2861-47a6-acae-9eea18da2f48","type":"message","text":"yeah. That makes sense. Any idea how Chappel is getting the speedup?","user":"U0179G7FG4F","ts":"1614228209.308700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1BxR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah. That makes sense. Any idea how Chappel is getting the speedup?"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"5b3e620f-9d55-46ac-8370-2acbf9b044ec","type":"message","text":"I'm surprised Floop didn't see a bigger speedup.","user":"UAUPJLBQX","ts":"1614228234.308900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LBtub","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm surprised Floop didn't see a bigger speedup."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"55962351-8a3a-49b6-b26f-d22804f23bff","type":"message","text":"The `@threads` version should instead be","user":"UAUPJLBQX","ts":"1614228252.309100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xqQm9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":"@threads","style":{"code":true}},{"type":"text","text":" version should instead be"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"45ddfb50-1696-4b98-acf8-3714c838a613","type":"message","text":"`Threads.@threads for i in 1:nthreads()`","user":"UAUPJLBQX","ts":"1614228263.309300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AuU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Threads.@threads for i in 1:nthreads()","style":{"code":true}}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F","reactions":[{"name":"heavy_check_mark","users":["UH8A351DJ"],"count":1}]},{"client_msg_id":"77998a62-8c56-4f6b-9e66-187ee383734b","type":"message","text":"isn't that just Chappel is alwasy slow?","user":"UH8A351DJ","ts":"1614228264.309500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"flg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"isn't that just Chappel is alwasy slow?"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"4f44f6ad-953f-41d6-a091-2743c1949957","type":"message","text":"and call the function with a view/subset of the iteration, so it only needs to do the atomic add once per thread, and not once per iteration. (that'd require modifying to take a range, so it's for `i in r` and not `for i in 1:n`)","user":"UAUPJLBQX","ts":"1614228287.309800","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1614228360.000000"},"blocks":[{"type":"rich_text","block_id":"lqo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and call the function with a view/subset of the iteration, so it only needs to do the atomic add once per thread, and not once per iteration. (that'd require modifying to take a range, so it's for "},{"type":"text","text":"i in r","style":{"code":true}},{"type":"text","text":" and not "},{"type":"text","text":"for i in 1:n","style":{"code":true}},{"type":"text","text":")"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"8b453439-fb20-40ec-a560-fea3b65b409c","type":"message","text":"I think making a vector with length = nthreads() is easier if that qualifies as an answer?","user":"UH8A351DJ","ts":"1614228419.310300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QFeT5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think making a vector with length = nthreads() is easier if that qualifies as an answer?"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"fa91af17-6df1-4adc-8202-928d25765c9e","type":"message","text":"the fundamental problem is each iteration is way too light, given this, I think it's appropriate to pre-allocate an accumulator for each thread.","user":"UH8A351DJ","ts":"1614228467.310500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j4Ho7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the fundamental problem is each iteration is way too light, given this, I think it's appropriate to pre-allocate an accumulator for each thread."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"9198a556-4085-4871-97e4-3eb3515ffd29","type":"message","text":"if the computation is heavy and pre-allocate for each thread may max out the memory then atomic is a good choice.","user":"UH8A351DJ","ts":"1614228507.310700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p=e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if the computation is heavy and pre-allocate for each thread may max out the memory then atomic is a good choice."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"19d6cb91-ce57-4b5f-bbd4-e7bffd6e26d2","type":"message","text":"A vector of accumulators needs to avoid false sharing","user":"UAUPJLBQX","ts":"1614228511.310900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Lp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A vector of accumulators needs to avoid false sharing"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"3e0d06ab-314b-49e9-a460-6130f7ab0f81","type":"message","text":"So you could make an accumulator like\n```acc = zeros(8, Threads.nthreads())\nThreads.@threads for i in ...\n    acc[1,Threads.threadid()] += ...\nend\nsum(@view(acc[1,:])) # or just summ(acc)```\n","user":"UAUPJLBQX","ts":"1614228655.311100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bAQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So you could make an accumulator like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"acc = zeros(8, Threads.nthreads())\nThreads.@threads for i in ...\n    acc[1,Threads.threadid()] += ...\nend\nsum(@view(acc[1,:])) # or just summ(acc)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"712ffa4c-9401-496b-b4ca-40acdca412bb","type":"message","text":"```julia&gt; @btime slow_thread(Int64(1e5), \"9\")\n  5.177 ms (200130 allocations: 9.17 MiB)\n\"total = Base.Threads.Atomic{Float64}(9.692877792106248)\"\n\njulia&gt; @btime slow_thread_pre(Int64(1e5), \"9\")\n  2.842 ms (200093 allocations: 9.16 MiB)\n\"total = 9.692877792106176\"```\nin this case it seems to be working","user":"UH8A351DJ","ts":"1614228658.311300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bO86","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime slow_thread(Int64(1e5), \"9\")\n  5.177 ms (200130 allocations: 9.17 MiB)\n\"total = Base.Threads.Atomic{Float64}(9.692877792106248)\"\n\njulia> @btime slow_thread_pre(Int64(1e5), \"9\")\n  2.842 ms (200093 allocations: 9.16 MiB)\n\"total = 9.692877792106176\""}]},{"type":"rich_text_section","elements":[{"type":"text","text":"in this case it seems to be working"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F","reactions":[{"name":"+1","users":["UAUPJLBQX"],"count":1}]},{"client_msg_id":"89d9b800-10ab-4141-b2bf-9cebd6eb2c24","type":"message","text":"nthreads() = 17, code:\n```function slow_thread_pre(n::Int, digits::String)\n           totals = zeros(Threads.nthreads())\n           Threads.@threads for i in 1:n\n               if !occursin(digits, string(i))\n                   totals[Threads.threadid()] += 1.0 / i\n               end\n           end\n           \"total = $(sum(totals))\"\n       end```","user":"UH8A351DJ","ts":"1614228682.311500","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1614228711.000000"},"blocks":[{"type":"rich_text","block_id":"ra2=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nthreads() = 17, code:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function slow_thread_pre(n::Int, digits::String)\n           totals = zeros(Threads.nthreads())\n           Threads.@threads for i in 1:n\n               if !occursin(digits, string(i))\n                   totals[Threads.threadid()] += 1.0 / i\n               end\n           end\n           \"total = $(sum(totals))\"\n       end"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"93b08cf0-2e76-4416-b58e-39078e431478","type":"message","text":"but yeah, I'm wondering if thread number is small, false sharing would be more dominant","user":"UH8A351DJ","ts":"1614228731.311900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UXG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but yeah, I'm wondering if thread number is small, false sharing would be more dominant"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"310d0f9c-625f-475a-b693-325f3c89daa0","type":"message","text":"want to post the answer? If not, I will","user":"U0179G7FG4F","ts":"1614228738.312100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HN=a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"want to post the answer? If not, I will"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"f3420be7-81ca-4f7d-be18-469f377c7ef6","type":"message","text":"I think it's tradition of SO to give a very complete and deep-ish answer to cover not only the scope of original question but also expand a bit","user":"UH8A351DJ","ts":"1614228778.312300","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1614228813.000000"},"blocks":[{"type":"rich_text","block_id":"Yfj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it's tradition of SO to give a very complete and deep-ish answer to cover not only the scope of original question but also expand a bit"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F"],"count":1}]},{"client_msg_id":"7ec23259-2bef-4eff-9b28-199b1d919621","type":"message","text":"Also, he really shouldn't be printing while benchmarking either","user":"UAUPJLBQX","ts":"1614228794.312600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9RN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, he really shouldn't be printing while benchmarking either"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F","reactions":[{"name":"heavy_check_mark","users":["UH8A351DJ"],"count":1}]},{"client_msg_id":"88a5a6f8-24d6-4553-a6c5-62969cc74b38","type":"message","text":"especially for as well written a question as this","user":"U0179G7FG4F","ts":"1614228798.312800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mcc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"especially for as well written a question as this"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"e2047086-69c1-4ed5-a1fe-b091eba6056f","type":"message","text":"```julia&gt; @time slow_threads_atomic(10_000_000, \"9\")\n  0.308576 seconds (20.03 M allocations: 917.256 MiB, 0.00% compilation time)\n12.206153722565846\n\njulia&gt; @time slow_threads_atomic(10_000_000, \"9\")\n  0.748393 seconds (20.00 M allocations: 915.543 MiB, 62.97% gc time)\n12.206153722565851\n\njulia&gt; @time slow_threads_atomic(10_000_000, \"9\")\n  1.155459 seconds (20.00 M allocations: 915.543 MiB, 75.39% gc time)\n12.206153722565919\n\njulia&gt; @time slow_threads(10_000_000, \"9\")\n  0.067868 seconds (20.00 M allocations: 915.545 MiB)\n12.206153722566198\n\njulia&gt; @time slow_threads(10_000_000, \"9\")\n  0.065167 seconds (20.00 M allocations: 915.545 MiB)\n12.206153722566198\n\njulia&gt; @time slow_threads(10_000_000, \"9\")\n  0.666181 seconds (20.00 M allocations: 915.546 MiB, 90.06% gc time)\n12.206153722566198\n\njulia&gt; @time slow_threads_fs(10_000_000, \"9\")\n  0.099666 seconds (20.00 M allocations: 915.544 MiB)\n12.2061537225662\n\njulia&gt; @time slow_threads_fs(10_000_000, \"9\")\n  0.716949 seconds (20.00 M allocations: 915.544 MiB, 84.61% gc time)\n12.2061537225662\n\njulia&gt; @time slow_threads_fs(10_000_000, \"9\")\n  1.023162 seconds (20.00 M allocations: 915.544 MiB, 90.37% gc time)\n12.2061537225662\n\njulia&gt; @time slow_threads_fs(10_000_000, \"9\")\n  0.842116 seconds (20.00 M allocations: 915.544 MiB, 86.61% gc time)\n12.2061537225662```","user":"UAUPJLBQX","ts":"1614228989.313200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jn7","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @time slow_threads_atomic(10_000_000, \"9\")\n  0.308576 seconds (20.03 M allocations: 917.256 MiB, 0.00% compilation time)\n12.206153722565846\n\njulia> @time slow_threads_atomic(10_000_000, \"9\")\n  0.748393 seconds (20.00 M allocations: 915.543 MiB, 62.97% gc time)\n12.206153722565851\n\njulia> @time slow_threads_atomic(10_000_000, \"9\")\n  1.155459 seconds (20.00 M allocations: 915.543 MiB, 75.39% gc time)\n12.206153722565919\n\njulia> @time slow_threads(10_000_000, \"9\")\n  0.067868 seconds (20.00 M allocations: 915.545 MiB)\n12.206153722566198\n\njulia> @time slow_threads(10_000_000, \"9\")\n  0.065167 seconds (20.00 M allocations: 915.545 MiB)\n12.206153722566198\n\njulia> @time slow_threads(10_000_000, \"9\")\n  0.666181 seconds (20.00 M allocations: 915.546 MiB, 90.06% gc time)\n12.206153722566198\n\njulia> @time slow_threads_fs(10_000_000, \"9\")\n  0.099666 seconds (20.00 M allocations: 915.544 MiB)\n12.2061537225662\n\njulia> @time slow_threads_fs(10_000_000, \"9\")\n  0.716949 seconds (20.00 M allocations: 915.544 MiB, 84.61% gc time)\n12.2061537225662\n\njulia> @time slow_threads_fs(10_000_000, \"9\")\n  1.023162 seconds (20.00 M allocations: 915.544 MiB, 90.37% gc time)\n12.2061537225662\n\njulia> @time slow_threads_fs(10_000_000, \"9\")\n  0.842116 seconds (20.00 M allocations: 915.544 MiB, 86.61% gc time)\n12.2061537225662"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"09a547d0-f564-43df-8fba-88f4e121d1e9","type":"message","text":"`fs` has false sharing, no suffix avoided false sharing by separating the accumulators into separate cachelines, and the atomic version was what they had.","user":"UAUPJLBQX","ts":"1614229029.313400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uEe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"fs","style":{"code":true}},{"type":"text","text":" has false sharing, no suffix avoided false sharing by separating the accumulators into separate cachelines, and the atomic version was what they had."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"71838abf-f5d1-4875-a791-6db778eab3f4","type":"message","text":"Notice the wild difference in runtimes from one run to another. &gt;_&lt;","user":"UAUPJLBQX","ts":"1614229042.313600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9G2Ae","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Notice the wild difference in runtimes from one run to another. >_<"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"3b6b8a08-f85e-47e7-bd26-6170059c98e8","type":"message","text":"Versus no threads:\n```julia&gt; @time slow(10_000_000, \"9\")\n  0.770200 seconds (20.00 M allocations: 915.527 MiB, 15.13% gc time)\n12.206153722565858\n\njulia&gt; @time slow(10_000_000, \"9\")\n  0.722900 seconds (20.00 M allocations: 915.527 MiB, 12.47% gc time)\n12.206153722565858\n\njulia&gt; @time slow(10_000_000, \"9\")\n  0.725154 seconds (20.00 M allocations: 915.527 MiB, 12.63% gc time)\n12.206153722565858```","user":"UAUPJLBQX","ts":"1614229068.313800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PJQZx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Versus no threads:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @time slow(10_000_000, \"9\")\n  0.770200 seconds (20.00 M allocations: 915.527 MiB, 15.13% gc time)\n12.206153722565858\n\njulia> @time slow(10_000_000, \"9\")\n  0.722900 seconds (20.00 M allocations: 915.527 MiB, 12.47% gc time)\n12.206153722565858\n\njulia> @time slow(10_000_000, \"9\")\n  0.725154 seconds (20.00 M allocations: 915.527 MiB, 12.63% gc time)\n12.206153722565858"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"bf543de9-fee6-41eb-8dda-fbd6a560d052","type":"message","text":"ah ok, `ThreadsX` is much better because it auto partition's:\n```julia&gt; @btime slow_thread_pre(Int64(1e5), \"9\")\n  4.206 ms (200028 allocations: 9.16 MiB)\n\"total = 9.692877792106191\"\n\njulia&gt; @btime slow_thread_thx(Int64(1e5), \"9\")\n  1.715 ms (200295 allocations: 9.17 MiB)\n\"total = 9.69287779210619```\n","user":"UH8A351DJ","ts":"1614229136.314000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uj7R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah ok, "},{"type":"text","text":"ThreadsX","style":{"code":true}},{"type":"text","text":" is much better because it auto partition's:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime slow_thread_pre(Int64(1e5), \"9\")\n  4.206 ms (200028 allocations: 9.16 MiB)\n\"total = 9.692877792106191\"\n\njulia> @btime slow_thread_thx(Int64(1e5), \"9\")\n  1.715 ms (200295 allocations: 9.17 MiB)\n\"total = 9.69287779210619"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"11a2c45e-ce6d-4b74-ba4a-09e2aeee0e94","type":"message","text":"atomic time is `5.117 ms` . Comparing to sequencial one this seems to be perfectly scaled","user":"UH8A351DJ","ts":"1614229151.314200","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1614229305.000000"},"blocks":[{"type":"rich_text","block_id":"/0w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"atomic time is "},{"type":"text","text":"5.117 ms","style":{"code":true}},{"type":"text","text":" . Comparing to sequencial one this seems to be perfectly scaled"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"ed5503ac-d3fd-44f3-8605-d31c93400e6b","type":"message","text":"```julia&gt; function slow_thread_thx(n::Int, digits::String)\n           total = ThreadsX.mapreduce(+,1:n) do i\n               if !occursin(digits, string(i))\n                   1.0 / i\n               else\n                   0.0\n               end\n           end\n           \"total = $total\"\n       end```","user":"UH8A351DJ","ts":"1614229163.314400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=QB","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function slow_thread_thx(n::Int, digits::String)\n           total = ThreadsX.mapreduce(+,1:n) do i\n               if !occursin(digits, string(i))\n                   1.0 / i\n               else\n                   0.0\n               end\n           end\n           \"total = $total\"\n       end"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"9d134d20-6384-4857-9f99-d5212a091ed0","type":"message","text":"```julia&gt; function slow(n::UnitRange, digits::String)\n           total = 0.0\n           for i in n\n               if !occursin(digits, string(i))\n                   total += 1.0 / i\n               end\n           end\n           total\n       end\nslow (generic function with 2 methods)\n\njulia&gt; function slow_threads_atomic_partition(n::Int, digits::String)\n           total = Atomic{Float64}(0);\n           @sync for p in Iterators.partition(1:n, Threads.nthreads())\n               Threads.@spawn atomic_add!(total, slow(p, digits))\n           end\n           total[]\n       end\nslow_threads_atomic_partition (generic function with 1 method)\n\njulia&gt; @time slow_threads_atomic_partition(10_000_000, \"9\")\n  1.686016 seconds (21.96 M allocations: 1.032 GiB, 40.27% gc time)\n12.206153722566496\n\njulia&gt; @time slow_threads_atomic_partition(10_000_000, \"9\")\n  1.684866 seconds (21.94 M allocations: 1.031 GiB, 40.81% gc time)\n12.20615372256649```","user":"UAUPJLBQX","ts":"1614229379.314900","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1614229451.000000"},"blocks":[{"type":"rich_text","block_id":"tzjQ","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function slow(n::UnitRange, digits::String)\n           total = 0.0\n           for i in n\n               if !occursin(digits, string(i))\n                   total += 1.0 / i\n               end\n           end\n           total\n       end\nslow (generic function with 2 methods)\n\njulia> function slow_threads_atomic_partition(n::Int, digits::String)\n           total = Atomic{Float64}(0);\n           @sync for p in Iterators.partition(1:n, Threads.nthreads())\n               Threads.@spawn atomic_add!(total, slow(p, digits))\n           end\n           total[]\n       end\nslow_threads_atomic_partition (generic function with 1 method)\n\njulia> @time slow_threads_atomic_partition(10_000_000, \"9\")\n  1.686016 seconds (21.96 M allocations: 1.032 GiB, 40.27% gc time)\n12.206153722566496\n\njulia> @time slow_threads_atomic_partition(10_000_000, \"9\")\n  1.684866 seconds (21.94 M allocations: 1.031 GiB, 40.81% gc time)\n12.20615372256649"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"e74be90c-c4f3-4068-adc1-cc01088ab3b0","type":"message","text":"I sometimes got a 7x speedup with the `@threads` versions","user":"UAUPJLBQX","ts":"1614229463.315200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WPI3n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I sometimes got a 7x speedup with the "},{"type":"text","text":"@threads","style":{"code":true}},{"type":"text","text":" versions"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"c6704e76-3b78-45f3-9b3e-76b497771132","type":"message","text":"on 36 threads","user":"UAUPJLBQX","ts":"1614229468.315400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OOEpZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"on 36 threads"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"7241d51a-40ac-4899-9fb4-0b0fed181cad","type":"message","text":"but the `@spawn` version gives a slow down.","user":"UAUPJLBQX","ts":"1614229477.315600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bCR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but the "},{"type":"text","text":"@spawn","style":{"code":true}},{"type":"text","text":" version gives a slow down."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"15c53aa1-10d8-427a-a163-7a5db21bbe08","type":"message","text":"I hate Julia's scheduler &gt;_&lt;","user":"UAUPJLBQX","ts":"1614229482.315800","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1614229488.000000"},"blocks":[{"type":"rich_text","block_id":"IUm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I hate Julia's scheduler >_<"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"3f5e2ff1-86af-4ca0-812e-fd938dc99c77","type":"message","text":"Makes it hard to get speedups.","user":"UAUPJLBQX","ts":"1614229496.316100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fyMJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Makes it hard to get speedups."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"efd2ba96-3820-4ad5-aa7f-ee9317a923bf","type":"message","text":"haha. can you try ThreadsX so we can confirm secondary effect is coming from the false sharing? (and thirary from scheduler if applicable haha)","user":"UH8A351DJ","ts":"1614229517.316300","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1614229551.000000"},"blocks":[{"type":"rich_text","block_id":"eATTK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"haha. can you try ThreadsX so we can confirm secondary effect is coming from the false sharing? (and thirary from scheduler if applicable haha)"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"0a962940-f89e-4f62-b19b-d2277e50a91a","type":"message","text":"```julia&gt; function slow_distributed(n::Int, digits::String)\n           @distributed (+) for i in 1:n\n               occursin(digits, string(i)) ? 0.0 : 1.0 / i\n           end\n       end\nslow_distributed (generic function with 1 method)\n\njulia&gt; @time slow_distributed(10_000_000, \"9\")\n  0.180213 seconds (3.04 k allocations: 133.812 KiB)\n12.2061537225662\n\njulia&gt; @time slow_distributed(10_000_000, \"9\")\n  0.040645 seconds (3.03 k allocations: 127.109 KiB)\n12.2061537225662\n\njulia&gt; @time slow_distributed(10_000_000, \"9\")\n  0.105301 seconds (3.04 k allocations: 129.656 KiB)\n12.2061537225662\n\njulia&gt; @time slow_distributed(10_000_000, \"9\")\n  0.039256 seconds (3.02 k allocations: 128.859 KiB)\n12.2061537225662```","user":"UAUPJLBQX","ts":"1614229620.316600","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1614229723.000000"},"blocks":[{"type":"rich_text","block_id":"RKea","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function slow_distributed(n::Int, digits::String)\n           @distributed (+) for i in 1:n\n               occursin(digits, string(i)) ? 0.0 : 1.0 / i\n           end\n       end\nslow_distributed (generic function with 1 method)\n\njulia> @time slow_distributed(10_000_000, \"9\")\n  0.180213 seconds (3.04 k allocations: 133.812 KiB)\n12.2061537225662\n\njulia> @time slow_distributed(10_000_000, \"9\")\n  0.040645 seconds (3.03 k allocations: 127.109 KiB)\n12.2061537225662\n\njulia> @time slow_distributed(10_000_000, \"9\")\n  0.105301 seconds (3.04 k allocations: 129.656 KiB)\n12.2061537225662\n\njulia> @time slow_distributed(10_000_000, \"9\")\n  0.039256 seconds (3.02 k allocations: 128.859 KiB)\n12.2061537225662"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"7000285b-a397-4a8c-9925-a50b71e681f4","type":"message","text":"Distributed tends to do better.","user":"UAUPJLBQX","ts":"1614229644.316900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bgv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Distributed tends to do better."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"87a63291-797b-4354-9fa9-8d68cde7f719","type":"message","text":"Secondary effect wasn't from false sharing for me.","user":"UAUPJLBQX","ts":"1614229663.317100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6u2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Secondary effect wasn't from false sharing for me."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"35a99cfc-b7e3-4e46-8e19-e64bdbe39342","type":"message","text":"I tried to approaches to avoid false sharing, and both performed badly.","user":"UAUPJLBQX","ts":"1614229674.317300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kqjP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I tried to approaches to avoid false sharing, and both performed badly."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"2f667b6f-dbc6-4f5f-9ba8-cf240953dc79","type":"message","text":"But I'll try `ThreadsX`.","user":"UAUPJLBQX","ts":"1614229731.317600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VBR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I'll try "},{"type":"text","text":"ThreadsX","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"e505b2f9-901a-46be-b00d-3d4143b13d83","type":"message","text":"Not as good as `Distributed` , but the best threads so far:\n```julia&gt; function slow_threadsx(n::Int, digits::String)\n           ThreadsX.sum(1:n) do i\n               occursin(digits, string(i)) ? 0.0 : 1.0 / i\n           end\n       end\nslow_threadsx (generic function with 1 method)\n\njulia&gt; slow_threadsx(10_000, \"9\")\n8.22318440286621\n\njulia&gt; @time slow_threadsx(10_000_000, \"9\")\n  0.282266 seconds (20.00 M allocations: 915.795 MiB, 66.14% gc time)\n12.206153722566354\n\njulia&gt; @time slow_threadsx(10_000_000, \"9\")\n  0.633738 seconds (20.00 M allocations: 915.794 MiB, 85.73% gc time)\n12.206153722566354\n\njulia&gt; @time slow_threadsx(10_000_000, \"9\")\n  0.069269 seconds (20.00 M allocations: 915.794 MiB)\n12.206153722566354\n\njulia&gt; @time slow_threadsx(10_000_000, \"9\")\n  0.074455 seconds (20.00 M allocations: 915.794 MiB)\n12.206153722566354\n\njulia&gt; @time slow_threadsx(10_000_000, \"9\")\n  0.494442 seconds (20.00 M allocations: 915.794 MiB, 86.30% gc time)\n12.206153722566354```","user":"UAUPJLBQX","ts":"1614229832.317800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y/nUw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not as good as "},{"type":"text","text":"Distributed","style":{"code":true}},{"type":"text","text":" , but the best threads so far:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function slow_threadsx(n::Int, digits::String)\n           ThreadsX.sum(1:n) do i\n               occursin(digits, string(i)) ? 0.0 : 1.0 / i\n           end\n       end\nslow_threadsx (generic function with 1 method)\n\njulia> slow_threadsx(10_000, \"9\")\n8.22318440286621\n\njulia> @time slow_threadsx(10_000_000, \"9\")\n  0.282266 seconds (20.00 M allocations: 915.795 MiB, 66.14% gc time)\n12.206153722566354\n\njulia> @time slow_threadsx(10_000_000, \"9\")\n  0.633738 seconds (20.00 M allocations: 915.794 MiB, 85.73% gc time)\n12.206153722566354\n\njulia> @time slow_threadsx(10_000_000, \"9\")\n  0.069269 seconds (20.00 M allocations: 915.794 MiB)\n12.206153722566354\n\njulia> @time slow_threadsx(10_000_000, \"9\")\n  0.074455 seconds (20.00 M allocations: 915.794 MiB)\n12.206153722566354\n\njulia> @time slow_threadsx(10_000_000, \"9\")\n  0.494442 seconds (20.00 M allocations: 915.794 MiB, 86.30% gc time)\n12.206153722566354"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"95e64eb8-ef6f-4172-8a44-857726137a53","type":"message","text":"```julia&gt; @benchmark slow_threadsx(10_000_000, \"9\")\nBenchmarkTools.Trial:\n  memory estimate:  915.79 MiB\n  allocs estimate:  20004649\n  --------------\n  minimum time:     67.201 ms (0.00% GC)\n  median time:      562.048 ms (88.50% GC)\n  mean time:        441.825 ms (84.68% GC)\n  maximum time:     591.015 ms (85.96% GC)\n  --------------\n  samples:          12\n  evals/sample:     1\n\njulia&gt; @benchmark slow_distributed(10_000_000, \"9\")\nBenchmarkTools.Trial:\n  memory estimate:  126.61 KiB\n  allocs estimate:  3010\n  --------------\n  minimum time:     29.739 ms (0.00% GC)\n  median time:      38.170 ms (0.00% GC)\n  mean time:        35.845 ms (0.00% GC)\n  maximum time:     43.233 ms (0.00% GC)\n  --------------\n  samples:          140\n  evals/sample:     1```","user":"UAUPJLBQX","ts":"1614229918.318000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FL/5S","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @benchmark slow_threadsx(10_000_000, \"9\")\nBenchmarkTools.Trial:\n  memory estimate:  915.79 MiB\n  allocs estimate:  20004649\n  --------------\n  minimum time:     67.201 ms (0.00% GC)\n  median time:      562.048 ms (88.50% GC)\n  mean time:        441.825 ms (84.68% GC)\n  maximum time:     591.015 ms (85.96% GC)\n  --------------\n  samples:          12\n  evals/sample:     1\n\njulia> @benchmark slow_distributed(10_000_000, \"9\")\nBenchmarkTools.Trial:\n  memory estimate:  126.61 KiB\n  allocs estimate:  3010\n  --------------\n  minimum time:     29.739 ms (0.00% GC)\n  median time:      38.170 ms (0.00% GC)\n  mean time:        35.845 ms (0.00% GC)\n  maximum time:     43.233 ms (0.00% GC)\n  --------------\n  samples:          140\n  evals/sample:     1"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"},{"client_msg_id":"3bc43427-15ad-4664-8645-061ad3b2f6ef","type":"message","text":"I'm surprised distributed is faster than threads but then I realize there's no memory sharing whatsoever so I guess this can make sense","user":"UH8A351DJ","ts":"1614229973.318200","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1614229985.000000"},"blocks":[{"type":"rich_text","block_id":"09S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm surprised distributed is faster than threads but then I realize there's no memory sharing whatsoever so I guess this can make sense"}]}]}],"thread_ts":"1614227989.308100","parent_user_id":"U0179G7FG4F"}]