[{"type":"message","text":"Hey everyone!\nI'm having some trouble with structs and am stuck here :disappointed:\n\nI have some code of the following nature:\n\n```struct BlockPartition{Dim,T} &lt;: PartitionMethod\n  sides::SVector{Dim,T}\nend\n\nBlockPartition(sides::NTuple{Dim,T}) where {Dim,T} = BlockPartition{Dim,T}(sides)\n\nBlockPartition(sides::Vararg{T,Dim}) where {Dim,T} = BlockPartition(sides)\n\nfunction partition(object, method::BlockPartition)\nDim = embeddim(object)\n  T = coordtype(object)\n\n  psides = method.sides\n  bbox = boundingbox(object)```\n\nNow, I want to add a boolean arguement to the struct. I added a 'neighbors' parameter and came up with this:\n\n\n```struct BlockPartition{Dim,T, neighbors = false} &lt;: PartitionMethod\n  sides::SVector{Dim,T}\n  neighbors::Bool\nend\n\nBlockPartition(sides::NTuple{Dim,T}, neighbors::Bool) where {Dim,T,neighbors} = BlockPartition{Dim,T,neighbors}(sides, neighbors)\n\nBlockPartition(sides::Vararg{T,Dim}, neighbors::Bool) where {Dim,T,neighbors} = BlockPartition(sides, neighbors)\n\nfunction partition(object, method::BlockPartition)\n  Dim = embeddim(object)\n\n  psides = method.sides\n  bbox = boundingbox(object)\n  calculate_metadata = method.neighbors```\n\nHowever it doesn't seem to be working. I suspect the problem lies in the following lines:\n\n\n`BlockPartition(sides::NTuple{Dim,T}) where {Dim,T} = BlockPartition{Dim,T}(sides)`\n\n`BlockPartition(sides::Vararg{T,Dim}) where {Dim,T} = BlockPartition(sides)`\n\nHowever I am not sure how to change them. How can I go about doing this?\nI get the following error:","files":[{"id":"F01QBS4HKGD","created":1615106971,"timestamp":1615106971,"name":"Screenshot from 2021-03-07 14-19-10.png","title":"Screenshot from 2021-03-07 14-19-10.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01M2M35BFW","editable":false,"size":49068,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01QBS4HKGD/screenshot_from_2021-03-07_14-19-10.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01QBS4HKGD/download/screenshot_from_2021-03-07_14-19-10.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01QBS4HKGD-bdf1e34441/screenshot_from_2021-03-07_14-19-10_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01QBS4HKGD-bdf1e34441/screenshot_from_2021-03-07_14-19-10_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01QBS4HKGD-bdf1e34441/screenshot_from_2021-03-07_14-19-10_360.png","thumb_360_w":360,"thumb_360_h":99,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01QBS4HKGD-bdf1e34441/screenshot_from_2021-03-07_14-19-10_480.png","thumb_480_w":480,"thumb_480_h":131,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01QBS4HKGD-bdf1e34441/screenshot_from_2021-03-07_14-19-10_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01QBS4HKGD-bdf1e34441/screenshot_from_2021-03-07_14-19-10_720.png","thumb_720_w":720,"thumb_720_h":197,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01QBS4HKGD-bdf1e34441/screenshot_from_2021-03-07_14-19-10_800.png","thumb_800_w":800,"thumb_800_h":219,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01QBS4HKGD-bdf1e34441/screenshot_from_2021-03-07_14-19-10_960.png","thumb_960_w":960,"thumb_960_h":263,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01QBS4HKGD-bdf1e34441/screenshot_from_2021-03-07_14-19-10_1024.png","thumb_1024_w":1024,"thumb_1024_h":280,"original_w":1213,"original_h":332,"thumb_tiny":"AwANADCmD1pPwpKM+1AC/hR+FJRQAv4UUlFAH//Z","permalink":"https://julialang.slack.com/files/U01M2M35BFW/F01QBS4HKGD/screenshot_from_2021-03-07_14-19-10.png","permalink_public":"https://slack-files.com/T68168MUP-F01QBS4HKGD-2234b637a5","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"RI8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey everyone!\nI'm having some trouble with structs and am stuck here "},{"type":"emoji","name":"disappointed"},{"type":"text","text":"\n\nI have some code of the following nature:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct BlockPartition{Dim,T} <: PartitionMethod\n  sides::SVector{Dim,T}\nend\n\nBlockPartition(sides::NTuple{Dim,T}) where {Dim,T} = BlockPartition{Dim,T}(sides)\n\nBlockPartition(sides::Vararg{T,Dim}) where {Dim,T} = BlockPartition(sides)\n\nfunction partition(object, method::BlockPartition)\nDim = embeddim(object)\n  T = coordtype(object)\n\n  psides = method.sides\n  bbox = boundingbox(object)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nNow, I want to add a boolean arguement to the struct. I added a 'neighbors' parameter and came up with this:\n\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct BlockPartition{Dim,T, neighbors = false} <: PartitionMethod\n  sides::SVector{Dim,T}\n  neighbors::Bool\nend\n\nBlockPartition(sides::NTuple{Dim,T}, neighbors::Bool) where {Dim,T,neighbors} = BlockPartition{Dim,T,neighbors}(sides, neighbors)\n\nBlockPartition(sides::Vararg{T,Dim}, neighbors::Bool) where {Dim,T,neighbors} = BlockPartition(sides, neighbors)\n\nfunction partition(object, method::BlockPartition)\n  Dim = embeddim(object)\n\n  psides = method.sides\n  bbox = boundingbox(object)\n  calculate_metadata = method.neighbors"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n\nHowever it doesn't seem to be working. I suspect the problem lies in the following lines:\n\n\n"},{"type":"text","text":"BlockPartition(sides::NTuple{Dim,T}) where {Dim,T} = BlockPartition{Dim,T}(sides)","style":{"code":true}},{"type":"text","text":"\n\n"},{"type":"text","text":"BlockPartition(sides::Vararg{T,Dim}) where {Dim,T} = BlockPartition(sides)","style":{"code":true}},{"type":"text","text":"\n\nHowever I am not sure how to change them. How can I go about doing this?\nI get the following error:"}]}]}],"user":"U01M2M35BFW","display_as_bot":false,"ts":"1615106974.495800","thread_ts":"1615106974.495800","reply_count":6,"reply_users_count":3,"latest_reply":"1615108573.499600","reply_users":["B01J9QZ4SP8","USU9FRPEU","U01M2M35BFW"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615106978.495900","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615106974.495800","parent_user_id":"U01M2M35BFW","reactions":[{"name":"bridge","users":["U01M2M35BFW"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/56664| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1615107013.497100","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615106974.495800","parent_user_id":"U01M2M35BFW"},{"client_msg_id":"c2a9ce47-517e-4854-b36c-742a622a3bc3","type":"message","text":"I think you might misunderstand how parameters work. What you want here is an inner constructor","user":"USU9FRPEU","ts":"1615107899.498600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jJ2PC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you might misunderstand how parameters work. What you want here is an inner constructor"}]}]}],"thread_ts":"1615106974.495800","parent_user_id":"U01M2M35BFW"},{"client_msg_id":"7593650a-e1cb-4422-a2ba-196be2f14951","type":"message","text":"```julia&gt; struct BlockPartition{Dim,T} &lt;: PartitionMethod\n         sides::SVector{Dim,T}\n         neighbors::Bool\n         BlockPartition(sides::SVector{Dim,T}, neighbors = false) where {Dim,T} = new{Dim,T}(sides, neighbors)\n       end\n\njulia&gt; BlockPartition(SVector{3,UInt8}(1,2,3))\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], false)\n\njulia&gt; BlockPartition(SVector{3,UInt8}(1,2,3),true)\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], true)\n\njulia&gt; BlockPartition(SVector{3,UInt8}(1,2,3),false)\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], false)```","user":"USU9FRPEU","ts":"1615108194.498800","team":"T68168MUP","edited":{"user":"USU9FRPEU","ts":"1615108207.000000"},"blocks":[{"type":"rich_text","block_id":"jYc","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct BlockPartition{Dim,T} <: PartitionMethod\n         sides::SVector{Dim,T}\n         neighbors::Bool\n         BlockPartition(sides::SVector{Dim,T}, neighbors = false) where {Dim,T} = new{Dim,T}(sides, neighbors)\n       end\n\njulia> BlockPartition(SVector{3,UInt8}(1,2,3))\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], false)\n\njulia> BlockPartition(SVector{3,UInt8}(1,2,3),true)\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], true)\n\njulia> BlockPartition(SVector{3,UInt8}(1,2,3),false)\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], false)"}]}]}],"thread_ts":"1615106974.495800","parent_user_id":"U01M2M35BFW","reactions":[{"name":"heart","users":["U01M2M35BFW"],"count":1}]},{"client_msg_id":"2dd8623c-9135-4992-a1b9-a95a2ee16665","type":"message","text":"Ohhhh, thank you so much <@USU9FRPEU>!\nI'll try working with this and analyze where I went wrong with the inner/outer constructor part! :slightly_smiling_face:","user":"U01M2M35BFW","ts":"1615108331.499100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+1WA+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ohhhh, thank you so much "},{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":"!\nI'll try working with this and analyze where I went wrong with the inner/outer constructor part! "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1615106974.495800","parent_user_id":"U01M2M35BFW"},{"client_msg_id":"7f26289f-c520-4240-8666-04f68a6dcf76","type":"message","text":"You could do it as an outer constructor as well:\n```julia&gt; struct BlockPartition{Dim,T} &lt;: PartitionMethod\n           sides::SVector{Dim,T}\n           neighbors::Bool\n       end\n\njulia&gt; BlockPartition(sides::SVector{Dim,T}, neighbors = false) where {Dim,T} = BlockPartition{Dim,T}(sides, neighbors)\nBlockPartition\n\njulia&gt; BlockPartition(SVector{3,UInt8}(1,2,3),false)\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], false)\n\njulia&gt; BlockPartition(SVector{3,UInt8}(1,2,3))\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], false)```","user":"USU9FRPEU","ts":"1615108573.499600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ulIK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could do it as an outer constructor as well:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct BlockPartition{Dim,T} <: PartitionMethod\n           sides::SVector{Dim,T}\n           neighbors::Bool\n       end\n\njulia> BlockPartition(sides::SVector{Dim,T}, neighbors = false) where {Dim,T} = BlockPartition{Dim,T}(sides, neighbors)\nBlockPartition\n\njulia> BlockPartition(SVector{3,UInt8}(1,2,3),false)\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], false)\n\njulia> BlockPartition(SVector{3,UInt8}(1,2,3))\nBlockPartition{3,UInt8}(UInt8[0x01, 0x02, 0x03], false)"}]}]}],"thread_ts":"1615106974.495800","parent_user_id":"U01M2M35BFW"}]