[{"client_msg_id":"b4a5b78e-2355-4c37-b341-cde93209e296","type":"message","text":"Hi, I’m running into problems with dynamics dispatch and I’m not sure how to resolve it. I define a struct\n```struct RNNODE{M&lt;:AbstractRNNDELayer,P,RE,T,A,K,F,S} &lt;: NeuralDELayer\n    model::M\n    p::P\n    re::RE\n    tspan::T\n    args::A\n    kwargs::K\n    sense\n    in::Integer\n    hidden::Integer\n    preprocess::F\n    #extendedstates::S\n\n    function RNNODE(model,tspan, args...;p = nothing, preprocess=permutedims,\n        sense = InterpolatingAdjoint(autojacvec=ZygoteVJP()), append_input=false, kwargs...)\n\n        _p,re = destructure(model)\n        nhidden = size(model.Wᵣ,2)\n        nin = size(model.Wᵢ,2)\n        if isnothing(p)\n            p = _p\n        end\n\n        new{typeof(model),typeof(p),typeof(re),\n            typeof(tspan),typeof(args),typeof(kwargs),typeof(preprocess),\n            append_input}(\n            model,p,re,tspan,args,kwargs,sense,nin,\n            nhidden, preprocess)\n    end\nend```\nwhich has the method\n```function (n::RNNODE{M,P,RE,T,A,K,F,S})(X::IT, p::P=n.p, u₀::UT=get_u₀(X,n)) where{M,P,RE,T,A,K,F,S, IT&lt;:Union{CubicSpline,CubicSplineRegularGrid},\n  UT&lt;:AbstractArray{&lt;:AbstractFloat}}\n\n    # dudt_= let re=n.re, x=X, f::F = n.preprocess\n    #   (u,p,t) -&gt; re(p)(u,f(X(t)))\n    # end\n    dudt_= let re=n.re, x=X\n      (u,p,t) -&gt; re(p)(u,f(X(t)))\n    end\n    ff = ODEFunction{false}(dudt_,tgrad=basic_tgrad)\n    prob = ODEProblem{false}(ff,u₀,getfield(n,:tspan),p)\n    solve(prob,n.args...;sense=n.sense, n.kwargs...)\nend```\nThe code is then called a bunch of times with a different `X` ’s, all of the same type. The profiler highlights the line `(u,p,t) -&gt; re(p)(u, f( X(t) ) )` .\n\nI tried hard-coding the preprocess function `f`, but that doesn’t solve the problem which leads me to believe that the issue is `X(t)`  , which is just some interpolation. NB. the coefficients of the interpolation are stored in another struct `X` .\n\nAny advice on how to deal with this annoying dynamic dispatch?","user":"UPM0H43C7","ts":"1612926407.440400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bvr23","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, I’m running into problems with dynamics dispatch and I’m not sure how to resolve it. I define a struct\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct RNNODE{M<:AbstractRNNDELayer,P,RE,T,A,K,F,S} <: NeuralDELayer\n    model::M\n    p::P\n    re::RE\n    tspan::T\n    args::A\n    kwargs::K\n    sense\n    in::Integer\n    hidden::Integer\n    preprocess::F\n    #extendedstates::S\n\n    function RNNODE(model,tspan, args...;p = nothing, preprocess=permutedims,\n        sense = InterpolatingAdjoint(autojacvec=ZygoteVJP()), append_input=false, kwargs...)\n\n        _p,re = destructure(model)\n        nhidden = size(model.Wᵣ,2)\n        nin = size(model.Wᵢ,2)\n        if isnothing(p)\n            p = _p\n        end\n\n        new{typeof(model),typeof(p),typeof(re),\n            typeof(tspan),typeof(args),typeof(kwargs),typeof(preprocess),\n            append_input}(\n            model,p,re,tspan,args,kwargs,sense,nin,\n            nhidden, preprocess)\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which has the method\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function (n::RNNODE{M,P,RE,T,A,K,F,S})(X::IT, p::P=n.p, u₀::UT=get_u₀(X,n)) where{M,P,RE,T,A,K,F,S, IT<:Union{CubicSpline,CubicSplineRegularGrid},\n  UT<:AbstractArray{<:AbstractFloat}}\n\n    # dudt_= let re=n.re, x=X, f::F = n.preprocess\n    #   (u,p,t) -> re(p)(u,f(X(t)))\n    # end\n    dudt_= let re=n.re, x=X\n      (u,p,t) -> re(p)(u,f(X(t)))\n    end\n    ff = ODEFunction{false}(dudt_,tgrad=basic_tgrad)\n    prob = ODEProblem{false}(ff,u₀,getfield(n,:tspan),p)\n    solve(prob,n.args...;sense=n.sense, n.kwargs...)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The code is then called a bunch of times with a different "},{"type":"text","text":"X","style":{"code":true}},{"type":"text","text":" ’s, all of the same type. The profiler highlights the line "},{"type":"text","text":"(u,p,t) -> re(p)(u, f( X(t) ) )","style":{"code":true}},{"type":"text","text":" .\n\nI tried hard-coding the preprocess function "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":", but that doesn’t solve the problem which leads me to believe that the issue is "},{"type":"text","text":"X(t)","style":{"code":true}},{"type":"text","text":"  , which is just some interpolation. NB. the coefficients of the interpolation are stored in another struct "},{"type":"text","text":"X","style":{"code":true}},{"type":"text","text":" .\n\nAny advice on how to deal with this annoying dynamic dispatch?"}]}]}],"thread_ts":"1612926407.440400","reply_count":2,"reply_users_count":2,"latest_reply":"1612926649.440700","reply_users":["B01J9QZ4SP8","UPM0H43C7"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612926409.440500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612926407.440400","parent_user_id":"UPM0H43C7"},{"client_msg_id":"9b571fa5-78a2-4803-b782-bdfcd776757e","type":"message","text":":bridge:","user":"UPM0H43C7","ts":"1612926649.440700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jJUT","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"bridge"}]}]}],"thread_ts":"1612926407.440400","parent_user_id":"UPM0H43C7"}]