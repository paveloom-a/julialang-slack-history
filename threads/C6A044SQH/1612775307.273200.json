[{"client_msg_id":"522b1920-24c5-409f-9edf-bfa7c1322f1f","type":"message","text":"How can I fetch the type parameters of a Tuple dynamically?","user":"ULX78CTC3","ts":"1612775307.273200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3HNLi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can I fetch the type parameters of a Tuple dynamically?"}]}]}],"thread_ts":"1612775307.273200","reply_count":11,"reply_users_count":4,"latest_reply":"1612776758.275700","reply_users":["B01J9QZ4SP8","U7HAYKY9X","ULX78CTC3","UDD5Z7FLZ"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612775308.273300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"},{"client_msg_id":"dbc322fa-9881-41d4-acd6-07fb88d5c743","type":"message","text":"`Tuple(typeof(T).parameters)`","user":"U7HAYKY9X","ts":"1612775415.273700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gwF6+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Tuple(typeof(T).parameters)","style":{"code":true}}]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"},{"client_msg_id":"7673372b-c95b-48f2-90fc-b9452d49d83f","type":"message","text":"Thanks. That doesn't seem to work vary precisely.","user":"ULX78CTC3","ts":"1612775468.273900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9hAv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. That doesn't seem to work vary precisely."}]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"},{"client_msg_id":"93bf9de3-41e2-4404-a360-6070d523c55e","type":"message","text":"I am trying to extract function signatures. And At the end I get something like `Tuple{typeof(function), ........sign..}`","user":"ULX78CTC3","ts":"1612775524.274100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d4r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am trying to extract function signatures. And At the end I get something like "},{"type":"text","text":"Tuple{typeof(function), ........sign..}","style":{"code":true}}]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"},{"client_msg_id":"5366cfde-11eb-443b-9913-a70003bf2391","type":"message","text":"So `Tuple(typeof(T).parameters)` will return `UnionAll`","user":"ULX78CTC3","ts":"1612775572.274300","team":"T68168MUP","edited":{"user":"ULX78CTC3","ts":"1612775626.000000"},"blocks":[{"type":"rich_text","block_id":"XPleP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So "},{"type":"text","text":"Tuple(typeof(T).parameters)","style":{"code":true}},{"type":"text","text":" will return "},{"type":"text","text":"UnionAll","style":{"code":true}}]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"},{"client_msg_id":"40ef7942-9ad9-4899-b049-4489fa907253","type":"message","text":"Can you post a MWE? Because, it shouldn't &gt;&lt;","user":"UDD5Z7FLZ","ts":"1612775780.274600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vqiY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you post a MWE? Because, it shouldn't ><"}]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"},{"client_msg_id":"30d31d38-f1fc-4288-b23d-d8126a1b8d10","type":"message","text":"```julia&gt; function test(a::Integer, b::Integer, c::Integer)\n       end\ntest (generic function with 2 methods)\njulia&gt; function extractSig(x) methods(x).ms[1].sig end\njulia&gt; extractSig(test)\nTuple{typeof(test),Integer,Integer,Integer}```\n","user":"ULX78CTC3","ts":"1612775830.274800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zhzLM","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function test(a::Integer, b::Integer, c::Integer)\n       end\ntest (generic function with 2 methods)\njulia> function extractSig(x) methods(x).ms[1].sig end\njulia> extractSig(test)\nTuple{typeof(test),Integer,Integer,Integer}"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"},{"client_msg_id":"f549b9aa-1509-4eb6-8e24-dd75aa29586e","type":"message","text":"That does work correctly. It just has the function as the first param. You can just pass it to `Base.tuple_type_tail` :\n```julia&gt; test(::Integer, ::String, ::Float64) = nothing\ntest (generic function with 1 method)\n\njulia&gt; Base.tuple_type_tail(methods(test).ms[1].sig)\nTuple{Integer, String, Float64}```","user":"U7HAYKY9X","ts":"1612776072.275000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hBR2i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That does work correctly. It just has the function as the first param. You can just pass it to "},{"type":"text","text":"Base.tuple_type_tail","style":{"code":true}},{"type":"text","text":" :\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> test(::Integer, ::String, ::Float64) = nothing\ntest (generic function with 1 method)\n\njulia> Base.tuple_type_tail(methods(test).ms[1].sig)\nTuple{Integer, String, Float64}"}]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"},{"client_msg_id":"d0a2d41d-8362-45c8-b2c9-7691e8335494","type":"message","text":"Woa. Thanks a ton!!","user":"ULX78CTC3","ts":"1612776203.275200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=3cHq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Woa. Thanks a ton!!"}]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3","reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"ed9b1390-3f49-406e-bda0-5f62de4f8cdd","type":"message","text":"I'd just mention that these functions are internal, so they can change in future minor releases of Julia without warning. So you have to be careful to rely on them in scripts. :+1:","user":"U7HAYKY9X","ts":"1612776551.275500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=DEid","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd just mention that these functions are internal, so they can change in future minor releases of Julia without warning. So you have to be careful to rely on them in scripts. "},{"type":"emoji","name":"+1"}]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"},{"client_msg_id":"793167be-b881-4ea2-8178-49434f11de7a","type":"message","text":"Sure. I'll keep that in mind. Thanks again","user":"ULX78CTC3","ts":"1612776758.275700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ShIdF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure. I'll keep that in mind. Thanks again"}]}]}],"thread_ts":"1612775307.273200","parent_user_id":"ULX78CTC3"}]