[{"client_msg_id":"7c430778-1ea5-4a34-b4cf-bf59c185a0b8","type":"message","text":"How do I forcefully import all functions/macros from my Package into my testing environment. I currently have this monstrosity at the top of my `runtests.jl`\n\n```import AutoActuary: add_namespace, add_t_index, has_symbol, is_t_dottable, t_to_dot, ispreprocessable, remove_linenumbernodes, \n                    get_variables, t_linearcombinations, replace_variables, replace_variables, get_t_offsets, cycleclusters, \n                    add_name!, add_edge!, set_name!, get_name, get_id, has_name, create_a_dependancy_graph```","user":"U018FJVBXPD","ts":"1612357400.475100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WQI2Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do I forcefully import all functions/macros from my Package into my testing environment. I currently have this monstrosity at the top of my "},{"type":"text","text":"runtests.jl","style":{"code":true}},{"type":"text","text":"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"import AutoActuary: add_namespace, add_t_index, has_symbol, is_t_dottable, t_to_dot, ispreprocessable, remove_linenumbernodes, \n                    get_variables, t_linearcombinations, replace_variables, replace_variables, get_t_offsets, cycleclusters, \n                    add_name!, add_edge!, set_name!, get_name, get_id, has_name, create_a_dependancy_graph"}]}]}],"thread_ts":"1612357400.475100","reply_count":13,"reply_users_count":6,"latest_reply":"1612361268.478400","reply_users":["B01J9QZ4SP8","U019K6Q9N15","U018FJVBXPD","USU9FRPEU","U85R3JJ8L","U67SCG4HG"],"subscribed":false,"reactions":[{"name":"bridge","users":["U018FJVBXPD"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612357402.475200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/how-do-i-forcefully-import-all-functions-macros-from-my-package-into-my-testing-en/54529|to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1612357445.475500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"c5f6f25a-faeb-4645-9a2a-a3ede4df3c98","type":"message","text":"Wouldn't `using AutoActuary` do the trick?","user":"U019K6Q9N15","ts":"1612357666.475700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gfIFZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wouldn't "},{"type":"text","text":"using AutoActuary","style":{"code":true}},{"type":"text","text":" do the trick?"}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"61159378-2019-41dd-8c66-0221a07a12a3","type":"message","text":"Unless the issue is that they aren't exported.","user":"U019K6Q9N15","ts":"1612357696.475900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yEL8i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Unless the issue is that they aren't exported."}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"fdcf5d4e-f4fe-4b5a-af8a-04e4c66e754e","type":"message","text":"Yes, they aren't exported, but I still want to test then without having to type `AutoActuary.foo` or import `foo` explicitely.","user":"U018FJVBXPD","ts":"1612357765.476100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Msr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, they aren't exported, but I still want to test then without having to type "},{"type":"text","text":"AutoActuary.foo","style":{"code":true}},{"type":"text","text":" or import "},{"type":"text","text":"foo","style":{"code":true}},{"type":"text","text":" explicitely."}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"952f8547-7b47-4aa8-b760-3bc640c891f0","type":"message","text":":shrug:I actually don't think explicit imports are very monstruous at all. I'd be less comfortable with importing all the non-exported members of a module with some hack than just writing things out.\n\nBut perhaps you and I differ in a sense of style.","user":"U019K6Q9N15","ts":"1612357926.476300","team":"T68168MUP","edited":{"user":"U019K6Q9N15","ts":"1612357941.000000"},"blocks":[{"type":"rich_text","block_id":"fNIP","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"shrug"},{"type":"text","text":"I actually don't think explicit imports are very monstruous at all. I'd be less comfortable with importing all the non-exported members of a module with some hack than just writing things out.\n\nBut perhaps you and I differ in a sense of style."}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"844580d2-bccb-4ffe-a772-4339e57323b2","type":"message","text":"I like explicit import and also likes to hide most of my internal functions, but in the case of testing, I would like to have something as close to \"living in the same namespace\" as possible.","user":"U018FJVBXPD","ts":"1612358064.476600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PAyix","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I like explicit import and also likes to hide most of my internal functions, but in the case of testing, I would like to have something as close to \"living in the same namespace\" as possible."}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"08f95213-323f-4326-9829-23e5a2ce7e6c","type":"message","text":"What happen if you implemented the tests within the module itself and then just ran them from runtests.jl ?","user":"USU9FRPEU","ts":"1612358349.476800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6XowR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What happen if you implemented the tests within the module itself and then just ran them from runtests.jl ?"}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"d3eede6b-5190-4636-abc1-485ab1424b28","type":"message","text":"```for i in names(AutoActuary, all = true);try Main.eval(Meta.parse(\"import AutoActuary: \" * string(i))); catch e; end; end```\n","user":"U85R3JJ8L","ts":"1612358389.477000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"in1","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for i in names(AutoActuary, all = true);try Main.eval(Meta.parse(\"import AutoActuary: \" * string(i))); catch e; end; end"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"cd661c84-d2e8-4854-b8e6-bfab35d23adc","type":"message","text":"`import AutoActuary as aa` and then `aa.foo` etc?","user":"U67SCG4HG","ts":"1612358453.477200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NpQpE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"import AutoActuary as aa","style":{"code":true}},{"type":"text","text":" and then "},{"type":"text","text":"aa.foo","style":{"code":true}},{"type":"text","text":" etc?"}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"1a5d8e15-7ba0-46bc-b881-b36d9f6e4eb5","type":"message","text":"<@USU9FRPEU>, like having them in a function and then call that function from runtests.jl? I haven't thought about that, that might work. But I think it's nice having all the tests at the testy location.","user":"U018FJVBXPD","ts":"1612358647.477400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vcolg","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":", like having them in a function and then call that function from runtests.jl? I haven't thought about that, that might work. But I think it's nice having all the tests at the testy location."}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"e14c1581-9abc-49dd-b74f-5f810ec7820f","type":"message","text":"I think I'm going to use this function, and then when I get closer to a \"first release\" remove it with the explicit names.\n\n```exportall() = begin\n    for i in names(AutoActuary, all=true)\n        if i in (:eval, :include) \n            continue \n        end\n        try \n            Main.eval(Meta.parse(\"import AutoActuary: $(i)\"))\n        catch e\n        end\n    end\nend```","user":"U018FJVBXPD","ts":"1612359326.478000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E=0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I'm going to use this function, and then when I get closer to a \"first release\" remove it with the explicit names.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"exportall() = begin\n    for i in names(AutoActuary, all=true)\n        if i in (:eval, :include) \n            continue \n        end\n        try \n            Main.eval(Meta.parse(\"import AutoActuary: $(i)\"))\n        catch e\n        end\n    end\nend"}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"cec4282a-51cd-42e7-b0b1-4f34afec1e99","type":"message","text":"Hmmm, but you end up losing all the VSCode clickiness action.","user":"U018FJVBXPD","ts":"1612361268.478400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1tnF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmm, but you end up losing all the VSCode clickiness action."}]}]}],"thread_ts":"1612357400.475100","parent_user_id":"U018FJVBXPD"}]