[{"client_msg_id":"59c68a64-a03b-4eed-8dfb-9af14ba26f6f","type":"message","text":"Hey all, super confused by variables scope in Julia. I have the following function\n```function init_agents(;teams, workpatterns)::Vector{Agent}\n    for (teamname, info) in teams\n        wp = workpatterns\n        if haskey(info, \"workpatterns\")\n            for (activitytype, activityspecs) in info[\"workpatterns\"]\n                wp[activitytype] = activityspecs\n            end\n        end\n        print(teamname, \" \", workpatterns, \"\\n\")\n    end\n    return []\nend```\n Variable `wp` is, I assume, a variable that only exists within the `for` scope, hence is reset for each iteration. However, when I update `wp[activitytype] = activityspecs`, it looks like it impacts the `workpatterns` variable itself.\nMy understanding is that the `wp = workpatterns` instruction simply creates a new reference to the `workpatterns` variable, hence propagating any changes made to `wp` to `workpatterns`\nHow can I make sure that *it doesn’t*? I heard about `@view` but not sure if it’s the correct solution here.","user":"U01EZ6VN118","ts":"1612388278.015600","team":"T68168MUP","edited":{"user":"U01EZ6VN118","ts":"1612388473.000000"},"blocks":[{"type":"rich_text","block_id":"Xca","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey all, super confused by variables scope in Julia. I have the following function\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function init_agents(;teams, workpatterns)::Vector{Agent}\n    for (teamname, info) in teams\n        wp = workpatterns\n        if haskey(info, \"workpatterns\")\n            for (activitytype, activityspecs) in info[\"workpatterns\"]\n                wp[activitytype] = activityspecs\n            end\n        end\n        print(teamname, \" \", workpatterns, \"\\n\")\n    end\n    return []\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":" Variable "},{"type":"text","text":"wp","style":{"code":true}},{"type":"text","text":" is, I assume, a variable that only exists within the "},{"type":"text","text":"for","style":{"code":true}},{"type":"text","text":" scope, hence is reset for each iteration. However, when I update "},{"type":"text","text":"wp[activitytype] = activityspecs","style":{"code":true}},{"type":"text","text":", it looks like it impacts the "},{"type":"text","text":"workpatterns","style":{"code":true}},{"type":"text","text":" variable itself.\nMy understanding is that the "},{"type":"text","text":"wp = workpatterns","style":{"code":true}},{"type":"text","text":" instruction simply creates a new reference to the "},{"type":"text","text":"workpatterns","style":{"code":true}},{"type":"text","text":" variable, hence propagating any changes made to "},{"type":"text","text":"wp","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"workpatterns","style":{"code":true}},{"type":"text","text":"\nHow can I make sure that "},{"type":"text","text":"it doesn’t","style":{"bold":true}},{"type":"text","text":"? I heard about "},{"type":"text","text":"@view","style":{"code":true}},{"type":"text","text":" but not sure if it’s the correct solution here."}]}]}],"thread_ts":"1612388278.015600","reply_count":28,"reply_users_count":4,"latest_reply":"1612391284.028400","reply_users":["B01J9QZ4SP8","U6740K1SP","U01EZ6VN118","UH24GRBLL"],"subscribed":false,"reactions":[{"name":"bridge","users":["U01EZ6VN118"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612388280.015700","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/hey-all-super-confused-by-variables-scope-in-julia-i-have-the-following-function/54566|to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1612388314.016000","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"eb51b150-4d17-409c-8920-2e7d1919d61e","type":"message","text":"`wp = copy(workpatterns)`","user":"U6740K1SP","ts":"1612388495.016300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aHp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"wp = copy(workpatterns)","style":{"code":true}}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"72675b18-799f-4d1e-9c6b-a9632ee3bc28","type":"message","text":"identifiers in Julia are just names.  You can give two different names to the same object","user":"U6740K1SP","ts":"1612388523.016500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n/DEu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"identifiers in Julia are just names.  You can give two different names to the same object"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"4adf6fd6-11dc-4a21-8bdf-2f91074fccdc","type":"message","text":"it doesn’t matter which name you use to mutate (change) something about the object.  You’re changing the object, not anything to do with the name you’re happening to use","user":"U6740K1SP","ts":"1612388564.016800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"siB0F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it doesn’t matter which name you use to mutate (change) something about the object.  You’re changing the object, not anything to do with the name you’re happening to use"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","U01EZ6VN118","UGR3910CQ"],"count":3}]},{"client_msg_id":"c4c64fca-baf8-4441-97f9-15b2d91168be","type":"message","text":"Makes sense — however, I would expect the function *NOT* to change the actual variables being pass through as an argument.\n```const WORKPATTERNS = ...\ninit_agents(teams=TEAMS, workpatterns=WORKPATTERNS)```","user":"U01EZ6VN118","ts":"1612388848.017100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hCSjy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Makes sense — however, I would expect the function "},{"type":"text","text":"NOT","style":{"bold":true}},{"type":"text","text":" to change the actual variables being pass through as an argument.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"const WORKPATTERNS = ...\ninit_agents(teams=TEAMS, workpatterns=WORKPATTERNS)"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"771a7c44-4373-48e2-a71d-517140242a7a","type":"message","text":"actually changes `WORKPATTERNS` const at each iteration.","user":"U01EZ6VN118","ts":"1612388879.017400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"te8b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"actually changes "},{"type":"text","text":"WORKPATTERNS","style":{"code":true}},{"type":"text","text":" const at each iteration."}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"b494b398-c8ba-4f1e-a759-9dd51bb2eec0","type":"message","text":"In short, I understand why changes made to `wp` propagate to `workpatterns`, I just don’t understand why it propagates further to `WORKPATTERNS`","user":"U01EZ6VN118","ts":"1612388943.017600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mdFnJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In short, I understand why changes made to "},{"type":"text","text":"wp","style":{"code":true}},{"type":"text","text":" propagate to "},{"type":"text","text":"workpatterns","style":{"code":true}},{"type":"text","text":", I just don’t understand why it propagates further to "},{"type":"text","text":"WORKPATTERNS","style":{"code":true}}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"019f067c-33c5-49d5-80d4-99b922f8266e","type":"message","text":"`const` is a promise to the compiler that you don't change the thing the name points to, so it may inline the global variable","user":"UH24GRBLL","ts":"1612388964.017800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"stBic","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":" is a promise to the compiler that you don't change the thing the name points to, so it may inline the global variable"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"ae987ade-066e-460c-b49b-0807cd201310","type":"message","text":"it also fixes the _type_ of the binding, but not it's value - thus, mutable containers can still change their contents","user":"UH24GRBLL","ts":"1612388983.018000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/tHR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it also fixes the "},{"type":"text","text":"type","style":{"italic":true}},{"type":"text","text":" of the binding, but not it's value - thus, mutable containers can still change their contents"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"cb153a09-b1e8-4a9a-b888-5bf30f8cf5d7","type":"message","text":"the `workpatterns` default argument by default points to the same thing `WORKPATTERNS` does, which can be modified if it's a mutable container","user":"UH24GRBLL","ts":"1612389015.018200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pYM3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the "},{"type":"text","text":"workpatterns","style":{"code":true}},{"type":"text","text":" default argument by default points to the same thing "},{"type":"text","text":"WORKPATTERNS","style":{"code":true}},{"type":"text","text":" does, which can be modified if it's a mutable container"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"3c85dfad-ab1f-484c-bd4d-31d0f2485484","type":"message","text":"it's the same thing as when you do `wp = workpatterns` - different names/bindings referring to the same object","user":"UH24GRBLL","ts":"1612389032.018400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612389047.000000"},"blocks":[{"type":"rich_text","block_id":"G6hTB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's the same thing as when you do "},{"type":"text","text":"wp = workpatterns","style":{"code":true}},{"type":"text","text":" - different names/bindings referring to the same object"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"a97eb0b6-6df1-4e29-a8f8-6787960c71f6","type":"message","text":"So I need to “cut” the link with `wp = copy(workpatterns)`  at the top of my function?","user":"U01EZ6VN118","ts":"1612389100.018700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QD40","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I need to “cut” the link with "},{"type":"text","text":"wp = copy(workpatterns)","style":{"code":true}},{"type":"text","text":"  at the top of my function?"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"c8f54db4-5f1c-4f97-8d3d-417129cea252","type":"message","text":"you can also do `workpatterns=copy(WORKPATTERNS)` as the default argument","user":"UH24GRBLL","ts":"1612389187.018900","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612389192.000000"},"blocks":[{"type":"rich_text","block_id":"9gG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can also do "},{"type":"text","text":"workpatterns=copy(WORKPATTERNS)","style":{"code":true}},{"type":"text","text":" as the default argument"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"7ecdd221-3726-4367-a4bc-88cb2d7bf565","type":"message","text":"in general though it's best to avoid global variables altogether","user":"UH24GRBLL","ts":"1612389205.019200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4agnM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in general though it's best to avoid global variables altogether"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"d19947c3-dec3-46ae-8340-3de2efeca883","type":"message","text":"I see","user":"U01EZ6VN118","ts":"1612389206.019400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dJf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"89dce343-3886-4b7b-9441-8ab4ffef1d0c","type":"message","text":"yes I feel that’s why developing with REPL gives you bad habit","user":"U01EZ6VN118","ts":"1612389226.019600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j4o4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes I feel that’s why developing with REPL gives you bad habit"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"4a21ab9a-cda7-41aa-9f6f-08f6f58567c3","type":"message","text":"have you tried Revise.jl and putting everything into functions?","user":"UH24GRBLL","ts":"1612389241.019800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ycY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"have you tried Revise.jl and putting everything into functions?"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"339d2663-b137-4092-bfc0-852dd9058bad","type":"message","text":"particularly using a `main` entry point, where you put everything you'd usually put in global scope (except other functions)","user":"UH24GRBLL","ts":"1612389253.020000","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612389268.000000"},"blocks":[{"type":"rich_text","block_id":"qhND","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"particularly using a "},{"type":"text","text":"main","style":{"code":true}},{"type":"text","text":" entry point, where you put everything you'd usually put in global scope (except other functions)"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"45e3ddbf-2a8f-47bb-9ca8-0dc8b05b775a","type":"message","text":"Not yet.","user":"U01EZ6VN118","ts":"1612389270.020300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2xP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not yet."}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"07988b93-26d4-4d28-9951-b9ea337c2cde","type":"message","text":"I guess I have been using global variables as a way to store sample data to test my functions","user":"U01EZ6VN118","ts":"1612389283.020600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"my+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I have been using global variables as a way to store sample data to test my functions"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"4947586b-ae83-4065-b54f-f102c760a53b","type":"message","text":"But I might still carry some idiomatic python into Julia","user":"U01EZ6VN118","ts":"1612389296.020800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x+1N1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I might still carry some idiomatic python into Julia"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"4b4ab343-6e09-4cc1-8794-679203a532ed","type":"message","text":"Oh haven’t heard about entry point — what’s the default structure?","user":"U01EZ6VN118","ts":"1612389314.021200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H9O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh haven’t heard about entry point — what’s the default structure?"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"86114e28-dc27-4a6b-94c6-bebfdf13bc54","type":"message","text":"I've compiled the workflow I use here <https://discourse.julialang.org/t/scripting-like-a-julian/50707>","user":"UH24GRBLL","ts":"1612389320.021400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1612389324.000000"},"attachments":[{"service_name":"JuliaLang","title":"Scripting like a Julian","title_link":"https://discourse.julialang.org/t/scripting-like-a-julian/50707","text":"I’ve been talking to a few people and since this topic comes up regularly, I thought I’d write up my workflow for writing “scripts”. I don’t have a standard blog or place to put this, so I thought I’d put it here and tag it as guide. If this is misplaced or inappropriate, please tell so that I can move it to some other, more permanent place. What you’ll need Texteditor of your choice Revise.jl That’s it! Background Scripting is usually done in a haphazard manner, just throwing things in a fil...","fallback":"JuliaLang: Scripting like a Julian","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"2 mins :clock2:","short":true},{"title":"Likes","value":"32 :heart:","short":true}],"ts":1606245696,"from_url":"https://discourse.julialang.org/t/scripting-like-a-julian/50707","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/scripting-like-a-julian/50707"}],"blocks":[{"type":"rich_text","block_id":"SUToZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've compiled the workflow I use here "},{"type":"link","url":"https://discourse.julialang.org/t/scripting-like-a-julian/50707"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"ceaa37cf-a048-4dfd-9237-47f3a9682ea9","type":"message","text":"Thanks !","user":"U01EZ6VN118","ts":"1612389334.021800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UOVUd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks !"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"26c89f9c-99b8-41e4-b8eb-63ecbfc8c195","type":"message","text":"as for Revise: <https://juliahub.com/ui/Packages/Revise/M1Qoh/3.1.11>","user":"UH24GRBLL","ts":"1612389460.022000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lce","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as for Revise: "},{"type":"link","url":"https://juliahub.com/ui/Packages/Revise/M1Qoh/3.1.11"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"c60eb690-0ebd-4130-95dc-c7f4e6e6c932","type":"message","text":"```const WORKPATTERNS = ...\ninit_agents(teams=TEAMS, workpatterns=WORKPATTERNS)```\nThis is exactly the same concept as `wp = workpatterns`.  `const` is just a promise that you won’t use the *name* for anything else.  You’re free to mutate the object it names (if it’s mutable, that is).","user":"U6740K1SP","ts":"1612391190.028100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hcvkP","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"const WORKPATTERNS = ...\ninit_agents(teams=TEAMS, workpatterns=WORKPATTERNS)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"This is exactly the same concept as "},{"type":"text","text":"wp = workpatterns","style":{"code":true}},{"type":"text","text":".  "},{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":" is just a promise that you won’t use the "},{"type":"text","text":"name","style":{"bold":true}},{"type":"text","text":" for anything else.  You’re free to mutate the object it names (if it’s mutable, that is)."}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"},{"client_msg_id":"89a39fae-b360-4203-8f97-70665fee320c","type":"message","text":"consts, arguments, default arguments, locals, globals… all just names","user":"U6740K1SP","ts":"1612391284.028400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YJGON","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"consts, arguments, default arguments, locals, globals… all just names"}]}]}],"thread_ts":"1612388278.015600","parent_user_id":"U01EZ6VN118"}]