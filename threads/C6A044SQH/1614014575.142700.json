[{"client_msg_id":"7cef685a-5c5f-48e9-8959-9443e2b27daf","type":"message","text":"How can I display all Float64 multidimensional arrays as vectors? I tried the following but it stackoverflows:\n```Base.show(io::IO, x::Array{Float64}) = print(io, vec(x))```\nProbably it is running into a deadlock.\n\nMinimal example:\n```julia&gt; Base.show(io::IO, x::Array{Float64}) = print(io, vec(x))\n\njulia&gt; struct Factor\n         vars::Array{Int64}\n         vals::Array{Float64}\n       end\n\njulia&gt; Factor(rand(Int64, 3,3), rand(Float64,3,3))\nFactor([-7326548212681664508 -2347470899862635297 -3952357720825878718; 1583175751534134794 8338098278149951693 -2009600773132035007; 9052488569318294914 4552410804259587993 -309308781825388876], Error showing value of type Factor:\nERROR: StackOverflowError:\nStacktrace:\n     [1] lock(rl::ReentrantLock)\n       @ Base ./lock.jl:86\n     [2] lock\n       @ ./stream.jl:282 [inlined]\n     [3] lock```","user":"UEA5FBCRH","ts":"1614014575.142700","team":"T68168MUP","edited":{"user":"UEA5FBCRH","ts":"1614014999.000000"},"blocks":[{"type":"rich_text","block_id":"PqX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can I display all Float64 multidimensional arrays as vectors? I tried the following but it stackoverflows:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Base.show(io::IO, x::Array{Float64}) = print(io, vec(x))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Probably it is running into a deadlock.\n\nMinimal example:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Base.show(io::IO, x::Array{Float64}) = print(io, vec(x))\n\njulia> struct Factor\n         vars::Array{Int64}\n         vals::Array{Float64}\n       end\n\njulia> Factor(rand(Int64, 3,3), rand(Float64,3,3))\nFactor([-7326548212681664508 -2347470899862635297 -3952357720825878718; 1583175751534134794 8338098278149951693 -2009600773132035007; 9052488569318294914 4552410804259587993 -309308781825388876], Error showing value of type Factor:\nERROR: StackOverflowError:\nStacktrace:\n     [1] lock(rl::ReentrantLock)\n       @ Base ./lock.jl:86\n     [2] lock\n       @ ./stream.jl:282 [inlined]\n     [3] lock"}]}]}],"thread_ts":"1614014575.142700","reply_count":5,"reply_users_count":3,"latest_reply":"1614015742.144400","reply_users":["B01J9QZ4SP8","UBF9YRB6H","UEA5FBCRH"],"subscribed":false,"reactions":[{"name":"bridge","users":["UEA5FBCRH"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614014577.142800","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614014575.142700","parent_user_id":"UEA5FBCRH"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/55787| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1614014681.143100","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614014575.142700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"ccb49c99-4b4e-425f-a1e8-2c1f093ed181","type":"message","text":"First, why do this instead of just writing your own `my_print` function?\n\nSecond, you need to add another method, for `Base.show(io::IO, x::Array{Float64, 1}) = print(io, vec(x))`. This avoids the stackoverflow.\n\nBut this still doesn't work, because printing is quite complicated and I think it would require hunting down a lot of methods to try and override printing for arrays.","user":"UBF9YRB6H","ts":"1614015160.143400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C=jEF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"First, why do this instead of just writing your own "},{"type":"text","text":"my_print","style":{"code":true}},{"type":"text","text":" function?\n\nSecond, you need to add another method, for "},{"type":"text","text":"Base.show(io::IO, x::Array{Float64, 1}) = print(io, vec(x))","style":{"code":true}},{"type":"text","text":". This avoids the stackoverflow.\n\nBut this still doesn't work, because printing is quite complicated and I think it would require hunting down a lot of methods to try and override printing for arrays."}]}]}],"thread_ts":"1614014575.142700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"a9c333dc-de23-4e88-8734-8b00e94e3987","type":"message","text":"Hmm I see. I thought this would be straightforward to do with a show method. I'll write my own print function. Thanks.","user":"UEA5FBCRH","ts":"1614015253.143600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4k84X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm I see. I thought this would be straightforward to do with a show method. I'll write my own print function. Thanks."}]}]}],"thread_ts":"1614014575.142700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"efea9b4e-24ef-412f-a1b1-6521a0484245","type":"message","text":"The answer to your first question is that I like the automatic printing when evaluated in the REPL.","user":"UEA5FBCRH","ts":"1614015742.144400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kFzc9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The answer to your first question is that I like the automatic printing when evaluated in the REPL."}]}]}],"thread_ts":"1614014575.142700","parent_user_id":"UEA5FBCRH"}]