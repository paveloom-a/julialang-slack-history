[{"client_msg_id":"16dfc024-f4d0-4493-b982-9f4580627fea","type":"message","text":"Hi, I'm in a situation where I require a sort of nested `mapreduce` function, on arrays with different nesting levels, but of the same element type. I already have a nested version of `eltype` and `copyto!` but I can't code a mapreduce function on this case. Ideally, one way to do this is via a nested `flatten`, but I don't know where to find such function, any ideas?","user":"UKG4WF8PJ","ts":"1617175831.078100","team":"T68168MUP","edited":{"user":"UKG4WF8PJ","ts":"1617175897.000000"},"blocks":[{"type":"rich_text","block_id":"RKO/z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, I'm in a situation where I require a sort of nested "},{"type":"text","text":"mapreduce","style":{"code":true}},{"type":"text","text":" function, on arrays with different nesting levels, but of the same element type. I already have a nested version of "},{"type":"text","text":"eltype","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"copyto!","style":{"code":true}},{"type":"text","text":" but I can't code a mapreduce function on this case. Ideally, one way to do this is via a nested "},{"type":"text","text":"flatten","style":{"code":true}},{"type":"text","text":", but I don't know where to find such function, any ideas?"}]}]}],"thread_ts":"1617175831.078100","reply_count":1,"reply_users_count":1,"latest_reply":"1617189214.084700","reply_users":["URN898S15"],"is_locked":false,"subscribed":false},{"client_msg_id":"09bb7ed4-8171-453b-bc18-79f3bd1dc081","type":"message","text":"Sounds like you need a recursive method to walk the nesting?","user":"URN898S15","ts":"1617189214.084700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MkFz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sounds like you need a recursive method to walk the nesting?"}]}]}],"thread_ts":"1617175831.078100","parent_user_id":"UKG4WF8PJ"}]