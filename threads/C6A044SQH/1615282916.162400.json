[{"client_msg_id":"46e57746-1621-4aef-94a5-1f2977e27302","type":"message","text":"I have a range type in Julia, what's the fastest way to select indices which are not in that range? For example my string is \"ABCDEF\" and my indices are 2:5 which would select \"BCDE\", how can I select indices not in that range, so result should be \"AF\", basically removing everything outside of indices","user":"UE0Q72VV0","ts":"1615282916.162400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3K6n4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a range type in Julia, what's the fastest way to select indices which are not in that range? For example my string is \"ABCDEF\" and my indices are 2:5 which would select \"BCDE\", how can I select indices not in that range, so result should be \"AF\", basically removing everything outside of indices"}]}]}],"thread_ts":"1615282916.162400","reply_count":8,"reply_users_count":4,"latest_reply":"1615283492.164500","reply_users":["B01J9QZ4SP8","UE0Q72VV0","UH24GRBLL","U7HAYKY9X"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615282918.162500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615282916.162400","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"af76902c-8d9d-4bf5-a59f-c7eb0d19d1cf","type":"message","text":"I guess I could use list comprehension or loop, but I wonder if there is a neater way.","user":"UE0Q72VV0","ts":"1615282973.162900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Is+J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I could use list comprehension or loop, but I wonder if there is a neater way."}]}]}],"thread_ts":"1615282916.162400","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"9143ca77-414a-4202-b52c-f69604af1fab","type":"message","text":"if you index directly, you can do `str[begin:end ∩ range]`","user":"UH24GRBLL","ts":"1615283127.163100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Iw3B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you index directly, you can do "},{"type":"text","text":"str[begin:end ∩ range]","style":{"code":true}}]}]}],"thread_ts":"1615282916.162400","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"d00b2d6f-146c-4e04-b323-bcac15df444b","type":"message","text":"what do you want to do with those, if I may ask?","user":"UH24GRBLL","ts":"1615283143.163300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7oo1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you want to do with those, if I may ask?"}]}]}],"thread_ts":"1615282916.162400","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"e1ab410b-e877-4575-a1d7-ddcda9c2db6b","type":"message","text":"I don't think there is such a function built-in in Base. You can do `str[setdiff(eachindex(str), 2:5)]` , but that's horrifically inefficient.","user":"U7HAYKY9X","ts":"1615283172.163500","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1615283221.000000"},"blocks":[{"type":"rich_text","block_id":"K7N0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think there is such a function built-in in Base. You can do "},{"type":"text","text":"str[setdiff(eachindex(str), 2:5)]","style":{"code":true}},{"type":"text","text":" , but that's horrifically inefficient."}]}]}],"thread_ts":"1615282916.162400","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"493b768c-dc58-4833-8ffe-066085972da2","type":"message","text":"I think\n```function invert_index(s::AbstractString, rng::UnitRange)\n    isempty(rng) &amp;&amp; return s\n    s[1:first(rng)-1] * s[last(rng):end]\nend```\nis probably the best","user":"U7HAYKY9X","ts":"1615283315.163800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TrPu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function invert_index(s::AbstractString, rng::UnitRange)\n    isempty(rng) && return s\n    s[1:first(rng)-1] * s[last(rng):end]\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"is probably the best"}]}]}],"thread_ts":"1615282916.162400","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"6c7b9f86-1d0b-4ed0-b784-f460154012e2","type":"message","text":"(btw, no reason not to use a loop if it works for the usecase, they're fast in julia!)","user":"UH24GRBLL","ts":"1615283368.164200","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1615283435.000000"},"blocks":[{"type":"rich_text","block_id":"Cf7J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(btw, no reason not to use a loop if it works for the usecase, they're fast in julia!)"}]}]}],"thread_ts":"1615282916.162400","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"7bd17ac9-c427-48f0-82f4-1b0ef7e13703","type":"message","text":"<@U7HAYKY9X> That works! Thanks!","user":"UE0Q72VV0","ts":"1615283492.164500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3XR","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" That works! Thanks!"}]}]}],"thread_ts":"1615282916.162400","parent_user_id":"UE0Q72VV0","reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]}]