[{"client_msg_id":"aec4ca7d-2c37-4aa8-b180-08dbf861d72a","type":"message","text":"Hi, I am trying to use Clang to generate libpcap bindings, with the following snippet\n```using Clang\nusing Clang.LibClang.Clang_jll\n# LIBCLANG_HEADERS are those headers to be wrapped.\nconst LIBPCAP_INCLUDE = \"/usr/include/pcap/\"\nheaders_extra = [\"/usr/include/x86_64-linux-gnu/sys/types.h\"]\nheaders_pcap = [joinpath(LIBPCAP_INCLUDE, header) for header in readdir(LIBPCAP_INCLUDE) if endswith(header, \".h\")]\nconst LIBPCAP_HEADERS = [headers_pcap; headers_extra]\nwc = init(; headers = LIBPCAP_HEADERS,\n            output_file = joinpath(@__DIR__, \"libpcap_api.jl\"),\n            common_file = joinpath(@__DIR__, \"libpcap_common.jl\"),\n            clang_includes = vcat(LIBPCAP_INCLUDE, CLANG_INCLUDE),\n            clang_args = [\"-I\", joinpath(LIBPCAP_INCLUDE, \"..\")],\n            header_wrapped = (root, current)-&gt;root == current,\n            header_library = x-&gt;\"libpcap\",\n            clang_diagnostics = true,\n            )\nrun(wc)```\nHowever, I have two problems\n\n```/usr/include/pcap/bpf.h:116:2: error: unknown type name 'u_int'\n/usr/include/pcap/bpf.h:250:2: error: unknown type name 'u_short'\n/usr/include/pcap/bpf.h:251:2: error: unknown type name 'u_char'\n/usr/include/pcap/namedb.h:58:51: error: unknown type name 'FILE'```\nNot sure where these are defined, and another one is that all functions defined in the header start with PCAP_API so I get error\n```/usr/include/pcap/namedb.h:58:1: error: unknown type name 'PCAP_API'```\nIt seems like it's something similar to extern maybe, but allowing switching different APIs? I am not quite sure if I understand those headers.\n\nAnyone tried this or can help?","user":"UE0Q72VV0","ts":"1613898732.035300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DtCtj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, I am trying to use Clang to generate libpcap bindings, with the following snippet\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Clang\nusing Clang.LibClang.Clang_jll\n# LIBCLANG_HEADERS are those headers to be wrapped.\nconst LIBPCAP_INCLUDE = \"/usr/include/pcap/\"\nheaders_extra = [\"/usr/include/x86_64-linux-gnu/sys/types.h\"]\nheaders_pcap = [joinpath(LIBPCAP_INCLUDE, header) for header in readdir(LIBPCAP_INCLUDE) if endswith(header, \".h\")]\nconst LIBPCAP_HEADERS = [headers_pcap; headers_extra]\nwc = init(; headers = LIBPCAP_HEADERS,\n            output_file = joinpath(@__DIR__, \"libpcap_api.jl\"),\n            common_file = joinpath(@__DIR__, \"libpcap_common.jl\"),\n            clang_includes = vcat(LIBPCAP_INCLUDE, CLANG_INCLUDE),\n            clang_args = [\"-I\", joinpath(LIBPCAP_INCLUDE, \"..\")],\n            header_wrapped = (root, current)->root == current,\n            header_library = x->\"libpcap\",\n            clang_diagnostics = true,\n            )\nrun(wc)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nHowever, I have two problems\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"/usr/include/pcap/bpf.h:116:2: error: unknown type name 'u_int'\n/usr/include/pcap/bpf.h:250:2: error: unknown type name 'u_short'\n/usr/include/pcap/bpf.h:251:2: error: unknown type name 'u_char'\n/usr/include/pcap/namedb.h:58:51: error: unknown type name 'FILE'"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nNot sure where these are defined, and another one is that all functions defined in the header start with PCAP_API so I get error\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"/usr/include/pcap/namedb.h:58:1: error: unknown type name 'PCAP_API'"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It seems like it's something similar to extern maybe, but allowing switching different APIs? I am not quite sure if I understand those headers.\n\nAnyone tried this or can help?"}]}]}],"thread_ts":"1613898732.035300","reply_count":8,"reply_users_count":3,"latest_reply":"1613905989.045400","reply_users":["B01J9QZ4SP8","UH24GRBLL","UE0Q72VV0"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613898734.035400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613898732.035300","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"d1e49718-8be5-480a-a8d8-e1934419e102","type":"message","text":"You might want to make your life easier with BinaryBuilder","user":"UH24GRBLL","ts":"1613902324.041100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6oPY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You might want to make your life easier with BinaryBuilder"}]}]}],"thread_ts":"1613898732.035300","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"310f5eb1-d29b-4702-bcf0-0195dd6fb625","type":"message","text":"<https://juliahub.com/ui/Packages/BinaryBuilder/WHzgM/0.2.6>","user":"UH24GRBLL","ts":"1613902335.041300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ulk","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://juliahub.com/ui/Packages/BinaryBuilder/WHzgM/0.2.6"}]}]}],"thread_ts":"1613898732.035300","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"7665d2b9-d9b5-4bd4-aea3-e75777d98b5a","type":"message","text":"In regards to the error you encounter, it seems like you're missing some dependency header for libpcap?","user":"UH24GRBLL","ts":"1613902419.041700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4AL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In regards to the error you encounter, it seems like you're missing some dependency header for libpcap?"}]}]}],"thread_ts":"1613898732.035300","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"091bf05c-0b18-46bc-867b-06da488b8418","type":"message","text":"<@UH24GRBLL> I dont think PCAP_API is a type, it is some macro that appears before any function, I can't really find that macro defined anywhere","user":"UE0Q72VV0","ts":"1613904322.044500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L3e","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UH24GRBLL"},{"type":"text","text":" I dont think PCAP_API is a type, it is some macro that appears before any function, I can't really find that macro defined anywhere"}]}]}],"thread_ts":"1613898732.035300","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"7be0a3fd-458b-4acc-9670-4d52c1a4b268","type":"message","text":"I'm talking about `u_int` and `FILE`","user":"UH24GRBLL","ts":"1613905892.045000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oM8r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm talking about "},{"type":"text","text":"u_int","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"FILE","style":{"code":true}}]}]}],"thread_ts":"1613898732.035300","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"fc3ecb35-4923-49f6-ba12-f395e6238d6e","type":"message","text":"`FILE` at least is a common struct name for, well, files","user":"UH24GRBLL","ts":"1613905950.045200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OP+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FILE","style":{"code":true}},{"type":"text","text":" at least is a common struct name for, well, files"}]}]}],"thread_ts":"1613898732.035300","parent_user_id":"UE0Q72VV0"},{"client_msg_id":"9bf2e399-3651-4c55-bb8e-ebe2bee7fe60","type":"message","text":"so if libpcap requires those and pulls them in by dynamic linking, you have to make sure that Clang.jll can find them as well","user":"UH24GRBLL","ts":"1613905989.045400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+yNs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so if libpcap requires those and pulls them in by dynamic linking, you have to make sure that Clang.jll can find them as well"}]}]}],"thread_ts":"1613898732.035300","parent_user_id":"UE0Q72VV0"}]