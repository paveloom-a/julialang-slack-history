[{"client_msg_id":"495fa6a3-e047-486e-b91d-2014dc446589","type":"message","text":"How can I get a pointer to an immutable object?","user":"UB2QSHWPN","ts":"1618073914.477400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e2d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can I get a pointer to an immutable object?"}]}]}],"thread_ts":"1618073914.477400","reply_count":12,"reply_users_count":2,"latest_reply":"1618075095.480800","reply_users":["UDB26738Q","UB2QSHWPN"],"is_locked":false,"subscribed":false},{"client_msg_id":"4e557308-0b15-4c9b-8b93-8c31e0fb0c8d","type":"message","text":"you can't","user":"UDB26738Q","ts":"1618073924.477500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G/N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can't"}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"e8f8295e-6d8b-4183-9887-79ae50e845bb","type":"message","text":"you could wrap it in a `Ref`, but that's not immutable anymore, `Ref` is a lightweight mutable container","user":"UDB26738Q","ts":"1618074018.478300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"itl/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could wrap it in a "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":", but that's not immutable anymore, "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" is a lightweight mutable container"}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"f95a0948-69e9-4eb2-8919-caf36b7853b5","type":"message","text":"Sо, can I then take a pointer from Ref?","user":"UB2QSHWPN","ts":"1618074038.478500","team":"T68168MUP","edited":{"user":"UB2QSHWPN","ts":"1618074045.000000"},"blocks":[{"type":"rich_text","block_id":"+JtE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sо, can I then take a pointer from Ref?"}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"e41b2496-6f8d-44a1-9c77-31941c0a5b18","type":"message","text":"```julia&gt; pointer_from_objref(Ref(3.14))\nPtr{Nothing} @0x00007fc1d0090780```","user":"UDB26738Q","ts":"1618074055.478800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PHB","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> pointer_from_objref(Ref(3.14))\nPtr{Nothing} @0x00007fc1d0090780"}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"9a3e2edf-336e-48ea-8280-e03da3cb1707","type":"message","text":"And why its `Ptr{Nothing}`?","user":"UB2QSHWPN","ts":"1618074079.479000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BFxXX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And why its "},{"type":"text","text":"Ptr{Nothing}","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"8c7856ad-4c08-4824-bea1-71141b631a65","type":"message","text":"because that's what `pointer_from_objref` does.  but you're doing something weird if you need to do this","user":"UDB26738Q","ts":"1618074197.479400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EdY3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because that's what "},{"type":"text","text":"pointer_from_objref","style":{"code":true}},{"type":"text","text":" does.  but you're doing something weird if you need to do this"}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"20c96cab-cad7-4ddd-a81b-f9b354d97f34","type":"message","text":"from the docstring of `pointer_from_objref`:\n```help?&gt; pointer_from_objref((3.14))\n  pointer_from_objref(x)\n\n  [...]\n\n  This function may not be called on immutable objects, since they do not have stable memory addresses.```\nso what's the point of getting the address of something which doesn't have a fixed address?","user":"UDB26738Q","ts":"1618074262.479600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ST/zG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"from the docstring of "},{"type":"text","text":"pointer_from_objref","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"help?> pointer_from_objref((3.14))\n  pointer_from_objref(x)\n\n  [...]\n\n  This function may not be called on immutable objects, since they do not have stable memory addresses."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so what's the point of getting the address of something which doesn't have a fixed address?"}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"cd3d6a91-5168-4884-a211-6a8d597ba17e","type":"message","text":"I need to pass a pointer into a ccall function, which is a vector of three elements, but my object is just an immutable struct of x, y, z.","user":"UB2QSHWPN","ts":"1618074314.479800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Cp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I need to pass a pointer into a ccall function, which is a vector of three elements, but my object is just an immutable struct of x, y, z."}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"ecf75ce0-985f-419e-a32b-ba68b010dda6","type":"message","text":"so that's not the vector your C library expects?","user":"UDB26738Q","ts":"1618074343.480000","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1618074349.000000"},"blocks":[{"type":"rich_text","block_id":"n6hUq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so that's not the vector your C library expects?"}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"b19e2bec-2371-4b2c-aa75-7c6dd215f2c6","type":"message","text":"Yes, its just a struct that has identical memory layout.","user":"UB2QSHWPN","ts":"1618074479.480300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EZj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, its just a struct that has identical memory layout."}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"9d46cb4a-6941-4758-b448-dea5e7e6a1b9","type":"message","text":"you can convert the pointer to the type you want with\n```Ptr{Float64}(pointer_from_objref(Ref(3.14)))```","user":"UDB26738Q","ts":"1618074485.480500","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1618074745.000000"},"blocks":[{"type":"rich_text","block_id":"R562","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can convert the pointer to the type you want with\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Ptr{Float64}(pointer_from_objref(Ref(3.14)))"}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"c20a6618-623d-4bb9-87b1-78fefabb3cfb","type":"message","text":"Thanks, that seems to work - it actually mutates the referenced value from a ccall'ed function.","user":"UB2QSHWPN","ts":"1618075095.480800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YD/da","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, that seems to work - it actually mutates the referenced value from a ccall'ed function."}]}]}],"thread_ts":"1618073914.477400","parent_user_id":"UB2QSHWPN"}]