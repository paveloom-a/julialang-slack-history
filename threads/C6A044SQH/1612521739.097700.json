[{"client_msg_id":"80f9c48e-81b9-41b3-b619-c78762c821e2","type":"message","text":"Hi, how do you merge a list of Tuple in a single Tuple?\n\n`merge((Tuple((a,a)) for a=1:3)...)` does not work","user":"U7GQE9JP9","ts":"1612521739.097700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"53KLW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, how do you merge a list of Tuple in a single Tuple?\n\n"},{"type":"text","text":"merge((Tuple((a,a)) for a=1:3)...)","style":{"code":true}},{"type":"text","text":" does not work"}]}]}],"thread_ts":"1612521739.097700","reply_count":19,"reply_users_count":6,"latest_reply":"1612533242.106700","reply_users":["B01J9QZ4SP8","U01AF6J1LTD","U68QW0PUZ","UM30MT6RF","UH24GRBLL","U7GQE9JP9"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612521741.097800","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"ac925534-3d0b-4246-81a8-63b8e8f62c6a","type":"message","text":"```julia&gt; a = [Tuple((a,a)) for a=1:3]\n3-element Vector{Tuple{Int64, Int64}}:\n (1, 1)\n (2, 2)\n (3, 3)\n\njulia&gt; Tuple(Iterators.flatten(a))\n(1, 1, 2, 2, 3, 3)```\nI think this gets you what you want.","user":"U01AF6J1LTD","ts":"1612522748.098400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"86J","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a = [Tuple((a,a)) for a=1:3]\n3-element Vector{Tuple{Int64, Int64}}:\n (1, 1)\n (2, 2)\n (3, 3)\n\njulia> Tuple(Iterators.flatten(a))\n(1, 1, 2, 2, 3, 3)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I think this gets you what you want."}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"2062b173-9660-4b63-80ae-ddebd3014f86","type":"message","text":":slightly_smiling_face: I was typing that in too .. go with ^","user":"U68QW0PUZ","ts":"1612522825.098600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GW3O","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" I was typing that in too .. go with ^"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"bd426af9-87ae-4004-9ee5-16b31481a843","type":"message","text":"`tuple((a...)...)` should work as well","user":"UM30MT6RF","ts":"1612522840.099000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RUNe5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"tuple((a...)...)","style":{"code":true}},{"type":"text","text":" should work as well"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"fba7b773-a337-407c-9f74-ad6ed78d38da","type":"message","text":"having `merge` work with tuples seems reasonable to me","user":"U68QW0PUZ","ts":"1612522921.099200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uJZC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"having "},{"type":"text","text":"merge","style":{"code":true}},{"type":"text","text":" work with tuples seems reasonable to me"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"412e24e7-5549-40ce-88d6-0737ab5b009e","type":"message","text":"`merge` for dictionaries overrides keys though, so it's not the same as just concatenation","user":"UM30MT6RF","ts":"1612523022.099400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Wk/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"merge","style":{"code":true}},{"type":"text","text":" for dictionaries overrides keys though, so it's not the same as just concatenation"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"18d6c755-ba74-4dc0-9789-155b0b104445","type":"message","text":"tuples have no keys to override, do you mean that `merge` should only apply where something may be overriden (merging two dicts with distinct keys does not override)?","user":"U68QW0PUZ","ts":"1612523161.099600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MTXA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"tuples have no keys to override, do you mean that "},{"type":"text","text":"merge","style":{"code":true}},{"type":"text","text":" should only apply where something may be overriden (merging two dicts with distinct keys does not override)?"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"cc2c09c8-0dfe-4f7b-98d7-15e3eaed6daf","type":"message","text":"I'd recommend against `tuple((a...)...)` unless all elements of `a` always have the same size - can lead to A LOT of tuple methods to be compiled...","user":"UH24GRBLL","ts":"1612523230.099800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O/F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd recommend against "},{"type":"text","text":"tuple((a...)...)","style":{"code":true}},{"type":"text","text":" unless all elements of "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" always have the same size - can lead to A LOT of tuple methods to be compiled..."}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"db9c98e0-eea6-40a6-b4b0-3db68b839d6e","type":"message","text":"the `Iterators.flatten` approach is definitely more sound","user":"UH24GRBLL","ts":"1612523263.100000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X4ZN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the "},{"type":"text","text":"Iterators.flatten","style":{"code":true}},{"type":"text","text":" approach is definitely more sound"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"0fc8d781-64d1-45f7-abf9-1cf05efa9ca1","type":"message","text":"&gt; I'd recommend against tuple((a...)...) unless all elements of a always have the same size - can lead to A LOT of tuple methods to be compiled...\n&gt; \nNo, the beauty of this is that it won't create any intermediate tuples. Of course, overspecialization will still be an issue if the total number of elements in `a` is large, but then you probably shouldn't use tuples in the first place","user":"UM30MT6RF","ts":"1612527087.101700","team":"T68168MUP","edited":{"user":"UM30MT6RF","ts":"1612527098.000000"},"blocks":[{"type":"rich_text","block_id":"sqI","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"I'd recommend against tuple((a...)...) unless all elements of a always have the same size - can lead to A LOT of tuple methods to be compiled...\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"No, the beauty of this is that it won't create any intermediate tuples. Of course, overspecialization will still be an issue if the total number of elements in "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" is large, but then you probably shouldn't use tuples in the first place"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"ddc1165f-4b1c-48f6-881c-3a074f748588","type":"message","text":"ah yes, I mentally talked about the wrong dots - should be `unless a always has the same size and is small`","user":"UH24GRBLL","ts":"1612527188.102000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K5h+n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah yes, I mentally talked about the wrong dots - should be "},{"type":"text","text":"unless a always has the same size and is small","style":{"code":true}}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"6bfe08a9-1edc-4a5d-abbe-49b138bdff77","type":"message","text":"Thank you to everyone!!! In my use case, I’d have a final tuple of length 10, si Ill go for `tuple((a...)...)`","user":"U7GQE9JP9","ts":"1612527885.102200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iKi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you to everyone!!! In my use case, I’d have a final tuple of length 10, si Ill go for "},{"type":"text","text":"tuple((a...)...)","style":{"code":true}}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"145eb78c-afc3-4d15-be16-2d07e3c4f63e","type":"message","text":"that is small enough","user":"U68QW0PUZ","ts":"1612527899.102500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HOpAy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that is small enough"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"cca128b8-4df6-48be-a8ac-ca0bc9826a2b","type":"message","text":"I just benchmarked both approaches and with Simeon's approach relative to Iterators.flatten.\nWhere the input is a tuple of tuples, often its 7x+ speedup and 10x memory savings.\nWhere the input is a vector of tuples, often its 1.3x speedup and 3x memory savings.","user":"U68QW0PUZ","ts":"1612530482.102800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1eIR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just benchmarked both approaches and with Simeon's approach relative to Iterators.flatten.\nWhere the input is a tuple of tuples, often its 7x+ speedup and 10x memory savings.\nWhere the input is a vector of tuples, often its 1.3x speedup and 3x memory savings."}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"64e86e16-1958-41af-9e3a-6187958119f6","type":"message","text":"how large was `a`?","user":"UH24GRBLL","ts":"1612530584.103000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UdWh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how large was "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"2455c7bd-f438-4cf7-99f8-5eac071552b6","type":"message","text":"I'm not surprised that it's faster, the compiler can do a lot of stuff with all that info after all","user":"UH24GRBLL","ts":"1612530615.103200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+quCy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not surprised that it's faster, the compiler can do a lot of stuff with all that info after all"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"5b141fd2-3f76-451e-99fb-0f171215a19a","type":"message","text":"I used  `t1 = (('a', 1, 3.0), (2.0, \"b\"), (3, 4, 5, 6), (8//3,))` , just now with `t2 = (t1..., t1..., t1..., t1...)``    30x speedup 20x memory advantage\n`@btime f(x) setup=(x=tuples;)`","user":"U68QW0PUZ","ts":"1612531079.103400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jlH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I used "},{"type":"text","text":" t1 = (('a', 1, 3.0), (2.0, \"b\"), (3, 4, 5, 6), (8//3,))","style":{"code":true}},{"type":"text","text":" , just now with "},{"type":"text","text":"t2 = (t1..., t1..., t1..., t1...)`  ","style":{"code":true}},{"type":"text","text":"  30x speedup 20x memory advantage\n"},{"type":"text","text":"@btime f(x) setup=(x=tuples;)","style":{"code":true}}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"242e4184-b2c1-43f1-8c64-00614e931b4f","type":"message","text":"with versions f(xs::Vararg) to support f(t1, t2, t3, t4), 20x speedup, 10x memory advantage\n```t1,t2,t3,t4=ts\n(('a', 1, 3.0), (2.0, \"b\"), (3, 4, 5, 6), (8//3,))\n@btime f(x1,x2,x3,x4) setup=(x1=t1;x2=t2;x3=t3;x4=t4;)```","user":"U68QW0PUZ","ts":"1612531961.105000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rs=+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with versions f(xs::Vararg) to support f(t1, t2, t3, t4), 20x speedup, 10x memory advantage\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"t1,t2,t3,t4=ts\n(('a', 1, 3.0), (2.0, \"b\"), (3, 4, 5, 6), (8//3,))\n@btime f(x1,x2,x3,x4) setup=(x1=t1;x2=t2;x3=t3;x4=t4;)"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"},{"client_msg_id":"ac3d7601-0c54-4301-b1ad-183d053de3cf","type":"message","text":"those are still small though - iirc all those small ones are precompiled already from Base","user":"UH24GRBLL","ts":"1612533242.106700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bbxrv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"those are still small though - iirc all those small ones are precompiled already from Base"}]}]}],"thread_ts":"1612521739.097700","parent_user_id":"U7GQE9JP9"}]