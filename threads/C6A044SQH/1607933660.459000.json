[{"client_msg_id":"108f8c67-1876-4659-b6a1-eefb7535446b","type":"message","text":"Hi! I tried to solve differential equations with a bunch of randomly generated initial values and parameters.\nChris Rackauckas said using StaticArrays could speed up calculation in DifferentialEquation.jl. So I tried to generate StaticArrays in each iteration and for each population. Since those calculations are independent, so I tried to use multithreads to accelerate. However, StaticArrays leads to wrong answers. It will mix up when using Threads. So How can I use StaticArrays to faster solve ODE with parallel computing?\nI read his tutorial about parallelism (<https://mitmath.github.io/18337/lecture5/parallelism_overview.html>) and tried to generate StaticArray for each thread like this\n`u = Vector{typeof(@SVector([1.0,0.0,0.0]))}(undef,1000)`\nBut for each iteration, the StaticArray needs to be regenerated randomly for initial values, since SVector is immutable, so I could not use it. So is there a way to use StaticArrays to speed up solving ODE with parallel computing?","user":"U01CZNZM8SK","ts":"1607933660.459000","team":"T68168MUP","edited":{"user":"U01CZNZM8SK","ts":"1607934580.000000"},"blocks":[{"type":"rich_text","block_id":"ak5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi! I tried to solve differential equations with a bunch of randomly generated initial values and parameters.\nChris Rackauckas said using StaticArrays could speed up calculation in DifferentialEquation.jl. So I tried to generate StaticArrays in each iteration and for each population. Since those calculations are independent, so I tried to use multithreads to accelerate. However, StaticArrays leads to wrong answers. It will mix up when using Threads. So How can I use StaticArrays to faster solve ODE with parallel computing?\nI read his tutorial about parallelism ("},{"type":"link","url":"https://mitmath.github.io/18337/lecture5/parallelism_overview.html"},{"type":"text","text":") and tried to generate StaticArray for each thread like this\n"},{"type":"text","text":"u = Vector{typeof(@SVector([1.0,0.0,0.0]))}(undef,1000)","style":{"code":true}},{"type":"text","text":"\nBut for each iteration, the StaticArray needs to be regenerated randomly for initial values, since SVector is immutable, so I could not use it. So is there a way to use StaticArrays to speed up solving ODE with parallel computing?"}]}]}],"thread_ts":"1607933660.459000","reply_count":2,"reply_users_count":2,"latest_reply":"1607998409.135900","reply_users":["U67G3QRJM","U01CZNZM8SK"],"subscribed":false},{"client_msg_id":"2dc8ec5f-20ec-45c1-a0a0-fb3d0ada903b","type":"message","text":"Try in <#C7T968HRU|diffeq-bridged>","user":"U67G3QRJM","ts":"1607965730.028500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bj2Dl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Try in "},{"type":"channel","channel_id":"C7T968HRU"}]}]}],"thread_ts":"1607933660.459000","parent_user_id":"U01CZNZM8SK"},{"client_msg_id":"125435aa-0611-4912-8986-4de78cd12457","type":"message","text":"Thanks!","user":"U01CZNZM8SK","ts":"1607998409.135900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8y5H=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks!"}]}]}],"thread_ts":"1607933660.459000","parent_user_id":"U01CZNZM8SK"}]