[{"client_msg_id":"acd0b2cb-a6ca-4d84-b815-dd3924ce7c61","type":"message","text":"Another one: Is there a way to define a function `f(inputs)::SVector{n,Int}`  that is type stable, but where the inputs don't actually depend on `n` ?","user":"U01MG0TN079","ts":"1613992020.125100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w6Xl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Another one: Is there a way to define a function "},{"type":"text","text":"f(inputs)::SVector{n,Int}","style":{"code":true}},{"type":"text","text":"  that is type stable, but where the inputs don't actually depend on "},{"type":"text","text":"n","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1613992020.125100","reply_count":8,"reply_users_count":3,"latest_reply":"1613994259.127700","reply_users":["B01J9QZ4SP8","U01MG0TN079","U7HAYKY9X"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613992022.125200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613992020.125100","parent_user_id":"U01MG0TN079"},{"client_msg_id":"3b722069-dc2d-4896-8f46-e93a519ef794","type":"message","text":"Alternatively, I'd like to be able to define a type that would be an initial segment of a `SVector` , where the length of the segment is encoded in the type","user":"U01MG0TN079","ts":"1613992111.126000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"taF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alternatively, I'd like to be able to define a type that would be an initial segment of a "},{"type":"text","text":"SVector","style":{"code":true}},{"type":"text","text":" , where the length of the segment is encoded in the type"}]}]}],"thread_ts":"1613992020.125100","parent_user_id":"U01MG0TN079"},{"client_msg_id":"5f8b0dbc-e7f1-42d8-874c-ab29fe8165b2","type":"message","text":"or maybe type stability is not such a big deal…","user":"U01MG0TN079","ts":"1613992151.126200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JGtHT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or maybe type stability is not such a big deal…"}]}]}],"thread_ts":"1613992020.125100","parent_user_id":"U01MG0TN079"},{"client_msg_id":"3a403885-5588-4649-9753-26621b00a592","type":"message","text":"You can do `@nospecialize`  to prevent type instability by just not specializing the function. But of course, and functions called from your function may still specialize...","user":"U7HAYKY9X","ts":"1613992983.126800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q6jNP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can do "},{"type":"text","text":"@nospecialize","style":{"code":true}},{"type":"text","text":"  to prevent type instability by just not specializing the function. But of course, and functions called from your function may still specialize..."}]}]}],"thread_ts":"1613992020.125100","parent_user_id":"U01MG0TN079"},{"client_msg_id":"242d4e5a-1c0d-437c-9b2a-0be779b4d256","type":"message","text":"wait, to me, type stability means that the output type depends on the input values","user":"U01MG0TN079","ts":"1613994076.127100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R1xA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"wait, to me, type stability means that the output type depends on the input values"}]}]}],"thread_ts":"1613992020.125100","parent_user_id":"U01MG0TN079"},{"client_msg_id":"a0ca9907-45ca-40fb-ac2d-d7df87dd3e9b","type":"message","text":"I don't see how nospecialize enters the game here?","user":"U01MG0TN079","ts":"1613994084.127300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SwLZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't see how nospecialize enters the game here?"}]}]}],"thread_ts":"1613992020.125100","parent_user_id":"U01MG0TN079"},{"client_msg_id":"2457fe02-d906-490c-b321-ee12b2cc2e46","type":"message","text":"You're right, that doesn't make the function type stable, I was phrasing it wrong. If the main problem caused by your type instability is excessive compilation due to specialization, it may make sense to disable specialization for some functions","user":"U7HAYKY9X","ts":"1613994163.127500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pJm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You're right, that doesn't make the function type stable, I was phrasing it wrong. If the main problem caused by your type instability is excessive compilation due to specialization, it may make sense to disable specialization for some functions"}]}]}],"thread_ts":"1613992020.125100","parent_user_id":"U01MG0TN079"},{"client_msg_id":"82e00775-a812-4ead-a84a-1b22131d4969","type":"message","text":"Makes sense, thanks!","user":"U01MG0TN079","ts":"1613994259.127700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SsjY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Makes sense, thanks!"}]}]}],"thread_ts":"1613992020.125100","parent_user_id":"U01MG0TN079"}]