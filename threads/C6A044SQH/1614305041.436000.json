[{"client_msg_id":"2cea7cc7-2800-459a-b2d1-03321b4a3de2","type":"message","text":"Hi guys, I'd like to ask about getting the stdout from an external process and also printing it interactively.\n\nThe `run` command seems to work fine in printing the output interactively, but that way we couldn't get the output in a variable.\n\nThe below function, however, redirects the `stdout` to a variable, but couldn't print the output interactively. I have to until the process finishes and then printing the output, which is not that useful for debugging purpose when sometimes the process stuck.\n```function execute(cmd::Cmd)\n    out = Pipe()\n    err = Pipe()\n\n    process = run(pipeline(ignorestatus(cmd), stdout=out, stderr=err))\n    close(<http://out.in|out.in>)\n    close(<http://err.in|err.in>)\n\n    stdout = @async String(read(out))\n    stderr = @async String(read(err))\n\n    wait(process)\n    (\n        stdout = fetch(stdout),\n        stderr = fetch(stderr),\n        code = process.exitcode\n    )\nend```\nHow can I get the best of both world, i.e. printing the output interactively and put it into variable? Is there any sort of way to define this multiple std stream (1 streamed to variable and the other streamed to stdout interactively)?\n\nThanks!","user":"UUT4VGTE2","ts":"1614305041.436000","team":"T68168MUP","edited":{"user":"UUT4VGTE2","ts":"1614305282.000000"},"blocks":[{"type":"rich_text","block_id":"3To","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi guys, I'd like to ask about getting the stdout from an external process and also printing it interactively.\n\nThe "},{"type":"text","text":"run","style":{"code":true}},{"type":"text","text":" command seems to work fine in printing the output interactively, but that way we couldn't get the output in a variable.\n\nThe below function, however, redirects the "},{"type":"text","text":"stdout","style":{"code":true}},{"type":"text","text":" to a variable, but couldn't print the output interactively. I have to until the process finishes and then printing the output, which is not that useful for debugging purpose when sometimes the process stuck.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function execute(cmd::Cmd)\n    out = Pipe()\n    err = Pipe()\n\n    process = run(pipeline(ignorestatus(cmd), stdout=out, stderr=err))\n    close(out.in)\n    close(err.in)\n\n    stdout = @async String(read(out))\n    stderr = @async String(read(err))\n\n    wait(process)\n    (\n        stdout = fetch(stdout),\n        stderr = fetch(stderr),\n        code = process.exitcode\n    )\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"How can I get the best of both world, i.e. printing the output interactively and put it into variable? Is there any sort of way to define this multiple std stream (1 streamed to variable and the other streamed to stdout interactively)?\n\nThanks!"}]}]}],"thread_ts":"1614305041.436000","reply_count":4,"reply_users_count":3,"latest_reply":"1614305752.438600","reply_users":["B01J9QZ4SP8","UDB26738Q","UUT4VGTE2"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614305042.436100","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614305041.436000","parent_user_id":"UUT4VGTE2"},{"client_msg_id":"c69e16e2-0bcb-47c1-ba1f-cb4f148e7758","type":"message","text":"like <https://github.com/JuliaPackaging/OutputCollectors.jl>?","user":"UDB26738Q","ts":"1614305127.436300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=3w8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like "},{"type":"link","url":"https://github.com/JuliaPackaging/OutputCollectors.jl"},{"type":"text","text":"?"}]}]}],"thread_ts":"1614305041.436000","parent_user_id":"UUT4VGTE2"},{"client_msg_id":"204917e4-e644-4a9d-8daa-d471b074cb3f","type":"message","text":"<@UDB26738Q> Thanks, let me try that out! I accidentally sent the message before it finishes, so I just edited it.","user":"UUT4VGTE2","ts":"1614305345.437800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2VVCQ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDB26738Q"},{"type":"text","text":" Thanks, let me try that out! I accidentally sent the message before it finishes, so I just edited it."}]}]}],"thread_ts":"1614305041.436000","parent_user_id":"UUT4VGTE2"},{"client_msg_id":"878ffa89-4758-4ca6-a0b2-07b4989f1156","type":"message","text":"if i understand correctly what you want to do, `OutputCollector` does exactly what you're looking for, it also separates stdout and stderr","user":"UDB26738Q","ts":"1614305752.438600","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1614305776.000000"},"blocks":[{"type":"rich_text","block_id":"XxO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if i understand correctly what you want to do, "},{"type":"text","text":"OutputCollector","style":{"code":true}},{"type":"text","text":" does exactly what you're looking for, it also separates stdout and stderr"}]}]}],"thread_ts":"1614305041.436000","parent_user_id":"UUT4VGTE2"}]