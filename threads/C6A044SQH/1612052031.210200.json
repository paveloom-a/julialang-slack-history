[{"client_msg_id":"6547b61a-a100-4c3a-8df1-f3c7eb39891e","type":"message","text":"I am wondering if it is possible to speed up the linear algebra computations below? Currently they're pretty slow.\n```using BenchmarkTools, LinearAlgebra\n\nn, T, d = 10, 1000, 100\ndata = randn(n, T, d)\nAs = [randn(d, d) for _ in 1:n]\nbs = [randn(d) for _ in 1:n]\n\n#### code below this line I would like to speed up if possible\nfunction result_one()\n    result = map((X, A, b) -&gt; (A * X' .+ b)',\n                 eachslice(data; dims=1), As, bs)\n    return permutedims(cat(result..., dims=3), [3, 1, 2])\nend\n\nfunction result_two()\n    result  = map((X, A, b) -&gt; 0.5*dot.(eachrow(X), eachcol(A * X')) + (X * b),\n           eachslice(data; dims=1), As, bs)\n    return permutedims(hcat(result...))\nend\n\ndisplay(@benchmark result_one())\nprintln()\ndisplay(@benchmark result_two())```","user":"UT9SK8EF4","ts":"1612052031.210200","team":"T68168MUP","edited":{"user":"UT9SK8EF4","ts":"1612053590.000000"},"blocks":[{"type":"rich_text","block_id":"78fck","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am wondering if it is possible to speed up the linear algebra computations below? Currently they're pretty slow.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using BenchmarkTools, LinearAlgebra\n\nn, T, d = 10, 1000, 100\ndata = randn(n, T, d)\nAs = [randn(d, d) for _ in 1:n]\nbs = [randn(d) for _ in 1:n]\n\n#### code below this line I would like to speed up if possible\nfunction result_one()\n    result = map((X, A, b) -> (A * X' .+ b)',\n                 eachslice(data; dims=1), As, bs)\n    return permutedims(cat(result..., dims=3), [3, 1, 2])\nend\n\nfunction result_two()\n    result  = map((X, A, b) -> 0.5*dot.(eachrow(X), eachcol(A * X')) + (X * b),\n           eachslice(data; dims=1), As, bs)\n    return permutedims(hcat(result...))\nend\n\ndisplay(@benchmark result_one())\nprintln()\ndisplay(@benchmark result_two())"}]}]}],"thread_ts":"1612052031.210200","reply_count":29,"reply_users_count":4,"latest_reply":"1612055250.216600","reply_users":["B01J9QZ4SP8","U67SCG4HG","UT9SK8EF4","UD0NS8PDF"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612052033.210300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4","reactions":[{"name":"bridge","users":["UT9SK8EF4"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/i-am-wondering-if-it-is-possible-to-speed-up-the-linear-algebra-computations-below|to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1612052050.210600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"60f105e9-1bb4-4c64-a53a-a2a305f099c2","type":"message","text":"First step is to not use non-const global variables.","user":"U67SCG4HG","ts":"1612052129.210800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H/q3G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"First step is to not use non-const global variables."}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4","reactions":[{"name":"+1","users":["U0179G7FG4F"],"count":1}]},{"client_msg_id":"1b3ab3e6-399e-465f-92d4-ad51deb9d65c","type":"message","text":"<https://docs.julialang.org/en/v1/manual/performance-tips/>","user":"U67SCG4HG","ts":"1612052151.211000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EDaA","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://docs.julialang.org/en/v1/manual/performance-tips/"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"1d01423a-2c69-4036-9049-fa7391c504fe","type":"message","text":"Great, so that dropped my runtime by about 2ms and 0.5ms","user":"UT9SK8EF4","ts":"1612052284.211300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m69uz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Great, so that dropped my runtime by about 2ms and 0.5ms"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"52153fc0-0eb6-40ca-b61a-f1305786fe39","type":"message","text":"for each of the calls above","user":"UT9SK8EF4","ts":"1612052289.211500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JeE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for each of the calls above"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"c50fb6ea-0584-4123-999c-f3da366f14c6","type":"message","text":"now I am at 70ms/69.6ms on my machine","user":"UT9SK8EF4","ts":"1612052312.211700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0Ve","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"now I am at 70ms/69.6ms on my machine"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"45c1611d-667a-499a-b870-a152424d2eca","type":"message","text":"any other suggestions for improving run-time?","user":"UT9SK8EF4","ts":"1612052739.212100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5jSS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"any other suggestions for improving run-time?"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"fd7bc29f-3d0e-4cd7-8412-30a015a866c7","type":"message","text":"Don’t you want `eachslice(data; dims=2)` to match the lengths?","user":"UD0NS8PDF","ts":"1612053459.212300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zI0Y/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Don’t you want "},{"type":"text","text":"eachslice(data; dims=2)","style":{"code":true}},{"type":"text","text":" to match the lengths?"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"5a92aa5b-e7b4-4172-894a-29fd5e2715f6","type":"message","text":"What do you mean?","user":"UT9SK8EF4","ts":"1612053489.212500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fq/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean?"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"06aa3e5c-d2db-40a1-b3a9-9526a61defbb","type":"message","text":"I want to iterate `data[i, :, :]`","user":"UT9SK8EF4","ts":"1612053509.212700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bg+FT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I want to iterate "},{"type":"text","text":"data[i, :, :]","style":{"code":true}}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"f7b4d157-c549-476a-a644-edc4145c0a7e","type":"message","text":"That iteration goes to 10, while the others in your map go to 1000, so it stops early.","user":"UD0NS8PDF","ts":"1612053541.212900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BCND","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That iteration goes to 10, while the others in your map go to 1000, so it stops early."}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"70d1c0cf-bd2d-4c70-991e-f931031498ff","type":"message","text":"ah. yeah, that's a mistake in the data. It should be As = ..... for `i in 1:n`, not `T`","user":"UT9SK8EF4","ts":"1612053575.213100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D6Wx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah. yeah, that's a mistake in the data. It should be As = ..... for "},{"type":"text","text":"i in 1:n","style":{"code":true}},{"type":"text","text":", not "},{"type":"text","text":"T","style":{"code":true}}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"b99f4286-b755-42d9-9a7d-a1796f92882e","type":"message","text":"does that clarify?","user":"UT9SK8EF4","ts":"1612053577.213300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9tz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does that clarify?"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"cc7bc632-7596-435e-960a-b54ac578ceb2","type":"message","text":"(I am using other data for the real code, but just wanted to use random data for a mwe to put here)","user":"UT9SK8EF4","ts":"1612053620.213600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kRZf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I am using other data for the real code, but just wanted to use random data for a mwe to put here)"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"8c371fd4-0a34-47f1-b9e8-a32ff3f36dc1","type":"message","text":"Yes, but I’m lazy to work it all out again with the new problem…","user":"UD0NS8PDF","ts":"1612053719.213800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RTnI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, but I’m lazy to work it all out again with the new problem…"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"58b1c639-c675-44a4-97d4-cf0894b00ffd","type":"message","text":"I think the first one is batched matmul. It might work better to keep things as solid arrays, not make slices.","user":"UD0NS8PDF","ts":"1612053747.214000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EP24h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the first one is batched matmul. It might work better to keep things as solid arrays, not make slices."}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"fa9eeb88-7a3d-4b70-86c5-96f0500aac71","type":"message","text":"It will also generally work best to put the batch dim last","user":"UD0NS8PDF","ts":"1612053778.214200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n7Hp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It will also generally work best to put the batch dim last"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"42e88a58-f63a-47b7-a50b-d6fb8bcfe2ab","type":"message","text":"Basically, `data[i, :, :]` is a T x d matrix, and `A[i]`  is a dxd matrix  and `b[i]` a d-vector","user":"UT9SK8EF4","ts":"1612053815.214400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aRz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Basically, "},{"type":"text","text":"data[i, :, :]","style":{"code":true}},{"type":"text","text":" is a T x d matrix, and "},{"type":"text","text":"A[i]","style":{"code":true}},{"type":"text","text":"  is a dxd matrix  and "},{"type":"text","text":"b[i]","style":{"code":true}},{"type":"text","text":" a d-vector"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"bfa5749c-ec8e-4a83-a080-5f93ab7b7f74","type":"message","text":"The first function is computing Ax + b, where A = A[i], b = b[i] and x ranges over `data[i, j, :]` for j = 1,..., T.","user":"UT9SK8EF4","ts":"1612053845.214600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"is+Z1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The first function is computing Ax + b, where A = A[i], b = b[i] and x ranges over "},{"type":"text","text":"data[i, j, :]","style":{"code":true}},{"type":"text","text":" for j = 1,..., T."}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"89b355af-eea5-46f7-b718-f2dd26e207bc","type":"message","text":"I see. So you're saying permute dim before and after is better than doing with the less efficient arrangement in the map?","user":"UT9SK8EF4","ts":"1612053883.214800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PtG0i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see. So you're saying permute dim before and after is better than doing with the less efficient arrangement in the map?"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"de698581-02e7-47b9-bf3c-19c371d6363c","type":"message","text":"I thought it was `resone[t,k,a] := As[t][a,b] * data[k,t,b] |&gt; _+bs[t][a]` and for this I had an 8x speedup","user":"UD0NS8PDF","ts":"1612053889.215000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rFzMm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought it was "},{"type":"text","text":"resone[t,k,a] := As[t][a,b] * data[k,t,b] |> _+bs[t][a]","style":{"code":true}},{"type":"text","text":" and for this I had an 8x speedup"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"38db28fb-5050-4505-b96e-2923e3fea75b","type":"message","text":"Are the slices given to you, or can you choose to work with one big array for each?","user":"UD0NS8PDF","ts":"1612053929.215200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yv+z7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are the slices given to you, or can you choose to work with one big array for each?"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"822a3c13-4639-4aa4-9146-3e8007b8cadd","type":"message","text":"Hm, what do you mean?","user":"UT9SK8EF4","ts":"1612053987.215400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3ZVy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hm, what do you mean?"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"72333a87-03a4-4809-8b6b-e3e5ce03255a","type":"message","text":"```@btime result_one($data,$As,$bs); # 103.277 ms (401 allocations: 30.53 MiB)\n\n# As[z][a,b]\n# bs[z][a]\n# data[z,k,b] -&gt; X[k,b]\n\nusing Tullio\n\nresult_one(data,As,bs) ≈ @tullio resone[z,k,a] := As[z][a,b] * data[z,k,b] |&gt; _+bs[z][a]\n\n@tullio AA[a,b,z] := As[z][a,b];\n@tullio bb[a,z] := bs[z][a];\n\nusing LoopVectorization\n\nfunction tullio_one(data,AA,bb)\n    @tullio step[z,k,a] := AA[a,b,z] * data[z,k,b]\n    @tullio step[z,k,a] += bb[a,z]  # because the fused |&gt; _+... breaks @avx\nend\n\n@btime tullio_one($data,$AA,$bb); # 8.479 ms (96 allocations: 7.64 MiB)```","user":"UD0NS8PDF","ts":"1612054249.215800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XRrx9","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@btime result_one($data,$As,$bs); # 103.277 ms (401 allocations: 30.53 MiB)\n\n# As[z][a,b]\n# bs[z][a]\n# data[z,k,b] -> X[k,b]\n\nusing Tullio\n\nresult_one(data,As,bs) ≈ @tullio resone[z,k,a] := As[z][a,b] * data[z,k,b] |> _+bs[z][a]\n\n@tullio AA[a,b,z] := As[z][a,b];\n@tullio bb[a,z] := bs[z][a];\n\nusing LoopVectorization\n\nfunction tullio_one(data,AA,bb)\n    @tullio step[z,k,a] := AA[a,b,z] * data[z,k,b]\n    @tullio step[z,k,a] += bb[a,z]  # because the fused |> _+... breaks @avx\nend\n\n@btime tullio_one($data,$AA,$bb); # 8.479 ms (96 allocations: 7.64 MiB)"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"aa31ce26-2e29-4dd6-a993-bbcef80a660e","type":"message","text":"What's tullio?","user":"UT9SK8EF4","ts":"1612054416.216000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MZbX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's tullio?"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"ffb6e708-6904-4c58-9a12-ea12b2cabf3f","type":"message","text":"ah einstein summation","user":"UT9SK8EF4","ts":"1612054440.216200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L5Cvb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah einstein summation"}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"0f06c60b-de57-4f7f-b144-d94b187913d6","type":"message","text":"Very cool. I was going to say that I knew of a more efficient way to do it in `np.einsum`.","user":"UT9SK8EF4","ts":"1612054455.216400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/YfFV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Very cool. I was going to say that I knew of a more efficient way to do it in "},{"type":"text","text":"np.einsum","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"},{"client_msg_id":"4bb1fbac-8bf1-4a41-824b-b8fe8ebd6955","type":"message","text":"Yes. If you could arrange for the batch dim (that I called `z`) to be last not first, then the first line would become NNlib’s `batched_mul`. But if it must be first, that would need `permutedims`, and this is likely to be quicker. `@btime permutedims(data, (3,2,1));` alone is 6ms.","user":"UD0NS8PDF","ts":"1612055250.216600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V9fp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes. If you could arrange for the batch dim (that I called "},{"type":"text","text":"z","style":{"code":true}},{"type":"text","text":") to be last not first, then the first line would become NNlib’s "},{"type":"text","text":"batched_mul","style":{"code":true}},{"type":"text","text":". But if it must be first, that would need "},{"type":"text","text":"permutedims","style":{"code":true}},{"type":"text","text":", and this is likely to be quicker. "},{"type":"text","text":"@btime permutedims(data, (3,2,1));","style":{"code":true}},{"type":"text","text":" alone is 6ms."}]}]}],"thread_ts":"1612052031.210200","parent_user_id":"UT9SK8EF4"}]