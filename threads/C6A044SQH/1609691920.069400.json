[{"client_msg_id":"5dc97f33-c423-46d0-9ed7-0445108a3071","type":"message","text":"Is `foobar` supposed to work here?\n```TupType(::Type{T}) where {T} = Tuple{&lt;:T,&lt;:T,&lt;:T}\n\nstruct Foo end\n\nbar(t::TupType(Foo)) = 1\nbaz(t::Tuple{&lt;:T,&lt;:T,&lt;:T}) where {T} = 1\nfoobar(t::TupType(F)) where {F} = 1 # yields MethodError```","user":"UEN48T0BT","ts":"1609691920.069400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8cX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is "},{"type":"text","text":"foobar","style":{"code":true}},{"type":"text","text":" supposed to work here?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"TupType(::Type{T}) where {T} = Tuple{<:T,<:T,<:T}\n\nstruct Foo end\n\nbar(t::TupType(Foo)) = 1\nbaz(t::Tuple{<:T,<:T,<:T}) where {T} = 1\nfoobar(t::TupType(F)) where {F} = 1 # yields MethodError"}]}]}],"thread_ts":"1609691920.069400","reply_count":4,"reply_users_count":2,"latest_reply":"1609693523.073600","reply_users":["U7HAYKY9X","UM30MT6RF"],"subscribed":false},{"client_msg_id":"09a24e6b-71b1-4b4b-b951-50b30f8956c3","type":"message","text":"Not supposed to work, no. Not sure what you want to do. Perhaps `foobar(t::TupType(F where F)) = 1` ?","user":"U7HAYKY9X","ts":"1609693004.071900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ycEk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not supposed to work, no. Not sure what you want to do. Perhaps "},{"type":"text","text":"foobar(t::TupType(F where F)) = 1","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1609691920.069400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"20a5c9c2-30b2-4799-9ae8-b87177b7970d","type":"message","text":"Also, I don't think you ever need Unionall-tuples:\n```julia&gt; (1, 2.0) isa Tuple{Number, Number}\ntrue```","user":"U7HAYKY9X","ts":"1609693098.072100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0AIoL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, I don't think you ever need Unionall-tuples:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> (1, 2.0) isa Tuple{Number, Number}\ntrue"}]}]}],"thread_ts":"1609691920.069400","parent_user_id":"UEN48T0BT","reactions":[{"name":"point_up","users":["UM30MT6RF"],"count":1}]},{"client_msg_id":"cb7ad7d0-4b77-428a-84d9-a6712cb02fb6","type":"message","text":"You probably want to do something simpler, like\n```bar(::NTuple{3, Foo}) = 1```\n","user":"U7HAYKY9X","ts":"1609693405.073100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Eu1X4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You probably want to do something simpler, like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"bar(::NTuple{3, Foo}) = 1"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1609691920.069400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"32128f86-6617-4072-aedd-a630d759d42d","type":"message","text":"If you don't restrict `TupType` to only `Type`, this should work, i.e.\n```TupType(T) = Tuple{T,T,T}```","user":"UM30MT6RF","ts":"1609693523.073600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZYg/g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you don't restrict "},{"type":"text","text":"TupType","style":{"code":true}},{"type":"text","text":" to only "},{"type":"text","text":"Type","style":{"code":true}},{"type":"text","text":", this should work, i.e.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"TupType(T) = Tuple{T,T,T}"}]}]}],"thread_ts":"1609691920.069400","parent_user_id":"UEN48T0BT"}]