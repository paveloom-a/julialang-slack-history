[{"client_msg_id":"0c0d4d5a-c3f8-460e-965f-eea480c26d61","type":"message","text":"I can't seem to get this right: so I ask here : ) I want to create a block-matrix type that can hold 4 blocks to form a 2x2 block matrix. Something along the lines of\n```struct BlockMatrix{T, T11 &lt;: AbstractMatrix{T}, T12 &lt;: AbstractMatrix{T}, T21 &lt;: AbstractMatrix{T}, T22 &lt;: AbstractMatrix{T}} &lt;: AbstractMatrix{T}\n  A11::T11\n  A12::T12\n  A21::T21\n  A22::T22\nend```\nThe idea is that it can hold all kinds of matrices for each block, depending on what is chosen during construction, be it sparse arrays, low-rank matrix or dense matrix. As there is a lot of possible combinations here I am not sure whether this is the right approach to play nice with type inference. Shou;ld I perhaps cut out the `T11, T12...`  types and instead use `A11::Union{Matrix{T}, LowRankMatrix{T}}`  etc.? Thanks in advance for your inputs :slightly_smiling_face:","user":"U01L0RJC6FM","ts":"1613661206.155800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hzVh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can't seem to get this right: so I ask here : ) I want to create a block-matrix type that can hold 4 blocks to form a 2x2 block matrix. Something along the lines of\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct BlockMatrix{T, T11 <: AbstractMatrix{T}, T12 <: AbstractMatrix{T}, T21 <: AbstractMatrix{T}, T22 <: AbstractMatrix{T}} <: AbstractMatrix{T}\n  A11::T11\n  A12::T12\n  A21::T21\n  A22::T22\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The idea is that it can hold all kinds of matrices for each block, depending on what is chosen during construction, be it sparse arrays, low-rank matrix or dense matrix. As there is a lot of possible combinations here I am not sure whether this is the right approach to play nice with type inference. Shou;ld I perhaps cut out the "},{"type":"text","text":"T11, T12...","style":{"code":true}},{"type":"text","text":"  types and instead use "},{"type":"text","text":"A11::Union{Matrix{T}, LowRankMatrix{T}}","style":{"code":true}},{"type":"text","text":"  etc.? Thanks in advance for your inputs "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1613661206.155800","reply_count":6,"reply_users_count":3,"latest_reply":"1613669419.158800","reply_users":["B01J9QZ4SP8","U7HAYKY9X","U01L0RJC6FM"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613661208.155900","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613661206.155800","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"04a43896-4cee-491e-9c74-425926edfe3d","type":"message","text":"It depends. If you are going to construct many different types of BlockMatrix, then the overhead of having that many different types may be an issue (with new compiled methods from each). But if you are only going to have a few, it's no big problem. And your code is type stable","user":"U7HAYKY9X","ts":"1613668859.157300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/BX6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It depends. If you are going to construct many different types of BlockMatrix, then the overhead of having that many different types may be an issue (with new compiled methods from each). But if you are only going to have a few, it's no big problem. And your code is type stable"}]}]}],"thread_ts":"1613661206.155800","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"64325250-4883-413e-9193-7be9e04021b6","type":"message","text":"thx! hmm what bothers me is the first `{T, ...}` in the struct type field. wouldn't it be possible to somehow have a `BlockMatrix{T11, T12, T21, T22}`  type instead?","user":"U01L0RJC6FM","ts":"1613669291.158200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CTt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thx! hmm what bothers me is the first "},{"type":"text","text":"{T, ...}","style":{"code":true}},{"type":"text","text":" in the struct type field. wouldn't it be possible to somehow have a "},{"type":"text","text":"BlockMatrix{T11, T12, T21, T22}","style":{"code":true}},{"type":"text","text":"  type instead?"}]}]}],"thread_ts":"1613661206.155800","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"45663d90-987f-4ffd-b4cc-aea36c9acb2b","type":"message","text":"btw thanks for always answering my questions ^^","user":"U01L0RJC6FM","ts":"1613669307.158400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=7gZ9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"btw thanks for always answering my questions ^^"}]}]}],"thread_ts":"1613661206.155800","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"412016a4-c958-4bcb-a14c-ffcff6777cde","type":"message","text":"Aahh, I see! Nope, that's a known limitation that that's not possible at the moment","user":"U7HAYKY9X","ts":"1613669350.158600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QMBhj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aahh, I see! Nope, that's a known limitation that that's not possible at the moment"}]}]}],"thread_ts":"1613661206.155800","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"66e1bee8-2423-49af-922b-9e6181a10e3a","type":"message","text":"I see, that's a bummer. I feel the current type-system is a bit \"cluttered\". I am not sure how to fix that but I wonder whether Julia 2.0 would change things around","user":"U01L0RJC6FM","ts":"1613669419.158800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MgT7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see, that's a bummer. I feel the current type-system is a bit \"cluttered\". I am not sure how to fix that but I wonder whether Julia 2.0 would change things around"}]}]}],"thread_ts":"1613661206.155800","parent_user_id":"U01L0RJC6FM"}]