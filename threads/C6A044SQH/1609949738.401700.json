[{"client_msg_id":"e4ef7472-ea15-4bde-b85c-c4be75b14a80","type":"message","text":"Is it possible to skip certain states in an iterator? I.e.,\n```struct Foo{A}\n    a::A\nend\n\nBase.length(f::Foo) = length(f.a)\nfunction Base.iterate(f::Foo, state=1)\n    state &gt; length(f) &amp;&amp; return nothing\n    if state == 2\n        return (f.a[state], state+1) # can this be skipped?\n    else\n        return (f.a[state], state+1)\n    end\nend\n\nfor a_i in Foo(rand(3))\n    @show a_i\nend```","user":"UEN48T0BT","ts":"1609949738.401700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tou","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it possible to skip certain states in an iterator? I.e.,\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Foo{A}\n    a::A\nend\n\nBase.length(f::Foo) = length(f.a)\nfunction Base.iterate(f::Foo, state=1)\n    state > length(f) && return nothing\n    if state == 2\n        return (f.a[state], state+1) # can this be skipped?\n    else\n        return (f.a[state], state+1)\n    end\nend\n\nfor a_i in Foo(rand(3))\n    @show a_i\nend"}]}]}],"thread_ts":"1609949738.401700","reply_count":9,"reply_users_count":4,"latest_reply":"1609950392.403700","reply_users":["UEN48T0BT","U7HAYKY9X","UH24GRBLL","U6N6VQE30"],"subscribed":false},{"client_msg_id":"24991ef4-35a2-406b-9112-1e3029f19880","type":"message","text":"I guess `skip_next_iter = false` could be added as an argument, and then `state+2` could be returned before the skipped state, but this seems a bit complicated","user":"UEN48T0BT","ts":"1609949862.401900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DEH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess "},{"type":"text","text":"skip_next_iter = false","style":{"code":true}},{"type":"text","text":" could be added as an argument, and then "},{"type":"text","text":"state+2","style":{"code":true}},{"type":"text","text":" could be returned before the skipped state, but this seems a bit complicated"}]}]}],"thread_ts":"1609949738.401700","parent_user_id":"UEN48T0BT"},{"client_msg_id":"3e1f21dd-159e-444c-9670-ef8df9592150","type":"message","text":"`iterate` is just a regular function, and the state can be anything, so yeah.","user":"U7HAYKY9X","ts":"1609949934.402100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h0/5O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"iterate","style":{"code":true}},{"type":"text","text":" is just a regular function, and the state can be anything, so yeah."}]}]}],"thread_ts":"1609949738.401700","parent_user_id":"UEN48T0BT","reactions":[{"name":"+1","users":["UEN48T0BT"],"count":1}]},{"client_msg_id":"5d44b69d-246e-44ff-bfdd-ac2708a54f93","type":"message","text":"you can `Iterators.filter` it","user":"UH24GRBLL","ts":"1609949970.402300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wBW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can "},{"type":"text","text":"Iterators.filter","style":{"code":true}},{"type":"text","text":" it"}]}]}],"thread_ts":"1609949738.401700","parent_user_id":"UEN48T0BT"},{"client_msg_id":"3b0484ab-afeb-42af-ac18-bc00a81d8754","type":"message","text":"if that behavior should always happen just do\n\n```return f.a[state], state == 1 ? 3 : state + 1```","user":"U6N6VQE30","ts":"1609950037.402600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DmpS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if that behavior should always happen just do\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"return f.a[state], state == 1 ? 3 : state + 1"}]}]}],"thread_ts":"1609949738.401700","parent_user_id":"UEN48T0BT"},{"client_msg_id":"4ddc002d-ce00-4112-8f9b-5d647f419b82","type":"message","text":"I was using filter, but I was trying to make a single pass. I think <@U7HAYKY9X>'s comment points to a simple solution:\n```if state==2\n     return iterate(f, state+1)\nend```","user":"UEN48T0BT","ts":"1609950118.402800","team":"T68168MUP","edited":{"user":"UEN48T0BT","ts":"1609950140.000000"},"blocks":[{"type":"rich_text","block_id":"Vjfk+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was using filter, but I was trying to make a single pass. I think "},{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":"'s comment points to a simple solution:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"if state==2\n     return iterate(f, state+1)\nend"}]}]}],"thread_ts":"1609949738.401700","parent_user_id":"UEN48T0BT"},{"client_msg_id":"0f7c20d0-3e80-4630-8aa7-bf77a7b215fb","type":"message","text":"you should just see `state == 2` as invalid state. iterate(f, state) is not the same as `getindex(f, state)`, so you can just make sure that `state == 2` never happens","user":"U6N6VQE30","ts":"1609950181.403100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Oq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you should just see "},{"type":"text","text":"state == 2","style":{"code":true}},{"type":"text","text":" as invalid state. iterate(f, state) is not the same as "},{"type":"text","text":"getindex(f, state)","style":{"code":true}},{"type":"text","text":", so you can just make sure that "},{"type":"text","text":"state == 2","style":{"code":true}},{"type":"text","text":" never happens"}]}]}],"thread_ts":"1609949738.401700","parent_user_id":"UEN48T0BT"},{"client_msg_id":"6d063796-28ca-4fb5-8393-6cf4d4ffc191","type":"message","text":"Yeah, but checking for `state+1==2` at `state=1` is a bit complicated in my case, I think calling `iterate(f, state+1)` when `state==2` is a simple solution","user":"UEN48T0BT","ts":"1609950306.403300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2btF9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, but checking for "},{"type":"text","text":"state+1==2","style":{"code":true}},{"type":"text","text":" at "},{"type":"text","text":"state=1","style":{"code":true}},{"type":"text","text":" is a bit complicated in my case, I think calling "},{"type":"text","text":"iterate(f, state+1)","style":{"code":true}},{"type":"text","text":" when "},{"type":"text","text":"state==2","style":{"code":true}},{"type":"text","text":" is a simple solution"}]}]}],"thread_ts":"1609949738.401700","parent_user_id":"UEN48T0BT"},{"client_msg_id":"5133d359-6ccc-41b4-aef5-a3c46346989d","type":"message","text":"your definition of length seems incorrect though","user":"U6N6VQE30","ts":"1609950307.403500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3yNKJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"your definition of length seems incorrect though"}]}]}],"thread_ts":"1609949738.401700","parent_user_id":"UEN48T0BT"},{"client_msg_id":"614075f4-6001-4d7e-b2b7-3b6cfd0d8ad8","type":"message","text":"Yeah, that's a good point.","user":"UEN48T0BT","ts":"1609950392.403700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hUIuU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, that's a good point."}]}]}],"thread_ts":"1609949738.401700","parent_user_id":"UEN48T0BT"}]