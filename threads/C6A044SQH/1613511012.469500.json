[{"client_msg_id":"5cf35701-46c3-487c-b68e-3c074dee3b75","type":"message","text":"I am looking for some help with segfault when passing a struct to a C-API via `@ccall`. I created an immutable struct inside a `Ref()`, and then call something like `@ccall lib.somefunc(myref::Ptr{MyStruct})...`. This seems to work, but then when the Julia function returns I get an `EXCEPTION_ACCESS_VIOLATION at 0x2a088a9 -- jl_gc_pool_alloc`.","user":"UL4JREGCV","ts":"1613511012.469500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ej8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am looking for some help with segfault when passing a struct to a C-API via "},{"type":"text","text":"@ccall","style":{"code":true}},{"type":"text","text":". I created an immutable struct inside a "},{"type":"text","text":"Ref()","style":{"code":true}},{"type":"text","text":", and then call something like "},{"type":"text","text":"@ccall lib.somefunc(myref::Ptr{MyStruct})...","style":{"code":true}},{"type":"text","text":". This seems to work, but then when the Julia function returns I get an "},{"type":"text","text":"EXCEPTION_ACCESS_VIOLATION at 0x2a088a9 -- jl_gc_pool_alloc","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1613511012.469500","reply_count":55,"reply_users_count":4,"latest_reply":"1613521834.008700","reply_users":["B01J9QZ4SP8","USU9FRPEU","UL4JREGCV","UKVBDU6HF"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613511014.469600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV","reactions":[{"name":"bridge","users":["UL4JREGCV"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/55425| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1613511033.469900","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"6fc99c89-68e7-408f-be22-7dc160639e93","type":"message","text":"What is the C signature of `lib.somefunc` ?","user":"USU9FRPEU","ts":"1613511062.470100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tiAVv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the C signature of "},{"type":"text","text":"lib.somefunc","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"c5871ae1-b215-4502-9eb2-34fab1a65b49","type":"message","text":"Does are the C and Julia definitions of `MyStruct`?","user":"USU9FRPEU","ts":"1613511115.470300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FWQj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does are the C and Julia definitions of "},{"type":"text","text":"MyStruct","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"71b10811-5de5-4a95-b12e-062f13132aee","type":"message","text":"Is `lib.somefunc` expecting you to allocate memory for some field of `MyStruct` ?","user":"USU9FRPEU","ts":"1613511154.470500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iWVrT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is "},{"type":"text","text":"lib.somefunc","style":{"code":true}},{"type":"text","text":" expecting you to allocate memory for some field of "},{"type":"text","text":"MyStruct","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"be4dce3a-5235-425d-b3a7-6c6649807ce9","type":"message","text":"I think it might, but it's a bit hard to say from reading the headers","user":"UL4JREGCV","ts":"1613511178.470700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kjCx7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it might, but it's a bit hard to say from reading the headers"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"83a1e231-6fa6-41de-8509-0cd95e853e8c","type":"message","text":"I'll post the C struct definition and my Julia translation","user":"UL4JREGCV","ts":"1613511211.470900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z7B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll post the C struct definition and my Julia translation"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"bc7ca270-907e-4b1f-9813-50fe8a6787c3","type":"message","text":"How do you get information back from `lib.somefunc` ? Is it supposed to be in the struct?","user":"USU9FRPEU","ts":"1613511215.471100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xTfe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do you get information back from "},{"type":"text","text":"lib.somefunc","style":{"code":true}},{"type":"text","text":" ? Is it supposed to be in the struct?"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"2c9adc46-3849-40ac-8d76-9879d95c17e9","type":"message","text":"Yes it is","user":"UL4JREGCV","ts":"1613511221.471300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ryqj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes it is"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"f588a743-fc11-469b-bda2-09a09cf7b3f8","type":"message","text":"(plus an error code, that's working fine)","user":"UL4JREGCV","ts":"1613511231.471500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"12gU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(plus an error code, that's working fine)"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"d82ec1e4-674d-4dc5-be8d-83972dd016bb","type":"message","text":"OK, that's probably the issue then.","user":"USU9FRPEU","ts":"1613511232.471700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IIiKV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, that's probably the issue then."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"e908f117-1ce2-40aa-b62c-7cd13439f0cb","type":"message","text":"Is the error code returned from the function?","user":"USU9FRPEU","ts":"1613511243.471900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HmFs0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is the error code returned from the function?"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"234d6746-3798-4981-bd53-4caafdcbb3ab","type":"message","text":"Yes","user":"UL4JREGCV","ts":"1613511252.472100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z2hXe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"7470a4d3-3326-4101-b2d4-a4dddcf84204","type":"message","text":"Does it indicate an error?","user":"USU9FRPEU","ts":"1613511275.472300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AAxk3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does it indicate an error?"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"b7cd5aa5-d2a6-4cc0-bb02-c36bb0db416d","type":"message","text":"But as the outer Julia function returns, I get a segfault from deep in the GC code.","user":"UL4JREGCV","ts":"1613511280.472500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"clQZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But as the outer Julia function returns, I get a segfault from deep in the GC code."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"f623b242-7a9b-4b64-bcf1-2ec0e2d7027d","type":"message","text":"No error indicated","user":"UL4JREGCV","ts":"1613511289.472700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K7E4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No error indicated"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"1a2beb5a-2984-4b64-8136-cc3a55c51290","type":"message","text":"Well the C function probably wrote into memory that it was not supposed to. Might as well as do the simple thing and make the struct `mutable`","user":"USU9FRPEU","ts":"1613511321.472900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dnmiB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well the C function probably wrote into memory that it was not supposed to. Might as well as do the simple thing and make the struct "},{"type":"text","text":"mutable","style":{"code":true}}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"7cc5a961-54cd-47f7-9b51-3641f5d58651","type":"message","text":"Thanks, I just tried that. Still getting a segfault unfortunately","user":"UL4JREGCV","ts":"1613511413.473700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o4=V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, I just tried that. Still getting a segfault unfortunately"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"87bc1606-f1b1-4f8f-a5de-c6ac8f6342a1","type":"message","text":"We'll need the struct definitions then.","user":"USU9FRPEU","ts":"1613511453.474500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SQP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We'll need the struct definitions then."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"efe3cc34-85f4-4cea-8c51-eb1b93ad58e3","type":"message","text":"BTW, this is an API for grabbing frames from a camera","user":"UL4JREGCV","ts":"1613511459.474800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f2Nq=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW, this is an API for grabbing frames from a camera"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"7a9f0c02-e3f9-4c27-9904-6f6bc5bc2051","type":"message","text":"Ok, thanks","user":"UL4JREGCV","ts":"1613511465.475100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OZj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, thanks"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"271f6020-ff52-4b40-8427-94c5d1f03efa","type":"message","text":"Does it happen to be Hamamatsu?","user":"USU9FRPEU","ts":"1613511479.475600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K6L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does it happen to be Hamamatsu?"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"b04a4c11-3df8-4c33-b8df-66adf24dab60","type":"message","text":"Allied Vision in fact","user":"UL4JREGCV","ts":"1613511510.476200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qkI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Allied Vision in fact"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"11602360-9d04-4c55-8de9-1fd2f873136c","type":"message","text":"Just curious because I was just doing that ... ok","user":"USU9FRPEU","ts":"1613511518.476500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nT0Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just curious because I was just doing that ... ok"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"2021c2e3-2e75-49d9-8b3d-5ecbeaf45cf5","type":"message","text":"On the C side:\n```typedef struct\n{\n    //----- In -----\n    void*               buffer;             // Comprises image and ancillary data\n    VmbUint32_t         bufferSize;         // Size of the data buffer\n\n    void*               context[4];         // 4 void pointers that can be employed by the user (e.g. for storing handles)\n\n    //----- Out -----\n    VmbFrameStatus_t    receiveStatus;      // Resulting status of the receive operation\n    VmbFrameFlags_t     receiveFlags;       // Flags indicating which additional frame information is available\n\n    VmbUint32_t         imageSize;          // Size of the image data inside the data buffer\n    VmbUint32_t         ancillarySize;      // Size of the ancillary data inside the data buffer\n\n    VmbPixelFormat_t    pixelFormat;        // Pixel format of the image\n\n    VmbUint32_t         width;              // Width of an image\n    VmbUint32_t         height;             // Height of an image\n    VmbUint32_t         offsetX;            // Horizontal offset of an image\n    VmbUint32_t         offsetY;            // Vertical offset of an image\n\n    VmbUint64_t         frameID;            // Unique ID of this frame in this stream\n    VmbUint64_t         timestamp;          // Timestamp set by the camera\n} VmbFrame_t;```","user":"UL4JREGCV","ts":"1613511546.477000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ci6oQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"On the C side:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"typedef struct\n{\n    //----- In -----\n    void*               buffer;             // Comprises image and ancillary data\n    VmbUint32_t         bufferSize;         // Size of the data buffer\n\n    void*               context[4];         // 4 void pointers that can be employed by the user (e.g. for storing handles)\n\n    //----- Out -----\n    VmbFrameStatus_t    receiveStatus;      // Resulting status of the receive operation\n    VmbFrameFlags_t     receiveFlags;       // Flags indicating which additional frame information is available\n\n    VmbUint32_t         imageSize;          // Size of the image data inside the data buffer\n    VmbUint32_t         ancillarySize;      // Size of the ancillary data inside the data buffer\n\n    VmbPixelFormat_t    pixelFormat;        // Pixel format of the image\n\n    VmbUint32_t         width;              // Width of an image\n    VmbUint32_t         height;             // Height of an image\n    VmbUint32_t         offsetX;            // Horizontal offset of an image\n    VmbUint32_t         offsetY;            // Vertical offset of an image\n\n    VmbUint64_t         frameID;            // Unique ID of this frame in this stream\n    VmbUint64_t         timestamp;          // Timestamp set by the camera\n} VmbFrame_t;"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"06b89ea8-d567-41b5-982c-67940e6d7f48","type":"message","text":"And my attempt at a translation to Julia:\n```\nmutable struct VmbFrame\n        # ----- In -----\n        buffer::Vector{UInt8}                      #  Comprises image and ancillary data\n        bufferSize::UInt32                 #  Size of the data buffer\n    \n        context::NTuple{4,UInt}                  #  4 void pointers that can be employed by the user (e.g. for storing handles)\n\n        # ----- Out -----\n        receiveStatus::Int32     #  Resulting status of the receive operation\n        receiveFlags::UInt32      #  Flags indicating which additional frame information is available\n    \n        imageSize::UInt32                   #  Size of the image data inside the data buffer\n        ancillarySize::UInt32               #  Size of the ancillary data inside the data buffer\n    \n        pixelFormat::UInt32            #  Pixel format of the image\n    \n        width::UInt32                       #  Width of an image\n        height::UInt32                      #  Height of an image\n        offsetX::UInt32                     #  Horizontal offset of an image\n        offsetY::UInt32                     #  Vertical offset of an image\n    \n        frameID::UInt64                     #  Unique ID of this frame in this stream\n        timestamp::UInt64                   #  Timestamp set by the camera\nend```","user":"UL4JREGCV","ts":"1613511596.478400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DHzz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And my attempt at a translation to Julia:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\nmutable struct VmbFrame\n        # ----- In -----\n        buffer::Vector{UInt8}                      #  Comprises image and ancillary data\n        bufferSize::UInt32                 #  Size of the data buffer\n    \n        context::NTuple{4,UInt}                  #  4 void pointers that can be employed by the user (e.g. for storing handles)\n\n        # ----- Out -----\n        receiveStatus::Int32     #  Resulting status of the receive operation\n        receiveFlags::UInt32      #  Flags indicating which additional frame information is available\n    \n        imageSize::UInt32                   #  Size of the image data inside the data buffer\n        ancillarySize::UInt32               #  Size of the ancillary data inside the data buffer\n    \n        pixelFormat::UInt32            #  Pixel format of the image\n    \n        width::UInt32                       #  Width of an image\n        height::UInt32                      #  Height of an image\n        offsetX::UInt32                     #  Horizontal offset of an image\n        offsetY::UInt32                     #  Vertical offset of an image\n    \n        frameID::UInt64                     #  Unique ID of this frame in this stream\n        timestamp::UInt64                   #  Timestamp set by the camera\nend"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"3b3cd353-4a03-4665-aa2c-e8b095bd7555","type":"message","text":"buffer should be `Ptr{Nothing}`","user":"USU9FRPEU","ts":"1613511643.479400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B3nMy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"buffer should be "},{"type":"text","text":"Ptr{Nothing}","style":{"code":true}}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"f99c5d2c-f2ea-4954-aa1a-6250377157b7","type":"message","text":"Huh. Ok, thanks.","user":"UL4JREGCV","ts":"1613511669.480000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rmeA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Huh. Ok, thanks."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"645d9d0d-1037-41c2-9d74-34e2e7ca6f0f","type":"message","text":"From your Julia `Vector{UInt8}` use the method `pointer` to obtain a pointer","user":"USU9FRPEU","ts":"1613511672.480200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2qp3O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From your Julia "},{"type":"text","text":"Vector{UInt8}","style":{"code":true}},{"type":"text","text":" use the method "},{"type":"text","text":"pointer","style":{"code":true}},{"type":"text","text":" to obtain a pointer"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"c5aee722-fb7b-4b28-93f8-7817ac7faeae","type":"message","text":":tada:","user":"UL4JREGCV","ts":"1613511732.481300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g1B","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"tada"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"4242fcd4-6461-4bbd-bea4-c9b380d36981","type":"message","text":"No more segfault! Thanks a ton, this has taken me hours","user":"UL4JREGCV","ts":"1613511755.481600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8Qq56","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No more segfault! Thanks a ton, this has taken me hours"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"f1d1c024-1734-464b-a769-8830f3e4406c","type":"message","text":"context probably should be `NTuple{4,Ptr{Nothing}}` and is probably of little consequence","user":"USU9FRPEU","ts":"1613511806.482300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U4biI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"context probably should be "},{"type":"text","text":"NTuple{4,Ptr{Nothing}}","style":{"code":true}},{"type":"text","text":" and is probably of little consequence"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"8f4fc57f-951c-4510-ad2d-6e6123d21cfc","type":"message","text":"Note this:\n\n```help?&gt; pointer\nsearch: pointer pointer_from_objref unsafe_pointer_to_objref codepoint\n\n  pointer(array [, index])\n\n  Get the native address of an array or string, optionally at a given location index.\n\n  This function is \"unsafe\". Be careful to ensure that a Julia reference to array exists as long as this pointer will\n  be used. The GC.@preserve macro should be used to protect the array argument from garbage collection within a given\n  block of code.\n\n  Calling Ref(array[, index]) is generally preferable to this function as it guarantees validity.```","user":"USU9FRPEU","ts":"1613511818.482700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o1FCs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Note this:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"help?> pointer\nsearch: pointer pointer_from_objref unsafe_pointer_to_objref codepoint\n\n  pointer(array [, index])\n\n  Get the native address of an array or string, optionally at a given location index.\n\n  This function is \"unsafe\". Be careful to ensure that a Julia reference to array exists as long as this pointer will\n  be used. The GC.@preserve macro should be used to protect the array argument from garbage collection within a given\n  block of code.\n\n  Calling Ref(array[, index]) is generally preferable to this function as it guarantees validity."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"480e5b06-984d-4233-90fb-5c986f050ba4","type":"message","text":"Ah, thanks also a good point.","user":"UL4JREGCV","ts":"1613511827.482900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e9fj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, thanks also a good point."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"e7611d1c-6e0e-46f4-bb5e-35ecd17323d1","type":"message","text":"Don't do something like `pointer(zeros(UInt8,256))` . Julia will try to collect the vector you allocated.","user":"USU9FRPEU","ts":"1613511869.483500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vCK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Don't do something like "},{"type":"text","text":"pointer(zeros(UInt8,256))","style":{"code":true}},{"type":"text","text":" . Julia will try to collect the vector you allocated."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"b59c0056-5978-49ef-b21a-3fd70caeb7f8","type":"message","text":"Right, I will keep a reference around during the call","user":"UL4JREGCV","ts":"1613511932.484600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W5Ii","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, I will keep a reference around during the call"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"503ad657-1c73-45da-b8da-cd49e8c74d85","type":"message","text":"What you might be able to do is stick the Julia vector at the end of the `struct`. C doesn't care if the struct is actually larger than expected.","user":"USU9FRPEU","ts":"1613511947.485200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hArn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What you might be able to do is stick the Julia vector at the end of the "},{"type":"text","text":"struct","style":{"code":true}},{"type":"text","text":". C doesn't care if the struct is actually larger than expected."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"7908cbf8-1217-4bb5-8c1a-6c2beae0f1ff","type":"message","text":"It just cares about the offset from the beginning of the `struct` . As long as the initial elements are in the right order, things should be fine. That way you can keep the allocated Julian array together with the data.","user":"USU9FRPEU","ts":"1613512003.488100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lnIb5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It just cares about the offset from the beginning of the "},{"type":"text","text":"struct","style":{"code":true}},{"type":"text","text":" . As long as the initial elements are in the right order, things should be fine. That way you can keep the allocated Julian array together with the data."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"b009e953-5395-44d5-9064-c91a81282c6c","type":"message","text":"Thanks, that's a really clever solution","user":"UL4JREGCV","ts":"1613512018.488600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zSDC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, that's a really clever solution"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"428e5b64-63ae-4c59-a711-d11c7d237927","type":"message","text":"You also might want to look at using <https://github.com/analytech-solutions/CBindingGen.j|CBindingGen.jl> to automatically generate all of the bindings for your C library instead.","user":"UKVBDU6HF","ts":"1613512034.489600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KCdSB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You also might want to look at using "},{"type":"link","url":"https://github.com/analytech-solutions/CBindingGen.j","text":"CBindingGen.jl"},{"type":"text","text":" to automatically generate all of the bindings for your C library instead."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"a3433069-9d39-452a-b07c-27781b6bea7a","type":"message","text":"^ The link got corrupted: <https://github.com/analytech-solutions/CBindingGen.jl>","user":"USU9FRPEU","ts":"1613512097.490200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RWIT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"^ The link got corrupted: "},{"type":"link","url":"https://github.com/analytech-solutions/CBindingGen.jl"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV","reactions":[{"name":"+1","users":["UKVBDU6HF"],"count":1}]},{"client_msg_id":"a364c426-d0df-4749-8013-bee878d5384c","type":"message","text":"I'm new to copy-paste :rolling_on_the_floor_laughing:","user":"UKVBDU6HF","ts":"1613512129.490700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LLC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm new to copy-paste "},{"type":"emoji","name":"rolling_on_the_floor_laughing"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"26bf83d0-c4e1-45ab-9e83-f757583cac80","type":"message","text":"I think <https://github.com/JuliaInterop/Clang.jl> does something similar","user":"USU9FRPEU","ts":"1613512145.490900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VcQRi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think "},{"type":"link","url":"https://github.com/JuliaInterop/Clang.jl"},{"type":"text","text":" does something similar"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"d466e566-174d-40a5-a0a7-f9f9d670be2c","type":"message","text":"Thanks, I'll take a look. For most of the hardware I've used the C-APIs have been quite straightforward, but clearly this is starting to get quite error prone","user":"UL4JREGCV","ts":"1613512164.491200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kgCo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, I'll take a look. For most of the hardware I've used the C-APIs have been quite straightforward, but clearly this is starting to get quite error prone"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"c26419a6-b839-4f27-94de-88b742be0469","type":"message","text":"So this is interesting, I added the extra field to the end of the struct as you recommended, but now the API throws an error that the size of the struct is larger than expected","user":"UL4JREGCV","ts":"1613512245.492100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B+4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So this is interesting, I added the extra field to the end of the struct as you recommended, but now the API throws an error that the size of the struct is larger than expected"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"e3d217c8-1576-43be-bc6d-c989ccfa04a7","type":"message","text":"For the named types, you could something like `const VmbFrameStatus_t = Int32` so you're Julia code looks similar to the C code. It is also really handle if you make a mistake.","user":"USU9FRPEU","ts":"1613512253.492400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K48I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For the named types, you could something like "},{"type":"text","text":"const VmbFrameStatus_t = Int32","style":{"code":true}},{"type":"text","text":" so you're Julia code looks similar to the C code. It is also really handle if you make a mistake."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"23ba23f2-3068-4464-b32b-32264e65d84e","type":"message","text":"Yes, Clang.jl is similar, but supports a very small subset of C.","user":"UKVBDU6HF","ts":"1613512255.492600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GNk1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, Clang.jl is similar, but supports a very small subset of C."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"ce4e2817-2f2a-4c15-9dac-edaeab06ce10","type":"message","text":"I pass `sizeof(VmbFrame)`  so I guess I need to subtract off the extra field I added","user":"UL4JREGCV","ts":"1613512285.492800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bqia","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I pass "},{"type":"text","text":"sizeof(VmbFrame)","style":{"code":true}},{"type":"text","text":"  so I guess I need to subtract off the extra field I added"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"97594d9a-d001-415c-8c6a-4141a403286f","type":"message","text":"Yup","user":"USU9FRPEU","ts":"1613512310.493100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YU1z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yup"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"cf79ddc3-47b1-4865-9041-cb20eaf27ebc","type":"message","text":"For e.g. VmbFrameStatus_t I actually declared enums that seem to work, but then went back to first principles as I was debugging just in case","user":"UL4JREGCV","ts":"1613512344.494000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VHz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For e.g. VmbFrameStatus_t I actually declared enums that seem to work, but then went back to first principles as I was debugging just in case"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"567916a4-45a7-4a20-b7e7-b7129fb18eab","type":"message","text":"Anyways, thank you both for your help","user":"UL4JREGCV","ts":"1613512437.496100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5sbx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyways, thank you both for your help"}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"bca06566-95d9-42c1-bdc3-d09b3370fa11","type":"message","text":"Perhaps the nice way to do this is use nested structs or something like that, where you have a Julia struct that contains the translated-from-C struct. Otherwise, good luck. I'm glad this worked out.","user":"USU9FRPEU","ts":"1613512554.498000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rWMA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps the nice way to do this is use nested structs or something like that, where you have a Julia struct that contains the translated-from-C struct. Otherwise, good luck. I'm glad this worked out."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"7c79a4e0-0fc3-4059-81db-d8176063f823","type":"message","text":"Fortunately for you, I'm in the middle of doing something very similar.","user":"USU9FRPEU","ts":"1613512570.498400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=7h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Fortunately for you, I'm in the middle of doing something very similar."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"client_msg_id":"3e3cfa45-d2d6-4ab3-b1d5-a95bd61d0d9d","type":"message","text":"Another clever idea, thanks. Then I can even wrap the construction of the C-struct nicely in the constructor of the outer one.","user":"UL4JREGCV","ts":"1613512621.499300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6hp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Another clever idea, thanks. Then I can even wrap the construction of the C-struct nicely in the constructor of the outer one."}]}]}],"thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"},{"type":"message","subtype":"bot_message","text":"Hey <@UL4JREGCV>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1613521834.008700","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613511012.469500","parent_user_id":"UL4JREGCV"}]