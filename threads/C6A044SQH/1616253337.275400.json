[{"client_msg_id":"5db88262-c0b4-4b49-a80a-a0fd341de4f8","type":"message","text":"Can someone ELI15 what situations ComponentArrays.jl works for? The examples go from a super simple getting started to graduate-level DiffEq example without anything in between.","user":"UFWQ6DP0S","ts":"1616253337.275400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JzRPg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can someone ELI15 what situations ComponentArrays.jl works for? The examples go from a super simple getting started to graduate-level DiffEq example without anything in between."}]}]}],"thread_ts":"1616253337.275400","reply_count":3,"reply_users_count":3,"latest_reply":"1616324229.292500","reply_users":["U017YGFQTE3","UFWQ6DP0S","U9MED583T"],"is_locked":false,"subscribed":false},{"client_msg_id":"5b13df96-9247-480e-b395-0c002e05e6cf","type":"message","text":"Its quite nice when working with autodiff packages, because ComponentVectors are just vectors with quite flexible indexing. Try the following for example\n```using ComponentArrays\nusing ForwardDiff\nusing Zygote\n\nC = ComponentArray(A = rand(2,2), B = rand(2,2))\ndist(C) = (C.A .- C.B).^2 |&gt; sum\n\nForwardDiff.gradient(dist,C)\nZygote.gradient(dist,C)```","user":"U017YGFQTE3","ts":"1616262631.277300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pz0FC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its quite nice when working with autodiff packages, because ComponentVectors are just vectors with quite flexible indexing. Try the following for example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using ComponentArrays\nusing ForwardDiff\nusing Zygote\n\nC = ComponentArray(A = rand(2,2), B = rand(2,2))\ndist(C) = (C.A .- C.B).^2 |> sum\n\nForwardDiff.gradient(dist,C)\nZygote.gradient(dist,C)"}]}]}],"thread_ts":"1616253337.275400","parent_user_id":"UFWQ6DP0S","reactions":[{"name":"today-i-learned","users":["U0138UTB7A4"],"count":1}]},{"client_msg_id":"13f4d147-9c8d-4a3f-99fb-7d3a4ad164b9","type":"message","text":"Why not use a named tuple? E.g. `(A=rand(2,2),B=rand(2,2)`? What advantage does being in an array provide?","user":"UFWQ6DP0S","ts":"1616298599.291000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ja0J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why not use a named tuple? E.g. "},{"type":"text","text":"(A=rand(2,2),B=rand(2,2)","style":{"code":true}},{"type":"text","text":"? What advantage does being in an array provide?"}]}]}],"thread_ts":"1616253337.275400","parent_user_id":"UFWQ6DP0S"},{"client_msg_id":"2aa7da39-c34c-4a4e-9f1d-7483eac372b5","type":"message","text":"The advantage is in the fact that  `&lt;: AbstractArray` gives a lot of functionality \"for free\". For example the `LinearAlgebra` will automatically work on those types","user":"U9MED583T","ts":"1616324229.292500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EPSma","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The advantage is in the fact that  "},{"type":"text","text":"<: AbstractArray","style":{"code":true}},{"type":"text","text":" gives a lot of functionality \"for free\". For example the "},{"type":"text","text":"LinearAlgebra","style":{"code":true}},{"type":"text","text":" will automatically work on those types"}]}]}],"thread_ts":"1616253337.275400","parent_user_id":"UFWQ6DP0S","reactions":[{"name":"point_up","users":["U017YGFQTE3"],"count":1}]}]