[{"client_msg_id":"3eabd8c4-38df-4490-bbf6-cef61f8a4487","type":"message","text":"1. I’m trying to figure out what testing etc libraries I should be using for julia, especially for property-based testing. I’m aware of SafeTestSets.jl, TestSetExtensions.jl, ReferenceTests.jl, UnitTestDesign.jl, RandomizedPropertyTest.jl Are there any other libraries I should look into?\n2. Is the main way to program with contracts in Julia to use ‘traits’? ","user":"US8V7JSKB","ts":"1614795113.282400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Z7I","elements":[{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m trying to figure out what testing etc libraries I should be using for julia, especially for property-based testing. I’m aware of SafeTestSets.jl, TestSetExtensions.jl, ReferenceTests.jl, UnitTestDesign.jl, RandomizedPropertyTest.jl Are there any other libraries I should look into?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Is the main way to program with contracts in Julia to use ‘traits’? "}]}],"style":"ordered","indent":0}]}],"thread_ts":"1614795113.282400","reply_count":19,"reply_users_count":5,"latest_reply":"1614841893.303400","reply_users":["B01J9QZ4SP8","UH24GRBLL","U019K6Q9N15","US8V7JSKB","U014MGSQYH5"],"subscribed":false,"reactions":[{"name":"bridge","users":["US8V7JSKB"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614795116.282500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/56429| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1614795134.282900","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"93f23de8-0525-4283-ae40-91de175a8b8d","type":"message","text":"I'm not aware of any package explicitly for property based testing (though I've worked on a prototype I'm not happy with)","user":"UH24GRBLL","ts":"1614795277.283100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BHMn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not aware of any package explicitly for property based testing (though I've worked on a prototype I'm not happy with)"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"93195c9a-c693-44d0-9df9-f7f2f80e162d","type":"message","text":"In julia, traits are mostly used to encode extra information that's not part of the type, to change or control dispatch more finely grained","user":"UH24GRBLL","ts":"1614795352.283300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P3z/T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In julia, traits are mostly used to encode extra information that's not part of the type, to change or control dispatch more finely grained"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"b8440196-9338-45e1-bfcf-7e162d87153c","type":"message","text":"most of the time, regular dispatch and duck typing is enough though","user":"UH24GRBLL","ts":"1614795376.283500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NN6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"most of the time, regular dispatch and duck typing is enough though"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"71c177de-8259-4caf-bee5-3c92535e9253","type":"message","text":"I could've sworn I read something by :invenia: about strategies for testing interfaces...","user":"U019K6Q9N15","ts":"1614795667.283900","team":"T68168MUP","edited":{"user":"U019K6Q9N15","ts":"1614795692.000000"},"blocks":[{"type":"rich_text","block_id":"F3q13","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I could've sworn I read something by "},{"type":"emoji","name":"invenia"},{"type":"text","text":" about strategies for testing interfaces..."}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"6011ca7e-0731-406e-9488-a94666887dfe","type":"message","text":"Oh <https://invenia.github.io/blog/2020/11/06/interfacetesting/|here's> something","user":"U019K6Q9N15","ts":"1614795675.284100","team":"T68168MUP","attachments":[{"service_name":"Invenia Blog","title":"Development with Interface Packages","title_link":"https://invenia.github.io/blog/2020/11/06/interfacetesting/","text":"Over the last two years, our Julia codebase has grown in size and complexity, and is now the centerpiece of both our operations and research. This implies that we need to routinely replace parts of the system like puzzle pieces, and carefully test if the results lead to improvements along various dimensions of performance. However, those pieces are not designed to work in isolation, and thus cannot be tested in a vacuum. They also tend to be quite large and complex, and therefore often need to be independent packages, which need to “fit” together in precise ways determined by the rest of the system. This is where interfaces come in handy: they are tools for isolating and precisely testing specific pieces of a large system.","fallback":"Invenia Blog: Development with Interface Packages","thumb_url":"https://invenia.github.io/blog/public/InveniaLogo.png","ts":1604620800,"from_url":"https://invenia.github.io/blog/2020/11/06/interfacetesting/","thumb_width":231,"thumb_height":224,"service_icon":"https://invenia.github.io/blog/public/favicon.png","id":1,"original_url":"https://invenia.github.io/blog/2020/11/06/interfacetesting/"}],"blocks":[{"type":"rich_text","block_id":"Mad","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh "},{"type":"link","url":"https://invenia.github.io/blog/2020/11/06/interfacetesting/","text":"here's"},{"type":"text","text":" something"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"1ec6dd8d-fc9a-4952-9299-c98094739381","type":"message","text":"Oh, huh, sorry I didn't fully read your post-- this doesn't really answer what you were asking about.","user":"U019K6Q9N15","ts":"1614795791.284600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+mZI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, huh, sorry I didn't fully read your post-- this doesn't really answer what you were asking about."}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"f1119ecb-df30-499a-b8ce-d3af95b85471","type":"message","text":"there's bits and pieces, but no property based testing","user":"UH24GRBLL","ts":"1614795809.284800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NLFx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's bits and pieces, but no property based testing"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"5781a9a1-2c7e-43c5-9724-aa299d20d1d8","type":"message","text":"it's a small missing hole that I'd like to see filled some day..","user":"UH24GRBLL","ts":"1614795869.285000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cnz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's a small missing hole that I'd like to see filled some day.."}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"a19262c0-eab2-4954-8e4e-b2fba40bc322","type":"message","text":"Thanks <@U019K6Q9N15> and <@UH24GRBLL>! That interface-testing blog post looks interesting nonetheless! :slightly_smiling_face:","user":"US8V7JSKB","ts":"1614796874.285300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KFBr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks "},{"type":"user","user_id":"U019K6Q9N15"},{"type":"text","text":" and "},{"type":"user","user_id":"UH24GRBLL"},{"type":"text","text":"! That interface-testing blog post looks interesting nonetheless! "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"type":"message","subtype":"bot_message","text":"Hey <@US8V7JSKB>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1614805936.300200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"48eeb739-b69e-4ca3-a16e-805688a6c3cf","type":"message","text":"I looked through testing tools and found only one on property-based testing, the same that you found: <https://gitlab.com/quf/randomizedpropertytest.jl>","user":"U014MGSQYH5","ts":"1614814966.301000","team":"T68168MUP","edited":{"user":"U014MGSQYH5","ts":"1614815054.000000"},"blocks":[{"type":"rich_text","block_id":"xek","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I looked through testing tools and found only one on property-based testing, the same that you found: "},{"type":"link","url":"https://gitlab.com/quf/randomizedpropertytest.jl"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"type":"message","text":"I kept notes on testing tools as I looked. Maybe this will give you an overview of what's available.","files":[{"id":"F01PNKU27JT","created":1614814992,"timestamp":1614814992,"name":"juliatesting.txt","title":"juliatesting.txt","mimetype":"text/plain","filetype":"text","pretty_type":"Plain Text","user":"U014MGSQYH5","editable":true,"size":5391,"mode":"snippet","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01PNKU27JT/juliatesting.txt","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01PNKU27JT/download/juliatesting.txt","permalink":"https://julialang.slack.com/files/U014MGSQYH5/F01PNKU27JT/juliatesting.txt","permalink_public":"https://slack-files.com/T68168MUP-F01PNKU27JT-bed8fda240","edit_link":"https://julialang.slack.com/files/U014MGSQYH5/F01PNKU27JT/juliatesting.txt/edit","preview":"# Extensions to Test Sets\n\nhttps://github.com/apieum/Maracas.jl\n - XXX what's up with this? Still in use?\n - nested, typed test sets","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre># Extensions to Test Sets</pre></div>\n<div><pre></pre></div>\n<div><pre>https://github.com/apieum/Maracas.jl</pre></div>\n<div><pre> - XXX what's up with this? Still in use?</pre></div>\n<div><pre> - nested, typed test sets</pre></div>\n</div>\n</div>\n","lines":198,"lines_more":193,"preview_is_truncated":true,"is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"MDHj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I kept notes on testing tools as I looked. Maybe this will give you an overview of what's available."}]}]}],"user":"U014MGSQYH5","display_as_bot":false,"ts":"1614815021.301300","thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"2bbab69d-8a62-4ce3-a184-e98c884d654d","type":"message","text":"That’s a really nice summary, <@U014MGSQYH5>! I’ll add it to the Discourse thread later tonight","user":"US8V7JSKB","ts":"1614816746.301600","team":"T68168MUP","edited":{"user":"US8V7JSKB","ts":"1614816751.000000"},"blocks":[{"type":"rich_text","block_id":"AZ9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That’s a really nice summary, "},{"type":"user","user_id":"U014MGSQYH5"},{"type":"text","text":"! I’ll add it to the Discourse thread later tonight"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"type":"message","text":"That's so kind, Han. I just added a few to it, because I'm learning. Here, I'll post the update. It's two math libraries that help test for floating-point roundoff problems.","files":[{"id":"F01Q3NJABFV","created":1614817343,"timestamp":1614817343,"name":"juliatesting.txt","title":"juliatesting.txt","mimetype":"text/plain","filetype":"text","pretty_type":"Plain Text","user":"U014MGSQYH5","editable":true,"size":5783,"mode":"snippet","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01Q3NJABFV/juliatesting.txt","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01Q3NJABFV/download/juliatesting.txt","permalink":"https://julialang.slack.com/files/U014MGSQYH5/F01Q3NJABFV/juliatesting.txt","permalink_public":"https://slack-files.com/T68168MUP-F01Q3NJABFV-0dfad0bb94","edit_link":"https://julialang.slack.com/files/U014MGSQYH5/F01Q3NJABFV/juliatesting.txt/edit","preview":"# Extensions to Test Sets\n\nhttps://github.com/apieum/Maracas.jl\n - XXX what's up with this? Still in use?\n - nested, typed test sets","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre># Extensions to Test Sets</pre></div>\n<div><pre></pre></div>\n<div><pre>https://github.com/apieum/Maracas.jl</pre></div>\n<div><pre> - XXX what's up with this? Still in use?</pre></div>\n<div><pre> - nested, typed test sets</pre></div>\n</div>\n</div>\n","lines":209,"lines_more":204,"preview_is_truncated":true,"is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"JpD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's so kind, Han. I just added a few to it, because I'm learning. Here, I'll post the update. It's two math libraries that help test for floating-point roundoff problems."}]}]}],"user":"U014MGSQYH5","display_as_bot":false,"ts":"1614817368.301900","thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"93abe473-09b3-4e24-afd3-4357939f59e7","type":"message","text":"RandomizedPropertyTest.jl does type based generation and no shrinking, sadly :/","user":"UH24GRBLL","ts":"1614841827.303000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i5nP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"RandomizedPropertyTest.jl does type based generation and no shrinking, sadly :/"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"111f8775-53bb-4622-8583-cdee52323a09","type":"message","text":"in julia we don't really have the same kind of type information as Haskell, so type based shrinking doesn't come for free for composite types","user":"UH24GRBLL","ts":"1614841890.303200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Loz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in julia we don't really have the same kind of type information as Haskell, so type based shrinking doesn't come for free for composite types"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"},{"client_msg_id":"92f662c7-fb9e-487c-9336-ed7f8e6af7f5","type":"message","text":"<https://hypothesis.works/articles/integrated-shrinking/>","user":"UH24GRBLL","ts":"1614841893.303400","team":"T68168MUP","attachments":[{"title":" Integrated vs type based shrinking - Hypothesis ","title_link":"https://hypothesis.works/articles/integrated-shrinking/","text":"Integrated vs type based shrinking One of the big differences between Hypothesis and Haskell QuickCheck is how shrinking is handled. Specifically, the way shrinking is handled in Haskell QuickCheck is bad and the way it works in Hypothesis (and also in test.check and EQC) is good. If you’re implementing a property based testing system, you should use the good way. If you’re using a property based testing system and it doesn’t use the good way, you need to know about this failure mode. Unfortunately many (and possibly most) implementations of property based testing are based on Haskell’s QuickCheck and so make the same mistake. Test faster, fix more","fallback":" Integrated vs type based shrinking - Hypothesis ","from_url":"https://hypothesis.works/articles/integrated-shrinking/","service_name":"hypothesis.works","id":1,"original_url":"https://hypothesis.works/articles/integrated-shrinking/"}],"blocks":[{"type":"rich_text","block_id":"MNJ","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://hypothesis.works/articles/integrated-shrinking/"}]}]}],"thread_ts":"1614795113.282400","parent_user_id":"US8V7JSKB"}]