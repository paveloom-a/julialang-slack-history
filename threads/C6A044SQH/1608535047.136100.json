[{"client_msg_id":"ed073d45-8518-4635-97b5-6a370bdc251b","type":"message","text":"Is there a lazy version of `get!(dict, key, default)`  where `default`  is evaluated only if the value doesn’t already exist for that key? I can do it with a `haskey` etc, but it’s not as pretty.","user":"UDSG73JTH","ts":"1608535047.136100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vP3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a lazy version of "},{"type":"text","text":"get!(dict, key, default)","style":{"code":true}},{"type":"text","text":"  where "},{"type":"text","text":"default","style":{"code":true}},{"type":"text","text":"  is evaluated only if the value doesn’t already exist for that key? I can do it with a "},{"type":"text","text":"haskey","style":{"code":true}},{"type":"text","text":" etc, but it’s not as pretty."}]}]}],"thread_ts":"1608535047.136100","reply_count":8,"reply_users_count":5,"latest_reply":"1608579153.171600","reply_users":["U6NFPDBV1","U8D9768Q6","U0179G7FG4F","UDSG73JTH","UPNRULT51"],"subscribed":false},{"client_msg_id":"84566789-0d22-4daa-9993-2c9fbaf90fbb","type":"message","text":"There's a lazy `get` but I don't think a mutating equivalent","user":"U6NFPDBV1","ts":"1608535232.136200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"91r4H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There's a lazy "},{"type":"text","text":"get","style":{"code":true}},{"type":"text","text":" but I don't think a mutating equivalent"}]}]}],"thread_ts":"1608535047.136100","parent_user_id":"UDSG73JTH"},{"client_msg_id":"CAE0F1B9-DBAE-4CCA-B802-7314FB277B40","type":"message","text":"If you don’t want `default` to be evaluated, a function can’t do that. Unless `default` is a function like / lazy object itself I suppose ","user":"U8D9768Q6","ts":"1608535309.138200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yd6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you don’t want "},{"type":"text","text":"default","style":{"code":true}},{"type":"text","text":" to be evaluated, a function can’t do that. Unless "},{"type":"text","text":"default","style":{"code":true}},{"type":"text","text":" is a function like / lazy object itself I suppose "}]}]}],"thread_ts":"1608535047.136100","parent_user_id":"UDSG73JTH"},{"client_msg_id":"6C503759-933D-473B-BD84-E820D1E5007A","type":"message","text":"You could write a macro which does it pretty easily ","user":"U8D9768Q6","ts":"1608535321.138800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bh4v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could write a macro which does it pretty easily "}]}]}],"thread_ts":"1608535047.136100","parent_user_id":"UDSG73JTH"},{"client_msg_id":"95a058d8-ceff-4c51-bb2f-629f272404d3","type":"message","text":"`macro get!(dict, key, default) return :(!($key in keys($dict)) &amp;&amp; ($dict[$key]=$default); $dict[$key]) end`","user":"U0179G7FG4F","ts":"1608536096.139000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PiRDt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"macro get!(dict, key, default) return :(!($key in keys($dict)) && ($dict[$key]=$default); $dict[$key]) end","style":{"code":true}}]}]}],"thread_ts":"1608535047.136100","parent_user_id":"UDSG73JTH","reactions":[{"name":"+1","users":["UDSG73JTH"],"count":1}]},{"client_msg_id":"d28986b1-34b6-4264-9390-7dff179cdddb","type":"message","text":"Thanks!","user":"UDSG73JTH","ts":"1608540596.146200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BEVa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks!"}]}]}],"thread_ts":"1608535047.136100","parent_user_id":"UDSG73JTH"},{"client_msg_id":"84c991af-8157-4dac-9aa1-22534bd07bfa","type":"message","text":"Most of the time you get away with something like `get!(()-&gt;zeros(3), dict, key)` since the function will not be called if the key exists in the dict. Or similarly with do syntax:\n```get!(dict,key) do\n  zeros(3)\nend```","user":"UPNRULT51","ts":"1608550525.154500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lmn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Most of the time you get away with something like "},{"type":"text","text":"get!(()->zeros(3), dict, key)","style":{"code":true}},{"type":"text","text":" since the function will not be called if the key exists in the dict. Or similarly with do syntax:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"get!(dict,key) do\n  zeros(3)\nend"}]}]}],"thread_ts":"1608535047.136100","parent_user_id":"UDSG73JTH","reactions":[{"name":"grinning","users":["UDSG73JTH","U0179G7FG4F"],"count":2}]},{"client_msg_id":"16845daf-cb16-46a9-b7b7-568974800e1a","type":"message","text":"That's perfect. I didn't realise that the arguments could go in that order. Thanks very much.","user":"UDSG73JTH","ts":"1608557553.156300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9oVPZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's perfect. I didn't realise that the arguments could go in that order. Thanks very much."}]}]}],"thread_ts":"1608535047.136100","parent_user_id":"UDSG73JTH"},{"client_msg_id":"e8164a54-b1d3-4d28-83ca-09b8c5dfa8ae","type":"message","text":"~<@U01B4PFMH62> woops~ :sweat_smile:, <@UPNRULT51> this is really helpful!","user":"UDSG73JTH","ts":"1608579153.171600","team":"T68168MUP","edited":{"user":"UDSG73JTH","ts":"1608579207.000000"},"blocks":[{"type":"rich_text","block_id":"MQB","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01B4PFMH62","style":{"strike":true}},{"type":"text","text":" woops","style":{"strike":true}},{"type":"text","text":" "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":", "},{"type":"user","user_id":"UPNRULT51"},{"type":"text","text":" this is really helpful!"}]}]}],"thread_ts":"1608535047.136100","parent_user_id":"UDSG73JTH","reactions":[{"name":"smile","users":["UPNRULT51"],"count":1}]}]