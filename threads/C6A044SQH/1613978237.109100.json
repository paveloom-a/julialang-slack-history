[{"client_msg_id":"d9d688bd-c363-4c9a-9cb5-6a9d4dc4ff5f","type":"message","text":"I have an algorithm question. Say I have lots of statements like\n```a == b\nc == d\ne == f\na == e```\nHow do I most directly (and performantly) transfom these equalities to clusters\n```1: a, b, e, f\n2: c, d```\n?","user":"U73KENNG4","ts":"1613978237.109100","team":"T68168MUP","edited":{"user":"U73KENNG4","ts":"1613978360.000000"},"blocks":[{"type":"rich_text","block_id":"y38Eb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have an algorithm question. Say I have lots of statements like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"a == b\nc == d\ne == f\na == e"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"How do I most directly (and performantly) transfom these equalities to clusters\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"1: a, b, e, f\n2: c, d"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"?"}]}]}],"thread_ts":"1613978237.109100","reply_count":32,"reply_users_count":8,"latest_reply":"1614002696.136600","reply_users":["B01J9QZ4SP8","UG59025DJ","U73KENNG4","U7HAYKY9X","U68QW0PUZ","U01MG0TN079","UDD5Z7FLZ","UBF9YRB6H"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613978238.109200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"41b7955f-af9d-485d-b0cd-9b943b10ef95","type":"message","text":"I won't be able to help You with Julia, but this sounds like a question about constructing a graph and then finding its \"components\".","user":"UG59025DJ","ts":"1613978408.109900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jPMX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I won't be able to help You with Julia, but this sounds like a question about constructing a graph and then finding its \"components\"."}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"4ceb1199-4335-40c6-9318-495ae6c715e3","type":"message","text":"yes essentially","user":"U73KENNG4","ts":"1613978526.110100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fuOh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes essentially"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"9497cf7e-144e-4ab2-b095-3add055d0733","type":"message","text":"I’d rather not do it with a graph library though","user":"U73KENNG4","ts":"1613978537.110300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JlQbB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’d rather not do it with a graph library though"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"b18d5508-c9cb-493b-857d-9a183131d68e","type":"message","text":"My current idea is to have a `Dict{Char, Set{Char}}`, that starts e.g.\n```dict = Dict(\n'a' =&gt; Set(['a', 'b']),\n'b' =&gt; Set(['a', 'b'])\n)```\nthen fills in c and d essentially. I think I can initialize the sets so they don’t need to be copies but can be the same thing","user":"U73KENNG4","ts":"1613978721.110500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qCo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My current idea is to have a "},{"type":"text","text":"Dict{Char, Set{Char}}","style":{"code":true}},{"type":"text","text":", that starts e.g.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"dict = Dict(\n'a' => Set(['a', 'b']),\n'b' => Set(['a', 'b'])\n)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"then fills in c and d essentially. I think I can initialize the sets so they don’t need to be copies but can be the same thing"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"1ec0d781-931c-4096-a94c-2ad148580414","type":"message","text":"That's exactly what I wanted to suggest :) But why not have the sets be copies? E.g. `dict['a'] === dict['b']` ? More efficient that way","user":"U7HAYKY9X","ts":"1613979186.110800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"meTiL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's exactly what I wanted to suggest :) But why not have the sets be copies? E.g. "},{"type":"text","text":"dict['a'] === dict['b']","style":{"code":true}},{"type":"text","text":" ? More efficient that way"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"dbfc3f57-6473-47bd-8216-652e0e1118dd","type":"message","text":"maybe -- my sense is that  set relations are useful here, I'm not convinced that that sort of Dict is the only ticket.  A good step would be isolating those elements on the lefthandsides that occur more than once and clearing any equivalences that are subsumed .. and so on","user":"U68QW0PUZ","ts":"1613979209.111000","team":"T68168MUP","edited":{"user":"U68QW0PUZ","ts":"1613979225.000000"},"blocks":[{"type":"rich_text","block_id":"NUTDx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe -- my sense is that  set relations are useful here, I'm not convinced that that sort of Dict is the only ticket.  A good step would be isolating those elements on the lefthandsides that occur more than once and clearing any equivalences that are subsumed .. and so on"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"dd650620-0572-4f5c-98d9-bf8bba667bf3","type":"message","text":"Dicts gets too much bad press. They're excellent 99% of use cases\nEdit: Let me clarify: They're \"slow\", but still sub-microsecond, and there are lots and lots of situations where you can throw microseconds away and never notice","user":"U7HAYKY9X","ts":"1613979417.111300","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1613979501.000000"},"blocks":[{"type":"rich_text","block_id":"oEAw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Dicts gets too much bad press. They're excellent 99% of use cases\nEdit: Let me clarify: They're \"slow\", but still sub-microsecond, and there are lots and lots of situations where you can throw microseconds away and never notice"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"978fbcfd-67a6-413a-8f92-5e49bf9652c3","type":"message","text":"Jakob that is what I meant - I do not want them to be the result of `copy` :slightly_smiling_face:","user":"U73KENNG4","ts":"1613979474.111500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5vP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Jakob that is what I meant - I do not want them to be the result of "},{"type":"text","text":"copy","style":{"code":true}},{"type":"text","text":" "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4","reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"d6997cb1-9ae9-4d76-b4d2-a2c3a1518cde","type":"message","text":"I think the set processes are slower than the dict here?","user":"U73KENNG4","ts":"1613979527.111900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GDq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the set processes are slower than the dict here?"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"82bd8a1c-f7d7-4b0c-bbf8-44321fe70651","type":"message","text":"do you know the keys beforehand?","user":"U01MG0TN079","ts":"1613979544.112100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ypM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do you know the keys beforehand?"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"e3db6ce7-7e77-4d30-9fb1-6ed580944f81","type":"message","text":"```for (a,b) in pairs\n       c_a = pop!(filter(x-&gt;a ∈ x, components))\n       c_b = pop!(filter(x-&gt;b ∈ x, components))\n       delete!(components, c_a)\n       delete!(components, c_b)\n       push!(components, c_a ∪ c_b)\nend```","user":"U01MG0TN079","ts":"1613979574.112300","team":"T68168MUP","edited":{"user":"U01MG0TN079","ts":"1613979601.000000"},"blocks":[{"type":"rich_text","block_id":"+Wo","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for (a,b) in pairs\n       c_a = pop!(filter(x->a ∈ x, components))\n       c_b = pop!(filter(x->b ∈ x, components))\n       delete!(components, c_a)\n       delete!(components, c_b)\n       push!(components, c_a ∪ c_b)\nend"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"810701c2-a320-483e-94a1-3e52454da00c","type":"message","text":"not while I build the list of equalities, but when I have them I do","user":"U73KENNG4","ts":"1613979578.112500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T5H=0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not while I build the list of equalities, but when I have them I do"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"a6b29774-05d5-4bb7-a0f9-1fc5dc1801a2","type":"message","text":"I was thinking of `LittleDict` (its ordered, and the frozen form is very fast for relatively small number of items)","user":"U68QW0PUZ","ts":"1613979578.112700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qY6kH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was thinking of "},{"type":"text","text":"LittleDict","style":{"code":true}},{"type":"text","text":" (its ordered, and the frozen form is very fast for relatively small number of items)"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"2fc2ed7e-fd56-48ec-b517-7dc31234710e","type":"message","text":"<@U01MG0TN079> that looks slow?","user":"U73KENNG4","ts":"1613979604.113000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9HyrR","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01MG0TN079"},{"type":"text","text":" that looks slow?"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"de2d9fc5-108e-4e01-be3f-29cae20f58ae","type":"message","text":"I’ll check out littledict","user":"U73KENNG4","ts":"1613979615.113200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w0N=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ll check out littledict"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"b1cdb333-9e35-4ddb-a514-43a02f875dd3","type":"message","text":"Probably? I just thought I'd give it a try","user":"U01MG0TN079","ts":"1613979623.113400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jtt/r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Probably? I just thought I'd give it a try"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4","reactions":[{"name":"heart","users":["U73KENNG4"],"count":1}]},{"client_msg_id":"17e45ae0-a385-40ff-83af-175b9e71341a","type":"message","text":"in OrderedCollections.jl","user":"U68QW0PUZ","ts":"1613979630.113600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SvfMd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in OrderedCollections.jl"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4","reactions":[{"name":"+1","users":["U73KENNG4"],"count":1}]},{"client_msg_id":"85701790-2f80-4dfe-b75f-018e45073a14","type":"message","text":"I mean, it's conceptually how I'd do it at least","user":"U01MG0TN079","ts":"1613979639.113800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WaSr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, it's conceptually how I'd do it at least"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"f81d613c-f05e-433b-b70c-d70d5e7b503c","type":"message","text":"or you could only keep representatives for each set?","user":"U01MG0TN079","ts":"1613979653.114000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yjB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or you could only keep representatives for each set?"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"af8150a6-a63f-4e94-8ac2-ecda34426ae5","type":"message","text":"Wait, actually, how is your idea faster than what I propose? (genuine question)","user":"U01MG0TN079","ts":"1613979894.114200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uySMj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wait, actually, how is your idea faster than what I propose? (genuine question)"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"9643186f-ce19-453e-8622-4e9cccef7772","type":"message","text":"Is it the not having to filter sets everytime you have a new pair?","user":"U01MG0TN079","ts":"1613979923.114400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5dTIe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it the not having to filter sets everytime you have a new pair?"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"f1e3dafb-1447-4b7a-b0e5-606edf048d78","type":"message","text":"I’ll try it out and compare - thanks :heart:","user":"U73KENNG4","ts":"1613980236.114800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WHP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ll try it out and compare - thanks "},{"type":"emoji","name":"heart"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"2228ec89-8e85-48df-8565-dd342b2b1e24","type":"message","text":"pls post what you end up using","user":"U68QW0PUZ","ts":"1613981233.115400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cEcz8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pls post what you end up using"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4","reactions":[{"name":"+1","users":["U73KENNG4"],"count":1}]},{"client_msg_id":"eb4073da-35d1-4205-b68b-d3eb3a76e2d1","type":"message","text":"I would do:\n```function foo(it)\n    dict = Dict{Char, Set{Char}}()\n    for (a, b) in it\n        s1 = get(dict, a, nothing)\n        s2 = get(dict, b, nothing)\n        if s1 === s2 === nothing\n            s = Set((a, b))\n            dict[a] = s\n            dict[b] = s\n        elseif s1 === nothing\n            push!(s2, a)\n            dict[a] = s2\n        elseif s2 === nothing\n            push!(s1, b)\n            dict[b] = s1\n        elseif s1 === s2\n            continue\n        else\n            union!(s1, s2)\n            for i in s2\n                dict[i] = s1\n            end\n        end\n    end\n    unique(values(dict))\nend```","user":"U7HAYKY9X","ts":"1613982205.115700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SD/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would do:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function foo(it)\n    dict = Dict{Char, Set{Char}}()\n    for (a, b) in it\n        s1 = get(dict, a, nothing)\n        s2 = get(dict, b, nothing)\n        if s1 === s2 === nothing\n            s = Set((a, b))\n            dict[a] = s\n            dict[b] = s\n        elseif s1 === nothing\n            push!(s2, a)\n            dict[a] = s2\n        elseif s2 === nothing\n            push!(s1, b)\n            dict[b] = s1\n        elseif s1 === s2\n            continue\n        else\n            union!(s1, s2)\n            for i in s2\n                dict[i] = s1\n            end\n        end\n    end\n    unique(values(dict))\nend"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"90c7cc8e-136f-4b24-a877-f68fa404b17e","type":"message","text":"with his example data, what is the input to your fn? (btw looks cool)","user":"U68QW0PUZ","ts":"1613982253.115900","team":"T68168MUP","edited":{"user":"U68QW0PUZ","ts":"1613982286.000000"},"blocks":[{"type":"rich_text","block_id":"=2/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with his example data, what is the input to your fn? (btw looks cool)"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"4443211a-11a4-47c9-9d04-d2ae674575ac","type":"message","text":"Any iterable of two chars.","user":"U7HAYKY9X","ts":"1613982338.116200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KWv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any iterable of two chars."}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4","reactions":[{"name":"slightly_smiling_face","users":["U68QW0PUZ"],"count":1}]},{"client_msg_id":"a90854d2-368a-4e8f-971c-eafbc278b41c","type":"message","text":"```julia&gt; equivalences = ['a' =&gt; 'b', 'c' =&gt; 'd', 'e' =&gt; 'f', 'a' =&gt; 'e'];\n\njulia&gt; foo(equivalences)\n2-element Array{Set{Char},1}:\n Set(['f', 'a', 'e', 'b'])\n Set(['c', 'd'])```","user":"U68QW0PUZ","ts":"1613982512.116500","team":"T68168MUP","edited":{"user":"U68QW0PUZ","ts":"1613982560.000000"},"blocks":[{"type":"rich_text","block_id":"VVdz","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> equivalences = ['a' => 'b', 'c' => 'd', 'e' => 'f', 'a' => 'e'];\n\njulia> foo(equivalences)\n2-element Array{Set{Char},1}:\n Set(['f', 'a', 'e', 'b'])\n Set(['c', 'd'])"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"2ca5c9ab-0d4e-411e-937e-6e63e8ccade0","type":"message","text":"You should use the Union-Find Data Structure in `DataStructures.jl`","user":"UDD5Z7FLZ","ts":"1613985749.117600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IhE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You should use the Union-Find Data Structure in "},{"type":"text","text":"DataStructures.jl","style":{"code":true}}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"20752bba-dede-4eb8-91c2-886b2131b258","type":"message","text":"This is both very efficient (almost `O(1)`) and very little memory usage.\n\nTheir use case is exactly like you describe.","user":"UDD5Z7FLZ","ts":"1613985789.117800","team":"T68168MUP","edited":{"user":"UDD5Z7FLZ","ts":"1613985821.000000"},"blocks":[{"type":"rich_text","block_id":"39C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is both very efficient (almost "},{"type":"text","text":"O(1)","style":{"code":true}},{"type":"text","text":") and very little memory usage.\n\nTheir use case is exactly like you describe."}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"},{"client_msg_id":"50821842-33b4-42ef-a4dc-27ca1d1f29c6","type":"message","text":"Sorry for not responding - day crammed full of meetings! Thanks a lot!\nJakob’s solution is really cool but the Disjoint Set forest in DataStructures seems to be exactly what I was looking for :heart:","user":"U73KENNG4","ts":"1614001265.134500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VIe0y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry for not responding - day crammed full of meetings! Thanks a lot!\nJakob’s solution is really cool but the Disjoint Set forest in DataStructures seems to be exactly what I was looking for "},{"type":"emoji","name":"heart"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4","reactions":[{"name":"100","users":["U7HAYKY9X","U0179G7FG4F"],"count":2}]},{"client_msg_id":"84fea786-2b4c-462a-be53-315c043454d6","type":"message","text":"You can turn it into a graph and find the connected components as well <https://juliagraphs.org/LightGraphs.jl/v1.0/pathing.html#LightGraphs.connected_components>","user":"UBF9YRB6H","ts":"1614002696.136600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CDKi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can turn it into a graph and find the connected components as well "},{"type":"link","url":"https://juliagraphs.org/LightGraphs.jl/v1.0/pathing.html#LightGraphs.connected_components"}]}]}],"thread_ts":"1613978237.109100","parent_user_id":"U73KENNG4"}]