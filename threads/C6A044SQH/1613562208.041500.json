[{"client_msg_id":"e7c3cda2-d7e5-4612-9b8b-104c2d4d2aea","type":"message","text":"```using JuAFEM\nusing BlockArrays, SparseArrays, LinearAlgebra\n\n   corners = [Vec{2}((0.0,  0.0)),\n              Vec{2}((1.0, 0.0)),\n              Vec{2}((1.0, 1.0)),\n              Vec{2}((0.0, 1.0))]\n   grid = generate_grid(QuadraticQuadrilateral, (1, 1), corners);\n   \n\n#Interpolation &amp; Quadrature rule\nfunction create_values(interpolation_u)\n   # quadrature rules\n   qr     = QuadratureRule{2,RefCube}(3)\n   face_qr = QuadratureRule{1,RefCube}(3)\n\n   # geometric interpolation\n   interpolation_geom = Lagrange{2,RefCube,2}()\n\n   # cell and facevalues for u\n   cellvalues_u = CellVectorValues(qr, interpolation_u, interpolation_geom)\n   facevalues_u = FaceVectorValues(face_qr, interpolation_u, interpolation_geom)\n   return cellvalues_u, facevalues_u\nend;\n\n\nfunction create_dofhandler(grid, ipu)\n   dh = DofHandler(grid)\n   push!(dh, :u, 2, ipu) # displacement\n   close!(dh)\n   return dh\nend;\n\nfunction create_bc(dh)\n   dbc = ConstraintHandler(dh)\n\n   add!(dbc, Dirichlet(:u, getfaceset(dh.grid, \"bottom\"), (x,t) -&gt; 0.0, [2]))\n   add!(dbc, Dirichlet(:u, getfaceset(dh.grid, \"left\") , (x,t) -&gt; 0.0, [1]))\n   close!(dbc)\n   t = 0.0\n   update!(dbc, t)\n   return dbc\nend;\n\nfunction create_stiffness(::Val{dim}) where {dim}\n   E = 1.0\n   ν = 0.3\n   λ = E*ν / ((1+ν) * (1 - 2ν))\n   μ = E / (2(1+ν))\n   δ(i,j) = i == j ? 1.0 : 0.0\n   g(i,j,k,l) = λ*δ(i,j)*δ(k,l) + μ*(δ(i,k)*δ(j,l) + δ(i,l)*δ(j,k))\n   C = SymmetricTensor{4, dim}(g);\n   return C\nend;\n\nfunction doassemble(cellvalues_u::CellVectorValues{dim},\n                   facevalues_u::FaceVectorValues{dim}, K::SparseMatrixCSC, grid::Grid,\n                   dh::DofHandler) where {dim}\n\n   f = zeros(ndofs(dh))\n   assembler = start_assemble(K, f)\n   nu = getnbasefunctions(cellvalues_u)\n\n   fe = PseudoBlockArray(zeros(nu), [nu]) # local force vector\n   ke = PseudoBlockArray(zeros(nu , nu), [nu], [nu]) # local stiffness matrix\n\n   # traction vector\n   t = Vec{2}((1.0, 0.0))\n   # cache ɛdev outside the element routine to avoid some unnecessary allocations\n\n   for cell in CellIterator(dh)\n       fill!(ke, 0)\n       fill!(fe, 0)\n       assemble_up!(ke, fe, cell, cellvalues_u, facevalues_u, grid, t)\n       assemble!(assembler, celldofs(cell), fe, ke)\n   end\n\n   return K, f\nend;\n\nfunction assemble_up!(Ke, fe, cell, cellvalues_u, facevalues_u, grid, t)\n\n   n_basefuncs_u = getnbasefunctions(cellvalues_u)\n   reinit!(cellvalues_u, cell)\n   C = create_stiffness(Val(2))\n\n    @inbounds for q_point in 1:getnquadpoints(cellvalues_u) # loop over quadrature points\n       dΩ = getdetJdV(cellvalues_u, q_point)\n       for i in 1:n_basefuncs_u # loop over number of ansatz functions\n           BuT = symmetric(shape_gradient(cellvalues_u, q_point, i))\n           for j in 1:i \n               Bu = symmetric(shape_gradient(cellvalues_u, q_point, j))\n               Ke[i, j] += BuT ⊡ C ⊡ Bu * dΩ \n           end\n       end\n   end\nsymmetrize_lower!(Ke)\n\n   \n   @inbounds for face in 1:nfaces(cell)\n       if onboundary(cell, face) &amp;&amp; (cellid(cell), face) ∈ getfaceset(grid, \"right\")\n           reinit!(facevalues_u, cell, face)\n           for q_point in 1:getnquadpoints(facevalues_u)\n               dΓ = getdetJdV(facevalues_u, q_point)\n               for i in 1:n_basefuncs_u\n                   δu = shape_value(facevalues_u, q_point, i)\n                   fe[i] += (δu ⋅ t) * dΓ\n               end\n           end\n       end\n   end\nend\n\nfunction symmetrize_lower!(K)\n   for i in 1:size(K,1)\n       for j in i+1:size(K,1)\n           K[i,j] = K[j,i]\n       end\n   end\nend;\n\n\n\nfunction solve(interpolation_u)\n\n   # grid, dofhandler, boundary condition\n   \n   dh = create_dofhandler(grid, interpolation_u)\n   dbc = create_bc(dh)\n\n   # cellvalues\n   cellvalues_u, facevalues_u = create_values(interpolation_u)\n\n   # assembly and solve\n   K = create_sparsity_pattern(dh);\n   K, f = doassemble(cellvalues_u, facevalues_u, K, grid, dh);\n   apply!(K, f, dbc)\n   u = Symmetric(K) \\ f;\nend\n\n\nquadratic = Lagrange{2,RefCube,2}()\nu = solve(quadratic)\n\nprintln(typeof(u))\nprintln(u)\nvtk_grid(\"sample grid\", dh) do vtk\n   vtk_point_data(vtk,dh , u)\nend```","user":"U01G48MB94Y","ts":"1613562208.041500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2hMP-i3TU","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using JuAFEM\nusing BlockArrays, SparseArrays, LinearAlgebra\n\n   corners = [Vec{2}((0.0,  0.0)),\n              Vec{2}((1.0, 0.0)),\n              Vec{2}((1.0, 1.0)),\n              Vec{2}((0.0, 1.0))]\n   grid = generate_grid(QuadraticQuadrilateral, (1, 1), corners);\n   \n\n#Interpolation & Quadrature rule\nfunction create_values(interpolation_u)\n   # quadrature rules\n   qr     = QuadratureRule{2,RefCube}(3)\n   face_qr = QuadratureRule{1,RefCube}(3)\n\n   # geometric interpolation\n   interpolation_geom = Lagrange{2,RefCube,2}()\n\n   # cell and facevalues for u\n   cellvalues_u = CellVectorValues(qr, interpolation_u, interpolation_geom)\n   facevalues_u = FaceVectorValues(face_qr, interpolation_u, interpolation_geom)\n   return cellvalues_u, facevalues_u\nend;\n\n\nfunction create_dofhandler(grid, ipu)\n   dh = DofHandler(grid)\n   push!(dh, :u, 2, ipu) # displacement\n   close!(dh)\n   return dh\nend;\n\nfunction create_bc(dh)\n   dbc = ConstraintHandler(dh)\n\n   add!(dbc, Dirichlet(:u, getfaceset(dh.grid, \"bottom\"), (x,t) -> 0.0, [2]))\n   add!(dbc, Dirichlet(:u, getfaceset(dh.grid, \"left\") , (x,t) -> 0.0, [1]))\n   close!(dbc)\n   t = 0.0\n   update!(dbc, t)\n   return dbc\nend;\n\nfunction create_stiffness(::Val{dim}) where {dim}\n   E = 1.0\n   ν = 0.3\n   λ = E*ν / ((1+ν) * (1 - 2ν))\n   μ = E / (2(1+ν))\n   δ(i,j) = i == j ? 1.0 : 0.0\n   g(i,j,k,l) = λ*δ(i,j)*δ(k,l) + μ*(δ(i,k)*δ(j,l) + δ(i,l)*δ(j,k))\n   C = SymmetricTensor{4, dim}(g);\n   return C\nend;\n\nfunction doassemble(cellvalues_u::CellVectorValues{dim},\n                   facevalues_u::FaceVectorValues{dim}, K::SparseMatrixCSC, grid::Grid,\n                   dh::DofHandler) where {dim}\n\n   f = zeros(ndofs(dh))\n   assembler = start_assemble(K, f)\n   nu = getnbasefunctions(cellvalues_u)\n\n   fe = PseudoBlockArray(zeros(nu), [nu]) # local force vector\n   ke = PseudoBlockArray(zeros(nu , nu), [nu], [nu]) # local stiffness matrix\n\n   # traction vector\n   t = Vec{2}((1.0, 0.0))\n   # cache ɛdev outside the element routine to avoid some unnecessary allocations\n\n   for cell in CellIterator(dh)\n       fill!(ke, 0)\n       fill!(fe, 0)\n       assemble_up!(ke, fe, cell, cellvalues_u, facevalues_u, grid, t)\n       assemble!(assembler, celldofs(cell), fe, ke)\n   end\n\n   return K, f\nend;\n\nfunction assemble_up!(Ke, fe, cell, cellvalues_u, facevalues_u, grid, t)\n\n   n_basefuncs_u = getnbasefunctions(cellvalues_u)\n   reinit!(cellvalues_u, cell)\n   C = create_stiffness(Val(2))\n\n    @inbounds for q_point in 1:getnquadpoints(cellvalues_u) # loop over quadrature points\n       dΩ = getdetJdV(cellvalues_u, q_point)\n       for i in 1:n_basefuncs_u # loop over number of ansatz functions\n           BuT = symmetric(shape_gradient(cellvalues_u, q_point, i))\n           for j in 1:i \n               Bu = symmetric(shape_gradient(cellvalues_u, q_point, j))\n               Ke[i, j] += BuT ⊡ C ⊡ Bu * dΩ \n           end\n       end\n   end\nsymmetrize_lower!(Ke)\n\n   \n   @inbounds for face in 1:nfaces(cell)\n       if onboundary(cell, face) && (cellid(cell), face) ∈ getfaceset(grid, \"right\")\n           reinit!(facevalues_u, cell, face)\n           for q_point in 1:getnquadpoints(facevalues_u)\n               dΓ = getdetJdV(facevalues_u, q_point)\n               for i in 1:n_basefuncs_u\n                   δu = shape_value(facevalues_u, q_point, i)\n                   fe[i] += (δu ⋅ t) * dΓ\n               end\n           end\n       end\n   end\nend\n\nfunction symmetrize_lower!(K)\n   for i in 1:size(K,1)\n       for j in i+1:size(K,1)\n           K[i,j] = K[j,i]\n       end\n   end\nend;\n\n\n\nfunction solve(interpolation_u)\n\n   # grid, dofhandler, boundary condition\n   \n   dh = create_dofhandler(grid, interpolation_u)\n   dbc = create_bc(dh)\n\n   # cellvalues\n   cellvalues_u, facevalues_u = create_values(interpolation_u)\n\n   # assembly and solve\n   K = create_sparsity_pattern(dh);\n   K, f = doassemble(cellvalues_u, facevalues_u, K, grid, dh);\n   apply!(K, f, dbc)\n   u = Symmetric(K) \\ f;\nend\n\n\nquadratic = Lagrange{2,RefCube,2}()\nu = solve(quadratic)\n\nprintln(typeof(u))\nprintln(u)\nvtk_grid(\"sample grid\", dh) do vtk\n   vtk_point_data(vtk,dh , u)\nend"}]}]}],"thread_ts":"1613562208.041500","reply_count":15,"reply_users_count":5,"latest_reply":"1613574094.073900","reply_users":["B01J9QZ4SP8","U7HAYKY9X","UH24GRBLL","U01G48MB94Y","U67SCG4HG"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613562210.041900","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y","reactions":[{"name":"bridge","users":["U01G48MB94Y"],"count":1}]},{"client_msg_id":"6143d587-6b2d-4af2-888c-a8516b9c710c","type":"message","text":"Which line does it say errors?","user":"U7HAYKY9X","ts":"1613562335.042800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i+p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which line does it say errors?"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"62b59e78-3be9-4137-a15a-3fdd11af0251","type":"message","text":"(also, to crosspost, you need to \"react\" by pressing the react button, not reply to the message :) )","user":"U7HAYKY9X","ts":"1613562390.043000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I/b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(also, to crosspost, you need to \"react\" by pressing the react button, not reply to the message :) )"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"c84c2c44-3b29-41b0-8e47-37214e20b0fe","type":"message","text":"presumably it errors at `vtk_grid(\"sample grid\", dh) do ...`","user":"UH24GRBLL","ts":"1613562511.043200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y7EU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"presumably it errors at "},{"type":"text","text":"vtk_grid(\"sample grid\", dh) do ...","style":{"code":true}}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"1bb25e8f-bd15-44f5-8b58-3a2888bd022d","type":"message","text":"I don't see any definition of `dh` at the top level, where would you expect it to be defined?","user":"UH24GRBLL","ts":"1613562542.043400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mhfK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't see any definition of "},{"type":"text","text":"dh","style":{"code":true}},{"type":"text","text":" at the top level, where would you expect it to be defined?"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"86e5ef74-432f-4c3a-a0f9-ffdb64540bad","type":"message","text":"note that you don't need all those `;` at the end of lines","user":"UH24GRBLL","ts":"1613562575.043600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Mhr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"note that you don't need all those "},{"type":"text","text":";","style":{"code":true}},{"type":"text","text":" at the end of lines"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"type":"message","text":"this is the error,","files":[{"id":"F01N6BGG80N","created":1613562940,"timestamp":1613562940,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01G48MB94Y","editable":false,"size":66186,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01N6BGG80N/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01N6BGG80N/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01N6BGG80N-46362d5eb3/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01N6BGG80N-46362d5eb3/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01N6BGG80N-46362d5eb3/image_360.png","thumb_360_w":360,"thumb_360_h":150,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01N6BGG80N-46362d5eb3/image_480.png","thumb_480_w":480,"thumb_480_h":200,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01N6BGG80N-46362d5eb3/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01N6BGG80N-46362d5eb3/image_720.png","thumb_720_w":720,"thumb_720_h":299,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01N6BGG80N-46362d5eb3/image_800.png","thumb_800_w":800,"thumb_800_h":333,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01N6BGG80N-46362d5eb3/image_960.png","thumb_960_w":960,"thumb_960_h":399,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01N6BGG80N-46362d5eb3/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":426,"original_w":1243,"original_h":517,"thumb_tiny":"AwATADDR7A0fiKD90UmfagBfypc/SkyPSl/4DQAZ+lH5Ucf3aBj0oAByBRtHpQOgpaAEwPSlwKKKADFFFFAH/9k=","permalink":"https://julialang.slack.com/files/U01G48MB94Y/F01N6BGG80N/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01N6BGG80N-7535eaa069","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"lAp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is the error,"}]}]}],"user":"U01G48MB94Y","display_as_bot":false,"ts":"1613563139.044100","thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"5617c670-f84f-4a3f-9427-bc085f9ceb86","type":"message","text":"yep, it's the call to `vtk_grid`","user":"UH24GRBLL","ts":"1613563227.044300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V2tQh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yep, it's the call to "},{"type":"text","text":"vtk_grid","style":{"code":true}}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"f5418cd7-2ded-47a9-a3d5-ca62fe4b3428","type":"message","text":"the stacktrace says `top-level scope at In[10]:148`, which is line 148 in the cell above","user":"UH24GRBLL","ts":"1613563250.044500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ryh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the stacktrace says "},{"type":"text","text":"top-level scope at In[10]:148","style":{"code":true}},{"type":"text","text":", which is line 148 in the cell above"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"19361499-a3b3-4148-ae31-1a1faffee732","type":"message","text":"where do you assign `dh`?","user":"UH24GRBLL","ts":"1613563268.044700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fv2P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where do you assign "},{"type":"text","text":"dh","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"28529edb-a339-4b70-91a8-b398e6738b14","type":"message","text":"line no. 28,","user":"U01G48MB94Y","ts":"1613563320.044900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d+fm=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"line no. 28,"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"fc40f4f1-60bc-4ed6-bd0c-95e065a5cb2d","type":"message","text":"those assignments are all inside of functions, not in the top level scope","user":"UH24GRBLL","ts":"1613563411.045100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SSh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"those assignments are all inside of functions, not in the top level scope"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"94aab30a-e249-4c4e-9585-58a15ac1305f","type":"message","text":"Actually I looked at the examples in JuAFEM package and tried to change it according to my linear elasticity problem. In the examples it works fine.","user":"U01G48MB94Y","ts":"1613563553.045300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+NyvO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually I looked at the examples in JuAFEM package and tried to change it according to my linear elasticity problem. In the examples it works fine."}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"0784a531-88ee-47ef-807f-8a50baf56a03","type":"message","text":"Probably was a global variable then in that example","user":"U67SCG4HG","ts":"1613563766.045900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Ml","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Probably was a global variable then in that example"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"},{"client_msg_id":"3365584d-344c-41c1-9adb-765c6cf125a0","type":"message","text":"I found the mistake, thank you all for helping","user":"U01G48MB94Y","ts":"1613574094.073900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zDj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I found the mistake, thank you all for helping"}]}]}],"thread_ts":"1613562208.041500","parent_user_id":"U01G48MB94Y"}]