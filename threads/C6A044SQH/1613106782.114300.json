[{"client_msg_id":"d5094aa7-d3f0-44b1-9339-0e39abd0a2cc","type":"message","text":"Why does sum() not return Float type in this example?\n```using Distributions\nw = rand(Normal(), 10, 2000)\nϐ = vec(sum(&gt;(.0),w, dims=2))```\nThanks in advance","user":"ULKN4RKAR","ts":"1613106782.114300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5CVI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why does sum() not return Float type in this example?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Distributions\nw = rand(Normal(), 10, 2000)\nϐ = vec(sum(>(.0),w, dims=2))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks in advance"}]}]}],"thread_ts":"1613106782.114300","reply_count":11,"reply_users_count":5,"latest_reply":"1613113137.121600","reply_users":["B01J9QZ4SP8","U0179G7FG4F","ULKN4RKAR","UB197FRCL","UB2QRMQPN"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613106785.114400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR"},{"client_msg_id":"7a81c5f0-da1a-4e40-8db7-bfbf9dcf7d6e","type":"message","text":"because `w[i]&gt;0` returns a `Boolean` and the `sum` of `Boolean`s is an `Int`","user":"U0179G7FG4F","ts":"1613106972.114600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xV1x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because "},{"type":"text","text":"w[i]>0","style":{"code":true}},{"type":"text","text":" returns a "},{"type":"text","text":"Boolean","style":{"code":true}},{"type":"text","text":" and the "},{"type":"text","text":"sum","style":{"code":true}},{"type":"text","text":" of "},{"type":"text","text":"Boolean","style":{"code":true}},{"type":"text","text":"s is an "},{"type":"text","text":"Int","style":{"code":true}}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR"},{"client_msg_id":"01911ca7-d63f-4406-bec8-6c125e730f60","type":"message","text":":picard_facepalm: I see.. I'm getting the sum of positive values but not the sum of the values that are positive. Thanks!","user":"ULKN4RKAR","ts":"1613107210.114800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cXr","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"picard_facepalm"},{"type":"text","text":" I see.. I'm getting the sum of positive values but not the sum of the values that are positive. Thanks!"}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR"},{"client_msg_id":"ccb8bf7f-39b4-4f15-b2d6-085ab3d3b4ff","type":"message","text":"```[sum(w[each,:][w[each,:].&gt;0.0]) for each in 1:size(w)[1]]```","user":"ULKN4RKAR","ts":"1613107523.115000","team":"T68168MUP","edited":{"user":"ULKN4RKAR","ts":"1613107533.000000"},"blocks":[{"type":"rich_text","block_id":"LQKg","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[sum(w[each,:][w[each,:].>0.0]) for each in 1:size(w)[1]]"}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR"},{"client_msg_id":"e20f77d1-ccf0-4b38-9544-f28aa5b1c50e","type":"message","text":"`ϐ = vec(sum(x -&gt; x&gt;.0 ? x, 0., w, dims=2))` should be faster and is imo cleaner","user":"U0179G7FG4F","ts":"1613107718.115300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ewk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ϐ = vec(sum(x -> x>.0 ? x, 0., w, dims=2))","style":{"code":true}},{"type":"text","text":" should be faster and is imo cleaner"}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR"},{"client_msg_id":"831b1453-6e92-4999-b044-e17c1d0498a2","type":"message","text":"`vec(sum(x -&gt; x &gt; 0 ? x : zero(x), w, dims=2))` maybe? (I think there was a typo in your message)","user":"UB197FRCL","ts":"1613108740.115500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MDa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"vec(sum(x -> x > 0 ? x : zero(x), w, dims=2))","style":{"code":true}},{"type":"text","text":" maybe? (I think there was a typo in your message)"}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F"],"count":1}]},{"client_msg_id":"8a4cf3ad-7844-4977-87b5-fbe281baeb18","type":"message","text":"Wait- not really. My list comprehension takes slightly less and half the memory","user":"ULKN4RKAR","ts":"1613109519.115900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ldD72","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wait- not really. My list comprehension takes slightly less and half the memory"}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR"},{"client_msg_id":"bec08dac-cbdf-4828-990d-0f20a116f05e","type":"message","text":"have you tried with the same nxm?","user":"ULKN4RKAR","ts":"1613109533.116100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RyoV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"have you tried with the same nxm?"}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR"},{"client_msg_id":"11a12226-867d-4b50-bffa-c1e7804ee31f","type":"message","text":"Using LoopVectorization is cheating, but...","user":"UB2QRMQPN","ts":"1613112948.121100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hFD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Using LoopVectorization is cheating, but..."}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR"},{"client_msg_id":"eca29b03-f762-4a2a-a05a-114701f508b7","type":"message","text":"```julia&gt; using LoopVectorization, BenchmarkTools, Distributions\n\njulia&gt; function lvsum(w)\n           out = zeros(eltype(w), size(w, 1))\n           @avx for j in 1:size(w, 2)\n               for i in 1:size(w, 1)\n                   out[i] += ifelse(w[i,j] &gt; 0, w[i,j], 0.0)\n               end\n           end\n           return out\n       end\nlvsum (generic function with 1 method)\n\njulia&gt; gssum(w) = [sum(w[each,:][w[each,:].&gt;0.0]) for each in 1:size(w)[1]]\ngssum (generic function with 1 method)\n\njulia&gt; w = rand(Normal(), 10, 2000);\n\njulia&gt; @btime gssum($w)\n  76.100 μs (61 allocations: 440.56 KiB)\n10-element Vector{Float64}:\n 756.1254992614529\n 823.4761111517538\n 744.1325354738881\n 787.9881363863262\n 813.5131620443119\n 835.6171989377096\n 806.192108588501\n 822.5992144992134\n 765.1239275275992\n 815.0238608594891\n\njulia&gt; @btime lvsum($w)\n  2.389 μs (1 allocation: 160 bytes)\n10-element Vector{Float64}:\n 756.1254992614525\n 823.4761111517532\n 744.1325354738888\n 787.9881363863262\n 813.5131620443117\n 835.6171989377111\n 806.1921085884993\n 822.5992144992139\n 765.1239275275996\n 815.0238608594882```","user":"UB2QRMQPN","ts":"1613112974.121300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TUE","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using LoopVectorization, BenchmarkTools, Distributions\n\njulia> function lvsum(w)\n           out = zeros(eltype(w), size(w, 1))\n           @avx for j in 1:size(w, 2)\n               for i in 1:size(w, 1)\n                   out[i] += ifelse(w[i,j] > 0, w[i,j], 0.0)\n               end\n           end\n           return out\n       end\nlvsum (generic function with 1 method)\n\njulia> gssum(w) = [sum(w[each,:][w[each,:].>0.0]) for each in 1:size(w)[1]]\ngssum (generic function with 1 method)\n\njulia> w = rand(Normal(), 10, 2000);\n\njulia> @btime gssum($w)\n  76.100 μs (61 allocations: 440.56 KiB)\n10-element Vector{Float64}:\n 756.1254992614529\n 823.4761111517538\n 744.1325354738881\n 787.9881363863262\n 813.5131620443119\n 835.6171989377096\n 806.192108588501\n 822.5992144992134\n 765.1239275275992\n 815.0238608594891\n\njulia> @btime lvsum($w)\n  2.389 μs (1 allocation: 160 bytes)\n10-element Vector{Float64}:\n 756.1254992614525\n 823.4761111517532\n 744.1325354738888\n 787.9881363863262\n 813.5131620443117\n 835.6171989377111\n 806.1921085884993\n 822.5992144992139\n 765.1239275275996\n 815.0238608594882"}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR","reactions":[{"name":"clapping","users":["ULKN4RKAR"],"count":1}]},{"client_msg_id":"8fd7ac20-0ea9-4ed2-9977-e32443c423b6","type":"message","text":"Why has this become a competition? hahah very fast indeed..","user":"ULKN4RKAR","ts":"1613113137.121600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6eFU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why has this become a competition? hahah very fast indeed.."}]}]}],"thread_ts":"1613106782.114300","parent_user_id":"ULKN4RKAR"}]