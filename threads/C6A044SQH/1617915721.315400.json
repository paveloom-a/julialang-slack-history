[{"client_msg_id":"2b692c33-413b-431e-8fe5-23c22ea234dc","type":"message","text":"if I have 2 vectors of different types, with discrete (and not uniform) values, is there an easy way to create a matrix which counts the combinations of the elements per index?\nI.e. say A holds a vector of characters and B holds a vector of integers, then M shall be the matrix where each row corresponds to a unique value of A (char) and each column corresponds to a unique value of B (integer) and the entry at the corresponding row and column shall hold the number of indices where the corresponding elements show up together.","user":"UMWFZF5DW","ts":"1617915721.315400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pBp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if I have 2 vectors of different types, with discrete (and not uniform) values, is there an easy way to create a matrix which counts the combinations of the elements per index?\nI.e. say A holds a vector of characters and B holds a vector of integers, then M shall be the matrix where each row corresponds to a unique value of A (char) and each column corresponds to a unique value of B (integer) and the entry at the corresponding row and column shall hold the number of indices where the corresponding elements show up together."}]}]}],"thread_ts":"1617915721.315400","reply_count":1,"reply_users_count":1,"latest_reply":"1617916818.321300","reply_users":["UD0NS8PDF"],"is_locked":false,"subscribed":false},{"client_msg_id":"14e38444-84be-4789-94a5-9efff95eef1a","type":"message","text":"```julia&gt; A = collect(\"some characters\"); B = map(_-&gt;rand(1:9), A); [A B] # same length\n15×2 Matrix{Any}:\n 's'  8\n 'o'  4\n 'm'  8\n 'e'  5\n ' '  8\n 'c'  2\n 'h'  7\n 'a'  4\n 'r'  7\n 'a'  8\n 'c'  4\n 't'  6\n 'e'  2\n 'r'  1\n 's'  2\n\njulia&gt; uA, uB = unique(A), unique(B);\n\njulia&gt; using AxisKeys\n\njulia&gt; M = KeyedArray(zeros(Int, length(uA), length(uB)), char=sort(uA), num=sort(uB));\n\njulia&gt; for (a,b) in zip(A,B)\n         M(a,b,:) .+= 1\n       end\n\njulia&gt; M\n2-dimensional KeyedArray(NamedDimsArray(...)) with keys:\n↓   char ∈ 10-element Vector{Char}\n→   num ∈ 7-element Vector{Int64}\nAnd data, 10×7 Matrix{Int64}:\n         (1)  (2)  (4)  (5)  (6)  (7)  (8)\n  (' ')    0    0    0    0    0    0    1\n  ('a')    0    0    1    0    0    0    1\n  ('c')    0    1    1    0    0    0    0\n  ('e')    0    1    0    1    0    0    0\n  ('h')    0    0    0    0    0    1    0\n  ('m')    0    0    0    0    0    0    1\n  ('o')    0    0    1    0    0    0    0\n  ('r')    1    0    0    0    0    1    0\n  ('s')    0    1    0    0    0    0    1\n  ('t')    0    0    0    0    1    0    0```","user":"UD0NS8PDF","ts":"1617916818.321300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ae=gc","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> A = collect(\"some characters\"); B = map(_->rand(1:9), A); [A B] # same length\n15×2 Matrix{Any}:\n 's'  8\n 'o'  4\n 'm'  8\n 'e'  5\n ' '  8\n 'c'  2\n 'h'  7\n 'a'  4\n 'r'  7\n 'a'  8\n 'c'  4\n 't'  6\n 'e'  2\n 'r'  1\n 's'  2\n\njulia> uA, uB = unique(A), unique(B);\n\njulia> using AxisKeys\n\njulia> M = KeyedArray(zeros(Int, length(uA), length(uB)), char=sort(uA), num=sort(uB));\n\njulia> for (a,b) in zip(A,B)\n         M(a,b,:) .+= 1\n       end\n\njulia> M\n2-dimensional KeyedArray(NamedDimsArray(...)) with keys:\n↓   char ∈ 10-element Vector{Char}\n→   num ∈ 7-element Vector{Int64}\nAnd data, 10×7 Matrix{Int64}:\n         (1)  (2)  (4)  (5)  (6)  (7)  (8)\n  (' ')    0    0    0    0    0    0    1\n  ('a')    0    0    1    0    0    0    1\n  ('c')    0    1    1    0    0    0    0\n  ('e')    0    1    0    1    0    0    0\n  ('h')    0    0    0    0    0    1    0\n  ('m')    0    0    0    0    0    0    1\n  ('o')    0    0    1    0    0    0    0\n  ('r')    1    0    0    0    0    1    0\n  ('s')    0    1    0    0    0    0    1\n  ('t')    0    0    0    0    1    0    0"}]}]}],"thread_ts":"1617915721.315400","parent_user_id":"UMWFZF5DW"}]