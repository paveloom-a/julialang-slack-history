[{"client_msg_id":"54765b1e-4888-4d42-b43a-d8ed2c3419d4","type":"message","text":"Hey,\nWhat is the most efficient way to assign a value to a certain index position in a tuple?\nI would appreciate any good reference!\n```julia&gt; @inline function replace_dim(t::NTuple{N,T}, dim::Int, val::Int)::NTuple{N, T} where{N,T}\n           return ntuple(d -&gt; d==dim ? val : t[d], Val(N))\n       end\nreplace_dim (generic function with 1 method)\n\njulia&gt; replace_dim((1,2,3,4,5), 3, 100)\n(1, 2, 100, 4, 5)```","user":"U84GATUBU","ts":"1616613239.078400","team":"T68168MUP","edited":{"user":"U84GATUBU","ts":"1616613254.000000"},"blocks":[{"type":"rich_text","block_id":"pV/8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey,\nWhat is the most efficient way to assign a value to a certain index position in a tuple?\nI would appreciate any good reference!\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @inline function replace_dim(t::NTuple{N,T}, dim::Int, val::Int)::NTuple{N, T} where{N,T}\n           return ntuple(d -> d==dim ? val : t[d], Val(N))\n       end\nreplace_dim (generic function with 1 method)\n\njulia> replace_dim((1,2,3,4,5), 3, 100)\n(1, 2, 100, 4, 5)"}]}]}],"thread_ts":"1616613239.078400","reply_count":3,"reply_users_count":2,"latest_reply":"1616613519.079100","reply_users":["UM30MT6RF","U84GATUBU"],"is_locked":false,"subscribed":false},{"client_msg_id":"8b7c19d2-0894-4a5b-b4ee-f79c88892492","type":"message","text":"There is `Base.setindex`","user":"UM30MT6RF","ts":"1616613282.078600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YxoBB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is "},{"type":"text","text":"Base.setindex","style":{"code":true}}]}]}],"thread_ts":"1616613239.078400","parent_user_id":"U84GATUBU","reactions":[{"name":"rolling_on_the_floor_laughing","users":["U84GATUBU"],"count":1}]},{"client_msg_id":"9e800d28-34f2-4d57-b90c-f14ab5c00eba","type":"message","text":"How did I miss that lol","user":"U84GATUBU","ts":"1616613350.078900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jvL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How did I miss that lol"}]}]}],"thread_ts":"1616613239.078400","parent_user_id":"U84GATUBU"},{"client_msg_id":"a65ad473-21e9-4f90-b8ff-ea13f8264475","type":"message","text":"But interestingly: The implementation is based on a recursive, functional head:tail scheme.\nWhy is that efficient?\n\nIf I look at @code_llvm it is much longer than my try\nI mean, I don't understand much of deep compiler stuff, but I just want to learn :sunglasses:","user":"U84GATUBU","ts":"1616613519.079100","team":"T68168MUP","edited":{"user":"U84GATUBU","ts":"1616613646.000000"},"blocks":[{"type":"rich_text","block_id":"xlG1F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But interestingly: The implementation is based on a recursive, functional head:tail scheme.\nWhy is that efficient?\n\nIf I look at @code_llvm it is much longer than my try\nI mean, I don't understand much of deep compiler stuff, but I just want to learn "},{"type":"emoji","name":"sunglasses"}]}]}],"thread_ts":"1616613239.078400","parent_user_id":"U84GATUBU"}]