[{"client_msg_id":"c28f17f4-9180-461f-b948-d4585521d0da","type":"message","text":"Using the `@benchmark` macro, how can I store both the trial results and the return value of the expression I'm benchmarking in two different variables?","user":"UEA5FBCRH","ts":"1617183362.082700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q853","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Using the "},{"type":"text","text":"@benchmark","style":{"code":true}},{"type":"text","text":" macro, how can I store both the trial results and the return value of the expression I'm benchmarking in two different variables?"}]}]}],"thread_ts":"1617183362.082700","reply_count":9,"reply_users_count":4,"latest_reply":"1617186152.084400","reply_users":["UDB26738Q","U017D621ELC","UEA5FBCRH","U01M655G9AR"],"is_locked":false,"subscribed":false},{"client_msg_id":"2f2374ea-bbc0-4a84-b243-98cb9205fb5f","type":"message","text":"That's a recurring question. I suggest to look at the code of `@btime`, which prints the time and returns the value but hey, it knows them both","user":"UDB26738Q","ts":"1617183930.082800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UJa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's a recurring question. I suggest to look at the code of "},{"type":"text","text":"@btime","style":{"code":true}},{"type":"text","text":", which prints the time and returns the value but hey, it knows them both"}]}]}],"thread_ts":"1617183362.082700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"f90c2f00-55e0-4c16-83d1-f3a550a33f51","type":"message","text":"Can one method be to pass the value which we want to be returned as another function argument, and then have the function mutate its value? I'm not sure how it'll affect the benchmarking though, since we basically pre allocate the return value ourselves, which will not be counted while benchmarking.","user":"U017D621ELC","ts":"1617184308.083000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sfyV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can one method be to pass the value which we want to be returned as another function argument, and then have the function mutate its value? I'm not sure how it'll affect the benchmarking though, since we basically pre allocate the return value ourselves, which will not be counted while benchmarking."}]}]}],"thread_ts":"1617183362.082700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"eb6f0129-97b0-4089-b159-999d7612d10e","type":"message","text":"Here is the `@btime` macro:\n```macro btime(args...)\n    _, params = prunekwargs(args...)\n    bench, trial, result = gensym(), gensym(), gensym()\n    trialmin, trialallocs = gensym(), gensym()\n    tune_phase = hasevals(params) ? :() : :($BenchmarkTools.tune!($bench))\n    return esc(quote\n        local $bench = $BenchmarkTools.@benchmarkable $(args...)\n        $BenchmarkTools.warmup($bench)\n        $tune_phase\n        local $trial, $result = $BenchmarkTools.run_result($bench)\n        local $trialmin = $BenchmarkTools.minimum($trial)\n        local $trialallocs = $BenchmarkTools.allocs($trialmin)\n        println(\"  \",\n                $BenchmarkTools.prettytime($BenchmarkTools.time($trialmin)),\n                \" (\", $trialallocs , \" allocation\",\n                $trialallocs == 1 ? \"\" : \"s\", \": \",\n                $BenchmarkTools.prettymemory($BenchmarkTools.memory($trialmin)), \")\")\n        $result\n    end)\nend```\nI'm going to try this modified version:\n```macro btime(args...)\n    _, params = prunekwargs(args...)\n    bench, trial, result = gensym(), gensym(), gensym()\n    trialmin, trialallocs = gensym(), gensym()\n    tune_phase = hasevals(params) ? :() : :($BenchmarkTools.tune!($bench))\n    return esc(quote\n        local $bench = $BenchmarkTools.@benchmarkable $(args...)\n        $BenchmarkTools.warmup($bench)\n        $tune_phase\n        $trial, $result = $BenchmarkTools.run_result($bench)\n    end)\nend```","user":"UEA5FBCRH","ts":"1617184824.083200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ReJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here is the "},{"type":"text","text":"@btime","style":{"code":true}},{"type":"text","text":" macro:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"macro btime(args...)\n    _, params = prunekwargs(args...)\n    bench, trial, result = gensym(), gensym(), gensym()\n    trialmin, trialallocs = gensym(), gensym()\n    tune_phase = hasevals(params) ? :() : :($BenchmarkTools.tune!($bench))\n    return esc(quote\n        local $bench = $BenchmarkTools.@benchmarkable $(args...)\n        $BenchmarkTools.warmup($bench)\n        $tune_phase\n        local $trial, $result = $BenchmarkTools.run_result($bench)\n        local $trialmin = $BenchmarkTools.minimum($trial)\n        local $trialallocs = $BenchmarkTools.allocs($trialmin)\n        println(\"  \",\n                $BenchmarkTools.prettytime($BenchmarkTools.time($trialmin)),\n                \" (\", $trialallocs , \" allocation\",\n                $trialallocs == 1 ? \"\" : \"s\", \": \",\n                $BenchmarkTools.prettymemory($BenchmarkTools.memory($trialmin)), \")\")\n        $result\n    end)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI'm going to try this modified version:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"macro btime(args...)\n    _, params = prunekwargs(args...)\n    bench, trial, result = gensym(), gensym(), gensym()\n    trialmin, trialallocs = gensym(), gensym()\n    tune_phase = hasevals(params) ? :() : :($BenchmarkTools.tune!($bench))\n    return esc(quote\n        local $bench = $BenchmarkTools.@benchmarkable $(args...)\n        $BenchmarkTools.warmup($bench)\n        $tune_phase\n        $trial, $result = $BenchmarkTools.run_result($bench)\n    end)\nend"}]}]}],"thread_ts":"1617183362.082700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"5a547c25-07b9-46c2-93fb-81f40204a06f","type":"message","text":"yeah, something like that","user":"UDB26738Q","ts":"1617184872.083400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EnL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, something like that"}]}]}],"thread_ts":"1617183362.082700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"8c141417-f51f-4783-b0fc-d3e2aa296c39","type":"message","text":"naively I would do `b = @benchmark res=...` (in local scope, or using `global res = ...`). Is there anything bad about this?","user":"U01M655G9AR","ts":"1617185557.083600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JBH8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"naively I would do "},{"type":"text","text":"b = @benchmark res=...","style":{"code":true}},{"type":"text","text":" (in local scope, or using "},{"type":"text","text":"global res = ...","style":{"code":true}},{"type":"text","text":"). Is there anything bad about this?"}]}]}],"thread_ts":"1617183362.082700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"cba28612-cbbb-47f9-9b95-0cc1a5a82120","type":"message","text":"judging by the timings, yes:\n```julia&gt; @btime sin(2)\n  1.368 ns (0 allocations: 0 bytes)\n0.9092974268256817\n\njulia&gt; @btime res = sin(2)\n  1.407 ns (0 allocations: 0 bytes)\n0.9092974268256817\n\njulia&gt; @btime global res = sin(2)\n  4.341 ns (0 allocations: 0 bytes)\n0.9092974268256817```","user":"UDB26738Q","ts":"1617185712.083800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cYdM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"judging by the timings, yes:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime sin(2)\n  1.368 ns (0 allocations: 0 bytes)\n0.9092974268256817\n\njulia> @btime res = sin(2)\n  1.407 ns (0 allocations: 0 bytes)\n0.9092974268256817\n\njulia> @btime global res = sin(2)\n  4.341 ns (0 allocations: 0 bytes)\n0.9092974268256817"}]}]}],"thread_ts":"1617183362.082700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"420b689d-a580-4b39-bcfd-869d29b50f2b","type":"message","text":"I see.... thanks!","user":"U01M655G9AR","ts":"1617186020.084000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N2i64","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see.... thanks!"}]}]}],"thread_ts":"1617183362.082700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"c4d41787-86aa-4465-b15f-13b6481c561f","type":"message","text":"so it does matter if you're benchmarking on the order of the nanoseconds in which the assignement is relevant","user":"U01M655G9AR","ts":"1617186114.084200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5ZO1y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so it does matter if you're benchmarking on the order of the nanoseconds in which the assignement is relevant"}]}]}],"thread_ts":"1617183362.082700","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"f6992349-6ead-46ee-85d6-190b35a64cdb","type":"message","text":"assignment per se isn't bad, what's bad is accessing globals","user":"UDB26738Q","ts":"1617186152.084400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jQI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"assignment per se isn't bad, what's bad is accessing globals"}]}]}],"thread_ts":"1617183362.082700","parent_user_id":"UEA5FBCRH","reactions":[{"name":"+1","users":["U01M655G9AR"],"count":1}]}]