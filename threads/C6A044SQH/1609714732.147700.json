[{"client_msg_id":"0ae5e431-488e-4908-ab74-11f4cb768caa","type":"message","text":"I start Julia with --track-allocation=user and run a file containing following code:\n```using Profile\nfunction f(x)\n    b = copy(x)\n    s = 0\n    for v in x\n        s += v\n    end\n    return s\nend\n\n\nfunction wrapper()\n    x = rand(100)\n    println(\"f(x) = $(f(x))\")\n\n    Profile.clear_malloc_data()\n    y = rand(100)\n    s=f(y)\n    println(\"s = $s\")\nend\n\nwrapper()```\nThe generated .mem file is:\n```        - using Profile\n        - function f(x)\n        -     b = copy(x)\n        -     s = 0\n        -     for v in x\n        -         s += v\n        -     end\n        -     return s\n        - end\n        - \n        - \n        - function wrapper()\n        0     x = rand(100)\n        0     println(\"f(x) = $(f(x))\")\n        - \n        0     Profile.clear_malloc_data()\n        0     y = rand(100)\n      896     s=f(y)\n     1104     println(\"s = $s\")\n        - end\n        - \n        - wrapper()```\n1. Why are the allocations within f(x) not shown? What do the \"-\" mean?\n2. Is y relly not on heap?","user":"URPFQPSEQ","ts":"1609714732.147700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yP+E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I start Julia with --track-allocation=user and run a file containing following code:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Profile\nfunction f(x)\n    b = copy(x)\n    s = 0\n    for v in x\n        s += v\n    end\n    return s\nend\n\n\nfunction wrapper()\n    x = rand(100)\n    println(\"f(x) = $(f(x))\")\n\n    Profile.clear_malloc_data()\n    y = rand(100)\n    s=f(y)\n    println(\"s = $s\")\nend\n\nwrapper()"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThe generated .mem file is:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"        - using Profile\n        - function f(x)\n        -     b = copy(x)\n        -     s = 0\n        -     for v in x\n        -         s += v\n        -     end\n        -     return s\n        - end\n        - \n        - \n        - function wrapper()\n        0     x = rand(100)\n        0     println(\"f(x) = $(f(x))\")\n        - \n        0     Profile.clear_malloc_data()\n        0     y = rand(100)\n      896     s=f(y)\n     1104     println(\"s = $s\")\n        - end\n        - \n        - wrapper()"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why are the allocations within f(x) not shown? What do the \"-\" mean?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Is y relly not on heap?"}]}],"style":"ordered","indent":0}]}],"thread_ts":"1609714732.147700","reply_count":12,"reply_users_count":3,"latest_reply":"1609773017.180600","reply_users":["U01HD5VFXJM","URPFQPSEQ","UH24GRBLL"],"subscribed":false},{"client_msg_id":"5d14dda4-56e9-4086-b82a-ccc73b4a9daf","type":"message","text":"Did you intend to have `for v in b` in your `f(x)`?","user":"U01HD5VFXJM","ts":"1609727296.148500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tj8Vf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Did you intend to have "},{"type":"text","text":"for v in b","style":{"code":true}},{"type":"text","text":" in your "},{"type":"text","text":"f(x)","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"6835ed77-be08-41a0-b5fe-1fe5a66c378c","type":"message","text":"No, just hoped to create additional allocations for b. If I change to `for v in b` the .mem is identical:\n```        - using Profile\n        - function f(x)\n        -     b = copy(x)\n        -     s = 0\n        -     for v in b\n        -         s += v\n        -     end\n        -     return s\n        - end\n        - \n        - \n        - function wrapper()\n        0     x = rand(100)\n        0     println(\"f(x) = $(f(x))\")\n        - \n        0     Profile.clear_malloc_data()\n        0     y = rand(100)\n      896     s = f(y) \n     1104     println(\"s = $s\")\n        - end\n        - \n        - wrapper()```","user":"URPFQPSEQ","ts":"1609727763.148700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gx9Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, just hoped to create additional allocations for b. If I change to "},{"type":"text","text":"for v in b","style":{"code":true}},{"type":"text","text":" the .mem is identical:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"        - using Profile\n        - function f(x)\n        -     b = copy(x)\n        -     s = 0\n        -     for v in b\n        -         s += v\n        -     end\n        -     return s\n        - end\n        - \n        - \n        - function wrapper()\n        0     x = rand(100)\n        0     println(\"f(x) = $(f(x))\")\n        - \n        0     Profile.clear_malloc_data()\n        0     y = rand(100)\n      896     s = f(y) \n     1104     println(\"s = $s\")\n        - end\n        - \n        - wrapper()"}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"cb44cfc7-6548-4ed2-b4ef-5f868830f41f","type":"message","text":"Okay! I was curious if it was optimized out :slightly_smiling_face:.","user":"U01HD5VFXJM","ts":"1609727853.148900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J3o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay! I was curious if it was optimized out "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"."}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"4f41cea4-42e3-4857-a5d9-f829329c4630","type":"message","text":"I suspect `f` is inlined, it's noticed that `x` is not used after the call to `f` and thus the copy is elided.","user":"UH24GRBLL","ts":"1609751153.158100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QdpPe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I suspect "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" is inlined, it's noticed that "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" is not used after the call to "},{"type":"text","text":"f","style":{"code":true}},{"type":"text","text":" and thus the copy is elided."}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"69a98c84-5a61-424c-bb7d-dc508bfb3cad","type":"message","text":"or rather, `x` is only written once at the beginning and only read from afterwards, even in copies. So `copy` is probably optimized away because there's no observable difference","user":"UH24GRBLL","ts":"1609751209.158300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CP+Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or rather, "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" is only written once at the beginning and only read from afterwards, even in copies. So "},{"type":"text","text":"copy","style":{"code":true}},{"type":"text","text":" is probably optimized away because there's no observable difference"}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"aeb88dc4-eb07-4fee-8653-8743751e89f9","type":"message","text":"With `@noinline` allocation is shown within the function.\nDo I guess correctly, that always a multiple of the cache line is allocated (896 = 14*64 Byte) ?\nWould 832 Bytes not be enough?\n\n```        - using Profile\n        - @noinline function f(x)\n      896     b = copy(x)\n        -     s = 0\n        0     for v in b\n        0         s += v\n        -     end\n        0     return s\n        - end\n        - \n        - \n        - function wrapper()\n        0     x = rand(100)\n        0     println(\"f(x) = $(f(x))\")\n        - \n        0     Profile.clear_malloc_data()\n        0     y = rand(100)\n        0     s = f(y) #@profile s=f(y)\n     1104     println(\"s = $s\")\n        - end\n        - \n        - wrapper()```","user":"URPFQPSEQ","ts":"1609770244.178900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9YW=M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With "},{"type":"text","text":"@noinline","style":{"code":true}},{"type":"text","text":" allocation is shown within the function.\nDo I guess correctly, that always a multiple of the cache line is allocated (896 = 14*64 Byte) ?\nWould 832 Bytes not be enough?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"        - using Profile\n        - @noinline function f(x)\n      896     b = copy(x)\n        -     s = 0\n        0     for v in b\n        0         s += v\n        -     end\n        0     return s\n        - end\n        - \n        - \n        - function wrapper()\n        0     x = rand(100)\n        0     println(\"f(x) = $(f(x))\")\n        - \n        0     Profile.clear_malloc_data()\n        0     y = rand(100)\n        0     s = f(y) #@profile s=f(y)\n     1104     println(\"s = $s\")\n        - end\n        - \n        - wrapper()"}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"431421bd-b4b7-41e6-8564-99104fa618c3","type":"message","text":"... and even if b is not used, the space is allocated:\n```        - using Profile\n        - @noinline function f(x)\n      896     b = copy(x)\n        -     s = 0\n        0     for v in x\n        0         s += v\n        -     end\n        0     return s\n        - end\n        - \n        - \n        - function wrapper()\n        0     x = rand(100)\n        0     println(\"f(x) = $(f(x))\")\n        - \n        0     Profile.clear_malloc_data()\n        0     y = rand(100)\n        0     s = f(y) #@profile s=f(y)\n     1104     println(\"s = $s\")\n        - end\n        - \n        - wrapper()```","user":"URPFQPSEQ","ts":"1609770393.179100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IQH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"... and even if b is not used, the space is allocated:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"        - using Profile\n        - @noinline function f(x)\n      896     b = copy(x)\n        -     s = 0\n        0     for v in x\n        0         s += v\n        -     end\n        0     return s\n        - end\n        - \n        - \n        - function wrapper()\n        0     x = rand(100)\n        0     println(\"f(x) = $(f(x))\")\n        - \n        0     Profile.clear_malloc_data()\n        0     y = rand(100)\n        0     s = f(y) #@profile s=f(y)\n     1104     println(\"s = $s\")\n        - end\n        - \n        - wrapper()"}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"f8aa9e3f-2cb2-452c-9bab-1ade6549c308","type":"message","text":"Yeah, there's not a whole lot of automatic elimination right now","user":"UH24GRBLL","ts":"1609771817.179400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qay","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, there's not a whole lot of automatic elimination right now"}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"23b16a1a-cc43-4365-a42b-abb4729970ca","type":"message","text":"there's a basic assumption that people don't allocate stuff they don't need and wonder why it's using more memory","user":"UH24GRBLL","ts":"1609771842.179600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aic","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's a basic assumption that people don't allocate stuff they don't need and wonder why it's using more memory"}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"ab6cfab7-8656-4b6c-848e-b7109c5b772a","type":"message","text":"I think tracking allocations was kinda borked a few versions ago, don't know if it's been fixed","user":"UH24GRBLL","ts":"1609771895.179800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XlkP5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think tracking allocations was kinda borked a few versions ago, don't know if it's been fixed"}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"9e5bb6f2-78ae-4b3c-87d3-80647e218096","type":"message","text":"oh yeah, the `-` just mean that there's no meaningful number for allocations to display there.","user":"UH24GRBLL","ts":"1609772266.180400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v5RV4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh yeah, the "},{"type":"text","text":"-","style":{"code":true}},{"type":"text","text":" just mean that there's no meaningful number for allocations to display there."}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"},{"client_msg_id":"db77ddf2-ef56-4b5a-92bf-0e78a50f2b79","type":"message","text":"Thanks... What ist the purpose of  `@profile` if Julia is started with --track-allocation=user ?\nI have seen in this tutorial that `@profile` was used:\n<https://youtu.be/S5R8zXJOsUQ?list=PLP8iPy9hna6Tl2UHTrm4jnIYrLkIcAROR&amp;t=1196>","user":"URPFQPSEQ","ts":"1609773017.180600","team":"T68168MUP","attachments":[{"service_name":"YouTube","service_url":"https://www.youtube.com/","title":"JuliaCon 2020 |  Make your Julia Code Faster and Compatible with non-Julia Code","title_link":"https://youtu.be/S5R8zXJOsUQ?&amp;t=1196","author_name":"The Julia Programming Language","author_link":"https://www.youtube.com/c/TheJuliaLanguage","thumb_url":"https://i.ytimg.com/vi/S5R8zXJOsUQ/hqdefault.jpg","thumb_width":480,"thumb_height":360,"fallback":"YouTube Video: JuliaCon 2020 |  Make your Julia Code Faster and Compatible with non-Julia Code","video_html":"<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/S5R8zXJOsUQ?feature=oembed&start=1196&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","video_html_width":400,"video_html_height":225,"from_url":"https://youtu.be/S5R8zXJOsUQ?&amp;t=1196","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png","id":1,"original_url":"https://youtu.be/S5R8zXJOsUQ?list=PLP8iPy9hna6Tl2UHTrm4jnIYrLkIcAROR&amp;t=1196"}],"blocks":[{"type":"rich_text","block_id":"6ri","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks... What ist the purpose of  "},{"type":"text","text":"@profile","style":{"code":true}},{"type":"text","text":" if Julia is started with --track-allocation=user ?\nI have seen in this tutorial that "},{"type":"text","text":"@profile","style":{"code":true}},{"type":"text","text":" was used:\n"},{"type":"link","url":"https://youtu.be/S5R8zXJOsUQ?list=PLP8iPy9hna6Tl2UHTrm4jnIYrLkIcAROR&t=1196"}]}]}],"thread_ts":"1609714732.147700","parent_user_id":"URPFQPSEQ"}]