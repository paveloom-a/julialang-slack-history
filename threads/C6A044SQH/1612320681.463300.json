[{"client_msg_id":"029effe0-647c-4eb2-9837-ca8eaa6ebd70","type":"message","text":"Is there an elegant way to call different functions depending on the input size of the array? Currently just using several if statements...\n```## call if length(v) == 3\nfunction foo(v) \n    println(\"called 3\")\nend\n\n## call if length(v) == 4\nfunction foo(v) \n    println(\"called 4\")\nend```","user":"U01FSUY7YES","ts":"1612320681.463300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xowkR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there an elegant way to call different functions depending on the input size of the array? Currently just using several if statements...\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"## call if length(v) == 3\nfunction foo(v) \n    println(\"called 3\")\nend\n\n## call if length(v) == 4\nfunction foo(v) \n    println(\"called 4\")\nend"}]}]}],"thread_ts":"1612320681.463300","reply_count":7,"reply_users_count":4,"latest_reply":"1612323466.465400","reply_users":["B01J9QZ4SP8","U011LUQ182G","U01FSUY7YES","USDM93QF8"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612320683.463400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612320681.463300","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"fff51949-34a4-4bc0-8d1d-d50f31927ee8","type":"message","text":"for general Array type, probably not. However, if the size of the array is part of the type definition (e.g., for arrays in StaticArrays or HybridArrays), you could dispatch on the length\n```function foo(v::SVector{3,T}) where {T} \n# do stuff\nend\n\nfunction foo(v::SVector{4,T}) where {T} \n# do other stuff\nend```\n","user":"U011LUQ182G","ts":"1612321404.463600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3F9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for general Array type, probably not. However, if the size of the array is part of the type definition (e.g., for arrays in StaticArrays or HybridArrays), you could dispatch on the length\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function foo(v::SVector{3,T}) where {T} \n# do stuff\nend\n\nfunction foo(v::SVector{4,T}) where {T} \n# do other stuff\nend"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1612320681.463300","parent_user_id":"U01FSUY7YES","reactions":[{"name":"+1","users":["U01FSUY7YES"],"count":1}]},{"client_msg_id":"d60d8987-8cf0-4d30-a063-c3ff62820e15","type":"message","text":"Thank you! That is really convenient to determine size from the type (advantage of static I guess). I might have to see if there is a performance increase to justify another package dependency. Appreciate the help!","user":"U01FSUY7YES","ts":"1612321718.463900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lwRy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you! That is really convenient to determine size from the type (advantage of static I guess). I might have to see if there is a performance increase to justify another package dependency. Appreciate the help!"}]}]}],"thread_ts":"1612320681.463300","parent_user_id":"U01FSUY7YES","reactions":[{"name":"+1","users":["U011LUQ182G"],"count":1}]},{"client_msg_id":"09fbe6ac-1346-402d-9781-657658d4465a","type":"message","text":"You could also make a function that explicitly redispatches on `Val(length(arr))` if you are interested in handling special cases","user":"USDM93QF8","ts":"1612321767.464400","team":"T68168MUP","edited":{"user":"USDM93QF8","ts":"1612322077.000000"},"blocks":[{"type":"rich_text","block_id":"QX9u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could also make a function that explicitly redispatches on `Val(length(arr))` if you are interested in handling special cases"}]}]}],"thread_ts":"1612320681.463300","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"e54ac3e7-61bc-4114-8abe-df78f3277cc5","type":"message","text":"if your arrays are small (e.g., &lt; 100 elements), you may see a speed increase in using StaticArrays anyways","user":"U011LUQ182G","ts":"1612321785.464600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"klrrp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if your arrays are small (e.g., < 100 elements), you may see a speed increase in using StaticArrays anyways"}]}]}],"thread_ts":"1612320681.463300","parent_user_id":"U01FSUY7YES","reactions":[{"name":"+1","users":["U01FSUY7YES"],"count":1}]},{"client_msg_id":"0c3ee5c9-feef-4cdc-b964-431a2079b03e","type":"message","text":"For instance, if there is a very simple solution to the length 2 problem, slightly less elegant solution to the length 3 problem, and after that you use approximate methods, you could have ::Val{2}, ::Val{3}, and ::Val signatures","user":"USDM93QF8","ts":"1612321911.464800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sqp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For instance, if there is a very simple solution to the length 2 problem, slightly less elegant solution to the length 3 problem, and after that you use approximate methods, you could have ::Val{2}, ::Val{3}, and ::Val signatures"}]}]}],"thread_ts":"1612320681.463300","parent_user_id":"U01FSUY7YES","reactions":[{"name":"+1","users":["U011LUQ182G","U01FSUY7YES"],"count":2}]},{"client_msg_id":"170fa4ac-d431-474c-b340-224fe4547a9e","type":"message","text":"Haha you definitely described the situation exactly. Thank you!! This seems to give the desired result like you described:\n```function foo(v, ::Val{2}) \n    println(\"called 2\")\nend\nfunction foo(v, ::Val{3}) \n    println(\"called 3\")\nend\nv = rand(3)\nfoo(v, Val(length(v)))```\nI'll look into SArrays as well! Thank you everyone!","user":"U01FSUY7YES","ts":"1612323466.465400","team":"T68168MUP","edited":{"user":"U01FSUY7YES","ts":"1612323583.000000"},"blocks":[{"type":"rich_text","block_id":"YuNr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haha you definitely described the situation exactly. Thank you!! This seems to give the desired result like you described:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function foo(v, ::Val{2}) \n    println(\"called 2\")\nend\nfunction foo(v, ::Val{3}) \n    println(\"called 3\")\nend\nv = rand(3)\nfoo(v, Val(length(v)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I'll look into SArrays as well! Thank you everyone!"}]}]}],"thread_ts":"1612320681.463300","parent_user_id":"U01FSUY7YES","reactions":[{"name":"+1","users":["USDM93QF8"],"count":1}]}]