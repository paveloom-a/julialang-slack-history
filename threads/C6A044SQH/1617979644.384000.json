[{"client_msg_id":"e59bccf6-198a-4871-8312-daf26a2b548f","type":"message","text":"I’m having some trouble with `unique` . I have a vector of my own types (parametric), and I can’t get it to remove repeats. I’ve defined an `isequal`  and an `in`  function. Any ideas what’s missing?","user":"U01BZJ2JTML","ts":"1617979644.384000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Phi1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m having some trouble with "},{"type":"text","text":"unique","style":{"code":true}},{"type":"text","text":" . I have a vector of my own types (parametric), and I can’t get it to remove repeats. I’ve defined an "},{"type":"text","text":"isequal","style":{"code":true}},{"type":"text","text":"  and an "},{"type":"text","text":"in","style":{"code":true}},{"type":"text","text":"  function. Any ideas what’s missing?"}]}]}],"thread_ts":"1617979644.384000","reply_count":1,"reply_users_count":1,"latest_reply":"1617980332.386700","reply_users":["U72EFQ9L4"],"is_locked":false,"subscribed":false},{"client_msg_id":"8589a1ae-b8a2-4f77-a466-417226c36a7d","type":"message","text":"probably a `hash` method, see the doc for  `isequal`  :\n```Implementation\n  ≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡\n\n  The default implementation of isequal calls ==, so a type that does not involve floating-point values generally only\n  needs to define ==.\n\n  isequal is the comparison function used by hash tables (Dict). isequal(x,y) must imply that hash(x) == hash(y).\n\n  This typically means that types for which a custom == or isequal method exists must implement a corresponding hash\n  method (and vice versa). Collections typically implement isequal by calling isequal recursively on all contents.```","user":"U72EFQ9L4","ts":"1617980332.386700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rBYzJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"probably a "},{"type":"text","text":"hash","style":{"code":true}},{"type":"text","text":" method, see the doc for  "},{"type":"text","text":"isequal","style":{"code":true}},{"type":"text","text":"  :\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Implementation\n  ≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡\n\n  The default implementation of isequal calls ==, so a type that does not involve floating-point values generally only\n  needs to define ==.\n\n  isequal is the comparison function used by hash tables (Dict). isequal(x,y) must imply that hash(x) == hash(y).\n\n  This typically means that types for which a custom == or isequal method exists must implement a corresponding hash\n  method (and vice versa). Collections typically implement isequal by calling isequal recursively on all contents."}]}]}],"thread_ts":"1617979644.384000","parent_user_id":"U01BZJ2JTML"}]