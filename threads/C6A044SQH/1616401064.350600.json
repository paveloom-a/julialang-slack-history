[{"client_msg_id":"d79d9d78-4af0-4a64-b36f-8b8e065beb4f","type":"message","text":"Does anyone know how to implement a <https://en.wikipedia.org/wiki/Branch_table|jump table> in Julia? There is this issue in Automa.jl: It auto-generates code using `@goto` statements. Sometimes it needs to code in a series of jumps like \"first, goto X and execute that block. When done, goto Y, and then Z\". The implementation in Automa right now is to *not* jump around multiple times but instead to inline the content of X and Y before a jump to Z. Efficient, but it also can create explosive codegen (since all code blocks can be inlined once for every combination of blocks it can appear in).","user":"U7HAYKY9X","ts":"1616401064.350600","team":"T68168MUP","attachments":[{"title":"Branch table","title_link":"https://en.wikipedia.org/wiki/Branch_table","from_url":"https://en.wikipedia.org/wiki/Branch_table","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"In computer programming, a branch table or jump table is a method of transferring program control (branching) to another part of a program (or a different program that may have been dynamically loaded) using a table of branch or jump instructions. It is a form of multiway branch. The branch table construction is commonly used when programming in assembly language but may also be generated by compilers, especially when implementing optimized switch statements whose values are densely packed together.","fallback":"wikipedia: Branch table","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.wikipedia.org/wiki/Branch_table"}],"blocks":[{"type":"rich_text","block_id":"3WA9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know how to implement a "},{"type":"link","url":"https://en.wikipedia.org/wiki/Branch_table","text":"jump table"},{"type":"text","text":" in Julia? There is this issue in Automa.jl: It auto-generates code using "},{"type":"text","text":"@goto","style":{"code":true}},{"type":"text","text":" statements. Sometimes it needs to code in a series of jumps like \"first, goto X and execute that block. When done, goto Y, and then Z\". The implementation in Automa right now is to "},{"type":"text","text":"not","style":{"bold":true}},{"type":"text","text":" jump around multiple times but instead to inline the content of X and Y before a jump to Z. Efficient, but it also can create explosive codegen (since all code blocks can be inlined once for every combination of blocks it can appear in)."}]}]}],"thread_ts":"1616401064.350600","reply_count":3,"reply_users_count":2,"latest_reply":"1616780534.254500","reply_users":["U68QW0PUZ","U7HAYKY9X"],"is_locked":false,"subscribed":false},{"client_msg_id":"fa689141-2b7d-417a-ab7b-db4fdf2cac4e","type":"message","text":"I'm not sure this is relevant to your use case .. I have constructed indirect \"jump tables\" by constructing a vector of functions and calling the function[s] that some selection[s] index.  Calling a given sequence of them is no problem, and control comes back along  with any return value or external state update you have programmed.","user":"U68QW0PUZ","ts":"1616779874.253300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e=09","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure this is relevant to your use case .. I have constructed indirect \"jump tables\" by constructing a vector of functions and calling the function[s] that some selection[s] index.  Calling a given sequence of them is no problem, and control comes back along  with any return value or external state update you have programmed."}]}]}],"thread_ts":"1616401064.350600","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"a9d3a9ed-4729-4661-9c4d-99fe276e6200","type":"message","text":"I think I've decided the better way is just to call some function in a row. There's a very slight inefficiency in that if function a calls b, then c, control goes a, b, a, c, instead of a, b, c","user":"U7HAYKY9X","ts":"1616780512.254300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7Lm7e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I've decided the better way is just to call some function in a row. There's a very slight inefficiency in that if function a calls b, then c, control goes a, b, a, c, instead of a, b, c"}]}]}],"thread_ts":"1616401064.350600","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"3dcc685e-8a3e-4e6e-b6f8-e1d8e2d111a8","type":"message","text":"But it probably doesn't matter in practice.","user":"U7HAYKY9X","ts":"1616780534.254500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ImU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But it probably doesn't matter in practice."}]}]}],"thread_ts":"1616401064.350600","parent_user_id":"U7HAYKY9X"}]