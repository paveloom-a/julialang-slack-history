[{"client_msg_id":"16174fb5-4622-4ff7-9738-c1794a201abd","type":"message","text":"`replace(str, pat; count=1)` but in reverse order? (i.e. replace last pattern","user":"UH8A351DJ","ts":"1611540162.280700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OoC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"replace(str, pat; count=1)","style":{"code":true}},{"type":"text","text":" but in reverse order? (i.e. replace last pattern"}]}]}],"thread_ts":"1611540162.280700","reply_count":7,"reply_users_count":2,"latest_reply":"1611544489.282000","reply_users":["U01CR62LAAD","UH8A351DJ"],"subscribed":false},{"client_msg_id":"8c43b8b9-1ffe-4741-8625-03ff7ebffb8d","type":"message","text":"Yeah, I looked for that just for fun once, but couldn’t find it, so I ended up using `reverse` twice:\n```julia&gt; println(\"Happy $(reverse(replace(reverse(\"2020\"), \"0\" =&gt; \"1\", count=1)))!\")\nHappy 2021!```","user":"U01CR62LAAD","ts":"1611543103.280800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JaWT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I looked for that just for fun once, but couldn’t find it, so I ended up using "},{"type":"text","text":"reverse","style":{"code":true}},{"type":"text","text":" twice:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> println(\"Happy $(reverse(replace(reverse(\"2020\"), \"0\" => \"1\", count=1)))!\")\nHappy 2021!"}]}]}],"thread_ts":"1611540162.280700","parent_user_id":"UH8A351DJ"},{"client_msg_id":"a1216683-d349-4693-9b8e-87c0c0e52fa6","type":"message","text":"in my case I need regex, so it's non trivial to construct a \"reverse\" regex oh well I'm gonna workaround this","user":"UH8A351DJ","ts":"1611543160.281000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bwaK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in my case I need regex, so it's non trivial to construct a \"reverse\" regex oh well I'm gonna workaround this"}]}]}],"thread_ts":"1611540162.280700","parent_user_id":"UH8A351DJ"},{"client_msg_id":"360c0b4c-ee57-4256-81c7-0ebdd1ad2d16","type":"message","text":"I see. In any case, I think `replace` could be extended to include a keyword `reverse::Bool`","user":"U01CR62LAAD","ts":"1611543331.281200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ljd1X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see. In any case, I think "},{"type":"text","text":"replace","style":{"code":true}},{"type":"text","text":" could be extended to include a keyword "},{"type":"text","text":"reverse::Bool","style":{"code":true}}]}]}],"thread_ts":"1611540162.280700","parent_user_id":"UH8A351DJ"},{"client_msg_id":"70508f40-451d-456f-95b7-7bbfe883b59e","type":"message","text":"I checked a github issue, the problem (for regex at least), is that the underlying library doesn't support reverse","user":"UH8A351DJ","ts":"1611543367.281400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VdKeH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I checked a github issue, the problem (for regex at least), is that the underlying library doesn't support reverse"}]}]}],"thread_ts":"1611540162.280700","parent_user_id":"UH8A351DJ"},{"client_msg_id":"07f9c912-3471-4169-827c-bdf8359984a8","type":"message","text":"Maybe if you take a look at the implementation of `replace` you can find a way to do it.","user":"U01CR62LAAD","ts":"1611543392.281600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uVub9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe if you take a look at the implementation of "},{"type":"text","text":"replace","style":{"code":true}},{"type":"text","text":" you can find a way to do it."}]}]}],"thread_ts":"1611540162.280700","parent_user_id":"UH8A351DJ"},{"client_msg_id":"fe8e5b35-9316-44af-808d-f52309b927c4","type":"message","text":"no, I'm saying the fact that Regex (PCRE) engine Julia uses doesn't support this","user":"UH8A351DJ","ts":"1611543467.281800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vG7aN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, I'm saying the fact that Regex (PCRE) engine Julia uses doesn't support this"}]}]}],"thread_ts":"1611540162.280700","parent_user_id":"UH8A351DJ"},{"client_msg_id":"c7d95e6b-b109-4531-80bd-46ef7908bf0a","type":"message","text":"I see","user":"U01CR62LAAD","ts":"1611544489.282000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"61omC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see"}]}]}],"thread_ts":"1611540162.280700","parent_user_id":"UH8A351DJ"}]