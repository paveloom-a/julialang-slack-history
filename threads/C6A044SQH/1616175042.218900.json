[{"client_msg_id":"9aa3b678-0686-48b3-84e6-90b334e4a145","type":"message","text":"And on the other hand, when I call `dev` a package `Foo`, Julia adds it to the curent environment, and if `Foo` has some incompatible dependencies, it can't be `dev`'ed, so I am forced to create an empty env, say `Foo_dev`, then add or `dev Foo` into that empty env with no conflicts, to just then switch to `Foo` env? Then, what is the sense of this `Foo_dev` environment I am forced to create only to be able to get the `Foo` package and then switch into `Foo` env?","user":"UB2QSHWPN","ts":"1616175042.218900","team":"T68168MUP","edited":{"user":"UB2QSHWPN","ts":"1616175158.000000"},"blocks":[{"type":"rich_text","block_id":"98FF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And on the other hand, when I call "},{"type":"text","text":"dev","style":{"code":true}},{"type":"text","text":" a package "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":", Julia adds it to the curent environment, and if "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" has some incompatible dependencies, it can't be "},{"type":"text","text":"dev","style":{"code":true}},{"type":"text","text":"'ed, so I am forced to create an empty env, say "},{"type":"text","text":"Foo_dev","style":{"code":true}},{"type":"text","text":", then add or "},{"type":"text","text":"dev Foo","style":{"code":true}},{"type":"text","text":" into that empty env with no conflicts, to just then switch to "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" env? Then, what is the sense of this "},{"type":"text","text":"Foo_dev","style":{"code":true}},{"type":"text","text":" environment I am forced to create only to be able to get the "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" package and then switch into "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" env?"}]}]}],"thread_ts":"1616175042.218900","reply_count":1,"reply_users_count":1,"latest_reply":"1616175944.221300","reply_users":["UBF9YRB6H"],"is_locked":false,"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"I was wondering this the other day. I often want to `] dev` packages but not make them known to my main environment.\n\nI think you are correct. make an empty environment, `dev` in there, and then you can delete that environment.","user":"UBF9YRB6H","ts":"1616175944.221300","thread_ts":"1616175042.218900","root":{"client_msg_id":"9aa3b678-0686-48b3-84e6-90b334e4a145","type":"message","text":"And on the other hand, when I call `dev` a package `Foo`, Julia adds it to the curent environment, and if `Foo` has some incompatible dependencies, it can't be `dev`'ed, so I am forced to create an empty env, say `Foo_dev`, then add or `dev Foo` into that empty env with no conflicts, to just then switch to `Foo` env? Then, what is the sense of this `Foo_dev` environment I am forced to create only to be able to get the `Foo` package and then switch into `Foo` env?","user":"UB2QSHWPN","ts":"1616175042.218900","team":"T68168MUP","edited":{"user":"UB2QSHWPN","ts":"1616175158.000000"},"blocks":[{"type":"rich_text","block_id":"98FF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And on the other hand, when I call "},{"type":"text","text":"dev","style":{"code":true}},{"type":"text","text":" a package "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":", Julia adds it to the curent environment, and if "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" has some incompatible dependencies, it can't be "},{"type":"text","text":"dev","style":{"code":true}},{"type":"text","text":"'ed, so I am forced to create an empty env, say "},{"type":"text","text":"Foo_dev","style":{"code":true}},{"type":"text","text":", then add or "},{"type":"text","text":"dev Foo","style":{"code":true}},{"type":"text","text":" into that empty env with no conflicts, to just then switch to "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" env? Then, what is the sense of this "},{"type":"text","text":"Foo_dev","style":{"code":true}},{"type":"text","text":" environment I am forced to create only to be able to get the "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" package and then switch into "},{"type":"text","text":"Foo","style":{"code":true}},{"type":"text","text":" env?"}]}]}],"thread_ts":"1616175042.218900","reply_count":1,"reply_users_count":1,"latest_reply":"1616175944.221300","reply_users":["UBF9YRB6H"],"is_locked":false,"subscribed":false},"blocks":[{"type":"rich_text","block_id":"ZLo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was wondering this the other day. I often want to "},{"type":"text","text":"] dev","style":{"code":true}},{"type":"text","text":" packages but not make them known to my main environment.\n\nI think you are correct. make an empty environment, "},{"type":"text","text":"dev","style":{"code":true}},{"type":"text","text":" in there, and then you can delete that environment."}]}]}],"client_msg_id":"d1a5b198-7531-4333-84b6-3ac8e9a1811b","reactions":[{"name":"today-i-learned","users":["U0138UTB7A4"],"count":1}]}]