[{"client_msg_id":"71b1dcae-c1c0-43c7-93d4-db23e5a47c3e","type":"message","text":"When using Documenter.jl, how can I reference an overloaded abstract type in a `@docs` block? E.g., for a method like this:\n```abstract type A end\nstruct B &lt;: A\n    x\nend\n\"\"\"\n    Some nice doc-string I want to reference!\n\"\"\"\n(a::A)(y) = a.x + y```\nHow would I reference the last method in a `@docs` block?","user":"UCE6XE42Z","ts":"1617803840.145400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FC4/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When using Documenter.jl, how can I reference an overloaded abstract type in a "},{"type":"text","text":"@docs","style":{"code":true}},{"type":"text","text":" block? E.g., for a method like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"abstract type A end\nstruct B <: A\n    x\nend\n\"\"\"\n    Some nice doc-string I want to reference!\n\"\"\"\n(a::A)(y) = a.x + y"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"How would I reference the last method in a "},{"type":"text","text":"@docs","style":{"code":true}},{"type":"text","text":" block?"}]}]}],"thread_ts":"1617803840.145400","reply_count":3,"reply_users_count":1,"latest_reply":"1617833282.220000","reply_users":["U9V8ZQVEY"],"is_locked":false,"subscribed":false},{"client_msg_id":"359ad33c-adcf-4bfd-ab47-53baa8e172be","type":"message","text":"Off the top of my head, I think you just put `A` in the at-docs block and it should work.. as long as the type itself doesn't have a docstring. The handling of the call syntax is actually broken currently","user":"U9V8ZQVEY","ts":"1617833127.219600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rorg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Off the top of my head, I think you just put "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" in the at-docs block and it should work.. as long as the type itself doesn't have a docstring. The handling of the call syntax is actually broken currently"}]}]}],"thread_ts":"1617803840.145400","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"a55f3877-7341-4ff8-953b-e7185772561d","type":"message","text":"oh, actually, it might be `A(::Any)`. See this discussion here: <https://github.com/JuliaLang/julia/pull/35705>","user":"U9V8ZQVEY","ts":"1617833244.219800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M9zGX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, actually, it might be "},{"type":"text","text":"A(::Any)","style":{"code":true}},{"type":"text","text":". See this discussion here: "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/35705"}]}]}],"thread_ts":"1617803840.145400","parent_user_id":"UCE6XE42Z"},{"client_msg_id":"b943e0fa-caff-463f-892f-e3201445d9a2","type":"message","text":"there is an open issue for this on the Documenter issue tracker: <https://github.com/JuliaDocs/Documenter.jl/issues/558>","user":"U9V8ZQVEY","ts":"1617833282.220000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"epLm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there is an open issue for this on the Documenter issue tracker: "},{"type":"link","url":"https://github.com/JuliaDocs/Documenter.jl/issues/558"}]}]}],"thread_ts":"1617803840.145400","parent_user_id":"UCE6XE42Z"}]