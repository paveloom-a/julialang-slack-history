[{"client_msg_id":"344540d3-8aa3-4b69-95ef-85c23e856388","type":"message","text":"is there a way to defer a from being evaluated in the expr?\n\n```julia&gt; a = :Foo\n:Foo\n\njulia&gt; ex = :(struct $a end)\n:(struct Foo\n      #= REPL[28]:1 =#\n  end)```\nso that it's\n\n```:(struct $a\n      #= REPL[28]:1 =#\n  end)```","user":"U6CF3AA5Q","ts":"1610395779.321900","team":"T68168MUP","edited":{"user":"U6CF3AA5Q","ts":"1610395793.000000"},"blocks":[{"type":"rich_text","block_id":"cUE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a way to defer a from being evaluated in the expr?\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a = :Foo\n:Foo\n\njulia> ex = :(struct $a end)\n:(struct Foo\n      #= REPL[28]:1 =#\n  end)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so that it's\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":":(struct $a\n      #= REPL[28]:1 =#\n  end)"}]}]}],"thread_ts":"1610395779.321900","reply_count":3,"reply_users_count":3,"latest_reply":"1610397540.324300","reply_users":["UM30MT6RF","U6CF3AA5Q","U8D9768Q6"],"subscribed":false},{"client_msg_id":"12885d04-32a7-43b0-b4ed-3060435164f5","type":"message","text":"We unfortunately don't have a non-interpolating quote, but either `:(:(struct $a end)).args[1]` or `:(struct $(Expr(:$, :a)) end)` should do what you want.","user":"UM30MT6RF","ts":"1610396019.322100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7B=QL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We unfortunately don't have a non-interpolating quote, but either "},{"type":"text","text":":(:(struct $a end)).args[1]","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":":(struct $(Expr(:$, :a)) end)","style":{"code":true}},{"type":"text","text":" should do what you want."}]}]}],"thread_ts":"1610395779.321900","parent_user_id":"U6CF3AA5Q"},{"client_msg_id":"d7de2a05-bd85-4163-ab69-43d3348ad518","type":"message","text":"hmm ok thanks :+1:","user":"U6CF3AA5Q","ts":"1610396439.322300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yWb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm ok thanks "},{"type":"emoji","name":"+1"}]}]}],"thread_ts":"1610395779.321900","parent_user_id":"U6CF3AA5Q"},{"client_msg_id":"60e617c3-e43b-4bc5-bd74-0bee9e3d9ea4","type":"message","text":"You can define your own non-interpolating quote pretty easily:\n```julia&gt; macro Quote(ex)\n           QuoteNode(ex)\n       end\n@Quote (macro with 1 method)\n\njulia&gt; @Quote struct $a end\n:(struct $(Expr(:$, :a))\n      #= REPL[22]:1 =#\n  end)```","user":"U8D9768Q6","ts":"1610397540.324300","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1610397548.000000"},"blocks":[{"type":"rich_text","block_id":"+xgr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can define your own non-interpolating quote pretty easily:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> macro Quote(ex)\n           QuoteNode(ex)\n       end\n@Quote (macro with 1 method)\n\njulia> @Quote struct $a end\n:(struct $(Expr(:$, :a))\n      #= REPL[22]:1 =#\n  end)"}]}]}],"thread_ts":"1610395779.321900","parent_user_id":"U6CF3AA5Q"}]