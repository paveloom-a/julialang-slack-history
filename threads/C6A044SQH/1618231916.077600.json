[{"client_msg_id":"f27aafe6-afa5-44ec-a8d8-d6b0d3f81150","type":"message","text":"I am starting a new project that requires computing eigenvalues on both `CPUs` and `GPUs` for both smallish and big systems.  In particular, I want to be able to solve non-symmetric standard and generalized eigenvalue problems.  Also, ideally, it would be great to be able to use both direct and indirect solvers.\n\nIn my experience with direct solvers on `CPUs`, I find that they often are limited by the memory available. I wonder whether `GPUs` would help to raise the bar quite a bit higher?\n\nI did a bit of research and found that in the <https://docs.nvidia.com/cuda/cusolver/index.html#eig_examples|CUDA Toolkit Docs> and found some docus on dense eigenvalue solvers.  Two problems are that they seem to focus on *symmetric* cases and I'm not sure how to access these in julia.  Can someone help me to get started?","user":"U01FBLBCP7S","ts":"1618231916.077600","team":"T68168MUP","attachments":[{"title":"cuSOLVER :: CUDA Toolkit Documentation","title_link":"https://docs.nvidia.com/cuda/cusolver/index.html#eig_examples","text":"The API reference guide for cuSOLVER, a GPU accelerated library for decompositions and linear system solutions for both dense and sparse matrices.","fallback":"cuSOLVER :: CUDA Toolkit Documentation","from_url":"https://docs.nvidia.com/cuda/cusolver/index.html#eig_examples","service_name":"docs.nvidia.com","id":1,"original_url":"https://docs.nvidia.com/cuda/cusolver/index.html#eig_examples"}],"blocks":[{"type":"rich_text","block_id":"KF3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am starting a new project that requires computing eigenvalues on both "},{"type":"text","text":"CPUs","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"GPUs","style":{"code":true}},{"type":"text","text":" for both smallish and big systems.  In particular, I want to be able to solve non-symmetric standard and generalized eigenvalue problems.  Also, ideally, it would be great to be able to use both direct and indirect solvers.\n\nIn my experience with direct solvers on "},{"type":"text","text":"CPUs","style":{"code":true}},{"type":"text","text":", I find that they often are limited by the memory available. I wonder whether "},{"type":"text","text":"GPUs","style":{"code":true}},{"type":"text","text":" would help to raise the bar quite a bit higher?\n\nI did a bit of research and found that in the "},{"type":"link","url":"https://docs.nvidia.com/cuda/cusolver/index.html#eig_examples","text":"CUDA Toolkit Docs"},{"type":"text","text":" and found some docus on dense eigenvalue solvers.  Two problems are that they seem to focus on "},{"type":"text","text":"symmetric","style":{"bold":true}},{"type":"text","text":" cases and I'm not sure how to access these in julia.  Can someone help me to get started?"}]}]}],"thread_ts":"1618231916.077600","reply_count":7,"reply_users_count":3,"latest_reply":"1618233579.079500","reply_users":["U0179G7FG4F","U01FBLBCP7S","UCT34GL7M"],"is_locked":false,"subscribed":false},{"client_msg_id":"633cbd1d-06a1-442e-8483-e453be49b42f","type":"message","text":"In general, gpu is much more memory constrained than cpu.","user":"U0179G7FG4F","ts":"1618232503.077800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fcw/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In general, gpu is much more memory constrained than cpu."}]}]}],"thread_ts":"1618231916.077600","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"cbd5a1b3-2eda-4e6b-b1dd-3e073e664a28","type":"message","text":"Thanks for the information <@U0179G7FG4F>, that is good to know.","user":"U01FBLBCP7S","ts":"1618232769.078000","team":"T68168MUP","edited":{"user":"U01FBLBCP7S","ts":"1618232825.000000"},"blocks":[{"type":"rich_text","block_id":"418k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for the information "},{"type":"user","user_id":"U0179G7FG4F"},{"type":"text","text":", that is good to know."}]}]}],"thread_ts":"1618231916.077600","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"A326915F-7548-4815-A221-30949BFDABB9","type":"message","text":"You tagged the wrong Oscar :p","user":"UCT34GL7M","ts":"1618232800.078400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XhJ94","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You tagged the wrong Oscar :p"}]}]}],"thread_ts":"1618231916.077600","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"ba25d7d2-5bd7-46be-ad9b-899c3c0f423a","type":"message","text":"I wonder if I use a `matrix-free`  method, if that might help to improve things?  In terms of evaluating functions, gpus can be faster than cpus and maybe this would be worth exploring.","user":"U01FBLBCP7S","ts":"1618232854.078700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dyQz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder if I use a "},{"type":"text","text":"matrix-free","style":{"code":true}},{"type":"text","text":"  method, if that might help to improve things?  In terms of evaluating functions, gpus can be faster than cpus and maybe this would be worth exploring."}]}]}],"thread_ts":"1618231916.077600","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"d709a321-e83a-4369-be85-d7d2d2b925d6","type":"message","text":"Sorry <@UCT34GL7M> for tagging you by accident.  Will be more careful.","user":"U01FBLBCP7S","ts":"1618232876.078900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PLl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry "},{"type":"user","user_id":"UCT34GL7M"},{"type":"text","text":" for tagging you by accident.  Will be more careful."}]}]}],"thread_ts":"1618231916.077600","parent_user_id":"U01FBLBCP7S"},{"client_msg_id":"FE32F20A-A4D3-4E0A-9D58-C33FAD82705F","type":"message","text":"No problem","user":"UCT34GL7M","ts":"1618232890.079200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q0B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No problem"}]}]}],"thread_ts":"1618231916.077600","parent_user_id":"U01FBLBCP7S","reactions":[{"name":"slightly_smiling_face","users":["U01FBLBCP7S"],"count":1}]},{"client_msg_id":"b3f2f6f1-3df5-4a96-aa9c-c7ea294eecb5","type":"message","text":"I'm not an expert, but if there is an efficient matrix free method available, checking it out is probably worthwhile.","user":"U0179G7FG4F","ts":"1618233579.079500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SA1i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not an expert, but if there is an efficient matrix free method available, checking it out is probably worthwhile."}]}]}],"thread_ts":"1618231916.077600","parent_user_id":"U01FBLBCP7S"}]