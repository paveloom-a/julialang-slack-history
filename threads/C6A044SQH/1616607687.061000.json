[{"client_msg_id":"a791185d-9666-467b-952c-c4eec4c05417","type":"message","text":"Are things like `A .= A  .- mean(A,dims(1,2))` Multithreaded by default (like do they use blas or something like that?) Is there some magic that can automagically use more threads to do this kind of operation on huge arrays?","user":"UEGRU91B2","ts":"1616607687.061000","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1616607958.000000"},"blocks":[{"type":"rich_text","block_id":"r=tV3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are things like "},{"type":"text","text":"A .= A  .- mean(A,dims(1,2))","style":{"code":true}},{"type":"text","text":" Multithreaded by default (like do they use blas or something like that?) Is there some magic that can automagically use more threads to do this kind of operation on huge arrays?"}]}]}],"thread_ts":"1616607687.061000","reply_count":9,"reply_users_count":5,"latest_reply":"1616608488.063200","reply_users":["U0179G7FG4F","UDB26738Q","U01C3624SGJ","UEGRU91B2","UD0NS8PDF"],"is_locked":false,"subscribed":false},{"client_msg_id":"300890fb-beb1-40b7-b4f8-562a3319ff2d","type":"message","text":"`@avxt` from `LoopVectorization` can do this (I think)","user":"U0179G7FG4F","ts":"1616607743.061100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WGl3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@avxt","style":{"code":true}},{"type":"text","text":" from "},{"type":"text","text":"LoopVectorization","style":{"code":true}},{"type":"text","text":" can do this (I think)"}]}]}],"thread_ts":"1616607687.061000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"5ed771f6-6f4e-4bc1-a1b5-5f3665442eb3","type":"message","text":"does it work also with `mean`?","user":"UDB26738Q","ts":"1616607908.061300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GC93","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does it work also with "},{"type":"text","text":"mean","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1616607687.061000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"7876feeb-1fbc-400b-bc90-6fac4550f417","type":"message","text":"I mean, it needs to compute the `mean` first","user":"UDB26738Q","ts":"1616607931.061500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hpFWf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, it needs to compute the "},{"type":"text","text":"mean","style":{"code":true}},{"type":"text","text":" first"}]}]}],"thread_ts":"1616607687.061000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"2cb7aea4-0932-452e-a75b-326f098d7a3f","type":"message","text":"yeah, that's going to cause issues","user":"U0179G7FG4F","ts":"1616607957.061700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kJv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, that's going to cause issues"}]}]}],"thread_ts":"1616607687.061000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"361e3b52-8cc6-4598-a313-8ffe0b5bb1a0","type":"message","text":"you could calculate mean and use `@avxt` on the single value i'm not sure if it would work but maybe","user":"U01C3624SGJ","ts":"1616608122.062000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zNHb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could calculate mean and use "},{"type":"text","text":"@avxt","style":{"code":true}},{"type":"text","text":" on the single value i'm not sure if it would work but maybe"}]}]}],"thread_ts":"1616607687.061000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"c4d81689-6f33-4624-a5b5-45f82f32062d","type":"message","text":"now a multithreaded mean could be done with something like a Folds.jl reduce and them a single division","user":"U01C3624SGJ","ts":"1616608173.062200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g3qa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"now a multithreaded mean could be done with something like a Folds.jl reduce and them a single division"}]}]}],"thread_ts":"1616607687.061000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"bb7a2783-75e4-4cce-b9dc-2d92f4f0cb9f","type":"message","text":"Yes, actually `A` is a `Array{Float64,4)`, so `mean(A,dims=(1,2))` is also a 4-dim but `size(A) == (1,1,something,something)`. I think it can be done, I was just hoping that something like ThreadsXStatistics would magically exist heh","user":"UEGRU91B2","ts":"1616608253.062700","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1616608293.000000"},"blocks":[{"type":"rich_text","block_id":"JmC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, actually "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" is a "},{"type":"text","text":"Array{Float64,4)","style":{"code":true}},{"type":"text","text":", so "},{"type":"text","text":"mean(A,dims=(1,2))","style":{"code":true}},{"type":"text","text":" is also a 4-dim but "},{"type":"text","text":"size(A) == (1,1,something,something)","style":{"code":true}},{"type":"text","text":". I think it can be done, I was just hoping that something like ThreadsXStatistics would magically exist heh"}]}]}],"thread_ts":"1616607687.061000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"9f9e45f5-4193-4d03-850c-902a2fae1b57","type":"message","text":"Seems like an interesting idea for a package","user":"U01C3624SGJ","ts":"1616608393.063000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V+g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems like an interesting idea for a package"}]}]}],"thread_ts":"1616607687.061000","parent_user_id":"UEGRU91B2"},{"client_msg_id":"6988603f-a3af-42df-a38f-4f242e463663","type":"message","text":"I think that `@btime vreduce(max, $(rand(100,100)), dims=1)` is faster than `maximum`. Perhaps ideally `@avx` would perform such replacements for you, but I don’t think it does.","user":"UD0NS8PDF","ts":"1616608488.063200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"edd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think that "},{"type":"text","text":"@btime vreduce(max, $(rand(100,100)), dims=1)","style":{"code":true}},{"type":"text","text":" is faster than "},{"type":"text","text":"maximum","style":{"code":true}},{"type":"text","text":". Perhaps ideally "},{"type":"text","text":"@avx","style":{"code":true}},{"type":"text","text":" would perform such replacements for you, but I don’t think it does."}]}]}],"thread_ts":"1616607687.061000","parent_user_id":"UEGRU91B2"}]