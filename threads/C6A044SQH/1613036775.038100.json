[{"client_msg_id":"73dae5d0-00e5-4bee-b892-6220f040c384","type":"message","text":"anyone know how to do broadcasting on a function with a non-iterable argument? i.e. `f(x,p) = x*p.val` where `p` is a struct with a single value `val` . Thus, the desired result would be broadcasting over x and multiplying every value by `val`. Is there a way to do this without making the struct type of `p` behave like an array?","user":"U01H36BUDJB","ts":"1613036775.038100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fRyh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"anyone know how to do broadcasting on a function with a non-iterable argument? i.e. "},{"type":"text","text":"f(x,p) = x*p.val","style":{"code":true}},{"type":"text","text":" where "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" is a struct with a single value "},{"type":"text","text":"val","style":{"code":true}},{"type":"text","text":" . Thus, the desired result would be broadcasting over x and multiplying every value by "},{"type":"text","text":"val","style":{"code":true}},{"type":"text","text":". Is there a way to do this without making the struct type of "},{"type":"text","text":"p","style":{"code":true}},{"type":"text","text":" behave like an array?"}]}]}],"thread_ts":"1613036775.038100","reply_count":4,"reply_users_count":3,"latest_reply":"1613038455.041800","reply_users":["B01J9QZ4SP8","U01H36BUDJB","UBEF50B7C"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613036777.038200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613036775.038100","parent_user_id":"U01H36BUDJB","reactions":[{"name":"bridge","users":["U01H36BUDJB"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/55051| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1613036820.038500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613036775.038100","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"9bc04368-2866-434a-8f9a-d6b58ac313fe","type":"message","text":"Nevermind, found the solution :man-facepalming:\n<https://discourse.julialang.org/t/broadcasting-structs-as-scalars/14310>","user":"U01H36BUDJB","ts":"1613037009.038700","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Broadcasting structs as scalars","title_link":"https://discourse.julialang.org/t/broadcasting-structs-as-scalars/14310","text":"The following code used to work in Julia v0.6.4, but it is not working in Julia v1.0. struct Q x::Int end f(q::Q, x::Int) = q.x + x f.(Q(2), [1,2,3]) # ERROR: MethodError: no method matching length(::Q) What should I do to broadcast on Q as a scalar?","fallback":"JuliaLang: Broadcasting structs as scalars","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"7 :heart:","short":true}],"ts":1535630867,"from_url":"https://discourse.julialang.org/t/broadcasting-structs-as-scalars/14310","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/broadcasting-structs-as-scalars/14310"}],"blocks":[{"type":"rich_text","block_id":"bfv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nevermind, found the solution "},{"type":"emoji","name":"man-facepalming"},{"type":"text","text":"\n"},{"type":"link","url":"https://discourse.julialang.org/t/broadcasting-structs-as-scalars/14310"}]}]}],"thread_ts":"1613036775.038100","parent_user_id":"U01H36BUDJB"},{"client_msg_id":"902254fe-15be-42a9-9956-2b8c0f8d64af","type":"message","text":"Is there any advantage of using `Ref` for making scalars broadcastable instead of just wrapping it into a  tuple like `(x, )` ?","user":"UBEF50B7C","ts":"1613038455.041800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PTJut","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any advantage of using "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" for making scalars broadcastable instead of just wrapping it into a  tuple like "},{"type":"text","text":"(x, )","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1613036775.038100","parent_user_id":"U01H36BUDJB"}]