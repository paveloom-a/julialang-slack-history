[{"client_msg_id":"0c8d268f-717e-4497-ae1b-3b2dbf54c816","type":"message","text":"Say I have an `x &lt;: AbstractArray{R,N+1}` of unknown concrete type. How can I get, without creating new arrays or subarrays, the type of `similar(x, new_dims)`?","user":"ULDCM1P9P","ts":"1617105150.000400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z2A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Say I have an "},{"type":"text","text":"x <: AbstractArray{R,N+1}","style":{"code":true}},{"type":"text","text":" of unknown concrete type. How can I get, without creating new arrays or subarrays, the type of "},{"type":"text","text":"similar(x, new_dims)","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1617105150.000400","reply_count":3,"reply_users_count":2,"latest_reply":"1617107211.001100","reply_users":["U017LQ3A59U","ULDCM1P9P"],"is_locked":false,"subscribed":false},{"client_msg_id":"80390ebb-3d54-45af-8fc0-38b46bd85c03","type":"message","text":"In general you can't. If I define my own subtype of `AbstractArray` I can always add specific method to `similar` for my subtype that does crazy things with it.","user":"U017LQ3A59U","ts":"1617106933.000700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v1L8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In general you can't. If I define my own subtype of "},{"type":"text","text":"AbstractArray","style":{"code":true}},{"type":"text","text":" I can always add specific method to "},{"type":"text","text":"similar","style":{"code":true}},{"type":"text","text":" for my subtype that does crazy things with it."}]}]}],"thread_ts":"1617105150.000400","parent_user_id":"ULDCM1P9P"},{"client_msg_id":"e2a710fe-2fd1-4731-8dd4-0ac747a92d30","type":"message","text":"hmm, I see. I was in fact interested in the type of something like `x[:,1:3,1]`, but I guess a similar comment applies :confused:","user":"ULDCM1P9P","ts":"1617107113.000900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dVoq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm, I see. I was in fact interested in the type of something like "},{"type":"text","text":"x[:,1:3,1]","style":{"code":true}},{"type":"text","text":", but I guess a similar comment applies "},{"type":"emoji","name":"confused"}]}]}],"thread_ts":"1617105150.000400","parent_user_id":"ULDCM1P9P"},{"client_msg_id":"e013edb3-b78c-4d0f-b67d-2bc471644ee2","type":"message","text":"Yeah with you example someone could decide to return a view by default while splicing for example, which could even be reasonnable. Why do you need the type?","user":"U017LQ3A59U","ts":"1617107211.001100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PMS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah with you example someone could decide to return a view by default while splicing for example, which could even be reasonnable. Why do you need the type?"}]}]}],"thread_ts":"1617105150.000400","parent_user_id":"ULDCM1P9P"}]