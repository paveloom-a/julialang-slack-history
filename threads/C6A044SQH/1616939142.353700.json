[{"client_msg_id":"e96bb546-bd1b-44dd-a377-d258f42bc7a3","type":"message","text":"eh, I wonder why redefine `Base.:+` can work, but these won't be work\n```Base.:¬(p::Bool) = !p # negative\nBase.:∧(p::Bool, q::Bool) = p &amp;&amp; q #conjunction\nBase.:∨(p::Bool, q::Bool) = p || q #disjunction\nBase.:→(p::Bool, q::Bool) = begin #implication\n  !(p == true &amp;&amp; q == false)\nend\n\nBase.:↔(p::Bool, q::Bool) = p == q #equivalence```\ncan you help me out ??","user":"U011K6EQAQN","ts":"1616939142.353700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u/ux","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"eh, I wonder why redefine "},{"type":"text","text":"Base.:+","style":{"code":true}},{"type":"text","text":" can work, but these won't be work\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Base.:¬(p::Bool) = !p # negative\nBase.:∧(p::Bool, q::Bool) = p && q #conjunction\nBase.:∨(p::Bool, q::Bool) = p || q #disjunction\nBase.:→(p::Bool, q::Bool) = begin #implication\n  !(p == true && q == false)\nend\n\nBase.:↔(p::Bool, q::Bool) = p == q #equivalence"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"can you help me out ??"}]}]}],"thread_ts":"1616939142.353700","reply_count":3,"reply_users_count":3,"latest_reply":"1616942936.361600","reply_users":["UC3SSCQRZ","U011K6EQAQN","U012XER8K4M"],"is_locked":false,"subscribed":false},{"client_msg_id":"e097f059-364e-4a12-855a-6e4773a0a746","type":"message","text":"This operators aren't defined in Base, so you can't redefine what's not defined. Just\n```¬(p::Bool) = !p```\nworks.","user":"UC3SSCQRZ","ts":"1616940154.355500","team":"T68168MUP","edited":{"user":"UC3SSCQRZ","ts":"1616940254.000000"},"blocks":[{"type":"rich_text","block_id":"rNVH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This operators aren't defined in Base, so you can't redefine what's not defined. Just\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"¬(p::Bool) = !p"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"works."}]}]}],"thread_ts":"1616939142.353700","parent_user_id":"U011K6EQAQN"},{"client_msg_id":"3a300620-7fc8-4d52-bd57-9b912c4004b3","type":"message","text":"eh, why can julia recognize `p \\xor q` as `\\xor(p, q)`, amazing !","user":"U011K6EQAQN","ts":"1616941667.360500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f0QLg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"eh, why can julia recognize "},{"type":"text","text":"p \\xor q","style":{"code":true}},{"type":"text","text":" as "},{"type":"text","text":"\\xor(p, q)","style":{"code":true}},{"type":"text","text":", amazing !"}]}]}],"thread_ts":"1616939142.353700","parent_user_id":"U011K6EQAQN"},{"client_msg_id":"cedb41dc-17e6-40b7-a058-33ec8dddbff8","type":"message","text":"well, it's rather the other way around, some symbols are also parsed as infix operators. The normal prefix function notation is how they are defined","user":"U012XER8K4M","ts":"1616942936.361600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zUJ6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well, it's rather the other way around, some symbols are also parsed as infix operators. The normal prefix function notation is how they are defined"}]}]}],"thread_ts":"1616939142.353700","parent_user_id":"U011K6EQAQN"}]