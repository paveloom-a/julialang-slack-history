[{"client_msg_id":"2d35bfa2-cce4-4f85-97d2-b13a97403661","type":"message","text":"hi guys.. i keep running into the problem of `SparseArrays`  not allowing sparse right-hand sides. My workaround for the moment is to replace `A\\B`  with `A\\convert(Matrix, B)` , but I would like it to not allocate extra memory if `B` is already dense. This should work right? Any other pointers as to how to do this well? My package uses many different Matrix-types and ideally I would like to code everything in a way that is highly type-agnostic yet efficient.","user":"U01L0RJC6FM","ts":"1615998035.029100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jz=GZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hi guys.. i keep running into the problem of "},{"type":"text","text":"SparseArrays","style":{"code":true}},{"type":"text","text":"  not allowing sparse right-hand sides. My workaround for the moment is to replace "},{"type":"text","text":"A\\B","style":{"code":true}},{"type":"text","text":"  with "},{"type":"text","text":"A\\convert(Matrix, B)","style":{"code":true}},{"type":"text","text":" , but I would like it to not allocate extra memory if "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":" is already dense. This should work right? Any other pointers as to how to do this well? My package uses many different Matrix-types and ideally I would like to code everything in a way that is highly type-agnostic yet efficient."}]}]}],"thread_ts":"1615998035.029100","reply_count":2,"reply_users_count":2,"latest_reply":"1616002055.032700","reply_users":["B01J9QZ4SP8","U01M655G9AR"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615998036.029200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615998035.029100","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"6b87a98e-bb5a-4abd-a599-30ee9edee15c","type":"message","text":"this is fine I think, no allocations if it's already dense\n```julia&gt; x = rand(3,3); y = convert(Matrix, x); x === y\ntrue```","user":"U01M655G9AR","ts":"1616002055.032700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z33","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is fine I think, no allocations if it's already dense\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> x = rand(3,3); y = convert(Matrix, x); x === y\ntrue"}]}]}],"thread_ts":"1615998035.029100","parent_user_id":"U01L0RJC6FM"}]