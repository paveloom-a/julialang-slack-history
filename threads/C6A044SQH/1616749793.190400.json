[{"client_msg_id":"1f246924-309c-447e-bdcf-8a72e77be2e3","type":"message","text":"Is there a good way to check why my code is ~20% slower in 1.6.0 vs 1.5.0? (Using the same packages)? Is there some subforum to discuss? Allocations didnt change much (~2% or so).","user":"UBTGC7HPA","ts":"1616749793.190400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Ar5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a good way to check why my code is ~20% slower in 1.6.0 vs 1.5.0? (Using the same packages)? Is there some subforum to discuss? Allocations didnt change much (~2% or so)."}]}]}],"thread_ts":"1616749793.190400","reply_count":12,"reply_users_count":4,"latest_reply":"1616774725.233600","reply_users":["U7HAYKY9X","UBTGC7HPA","UH24GRBLL","U01SFUPBJ9E"],"is_locked":false,"subscribed":false},{"client_msg_id":"5b7c35bf-b203-4b5f-af9e-3e76a8ec810d","type":"message","text":"Here is a good place. You can try running the profiler on it and see if any particular places stand out. First check that everything is correctly inferred","user":"U7HAYKY9X","ts":"1616751569.190700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EGj+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here is a good place. You can try running the profiler on it and see if any particular places stand out. First check that everything is correctly inferred"}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"0dc7c720-1ea1-4379-b51c-675b90eb41a6","type":"message","text":"Hmm, so it's all in `^`.  From 1,200.00 ms to 4,400.00ms. Other parts of the code are fairly similar..\n\nI call this function manymanymany times.\n```function bequest(mp::ModPar,xp::Float64)\n    mp.ψ0*(((max(xp,0.0) + 1e-36 + mp.ψ1)/mp.ψ0)^(1.0-mp.γ))/(1.0-mp.γ) # \nend```\nIn fact, if I do\n```\na = rand(100000)\nfunction test(values::Vector{Float64})\n  mp = ModPar()\n\n  for a in values\n    bequest(mp,rand())\n  end\nend\n\n@time test(a)```\nI see that 1.6.0 takes twice as long.\n\nI'll see what happens if I don't rely on the custom `ModPar` structure and just pass the parameters as function inputs.","user":"UBTGC7HPA","ts":"1616755796.191200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cArym","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, so it's all in "},{"type":"text","text":"^","style":{"code":true}},{"type":"text","text":".  From 1,200.00 ms to 4,400.00ms. Other parts of the code are fairly similar..\n\nI call this function manymanymany times.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function bequest(mp::ModPar,xp::Float64)\n    mp.ψ0*(((max(xp,0.0) + 1e-36 + mp.ψ1)/mp.ψ0)^(1.0-mp.γ))/(1.0-mp.γ) # \nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIn fact, if I do\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\na = rand(100000)\nfunction test(values::Vector{Float64})\n  mp = ModPar()\n\n  for a in values\n    bequest(mp,rand())\n  end\nend\n\n@time test(a)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I see that 1.6.0 takes twice as long.\n\nI'll see what happens if I don't rely on the custom "},{"type":"text","text":"ModPar","style":{"code":true}},{"type":"text","text":" structure and just pass the parameters as function inputs."}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"ff85103f-0f75-4ea6-8fc7-320d11b93e55","type":"message","text":"what does `ModPar` look like?","user":"UH24GRBLL","ts":"1616755860.191400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tJ2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what does "},{"type":"text","text":"ModPar","style":{"code":true}},{"type":"text","text":" look like?"}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"9b8b322e-c5a3-4f4f-b134-2700e823484e","type":"message","text":"It's just a mutable struct with bunch of Float64","user":"UBTGC7HPA","ts":"1616755932.191600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PFoo=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's just a mutable struct with bunch of Float64"}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"7c46b661-313a-4293-88c3-6d6c2a7f0c3c","type":"message","text":"Ooops wait something wrong","user":"UBTGC7HPA","ts":"1616756468.191900","team":"T68168MUP","edited":{"user":"UBTGC7HPA","ts":"1616756539.000000"},"blocks":[{"type":"rich_text","block_id":"ll06","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ooops wait something wrong"}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"53b248b2-74a5-4559-99cc-9fbd150aa998","type":"message","text":"Okay, so this doesn't look too good to me, but what do I know\n```eirik@pop-os:~$ ~/julia/julia-1.5.0/bin/julia ~/juliatest.jl \n  1.592 ms (0 allocations: 0 bytes)\neirik@pop-os:~$ ~/julia/julia-1.6.0/bin/julia ~/juliatest.jl \n  6.885 ms (0 allocations: 0 bytes)```\nWhere juliatest.jl is just:\n```using BenchmarkTools\n\nfunction PowerUtility(ψ0,ψ1,γ,xp::Float64)\n  ψ0*(((xp + ψ1)/ψ0)^(1.0-γ))/(1.0-γ) # Adding an extra tiny amount to make sure you never get exactly 0!\nend\n\nfunction Repeat(values::Vector{Float64})\n  ψ0 = 5.0\n  ψ1 = 1.0\n  γ = 10.0\n  for (i,a) in enumerate(values)\n    PowerUtility(ψ0,ψ1,γ,a)\n  end\nend\n\nvector = collect(1.0:1.0:100000)\n@btime Repeat(vector)```\n","user":"UBTGC7HPA","ts":"1616757263.192200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/Dm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, so this doesn't look too good to me, but what do I know\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"eirik@pop-os:~$ ~/julia/julia-1.5.0/bin/julia ~/juliatest.jl \n  1.592 ms (0 allocations: 0 bytes)\neirik@pop-os:~$ ~/julia/julia-1.6.0/bin/julia ~/juliatest.jl \n  6.885 ms (0 allocations: 0 bytes)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Where juliatest.jl is just:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using BenchmarkTools\n\nfunction PowerUtility(ψ0,ψ1,γ,xp::Float64)\n  ψ0*(((xp + ψ1)/ψ0)^(1.0-γ))/(1.0-γ) # Adding an extra tiny amount to make sure you never get exactly 0!\nend\n\nfunction Repeat(values::Vector{Float64})\n  ψ0 = 5.0\n  ψ1 = 1.0\n  γ = 10.0\n  for (i,a) in enumerate(values)\n    PowerUtility(ψ0,ψ1,γ,a)\n  end\nend\n\nvector = collect(1.0:1.0:100000)\n@btime Repeat(vector)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"0da9caac-e0fa-47b8-9241-20f0a1409b59","type":"message","text":"what's the struct look like, field wise?","user":"UH24GRBLL","ts":"1616757477.192400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"klG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what's the struct look like, field wise?"}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"64643317-f022-4ad0-9410-9a3463555bcd","type":"message","text":"you're benchmarking in global scope with a non-const global - that incurs dynamic  lookup, since the type and value of the variable may change at any time","user":"UH24GRBLL","ts":"1616757544.192600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dzfsQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you're benchmarking in global scope with a non-const global - that incurs dynamic  lookup, since the type and value of the variable may change at any time"}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"291bcfaa-32f7-42dc-89a3-f36cdbc9259d","type":"message","text":"It is just:\n```mutable struct ModPar\n    β :: Float64\n    γ :: Float64\n    ..... #many such parameters\n    function ModPar(;\n        β = 0.93,\n        γ = 10.0, # and so on\n        )\n    new(β,γ,....)\nend\nend```\n```\n      ```","user":"UBTGC7HPA","ts":"1616757654.192800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AA8E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is just:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"mutable struct ModPar\n    β :: Float64\n    γ :: Float64\n    ..... #many such parameters\n    function ModPar(;\n        β = 0.93,\n        γ = 10.0, # and so on\n        )\n    new(β,γ,....)\nend\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\n      "}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"06340997-2273-45a6-88ca-e472bfc85ebe","type":"message","text":"Ah, ok.\n\nSo I should do:\n```using BenchmarkTools\n\nfunction PowerUtility(xp::Float64)\n  5.0*(((xp + 1.0)/5.0)^(1.0-10.0))/(1.0-10.0) # Adding an extra tiny amount to make sure you never get exactly 0!\nend\n\ndisplay(@benchmark PowerUtility(x) setup=(x=rand()))```\nwhich gives more or less the same results:\n```eirik@pop-os:~$ ~/julia/julia-1.5.0/bin/julia ~/juliatest2.jl \nBenchmarkTools.Trial: \n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     17.403 ns (0.00% GC)\n  median time:      18.229 ns (0.00% GC)\n  mean time:        18.401 ns (0.00% GC)\n  maximum time:     66.677 ns (0.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     997\neirik@pop-os:~$ ~/julia/julia-1.6.0/bin/julia ~/juliatest2.jl \nBenchmarkTools.Trial: \n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     70.716 ns (0.00% GC)\n  median time:      71.849 ns (0.00% GC)\n  mean time:        73.800 ns (0.00% GC)\n  maximum time:     213.008 ns (0.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     971```","user":"UBTGC7HPA","ts":"1616758309.193100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QTlP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, ok.\n\nSo I should do:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using BenchmarkTools\n\nfunction PowerUtility(xp::Float64)\n  5.0*(((xp + 1.0)/5.0)^(1.0-10.0))/(1.0-10.0) # Adding an extra tiny amount to make sure you never get exactly 0!\nend\n\ndisplay(@benchmark PowerUtility(x) setup=(x=rand()))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which gives more or less the same results:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"eirik@pop-os:~$ ~/julia/julia-1.5.0/bin/julia ~/juliatest2.jl \nBenchmarkTools.Trial: \n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     17.403 ns (0.00% GC)\n  median time:      18.229 ns (0.00% GC)\n  mean time:        18.401 ns (0.00% GC)\n  maximum time:     66.677 ns (0.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     997\neirik@pop-os:~$ ~/julia/julia-1.6.0/bin/julia ~/juliatest2.jl \nBenchmarkTools.Trial: \n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     70.716 ns (0.00% GC)\n  median time:      71.849 ns (0.00% GC)\n  mean time:        73.800 ns (0.00% GC)\n  maximum time:     213.008 ns (0.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     971"}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"e944371b-66af-4a2c-8931-4862718c6b7f","type":"message","text":"<@UBTGC7HPA> you mentioned that the `^` operation seems to be a trouble spot--could your problem possibly be related to <https://github.com/JuliaLang/julia/issues/39976|this issue on Github> or <https://discourse.julialang.org/t/julia-1-6-versus-1-5-4/57993|this Discourse thread>?","user":"U01SFUPBJ9E","ts":"1616768939.216400","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Julia 1.6 versus 1.5.4","title_link":"https://discourse.julialang.org/t/julia-1-6-versus-1-5-4/57993","text":"I find that Julia 1.5.4 is faster in some use cases than 1.6. Do others experience this? What is the explanation. Below is a piece of code that illustrates this. It finds the value function for an optimal growth problem—a canonical model in economics. using Plots using BenchmarkTools function optimal_growth_model() σ = 1.5 δ = 0.1 β = 0.95 α = 0.30 ks = ((1-β*(1-δ))/(α*β))^(1/(α-1)) csy = 1-α*β*δ/(1-β*(1-δ)) Δ = 0.9 kmin = (1-Δ)*ks kmax = (1+Δ)*ks Nk = ...","fallback":"JuliaLang: Julia 1.6 versus 1.5.4","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"2 mins :clock2:","short":true},{"title":"Likes","value":"4 :heart:","short":true}],"ts":1616745384,"from_url":"https://discourse.julialang.org/t/julia-1-6-versus-1-5-4/57993","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/julia-1-6-versus-1-5-4/57993"}],"blocks":[{"type":"rich_text","block_id":"yc0zu","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UBTGC7HPA"},{"type":"text","text":" you mentioned that the "},{"type":"text","text":"^","style":{"code":true}},{"type":"text","text":" operation seems to be a trouble spot--could your problem possibly be related to "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/39976","text":"this issue on Github"},{"type":"text","text":" or "},{"type":"link","url":"https://discourse.julialang.org/t/julia-1-6-versus-1-5-4/57993","text":"this Discourse thread"},{"type":"text","text":"?"}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA"},{"client_msg_id":"8074fe64-f569-4df9-8059-befaffb3db2e","type":"message","text":"<@U01SFUPBJ9E> Yes this seems ot be the same thing.","user":"UBTGC7HPA","ts":"1616774725.233600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q9Kz","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01SFUPBJ9E"},{"type":"text","text":" Yes this seems ot be the same thing."}]}]}],"thread_ts":"1616749793.190400","parent_user_id":"UBTGC7HPA","reactions":[{"name":"+1","users":["U01SFUPBJ9E"],"count":1}]}]