[{"client_msg_id":"8159edb6-a535-4205-9e22-55ec93a7249b","type":"message","text":"OK, I ended up writing a question <https://discourse.julialang.org/t/allocations-at-unexpected-places/55190|here> but I'm not sure it's a well written question","user":"U01MG0TN079","ts":"1613201143.212600","team":"T68168MUP","edited":{"user":"U01MG0TN079","ts":"1613201198.000000"},"attachments":[{"service_name":"JuliaLang","title":"Allocations at unexpected places","title_link":"https://discourse.julialang.org/t/allocations-at-unexpected-places/55190","text":"Hello, I’m writing some code to compute the Vinberg algorithm (finding a finite volume polyhedron in hyperbolic space, essentially), and my code is too slow, and very memory hungry. When tracking allocation patterns (--track-allocation=user), a specific line seems to be the worse offender. Here is a MWE. In the original code, line 122 is the bad line, but when running the code in the MWE, I’m not sure it’s going to be as bad. At first I thought it was simply that I should give a bit more typ...","fallback":"JuliaLang: Allocations at unexpected places","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1613192981,"from_url":"https://discourse.julialang.org/t/allocations-at-unexpected-places/55190","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/allocations-at-unexpected-places/55190"}],"blocks":[{"type":"rich_text","block_id":"YN3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, I ended up writing a question "},{"type":"link","url":"https://discourse.julialang.org/t/allocations-at-unexpected-places/55190","text":"here"},{"type":"text","text":" but I'm not sure it's a well written question"}]}]}],"thread_ts":"1613201143.212600","reply_count":37,"reply_users_count":3,"latest_reply":"1613224127.221100","reply_users":["B01J9QZ4SP8","UDD5Z7FLZ","U01MG0TN079"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613201145.212700","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"dbbe94c1-0e69-480d-af78-8d50fdbcc8c5","type":"message","text":"I am a bit confused. This code seems to be working fine as is?","user":"UDD5Z7FLZ","ts":"1613201580.213200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uSt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am a bit confused. This code seems to be working fine as is?"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"657be082-52e4-47fd-b2be-e6f11030aa47","type":"message","text":"So, the actual code is more than the file I've given here, but I removed everything not needed to be able to calle this `is_root()`  function. In the actual code, the line 122 makes around 5 times as many allocations as the next worst line.","user":"U01MG0TN079","ts":"1613209950.213600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s4Nc5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, the actual code is more than the file I've given here, but I removed everything not needed to be able to calle this "},{"type":"text","text":"is_root()","style":{"code":true}},{"type":"text","text":"  function. In the actual code, the line 122 makes around 5 times as many allocations as the next worst line."}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"988231ab-1aef-4544-9915-0809d0a3dbfa","type":"message","text":"So my question is: is there something in `crystallographic_condition()` that is responsible for this behaviour","user":"U01MG0TN079","ts":"1613210007.213800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zum","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So my question is: is there something in `crystallographic_condition()` that is responsible for this behaviour"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"e3a12426-017e-4280-b2b1-aa09c293aac4","type":"message","text":"I don't seem to see anything too wrong with it, I believe most of the allocations are going towards creating the view of the column in col.\n\nThe type annotations are not necessarily, as they are inferred.","user":"UDD5Z7FLZ","ts":"1613216050.214100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IE+F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't seem to see anything too wrong with it, I believe most of the allocations are going towards creating the view of the column in col.\n\nThe type annotations are not necessarily, as they are inferred."}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"53ce29b6-ef1f-4f0b-a05d-2f5143c89f9e","type":"message","text":"If you wish to avoid allocations unwinding the loop as\n```function crystallographic_condition2(v::HyperbolicLatticeElement,norm_v=nothing::Union{Nothing,Int})::Bool\n    \n    nv = norm_v === nothing ? norm(v) : norm_v\n    numRows, numCols = size(v.L.G)\n    Sum = 0\n    for i in 1:numRows\n        Sum = 0\n        for j in 1:numCols\n            Sum += v.vec[j]*v.L.G[i, j]\n        end\n        2Sum % nv == 0 || return false\n    end\n    return true\nend```\nworks","user":"UDD5Z7FLZ","ts":"1613216067.214300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"73oz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you wish to avoid allocations unwinding the loop as\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function crystallographic_condition2(v::HyperbolicLatticeElement,norm_v=nothing::Union{Nothing,Int})::Bool\n    \n    nv = norm_v === nothing ? norm(v) : norm_v\n    numRows, numCols = size(v.L.G)\n    Sum = 0\n    for i in 1:numRows\n        Sum = 0\n        for j in 1:numCols\n            Sum += v.vec[j]*v.L.G[i, j]\n        end\n        2Sum % nv == 0 || return false\n    end\n    return true\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"works"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"2fce3fe9-266b-4e17-ad0b-2913cd10e20a","type":"message","text":"Finally, just as an aside, the way you handle the functions isn't very julian.\n\nIts quite often we have\n`crystallographic_condition(v::HyperbolicLatticeElement) = crystallographic_condition(v, norm(v))`\n\nthen followed by your method, so you don't have to have a union, and default to nothing.","user":"UDD5Z7FLZ","ts":"1613216149.214500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0XdZ6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Finally, just as an aside, the way you handle the functions isn't very julian.\n\nIts quite often we have\n"},{"type":"text","text":"crystallographic_condition(v::HyperbolicLatticeElement) = crystallographic_condition(v, norm(v))","style":{"code":true}},{"type":"text","text":"\n\nthen followed by your method, so you don't have to have a union, and default to nothing."}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"a9b575e6-0abe-4576-87c7-88d709ef2aaa","type":"message","text":"(Thanks!) Concerning allocations: sometimes using `@code_warntype`  made `all`  of type `Union{Bool,Missing}`  which I thought would be bad.","user":"U01MG0TN079","ts":"1613216334.214800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MGpE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(Thanks!) Concerning allocations: sometimes using "},{"type":"text","text":"@code_warntype","style":{"code":true}},{"type":"text","text":"  made "},{"type":"text","text":"all","style":{"code":true}},{"type":"text","text":"  of type "},{"type":"text","text":"Union{Bool,Missing}","style":{"code":true}},{"type":"text","text":"  which I thought would be bad."}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"904943c2-0873-47cd-8eaf-23838b5c55c8","type":"message","text":"Concerning julianness: Yeah, I had a feeling the way I wrote it was quite dirty, but didn't figure out a better way, so thanks for providing it!","user":"U01MG0TN079","ts":"1613216395.215000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oZtco","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Concerning julianness: Yeah, I had a feeling the way I wrote it was quite dirty, but didn't figure out a better way, so thanks for providing it!"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"d4b8a101-3f71-4f8d-abba-c8bb0ba2b33d","type":"message","text":"Finally, I believe `all( 2*x % nv == 0 for x in v.L.G * v)` would not be better than my original version in terms of allocations, would it?","user":"U01MG0TN079","ts":"1613216611.215200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M/M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Finally, I believe "},{"type":"text","text":"all( 2*x % nv == 0 for x in v.L.G * v)","style":{"code":true}},{"type":"text","text":" would not be better than my original version in terms of allocations, would it?"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"ad602bd0-554c-4da2-b0c4-1923746a03e6","type":"message","text":"By the way, does that mean that everytime I compute `norm(v)` I should unroll the loop if I want to reduce allocations?","user":"U01MG0TN079","ts":"1613216836.215400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z2Ky8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"By the way, does that mean that everytime I compute "},{"type":"text","text":"norm(v)","style":{"code":true}},{"type":"text","text":" I should unroll the loop if I want to reduce allocations?"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"784ce8f3-7bc2-46e0-9666-af9d5bd3f26a","type":"message","text":"Is the apparently useless first `Sum=0`  there to force julia to use a single bin to put all sums?","user":"U01MG0TN079","ts":"1613217097.215600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yTT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is the apparently useless first "},{"type":"text","text":"Sum=0","style":{"code":true}},{"type":"text","text":"  there to force julia to use a single bin to put all sums?"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"7816235c-7553-4c3d-957c-07f226658a81","type":"message","text":"Yes, but you may end up allocating less (in more allocation passes, the honest opinion is whether you are going for fast code or really trying to minimize the allocation space), and in fact it will be worst for performance, because you have to do many multiplications.\n\nWhether one should unroll the loop is dependent on the ultimate objectives, unrolling then requires a lot of `@inbounds` etc to force the performance, for instance, the code I have given should be a little less performant.\n\nAllocations aren't bad per se, but rather one should strive to balance readability and speed","user":"UDD5Z7FLZ","ts":"1613217149.215800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yMy7u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, but you may end up allocating less (in more allocation passes, the honest opinion is whether you are going for fast code or really trying to minimize the allocation space), and in fact it will be worst for performance, because you have to do many multiplications.\n\nWhether one should unroll the loop is dependent on the ultimate objectives, unrolling then requires a lot of "},{"type":"text","text":"@inbounds","style":{"code":true}},{"type":"text","text":" etc to force the performance, for instance, the code I have given should be a little less performant.\n\nAllocations aren't bad per se, but rather one should strive to balance readability and speed"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"de9c8897-48f8-42fd-9b7b-89118f377d88","type":"message","text":"The first `Sum` should indeed be useless. I am pretty sure the compiler ignores the suggestion to reuse `Sum` . I forgot to remove it as I moved the code around.","user":"UDD5Z7FLZ","ts":"1613217208.216000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2rLas","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The first "},{"type":"text","text":"Sum","style":{"code":true}},{"type":"text","text":" should indeed be useless. I am pretty sure the compiler ignores the suggestion to reuse "},{"type":"text","text":"Sum","style":{"code":true}},{"type":"text","text":" . I forgot to remove it as I moved the code around."}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"18702526-5004-4b8b-9abe-758afbb0d603","type":"message","text":"that makes sense","user":"U01MG0TN079","ts":"1613217222.216200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P4Qa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that makes sense"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"b9c13bd0-684e-4a08-b88d-5424a84e3bc4","type":"message","text":"The thing is, when running my code on \"interesting examples\", it quickly gets to the 3+gb order of ram usage, and I've been told about an instance where julia just stopped, which I guess is because it ran out of memory (don't know if that's possible).","user":"U01MG0TN079","ts":"1613217299.216400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uwe9w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The thing is, when running my code on \"interesting examples\", it quickly gets to the 3+gb order of ram usage, and I've been told about an instance where julia just stopped, which I guess is because it ran out of memory (don't know if that's possible)."}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"ebbbe46c-8efb-48d2-9837-6c51c738552f","type":"message","text":"I mean, the allocations in this function should get garbage-collected, so I don't think this is from there.","user":"UDD5Z7FLZ","ts":"1613217347.216600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tYuvP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, the allocations in this function should get garbage-collected, so I don't think this is from there."}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"c7e7b5d1-d8a6-4824-ad2a-b9db1d552e80","type":"message","text":"Its more likely that way you construct the tensor product later on is dense","user":"UDD5Z7FLZ","ts":"1613217375.216800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B5p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its more likely that way you construct the tensor product later on is dense"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"462425ff-4725-4635-8094-199f19331ead","type":"message","text":"what do you mean, the tensor product?","user":"U01MG0TN079","ts":"1613217420.217000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JG3k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you mean, the tensor product?"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"9f3f0c6a-99f6-48b4-aa81-28f3cf210f21","type":"message","text":"Should I not interpret the output of `analyze_malloc_data()`  too literally, then?","user":"U01MG0TN079","ts":"1613217447.217200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZGS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Should I not interpret the output of "},{"type":"text","text":"analyze_malloc_data()","style":{"code":true}},{"type":"text","text":"  too literally, then?"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"75614dd4-c577-4aba-a9e5-064680ebebc2","type":"message","text":"I would suggest to redo the struct to (I didnt check that this is syntactically correct, so I may have typos)\n```struct HyperbolicLattice{T &lt;: AbstractMatrix}\n    r::Int\n    G::T # Bilinear Form\n    last_invariant_factor::Int\n    root_lengths::Vector{Int}\nend```\nso that you can parse in any `AbstractMatrix` and then use <https://github.com/JuliaArrays/BlockArrays.jl> so you don't need to keep all the 0s in memory","user":"UDD5Z7FLZ","ts":"1613217675.217400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b3lv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would suggest to redo the struct to (I didnt check that this is syntactically correct, so I may have typos)\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct HyperbolicLattice{T <: AbstractMatrix}\n    r::Int\n    G::T # Bilinear Form\n    last_invariant_factor::Int\n    root_lengths::Vector{Int}\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so that you can parse in any "},{"type":"text","text":"AbstractMatrix","style":{"code":true}},{"type":"text","text":" and then use "},{"type":"link","url":"https://github.com/JuliaArrays/BlockArrays.jl"},{"type":"text","text":" so you don't need to keep all the 0s in memory"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"110bc70a-4ea1-4a63-84b6-6957deef28d9","type":"message","text":"Im not too sure about the internals of `analyze_malloc_data()`, but if its just counting allocations, the allocations may be free-d later on, so it probably isn't the cause of the large amount of memory used.","user":"UDD5Z7FLZ","ts":"1613217749.217600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NygB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Im not too sure about the internals of "},{"type":"text","text":"analyze_malloc_data()","style":{"code":true}},{"type":"text","text":", but if its just counting allocations, the allocations may be free-d later on, so it probably isn't the cause of the large amount of memory used."}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"ea757476-5f19-43ec-9bfa-268466e6e444","type":"message","text":"ah, that makes sense","user":"U01MG0TN079","ts":"1613217912.217800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vRjH1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, that makes sense"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"1dc15cb7-9034-42a2-bcfc-a46fd71160c7","type":"message","text":"and, indeed, even after changing this, the code eats my ram, so probably that was the wrong target","user":"U01MG0TN079","ts":"1613217943.218000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z8f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and, indeed, even after changing this, the code eats my ram, so probably that was the wrong target"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"e67dc638-0fd2-417f-bfd4-3cc863c00aac","type":"message","text":"Does your restructuring proposition make sense even if the matrices will generally be very small ? (less than 20×20)","user":"U01MG0TN079","ts":"1613217996.218200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Ccej","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does your restructuring proposition make sense even if the matrices will generally be very small ? (less than 20×20)"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"e05a30eb-ba96-4b26-b49d-997b508a4850","type":"message","text":"Not really. If they are the dimension of the vector space is small, there is not much point. The speed from `SArray` is worth it","user":"UDD5Z7FLZ","ts":"1613218043.218400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hah","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not really. If they are the dimension of the vector space is small, there is not much point. The speed from "},{"type":"text","text":"SArray","style":{"code":true}},{"type":"text","text":" is worth it"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"d095423a-9e55-423d-b0e1-3031493f80f6","type":"message","text":"(Its nice to see people do pure mathematics in Julia, I feel that a lot of people here do some form of numerical computation :P)","user":"UDD5Z7FLZ","ts":"1613218078.218700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9L7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(Its nice to see people do pure mathematics in Julia, I feel that a lot of people here do some form of numerical computation :P)"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"fa3256de-20b5-4d7b-bac1-d8abbf484f90","type":"message","text":"OK, and in any case, I'm only going to use essentially one `HyperbolicLattice`  at any given time","user":"U01MG0TN079","ts":"1613218080.219100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6a0h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, and in any case, I'm only going to use essentially one "},{"type":"text","text":"HyperbolicLattice","style":{"code":true}},{"type":"text","text":"  at any given time"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"674ec5b9-a300-4b2d-826c-68be8ffd6119","type":"message","text":"Hah, and it's nice to use julia, coming from python! but doing \"pure\" maths is a bit hard for me when coding since you have lots of exactnesses to keep in mind","user":"U01MG0TN079","ts":"1613218145.219400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CP9B0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hah, and it's nice to use julia, coming from python! but doing \"pure\" maths is a bit hard for me when coding since you have lots of exactnesses to keep in mind"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"bda9edad-7b6a-4cc4-9d4f-be18a01d5e40","type":"message","text":"Like, I'm never sure that I should maybe use bigger integers. And then the next step for this algo is to work in number fields, where nothing is as easy anymore…","user":"U01MG0TN079","ts":"1613218228.219700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wgmPM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like, I'm never sure that I should maybe use bigger integers. And then the next step for this algo is to work in number fields, where nothing is as easy anymore…"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"b53768bd-fa9e-4c8c-993b-4480a6ecb0e2","type":"message","text":"What's your use of julia, btw?","user":"U01MG0TN079","ts":"1613219199.219900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e8m/z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's your use of julia, btw?"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"28c7b939-b343-4d30-a223-4d942d562f92","type":"message","text":"I just use it a general coding environment, regarding mathematics, I mostly use it to compute characters and examples. (I study Rep Theory)","user":"UDD5Z7FLZ","ts":"1613220466.220100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fMOx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just use it a general coding environment, regarding mathematics, I mostly use it to compute characters and examples. (I study Rep Theory)"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"9abd1269-4aaf-4185-9cc9-cf72449e9800","type":"message","text":"ah, interesting","user":"U01MG0TN079","ts":"1613220621.220300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aCP+w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, interesting"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"a93cb60e-c7ce-48ba-b084-030fc8bbf12a","type":"message","text":"I wouldn't have thought people doing Representation theory would use julia","user":"U01MG0TN079","ts":"1613220642.220500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kqa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wouldn't have thought people doing Representation theory would use julia"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"fd7e4d22-d99c-4517-82bb-21ea0d57cd6e","type":"message","text":"\"We share a philosophy about linear algebra: we think basis-free, we write basis-free, but when the chips are down we close the office door and compute with matrices like fury.\" (Kaplansky)","user":"UDD5Z7FLZ","ts":"1613221152.220700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AmGb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"\"We share a philosophy about linear algebra: we think basis-free, we write basis-free, but when the chips are down we close the office door and compute with matrices like fury.\" (Kaplansky)"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"27537895-8801-4a68-a25e-ad9e5fa1b64d","type":"message","text":"lol, that's a nice quote!","user":"U01MG0TN079","ts":"1613221904.220900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vOgv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lol, that's a nice quote!"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"},{"client_msg_id":"04b7741a-7914-4506-9162-1becf04693d4","type":"message","text":"Anyway, thanks for the inputs!","user":"U01MG0TN079","ts":"1613224127.221100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pf/ET","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyway, thanks for the inputs!"}]}]}],"thread_ts":"1613201143.212600","parent_user_id":"U01MG0TN079"}]