[{"client_msg_id":"0ecbb174-ab5a-4dee-94f0-33a8b6141b9b","type":"message","text":"I have a string that represents julia code. What's the accepted way to turn it into an actual function call. I suspect it's some combination of `eval`, `@eval`, `quote` etc, but I'm quite intimidated by the metaprogramming docs.\n\nThat is, say I have\n\n```julia&gt; foo() = println(\"success!\")\nfoo (generic function with 1 method)\n\njulia&gt; my_func = \"foo\"\n\"foo\"```\nHow can I use `my_func` to call `foo()`?","user":"U8JP5B9T2","ts":"1615585643.025400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zsy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a string that represents julia code. What's the accepted way to turn it into an actual function call. I suspect it's some combination of "},{"type":"text","text":"eval","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"@eval","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"quote","style":{"code":true}},{"type":"text","text":" etc, but I'm quite intimidated by the metaprogramming docs.\n\nThat is, say I have\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> foo() = println(\"success!\")\nfoo (generic function with 1 method)\n\njulia> my_func = \"foo\"\n\"foo\""}]},{"type":"rich_text_section","elements":[{"type":"text","text":"How can I use "},{"type":"text","text":"my_func","style":{"code":true}},{"type":"text","text":" to call "},{"type":"text","text":"foo()","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1615585643.025400","reply_count":9,"reply_users_count":6,"latest_reply":"1615593621.041300","reply_users":["B01J9QZ4SP8","UDD5Z7FLZ","U680THK2S","UEGRU91B2","U0179G7FG4F","U8JP5B9T2"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615585646.025500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615585643.025400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"609fdd6c-0f18-4746-9428-bb9a403838d2","type":"message","text":"`@eval $(Symbol(my_func))()`","user":"UDD5Z7FLZ","ts":"1615585881.025900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ryOc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@eval $(Symbol(my_func))()","style":{"code":true}}]}]}],"thread_ts":"1615585643.025400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"b6f6f774-1ed3-4283-8b92-6535ae3c5f4c","type":"message","text":"`eval(Meta.parse(my_func))`. `Meta.parse` parses the string into Julia expressions/symbols and `eval` evaluates the code.","user":"U680THK2S","ts":"1615585882.026100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FtBS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"eval(Meta.parse(my_func))","style":{"code":true}},{"type":"text","text":". "},{"type":"text","text":"Meta.parse","style":{"code":true}},{"type":"text","text":" parses the string into Julia expressions/symbols and "},{"type":"text","text":"eval","style":{"code":true}},{"type":"text","text":" evaluates the code."}]}]}],"thread_ts":"1615585643.025400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"353a6237-b275-467c-90d9-83422b18bfa4","type":"message","text":"Something like\n```julia&gt; foo() = println(\"success!\")\nfoo (generic function with 1 method)\n\njulia&gt; my_func = \"foo\"\n\"foo\"\n\njulia&gt; getfield(Main,Symbol(my_func))()\nsuccess!```\n(looking up the symbol in the namespace) may work (stolen from Stefan’s answer at <https://stackoverflow.com/questions/34016768/julia-invoke-a-function-by-a-given-string>)\nIt avoids eval’ing.","user":"UEGRU91B2","ts":"1615586047.026500","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1615586238.000000"},"attachments":[{"service_name":"Stack Overflow","title":"Julia: invoke a function by a given string","title_link":"https://stackoverflow.com/questions/34016768/julia-invoke-a-function-by-a-given-string","text":"Does Julia support the reflection just like java? What I need is something like this: str = ARGS[1] # str is a string # invoke the function str()","fallback":"Stack Overflow: Julia: invoke a function by a given string","thumb_url":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded","from_url":"https://stackoverflow.com/questions/34016768/julia-invoke-a-function-by-a-given-string","thumb_width":316,"thumb_height":316,"service_icon":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon.png?v=c78bd457575a","id":1,"original_url":"https://stackoverflow.com/questions/34016768/julia-invoke-a-function-by-a-given-string"}],"blocks":[{"type":"rich_text","block_id":"7Fr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> foo() = println(\"success!\")\nfoo (generic function with 1 method)\n\njulia> my_func = \"foo\"\n\"foo\"\n\njulia> getfield(Main,Symbol(my_func))()\nsuccess!"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(looking up the symbol in the namespace) may work (stolen from Stefan’s answer at "},{"type":"link","url":"https://stackoverflow.com/questions/34016768/julia-invoke-a-function-by-a-given-string"},{"type":"text","text":")\nIt avoids eval’ing."}]}]}],"thread_ts":"1615585643.025400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"961fc8d8-e3b2-4d0f-a99d-e28d3e575e47","type":"message","text":"I feel like an answer would be missing if I didn't suggest what's often the best answer: don't, and use expressions instead of strings","user":"U0179G7FG4F","ts":"1615586977.028500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"USpt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel like an answer would be missing if I didn't suggest what's often the best answer: don't, and use expressions instead of strings"}]}]}],"thread_ts":"1615585643.025400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"c570fa8b-b65b-4cc9-98eb-c68f5be5753a","type":"message","text":"<@U680THK2S> that's what I was slowly working my way toward, thanks!\n\n<@UCT34GL7M> yes, I know that's the general advice. In this case, it's for a command line script, so I could easily skip this whole thing and just do\n\n```if arg == \"thing1\"\n    thing1()\nelseif arg == \"thing2\"\n    thing2()\n#etc...\n```\nBut this seems worth breaking the rule for","user":"U8JP5B9T2","ts":"1615593438.040600","team":"T68168MUP","edited":{"user":"U8JP5B9T2","ts":"1615593463.000000"},"blocks":[{"type":"rich_text","block_id":"rh6G","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U680THK2S"},{"type":"text","text":" that's what I was slowly working my way toward, thanks!\n\n"},{"type":"user","user_id":"UCT34GL7M"},{"type":"text","text":" yes, I know that's the general advice. In this case, it's for a command line script, so I could easily skip this whole thing and just do\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"if arg == \"thing1\"\n    thing1()\nelseif arg == \"thing2\"\n    thing2()\n#etc...\n"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nBut this seems worth breaking the rule for"}]}]}],"thread_ts":"1615585643.025400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"88ccfc2e-4ac0-4cd5-af77-68db913b90f7","type":"message","text":"For this case scenario I think looking into the namespace also sounds like the best option, no?","user":"UEGRU91B2","ts":"1615593522.040900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oksf7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For this case scenario I think looking into the namespace also sounds like the best option, no?"}]}]}],"thread_ts":"1615585643.025400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"74ea2580-8643-44d5-9836-acd3e8f0d33d","type":"message","text":"You could indeed use `eval(@__MODULE__, x)`, though I believe that's what `eval(x)` does already. Note that this should be effectively equivalent to using `getfield(@__MODULE__, x)`, though that only works for `x::Symbol`.","user":"U680THK2S","ts":"1615593613.041100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Re8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could indeed use "},{"type":"text","text":"eval(@__MODULE__, x)","style":{"code":true}},{"type":"text","text":", though I believe that's what "},{"type":"text","text":"eval(x)","style":{"code":true}},{"type":"text","text":" does already. Note that this should be effectively equivalent to using "},{"type":"text","text":"getfield(@__MODULE__, x)","style":{"code":true}},{"type":"text","text":", though that only works for "},{"type":"text","text":"x::Symbol","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1615585643.025400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"41b904cc-53be-4641-a638-47494a67ffe0","type":"message","text":"<@UEGRU91B2> yeah, just trying to wrap my head around it. Very cool - would never have occurred to me","user":"U8JP5B9T2","ts":"1615593621.041300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9WEw","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UEGRU91B2"},{"type":"text","text":" yeah, just trying to wrap my head around it. Very cool - would never have occurred to me"}]}]}],"thread_ts":"1615585643.025400","parent_user_id":"U8JP5B9T2"}]