[{"client_msg_id":"ab1856cb-a553-4e4e-8191-5371056e3252","type":"message","text":"Does anyone know a function like `isapprox` that also works with unsigned types? I can of course implement such a thing myself, but I was wondering if there is already something.  The problem with `isapprox` and unsigned types is that\n\n```\njulia&gt; isapprox(UInt(7), UInt(8), atol=10.0)\nfalse```","user":"UBEF50B7C","ts":"1617651731.019300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l=v7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone know a function like "},{"type":"text","text":"isapprox","style":{"code":true}},{"type":"text","text":" that also works with unsigned types? I can of course implement such a thing myself, but I was wondering if there is already something.  The problem with "},{"type":"text","text":"isapprox","style":{"code":true}},{"type":"text","text":" and unsigned types is that\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\njulia> isapprox(UInt(7), UInt(8), atol=10.0)\nfalse"}]}]}],"thread_ts":"1617651731.019300","reply_count":11,"reply_users_count":4,"latest_reply":"1617652839.022700","reply_users":["UDB26738Q","U0179G7FG4F","UBEF50B7C","U0138UTB7A4"],"is_locked":false,"subscribed":false},{"client_msg_id":"ec9613af-35aa-4b9d-9980-0f790ef55212","type":"message","text":"`isapprox` is specifically for floating point numbers, to cater for rounding errors. What's the point with integers?","user":"UDB26738Q","ts":"1617651808.019400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fw4Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"isapprox","style":{"code":true}},{"type":"text","text":" is specifically for floating point numbers, to cater for rounding errors. What's the point with integers?"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C"},{"client_msg_id":"5da2b43f-63b6-4022-9ca8-2f4ddbf4b771","type":"message","text":"I think it would be reasonable to extend it to all numbers. It has a pretty clear meaning","user":"U0179G7FG4F","ts":"1617651845.019600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QSPe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it would be reasonable to extend it to all numbers. It has a pretty clear meaning"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C"},{"client_msg_id":"f8f0c19f-b7e7-4b21-8487-e41f36b98161","type":"message","text":"(I'm surprised it gives false though. If it has to give an answer rather than erroring, that doesn't look like a good one)","user":"UDB26738Q","ts":"1617651883.019800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bik","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I'm surprised it gives false though. If it has to give an answer rather than erroring, that doesn't look like a good one)"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C","reactions":[{"name":"this","users":["U0138UTB7A4"],"count":1}]},{"client_msg_id":"b99183e3-39d9-409d-acef-c535d1318f5d","type":"message","text":"In my case it is less about rounding error, more just that some numbers are close together for some tolerance - and so that my code is generic enough, I wanted to make it also work with unsigned integers","user":"UBEF50B7C","ts":"1617651929.020000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kDOdh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In my case it is less about rounding error, more just that some numbers are close together for some tolerance - and so that my code is generic enough, I wanted to make it also work with unsigned integers"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C"},{"client_msg_id":"8092a2bb-04bc-44ee-9e6f-e6ef4051fa58","type":"message","text":"Hmm, sorry to not answer directly to the question, but yes isapprox with UInt seems to not act as I would expect. I don't know why though:\n\n```julia&gt; UInt(7)\n0x0000000000000007\n\njulia&gt; UInt(7)-UInt(7)\n0x0000000000000000\n\njulia&gt; isapprox(UInt(7), UInt(7)-UInt(7), atol=1.0)\nfalse\n\njulia&gt; isapprox(UInt(7), UInt(7)-UInt(7), atol=10)\ntrue\n\njulia&gt; isapprox(UInt(7), UInt(7)+UInt(1), atol=10)\nfalse```","user":"U0138UTB7A4","ts":"1617652366.021200","team":"T68168MUP","edited":{"user":"U0138UTB7A4","ts":"1617652378.000000"},"blocks":[{"type":"rich_text","block_id":"UlzKu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, sorry to not answer directly to the question, but yes isapprox with UInt seems to not act as I would expect. I don't know why though:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> UInt(7)\n0x0000000000000007\n\njulia> UInt(7)-UInt(7)\n0x0000000000000000\n\njulia> isapprox(UInt(7), UInt(7)-UInt(7), atol=1.0)\nfalse\n\njulia> isapprox(UInt(7), UInt(7)-UInt(7), atol=10)\ntrue\n\njulia> isapprox(UInt(7), UInt(7)+UInt(1), atol=10)\nfalse"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C"},{"client_msg_id":"daeb7222-2fbc-4b42-8f46-1f4fea643cf5","type":"message","text":"I mean for my case it is clear why, it calculates `abs(UInt(7) - UInt(8))` which overflows","user":"UBEF50B7C","ts":"1617652463.021500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NNdL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean for my case it is clear why, it calculates "},{"type":"text","text":"abs(UInt(7) - UInt(8))","style":{"code":true}},{"type":"text","text":" which overflows"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C","reactions":[{"name":"thankyou","users":["U0138UTB7A4"],"count":1}]},{"client_msg_id":"7061f567-36f1-4e41-83b4-ef03a6f5a0df","type":"message","text":"What overflows? :thinking_face:","user":"UDB26738Q","ts":"1617652563.021800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J9jP4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What overflows? "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C"},{"client_msg_id":"960a8207-c324-4ea1-92f6-45dc8201b018","type":"message","text":"```\njulia&gt; UInt(7) - UInt(8)\n0xffffffffffffffff```","user":"UBEF50B7C","ts":"1617652589.022000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8mH","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\njulia> UInt(7) - UInt(8)\n0xffffffffffffffff"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C"},{"client_msg_id":"8e2f0af8-08f2-4018-8aa0-f28c27ff2dca","type":"message","text":"Oh, right, it's \"negative\"","user":"UDB26738Q","ts":"1617652626.022200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZTi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, right, it's \"negative\""}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C"},{"client_msg_id":"108bb37d-0d8e-4598-ba3f-bb3296afe24c","type":"message","text":"What about converting the numbers to float?","user":"UDB26738Q","ts":"1617652709.022400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xd=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What about converting the numbers to float?"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C"},{"client_msg_id":"2c6ead5d-1507-4207-8fe1-935095412534","type":"message","text":"I guess I will have to do that - or create an `absdiff` function, that selects the correct answer using multiple dispatch - I just thought I might ask first if there is already some other function in the ecosystem that I handles such cases","user":"UBEF50B7C","ts":"1617652839.022700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CFs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I will have to do that - or create an "},{"type":"text","text":"absdiff","style":{"code":true}},{"type":"text","text":" function, that selects the correct answer using multiple dispatch - I just thought I might ask first if there is already some other function in the ecosystem that I handles such cases"}]}]}],"thread_ts":"1617651731.019300","parent_user_id":"UBEF50B7C"}]