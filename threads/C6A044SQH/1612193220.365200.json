[{"client_msg_id":"3c6eb026-dc62-4a8b-8546-e3cce253f88a","type":"message","text":"I have a package repository I've just cloned. I'd like to do two things programmatically:\n1. Instantiate the environment, which is easy with `using Pkg; Pkg.activate(\"path/to/PackageRepo\")`\n2. Import that package into my Julia instance `using PackageName`\nThe problem is that I don't know `PackageName`. Environment activation is easy because that just requires the path to the appropriate TOML files, but I don't know of a similarly automatic way to import a package without knowing the name. Is there a programmatic way to retrieve the package name and then import it?","user":"URVSKQKFV","ts":"1612193220.365200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NO2QI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a package repository I've just cloned. I'd like to do two things programmatically:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Instantiate the environment, which is easy with "},{"type":"text","text":"using Pkg; Pkg.activate(\"path/to/PackageRepo\")","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Import that package into my Julia instance "},{"type":"text","text":"using PackageName","style":{"code":true}}]}],"style":"ordered","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"The problem is that I don't know "},{"type":"text","text":"PackageName","style":{"code":true}},{"type":"text","text":". Environment activation is easy because that just requires the path to the appropriate TOML files, but I don't know of a similarly automatic way to import a package without knowing the name. Is there a programmatic way to retrieve the package name and then import it?"}]}]}],"thread_ts":"1612193220.365200","reply_count":7,"reply_users_count":4,"latest_reply":"1612213772.373700","reply_users":["B01J9QZ4SP8","UBF9YRB6H","URVSKQKFV","U01G3TX4F9A"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612193222.365300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612193220.365200","parent_user_id":"URVSKQKFV"},{"client_msg_id":"e1151b09-13a4-4fa1-84d9-78782cdac570","type":"message","text":"This is a weird scenario to be in. Could you give more details?","user":"UBF9YRB6H","ts":"1612195150.366100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p/5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is a weird scenario to be in. Could you give more details?"}]}]}],"thread_ts":"1612193220.365200","parent_user_id":"URVSKQKFV"},{"client_msg_id":"678fbb08-a472-4fbb-95f5-93c9d7473a5b","type":"message","text":"Sure. I have a package, `Builder`, which implements a build pipeline for some internal projects.\n\nEach internal project is a Julia package which exports one type (unique to that project) for dispatch in `Builder` and potentially some functions to modify the build pipeline in `Builder` in a project-specific way.\n\nI'd like to write a script which, given a link to the repository where a project lives, clone that repository, instantiate that project environment, import the project package, and then run the build pipeline","user":"URVSKQKFV","ts":"1612195420.366300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yimI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure. I have a package, "},{"type":"text","text":"Builder","style":{"code":true}},{"type":"text","text":", which implements a build pipeline for some internal projects.\n\nEach internal project is a Julia package which exports one type (unique to that project) for dispatch in "},{"type":"text","text":"Builder","style":{"code":true}},{"type":"text","text":" and potentially some functions to modify the build pipeline in "},{"type":"text","text":"Builder","style":{"code":true}},{"type":"text","text":" in a project-specific way.\n\nI'd like to write a script which, given a link to the repository where a project lives, clone that repository, instantiate that project environment, import the project package, and then run the build pipeline"}]}]}],"thread_ts":"1612193220.365200","parent_user_id":"URVSKQKFV"},{"client_msg_id":"ff0b48c6-174d-4196-8d0d-133178a8797c","type":"message","text":"The solution that I have right now is that each package has a setup script which has the single line `using ProjectName`  to import the project. This works, but it seems inefficient to have an extra script just to import one library","user":"URVSKQKFV","ts":"1612195475.366500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2+CtN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The solution that I have right now is that each package has a setup script which has the single line "},{"type":"text","text":"using ProjectName","style":{"code":true}},{"type":"text","text":"  to import the project. This works, but it seems inefficient to have an extra script just to import one library"}]}]}],"thread_ts":"1612193220.365200","parent_user_id":"URVSKQKFV"},{"client_msg_id":"298a8ec6-0729-4420-b346-f0ff4d456d7b","type":"message","text":"No idea, sorry. Hopefully someone else has ideas for how to do this or can suggest an alternative workflow","user":"UBF9YRB6H","ts":"1612202491.371200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xrdMF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No idea, sorry. Hopefully someone else has ideas for how to do this or can suggest an alternative workflow"}]}]}],"thread_ts":"1612193220.365200","parent_user_id":"URVSKQKFV"},{"client_msg_id":"5e703e7e-496e-4a0d-886d-7bdf1a9bd730","type":"message","text":"I’m not sure I understand the problem completely, but can’t you just parse Project.toml, extract the package name string, convert it to a symbol `s` , and run `@eval using $s` ?","user":"U01G3TX4F9A","ts":"1612204787.372900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zSqW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m not sure I understand the problem completely, but can’t you just parse Project.toml, extract the package name string, convert it to a symbol "},{"type":"text","text":"s","style":{"code":true}},{"type":"text","text":" , and run "},{"type":"text","text":"@eval using $s","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1612193220.365200","parent_user_id":"URVSKQKFV"},{"client_msg_id":"c818b187-5952-42d8-97b3-4c0fd4b63a5e","type":"message","text":"^^ That may work, I'll give it a try","user":"URVSKQKFV","ts":"1612213772.373700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ofwU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"^^ That may work, I'll give it a try"}]}]}],"thread_ts":"1612193220.365200","parent_user_id":"URVSKQKFV"}]