[{"client_msg_id":"51868c30-e308-4718-9630-8c0fc0310cb9","type":"message","text":"Is there a default julia way to specify the intermediate total type of the sum/reduce function?\n\nFor example\n```sum(Int64[1, 2, 3]) |&gt; typeof  #Intermediate type is int64 and is slower to compute\nsum(Int32[1, 2, 3]) |&gt; typeof  #Intermediate type is int32 and is faster to compute\n\nsum(Int64[1, 2, 3], intermediateType=Float64) |&gt; typeof  #Output type is Float64 and is extremely slow to compute```\nPlease note, Im not talking about changing the output type of sum/reduce, but the intermediate total type (thats incremented in the forloop)","user":"U01FAHWCMFF","ts":"1609187198.212500","team":"T68168MUP","edited":{"user":"U01FAHWCMFF","ts":"1609187333.000000"},"blocks":[{"type":"rich_text","block_id":"JIu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a default julia way to specify the intermediate total type of the sum/reduce function?\n\nFor example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"sum(Int64[1, 2, 3]) |> typeof  #Intermediate type is int64 and is slower to compute\nsum(Int32[1, 2, 3]) |> typeof  #Intermediate type is int32 and is faster to compute\n\nsum(Int64[1, 2, 3], intermediateType=Float64) |> typeof  #Output type is Float64 and is extremely slow to compute"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Please note, Im not talking about changing the output type of sum/reduce, but the intermediate total type (thats incremented in the forloop)"}]}]}],"thread_ts":"1609187198.212500","reply_count":34,"reply_users_count":7,"latest_reply":"1609196055.231200","reply_users":["U0179G7FG4F","U01FAHWCMFF","U019K6Q9N15","UM30MT6RF","U01GVKTVA23","UH24GRBLL","UD0NS8PDF"],"subscribed":false},{"client_msg_id":"c752a87f-948f-4143-b232-dd740d29c028","type":"message","text":"I'm not sure if one exists. Why do you want to?","user":"U0179G7FG4F","ts":"1609187608.213000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8MTfh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure if one exists. Why do you want to?"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"d4518bce-77d2-4a84-b087-4e72604f3f28","type":"message","text":"you could always write your own sum function","user":"U0179G7FG4F","ts":"1609187649.213200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hApm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could always write your own sum function"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"54c4dec1-18e7-4f7d-8e7b-23d7c92af617","type":"message","text":"Im facing a really annoying problem where Im working with really big Bool/UInt8 Matricies\n\nDoing `reduce(+, X)` causes it to behave weird\nIf its bool the intermediate total is a Int64 (since it uses the `count` function instead, but this is slower than sum), if its UInt8, the intermediate type is UInt8 which exceeds the total of UInt8 (2^8) and crashes","user":"U01FAHWCMFF","ts":"1609187702.213400","team":"T68168MUP","edited":{"user":"U01FAHWCMFF","ts":"1609187779.000000"},"blocks":[{"type":"rich_text","block_id":"gvCa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Im facing a really annoying problem where Im working with really big Bool/UInt8 Matricies\n\nDoing "},{"type":"text","text":"reduce(+, X)","style":{"code":true}},{"type":"text","text":" causes it to behave weird\nIf its bool the intermediate total is a Int64 (since it uses the "},{"type":"text","text":"count","style":{"code":true}},{"type":"text","text":" function instead, but this is slower than sum), if its UInt8, the intermediate type is UInt8 which exceeds the total of UInt8 (2^8) and crashes"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"91ff9343-0780-41ea-9d2f-508587dfde76","type":"message","text":"Of course I can write my own which is what I’ve been doing, but it seems like this should be something implemented by default in Julia","user":"U01FAHWCMFF","ts":"1609187724.213600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CASFr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Of course I can write my own which is what I’ve been doing, but it seems like this should be something implemented by default in Julia"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"c9993405-0805-4e29-a78f-fcc479e25447","type":"message","text":"That is weird. I was about to suggest that the output type of the operand in reduce would probably do what you want. Too bad.","user":"U019K6Q9N15","ts":"1609187751.213800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A=g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is weird. I was about to suggest that the output type of the operand in reduce would probably do what you want. Too bad."}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"f8c3ddd8-9005-44d1-8c56-242485b19562","type":"message","text":"Having control over the intermediate types is beneficial for two reasons\n1. Avoid crashes when dealing with UInt8 arrays\n2. Allow for more optimized code as you can play around with the array type to increase the loop speed","user":"U01FAHWCMFF","ts":"1609187993.214200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r2i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Having control over the intermediate types is beneficial for two reasons\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Avoid crashes when dealing with UInt8 arrays"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Allow for more optimized code as you can play around with the array type to increase the loop speed"}]}],"style":"ordered","indent":0}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"7a7f1e47-6007-49a3-a151-a2fe7dd3b04a","type":"message","text":"You can always do something like `sum(Float64, x)`","user":"UM30MT6RF","ts":"1609188064.214400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/q0T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can always do something like "},{"type":"text","text":"sum(Float64, x)","style":{"code":true}}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"10c84102-e707-46d8-a6c8-8b1f0d4c6d2e","type":"message","text":"Thanks but thats not exactly what I want, that just applies the Float64 function to the array beforehand which is changing the input not the intermediate total. It is also slower","user":"U01FAHWCMFF","ts":"1609188182.214600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jJl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks but thats not exactly what I want, that just applies the Float64 function to the array beforehand which is changing the input not the intermediate total. It is also slower"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"de1391ff-67fb-4d03-b6d4-7e9c50cfd962","type":"message","text":"yeah, somehow `sum(Int32, b)` is even much slower for me than `sum(Int32.(b))`","user":"U01GVKTVA23","ts":"1609188294.214800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6E+v5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, somehow "},{"type":"text","text":"sum(Int32, b)","style":{"code":true}},{"type":"text","text":" is even much slower for me than "},{"type":"text","text":"sum(Int32.(b))","style":{"code":true}}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"577e9786-abe4-47c3-810c-864a2dba0f0b","type":"message","text":"Then I'm not really sure what you want. In order to sum two values as `Float64`, you need to convert both to `Float64` at some point","user":"UM30MT6RF","ts":"1609188313.215000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cIV/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Then I'm not really sure what you want. In order to sum two values as "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":", you need to convert both to "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" at some point"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"2df6f8a9-7a71-4213-8537-d388d64cace8","type":"message","text":"```function sum(X1::Vector{T}, X2::Vector{T})\ntotal::Float64 #### THIS LINE\nfor i in eachindex(X)\n    total += X1 + X2\nend\nreturn total\nend```\nThe intermediate total type plays a huge role in (1) speed, (2) stability of large arrays of small int sizes","user":"U01FAHWCMFF","ts":"1609188423.215200","team":"T68168MUP","edited":{"user":"U01FAHWCMFF","ts":"1609188476.000000"},"blocks":[{"type":"rich_text","block_id":"vN+iU","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function sum(X1::Vector{T}, X2::Vector{T})\ntotal::Float64 #### THIS LINE\nfor i in eachindex(X)\n    total += X1 + X2\nend\nreturn total\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The intermediate total type plays a huge role in (1) speed, (2) stability of large arrays of small int sizes"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"c7df74e5-eb4f-4dd1-b910-60d9a9a0ead5","type":"message","text":"<@U01GVKTVA23> Perhaps for very small `b`, but that shouldn't be the case in general","user":"UM30MT6RF","ts":"1609188425.215400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"337E","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01GVKTVA23"},{"type":"text","text":" Perhaps for very small "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":", but that shouldn't be the case in general"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"ffdde111-7240-4d50-8461-8c5dd80c5889","type":"message","text":"<@U01FAHWCMFF> That will still implicitly convert `X1 + X2` to a Float64 in each step","user":"UM30MT6RF","ts":"1609188594.215700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cjl","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01FAHWCMFF"},{"type":"text","text":" That will still implicitly convert "},{"type":"text","text":"X1 + X2 ","style":{"code":true}},{"type":"text","text":"to a Float64 in each step"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"440decfb-6b37-4fe3-a24e-13d49f274b1d","type":"message","text":"If thats the case, then why am I getting a x2 speedup by making the intermediate total type a Int32, when the input array is Int64","user":"U01FAHWCMFF","ts":"1609188662.215900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J+Wm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If thats the case, then why am I getting a x2 speedup by making the intermediate total type a Int32, when the input array is Int64"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"c8503898-3a0c-4747-ab49-fb6e9d721ab3","type":"message","text":"The conversion rate should actually make the speed worse","user":"U01FAHWCMFF","ts":"1609188690.216100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BzNyn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The conversion rate should actually make the speed worse"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"00b95261-b4a2-4df0-ab02-b25df313650b","type":"message","text":"<@UM30MT6RF>\n```b = rand(Bool, 20000, 20000);\nbcsum(x) = sum(Int32.(x))\n@btime bcsum(b)\n@btime sum(Int32, b)\n@btime sum(b)```\ngives me\n```423.727 ms (3 allocations: 1.49 GiB)\n  28.781 s (524287 allocations: 8.00 MiB)\n  87.724 ms (1 allocation: 16 bytes)```","user":"U01GVKTVA23","ts":"1609188724.216300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tw5","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UM30MT6RF"},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"b = rand(Bool, 20000, 20000);\nbcsum(x) = sum(Int32.(x))\n@btime bcsum(b)\n@btime sum(Int32, b)\n@btime sum(b)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"gives me\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"423.727 ms (3 allocations: 1.49 GiB)\n  28.781 s (524287 allocations: 8.00 MiB)\n  87.724 ms (1 allocation: 16 bytes)"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"e616c522-868d-4d79-9a74-4a30ed2ac6bc","type":"message","text":"Looks like there might be some type instabilities somewhere in the implementation of `sum`","user":"UM30MT6RF","ts":"1609188914.216500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cU4M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks like there might be some type instabilities somewhere in the implementation of "},{"type":"text","text":"sum","style":{"code":true}}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"9066575b-37ae-4fe5-9683-c66c57efa1e3","type":"message","text":"IIRC `Bool` promotes on summation to Int64","user":"UH24GRBLL","ts":"1609189205.216700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8/M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"IIRC "},{"type":"text","text":"Bool","style":{"code":true}},{"type":"text","text":" promotes on summation to Int64"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"d7e99ad1-9fc5-4c56-8c21-429ce20a2490","type":"message","text":"```julia&gt; true + true |&gt; typeof\nInt64```","user":"UH24GRBLL","ts":"1609189223.216900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"83TRO","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> true + true |> typeof\nInt64"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"2fea7ba3-b412-4390-a47a-64d7bf4f5e44","type":"message","text":"applying `Int32` beforehand aggregates into Int32 and probably SIMDs as well","user":"UH24GRBLL","ts":"1609189240.217100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZIjm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"applying "},{"type":"text","text":"Int32","style":{"code":true}},{"type":"text","text":" beforehand aggregates into Int32 and probably SIMDs as well"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"fa68d75c-eab7-475b-963e-a4e97cdf4da8","type":"message","text":"Oh.. could be the SIMD…","user":"U01FAHWCMFF","ts":"1609189253.217300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WyZs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh.. could be the SIMD…"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"022f6620-2270-4fc1-9a0b-9eabb9cfb13c","type":"message","text":"this comes at the cost of using 4x the memory though, since you have to materialize at some point","user":"UH24GRBLL","ts":"1609189328.217500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d6VXB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this comes at the cost of using 4x the memory though, since you have to materialize at some point"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"5ea5d4a8-410d-4976-8232-13a6b407605e","type":"message","text":"I guess my question is: what are you trying to do?","user":"UH24GRBLL","ts":"1609189390.217700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dVB9e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess my question is: what are you trying to do?"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"2cebba18-3dcc-4706-a962-62e6036a38f3","type":"message","text":"counting the number of true values in a boolean array..?","user":"UH24GRBLL","ts":"1609189403.217900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7ih","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"counting the number of true values in a boolean array..?"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"6eecafeb-afa4-42c8-9e2e-9aa6f69eb8a8","type":"message","text":"I think sum uses `Base.add_sum` which has different promotion behaviour to `+`","user":"UD0NS8PDF","ts":"1609189427.218100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sGg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think sum uses "},{"type":"text","text":"Base.add_sum","style":{"code":true}},{"type":"text","text":" which has different promotion behaviour to "},{"type":"text","text":"+","style":{"code":true}}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"point_up","users":["UM30MT6RF"],"count":1}]},{"client_msg_id":"0bdaa19d-1313-4abb-9b74-5d916dd54284","type":"message","text":"I have 2 really big arrays of bools/UInt8s (n&gt;1e6)","user":"U01FAHWCMFF","ts":"1609189428.218300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NvaN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have 2 really big arrays of bools/UInt8s (n>1e6)"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"09796e83-a0e7-409b-a801-fc53c793335c","type":"message","text":"Im trying to do the sum, however when i do the sum of UInt8s it exceeds the UInt8 limit","user":"U01FAHWCMFF","ts":"1609189456.218600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Irzrh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Im trying to do the sum, however when i do the sum of UInt8s it exceeds the UInt8 limit"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"5f85503e-7932-416f-adf3-d2a26e05ade6","type":"message","text":"try `reduce(+, arr, init=Int32(0))`","user":"UH24GRBLL","ts":"1609189484.218800","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609189501.000000"},"blocks":[{"type":"rich_text","block_id":"3LBj9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"try "},{"type":"text","text":"reduce(+, arr, init=Int32(0))","style":{"code":true}}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"ok_hand","users":["U01GVKTVA23","U01FAHWCMFF"],"count":2}]},{"client_msg_id":"6f9e81bc-1770-4839-b320-cb39300e0af4","type":"message","text":"```julia&gt; X = Array{Int8}(rand(0:1, (1000, 1000)));\n\njulia&gt; sum(X)\n500817\n\njulia&gt; reduce(+, X)\n81```","user":"U01FAHWCMFF","ts":"1609189512.219100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cE+7","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> X = Array{Int8}(rand(0:1, (1000, 1000)));\n\njulia> sum(X)\n500817\n\njulia> reduce(+, X)\n81"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"2d91b418-11f9-4024-b57e-120c6a98d21b","type":"message","text":"this feels like a microoptimization though","user":"UH24GRBLL","ts":"1609189670.219400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ist","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this feels like a microoptimization though"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"bdd4ba72-313f-46e3-9fc3-9e5f9e989871","type":"message","text":"yes, I go from ~80µs to ~40µs, but that shouldn't matter in the grand scheme of things","user":"UH24GRBLL","ts":"1609189699.219600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MnF5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, I go from ~80µs to ~40µs, but that shouldn't matter in the grand scheme of things"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"70d341ba-2d03-4b86-9955-291f83ac4c24","type":"message","text":"Ah, looks like `sum(::DataType, x)` fails to specialize:\n```julia&gt; @btime sum(Int32, rand(Int8, 10^5))\n  39.284 ms (62024 allocations: 1.04 MiB)\n-69841\n\njulia&gt; @btime sum(x-&gt;Int32(x), rand(Int8, 10^5))\n  120.989 μs (2 allocations: 97.77 KiB)\n-56676```","user":"UM30MT6RF","ts":"1609192571.224000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FB483","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, looks like "},{"type":"text","text":"sum(::DataType, x)","style":{"code":true}},{"type":"text","text":" fails to specialize:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime sum(Int32, rand(Int8, 10^5))\n  39.284 ms (62024 allocations: 1.04 MiB)\n-69841\n\njulia> @btime sum(x->Int32(x), rand(Int8, 10^5))\n  120.989 μs (2 allocations: 97.77 KiB)\n-56676"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"},{"client_msg_id":"8a1f5d96-00ac-44ea-a230-327a1ebc4d0d","type":"message","text":"Ah, nice! This is fixed on nightly","user":"UM30MT6RF","ts":"1609192926.224200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TTpjU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, nice! This is fixed on nightly"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF","reactions":[{"name":"tada","users":["U01GVKTVA23"],"count":1}]},{"client_msg_id":"f076cd50-a792-4380-ad53-98602f5ffe12","type":"message","text":"Found another missing specialization though: <https://github.com/JuliaLang/julia/pull/39019>","user":"UM30MT6RF","ts":"1609196055.231200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CcG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Found another missing specialization though: "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/39019"}]}]}],"thread_ts":"1609187198.212500","parent_user_id":"U01FAHWCMFF"}]