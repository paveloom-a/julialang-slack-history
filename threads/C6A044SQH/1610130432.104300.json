[{"client_msg_id":"0a6d344b-77a6-49f5-af28-f0d7ce3ba634","type":"message","text":"is there a function like `findfirst`  that returns the first matching element instead of returning the index for the element?","user":"U01JW4G6L1E","ts":"1610130432.104300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2D4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a function like "},{"type":"text","text":"findfirst","style":{"code":true}},{"type":"text","text":"  that returns the first matching element instead of returning the index for the element?"}]}]}],"thread_ts":"1610130432.104300","reply_count":7,"reply_users_count":3,"latest_reply":"1610132372.111200","reply_users":["USU9FRPEU","U680THK2S","U01JW4G6L1E"],"subscribed":false},{"client_msg_id":"5900484d-2c16-45c7-8f15-9e2ecaefc8cf","type":"message","text":"If you know what it will match, don't you already know the value of the element?","user":"USU9FRPEU","ts":"1610131016.105400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n17lv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you know what it will match, don't you already know the value of the element?"}]}]}],"thread_ts":"1610130432.104300","parent_user_id":"U01JW4G6L1E"},{"client_msg_id":"35d2b129-d845-4a3d-9215-d2189cd519b2","type":"message","text":"What are you inputs to `findfirst`?","user":"USU9FRPEU","ts":"1610131039.105700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YuX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What are you inputs to "},{"type":"text","text":"findfirst","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1610130432.104300","parent_user_id":"U01JW4G6L1E"},{"client_msg_id":"ebf1f8e9-2349-4f04-8d30-ef7229b70eac","type":"message","text":"There is an open issue for this. No such function currently exists, but it could be implemented as `first(Iterators.filter(predicate, x))`, mirroring `findfirst(predicate, x)`.","user":"U680THK2S","ts":"1610131676.108400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lu6A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is an open issue for this. No such function currently exists, but it could be implemented as "},{"type":"text","text":"first(Iterators.filter(predicate, x))","style":{"code":true}},{"type":"text","text":", mirroring "},{"type":"text","text":"findfirst(predicate, x)","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1610130432.104300","parent_user_id":"U01JW4G6L1E"},{"client_msg_id":"d9f9ca2c-8e81-4802-8c83-b140b7f36b5c","type":"message","text":"it's trivial to use to returned index to get the element, but it seems like an extra step e.g. ruby has separate `find`  and `find_index`  methods.\nUsing `first(filter(...))`  would work, but filter doesn't short circuit as far as I know","user":"U01JW4G6L1E","ts":"1610132054.110000","team":"T68168MUP","edited":{"user":"U01JW4G6L1E","ts":"1610132067.000000"},"blocks":[{"type":"rich_text","block_id":"+iv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's trivial to use to returned index to get the element, but it seems like an extra step e.g. ruby has separate "},{"type":"text","text":"find","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"find_index","style":{"code":true}},{"type":"text","text":"  methods.\nUsing "},{"type":"text","text":"first(filter(...))","style":{"code":true}},{"type":"text","text":"  would work, but filter doesn't short circuit as far as I know"}]}]}],"thread_ts":"1610130432.104300","parent_user_id":"U01JW4G6L1E"},{"client_msg_id":"e51732f5-b3d4-4172-a408-575df3c75aab","type":"message","text":"Using `Iterators.filter` helps in that it doesn't materialize the full filtered collection, so it should be about as efficient as `findfirst`, as it's doing the same thing: iterating over the input until the first item matching the predicate is found.","user":"U680THK2S","ts":"1610132158.110300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QFKyr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Using "},{"type":"text","text":"Iterators.filter","style":{"code":true}},{"type":"text","text":" helps in that it doesn't materialize the full filtered collection, so it should be about as efficient as "},{"type":"text","text":"findfirst","style":{"code":true}},{"type":"text","text":", as it's doing the same thing: iterating over the input until the first item matching the predicate is found."}]}]}],"thread_ts":"1610130432.104300","parent_user_id":"U01JW4G6L1E"},{"client_msg_id":"691270c8-c128-4a0a-9293-1b0c57d7c2ca","type":"message","text":"&gt; If you know what it will match, don't you already know the value of the element?\n<@USU9FRPEU> you can pass a function to `firstfirst`  so you don't necessarily know the value e.g.\n```collection = 1:10\nfindfirst(x -&gt; isodd(x) &amp;&amp; x &gt; 5, collection)\n7```\nso you just want the first element that would return true from the function. In this example the index is the same as the element, so it's not a very good example :smile:","user":"U01JW4G6L1E","ts":"1610132253.110500","team":"T68168MUP","edited":{"user":"U01JW4G6L1E","ts":"1610132311.000000"},"blocks":[{"type":"rich_text","block_id":"cJB/E","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If you know what it will match, don't you already know the value of the element?"}]},{"type":"rich_text_section","elements":[{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":" you can pass a function to "},{"type":"text","text":"firstfirst","style":{"code":true}},{"type":"text","text":"  so you don't necessarily know the value e.g.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"collection = 1:10\nfindfirst(x -> isodd(x) && x > 5, collection)\n7"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so you just want the first element that would return true from the function. In this example the index is the same as the element, so it's not a very good example "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1610130432.104300","parent_user_id":"U01JW4G6L1E"},{"client_msg_id":"d1124439-fa3a-4f0d-9cbc-0920aae53e32","type":"message","text":"thanks <@U680THK2S> :+1: good to know","user":"U01JW4G6L1E","ts":"1610132372.111200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fyh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks "},{"type":"user","user_id":"U680THK2S"},{"type":"text","text":" "},{"type":"emoji","name":"+1"},{"type":"text","text":" good to know"}]}]}],"thread_ts":"1610130432.104300","parent_user_id":"U01JW4G6L1E","reactions":[{"name":"+1","users":["U680THK2S"],"count":1}]}]