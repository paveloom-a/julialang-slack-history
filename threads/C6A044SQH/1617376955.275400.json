[{"client_msg_id":"f11c1073-da5c-4e05-8028-5088edc87e30","type":"message","text":"Is this a known issue?\n```julia&gt; 0 .* (1:3) .+ (1:4)'\nERROR: ArgumentError: step cannot be zero```\nIt seems to be evaluating `0 .* (1:3)` too early, when it ought to be fused into the larger broadcast.","user":"UD0NS8PDF","ts":"1617376955.275400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"25Sd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this a known issue?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> 0 .* (1:3) .+ (1:4)'\nERROR: ArgumentError: step cannot be zero"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"It seems to be evaluating "},{"type":"text","text":"0 .* (1:3)","style":{"code":true}},{"type":"text","text":" too early, when it ought to be fused into the larger broadcast."}]}]}],"thread_ts":"1617376955.275400","reply_count":16,"reply_users_count":3,"latest_reply":"1617380308.283000","reply_users":["UH24GRBLL","UD0NS8PDF","U01FKQQ7J0J"],"is_locked":false,"subscribed":false},{"client_msg_id":"87b6fd04-c36e-450c-a8cd-8e7533c11306","type":"message","text":"```julia&gt; Meta.@lower 0 .* (1:3) .+ (1:4)'  \n:($(Expr(:thunk, CodeInfo(               \n    @ none within `top-level scope'      \n1 ─ %1 = 1:3                             \n│   %2 = Base.broadcasted(*, 0, %1)      \n│   %3 = 1:4                             \n│   %4 = var\"'\"(%3)                      \n│   %5 = Base.broadcasted(+, %2, %4)     \n│   %6 = Base.materialize(%5)            \n└──      return %6                       \n))))                                     \n                                         \njulia&gt; Base.broadcasted(*, 0, 1:3)       \nERROR: ArgumentError: step cannot be zero\nStacktrace:                              ```","user":"UH24GRBLL","ts":"1617377332.275500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d6T","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Meta.@lower 0 .* (1:3) .+ (1:4)'  \n:($(Expr(:thunk, CodeInfo(               \n    @ none within `top-level scope'      \n1 ─ %1 = 1:3                             \n│   %2 = Base.broadcasted(*, 0, %1)      \n│   %3 = 1:4                             \n│   %4 = var\"'\"(%3)                      \n│   %5 = Base.broadcasted(+, %2, %4)     \n│   %6 = Base.materialize(%5)            \n└──      return %6                       \n))))                                     \n                                         \njulia> Base.broadcasted(*, 0, 1:3)       \nERROR: ArgumentError: step cannot be zero\nStacktrace:                              "}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"6d3dd96a-3620-41c0-a671-5a11230170f4","type":"message","text":"it doesn't even get to the evaluation part","user":"UH24GRBLL","ts":"1617377340.275700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kje","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it doesn't even get to the evaluation part"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"1ae9d7b4-19fc-40eb-8b8b-19cb7c52e009","type":"message","text":"Right, or I’d say, does it for this part alone, rather than waiting for the whole:\n```julia&gt; Base.broadcasted(*, 10, rand(3)) # doesn't materialise\nBase.Broadcast.Broadcasted(*, (10, [0.8400087764221176, 0.7047512933000646, 0.07486970847069574]))\n\njulia&gt; Base.broadcasted(*, 10, 1:3) # does\n10:10:30```","user":"UD0NS8PDF","ts":"1617377622.278400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f4kQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, or I’d say, does it for this part alone, rather than waiting for the whole:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Base.broadcasted(*, 10, rand(3)) # doesn't materialise\nBase.Broadcast.Broadcasted(*, (10, [0.8400087764221176, 0.7047512933000646, 0.07486970847069574]))\n\njulia> Base.broadcasted(*, 10, 1:3) # does\n10:10:30"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"537C6A8F-9A39-451E-B5D1-4A2343630261","type":"message","text":"Is this just an order of operations problem?","user":"U01FKQQ7J0J","ts":"1617377631.278700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DSJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this just an order of operations problem?"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"aeac037c-c2b2-4074-be72-a389525cb5bd","type":"message","text":"I _think_ what's happening is that ints are being expanded to an empty range","user":"UH24GRBLL","ts":"1617377773.279700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0MqN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I "},{"type":"text","text":"think","style":{"italic":true}},{"type":"text","text":" what's happening is that ints are being expanded to an empty range"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"dc9946ab-8a7b-483e-80f1-d6d838315fd9","type":"message","text":"which is then combined, to save multiplication on each run of the broadcast loop (which makes sense to me)","user":"UH24GRBLL","ts":"1617377799.280100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pCf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which is then combined, to save multiplication on each run of the broadcast loop (which makes sense to me)"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"25c6b815-594e-4db4-94cf-6f280bc5094f","type":"message","text":"From `@less Broadcast.broadcasted(Base.Broadcast.DefaultArrayStyle{1}(), *, 10, 1:3)` what it’s doing is `range(x*first(r), step=x*step(r), length=length(r))`. But my complaint is that this is eager, normally `broadcasted` is lazy, but because ranges are lazy, they take this shortcut of making a new range immediately. And in this case it wants to make an illegal range, length 3 but step 0.","user":"UD0NS8PDF","ts":"1617378152.280700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jjF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From "},{"type":"text","text":"@less Broadcast.broadcasted(Base.Broadcast.DefaultArrayStyle{1}(), *, 10, 1:3)","style":{"code":true}},{"type":"text","text":" what it’s doing is "},{"type":"text","text":"range(x*first(r), step=x*step(r), length=length(r))","style":{"code":true}},{"type":"text","text":". But my complaint is that this is eager, normally "},{"type":"text","text":"broadcasted","style":{"code":true}},{"type":"text","text":" is lazy, but because ranges are lazy, they take this shortcut of making a new range immediately. And in this case it wants to make an illegal range, length 3 but step 0."}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"a42f5a77-e3bd-44ca-bb0f-a64ef46aa5ac","type":"message","text":"Actually, some ranges do allow zero step, `range(3, 3, length=3)` is fine","user":"UD0NS8PDF","ts":"1617378259.280900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wh04","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually, some ranges do allow zero step, "},{"type":"text","text":"range(3, 3, length=3)","style":{"code":true}},{"type":"text","text":" is fine"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"09b2b8cd-447d-4a9d-a5af-058e22d63b24","type":"message","text":"Just put parentheses around the addition:\n```julia&gt; Meta.@lower 0 .* ((1:3) .+ (1:4)')\n:($(Expr(:thunk, CodeInfo(\n    @ none within `top-level scope'\n1 ─ %1 = 1:3\n│   %2 = 1:4\n│   %3 = var\"'\"(%2)\n│   %4 = Base.broadcasted(+, %1, %3)\n│   %5 = Base.broadcasted(*, 0, %4)\n│   %6 = Base.materialize(%5)\n└──      return %6\n))))```","user":"U01FKQQ7J0J","ts":"1617378266.281100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WRqaF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just put parentheses around the addition:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Meta.@lower 0 .* ((1:3) .+ (1:4)')\n:($(Expr(:thunk, CodeInfo(\n    @ none within `top-level scope'\n1 ─ %1 = 1:3\n│   %2 = 1:4\n│   %3 = var\"'\"(%2)\n│   %4 = Base.broadcasted(+, %1, %3)\n│   %5 = Base.broadcasted(*, 0, %4)\n│   %6 = Base.materialize(%5)\n└──      return %6\n))))"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"4ca29322-f953-4b66-8a47-e8cd406473f0","type":"message","text":"that requires the addition in the loop to happen first as well though","user":"UH24GRBLL","ts":"1617378305.281300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mbi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that requires the addition in the loop to happen first as well though"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"43aded10-979f-4aab-89c1-995722fc4777","type":"message","text":"which may not be what you want","user":"UH24GRBLL","ts":"1617378312.281500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=sL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which may not be what you want"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"2d89df04-c386-43e1-abef-bd9fcf2f4eae","type":"message","text":"But that’s a different result:\n```julia&gt; 0.001 .* ((1:3) .+ (1:4)')\n3×4 Matrix{Float64}:\n 0.002  0.003  0.004  0.005\n 0.003  0.004  0.005  0.006\n 0.004  0.005  0.006  0.007\n\njulia&gt; 0.001 .* (1:3) .+ (1:4)'\n3×4 Matrix{Float64}:\n 1.001  2.001  3.001  4.001\n 1.002  2.002  3.002  4.002\n 1.003  2.003  3.003  4.003```","user":"UD0NS8PDF","ts":"1617378320.281800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9OY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But that’s a different result:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> 0.001 .* ((1:3) .+ (1:4)')\n3×4 Matrix{Float64}:\n 0.002  0.003  0.004  0.005\n 0.003  0.004  0.005  0.006\n 0.004  0.005  0.006  0.007\n\njulia> 0.001 .* (1:3) .+ (1:4)'\n3×4 Matrix{Float64}:\n 1.001  2.001  3.001  4.001\n 1.002  2.002  3.002  4.002\n 1.003  2.003  3.003  4.003"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF","reactions":[{"name":"point_up","users":["UH24GRBLL"],"count":1}]},{"client_msg_id":"fbc789f7-c3f5-465a-b996-af17927a6146","type":"message","text":"With `StepRangeLen` it behaves better:\n```julia&gt; 0 .* (1:1.0:3)\n0.0:0.0:0.0\n\njulia&gt; 0 .* (1:1.0:3) .+ (1:4)'\n3×4 Matrix{Float64}:\n 1.0  2.0  3.0  4.0\n 1.0  2.0  3.0  4.0\n 1.0  2.0  3.0  4.0```","user":"UD0NS8PDF","ts":"1617378541.282100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u+r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With "},{"type":"text","text":"StepRangeLen","style":{"code":true}},{"type":"text","text":" it behaves better:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> 0 .* (1:1.0:3)\n0.0:0.0:0.0\n\njulia> 0 .* (1:1.0:3) .+ (1:4)'\n3×4 Matrix{Float64}:\n 1.0  2.0  3.0  4.0\n 1.0  2.0  3.0  4.0\n 1.0  2.0  3.0  4.0"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"a974ea23-24ab-4c44-b412-b54b96827b0a","type":"message","text":"if it's only a step of 0 that's problematic, this should be easily patched","user":"UH24GRBLL","ts":"1617378606.282300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=XX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if it's only a step of 0 that's problematic, this should be easily patched"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"b3f3d391-584f-4069-baf9-14928483e7fa","type":"message","text":"For type-stability, I guess this would involve making `λ .* α:ω` always return a StepRangeLen","user":"UD0NS8PDF","ts":"1617379089.282500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vmvpz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For type-stability, I guess this would involve making "},{"type":"text","text":"λ .* α:ω","style":{"code":true}},{"type":"text","text":" always return a StepRangeLen"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"},{"client_msg_id":"D54D8642-ED5F-4265-BB4B-A712A514A194","type":"message","text":"ok, I made an issue now","user":"UD0NS8PDF","ts":"1617380308.283000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k2QhX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, I made an issue now"}]}]}],"thread_ts":"1617376955.275400","parent_user_id":"UD0NS8PDF"}]