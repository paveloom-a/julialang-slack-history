[{"client_msg_id":"e973a0fd-7c11-42ad-a6ac-93cad0d52b34","type":"message","text":"I made a recursive function to extract a value from a JSON given the key for that value:\n```function extract(json, key)\n    req = []\n\n    for (k, v) in pairs(json)\n        if k == key\n            println(\"FOUND $key == $k\")\n            println(\"value: $v\")\n            println(\"type: $(typeof(v))\")\n            push!(req, v)\n        elseif typeof(v) &lt;: AbstractDict\n            extract(v, key)\n        end\n    end\n    req\nend```\nI tested this function with the following `Dict`: `Dict(:a =&gt; Dict(:b =&gt; \"wrong\"), :Src =&gt; \"GOLD\")`\nWith the expected result: It returns an `Array{Any, 1}` with the value `\"GOLD\"`\n\nHowever, when I try it with the real use case in mind it doesn’t return anything. The real use case is that I get two JSON payloads from an HTTP request and read them using `JSON3.read()` . I then put those two JSONs in a dict. The resulting type of the Dict is: `Dict{Symbol,JSON3.Object{Array{UInt8,1},Array{UInt64,1}}}` .\nThe print statements run when it finds the key but for some reason it doesn’t push the value (`v`) to the `req` List and so it returns nothing. The same thing happens if I substitute the `push!()` with a `return v` instead. Nothing is returned.\n\nAny ideas?","user":"U014URPKZNU","ts":"1614625897.144400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+klm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I made a recursive function to extract a value from a JSON given the key for that value:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function extract(json, key)\n    req = []\n\n    for (k, v) in pairs(json)\n        if k == key\n            println(\"FOUND $key == $k\")\n            println(\"value: $v\")\n            println(\"type: $(typeof(v))\")\n            push!(req, v)\n        elseif typeof(v) <: AbstractDict\n            extract(v, key)\n        end\n    end\n    req\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I tested this function with the following "},{"type":"text","text":"Dict","style":{"code":true}},{"type":"text","text":": "},{"type":"text","text":"Dict(:a => Dict(:b => \"wrong\"), :Src => \"GOLD\")","style":{"code":true}},{"type":"text","text":"\nWith the expected result: It returns an "},{"type":"text","text":"Array{Any, 1}","style":{"code":true}},{"type":"text","text":" with the value "},{"type":"text","text":"\"GOLD\"","style":{"code":true}},{"type":"text","text":"\n\nHowever, when I try it with the real use case in mind it doesn’t return anything. The real use case is that I get two JSON payloads from an HTTP request and read them using "},{"type":"text","text":"JSON3.read()","style":{"code":true}},{"type":"text","text":" . I then put those two JSONs in a dict. The resulting type of the Dict is: "},{"type":"text","text":"Dict{Symbol,JSON3.Object{Array{UInt8,1},Array{UInt64,1}}}","style":{"code":true}},{"type":"text","text":" .\nThe print statements run when it finds the key but for some reason it doesn’t push the value ("},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":") to the "},{"type":"text","text":"req","style":{"code":true}},{"type":"text","text":" List and so it returns nothing. The same thing happens if I substitute the "},{"type":"text","text":"push!()","style":{"code":true}},{"type":"text","text":" with a "},{"type":"text","text":"return v","style":{"code":true}},{"type":"text","text":" instead. Nothing is returned.\n\nAny ideas?"}]}]}],"thread_ts":"1614625897.144400","reply_count":1,"reply_users_count":1,"latest_reply":"1614625899.144500","reply_users":["B01J9QZ4SP8"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614625899.144500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614625897.144400","parent_user_id":"U014URPKZNU"}]