[{"client_msg_id":"5fe8b699-ca15-49f3-9bed-80ecf7d20c47","type":"message","text":"The question from <https://discourse.julialang.org/t/parse-vector-from-string/10728>:\n```I can parse(Int, „123\") but I cannot find a simple way to parse(Vector{Int}, „[1, 2, 3]\"). Is there a \"canned\" solution?```\nThe solution:\n```Solved by mbauman in post #6 \nAs a simple solution in the past I've used: @assert str[1] == '[' &amp;&amp; str[end] == ']' CSV.read(IOBuffer(str[2:prevind(str, end)]), header=false, transpose=true)```\nDoes not seem to work in Julia 1.5, with the error:\n```ERROR: ArgumentError: provide a valid sink argument, like `using DataFrames; CSV.read(source, DataFrame)````\nIs there a work around for this?","user":"UFH4C3LBT","ts":"1616372523.328200","team":"T68168MUP","edited":{"user":"UFH4C3LBT","ts":"1616372576.000000"},"attachments":[{"service_name":"JuliaLang","title":"Parse vector from string","title_link":"https://discourse.julialang.org/t/parse-vector-from-string/10728","text":"I can parse(Int, „123“) but I cannot find a simple way to parse(Vector{Int}, „[1, 2, 3]”). Is there a “canned” solution?","fallback":"JuliaLang: Parse vector from string","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"8 :heart:","short":true}],"ts":1525536843,"from_url":"https://discourse.julialang.org/t/parse-vector-from-string/10728","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/parse-vector-from-string/10728"}],"blocks":[{"type":"rich_text","block_id":"go=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The question from "},{"type":"link","url":"https://discourse.julialang.org/t/parse-vector-from-string/10728"},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"I can parse(Int, „123\") but I cannot find a simple way to parse(Vector{Int}, „[1, 2, 3]\"). Is there a \"canned\" solution?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The solution:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Solved by mbauman in post #6 \nAs a simple solution in the past I've used: @assert str[1] == '[' && str[end] == ']' CSV.read(IOBuffer(str[2:prevind(str, end)]), header=false, transpose=true)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Does not seem to work in Julia 1.5, with the error:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: ArgumentError: provide a valid sink argument, like `using DataFrames; CSV.read(source, DataFrame)`"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a work around for this?"}]}]}],"thread_ts":"1616372523.328200","reply_count":1,"reply_users_count":1,"latest_reply":"1616373068.330300","reply_users":["U017LQ3A59U"],"is_locked":false,"subscribed":false},{"client_msg_id":"b9404045-a832-4bdd-8d60-c3982310eaa1","type":"message","text":"`JSON` can do it:\n```julia&gt; JSON.parse(\"[1, 2, 3]\")\n3-element Array{Any,1}:\n 1\n 2\n 3```","user":"U017LQ3A59U","ts":"1616373068.330300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fy6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"JSON","style":{"code":true}},{"type":"text","text":" can do it:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> JSON.parse(\"[1, 2, 3]\")\n3-element Array{Any,1}:\n 1\n 2\n 3"}]}]}],"thread_ts":"1616372523.328200","parent_user_id":"UFH4C3LBT","reactions":[{"name":"+1","users":["UFH4C3LBT"],"count":1}]}]