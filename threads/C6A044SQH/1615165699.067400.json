[{"client_msg_id":"c3628fe6-5df2-40de-ba98-086dbe0dd7d7","type":"message","text":"Hi. Why does this function not work when different UInts are passed?\n```isunsigned(x::T, y::T) where {T &lt;: Unsigned} = (x isa Unsigned) &amp;&amp; (y isa Unsigned)\nisunsigned(UInt8(8), UInt8(10)) # works - evaluates to true\nisunsigned(UInt8(8), UInt16(10)) # method error\nERROR: MethodError: no method matching isunsigned(::UInt8, ::UInt16)\nClosest candidates are:\n  isunsigned(::T, ::T) where T&lt;:Unsigned at REPL[69]:1```\nBoth UInt8 and UInt16 are subtypes of Unsigned. Why does the function not work when different Unsigned values are passed?","user":"U01PP5BA1C4","ts":"1615165699.067400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D+2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi. Why does this function not work when different UInts are passed?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"isunsigned(x::T, y::T) where {T <: Unsigned} = (x isa Unsigned) && (y isa Unsigned)\nisunsigned(UInt8(8), UInt8(10)) # works - evaluates to true\nisunsigned(UInt8(8), UInt16(10)) # method error\nERROR: MethodError: no method matching isunsigned(::UInt8, ::UInt16)\nClosest candidates are:\n  isunsigned(::T, ::T) where T<:Unsigned at REPL[69]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Both UInt8 and UInt16 are subtypes of Unsigned. Why does the function not work when different Unsigned values are passed?"}]}]}],"thread_ts":"1615165699.067400","reply_count":3,"reply_users_count":3,"latest_reply":"1615166897.073200","reply_users":["B01J9QZ4SP8","UM30MT6RF","U01FKQQ7J0J"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615165701.067500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615165699.067400","parent_user_id":"U01PP5BA1C4"},{"client_msg_id":"d6ccbb56-f02e-462c-92cb-0b2bdf1baf8d","type":"message","text":"This is the diagonal rule see <https://docs.julialang.org/en/v1/devdocs/types/#Diagonal-types|https://docs.julialang.org/en/v1/devdocs/types/#Diagonal-types>","user":"UM30MT6RF","ts":"1615166798.071000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XNHw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is the diagonal rule see "},{"type":"link","url":"https://docs.julialang.org/en/v1/devdocs/types/#Diagonal-types","text":"https://docs.julialang.org/en/v1/devdocs/types/#Diagonal-types"}]}]}],"thread_ts":"1615165699.067400","parent_user_id":"U01PP5BA1C4"},{"client_msg_id":"20D89879-2688-4898-BD7A-D63890FF5D93","type":"message","text":"The way it’s declared, both parameters have to be the same type and that type must be an Unsigned or descendant thereof. If you want to support different unsigned types for the parameters then use separate parametric types for them. (Of course in this example, your function will always return true since it can only be called with unsigned types anyway :sweat_smile:)","user":"U01FKQQ7J0J","ts":"1615166897.073200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VYoWO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The way it’s declared, both parameters have to be the same type and that type must be an Unsigned or descendant thereof. If you want to support different unsigned types for the parameters then use separate parametric types for them. (Of course in this example, your function will always return true since it can only be called with unsigned types anyway "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":")"}]}]}],"thread_ts":"1615165699.067400","parent_user_id":"U01PP5BA1C4"}]