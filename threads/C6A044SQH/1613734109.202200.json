[{"client_msg_id":"d785f422-0706-436a-a919-18585fa8a742","type":"message","text":"When testing Julia functions I sometimes want to check that none of the arguments are unintentionally mutated. It's a bit labour intensive at the moment: I write code to backup the arguments via `copy`, call the function, compare arguments with their backups.\n\nIs there a macro that can do that for me? Something like `@checkargsnotmutated myfunction(arg1, arg2, arg3)`.","user":"UQNDMRP35","ts":"1613734109.202200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XS6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When testing Julia functions I sometimes want to check that none of the arguments are unintentionally mutated. It's a bit labour intensive at the moment: I write code to backup the arguments via "},{"type":"text","text":"copy","style":{"code":true}},{"type":"text","text":", call the function, compare arguments with their backups.\n\nIs there a macro that can do that for me? Something like "},{"type":"text","text":"@checkargsnotmutated myfunction(arg1, arg2, arg3)","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1613734109.202200","reply_count":11,"reply_users_count":5,"latest_reply":"1613755283.229500","reply_users":["B01J9QZ4SP8","U017LQ3A59U","UQNDMRP35","UCZ7VBGUD","UGR3910CQ"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613734111.202300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35","reactions":[{"name":"bridge","users":["UQNDMRP35"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/55611| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1613734209.203400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"type":"message","subtype":"bot_message","text":"Hey <@UQNDMRP35>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1613745019.215800","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"client_msg_id":"c1afc3bd-ad42-4670-8ceb-1087b9134639","type":"message","text":"You don't actually need a macro a function should be sufficient. Something like\n```function test_no_mutation(func, args...)\n    backups = copy.(args)\n    func(args...)\n    for (arg, backup) in zip(args, backups)\n        @test arg == backup\n    end\nend```\nshould do the trick.","user":"U017LQ3A59U","ts":"1613746840.218300","team":"T68168MUP","edited":{"user":"U017LQ3A59U","ts":"1613746881.000000"},"blocks":[{"type":"rich_text","block_id":"+zr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You don't actually need a macro a function should be sufficient. Something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function test_no_mutation(func, args...)\n    backups = copy.(args)\n    func(args...)\n    for (arg, backup) in zip(args, backups)\n        @test arg == backup\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"should do the trick."}]}]}],"thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"client_msg_id":"dcea17f9-7c0c-4114-90df-f966cf6f1aef","type":"message","text":"Thanks! I'll try something along those lines - much less clumsy than what I'm doing right now. Strangely, `==` won't quite work as a comparison operator in my case (arrays which may have embedded `NaN`s) but I've already rolled my own comparison operator to cope.","user":"UQNDMRP35","ts":"1613747813.218600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=qX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! I'll try something along those lines - much less clumsy than what I'm doing right now. Strangely, "},{"type":"text","text":"==","style":{"code":true}},{"type":"text","text":" won't quite work as a comparison operator in my case (arrays which may have embedded "},{"type":"text","text":"NaN","style":{"code":true}},{"type":"text","text":"s) but I've already rolled my own comparison operator to cope."}]}]}],"thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"client_msg_id":"16c17a3b-b654-4783-8ec7-a65022ce1959","type":"message","text":"<@UGR3910CQ> <@UCZ7VBGUD> I copied <@U017LQ3A59U>'s helpful answer over to Discourse. All good but it's a shame I could not edit the title of the question over on <https://discourse.julialang.org/t/when-testing-julia-functions-i-sometimes-want-to-check-that-none-of-the-arguments/55611/2|Discourse>. A snappier title than the current ramblings would be better...","user":"UQNDMRP35","ts":"1613754969.225500","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"When testing Julia functions I sometimes want to check that none of the arguments","title_link":"https://discourse.julialang.org/t/when-testing-julia-functions-i-sometimes-want-to-check-that-none-of-the-arguments/55611/2","text":"Thanks to Benoît Richard over on Julia Slack for his answer, which worked nicely: You don’t actually need a macro a function should be sufficient. Something like function test_no_mutation(func, args...) backups = copy.(args) func(args...) for (arg, backup) in zip(args, backups) @test arg == backup end end Should do the trick.","fallback":"JuliaLang: When testing Julia functions I sometimes want to check that none of the arguments","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1613754578,"from_url":"https://discourse.julialang.org/t/when-testing-julia-functions-i-sometimes-want-to-check-that-none-of-the-arguments/55611/2","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/when-testing-julia-functions-i-sometimes-want-to-check-that-none-of-the-arguments/55611/2"}],"blocks":[{"type":"rich_text","block_id":"yIDrv","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UGR3910CQ"},{"type":"text","text":" "},{"type":"user","user_id":"UCZ7VBGUD"},{"type":"text","text":" I copied "},{"type":"user","user_id":"U017LQ3A59U"},{"type":"text","text":"'s helpful answer over to Discourse. All good but it's a shame I could not edit the title of the question over on "},{"type":"link","url":"https://discourse.julialang.org/t/when-testing-julia-functions-i-sometimes-want-to-check-that-none-of-the-arguments/55611/2","text":"Discourse"},{"type":"text","text":". A snappier title than the current ramblings would be better..."}]}]}],"thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"client_msg_id":"8183b568-f83a-459e-9d43-b7191700ea98","type":"message","text":"did you tag the right Eric? (not sure why I’m being tagged!)","user":"UCZ7VBGUD","ts":"1613755036.227800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cl+k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"did you tag the right Eric? (not sure why I’m being tagged!)"}]}]}],"thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"client_msg_id":"AAA0875D-2D89-4CC7-ACB8-88DBBB86353E","type":"message","text":"<@UQNDMRP35> agreed, it’s a trust level thing on discourse, we have it set to “members” right now but the issue is that we can’t set lower permissions specially for one section, the title editing applies globally ","user":"UGR3910CQ","ts":"1613755052.228300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0cYZR","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UQNDMRP35"},{"type":"text","text":" agreed, it’s a trust level thing on discourse, we have it set to “members” right now but the issue is that we can’t set lower permissions specially for one section, the title editing applies globally "}]}]}],"thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"client_msg_id":"51a7d7cb-f917-42f5-83e6-a9c9dbbd0632","type":"message","text":"Ah, OK. Tricky! I guess what matters is whether Google will be able to helpfully index the question with answer whilst it has a not-very-good title.","user":"UQNDMRP35","ts":"1613755192.228800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gBI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, OK. Tricky! I guess what matters is whether Google will be able to helpfully index the question with answer whilst it has a not-very-good title."}]}]}],"thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"client_msg_id":"836001AC-EF80-4604-8CE5-19C7910AD70C","type":"message","text":"I will manually edit the title ","user":"UGR3910CQ","ts":"1613755259.229200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"52MRO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I will manually edit the title "}]}]}],"thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"client_msg_id":"96db5414-cc1a-46da-92cc-1bb6689345da","type":"message","text":"Cool, thanks!","user":"UQNDMRP35","ts":"1613755283.229500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jisY8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool, thanks!"}]}]}],"thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"}]