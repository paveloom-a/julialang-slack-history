[{"client_msg_id":"d785f422-0706-436a-a919-18585fa8a742","type":"message","text":"When testing Julia functions I sometimes want to check that none of the arguments are unintentionally mutated. It's a bit labour intensive at the moment: I write code to backup the arguments via `copy`, call the function, compare arguments with their backups.\n\nIs there a macro that can do that for me? Something like `@checkargsnotmutated myfunction(arg1, arg2, arg3)`.","user":"UQNDMRP35","ts":"1613734109.202200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XS6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When testing Julia functions I sometimes want to check that none of the arguments are unintentionally mutated. It's a bit labour intensive at the moment: I write code to backup the arguments via "},{"type":"text","text":"copy","style":{"code":true}},{"type":"text","text":", call the function, compare arguments with their backups.\n\nIs there a macro that can do that for me? Something like "},{"type":"text","text":"@checkargsnotmutated myfunction(arg1, arg2, arg3)","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1613734109.202200","reply_count":4,"reply_users_count":2,"latest_reply":"1613746840.218300","reply_users":["B01J9QZ4SP8","U017LQ3A59U"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613734111.202300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35","reactions":[{"name":"bridge","users":["UQNDMRP35"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/55611| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1613734209.203400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"type":"message","subtype":"bot_message","text":"Hey <@UQNDMRP35>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1613745019.215800","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"},{"client_msg_id":"c1afc3bd-ad42-4670-8ceb-1087b9134639","type":"message","text":"You don't actually need a macro a function should be sufficient. Something like\n```function test_no_mutation(func, args...)\n    backups = copy.(args)\n    func(args...)\n    for (arg, backup) in zip(args, backups)\n        @test arg == backup\n    end\nend```\nshould do the trick.","user":"U017LQ3A59U","ts":"1613746840.218300","team":"T68168MUP","edited":{"user":"U017LQ3A59U","ts":"1613746881.000000"},"blocks":[{"type":"rich_text","block_id":"+zr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You don't actually need a macro a function should be sufficient. Something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function test_no_mutation(func, args...)\n    backups = copy.(args)\n    func(args...)\n    for (arg, backup) in zip(args, backups)\n        @test arg == backup\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"should do the trick."}]}]}],"thread_ts":"1613734109.202200","parent_user_id":"UQNDMRP35"}]