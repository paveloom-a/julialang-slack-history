[{"client_msg_id":"cf1cacb0-6f2f-4b01-b1a9-81005e22b5eb","type":"message","text":"What is the difference between `f(x::T) where {T&lt;:MyAbstractType}` and `f(x::MyAbstractType)`? Also, does the answer depend on whether `MyAbstractType` is a parametric type or not?","user":"U0190AJCYK0","ts":"1609579436.011000","team":"T68168MUP","edited":{"user":"U0190AJCYK0","ts":"1609579493.000000"},"blocks":[{"type":"rich_text","block_id":"DjQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the difference between "},{"type":"text","text":"f(x::T) where {T<:MyAbstractType}","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"f(x::MyAbstractType)","style":{"code":true}},{"type":"text","text":"? Also, does the answer depend on whether "},{"type":"text","text":"MyAbstractType","style":{"code":true}},{"type":"text","text":" is a parametric type or not?"}]}]}],"thread_ts":"1609579436.011000","reply_count":6,"reply_users_count":2,"latest_reply":"1609579777.012200","reply_users":["U7HAYKY9X","U0190AJCYK0"],"subscribed":false},{"client_msg_id":"9a5f752b-e52f-456f-b36b-c3eb7c1dab5c","type":"message","text":"Nothing, it's the same","user":"U7HAYKY9X","ts":"1609579499.011200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uI6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nothing, it's the same"}]}]}],"thread_ts":"1609579436.011000","parent_user_id":"U0190AJCYK0"},{"client_msg_id":"795ed19b-4a17-45dd-980a-008a68a22111","type":"message","text":"Ok. Thank you for the quick response! :smile:","user":"U0190AJCYK0","ts":"1609579540.011400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jbb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok. Thank you for the quick response! "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1609579436.011000","parent_user_id":"U0190AJCYK0"},{"client_msg_id":"030b022b-b12e-4750-8e5c-3e153e1bc12c","type":"message","text":"It's useful because only the former syntax makes it possible to specify e.g. \"two arguments, both a subtype of Number, but they must be the same type\"","user":"U7HAYKY9X","ts":"1609579544.011600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SrWp5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's useful because only the former syntax makes it possible to specify e.g. \"two arguments, both a subtype of Number, but they must be the same type\""}]}]}],"thread_ts":"1609579436.011000","parent_user_id":"U0190AJCYK0"},{"client_msg_id":"5faee21e-d953-4656-889f-37e4b3d44f51","type":"message","text":"Got it. And internally does the compiler compile separate versions of the method for each new concrete type?","user":"U0190AJCYK0","ts":"1609579593.011800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fgf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Got it. And internally does the compiler compile separate versions of the method for each new concrete type?"}]}]}],"thread_ts":"1609579436.011000","parent_user_id":"U0190AJCYK0"},{"client_msg_id":"22702418-f6af-48da-bd9e-00bd8ba8d6ea","type":"message","text":"Yes, in all cases. :)","user":"U7HAYKY9X","ts":"1609579621.012000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YOS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, in all cases. :)"}]}]}],"thread_ts":"1609579436.011000","parent_user_id":"U0190AJCYK0"},{"client_msg_id":"c2f943f6-409d-43e7-8cec-9389ddf583d5","type":"message","text":"Okay. Thanks!","user":"U0190AJCYK0","ts":"1609579777.012200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kqb7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay. Thanks!"}]}]}],"thread_ts":"1609579436.011000","parent_user_id":"U0190AJCYK0"}]