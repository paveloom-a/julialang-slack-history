[{"client_msg_id":"0ea40d77-32b3-4a5d-b6d0-74925e8761db","type":"message","text":"Is there a specific variant of `show` that I need to implement to control printing of _arrays_ of a custom struct? A minimal example is something like this:\n```julia&gt; struct A\n           a::Vector{Float64}\n       end\n\njulia&gt; show(io::IO, ::MIME\"text/plain\", a::A) = println(io, sum(a.a))\nshow (generic function with 265 methods)\n\njulia&gt; A(rand(3))\n0.6523213214877193\n\njulia&gt; [A(rand(3)), A(rand(3))]\n2-element Array{A,1}:\n A([0.8273583032337659, 0.8759818855264874, 0.7537023160824872])\n A([0.3965859546281376, 0.9809181391255095, 0.2326944547469434])```\nI was hoping for the last line to use the printing scheme defined above instead of the default scheme.","user":"UCE6XE42Z","ts":"1611172356.454000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R+Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a specific variant of "},{"type":"text","text":"show","style":{"code":true}},{"type":"text","text":" that I need to implement to control printing of "},{"type":"text","text":"arrays","style":{"italic":true}},{"type":"text","text":" of a custom struct? A minimal example is something like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct A\n           a::Vector{Float64}\n       end\n\njulia> show(io::IO, ::MIME\"text/plain\", a::A) = println(io, sum(a.a))\nshow (generic function with 265 methods)\n\njulia> A(rand(3))\n0.6523213214877193\n\njulia> [A(rand(3)), A(rand(3))]\n2-element Array{A,1}:\n A([0.8273583032337659, 0.8759818855264874, 0.7537023160824872])\n A([0.3965859546281376, 0.9809181391255095, 0.2326944547469434])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I was hoping for the last line to use the printing scheme defined above instead of the default scheme."}]}]}],"thread_ts":"1611172356.454000","reply_count":2,"reply_users_count":2,"latest_reply":"1611172766.454600","reply_users":["UD0NS8PDF","UCE6XE42Z"],"subscribed":false},{"client_msg_id":"735c6f9d-986e-42ea-8e08-251dcd9cabed","type":"message","text":"I think you need 2-arg show:\n```julia&gt; Base.show(io::IO, a::Aa) = println(io, sum(a.a), \" 2-arg\")\n\njulia&gt; [Aa(rand(3)), Aa(rand(3))] |&gt; permutedims\n1×2 Matrix{Aa}:\n 2.16805 2-arg\n  1.3159 2-arg```","user":"UD0NS8PDF","ts":"1611172718.454400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qC5dz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you need 2-arg show:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Base.show(io::IO, a::Aa) = println(io, sum(a.a), \" 2-arg\")\n\njulia> [Aa(rand(3)), Aa(rand(3))] |> permutedims\n1×2 Matrix{Aa}:\n 2.16805 2-arg\n  1.3159 2-arg"}]}]}],"thread_ts":"1611172356.454000","parent_user_id":"UCE6XE42Z","reactions":[{"name":"+1","users":["UCE6XE42Z"],"count":1}]},{"client_msg_id":"1e32e98f-2292-4549-9d14-53ade838a910","type":"message","text":"... that seems to be exactly right: thank you!","user":"UCE6XE42Z","ts":"1611172766.454600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=tdA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"... that seems to be exactly right: thank you!"}]}]}],"thread_ts":"1611172356.454000","parent_user_id":"UCE6XE42Z","reactions":[{"name":"+1","users":["UD0NS8PDF"],"count":1}]}]