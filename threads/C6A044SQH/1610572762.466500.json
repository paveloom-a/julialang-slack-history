[{"client_msg_id":"d40881f5-bbb5-4de9-ab0b-b6a52b6bc9bf","type":"message","text":"There is no way to `split!` a string into an existing vector without allocating, right?","user":"U7HAYKY9X","ts":"1610572762.466500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M=bj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is no way to "},{"type":"text","text":"split!","style":{"code":true}},{"type":"text","text":" a string into an existing vector without allocating, right?"}]}]}],"thread_ts":"1610572762.466500","reply_count":7,"reply_users_count":3,"latest_reply":"1610575490.468500","reply_users":["UH8A351DJ","U7HAYKY9X","U011QC7QLPL"],"subscribed":false},{"client_msg_id":"f9043845-530e-4915-a1d1-776338aa192a","type":"message","text":"correct, because a String is not a vector of Chars","user":"UH8A351DJ","ts":"1610573206.466700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XEhSG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"correct, because a String is not a vector of Chars"}]}]}],"thread_ts":"1610572762.466500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"3c5918fb-135c-47b1-8ab5-9dd1ec7274ba","type":"message","text":"I mean, into a `Vector{Substring{String}}`","user":"U7HAYKY9X","ts":"1610573552.467000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P2znU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean, into a "},{"type":"text","text":"Vector{Substring{String}}","style":{"code":true}}]}]}],"thread_ts":"1610572762.466500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"a9e3ce25-f8ba-44dd-9f1a-3ed9bccde2a6","type":"message","text":"and each Substring is really a char?","user":"UH8A351DJ","ts":"1610573667.467200","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1610573672.000000"},"blocks":[{"type":"rich_text","block_id":"Fsjs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and each Substring is really a char?"}]}]}],"thread_ts":"1610572762.466500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"a6df352b-528c-43c0-86d3-d1a6d4724297","type":"message","text":"I'm not sure `split!` makes a ton of sense in the generic case, as the number elements in the vector depends on the data, but could certainly write your own, lifting out parts of this code - <https://github.com/JuliaLang/julia/blob/158016547ffd8948779febc642b6e38bcef4508d/base/strings/util.jl#L414>","user":"U011QC7QLPL","ts":"1610574120.467700","team":"T68168MUP","edited":{"user":"U011QC7QLPL","ts":"1610574143.000000"},"blocks":[{"type":"rich_text","block_id":"Go/0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure `split!` makes a ton of sense in the generic case, as the number elements in the vector depends on the data, but could certainly write your own, lifting out parts of this code - "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/158016547ffd8948779febc642b6e38bcef4508d/base/strings/util.jl#L414"}]}]}],"thread_ts":"1610572762.466500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"a1e589cb-7e29-4cc1-b06c-5e9134e4932c","type":"message","text":"I have indeed rolled my own:\n```function split!(buffer::Vector{SubString{String}}, str::Union{String, SubString{String}}, sep::UInt8)\n    nmax = length(buffer)\n    n = 0\n    start = 1\n    GC.@preserve str begin\n        @inbounds for i in Base.OneTo(ncodeunits(str)) # Add inbounds TODO\n            byte = codeunit(str, i)\n            if byte == sep\n                n += 1\n                n &gt; nmax &amp;&amp; split_error(str, n)\n                buffer[n] = SubString(str, start, i-1)\n                start = i + 1\n            end\n        end\n    end\n    n += 1\n    n != nmax &amp;&amp; split_error(str, n)\n    @inbounds buffer[n] = SubString(str, start, ncodeunits(str))\n    buffer\nend```","user":"U7HAYKY9X","ts":"1610574434.468000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z4q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have indeed rolled my own:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function split!(buffer::Vector{SubString{String}}, str::Union{String, SubString{String}}, sep::UInt8)\n    nmax = length(buffer)\n    n = 0\n    start = 1\n    GC.@preserve str begin\n        @inbounds for i in Base.OneTo(ncodeunits(str)) # Add inbounds TODO\n            byte = codeunit(str, i)\n            if byte == sep\n                n += 1\n                n > nmax && split_error(str, n)\n                buffer[n] = SubString(str, start, i-1)\n                start = i + 1\n            end\n        end\n    end\n    n += 1\n    n != nmax && split_error(str, n)\n    @inbounds buffer[n] = SubString(str, start, ncodeunits(str))\n    buffer\nend"}]}]}],"thread_ts":"1610572762.466500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"acd61224-6493-412c-a9a0-f17c7f273a59","type":"message","text":"Why the `GC.@preserve` there, doesn't seem like you're doing anything unsafe in the block?","user":"U011QC7QLPL","ts":"1610575366.468300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZdoAs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why the "},{"type":"text","text":"GC.@preserve","style":{"code":true}},{"type":"text","text":" there, doesn't seem like you're doing anything unsafe in the block?"}]}]}],"thread_ts":"1610572762.466500","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"03374961-2019-408d-bd91-d9bee502331b","type":"message","text":"Whoops yeah, I'm used to working with pointers when manipulating strings bytewise, good catch","user":"U7HAYKY9X","ts":"1610575490.468500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4ZFUp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Whoops yeah, I'm used to working with pointers when manipulating strings bytewise, good catch"}]}]}],"thread_ts":"1610572762.466500","parent_user_id":"U7HAYKY9X"}]