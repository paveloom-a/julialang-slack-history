[{"client_msg_id":"c85abab4-fd0f-48a1-8273-34b65cfa6cb0","type":"message","text":"How can I create an empty iterable of eltype T without allocating?","user":"U7HAYKY9X","ts":"1615652352.064000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fJ+q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can I create an empty iterable of eltype T without allocating?"}]}]}],"thread_ts":"1615652352.064000","reply_count":14,"reply_users_count":4,"latest_reply":"1615654348.066700","reply_users":["B01J9QZ4SP8","UCZ7VBGUD","UH24GRBLL","U7HAYKY9X"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615652355.064100","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"14d07dc4-e321-42e1-8de1-1a76e146f173","type":"message","text":"Not sure if this is really helpful, but I think `SVector{0,T}()` fits those conditions","user":"UCZ7VBGUD","ts":"1615652645.064300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YW8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure if this is really helpful, but I think "},{"type":"text","text":"SVector{0,T}()","style":{"code":true}},{"type":"text","text":" fits those conditions"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"809c8110-143a-4f7d-851c-12d1b9682450","type":"message","text":"what do you want to do with that?","user":"UH24GRBLL","ts":"1615652892.064500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W3/ti","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you want to do with that?"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"af931c97-8901-41b4-ad40-9a7a0fdd09f6","type":"message","text":"I guess it's not too important. I have an abstract type that should have a constructor for any iterable of its element type. So I want to define a fallback method `Base.empty(x::MyAbstract) = typeof(x)(eltype(typeof(x))[])` , except without allocating the array","user":"U7HAYKY9X","ts":"1615653870.064700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yqh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess it's not too important. I have an abstract type that should have a constructor for any iterable of its element type. So I want to define a fallback method "},{"type":"text","text":"Base.empty(x::MyAbstract) = typeof(x)(eltype(typeof(x))[])","style":{"code":true}},{"type":"text","text":" , except without allocating the array"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"784cff05-e7b0-4a83-a04a-960c417f7c39","type":"message","text":"are you too now in the situation that you're looking for the type wrapper? :eyes: have we come full circle?","user":"UH24GRBLL","ts":"1615653966.064900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nKj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are you too now in the situation that you're looking for the type wrapper? "},{"type":"emoji","name":"eyes"},{"type":"text","text":" have we come full circle?"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"c29bd0ce-ca55-4c67-8861-8ba8d654ebc6","type":"message","text":"the problem is that you don't necessarily know how to call the constructor of an arbitrary iterable","user":"UH24GRBLL","ts":"1615653997.065100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sm2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the problem is that you don't necessarily know how to call the constructor of an arbitrary iterable"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"93c8cd4e-e274-43ea-b0c4-2038158a6551","type":"message","text":"so I'd just let it fail with a MethodError","user":"UH24GRBLL","ts":"1615654025.065300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RmrtF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I'd just let it fail with a MethodError"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"41117795-7332-403b-b21b-8915335c3d6f","type":"message","text":"Sure, I control the abstract type, so it's just part of the interface to allow construction of arbitrary iterables with a known length and the correct eltype","user":"U7HAYKY9X","ts":"1615654189.065500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iJqJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure, I control the abstract type, so it's just part of the interface to allow construction of arbitrary iterables with a known length and the correct eltype"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"05c4eaa8-f6c1-41b2-ac26-2b740dba4d81","type":"message","text":"right, but you don't necessarily control subtypes","user":"UH24GRBLL","ts":"1615654209.065700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H=v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, but you don't necessarily control subtypes"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"faa859bd-2e2e-4d1d-bde3-a2bd252ca13f","type":"message","text":"if you're fine with it failing at another point though, it's alright","user":"UH24GRBLL","ts":"1615654235.065900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bWJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you're fine with it failing at another point though, it's alright"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"83614fb2-e6cf-45d0-b342-4072dc77dc09","type":"message","text":"Yeah, if people subtype my abstract type and don't adhere to the very small and documented interface, that's their problem","user":"U7HAYKY9X","ts":"1615654262.066100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d5H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, if people subtype my abstract type and don't adhere to the very small and documented interface, that's their problem"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"16d6a966-d416-414f-b5d0-38bba0a9f997","type":"message","text":"hm","user":"UH24GRBLL","ts":"1615654277.066300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W/3p/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hm"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ea59abd4-a081-4e18-af11-a4124b745355","type":"message","text":"well the way it's written now is that you require `typeof(x)` to return the same thing that's used to construct `x`","user":"UH24GRBLL","ts":"1615654307.066500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BpRaD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well the way it's written now is that you require "},{"type":"text","text":"typeof(x)","style":{"code":true}},{"type":"text","text":" to return the same thing that's used to construct "},{"type":"text","text":"x","style":{"code":true}}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"a0bae8d9-2061-4f7c-9e4f-d4c5463a01ac","type":"message","text":"so it's not necessarily possible to add type parameters and have an outer constructor that doesn't require them, I think","user":"UH24GRBLL","ts":"1615654348.066700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HPXb/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so it's not necessarily possible to add type parameters and have an outer constructor that doesn't require them, I think"}]}]}],"thread_ts":"1615652352.064000","parent_user_id":"U7HAYKY9X"}]