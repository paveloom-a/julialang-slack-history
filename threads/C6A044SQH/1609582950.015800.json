[{"client_msg_id":"ad9554c8-0ff3-42c2-9695-ad6ce4a7648a","type":"message","text":"Why is the <https://github.com/FluxML/Flux.jl/blob/master/src/data/dataloader.jl#L3|dataloader >using `Int` and `Bool` in struct definition:\n```struct DataLoader{D}\n    data::D\n    batchsize::Int\n    nobs::Int\n    partial::Bool\n    imax::Int\n    indices::Vector{Int}\n    shuffle::Bool\nend```\nI thought the recommendation was to do:\n```struct DataLoader{D, T&lt;:Int, B&lt;:Bool}\n    data::D\n    batchsize::T\n    nobs::T\n    partial::B\n    imax::T\n    indices::Vector{T}\n    shuffle::B\nend```\nhere: <https://docs.julialang.org/en/v1/manual/performance-tips/#Type-declarations>","user":"U01BG0NN34J","ts":"1609582950.015800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S4y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why is the "},{"type":"link","url":"https://github.com/FluxML/Flux.jl/blob/master/src/data/dataloader.jl#L3","text":"dataloader "},{"type":"text","text":"using "},{"type":"text","text":"Int","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Bool","style":{"code":true}},{"type":"text","text":" in struct definition:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct DataLoader{D}\n    data::D\n    batchsize::Int\n    nobs::Int\n    partial::Bool\n    imax::Int\n    indices::Vector{Int}\n    shuffle::Bool\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI thought the recommendation was to do:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct DataLoader{D, T<:Int, B<:Bool}\n    data::D\n    batchsize::T\n    nobs::T\n    partial::B\n    imax::T\n    indices::Vector{T}\n    shuffle::B\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"here: "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/performance-tips/#Type-declarations"}]}]}],"thread_ts":"1609582950.015800","reply_count":14,"reply_users_count":4,"latest_reply":"1609583679.020000","reply_users":["U7HAYKY9X","U85R3JJ8L","UH24GRBLL","U01BG0NN34J"],"subscribed":false},{"client_msg_id":"68c4d410-c895-41d9-911f-d2a90d9aeb5d","type":"message","text":"The `T&lt;:Int` thing only makes a difference if the parameter is a subtype of an abstract type.","user":"U7HAYKY9X","ts":"1609583084.015900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xc8U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":"T<:Int","style":{"code":true}},{"type":"text","text":" thing only makes a difference if the parameter is a subtype of an abstract type."}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J","reactions":[{"name":"+1","users":["U01BG0NN34J"],"count":1}]},{"client_msg_id":"c592b3ae-b59d-4582-a868-d03c2f5fc035","type":"message","text":"Which part of the documentation is suggesting this in your opinion?","user":"U85R3JJ8L","ts":"1609583140.016300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gKh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Which part of the documentation is suggesting this in your opinion?"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"1ec504ea-50a6-4487-a9b6-fc5a189bec83","type":"message","text":"```struct Foo\n    x::Integer # x is abstractly typed, so\n    # compiler don't know the exact type\nend\n\nstruct Bar{T &lt;: Integer}\n    x::T # x is concretely typed\nend\n\nstruct Qux\n    x::Int # x is also concretely typed\nend```","user":"U7HAYKY9X","ts":"1609583206.016500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y7z","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Foo\n    x::Integer # x is abstractly typed, so\n    # compiler don't know the exact type\nend\n\nstruct Bar{T <: Integer}\n    x::T # x is concretely typed\nend\n\nstruct Qux\n    x::Int # x is also concretely typed\nend"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"6863056c-5e50-4042-b367-284c26009638","type":"message","text":"`Int` and `Bool` are already concrete types, they have a known size and are thus perfectly fine to use there","user":"UH24GRBLL","ts":"1609583216.016900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NeN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Int","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Bool","style":{"code":true}},{"type":"text","text":" are already concrete types, they have a known size and are thus perfectly fine to use there"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J","reactions":[{"name":"+1","users":["U01BG0NN34J"],"count":1}]},{"client_msg_id":"0ae5fd48-058f-4af4-9ac1-923364d91440","type":"message","text":"Oh ok, thanks.","user":"U01BG0NN34J","ts":"1609583281.017100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6Gs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh ok, thanks."}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"e084ec0d-69d9-4d00-b6bd-43507a008b13","type":"message","text":"How do I know if a given type is abstract or concrete? Integer and Int for example... look concrete to me","user":"U01BG0NN34J","ts":"1609583365.017300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/Sh7H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do I know if a given type is abstract or concrete? Integer and Int for example... look concrete to me"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"2051bc35-527d-43f0-8e1d-b1171a23fe9f","type":"message","text":"```julia&gt; isabstracttype(Integer)\ntrue```","user":"U7HAYKY9X","ts":"1609583396.017500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7TwV","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> isabstracttype(Integer)\ntrue"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"4414c20d-d1e9-46d8-8bf2-097c044427bc","type":"message","text":"Ok thanks.","user":"U01BG0NN34J","ts":"1609583431.017700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ych","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok thanks."}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"1277e5e6-9a40-4d37-b5ea-3f57bcaf8318","type":"message","text":"Actually, you should probably use `isconcretetype` instead, since you also want to avoid so-called Unionall-types, which are not concrete, but not abstract either","user":"U7HAYKY9X","ts":"1609583435.017900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mBQVx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually, you should probably use `isconcretetype` instead, since you also want to avoid so-called Unionall-types, which are not concrete, but not abstract either"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J","reactions":[{"name":"raised_hands","users":["U01BG0NN34J"],"count":1}]},{"client_msg_id":"7f0797c4-d03b-482d-8abd-fb5f30e4710a","type":"message","text":"Seems like Julia doesn't warn if I use abstract type in a struct.\nStupid question: if that's the recommendation shouldn't it warn?","user":"U01BG0NN34J","ts":"1609583511.018100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lAx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Seems like Julia doesn't warn if I use abstract type in a struct.\nStupid question: if that's the recommendation shouldn't it warn?"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"50ddc443-1137-4170-9128-b620b2e11992","type":"message","text":"not necessarily","user":"UH24GRBLL","ts":"1609583591.018800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k7MWx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not necessarily"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"62c84801-8b9f-44a5-b462-5271701c0ee1","type":"message","text":"it's fine to have them like that for exploratory coding","user":"UH24GRBLL","ts":"1609583610.019300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iY1um","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's fine to have them like that for exploratory coding"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"b6180563-2004-45cc-98e1-bf555ae3a087","type":"message","text":"but it would be pretty annyoing if that always threw a warning","user":"UH24GRBLL","ts":"1609583621.019700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0ULK8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but it would be pretty annyoing if that always threw a warning"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"e23f5526-bca7-4bb3-baf2-dfe96d2ffe5a","type":"message","text":"I see, thanks","user":"U01BG0NN34J","ts":"1609583679.020000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EFA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see, thanks"}]}]}],"thread_ts":"1609582950.015800","parent_user_id":"U01BG0NN34J"}]