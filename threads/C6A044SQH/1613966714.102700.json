[{"client_msg_id":"3f821d52-0b82-44d4-992d-f161a5349950","type":"message","text":"I have a flattened array which is coordinates in the form of [xyzxyzxyz...]. This array should be one dimensional to interface with the packages I need to use.\n\nHow can I get views to a subset of points? With a 2d array, I can do\n```view(A, :, [1, 2, 4])```\nand get back those columns. Is there an equivalent concise syntax to get the same data out of the equivalent vector? (i.e. indices `[1, 2, 3, 4, 5, 6, 10, 11, 12]` in the previous example. I realize I could reshape to a 2d array, but I'd like to not pay the allocation cost. Thanks!","user":"UMC2RHKLZ","ts":"1613966714.102700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fcich","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a flattened array which is coordinates in the form of [xyzxyzxyz...]. This array should be one dimensional to interface with the packages I need to use.\n\nHow can I get views to a subset of points? With a 2d array, I can do\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"view(A, :, [1, 2, 4])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and get back those columns. Is there an equivalent concise syntax to get the same data out of the equivalent vector? (i.e. indices "},{"type":"text","text":"[1, 2, 3, 4, 5, 6, 10, 11, 12]","style":{"code":true}},{"type":"text","text":" in the previous example. I realize I could reshape to a 2d array, but I'd like to not pay the allocation cost. Thanks!"}]}]}],"thread_ts":"1613966714.102700","reply_count":4,"reply_users_count":3,"latest_reply":"1613967448.103500","reply_users":["B01J9QZ4SP8","UH8A351DJ","UMC2RHKLZ"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613966716.102800","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613966714.102700","parent_user_id":"UMC2RHKLZ"},{"client_msg_id":"7421e30e-a339-4a47-8f8b-1dff53060559","type":"message","text":"`reshape` basically doesn't allocate","user":"UH8A351DJ","ts":"1613967231.103000","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1613967330.000000"},"blocks":[{"type":"rich_text","block_id":"ja8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reshape","style":{"code":true}},{"type":"text","text":" basically doesn't allocate"}]}]}],"thread_ts":"1613966714.102700","parent_user_id":"UMC2RHKLZ"},{"client_msg_id":"b101fd45-f77a-40eb-90a7-c08469c29fdc","type":"message","text":"```julia&gt; a = @time rand(10^6);\n  0.003187 seconds (2 allocations: 7.629 MiB)\n\njulia&gt; b = @time reshape(a, 10^3, 10^3);\n  0.000005 seconds (2 allocations: 96 bytes)\n\njulia&gt; b[1] = 1000\n1000\n\njulia&gt; a\n1000000-element Vector{Float64}:\n 1000.0\n    0.3469664035752935```","user":"UH8A351DJ","ts":"1613967321.103200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CBOE","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a = @time rand(10^6);\n  0.003187 seconds (2 allocations: 7.629 MiB)\n\njulia> b = @time reshape(a, 10^3, 10^3);\n  0.000005 seconds (2 allocations: 96 bytes)\n\njulia> b[1] = 1000\n1000\n\njulia> a\n1000000-element Vector{Float64}:\n 1000.0\n    0.3469664035752935"}]}]}],"thread_ts":"1613966714.102700","parent_user_id":"UMC2RHKLZ"},{"client_msg_id":"db57fb94-63db-4784-960f-6166231ee0b8","type":"message","text":"reasonable. thanks!","user":"UMC2RHKLZ","ts":"1613967448.103500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uUf4n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reasonable. thanks!"}]}]}],"thread_ts":"1613966714.102700","parent_user_id":"UMC2RHKLZ"}]