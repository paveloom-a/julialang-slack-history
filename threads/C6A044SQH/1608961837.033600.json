[{"client_msg_id":"fc68ee31-bf05-4dd6-9913-44eb7dbd0088","type":"message","text":"Hi, I’m just starting out with Julia and ran into a weird issue. I defined a function that can take float values (fp32 or fp64, but strictly no int) as follows\n```function elim(A::Array{float},b::Array{float})\n    #=\n    Function which transforms matrix\n    A into upper triangular matrix U\n    =#\n    n = size(b)[1]\n    \n    # Pick a pivot row\n    for k in 1:n-1\n        for i in k+1:n\n            if A[i,k] != 0\n                lambda = A[i,k]/A[k,k]\n                A[i,k+1:n] -= lambda*A[k,k+1:n]\n                b[i,:] -= lambda*b[k,:]\n            end\n        end\n    end\n    return A, b\nend```\nNow when I call this function and give inputs as Float32\n```A = [[6, -4, 1] [-4, 6, -4] [1, -4, 6]]\nb = [[-14, 36, 6] [22, -18, 7]];\nA = Float32.(A)\nb = Float32.(b);\n\nU, b_t = elim(A,b)\nshow(stdout, \"text/plain\", U)\nprintln()\nshow(stdout, \"text/plain\", b_t)```\nI get an error saying\n```MethodError: no method matching elim(::Array{Float32,2}, ::Array{Float32,2})\n\nStacktrace:\n [1] top-level scope at In[3]:1\n [2] include_string(::Function, ::Module, ::String, ::String) at ./loading.jl:1091```\nI get the same error when I input Float64. Is there any way that I can define a function that takes both Float32 and Float64? I don’t want to define two separate functions as it’ll just clutter everything for no reason.","user":"U01H10NMKD5","ts":"1608961837.033600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pp2V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, I’m just starting out with Julia and ran into a weird issue. I defined a function that can take float values (fp32 or fp64, but strictly no int) as follows\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function elim(A::Array{float},b::Array{float})\n    #=\n    Function which transforms matrix\n    A into upper triangular matrix U\n    =#\n    n = size(b)[1]\n    \n    # Pick a pivot row\n    for k in 1:n-1\n        for i in k+1:n\n            if A[i,k] != 0\n                lambda = A[i,k]/A[k,k]\n                A[i,k+1:n] -= lambda*A[k,k+1:n]\n                b[i,:] -= lambda*b[k,:]\n            end\n        end\n    end\n    return A, b\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Now when I call this function and give inputs as Float32\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"A = [[6, -4, 1] [-4, 6, -4] [1, -4, 6]]\nb = [[-14, 36, 6] [22, -18, 7]];\nA = Float32.(A)\nb = Float32.(b);\n\nU, b_t = elim(A,b)\nshow(stdout, \"text/plain\", U)\nprintln()\nshow(stdout, \"text/plain\", b_t)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I get an error saying\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"MethodError: no method matching elim(::Array{Float32,2}, ::Array{Float32,2})\n\nStacktrace:\n [1] top-level scope at In[3]:1\n [2] include_string(::Function, ::Module, ::String, ::String) at ./loading.jl:1091"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I get the same error when I input Float64. Is there any way that I can define a function that takes both Float32 and Float64? I don’t want to define two separate functions as it’ll just clutter everything for no reason."}]}]}],"thread_ts":"1608961837.033600","reply_count":15,"reply_users_count":2,"latest_reply":"1608963662.036800","reply_users":["UH8A351DJ","U01H10NMKD5"],"subscribed":false},{"client_msg_id":"0fae93bb-697f-4744-8fdf-a9f255e3f9ca","type":"message","text":"`float` is a function not a Type, you're probably looking for `elim(A::Array{AbstractFloat},b::Array{AbstractFloat})`","user":"UH8A351DJ","ts":"1608961895.033700","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1608961926.000000"},"blocks":[{"type":"rich_text","block_id":"ERdR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"float","style":{"code":true}},{"type":"text","text":" is a function not a Type, you're probably looking for "},{"type":"text","text":"elim(A::Array{AbstractFloat},b::Array{AbstractFloat})","style":{"code":true}}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"f57a877d-90d0-4ff0-b24c-e1f6d79a9a3f","type":"message","text":"It's still giving the same error","user":"U01H10NMKD5","ts":"1608962429.034000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6=yj1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's still giving the same error"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"97c59af2-4dc1-4f08-b1d5-d8740c226099","type":"message","text":"it's because your A and B are array of array","user":"UH8A351DJ","ts":"1608962704.034200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bb5+n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's because your A and B are array of array"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"036b1fff-7ad6-4d10-abdc-3ff286682e66","type":"message","text":"they are not Array{Float64/32}","user":"UH8A351DJ","ts":"1608962715.034400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GW3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"they are not Array{Float64/32}"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"5f9e9547-9de9-40ac-9d50-d3fda30f29a6","type":"message","text":"Why not just drop the type annotation, it's probably fine\n\nedit: checked with `@code_typed`, looks fine to me","user":"UH8A351DJ","ts":"1608962736.034600","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1608962791.000000"},"blocks":[{"type":"rich_text","block_id":"Ug4Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why not just drop the type annotation, it's probably fine\n\nedit: checked with "},{"type":"text","text":"@code_typed","style":{"code":true}},{"type":"text","text":", looks fine to me"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"81b50bd8-68d7-46d3-8f16-37fe6f060d96","type":"message","text":"No, they're 3x3 and 3x2 Arrays.\n```3×3 Array{Int64,2}:\n  6  -4   1\n -4   6  -4\n  1  -4   6\n3×2 Array{Int64,2}:\n -14   22\n  36  -18\n   6    7```\nI also found the solution to this\n`function elim(A::Array{&lt;:Union{Float16,Float32,Float64}},b::Array{&lt;:Union{Float16,Float32,Float64}})`\n\nBut i'm curious about what you mean by drop the type annotation? Do you want to not specify which inputs to accept? Maybe write something like\n`function elim(A,b)`","user":"U01H10NMKD5","ts":"1608963090.034900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nJ=/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, they're 3x3 and 3x2 Arrays.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"3×3 Array{Int64,2}:\n  6  -4   1\n -4   6  -4\n  1  -4   6\n3×2 Array{Int64,2}:\n -14   22\n  36  -18\n   6    7"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I also found the solution to this\n"},{"type":"text","text":"function elim(A::Array{<:Union{Float16,Float32,Float64}},b::Array{<:Union{Float16,Float32,Float64}})","style":{"code":true}},{"type":"text","text":"\n\nBut i'm curious about what you mean by drop the type annotation? Do you want to not specify which inputs to accept? Maybe write something like\n"},{"type":"text","text":"function elim(A,b)","style":{"code":true}}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"8a24ef74-52c3-4047-9d0d-1709252a3487","type":"message","text":"yes","user":"UH8A351DJ","ts":"1608963115.035100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s0qj6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"bf6c5b91-086e-4377-b618-13cdc305f95d","type":"message","text":"btw I think the type is fine you have other bugs:\n```julia&gt; function elim(A::Array{Float64},b::Array{Float64})\n           #=\n           Function which transforms matrix\n           A into upper triangular matrix U\n           =#\n           n = size(b)[1]\n           # Pick a pivot row\n           for k in 1:n-1\n               for i in k+1:n\n                   if A[i,k] != 0\n                       lambda = A[i,k]/A[k,k]\n                       A[i,k+1:n] -= lambda*A[k,k+1:n]\n                       b[i,:] -= lambda*b[k,:]\n                   end\n               end\n           end\n           return A, b\n       end\nelim (generic function with 2 methods)\n\njulia&gt; elim(A,b)\nERROR: InexactError: Int64(3.3333333333333335)```","user":"UH8A351DJ","ts":"1608963188.035300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lf6pt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"btw I think the type is fine you have other bugs:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function elim(A::Array{Float64},b::Array{Float64})\n           #=\n           Function which transforms matrix\n           A into upper triangular matrix U\n           =#\n           n = size(b)[1]\n           # Pick a pivot row\n           for k in 1:n-1\n               for i in k+1:n\n                   if A[i,k] != 0\n                       lambda = A[i,k]/A[k,k]\n                       A[i,k+1:n] -= lambda*A[k,k+1:n]\n                       b[i,:] -= lambda*b[k,:]\n                   end\n               end\n           end\n           return A, b\n       end\nelim (generic function with 2 methods)\n\njulia> elim(A,b)\nERROR: InexactError: Int64(3.3333333333333335)"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"bbbac038-261a-4f9b-bbc1-c874e6ac1e05","type":"message","text":"I can't do that, because input has to be matrices and I can't even accept integer values as inputs beacause when I define function like\n`function elim(A::Array,b::Array)`\nI get other erros...","user":"U01H10NMKD5","ts":"1608963224.035500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yRm9y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can't do that, because input has to be matrices and I can't even accept integer values as inputs beacause when I define function like\n"},{"type":"text","text":"function elim(A::Array,b::Array)","style":{"code":true}},{"type":"text","text":"\nI get other erros..."}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"1f77505c-3bd0-4cc2-9302-739cbde49893","type":"message","text":"This is exactly what I was talking about. This is happening because I'm re-using the inputs to store the intermediates and solution.","user":"U01H10NMKD5","ts":"1608963285.035700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"60z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is exactly what I was talking about. This is happening because I'm re-using the inputs to store the intermediates and solution."}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"9b4f0bfa-a173-4b84-88ad-bb9d676e5e63","type":"message","text":"`function elim(A::Array{&lt;:AbstractFloat},b::Array{&lt;:AbstractFloat})` should work, sorry I overlooked earlier","user":"UH8A351DJ","ts":"1608963371.035900","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1608963384.000000"},"blocks":[{"type":"rich_text","block_id":"tnd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"function elim(A::Array{<:AbstractFloat},b::Array{<:AbstractFloat})","style":{"code":true}},{"type":"text","text":" should work, sorry I overlooked earlier"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"7ed8510e-8e1e-4c6b-9ff6-2f52ef47a656","type":"message","text":"No this isn't working. This gives the same error as the 1st one.","user":"U01H10NMKD5","ts":"1608963413.036200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z7xD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No this isn't working. This gives the same error as the 1st one."}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"40a529f6-19aa-440c-9484-7683b4def72c","type":"message","text":"you need to restart your julia session","user":"UH8A351DJ","ts":"1608963574.036400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H7+G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you need to restart your julia session"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"d2f4a0a0-bb44-4b1f-b53d-df69905faeaa","type":"message","text":"```julia&gt; function elim(A::Array{&lt;:AbstractFloat},b::Array{&lt;:AbstractFloat})\n           #=\n           Function which transforms matrix\n           A into upper triangular matrix U\n           =#\n           n = size(b)[1]\n           # Pick a pivot row\n           for k in 1:n-1\n               for i in k+1:n\n                   if A[i,k] != 0\n                       lambda = A[i,k]/A[k,k]\n                       A[i,k+1:n] -= lambda*A[k,k+1:n]\n                       b[i,:] -= lambda*b[k,:]\n                   end\n               end\n           end\n           return A, b\n       end\nelim (generic function with 1 method)\n\njulia&gt; A = [[6, -4, 1] [-4, 6, -4] [1, -4, 6]]\n3×3 Array{Int64,2}:\n  6  -4   1\n -4   6  -4\n  1  -4   6\n\njulia&gt; b = [[-14, 36, 6] [22, -18, 7]];\n\njulia&gt; A = Float32.(A)\n3×3 Array{Float32,2}:\n  6.0  -4.0   1.0\n -4.0   6.0  -4.0\n  1.0  -4.0   6.0\n\njulia&gt; b = Float32.(b);\n\njulia&gt; elim(A,b)\n(Float32[6.0 -4.0 1.0; -4.0 3.3333333 -3.3333333; 1.0 -3.3333333 2.5000002], Float32[-14.0 22.0; 26.666666 -3.333333; 35.0 2.3841858f-7])```","user":"UH8A351DJ","ts":"1608963578.036600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wze","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function elim(A::Array{<:AbstractFloat},b::Array{<:AbstractFloat})\n           #=\n           Function which transforms matrix\n           A into upper triangular matrix U\n           =#\n           n = size(b)[1]\n           # Pick a pivot row\n           for k in 1:n-1\n               for i in k+1:n\n                   if A[i,k] != 0\n                       lambda = A[i,k]/A[k,k]\n                       A[i,k+1:n] -= lambda*A[k,k+1:n]\n                       b[i,:] -= lambda*b[k,:]\n                   end\n               end\n           end\n           return A, b\n       end\nelim (generic function with 1 method)\n\njulia> A = [[6, -4, 1] [-4, 6, -4] [1, -4, 6]]\n3×3 Array{Int64,2}:\n  6  -4   1\n -4   6  -4\n  1  -4   6\n\njulia> b = [[-14, 36, 6] [22, -18, 7]];\n\njulia> A = Float32.(A)\n3×3 Array{Float32,2}:\n  6.0  -4.0   1.0\n -4.0   6.0  -4.0\n  1.0  -4.0   6.0\n\njulia> b = Float32.(b);\n\njulia> elim(A,b)\n(Float32[6.0 -4.0 1.0; -4.0 3.3333333 -3.3333333; 1.0 -3.3333333 2.5000002], Float32[-14.0 22.0; 26.666666 -3.333333; 35.0 2.3841858f-7])"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"},{"client_msg_id":"2503bcda-b82e-44e3-94bc-326e0c786dfc","type":"message","text":"Yes, it's working now. Maybe I forgot to restart the session earlier. Thanks","user":"U01H10NMKD5","ts":"1608963662.036800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mjSpe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, it's working now. Maybe I forgot to restart the session earlier. Thanks"}]}]}],"thread_ts":"1608961837.033600","parent_user_id":"U01H10NMKD5"}]