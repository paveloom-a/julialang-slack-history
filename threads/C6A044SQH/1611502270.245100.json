[{"client_msg_id":"674436fb-754f-4215-9015-fc02e5d7e985","type":"message","text":"Is it expected that `Tuple{Int, String} &lt;: NTuple{&lt;:Any, &lt;:Union{Int, String}}`  is `false`, but `Tuple{Int, String} &lt;: NTuple{&lt;:Any, Union{Int, String}}` is `true`?","user":"U67431ELR","ts":"1611502270.245100","team":"T68168MUP","edited":{"user":"U67431ELR","ts":"1611502280.000000"},"blocks":[{"type":"rich_text","block_id":"rAw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it expected that "},{"type":"text","text":"Tuple{Int, String} <: NTuple{<:Any, <:Union{Int, String}}","style":{"code":true}},{"type":"text","text":"  is "},{"type":"text","text":"false","style":{"code":true}},{"type":"text","text":", but "},{"type":"text","text":"Tuple{Int, String} <: NTuple{<:Any, Union{Int, String}}","style":{"code":true}},{"type":"text","text":" is "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1611502270.245100","reply_count":13,"reply_users_count":2,"latest_reply":"1611505161.255300","reply_users":["UM30MT6RF","U67431ELR"],"subscribed":false},{"client_msg_id":"b540b2dc-7232-41a2-832b-b5798780c88d","type":"message","text":"Yes, it's the diagonal rule, i.e. `Tuple{Int, Int} &lt;: Tuple{T, T} where T`, but `Tuple{Int, Float64} &lt;: Tuple{T, T} where T` is false","user":"UM30MT6RF","ts":"1611503128.250800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BLb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, it's the diagonal rule, i.e. "},{"type":"text","text":"Tuple{Int, Int} <: Tuple{T, T} where T","style":{"code":true}},{"type":"text","text":", but "},{"type":"text","text":"Tuple{Int, Float64} <: Tuple{T, T} where T","style":{"code":true}},{"type":"text","text":" is false"}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"},{"client_msg_id":"76717344-ffc7-4924-b759-600deae4cad9","type":"message","text":"Otherwise diagonal dispatch wouldn't work","user":"UM30MT6RF","ts":"1611503163.251000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jaj5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Otherwise diagonal dispatch wouldn't work"}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"},{"client_msg_id":"60b5e606-1986-4127-8f49-aab9accf7057","type":"message","text":"But `&lt;:Union` is stricter than just `Union`?","user":"U67431ELR","ts":"1611503190.251200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Gu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But "},{"type":"text","text":"<:Union","style":{"code":true}},{"type":"text","text":" is stricter than just "},{"type":"text","text":"Union","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"},{"client_msg_id":"91eb99a0-ef85-4c76-b4b8-5c4bc9e1a8ad","type":"message","text":"The first one,`NTuple{&lt;:Any, &lt;:Union{Int, String}}` is something like `Tuple{T, T, ...} where {T &lt;: Union{Int, String}`, whereas the latter is something like `Tuple{Union{Int, String}, Union{Int, String}, ...}`, so in this case the first one is a strict subtype of the second one","user":"UM30MT6RF","ts":"1611503391.252200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p9d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The first one,"},{"type":"text","text":"NTuple{<:Any, <:Union{Int, String}}","style":{"code":true}},{"type":"text","text":" is something like "},{"type":"text","text":"Tuple{T, T, ...} where {T <: Union{Int, String}","style":{"code":true}},{"type":"text","text":", whereas the latter is something like "},{"type":"text","text":"Tuple{Union{Int, String}, Union{Int, String}, ...}","style":{"code":true}},{"type":"text","text":", so in this case the first one is a strict subtype of the second one"}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"},{"client_msg_id":"748c7a13-22e2-42a7-b066-5f8af8563bd6","type":"message","text":"OK so using `&lt;:` implicitly creates a `where T`. I'm really confused by covariance with tuples... :slightly_smiling_face:","user":"U67431ELR","ts":"1611503494.252400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L48","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK so using "},{"type":"text","text":"<:","style":{"code":true}},{"type":"text","text":" implicitly creates a "},{"type":"text","text":"where T","style":{"code":true}},{"type":"text","text":". I'm really confused by covariance with tuples... "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"},{"client_msg_id":"efa12ed8-60c3-41ad-a47c-133a20d72c1b","type":"message","text":"Yes, `T{&lt;:S}` is just syntax for `T{U} where {U &lt;: S}`","user":"UM30MT6RF","ts":"1611503591.253100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zkYGx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, "},{"type":"text","text":"T{<:S}","style":{"code":true}},{"type":"text","text":" is just syntax for "},{"type":"text","text":"T{U} where {U <: S}","style":{"code":true}}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"},{"client_msg_id":"5f190583-0283-4a2f-852e-5f56ac5791b7","type":"message","text":"It's not necessarily caused by the covariance of tuple, but I think we explicitly introduced the diagonal rule because it allows us to use dispatch for problems like promotion","user":"UM30MT6RF","ts":"1611503668.253800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v4R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's not necessarily caused by the covariance of tuple, but I think we explicitly introduced the diagonal rule because it allows us to use dispatch for problems like promotion"}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"},{"client_msg_id":"638c0e3e-db52-4371-b1fe-f42f66dcacc4","type":"message","text":"The devdocs actually explain this really nicely: <https://docs.julialang.org/en/v1/devdocs/types/#Diagonal-types>","user":"UM30MT6RF","ts":"1611503810.254000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cPHZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The devdocs actually explain this really nicely: "},{"type":"link","url":"https://docs.julialang.org/en/v1/devdocs/types/#Diagonal-types"}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR","reactions":[{"name":"heavy_check_mark","users":["U67431ELR"],"count":1}]},{"client_msg_id":"5986ae37-ef01-4c51-8451-b204ba7bc21c","type":"message","text":"Thanks. Is there a way to fix the RHS so that this works? `Tuple{Vector{Int}, Vector{Float64}} &lt;: NTuple{N, AbstractVector{&lt;:Integer}} where N`","user":"U67431ELR","ts":"1611504904.254300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ERvh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. Is there a way to fix the RHS so that this works? "},{"type":"text","text":"Tuple{Vector{Int}, Vector{Float64}} <: NTuple{N, AbstractVector{<:Integer}} where N","style":{"code":true}}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"},{"client_msg_id":"54075d59-9f71-4489-97fe-bd5b5ff14aa4","type":"message","text":"Hmm, not quite sure what you are asking for, since `Float64` is not a subtype of `Integer`","user":"UM30MT6RF","ts":"1611505010.254500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MjaGD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, not quite sure what you are asking for, since "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" is not a subtype of "},{"type":"text","text":"Integer","style":{"code":true}}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR","reactions":[{"name":"joy","users":["U67431ELR"],"count":1}]},{"client_msg_id":"7526d763-7183-4671-89e9-3d8e5650cac6","type":"message","text":"OK now I know why I didn't work. :stuck_out_tongue:","user":"U67431ELR","ts":"1611505053.254800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nh4i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK now I know why I didn't work. "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR","reactions":[{"name":"joy","users":["UM30MT6RF"],"count":1}]},{"client_msg_id":"21af3ae4-b61e-4812-9cb0-52469fc3af1a","type":"message","text":"The real code is so ugly that I thought there was something tricky going on...","user":"U67431ELR","ts":"1611505074.255100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"svw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The real code is so ugly that I thought there was something tricky going on..."}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"},{"client_msg_id":"6443d370-6d5c-4a14-89f9-ed8fa7d3914b","type":"message","text":"It's `NTuple{N, Union{AbstractVector{&lt;:Real}, Missings.EachReplaceMissing{&lt;:AbstractVector{&lt;:Union{Real, Missing}}}}}`. :scream:","user":"U67431ELR","ts":"1611505161.255300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lO3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's "},{"type":"text","text":"NTuple{N, Union{AbstractVector{<:Real}, Missings.EachReplaceMissing{<:AbstractVector{<:Union{Real, Missing}}}}}","style":{"code":true}},{"type":"text","text":". "},{"type":"emoji","name":"scream"}]}]}],"thread_ts":"1611502270.245100","parent_user_id":"U67431ELR"}]