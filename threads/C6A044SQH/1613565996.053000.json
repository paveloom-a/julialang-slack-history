[{"client_msg_id":"fefefbb3-38d0-4c77-9619-967766afe1d6","type":"message","text":"I'm having some trouble setting a constant variable based on a constant Python object at the module-level.\n\nA MWE:\n```module MyModule\n\nusing PyCall\n\nconst python_code = PyNULL()\n\nfunction __init__()\n    py\"\"\"\n    class Code:\n        def __init__(self, file):\n            # Read code chapters from a JSON file.\n            self.chapters = [\"001-139\", \"140-239\", \"240-279\"] # Mocked\n    \"\"\"\n    copy!(python_code, py\"Code\"(\"somefile.json\"))\nend\n\nfunction get_range(chapterrange)\n    lower, upper = parse.(Int, split(chapterrange, \"-\"))\n    return lower:upper\nend\n\n#const chapter_ranges = get_range.(python_code.chapters)\n\nend # module```\nUncommenting the last line results in an ArgumentError when loading the module (`ArgumentError: ref of NULL PyObject`).\n\nAm I correct that this assignment needs to be done in `__init__` as well? How can I ensure that `chapter_ranges` stays a `const` in that case?","user":"U01CH1E238S","ts":"1613565996.053000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XWlS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm having some trouble setting a constant variable based on a constant Python object at the module-level.\n\nA MWE:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"module MyModule\n\nusing PyCall\n\nconst python_code = PyNULL()\n\nfunction __init__()\n    py\"\"\"\n    class Code:\n        def __init__(self, file):\n            # Read code chapters from a JSON file.\n            self.chapters = [\"001-139\", \"140-239\", \"240-279\"] # Mocked\n    \"\"\"\n    copy!(python_code, py\"Code\"(\"somefile.json\"))\nend\n\nfunction get_range(chapterrange)\n    lower, upper = parse.(Int, split(chapterrange, \"-\"))\n    return lower:upper\nend\n\n#const chapter_ranges = get_range.(python_code.chapters)\n\nend # module"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nUncommenting the last line results in an ArgumentError when loading the module ("},{"type":"text","text":"ArgumentError: ref of NULL PyObject","style":{"code":true}},{"type":"text","text":").\n\nAm I correct that this assignment needs to be done in "},{"type":"text","text":"_","style":{"code":true}},{"type":"text","text":"init","style":{"italic":true,"code":true}},{"type":"text","text":"_","style":{"code":true}},{"type":"text","text":" as well? How can I ensure that "},{"type":"text","text":"chapter_ranges","style":{"code":true}},{"type":"text","text":" stays a "},{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":" in that case?"}]}]}],"thread_ts":"1613565996.053000","reply_count":19,"reply_users_count":3,"latest_reply":"1613570469.057800","reply_users":["B01J9QZ4SP8","U01CH1E238S","UH24GRBLL"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613565998.053100","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"d2140f95-ba7d-4fd4-bd9a-43b6803c52ee","type":"message","text":"In the MWE, I expect the following output:\n```julia&gt; using .MyModule\n\njulia&gt; MyModule.chapter_ranges\n3-element Array{UnitRange{Int64},1}:\n 1:139\n 140:239\n 240:279```","user":"U01CH1E238S","ts":"1613566296.053500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lTjd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In the MWE, I expect the following output:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using .MyModule\n\njulia> MyModule.chapter_ranges\n3-element Array{UnitRange{Int64},1}:\n 1:139\n 140:239\n 240:279"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"5f7856b7-4c09-4acc-a394-1d957d7acb51","type":"message","text":"you declare `python_code` to be `const` and set it to `PyNULL()` - since you marked it as `const`, the compiler is allowed to inline all accesses to that","user":"UH24GRBLL","ts":"1613566296.053700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ftk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you declare "},{"type":"text","text":"python_code","style":{"code":true}},{"type":"text","text":" to be "},{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":" and set it to "},{"type":"text","text":"PyNULL()","style":{"code":true}},{"type":"text","text":" - since you marked it as "},{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":", the compiler is allowed to inline all accesses to that"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S","reactions":[{"name":"thumbsup_all","users":["U01CH1E238S"],"count":1}]},{"client_msg_id":"4c6ade65-5085-463f-be83-dc6fb0201272","type":"message","text":"there should be some more information where the `ArgumentError` is thrown - I think it happens in `__init__` when you pass it to `copy!`","user":"UH24GRBLL","ts":"1613566566.053900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DXS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there should be some more information where the "},{"type":"text","text":"ArgumentError","style":{"code":true}},{"type":"text","text":" is thrown - I think it happens in "},{"type":"text","text":"__init__","style":{"code":true}},{"type":"text","text":" when you pass it to "},{"type":"text","text":"copy!","style":{"code":true}}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"618e8a73-22b6-49fb-9859-eef45035d27e","type":"message","text":"Sorry for the confusion, the error is thrown when pasting  (or including) the code in the REPL :grimacing:\n```ERROR: ArgumentError: ref of NULL PyObject\nStacktrace:\n [1] _getproperty at /home/elias/.julia/packages/PyCall/tqyST/src/PyCall.jl:299 [inlined]\n [2] __getproperty(::PyCall.PyObject, ::Symbol) at /home/elias/.julia/packages/PyCall/tqyST/src/PyCall.jl:306\n [3] getproperty(::PyCall.PyObject, ::Symbol) at /home/elias/.julia/packages/PyCall/tqyST/src/PyCall.jl:312\n [4] top-level scope at REPL[1]:22```\nI'm not entirely sure how to debug modules that use PyCall.jl.","user":"U01CH1E238S","ts":"1613567576.054300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cT/b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry for the confusion, the error is thrown when pasting  (or including) the code in the REPL "},{"type":"emoji","name":"grimacing"},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: ArgumentError: ref of NULL PyObject\nStacktrace:\n [1] _getproperty at /home/elias/.julia/packages/PyCall/tqyST/src/PyCall.jl:299 [inlined]\n [2] __getproperty(::PyCall.PyObject, ::Symbol) at /home/elias/.julia/packages/PyCall/tqyST/src/PyCall.jl:306\n [3] getproperty(::PyCall.PyObject, ::Symbol) at /home/elias/.julia/packages/PyCall/tqyST/src/PyCall.jl:312\n [4] top-level scope at REPL[1]:22"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not entirely sure how to debug modules that use PyCall.jl."}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"df56e352-5f92-4145-bfd5-1cd6a90901bb","type":"message","text":"I see","user":"UH24GRBLL","ts":"1613568124.054600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5q7lV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"082a2795-5bff-44b4-8148-cc5b0aef39ba","type":"message","text":"then it's `const chapter_ranges = get_range.(python_code.chapters)`","user":"UH24GRBLL","ts":"1613568137.054800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jzrV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then it's "},{"type":"text","text":"const chapter_ranges = get_range.(python_code.chapters)","style":{"code":true}}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"b463721e-cc1e-444d-9ed1-4b7432e527d3","type":"message","text":"this code runs before `__init__`","user":"UH24GRBLL","ts":"1613568146.055000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L8yv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this code runs before "},{"type":"text","text":"__init__","style":{"code":true}}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"5aea1ca7-d492-4b3a-93e4-0bb17be023d8","type":"message","text":"Yeah, that makes sense.","user":"U01CH1E238S","ts":"1613568342.055200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cLB4U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, that makes sense."}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"e266748b-ad68-4625-aa89-24b20c38b421","type":"message","text":"One idea was to place the assignment in `__init__`\n\n```julia&gt; module MyModule\n\n       using PyCall\n\n       const python_code = PyNULL()\n\n       function __init__()\n           py\"\"\"\n           class Code:\n               def __init__(self, file):\n                   # Read code chapters from a JSON file.\n                   self.chapters = [\"001-139\", \"140-239\", \"240-279\"] # Mocked\n           \"\"\"\n           copy!(python_code, py\"Code\"(\"somefile.json\"))\n           global chapter_ranges = get_range.(python_code.chapters)\n       end\n\n       function get_range(chapterrange)\n           lower, upper = parse.(Int, split(chapterrange, \"-\"))\n           return lower:upper\n       end\n\n       end # module\nMain.MyModule\n\njulia&gt; using .MyModule\n\njulia&gt; MyModule.chapter_ranges\n3-element Array{UnitRange{Int64},1}:\n 1:139\n 140:239\n 240:279```\nBut the variable is no longer `const`:\n```julia&gt; isconst(MyModule, :chapter_ranges)\nfalse```\n","user":"U01CH1E238S","ts":"1613568461.055400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S8Qg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One idea was to place the assignment in "},{"type":"text","text":"_","style":{"code":true}},{"type":"text","text":"init","style":{"italic":true,"code":true}},{"type":"text","text":"_","style":{"code":true}},{"type":"text","text":"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> module MyModule\n\n       using PyCall\n\n       const python_code = PyNULL()\n\n       function __init__()\n           py\"\"\"\n           class Code:\n               def __init__(self, file):\n                   # Read code chapters from a JSON file.\n                   self.chapters = [\"001-139\", \"140-239\", \"240-279\"] # Mocked\n           \"\"\"\n           copy!(python_code, py\"Code\"(\"somefile.json\"))\n           global chapter_ranges = get_range.(python_code.chapters)\n       end\n\n       function get_range(chapterrange)\n           lower, upper = parse.(Int, split(chapterrange, \"-\"))\n           return lower:upper\n       end\n\n       end # module\nMain.MyModule\n\njulia> using .MyModule\n\njulia> MyModule.chapter_ranges\n3-element Array{UnitRange{Int64},1}:\n 1:139\n 140:239\n 240:279"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"But the variable is no longer "},{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> isconst(MyModule, :chapter_ranges)\nfalse"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"6d1f7730-36b6-4d50-a095-7112b6efcdc2","type":"message","text":"yes","user":"UH24GRBLL","ts":"1613568521.055600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/Sg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"73e13b6e-b524-4c9d-92b2-e0c0979ba13d","type":"message","text":"what are you trying to achieve in the greater scheme of things?","user":"UH24GRBLL","ts":"1613568531.055800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AaI+E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what are you trying to achieve in the greater scheme of things?"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"78c71a14-704a-4bf7-aca3-3599abc4c71c","type":"message","text":"I'm processing <https://en.wikipedia.org/wiki/International_Classification_of_Diseases|ICD9-CM classification codes> found in the <https://mimic.physionet.org/|MIMIC-III dataset>.\nI'm using a <https://github.com/sirrice/icd9|Python library> to cluster related codes.\n\nIn this case, I want to find the <https://en.wikipedia.org/wiki/List_of_ICD-9_codes|chapter> that a specific code belongs to, something like:\n```\"401.9\" -&gt; \"401\" -&gt; \"390-459\"```\nThe Python library does offer some search functionality, but I want to see if I gain any performance by storing a list of these chapters explicitly in Julia, then looking up chapters with something like:\n```function findchaptercode(code)\n    code = first(code, 3)\n    chapteridx = findfirst(parse(Int, code) .∈ chapter_ranges)\n    return python_code.chapters[chapteridx]\nend```\n","user":"U01CH1E238S","ts":"1613569518.056000","team":"T68168MUP","attachments":[{"image_url":"https://upload.wikimedia.org/wikipedia/en/a/a5/ICD-11_Beta_browser_icon.png","image_width":32,"image_height":32,"image_bytes":619,"title":"International Classification of Diseases","title_link":"https://en.wikipedia.org/wiki/International_Classification_of_Diseases","from_url":"https://en.wikipedia.org/wiki/International_Classification_of_Diseases","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"The International Classification of Diseases (ICD) is a globally used diagnostic tool for epidemiology, health management and clinical purposes. The ICD is maintained by the World Health Organization (WHO), which is the directing and coordinating authority for health within the United Nations System. The ICD is originally designed as a health care classification system, providing a system of diagnostic codes for classifying diseases, including nuanced classifications of a wide variety of signs, symptoms, abnormal findings, complaints, social circumstances, and external causes of injury or disease. This system is designed to map health conditions to corresponding generic categories together with specific variations, assigning for these a designated code, up to six characters long. Thus, major categories are designed to include a set of similar diseases.\nThe ICD is published by the WHO and used worldwide for morbidity and mortality statistics, reimbursement systems, and automated decision support in health care. This system is designed to promote international comparability in the collection, processing, classification, and presentation of these statistics. Like the analogous Diagnostic and Statistical Manual of Mental Disorders (which is limited to psychiatric disorders and almost exclusive to the United States), the ICD is a major project to statistically classify all health disorders, and provide diagnostic assistance. The ICD is a core statistically based classificatory diagnostic system for health care related issues of the WHO Family of International Classifications (WHO-FIC).The ICD is revised periodically and is currently in its 10th revision. The ICD-10, as it is therefore known, was first released in 1992, and the WHO publishes annual minor updates and triennial major updates. The eleventh revision of the ICD, the ICD-11, was accepted by WHO's World Health Assembly (WHA) on 25 May 2019 and will officially come into effect on 1 January 2022. The version for preparation of approval at the WHA was released on 18 June 2018.The ICD is part of a \"family\" of international classifications (WHOFIC) that complement each other, also including the International Classification of Functioning, Disability and Health (ICF) which focuses on the domains of functioning (disability) associated with health conditions, from both medical and social perspectives, and the International Classification of Health Interventions (ICHI) that classifies the whole range of medical, nursing, functioning and public health interventions.","fallback":"wikipedia: International Classification of Diseases","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.wikipedia.org/wiki/International_Classification_of_Diseases"},{"title":"MIMIC Critical Care Database","title_link":"https://mimic.physionet.org/","text":"Freely available critical care data for researchers.","fallback":"MIMIC Critical Care Database","thumb_url":"http://mimic.physionet.org/img/header.jpg","from_url":"https://mimic.physionet.org/","thumb_width":1944,"thumb_height":2592,"service_icon":"https://mimic.physionet.org/apple-touch-icon.png","service_name":"mimic.physionet.org","id":2,"original_url":"https://mimic.physionet.org/"},{"title":"List of ICD-9 codes","title_link":"https://en.wikipedia.org/wiki/List_of_ICD-9_codes","from_url":"https://en.wikipedia.org/wiki/List_of_ICD-9_codes","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"The following is a list of codes for International Statistical Classification of Diseases and Related Health Problems.\nList of ICD-9 codes 001–139: infectious and parasitic diseases\nList of ICD-9 codes 140–239: neoplasms\nList of ICD-9 codes 240–279: endocrine, nutritional and metabolic diseases, and immunity disorders\nList of ICD-9 codes 280–289: diseases of the blood and blood-forming organs\nList of ICD-9 codes 290–319: mental disorders\nList of ICD-9 codes 320–389: diseases of the nervous system and sense organs\nList of ICD-9 codes 390–459: diseases of the circulatory system\nList of ICD-9 codes 460–519: diseases of the respiratory system\nList of ICD-9 codes 520–579: diseases of the digestive system\nList of ICD-9 codes 580–629: diseases of the genitourinary system\nList of ICD-9 codes 630–679: complications of pregnancy, childbirth, and the puerperium\nList of ICD-9 codes 680–709: diseases of the skin and subcutaneous tissue\nList of ICD-9 codes 710–739: diseases of the musculoskeletal system and connective tissue\nList of ICD-9 codes 740–759: congenital anomalies\nList of ICD-9 codes 760–779: certain conditions originating in the perinatal period\nList of ICD-9 codes 780–799: symptoms, signs, and ill-defined conditions\nList of ICD-9 codes 800–999: injury and poisoning\nList of ICD-9 codes E and V codes: external causes of injury and supplemental classification","fallback":"wikipedia: List of ICD-9 codes","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":3,"original_url":"https://en.wikipedia.org/wiki/List_of_ICD-9_codes"}],"blocks":[{"type":"rich_text","block_id":"n9M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm processing "},{"type":"link","url":"https://en.wikipedia.org/wiki/International_Classification_of_Diseases","text":"ICD9-CM classification codes"},{"type":"text","text":" found in the "},{"type":"link","url":"https://mimic.physionet.org/","text":"MIMIC-III dataset"},{"type":"text","text":".\nI'm using a "},{"type":"link","url":"https://github.com/sirrice/icd9","text":"Python library"},{"type":"text","text":" to cluster related codes.\n\nIn this case, I want to find the "},{"type":"link","url":"https://en.wikipedia.org/wiki/List_of_ICD-9_codes","text":"chapter"},{"type":"text","text":" that a specific code belongs to, something like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\"401.9\" -> \"401\" -> \"390-459\""}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The Python library does offer some search functionality, but I want to see if I gain any performance by storing a list of these chapters explicitly in Julia, then looking up chapters with something like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function findchaptercode(code)\n    code = first(code, 3)\n    chapteridx = findfirst(parse(Int, code) .∈ chapter_ranges)\n    return python_code.chapters[chapteridx]\nend"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"4adbf076-25cb-4e54-bcdd-32abad713525","type":"message","text":"I guess my concern is whether there are any performance penalties when calling something like `findchaptercode` with `chaper_ranges` set with `global` instead of `const`?","user":"U01CH1E238S","ts":"1613569945.056300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OgBe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess my concern is whether there are any performance penalties when calling something like "},{"type":"text","text":"findchaptercode","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"chaper_ranges","style":{"code":true}},{"type":"text","text":" set with "},{"type":"text","text":"global","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"1d2f7ac9-97bd-4cbe-9735-98226d00f887","type":"message","text":"yes, global variables incur dynamic lookups, since they can change value or type at any time","user":"UH24GRBLL","ts":"1613570346.056500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a+PX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, global variables incur dynamic lookups, since they can change value or type at any time"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"b69c8240-c653-4661-bf0b-c36145195e18","type":"message","text":"from what I can tell, this ICD9 classification package is just a Trie data structure","user":"UH24GRBLL","ts":"1613570413.056700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UFo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"from what I can tell, this ICD9 classification package is just a Trie data structure"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"474208e2-f3c4-4615-8517-6dcd51fad1ae","type":"message","text":"Yup","user":"U01CH1E238S","ts":"1613570430.056900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/G9i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yup"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"cca722e4-acd9-4564-aa72-257c22881cc1","type":"message","text":"I guess my question is why call into python at all?","user":"UH24GRBLL","ts":"1613570452.057500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VL0Ps","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess my question is why call into python at all?"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"},{"client_msg_id":"3bb95c1e-c219-43a1-8618-a25609d92d3e","type":"message","text":"there's DataStructures.jl which has a Trie and there's JSON3.jl which reads JSON","user":"UH24GRBLL","ts":"1613570469.057800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mltTy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's DataStructures.jl which has a Trie and there's JSON3.jl which reads JSON"}]}]}],"thread_ts":"1613565996.053000","parent_user_id":"U01CH1E238S"}]