[{"client_msg_id":"490b9cc0-caac-4a13-9e1a-2d9a87899afd","type":"message","text":"Does anyone have a quick guide on the benefits of `Ref()` vs. `const` for gvars? I remember reading about using `Ref` instead, but can’t seem to find anything.","user":"ULDQSHD41","ts":"1609799706.220600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3qHc8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone have a quick guide on the benefits of "},{"type":"text","text":"Ref()","style":{"code":true}},{"type":"text","text":" vs. "},{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":" for gvars? I remember reading about using "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" instead, but can’t seem to find anything."}]}]}],"thread_ts":"1609799706.220600","reply_count":9,"reply_users_count":3,"latest_reply":"1609801254.222800","reply_users":["U680THK2S","ULDQSHD41","U7HAYKY9X"],"subscribed":false},{"client_msg_id":"b936fc20-40bb-4241-8b27-85c7ca2c1d16","type":"message","text":"I don't think it's an either/or kind of situation; the benefit of `Ref` for global variables is that it allows you to declare them constant but still allows you to mutate the contents.","user":"U680THK2S","ts":"1609799866.220800","team":"T68168MUP","edited":{"user":"U680THK2S","ts":"1609799886.000000"},"blocks":[{"type":"rich_text","block_id":"Nrh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think it's an either/or kind of situation; the benefit of "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" for global variables is that it allows you to declare them constant but still allows you to mutate the contents."}]}]}],"thread_ts":"1609799706.220600","parent_user_id":"ULDQSHD41","reactions":[{"name":"point_up","users":["U6NFPDBV1","U7HAYKY9X","U9MED583T"],"count":3}]},{"client_msg_id":"562352e4-1653-42e4-a210-9d436553b480","type":"message","text":"Right. I guess if you want to initialize some globals which can be modified throughout using a `Ref` makes sense.\n\nIn other situations such as wanting something to truly be a constant, is there any real difference? Or just comes down to preference? This also isn’t used in any high-performance contexts.","user":"ULDQSHD41","ts":"1609800163.221300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bevWP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right. I guess if you want to initialize some globals which can be modified throughout using a "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" makes sense.\n\nIn other situations such as wanting something to truly be a constant, is there any real difference? Or just comes down to preference? This also isn’t used in any high-performance contexts."}]}]}],"thread_ts":"1609799706.220600","parent_user_id":"ULDQSHD41"},{"client_msg_id":"b5cbbe31-c0c4-43f0-aaff-ac2911580271","type":"message","text":"I'm not sure I understand the question. You're wondering whether\n```const This = something```\nor\n```const That = Ref(something)```\nis preferred?","user":"U680THK2S","ts":"1609800814.221500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9ph4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure I understand the question. You're wondering whether\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"const This = something"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"or\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"const That = Ref(something)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"is preferred?"}]}]}],"thread_ts":"1609799706.220600","parent_user_id":"ULDQSHD41"},{"client_msg_id":"62bf010e-b38d-4621-824d-8ae04569caac","type":"message","text":"Yeah, say I want to define something like;\n\n```const LIMIT = 100\nLIMIT = Ref(100)```\nIt’s never going to be modified, and just used in a general sense where having a balance between performance and code readability is needed.","user":"ULDQSHD41","ts":"1609801013.221700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4iy3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, say I want to define something like;\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"const LIMIT = 100\nLIMIT = Ref(100)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIt’s never going to be modified, and just used in a general sense where having a balance between performance and code readability is needed."}]}]}],"thread_ts":"1609799706.220600","parent_user_id":"ULDQSHD41","reactions":[{"name":"one","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"91bdc940-0631-443f-8c37-15163a615339","type":"message","text":"In general, if something isn't supposed to be mutated, its best to leave it immutable. It's easier both for humans and compilers to reason about","user":"U7HAYKY9X","ts":"1609801027.221900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EC2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In general, if something isn't supposed to be mutated, its best to leave it immutable. It's easier both for humans and compilers to reason about"}]}]}],"thread_ts":"1609799706.220600","parent_user_id":"ULDQSHD41","reactions":[{"name":"ty","users":["ULDQSHD41"],"count":1}]},{"client_msg_id":"7f6d9aa0-4f68-4de1-a6dc-7e755c6ac9c5","type":"message","text":"If `LIMIT` is a non-constant global variable, `Ref` doesn't really buy you anything, since you can redefine non-constant variables all willy-nilly","user":"U680THK2S","ts":"1609801087.222200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mqa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If "},{"type":"text","text":"LIMIT","style":{"code":true}},{"type":"text","text":" is a non-constant global variable, "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" doesn't really buy you anything, since you can redefine non-constant variables all willy-nilly"}]}]}],"thread_ts":"1609799706.220600","parent_user_id":"ULDQSHD41","reactions":[{"name":"ty","users":["ULDQSHD41"],"count":1}]},{"client_msg_id":"e386ee4a-bb54-468a-8ad4-fe072a075f81","type":"message","text":"If it's never going to be modified, just `const` it without a `Ref`","user":"U680THK2S","ts":"1609801109.222400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eZlp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it's never going to be modified, just "},{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":" it without a "},{"type":"text","text":"Ref","style":{"code":true}}]}]}],"thread_ts":"1609799706.220600","parent_user_id":"ULDQSHD41","reactions":[{"name":"ty","users":["ULDQSHD41"],"count":1}]},{"client_msg_id":"a0548b1a-407b-4634-a25c-a96555deff19","type":"message","text":"I guess I can rephrase this as,\n\nDoes `Ref` have some witchcraft C benefits where it’s performance outruns `const` where it should be used for true constants as a blanket statement?\n\nOr does it really come down to the situational usage of this variable","user":"ULDQSHD41","ts":"1609801176.222600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9P/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I can rephrase this as,\n\nDoes "},{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" have some witchcraft C benefits where it’s performance outruns "},{"type":"text","text":"const","style":{"code":true}},{"type":"text","text":" where it should be used for true constants as a blanket statement?\n\nOr does it really come down to the situational usage of this variable"}]}]}],"thread_ts":"1609799706.220600","parent_user_id":"ULDQSHD41"},{"client_msg_id":"26445d26-4d3a-4459-b971-e758cbd03b84","type":"message","text":"No, there is no such magic.","user":"U7HAYKY9X","ts":"1609801254.222800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aXUy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, there is no such magic."}]}]}],"thread_ts":"1609799706.220600","parent_user_id":"ULDQSHD41","reactions":[{"name":"heavy_check_mark","users":["U680THK2S"],"count":1}]}]