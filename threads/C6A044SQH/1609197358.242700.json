[{"client_msg_id":"420B344C-2CB0-4BF5-8552-D4075AF2F2CC","type":"message","text":"I have a dictionary of moving particles from which I want to delete any that collide, which they do whenever one particle wants to move into the coordinates occupied by another one in a volume represented by a 3D integer array.  Empty coordinates are 0, and particles check this value before ‘entering’ them by changing it to their integer key in the dictionary.\n\nMy problem is that the number of particle collisions when I run my simulation with 1000 initial particles is too high—around 700 rather than 500.  I wonder if I’m not reliably deleting particles or something.  Here’s my deleting code:\n\n```for (p, particle in particles)\n    ...\n    x, y, z = new_coordinates\n    if volume[x,y,z] != 0\n        delete!(particles, key)\n        delete!(particles, volume[x,y,z])\n    else\n        ...\n    end\n...\nend```","user":"U01GC3N3ZJT","ts":"1609197358.242700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Moj2v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a dictionary of moving particles from which I want to delete any that collide, which they do whenever one particle wants to move into the coordinates occupied by another one in a volume represented by a 3D integer array.  Empty coordinates are 0, and particles check this value before ‘entering’ them by changing it to their integer key in the dictionary.\n"},{"type":"text","text":"\n"},{"type":"text","text":"My problem is that the number of particle collisions when I run my simulation with 1000 initial particles is too high—around 700 rather than 500.  I wonder if I’m not reliably deleting particles or something.  Here’s my deleting code:\n"},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for (p, particle in particles)\n"},{"type":"text","text":"    ...\n"},{"type":"text","text":"    x, y, z = new_coordinates\n"},{"type":"text","text":"    if volume[x,y,z] != 0\n"},{"type":"text","text":"        delete!(particles, key)\n"},{"type":"text","text":"        delete!(particles, volume[x,y,z])\n"},{"type":"text","text":"    else\n"},{"type":"text","text":"        ...\n"},{"type":"text","text":"    end\n"},{"type":"text","text":"...\n"},{"type":"text","text":"end"}]}]}],"thread_ts":"1609197358.242700","reply_count":61,"reply_users_count":3,"latest_reply":"1609709530.131400","reply_users":["USU9FRPEU","U01GC3N3ZJT","U011PC32QDD"],"subscribed":false},{"client_msg_id":"03f1f44a-16a5-4798-abe7-200dd2b7f48e","type":"message","text":"Why do you have two `delete!` statements? How is your dictionary `particles` defined? The second argument of `delete!` should only be the dictionary key. Isn't `volume[x,y,z]` a binary value?","user":"USU9FRPEU","ts":"1609223282.245100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rhl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why do you have two "},{"type":"text","text":"delete!","style":{"code":true}},{"type":"text","text":" statements? How is your dictionary "},{"type":"text","text":"particles","style":{"code":true}},{"type":"text","text":" defined? The second argument of "},{"type":"text","text":"delete!","style":{"code":true}},{"type":"text","text":" should only be the dictionary key. Isn't "},{"type":"text","text":"volume[x,y,z]","style":{"code":true}},{"type":"text","text":" a binary value?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"1EE512E6-65E9-4970-8A92-0A86FF9F9BF8","type":"message","text":"<@USU9FRPEU> Glad to hear from you!  My simulation moves the particles in three steps for each particle.  First, it generates new_coordinates by taking a one-step random walk.  Then, if those coordinates are inside a wall and, it resets them to the current coordinates of the particle. Last, it checks the value of volume at the coordinates; if the value is zero, it changes that value to the key of the particle; else, it deletes the particle with key p and the particle with the key equal to the value of volume at x,y,z.\n\nThe dictionary of particles is defined as a number of random walkers with keys from 1 to the number of walkers.  Volume is a 3D array of integers, so volume[x,y,z] shouldn’t be binary, right?","user":"U01GC3N3ZJT","ts":"1609252281.268100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vuu","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":" Glad to hear from you!  My simulation moves the particles in three steps for each particle.  First, it generates new_coordinates by taking a one-step random walk.  Then, if those coordinates are inside a wall and, it resets them to the current coordinates of the particle. Last, it checks the value of volume at the coordinates; if the value is zero, it changes that value to the key of the particle; else, it deletes the particle with key p and the particle with the key equal to the value of volume at x,y,z.\n\n"},{"type":"text","text":"The dictionary of particles is defined as a number of random walkers with keys from 1 to the number of walkers.  Volume is a 3D array of integers, so volume[x,y,z] shouldn’t be binary, right?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"b684525d-eec5-4daf-bf9b-bf62eac1e5a0","type":"message","text":"OK, I see. You are deleting two particles. The one currently being considered and the one it collided with.","user":"USU9FRPEU","ts":"1609252511.268300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Dx+w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, I see. You are deleting two particles. The one currently being considered and the one it collided with."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"84f0e022-c9f5-4980-a7e4-fb9e7d1a0dff","type":"message","text":"The value of `volume[x,y,z]` is the the particle label?","user":"USU9FRPEU","ts":"1609252563.268500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hBuM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The value of "},{"type":"text","text":"volume[x,y,z]","style":{"code":true}},{"type":"text","text":" is the the particle label?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"2f156cc8-62f0-49f0-b51c-e8e8241d1ec8","type":"message","text":"Hmm.. but you are manipulating the dictionary while you are iterating over it.","user":"USU9FRPEU","ts":"1609252659.268700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"22nBK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm.. but you are manipulating the dictionary while you are iterating over it."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT","reactions":[{"name":"point_up","users":["UN45LV5K6","U01GC3N3ZJT"],"count":2}]},{"client_msg_id":"e057366f-0b0f-4932-ab5d-c8d228a4a16a","type":"message","text":"I don't think that's a good idea.","user":"USU9FRPEU","ts":"1609252720.268900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XLrQ3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think that's a good idea."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"81644978-5e93-490a-8c16-9ea0b60f37b6","type":"message","text":"```julia&gt; d = Dict(i =&gt; i for i in 1:5)\nDict{Int64,Int64} with 5 entries:\n  4 =&gt; 4\n  2 =&gt; 2\n  3 =&gt; 3\n  5 =&gt; 5\n  1 =&gt; 1\n\njulia&gt; for (k,v) in d\n           delete!(d, v+1)\n           println(v)\n       end\n4\n2\n1```","user":"USU9FRPEU","ts":"1609252877.269100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O7/N","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> d = Dict(i => i for i in 1:5)\nDict{Int64,Int64} with 5 entries:\n  4 => 4\n  2 => 2\n  3 => 3\n  5 => 5\n  1 => 1\n\njulia> for (k,v) in d\n           delete!(d, v+1)\n           println(v)\n       end\n4\n2\n1"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"0B5122A8-2638-45A4-B3C8-F5A27DDEDA09","type":"message","text":"I was worried about this and have tried a different version of your example:\n\n```letters = [“a”, “b”, “c”, “d”, “e”]\nnumbers = [i for i in 1:10]\ndictionary = Dict(number =&gt; letter for (number, letter) in zip(numbers, letters)]\n\nDict(Int64,String) with 5 entries: \n  4 =&gt; “d”\n  2 =&gt; “b”\n  3 =&gt; “c”\n  5 =&gt; “e”\n  1 =&gt; “a”\n\nfor (key, value) in dictionary\n    delete!(dictionary, key+1)\n    println(value)\nend\n\nd\nb\na\n```","user":"U01GC3N3ZJT","ts":"1609273279.306100","team":"T68168MUP","edited":{"user":"U01GC3N3ZJT","ts":"1609273284.000000"},"blocks":[{"type":"rich_text","block_id":"f8pDA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was worried about this and have tried a different version of your example:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"letters = [“a”, “b”, “c”, “d”, “e”]\nnumbers = [i for i in 1:10]\ndictionary = Dict(number => letter for (number, letter) in zip(numbers, letters)]\n\nDict(Int64,String) with 5 entries: \n  4 => “d”\n  2 => “b”\n  3 => “c”\n  5 => “e”\n  1 => “a”\n\nfor (key, value) in dictionary\n    delete!(dictionary, key+1)\n    println(value)\nend\n\nd\nb\na"},{"type":"text","text":"\n"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"57497F7D-1AAC-4C39-88D7-5985B075D68D","type":"message","text":"Maybe I should instead push the keys of the colliding particles to an array and delete them all later.","user":"U01GC3N3ZJT","ts":"1609273551.308500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MTV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe I should instead push the keys of the colliding particles to an array and delete them all later."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"25392cce-f13e-49af-ae6e-f348ed15c7a1","type":"message","text":"Or you could copy the keys of the dictionary before iterating over them","user":"USU9FRPEU","ts":"1609274666.309300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5D2c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or you could copy the keys of the dictionary before iterating over them"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"DCF2DA16-3CD5-4438-BD78-BFCDB75F4710","type":"message","text":"That works, too!  If I did it the first way, would this loop delete all the colliding particles from the dictionary?\n\n```for key in colliding_particles\n    delete!(particle_dictionary, key)\nend```","user":"U01GC3N3ZJT","ts":"1609275142.315900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zEeP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That works, too!  If I did it the first way, would this loop delete all the colliding particles from the dictionary?\n"},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"for key in colliding_particles\n"},{"type":"text","text":"    delete!(particle_dictionary, key)\n"},{"type":"text","text":"end"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"1f8a7f6d-0edb-4d6d-8b93-556d484a3516","type":"message","text":"I think so","user":"USU9FRPEU","ts":"1609275282.316400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yQ4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think so"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"3A925488-CD8D-447C-A781-C5FE227EFE6B","type":"message","text":"The plot thickens... \n\nI tried deleting the particles in one pass and saw the same result, so I returned to my previous implementation, added some inline error logging, and discovered something bizarre.  The environment value was the same as the key of the reagent I wanted to delete!","user":"U01GC3N3ZJT","ts":"1609347177.364900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DCxj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The plot thickens... \n"},{"type":"text","text":"\n"},{"type":"text","text":"I tried deleting the particles in one pass and saw the same result, so I returned to my previous implementation, added some inline error logging, and discovered something bizarre.  The environment value was the same as the key of the reagent I wanted to delete!"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"f33bb41e-ed18-4eb1-a512-6bab89c418ee","type":"message","text":"This is not directly related to your initial question, but is there any reason you are using dictionaries to represent the particles rather than simply using arrays, e.g., `3 x n` sized arrays to represent position for `n` particles? This should help performance, especially if you are simulating a large number of particles.\n\nI also second your comment to keep a second array around to track at each iteration which particles collide. Consider using `deleteat!` whose second argument could take as an argument a binary list of which particles have collided, e.g., 0 for no collision and 1 for a collision (see documentation at <https://docs.julialang.org/en/v1/base/collections/#Base.deleteat><https://docs.julialang.org/en/v1/base/collections/#Base.deleteat!|!>). Rather than deleting colliding particles one-by-one, this would delete _all_ colliding particles at once during each iteration.","user":"U011PC32QDD","ts":"1609362812.368300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4fL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is not directly related to your initial question, but is there any reason you are using dictionaries to represent the particles rather than simply using arrays, e.g., "},{"type":"text","text":"3 x n","style":{"code":true}},{"type":"text","text":" sized arrays to represent position for "},{"type":"text","text":"n","style":{"code":true}},{"type":"text","text":" particles? This should help performance, especially if you are simulating a large number of particles.\n\nI also second your comment to keep a second array around to track at each iteration which particles collide. Consider using "},{"type":"text","text":"deleteat!","style":{"code":true}},{"type":"text","text":" whose second argument could take as an argument a binary list of which particles have collided, e.g., 0 for no collision and 1 for a collision (see documentation at "},{"type":"link","url":"https://docs.julialang.org/en/v1/base/collections/#Base.deleteat"},{"type":"link","url":"https://docs.julialang.org/en/v1/base/collections/#Base.deleteat!","text":"!"},{"type":"text","text":"). Rather than deleting colliding particles one-by-one, this would delete "},{"type":"text","text":"all","style":{"italic":true}},{"type":"text","text":" colliding particles at once during each iteration."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"932E90BE-A035-4D83-B862-3867A4CA035B","type":"message","text":"I use a dictionary to store the particles because I need to know which one to delete if two collide, and the simulation detects collision by checking if the element of the volume corresponding to its new coordinates has a key recorded there.  If not, the program moves the particle there and records its key there.  If so, the program deletes the particle with the key it finds, alongside the current particle.","user":"U01GC3N3ZJT","ts":"1609364126.377100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lMDs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I use a dictionary to store the particles because I need to know which one to delete if two collide, and the simulation detects collision by checking if the element of the volume corresponding to its new coordinates has a key recorded there.  If not, the program moves the particle there and records its key there.  If so, the program deletes the particle with the key it finds, alongside the current particle."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"8a5b6f95-35d0-4499-a989-2d27c6fe7419","type":"message","text":"I'm guessing that your simulation space is also pretty sparse?","user":"USU9FRPEU","ts":"1609364182.377300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dQz+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm guessing that your simulation space is also pretty sparse?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"765A0670-A96D-41A5-8AE9-C7B481E19023","type":"message","text":"1000 times more empty spaces than full ones.","user":"U01GC3N3ZJT","ts":"1609364213.378100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"27Ji","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1000 times more empty spaces than full ones."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"06fe86e6-b236-47a7-8e28-d908d96dfc38","type":"message","text":"Technically, you could use a `CartesianIndex` as a \"key\" on a dense array, but that would be a waste of memory.","user":"USU9FRPEU","ts":"1609364400.378300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HgG5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Technically, you could use a "},{"type":"text","text":"CartesianIndex","style":{"code":true}},{"type":"text","text":" as a \"key\" on a dense array, but that would be a waste of memory."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"4300f613-2c7e-4a29-b36b-11391ec89d85","type":"message","text":"I was thinking about your simulation, and I was wondering if should divide it into several discrete steps:\n1. Have all particles take a random step, don't delete anything yet.\n2. Detect collisions for all particles\n3. Delete collided particles\n","user":"USU9FRPEU","ts":"1609364551.378500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o9XA5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was thinking about your simulation, and I was wondering if should divide it into several discrete steps:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Have all particles take a random step, don't delete anything yet."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Detect collisions for all particles"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Delete collided particles"}]}],"style":"ordered","indent":0},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"209eb088-1c42-49f9-8c59-385c9f274af8","type":"message","text":"If I understand what you described, you were iterating over particles while doing each of these steps. The difference is that maybe you should move all the particles first, before making any collision decisions.","user":"USU9FRPEU","ts":"1609364594.378700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HjUjT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I understand what you described, you were iterating over particles while doing each of these steps. The difference is that maybe you should move all the particles first, before making any collision decisions."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"7bb175ef-6dbf-4923-8086-446a62491231","type":"message","text":"To implement this, the values of your dictionary should be stack structures, or maybe just a vector will do. When you make a move, you pop the particle from the location dict, and push it back on the location dict to its new location.\n\nTo detect collisions, you check which locations have more than one particle, and then you delete them.","user":"USU9FRPEU","ts":"1609364843.378900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jxvy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To implement this, the values of your dictionary should be stack structures, or maybe just a vector will do. When you make a move, you pop the particle from the location dict, and push it back on the location dict to its new location.\n\nTo detect collisions, you check which locations have more than one particle, and then you delete them."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"B90CA1D0-07FE-4591-A0A3-52950BDFE47D","type":"message","text":"<@USU9FRPEU> Thanks so much!  By a location dictionary, I imagine you mean that I should have a dictionary keyed to every possible location in my volume, its values being stacks onto which I could push or pop particles?  I could check the stack size after each push and pop, track which stacks had more than one element, and then delete the elements at those stacks!","user":"U01GC3N3ZJT","ts":"1609368005.389600","team":"T68168MUP","edited":{"user":"U01GC3N3ZJT","ts":"1609368073.000000"},"blocks":[{"type":"rich_text","block_id":"UOI","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":" Thanks so much!  By a location dictionary, I imagine you mean that I should have a dictionary keyed to every possible location in my volume, its values being stacks onto which I could push or pop particles?  I could check the stack size after each push and pop, track which stacks had more than one element, and then delete the elements at those stacks!"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"1f3ec7fa-e7d2-4386-8f3f-3a01ddb27b72","type":"message","text":"Well you only needs the keys where there are particles.","user":"USU9FRPEU","ts":"1609368074.390100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7LNdi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well you only needs the keys where there are particles."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"D62737C2-B3E1-48DF-B36F-DC8DA86630F2","type":"message","text":"This is new magic to me.  Would you please explain how this works?","user":"U01GC3N3ZJT","ts":"1609368096.390800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7=8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is new magic to me.  Would you please explain how this works?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"66c50b80-d8ab-499d-a573-d979a3555668","type":"message","text":"```julia&gt; location_dict[ CartesianIndex(100,31,50) ] = [25]\n1-element Array{Int64,1}:\n 25```","user":"USU9FRPEU","ts":"1609368212.391200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x7X5","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> location_dict[ CartesianIndex(100,31,50) ] = [25]\n1-element Array{Int64,1}:\n 25"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"1ed04c53-340d-4d4b-942d-96e6fdd6b492","type":"message","text":"So I've initialized my simulation with one particle (label 25) at (x=100, y=31, z=50)","user":"USU9FRPEU","ts":"1609368263.391600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"11g0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I've initialized my simulation with one particle (label 25) at (x=100, y=31, z=50)"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"30e73769-9c6b-468b-9fd6-ce628231849d","type":"message","text":"```julia&gt; location_dict[ CartesianIndex(100,30,50) ] = [42]\n1-element Array{Int64,1}:\n 42```\nNow I have another particle (label 42) at (x=100, y=30, z=50)","user":"USU9FRPEU","ts":"1609368309.392100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zgY5s","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> location_dict[ CartesianIndex(100,30,50) ] = [42]\n1-element Array{Int64,1}:\n 42"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Now I have another particle (label 42) at (x=100, y=30, z=50)"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"59ed39c1-af4d-46aa-a29d-0de6c4960b3c","type":"message","text":"I might need the reverse dictionary just for convenience:\n```julia&gt; particle_dict = Dict(reverse.(collect( location_dict )))\nDict{Array{Int64,1},CartesianIndex{3}} with 2 entries:\n  [25] =&gt; CartesianIndex(100, 31, 50)\n  [42] =&gt; CartesianIndex(100, 30, 50)```","user":"USU9FRPEU","ts":"1609368402.392300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9V82+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I might need the reverse dictionary just for convenience:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> particle_dict = Dict(reverse.(collect( location_dict )))\nDict{Array{Int64,1},CartesianIndex{3}} with 2 entries:\n  [25] => CartesianIndex(100, 31, 50)\n  [42] => CartesianIndex(100, 30, 50)"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"2fabc1bf-0e21-4fdd-a12f-a44515e2d478","type":"message","text":"eh you probably would want to unwrap that particle label... but this works for now","user":"USU9FRPEU","ts":"1609368468.392500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uPb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"eh you probably would want to unwrap that particle label... but this works for now"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"52235a48-befb-424b-b999-9a10f2470a2a","type":"message","text":"Now let's say in the move phase of the simulation, they both \"randomly\" walk to `(100,31,49)`","user":"USU9FRPEU","ts":"1609368508.392700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m6i4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Now let's say in the move phase of the simulation, they both \"randomly\" walk to "},{"type":"text","text":"(100,31,49)","style":{"code":true}}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"b6dbb316-06a8-416e-b791-d67d41567bc5","type":"message","text":"```julia&gt; destination = get(location_dict, CartesianIndex(100,31,49), Int[])\nInt64[]\n\njulia&gt; push!(destination, pop!(location_dict[ CartesianIndex(100,31,50) ]) )\n1-element Array{Int64,1}:\n 25\n\njulia&gt; push!(destination, pop!(location_dict[ CartesianIndex(100,30,50) ]) )\n2-element Array{Int64,1}:\n 25\n 42```\n","user":"USU9FRPEU","ts":"1609368650.393100","team":"T68168MUP","edited":{"user":"USU9FRPEU","ts":"1609368665.000000"},"blocks":[{"type":"rich_text","block_id":"dSp2","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> destination = get(location_dict, CartesianIndex(100,31,49), Int[])\nInt64[]\n\njulia> push!(destination, pop!(location_dict[ CartesianIndex(100,31,50) ]) )\n1-element Array{Int64,1}:\n 25\n\njulia> push!(destination, pop!(location_dict[ CartesianIndex(100,30,50) ]) )\n2-element Array{Int64,1}:\n 25\n 42"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"bef5bfde-01c1-4e69-9d2e-7582416db91e","type":"message","text":"```julia&gt; location_dict[ CartesianIndex(100,31,49) ] = destination\n2-element Array{Int64,1}:\n 25\n 42\n\njulia&gt; location_dict\nDict{CartesianIndex{3},Array{Int64,1}} with 3 entries:\n  CartesianIndex(100, 31, 50) =&gt; Int64[]\n  CartesianIndex(100, 31, 49) =&gt; [25, 42]\n  CartesianIndex(100, 30, 50) =&gt; Int64[]```","user":"USU9FRPEU","ts":"1609368727.393400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lmV=","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> location_dict[ CartesianIndex(100,31,49) ] = destination\n2-element Array{Int64,1}:\n 25\n 42\n\njulia> location_dict\nDict{CartesianIndex{3},Array{Int64,1}} with 3 entries:\n  CartesianIndex(100, 31, 50) => Int64[]\n  CartesianIndex(100, 31, 49) => [25, 42]\n  CartesianIndex(100, 30, 50) => Int64[]"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"d462fb93-b1d5-4414-8c3a-9ddd735d7f4a","type":"message","text":"Let's clean out the empty locations first:\n```julia&gt; filter!(pair-&gt;!isempty(pair.second), location_dict)\nDict{CartesianIndex{3},Array{Int64,1}} with 1 entry:\n  CartesianIndex(100, 31, 49) =&gt; [25, 42]```","user":"USU9FRPEU","ts":"1609368849.394000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YsB0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's clean out the empty locations first:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> filter!(pair->!isempty(pair.second), location_dict)\nDict{CartesianIndex{3},Array{Int64,1}} with 1 entry:\n  CartesianIndex(100, 31, 49) => [25, 42]"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"5a26a563-2c84-4ea4-9b68-47598c6b218c","type":"message","text":"one second... need to get a compile going","user":"USU9FRPEU","ts":"1609369015.394200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Jp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"one second... need to get a compile going"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"5831ef01-bafc-48e5-a4db-fe954c4494ae","type":"message","text":"For the sake of illustration, let's say there is an additional particle (label 1) at (1,1,1):\n```julia&gt; location_dict[ CartesianIndex(1, 1, 1)] = [1]\n1-element Array{Int64,1}:\n 1```","user":"USU9FRPEU","ts":"1609369129.394400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"63SV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For the sake of illustration, let's say there is an additional particle (label 1) at (1,1,1):\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> location_dict[ CartesianIndex(1, 1, 1)] = [1]\n1-element Array{Int64,1}:\n 1"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"07d0bc42-2ee5-48ae-a6c8-05f8cf12797a","type":"message","text":"```julia&gt; location_dict\nDict{CartesianIndex{3},Array{Int64,1}} with 2 entries:\n  CartesianIndex(1, 1, 1)     =&gt; [1]\n  CartesianIndex(100, 31, 49) =&gt; [25, 42]```","user":"USU9FRPEU","ts":"1609369144.394600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kKUD","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> location_dict\nDict{CartesianIndex{3},Array{Int64,1}} with 2 entries:\n  CartesianIndex(1, 1, 1)     => [1]\n  CartesianIndex(100, 31, 49) => [25, 42]"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"0ca721f2-1776-4416-81c2-ac6686fa4843","type":"message","text":"So the world looks like this at the moment. Particle #1 is far away. Particles 25 and 42 have collided.","user":"USU9FRPEU","ts":"1609369162.394800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YaXX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the world looks like this at the moment. Particle #1 is far away. Particles 25 and 42 have collided."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"221687aa-ef40-4286-8cf7-11a63ca8d6bf","type":"message","text":"Now we want to find the collided particles in phase 2 of the simulation.","user":"USU9FRPEU","ts":"1609369189.395000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OCgs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Now we want to find the collided particles in phase 2 of the simulation."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"0e180846-a67a-4867-a907-850794b6c693","type":"message","text":"```julia&gt; collision_locations = filter(pair-&gt;length(pair.second) &gt; 1, location_dict)\nDict{CartesianIndex{3},Array{Int64,1}} with 1 entry:\n  CartesianIndex(100, 31, 49) =&gt; [25, 42]```","user":"USU9FRPEU","ts":"1609369210.395200","team":"T68168MUP","edited":{"user":"USU9FRPEU","ts":"1609369243.000000"},"blocks":[{"type":"rich_text","block_id":"G9f","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> collision_locations = filter(pair->length(pair.second) > 1, location_dict)\nDict{CartesianIndex{3},Array{Int64,1}} with 1 entry:\n  CartesianIndex(100, 31, 49) => [25, 42]"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"c58ed4d8-7c53-4ba7-8daf-bd26e6b47ce1","type":"message","text":"Let's say we wanted a list of the collided particles in phase 2:\n```julia&gt; collided_particles = Int[]\nInt64[]\n\njulia&gt; [ append!(collided_particles, pop!(location_dict,k) ) for (k,v) in collision_locations ]\n1-element Array{Array{Int64,1},1}:\n [25, 42]\n\njulia&gt; collided_particles\n2-element Array{Int64,1}:\n 25\n 42\n\njulia&gt; location_dict\nDict{CartesianIndex{3},Array{Int64,1}} with 1 entry:\n  CartesianIndex(1, 1, 1) =&gt; [1]```","user":"USU9FRPEU","ts":"1609369487.395500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6wR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's say we wanted a list of the collided particles in phase 2:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> collided_particles = Int[]\nInt64[]\n\njulia> [ append!(collided_particles, pop!(location_dict,k) ) for (k,v) in collision_locations ]\n1-element Array{Array{Int64,1},1}:\n [25, 42]\n\njulia> collided_particles\n2-element Array{Int64,1}:\n 25\n 42\n\njulia> location_dict\nDict{CartesianIndex{3},Array{Int64,1}} with 1 entry:\n  CartesianIndex(1, 1, 1) => [1]"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"602044c5-e4c1-4757-8421-a3dd60d46e87","type":"message","text":"So I deleted the particles from location_dict there as well via `pop!`","user":"USU9FRPEU","ts":"1609369523.395700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I4fc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I deleted the particles from location_dict there as well via "},{"type":"text","text":"pop!","style":{"code":true}}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"eb5e41df-1e6a-4628-8e50-b5d840620f6d","type":"message","text":"Here's a better way to reverse the dictionary in case you need it:\n```julia&gt; particle_dict = Dict( (p-&gt;first(p.first)=&gt;p.second).(reverse.(collect( location_dict ) ) ) )\nDict{Int64,CartesianIndex{3}} with 1 entry:\n  1 =&gt; CartesianIndex(1, 1, 1)```","user":"USU9FRPEU","ts":"1609369652.395900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BYn0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's a better way to reverse the dictionary in case you need it:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> particle_dict = Dict( (p->first(p.first)=>p.second).(reverse.(collect( location_dict ) ) ) )\nDict{Int64,CartesianIndex{3}} with 1 entry:\n  1 => CartesianIndex(1, 1, 1)"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"84013f51-4dfe-428f-a00f-7a802508e95c","type":"message","text":"Does that help?","user":"USU9FRPEU","ts":"1609369885.396100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tN9V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does that help?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"FD8E263D-75B9-413A-BC15-7D16353D6D75","type":"message","text":"<@USU9FRPEU> Holy cow!  That’s incredible!  The only thing left for me to do is create new particles at the collision locations!","user":"U01GC3N3ZJT","ts":"1609454261.452400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q=G/c","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":" Holy cow!  That’s incredible!  The only thing left for me to do is create new particles at the collision locations!"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"E0799E83-C278-4EB7-823E-B9EA299DC07E","type":"message","text":"I wonder how if I could model the environment as another set of Cartesian indices for collision detection to reduce its memory footprint.","user":"U01GC3N3ZJT","ts":"1609454346.455600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FIQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder how if I could model the environment as another set of Cartesian indices for collision detection to reduce its memory footprint."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"DFEF3D73-D08A-43C9-AA8A-B6E362A00BC1","type":"message","text":"<@USU9FRPEU> My input coordinates to the simulation are in a dictionary of arrays.  When I tried to convert them to the particle_dictionary you specified above with a list comprehension, I got the error that “iteration is deliberately not supported for CartesianIndex.”  How can I get around this error?","user":"U01GC3N3ZJT","ts":"1609701934.096200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a3U","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":" My input coordinates to the simulation are in a dictionary of arrays.  When I tried to convert them to the particle_dictionary you specified above with a list comprehension, I got the error that “iteration is deliberately not supported for CartesianIndex.”  How can I get around this error?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"71c1c486-3ff0-4d38-a174-d9778c0b88f0","type":"message","text":"Well you are probably trying to broadcast over the CartesianIndex somehow.  Could you give me a MWE of the code causing the error?","user":"USU9FRPEU","ts":"1609702500.096600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UCH8s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well you are probably trying to broadcast over the CartesianIndex somehow.  Could you give me a MWE of the code causing the error?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"72DB2292-CB28-4903-BAA2-CAE35490AA91","type":"message","text":"```reagent_dictionary = Dict(i =&gt; CartesianIndex(reagents[i][1]...) for i in 1:length(reagents))\n\n```","user":"U01GC3N3ZJT","ts":"1609703110.098900","team":"T68168MUP","edited":{"user":"U01GC3N3ZJT","ts":"1609703224.000000"},"blocks":[{"type":"rich_text","block_id":"TkaJz","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"reagent_dictionary = Dict(i => CartesianIndex(reagent"},{"type":"text","text":"s"},{"type":"text","text":"[i][1]...) for i in 1:length(reagents))\n\n"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"b90ef7c6-ea29-443e-bd86-1f1c013ce8f3","type":"message","text":"What is `reagent`?","user":"USU9FRPEU","ts":"1609703176.099600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+zeM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is "},{"type":"text","text":"reagent","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"80E08948-40BE-4762-8E2F-1B8A5783E360","type":"message","text":"reagents is a dictionary of the paths of the reagent particles.  Dict(Int64, Array(Array(Int64, 3)))","user":"U01GC3N3ZJT","ts":"1609703289.101000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hrt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reagents is a dictionary of the paths of the reagent particles.  Dict(Int64, Array(Array(Int64, 3)))"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"BF7BC337-BC03-4CBB-9535-7450703C77A3","type":"message","text":"reagents[i][1] is an array of the first coordinates of the ith reagent.","user":"U01GC3N3ZJT","ts":"1609703404.102100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5NhUP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reagents[i][1] is an array of the first coordinates of the ith reagent."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"e557b0f2-38e7-4c77-bc6d-0c2e54c14c9f","type":"message","text":"So `typeof(reagents)` is `Dict{Int64,Array{Array{Float64,3},1}}` ?","user":"USU9FRPEU","ts":"1609703453.102300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=JZq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So "},{"type":"text","text":"typeof(reagents)","style":{"code":true}},{"type":"text","text":" is "},{"type":"text","text":"Dict{Int64,Array{Array{Float64,3},1}}","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"00b7ce61-da2e-42bd-a9e4-a46753fd4a10","type":"message","text":"I don't think you have the type signature of reagents right.","user":"USU9FRPEU","ts":"1609703549.102500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dwj4p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think you have the type signature of reagents right."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"580d6649-6158-4f97-8622-f3f41dd2db49","type":"message","text":"Could you evaluate `typeof(reagents)` ?","user":"USU9FRPEU","ts":"1609703563.102700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"43eSA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could you evaluate "},{"type":"text","text":"typeof(reagents)","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"0721C06F-A3FA-4ED7-8322-27BA1BCE24F6","type":"message","text":"reagents is of type Dict{Int64, Array{Array{Int64, 3}, steps}","user":"U01GC3N3ZJT","ts":"1609703782.103100","team":"T68168MUP","edited":{"user":"U01GC3N3ZJT","ts":"1609703943.000000"},"blocks":[{"type":"rich_text","block_id":"6IpA6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"reagents is of type Dict{Int64, Array{Array{Int64, 3}, steps}"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"3f1a05cf-8ee4-407b-a598-0df65962b305","type":"message","text":"No, it has to be some kind of collection like an Dict or Array as you were saying earlier","user":"USU9FRPEU","ts":"1609703855.103300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AVyw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, it has to be some kind of collection like an Dict or Array as you were saying earlier"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"73E076F1-5867-4525-B738-86E005E5B6F2","type":"message","text":"where steps is the number of time steps of the simulation.  Apologies, I have corrected myself.","user":"U01GC3N3ZJT","ts":"1609703931.104200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/lexS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"where steps is the number of time steps of the simulation.  Apologies, I have corrected myself."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"4F23DF61-E8C1-4D70-9040-A891B7128C9D","type":"message","text":"<@USU9FRPEU> I have the type of reagents above. :)","user":"U01GC3N3ZJT","ts":"1609704580.105200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XjqwZ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"USU9FRPEU"},{"type":"text","text":" I have the type of reagents above. :)"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"518a6ee3-9f14-4f94-9703-5480856de016","type":"message","text":"I think you are confusing the size of the array with the dimensionality of the array.","user":"USU9FRPEU","ts":"1609709444.131000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N7Qr8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you are confusing the size of the array with the dimensionality of the array."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"22907d64-9332-4f59-9139-c30c7da259de","type":"message","text":"It doesn't make any sense to have steps as part of the type like that. Plus I think there is a curly brace missing","user":"USU9FRPEU","ts":"1609709476.131200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bd9VP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It doesn't make any sense to have steps as part of the type like that. Plus I think there is a curly brace missing"}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"},{"client_msg_id":"9fc898b4-bc60-4ce2-8c60-6950728059e0","type":"message","text":"I need some actual executable code in order to help you out.","user":"USU9FRPEU","ts":"1609709530.131400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/7xG8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I need some actual executable code in order to help you out."}]}]}],"thread_ts":"1609197358.242700","parent_user_id":"U01GC3N3ZJT"}]