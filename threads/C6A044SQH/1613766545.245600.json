[{"client_msg_id":"9b4a6ca5-1be2-4641-b7e8-701c335a48ae","type":"message","text":"Hello all. I've been trying to use `LsqFit` to fit a hyperbolic tangent function to some data about terminal velocity in free fall. Using SciPy's `curve_fit` function, it seems to work fine. However, in Julia, it's nowhere near the correct fit.\nHere's the function I've written to fit the curve -\n```function fit_terminal_velocity(data::CSV.File)\n\t# Create base model with random initial parameters\n\tp0 = rand(2)\n\tmodel(t, p) = p[1] .* tanh.(p[2]/p[1] .* t)\n\t\n\t# We are fitting v(t), so lets get those values\n\t# We also want to go from t = 0 to t = t_max\n\tt = data.t .- minimum(data.t)\n\ty = data.y\n\t\n\tv  = diff(y) ./ diff(t)\n\ttv = t[1:end-1]\n\t\n\t\n\tfitted_model = lsqfit.curve_fit(model, v, tv, p0)\n\t\n\treturn fitted_model, model\nend```\nAnd it gives\n```p[1] = -1.04293e-10\np[2] = 0.00917912```\nWhereas Python gives `p = [-623.23056677, -319.5100746 ]` , which fit the model correctly. For reference, the code in python is\n```f = lambda t, g, vt : vt * np.tanh(g/vt * t)\npopts, pcov = curve_fit(f, t[1:], v)```\nWhere `curve_fit` is `scipy.optimize.curve_fit`.\n\nI think it may be something to do with the fact that LsqFit requires `p0` but SciPy doesn't? I would really appreciate if anybody can help me figure out why curve fitting isn't working in Julia properly. Thank you so much!","user":"U01MR5N6VSP","ts":"1613766545.245600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OUn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello all. I've been trying to use "},{"type":"text","text":"LsqFit","style":{"code":true}},{"type":"text","text":" to fit a hyperbolic tangent function to some data about terminal velocity in free fall. Using SciPy's "},{"type":"text","text":"curve_fit","style":{"code":true}},{"type":"text","text":" function, it seems to work fine. However, in Julia, it's nowhere near the correct fit.\nHere's the function I've written to fit the curve -\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function fit_terminal_velocity(data::CSV.File)\n\t# Create base model with random initial parameters\n\tp0 = rand(2)\n\tmodel(t, p) = p[1] .* tanh.(p[2]/p[1] .* t)\n\t\n\t# We are fitting v(t), so lets get those values\n\t# We also want to go from t = 0 to t = t_max\n\tt = data.t .- minimum(data.t)\n\ty = data.y\n\t\n\tv  = diff(y) ./ diff(t)\n\ttv = t[1:end-1]\n\t\n\t\n\tfitted_model = lsqfit.curve_fit(model, v, tv, p0)\n\t\n\treturn fitted_model, model\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAnd it gives\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"p[1] = -1.04293e-10\np[2] = 0.00917912"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nWhereas Python gives "},{"type":"text","text":"p = [-623.23056677, -319.5100746 ]","style":{"code":true}},{"type":"text","text":" , which fit the model correctly. For reference, the code in python is\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"f = lambda t, g, vt : vt * np.tanh(g/vt * t)\npopts, pcov = curve_fit(f, t[1:], v)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Where "},{"type":"text","text":"curve_fit","style":{"code":true}},{"type":"text","text":" is "},{"type":"text","text":"scipy.optimize.curve_fit","style":{"code":true}},{"type":"text","text":".\n\nI think it may be something to do with the fact that LsqFit requires "},{"type":"text","text":"p0","style":{"code":true}},{"type":"text","text":" but SciPy doesn't? I would really appreciate if anybody can help me figure out why curve fitting isn't working in Julia properly. Thank you so much!"}]}]}],"thread_ts":"1613766545.245600","reply_count":3,"reply_users_count":2,"latest_reply":"1613767410.246600","reply_users":["B01J9QZ4SP8","U01MR5N6VSP"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613766549.245700","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613766545.245600","parent_user_id":"U01MR5N6VSP"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/55649| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1613766582.246000","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613766545.245600","parent_user_id":"U01MR5N6VSP"},{"type":"message","text":"This is the data I'm trying to fit if anybody would like to try","files":[{"id":"F01NRNG6JKU","created":1613767394,"timestamp":1613767394,"name":"0.0grams.csv","title":"0.0grams.csv","mimetype":"text/csv","filetype":"csv","pretty_type":"CSV","user":"U01MR5N6VSP","editable":true,"size":1044,"mode":"snippet","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01NRNG6JKU/0.0grams.csv","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01NRNG6JKU/download/0.0grams.csv","permalink":"https://julialang.slack.com/files/U01MR5N6VSP/F01NRNG6JKU/0.0grams.csv","permalink_public":"https://slack-files.com/T68168MUP-F01NRNG6JKU-ffbc44bcea","edit_link":"https://julialang.slack.com/files/U01MR5N6VSP/F01NRNG6JKU/0.0grams.csv/edit","preview":"t,x,y\r\n2.883,12.09,81.82\r\n2.9,12.16,81.76\r\n2.917,11.91,81.54\r\n2.933,11.59,81.09\r","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>t,x,y</pre></div>\n<div><pre>2.883,12.09,81.82</pre></div>\n<div><pre>2.9,12.16,81.76</pre></div>\n<div><pre>2.917,11.91,81.54</pre></div>\n<div><pre>2.933,11.59,81.09</pre></div>\n<div><pre></pre></div>\n</div>\n</div>\n","lines":58,"lines_more":53,"preview_is_truncated":true,"is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"C38a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is the data I'm trying to fit if anybody would like to try"}]}]}],"user":"U01MR5N6VSP","display_as_bot":false,"ts":"1613767410.246600","thread_ts":"1613766545.245600","parent_user_id":"U01MR5N6VSP"}]