[{"client_msg_id":"34f4d70e-5ca1-49a9-b6f8-71cb5eedc849","type":"message","text":"Is there a proper way to determine the highest set bit number of an integer in the usual binary representation?\nEssentially that is `x -&gt; Int(floor(log2(x)))`, but should not use float arithmetic and work for `BigInt`.","user":"UDHCV0BHD","ts":"1615816114.152200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H5j3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a proper way to determine the highest set bit number of an integer in the usual binary representation?\nEssentially that is "},{"type":"text","text":"x -> Int(floor(log2(x)))","style":{"code":true}},{"type":"text","text":", but should not use float arithmetic and work for "},{"type":"text","text":"BigInt","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1615816114.152200","reply_count":9,"reply_users_count":6,"latest_reply":"1615817481.154200","reply_users":["B01J9QZ4SP8","U0179G7FG4F","UDB26738Q","U7HAYKY9X","UH24GRBLL","UDHCV0BHD"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615816116.152300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615816114.152200","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"abb2bb8d-7ca3-4d4d-a56b-d7680bd5aa7e","type":"message","text":"`ndigits(x,base=2)`?","user":"U0179G7FG4F","ts":"1615816192.152500","team":"T68168MUP","edited":{"user":"U0179G7FG4F","ts":"1615816368.000000"},"blocks":[{"type":"rich_text","block_id":"Mbw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ndigits(x,base=2)","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1615816114.152200","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"6c6aa883-0b0d-43f1-8266-6aaf5ba022ed","type":"message","text":"`leading_zeros`?","user":"UDB26738Q","ts":"1615816197.152700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WQ=C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"leading_zeros","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1615816114.152200","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"163e6bd1-e132-4e70-9641-652ea61fec4d","type":"message","text":"uhm, `ndigits` works with `BigInt`","user":"UDB26738Q","ts":"1615816289.152900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dI2p9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uhm, "},{"type":"text","text":"ndigits","style":{"code":true}},{"type":"text","text":" works with "},{"type":"text","text":"BigInt","style":{"code":true}}]}]}],"thread_ts":"1615816114.152200","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"b316d5ab-922f-4f97-8cf0-a65b0e082109","type":"message","text":"also works with `Int` just fine","user":"U0179G7FG4F","ts":"1615816327.153100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CSor","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also works with "},{"type":"text","text":"Int","style":{"code":true}},{"type":"text","text":" just fine"}]}]}],"thread_ts":"1615816114.152200","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"f4051707-5bdd-4d05-981b-a7a10a990995","type":"message","text":"I guess that's the easy part :slightly_smiling_face:","user":"UDB26738Q","ts":"1615816352.153300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8X3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess that's the easy part "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1615816114.152200","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"89c53b48-9c25-4d84-aae7-d09ca99f1cec","type":"message","text":"The issue here is that BigInt does not have the usual binary representation. So if you are looking for efficient bithacks, you can't also support types with a different representation.\nMaybe the best bet is using multiple dispatch\n```foo(x::Base.BitInteger) = 8*sizeof(x) - leading_zeros(x)\nfoo(x::BitInt) = ndigits(x, base=2)```","user":"U7HAYKY9X","ts":"1615816412.153600","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1615816552.000000"},"blocks":[{"type":"rich_text","block_id":"zxo+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The issue here is that BigInt does not have the usual binary representation. So if you are looking for efficient bithacks, you can't also support types with a different representation.\nMaybe the best bet is using multiple dispatch\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"foo(x::Base.BitInteger) = 8*sizeof(x) - leading_zeros(x)\nfoo(x::BitInt) = ndigits(x, base=2)"}]}]}],"thread_ts":"1615816114.152200","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"8f18b0f3-d760-4417-8cbc-e7fa442b3bf5","type":"message","text":"what do you need this for? special casing `BigInt` is very reasonable here","user":"UH24GRBLL","ts":"1615816464.153800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s71X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you need this for? special casing "},{"type":"text","text":"BigInt","style":{"code":true}},{"type":"text","text":" is very reasonable here"}]}]}],"thread_ts":"1615816114.152200","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"6920e399-e259-4aab-9405-eaea0b453e1a","type":"message","text":"Thanks, `ndigits` is the thing I was looking for!","user":"UDHCV0BHD","ts":"1615817481.154200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RGC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, "},{"type":"text","text":"ndigits","style":{"code":true}},{"type":"text","text":" is the thing I was looking for!"}]}]}],"thread_ts":"1615816114.152200","parent_user_id":"UDHCV0BHD"}]