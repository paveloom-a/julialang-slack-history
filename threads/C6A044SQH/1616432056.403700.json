[{"client_msg_id":"b9f0df40-bcc6-4c85-8ad3-da4acdf4c198","type":"message","text":"Is it a bad idea to define a custom `Vector` like this:\n\n```struct MyVector{T, [... more stuff]} &lt;: AbstractVector{T}\n    ...\nend\n\nBase.eltype(::MyVector{T}) = S```\nwhere `S` is some subtype of `T`  ?","user":"UBEF50B7C","ts":"1616432056.403700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LgrTm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it a bad idea to define a custom "},{"type":"text","text":"Vector","style":{"code":true}},{"type":"text","text":" like this:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct MyVector{T, [... more stuff]} <: AbstractVector{T}\n    ...\nend\n\nBase.eltype(::MyVector{T}) = S"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nwhere "},{"type":"text","text":"S","style":{"code":true}},{"type":"text","text":" is some subtype of "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":"  ?"}]}]}],"thread_ts":"1616432056.403700","reply_count":5,"reply_users_count":3,"latest_reply":"1616432715.404700","reply_users":["U7HAYKY9X","UBEF50B7C","UH24GRBLL"],"subscribed":false},{"client_msg_id":"935456ee-20b6-4f74-8614-f1972279cd0b","type":"message","text":"Nope, not if it actually is the element type\n(also, you should define the eltype on the type, not instances :) )","user":"U7HAYKY9X","ts":"1616432124.403800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A7w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nope, not if it actually is the element type\n(also, you should define the eltype on the type, not instances :) )"}]}]}],"thread_ts":"1616432056.403700","parent_user_id":"UBEF50B7C"},{"client_msg_id":"0ed14745-6e86-40b2-880c-53cab845f783","type":"message","text":"yes, you are right with the type. So there is not performance loss, because functions incorrectly assume that they need to work with the abstract type `T` instead of `S`?","user":"UBEF50B7C","ts":"1616432219.404000","team":"T68168MUP","edited":{"user":"UBEF50B7C","ts":"1616432237.000000"},"blocks":[{"type":"rich_text","block_id":"xRE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, you are right with the type. So there is not performance loss, because functions incorrectly assume that they need to work with the abstract type "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"S","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1616432056.403700","parent_user_id":"UBEF50B7C"},{"client_msg_id":"3a6c5687-158b-444c-ba25-56e2ed09ba4f","type":"message","text":"There could very well be such function that make that assumption. The documentation of `AbstractVector{T}` states that T is the element type, so I would consider it completely fine to disregard `eltype` and lean on the type parameter","user":"U7HAYKY9X","ts":"1616432296.404300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6v4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There could very well be such function that make that assumption. The documentation of "},{"type":"text","text":"AbstractVector{T}","style":{"code":true}},{"type":"text","text":" states that T is the element type, so I would consider it completely fine to disregard "},{"type":"text","text":"eltype","style":{"code":true}},{"type":"text","text":" and lean on the type parameter"}]}]}],"thread_ts":"1616432056.403700","parent_user_id":"UBEF50B7C"},{"client_msg_id":"20884ed9-aba0-4890-894b-1a186eaf7e46","type":"message","text":"if you subtype `AbstractVector`, make sure to also implement the interface <https://docs.julialang.org/en/v1/manual/interfaces/#man-interface-array> (at least for forwarding) to make sure it stays performant","user":"UH24GRBLL","ts":"1616432685.404500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rkSnb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you subtype "},{"type":"text","text":"AbstractVector","style":{"code":true}},{"type":"text","text":", make sure to also implement the interface "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/interfaces/#man-interface-array"},{"type":"text","text":" (at least for forwarding) to make sure it stays performant"}]}]}],"thread_ts":"1616432056.403700","parent_user_id":"UBEF50B7C"},{"client_msg_id":"3907e22c-c1ca-4d3c-9de6-a032e8d6358b","type":"message","text":"if you actually use it like a vector, that is","user":"UH24GRBLL","ts":"1616432715.404700","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1616432721.000000"},"blocks":[{"type":"rich_text","block_id":"QGJ3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you actually use it like a vector, that is"}]}]}],"thread_ts":"1616432056.403700","parent_user_id":"UBEF50B7C"}]