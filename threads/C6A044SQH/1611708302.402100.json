[{"client_msg_id":"7e266e30-3a7a-439e-902c-734e3ae12d69","type":"message","text":"I think the index notation is much more clear personally","user":"U8D9768Q6","ts":"1611708302.402100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nCUUs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the index notation is much more clear personally"}]}]}],"thread_ts":"1611708302.402100","reply_count":15,"reply_users_count":3,"latest_reply":"1611717882.406000","reply_users":["USU9FRPEU","U8D9768Q6","UB2QRMQPN"],"subscribed":false},{"client_msg_id":"f6ba8d72-8ada-4440-8205-55b5a95fb006","type":"message","text":"Why is `LoopVectorization` needed here?","user":"USU9FRPEU","ts":"1611708364.402200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F/oSy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why is "},{"type":"text","text":"LoopVectorization","style":{"code":true}},{"type":"text","text":" needed here?"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"3a7877c9-edbc-41eb-90df-4c54aad53930","type":"message","text":"It should be beneficial for performance of larger arrays","user":"U8D9768Q6","ts":"1611708403.402400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NFe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It should be beneficial for performance of larger arrays"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"c6368836-5b9f-4cc3-aea0-0ac905fa14b7","type":"message","text":"```julia&gt; const newdim = [CartesianIndex()]\n1-element Vector{CartesianIndex{0}}:\n CartesianIndex()\n\njulia&gt; using Tullio, LoopVectorization\n\nf(X::Matrix) = @tullio out[i, j, k] := X[i, j] - X[i, k];\n\njulia&gt; g(X::Matrix) = X .- @view X[:,newdim,:];\n\njulia&gt; foreach(2 .^ (1:2:10)) do N\n           @show N\n           X = rand(-10:10, N, N)\n           print(\"f: \")\n           @btime f($X)\n           print(\"g: \")\n           @btime g($X)\n           println()\n       end\nN = 2\nf:   69.172 ns (1 allocation: 144 bytes)\ng:   70.071 ns (1 allocation: 144 bytes)\n\nN = 8\nf:   441.395 ns (1 allocation: 4.12 KiB)\ng:   766.951 ns (1 allocation: 4.12 KiB)\n\nN = 32\nf:   14.890 μs (2 allocations: 256.08 KiB)\ng:   25.790 μs (2 allocations: 256.08 KiB)\n\nN = 128\nf:   1.028 ms (67 allocations: 16.00 MiB)\ng:   3.375 ms (2 allocations: 16.00 MiB)\n\nN = 512\nf:   261.743 ms (68 allocations: 1.00 GiB)\ng:   314.850 ms (2 allocations: 1.00 GiB)```","user":"U8D9768Q6","ts":"1611709006.403000","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1611709248.000000"},"blocks":[{"type":"rich_text","block_id":"DT0fO","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> const newdim = [CartesianIndex()]\n1-element Vector{CartesianIndex{0}}:\n CartesianIndex()\n\njulia> using Tullio, LoopVectorization\n\nf(X::Matrix) = @tullio out[i, j, k] := X[i, j] - X[i, k];\n\njulia> g(X::Matrix) = X .- @view X[:,newdim,:];\n\njulia> foreach(2 .^ (1:2:10)) do N\n           @show N\n           X = rand(-10:10, N, N)\n           print(\"f: \")\n           @btime f($X)\n           print(\"g: \")\n           @btime g($X)\n           println()\n       end\nN = 2\nf:   69.172 ns (1 allocation: 144 bytes)\ng:   70.071 ns (1 allocation: 144 bytes)\n\nN = 8\nf:   441.395 ns (1 allocation: 4.12 KiB)\ng:   766.951 ns (1 allocation: 4.12 KiB)\n\nN = 32\nf:   14.890 μs (2 allocations: 256.08 KiB)\ng:   25.790 μs (2 allocations: 256.08 KiB)\n\nN = 128\nf:   1.028 ms (67 allocations: 16.00 MiB)\ng:   3.375 ms (2 allocations: 16.00 MiB)\n\nN = 512\nf:   261.743 ms (68 allocations: 1.00 GiB)\ng:   314.850 ms (2 allocations: 1.00 GiB)"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"78af4346-d341-468d-93f1-e5e8ddbfce5d","type":"message","text":"Here's a new session without LoopVectorization loaded:\n```julia&gt; using Tullio\n\njulia&gt; const newdim = [CartesianIndex()]\n1-element Vector{CartesianIndex{0}}:\n CartesianIndex()\n\njulia&gt; f(X::Matrix) = @tullio out[i, j, k] := X[i, j] - X[i, k];\n\njulia&gt; g(X::Matrix) = X .- @view X[:,newdim,:]\ng (generic function with 1 method)\n\njulia&gt; foreach(2 .^ (1:2:10)) do N\n           @show N\n           X = rand(-10:10, N, N)\n           print(\"f: \")\n           @btime f($X)\n           print(\"g: \")\n           @btime g($X)\n           println()\n       end\nN = 2\nf:   57.435 ns (1 allocation: 144 bytes)\ng:   55.137 ns (1 allocation: 144 bytes)\n\nN = 8\nf:   661.945 ns (1 allocation: 4.12 KiB)\ng:   780.651 ns (1 allocation: 4.12 KiB)\n\nN = 32\nf:   18.689 μs (2 allocations: 256.08 KiB)\ng:   26.150 μs (2 allocations: 256.08 KiB)\n\nN = 128\nf:   1.122 ms (66 allocations: 16.00 MiB)\ng:   4.027 ms (2 allocations: 16.00 MiB)\n\nN = 512\nf:   241.307 ms (68 allocations: 1.00 GiB)\ng:   308.673 ms (2 allocations: 1.00 GiB)```\nSo LV isn't helping a huge amount here, but it is doing some.","user":"U8D9768Q6","ts":"1611709573.403300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W7ugi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's a new session without LoopVectorization loaded:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Tullio\n\njulia> const newdim = [CartesianIndex()]\n1-element Vector{CartesianIndex{0}}:\n CartesianIndex()\n\njulia> f(X::Matrix) = @tullio out[i, j, k] := X[i, j] - X[i, k];\n\njulia> g(X::Matrix) = X .- @view X[:,newdim,:]\ng (generic function with 1 method)\n\njulia> foreach(2 .^ (1:2:10)) do N\n           @show N\n           X = rand(-10:10, N, N)\n           print(\"f: \")\n           @btime f($X)\n           print(\"g: \")\n           @btime g($X)\n           println()\n       end\nN = 2\nf:   57.435 ns (1 allocation: 144 bytes)\ng:   55.137 ns (1 allocation: 144 bytes)\n\nN = 8\nf:   661.945 ns (1 allocation: 4.12 KiB)\ng:   780.651 ns (1 allocation: 4.12 KiB)\n\nN = 32\nf:   18.689 μs (2 allocations: 256.08 KiB)\ng:   26.150 μs (2 allocations: 256.08 KiB)\n\nN = 128\nf:   1.122 ms (66 allocations: 16.00 MiB)\ng:   4.027 ms (2 allocations: 16.00 MiB)\n\nN = 512\nf:   241.307 ms (68 allocations: 1.00 GiB)\ng:   308.673 ms (2 allocations: 1.00 GiB)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"So LV isn't helping a huge amount here, but it is doing some."}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"0a400e89-eb30-4c13-b15e-ece42fc24cea","type":"message","text":"This still might be underperforming NumPy: <https://stackoverflow.com/questions/65888569/how-is-numpy-so-fast>","user":"USU9FRPEU","ts":"1611710183.403500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lQUdD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This still might be underperforming NumPy: "},{"type":"link","url":"https://stackoverflow.com/questions/65888569/how-is-numpy-so-fast"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"e2132972-43b0-4838-9eb1-4774be26bb81","type":"message","text":"The numpy example is using Float32","user":"UB2QRMQPN","ts":"1611710213.403700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WvPp6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The numpy example is using Float32"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6","reactions":[{"name":"+1","users":["USU9FRPEU"],"count":1}]},{"client_msg_id":"eba31d6e-fa14-4bca-95c6-934a77455ac7","type":"message","text":"And also apparently implicitly preallocating the output array?","user":"UB2QRMQPN","ts":"1611710269.404000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Da26f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And also apparently implicitly preallocating the output array?"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"ce3981de-24f8-415b-b1c3-ea8f9d572800","type":"message","text":"On my machine,\n```julia&gt; py\"\"\"\n       import numpy as np\n\n       def pairwise_sub_numpy( X ):\n           return X - X[:, None, :]\n\n       N = 512\n       X = np.random.rand(N,N).astype(np.float32)\n\n       import timeit\n       times = timeit.repeat('pairwise_sub_numpy( X )', globals=globals(), number=1, repeat=5)\n       print(f\"&gt;&gt; best of 5 = {1000*min(times):.3f} ms\")\n       \"\"\"\n&gt;&gt; best of 5 = 137.921 ms```","user":"UB2QRMQPN","ts":"1611710290.404200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e243","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"On my machine,\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> py\"\"\"\n       import numpy as np\n\n       def pairwise_sub_numpy( X ):\n           return X - X[:, None, :]\n\n       N = 512\n       X = np.random.rand(N,N).astype(np.float32)\n\n       import timeit\n       times = timeit.repeat('pairwise_sub_numpy( X )', globals=globals(), number=1, repeat=5)\n       print(f\">> best of 5 = {1000*min(times):.3f} ms\")\n       \"\"\"\n>> best of 5 = 137.921 ms"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"5e3e7fee-b666-4fc7-829b-708876747940","type":"message","text":"versus inplace Tullio\n```julia&gt; @btime f!($out, $x);\n  47.310 ms (215 allocations: 12.08 KiB)```","user":"UB2QRMQPN","ts":"1611710331.404400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dvSk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"versus inplace Tullio\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime f!($out, $x);\n  47.310 ms (215 allocations: 12.08 KiB)"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"e0f34f08-0112-439d-9106-d6491b3c6edc","type":"message","text":"How is `f!` defined?","user":"USU9FRPEU","ts":"1611710445.404600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9mBB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How is "},{"type":"text","text":"f!","style":{"code":true}},{"type":"text","text":" defined?"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"e3e01262-f5ac-48da-88dc-7bf04e8fce57","type":"message","text":"presumably\n``` f!(out, X::Matrix) = @tullio out[i, j, k] := X[i, j] - X[i, k];```","user":"U8D9768Q6","ts":"1611710470.405000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IaMC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"presumably\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":" f!(out, X::Matrix) = @tullio out[i, j, k] := X[i, j] - X[i, k];"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"6b2d0762-9854-408e-8d2f-1dddeb3d5296","type":"message","text":"Just replacing the `:=` with `=`","user":"UB2QRMQPN","ts":"1611710477.405200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CfVG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just replacing the "},{"type":"text","text":":=","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"=","style":{"code":true}}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"a1cbe9d5-e23c-48d1-8c9f-8c866ce800b1","type":"message","text":"```f!(out, x) = @tullio out[i, j, k] = x[i,j] - x[i,k]```","user":"UB2QRMQPN","ts":"1611710482.405400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=NL","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"f!(out, x) = @tullio out[i, j, k] = x[i,j] - x[i,k]"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"f51497b5-55a6-40e0-b69f-9ad47a54c424","type":"message","text":"oops, yeah","user":"U8D9768Q6","ts":"1611710494.405600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pRfcO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oops, yeah"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6"},{"client_msg_id":"0ecd15cd-c6ca-4154-ab0e-3c45f3ba4ff6","type":"message","text":"At this point, it's entirely memory bandwidth-dependent\n```julia&gt; @btime vmapnt!(identity, $out, $out);\n  46.391 ms (0 allocations: 0 bytes)```","user":"UB2QRMQPN","ts":"1611717882.406000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ycalS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"At this point, it's entirely memory bandwidth-dependent\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime vmapnt!(identity, $out, $out);\n  46.391 ms (0 allocations: 0 bytes)"}]}]}],"thread_ts":"1611708302.402100","parent_user_id":"U8D9768Q6","reactions":[{"name":"+1","users":["U8D9768Q6"],"count":1}]}]