[{"client_msg_id":"82ec0768-8ccb-4b8e-927b-7a68d4dc49e3","type":"message","text":"How could one create a macro to automatically generate getters and setters for any struct. Something like this:\n```julia&gt; macro generate_getters(StructName)\n       return quote\n       get_x(instance::$StructName) = instance.x\n       set_x!(instance::$StructName, new_value) = instance.x = new_value\n       get_y(instace::$StructName) = instance.y\n       set_y!(instance::$StructName, new_value) = instance.y = new_value\n       end\n       end\n@generate_getters (macro with 1 method)```\nBut without harcoding the fieldnames inside this macro.\nAlso, I am facing another problem with the current macro..\n```julia&gt; mutable struct MyPoint{T}\n       x::T\n       y::T\n       end\n\njulia&gt; p = MyPoint(1.0f0, 2.0f0)\nMyPoint{Float32}(1.0f0, 2.0f0)\n\njulia&gt; get_x(p)\nERROR: UndefVarError: get_x not defined\nStacktrace:\n [1] top-level scope at REPL[4]:1 ```\nThis probably has something to do with macro hygiene but I don't know anymore about it :sweat_smile:","user":"U0190AJCYK0","ts":"1616092564.110100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aI5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How could one create a macro to automatically generate getters and setters for any struct. Something like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> macro generate_getters(StructName)\n       return quote\n       get_x(instance::$StructName) = instance.x\n       set_x!(instance::$StructName, new_value) = instance.x = new_value\n       get_y(instace::$StructName) = instance.y\n       set_y!(instance::$StructName, new_value) = instance.y = new_value\n       end\n       end\n@generate_getters (macro with 1 method)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"But without harcoding the fieldnames inside this macro.\nAlso, I am facing another problem with the current macro..\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> mutable struct MyPoint{T}\n       x::T\n       y::T\n       end\n\njulia> p = MyPoint(1.0f0, 2.0f0)\nMyPoint{Float32}(1.0f0, 2.0f0)\n\njulia> get_x(p)\nERROR: UndefVarError: get_x not defined\nStacktrace:\n [1] top-level scope at REPL[4]:1 "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"This probably has something to do with macro hygiene but I don't know anymore about it "},{"type":"emoji","name":"sweat_smile"}]}]}],"thread_ts":"1616092564.110100","reply_count":3,"reply_users_count":3,"latest_reply":"1616094364.111000","reply_users":["B01J9QZ4SP8","U680THK2S","U0190AJCYK0"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1616092567.110200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1616092564.110100","parent_user_id":"U0190AJCYK0"},{"client_msg_id":"36f6852b-e93b-4693-bb96-be3962ceeece","type":"message","text":"```macro generate_getters(type)\n    T = getfield(__module__, type)::DataType\n    defs = Expr(:block)\n    for field in fieldnames(T)\n        get = Symbol(:get_, field)\n        set = Symbol(:set_, field, :!)\n        qn = QuoteNode(field)\n        push!(defs.args, :($(esc(get))(instance::$type) = getfield(instance, $qn)))\n        push!(defs.args, :($(esc(set))(instance::$type, x) = setfield!(instance, $qn, x)))\n    end\n    return defs\nend```\nshould work","user":"U680THK2S","ts":"1616093645.110600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W46","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"macro generate_getters(type)\n    T = getfield(__module__, type)::DataType\n    defs = Expr(:block)\n    for field in fieldnames(T)\n        get = Symbol(:get_, field)\n        set = Symbol(:set_, field, :!)\n        qn = QuoteNode(field)\n        push!(defs.args, :($(esc(get))(instance::$type) = getfield(instance, $qn)))\n        push!(defs.args, :($(esc(set))(instance::$type, x) = setfield!(instance, $qn, x)))\n    end\n    return defs\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"should work"}]}]}],"thread_ts":"1616092564.110100","parent_user_id":"U0190AJCYK0"},{"client_msg_id":"c4f4a77f-4e9c-4962-a527-3456d887d85c","type":"message","text":"Thanks.. I tried this, but am getting the following...\n```julia&gt; macro generate_getters(type)\n           T = getfield(__module__, type)::DataType\n           defs = Expr(:block)\n           for field in fieldnames(T)\n               get = Symbol(:get_, field)\n               set = Symbol(:set_, field, :!)\n               qn = QuoteNode(field)\n               push!(defs.args, :($(esc(get))(instance::$type) = getfield(instance, $qn)))\n               push!(defs.args, :($(esc(set))(instance::$type, x) = setfield!(instance, $qn, x)))\n           end\n           return defs\n       end\n@generate_getters (macro with 1 method)\n\njulia&gt; mutable struct MyPoint{T}\n       x::T\n       y::T\n       end\n\njulia&gt; p = MyPoint(1.0f0, 2.0f0)\nMyPoint{Float32}(1.0f0, 2.0f0)\n\njulia&gt; get_x(p)\nERROR: UndefVarError: get_x not defined\nStacktrace:\n [1] top-level scope at REPL[4]:1\n\njulia&gt;```\nthe input argument name to the macro is `type`, which is also a keyword. I tried changing that as well and got the same result.","user":"U0190AJCYK0","ts":"1616094364.111000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3TNed","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks.. I tried this, but am getting the following...\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> macro generate_getters(type)\n           T = getfield(__module__, type)::DataType\n           defs = Expr(:block)\n           for field in fieldnames(T)\n               get = Symbol(:get_, field)\n               set = Symbol(:set_, field, :!)\n               qn = QuoteNode(field)\n               push!(defs.args, :($(esc(get))(instance::$type) = getfield(instance, $qn)))\n               push!(defs.args, :($(esc(set))(instance::$type, x) = setfield!(instance, $qn, x)))\n           end\n           return defs\n       end\n@generate_getters (macro with 1 method)\n\njulia> mutable struct MyPoint{T}\n       x::T\n       y::T\n       end\n\njulia> p = MyPoint(1.0f0, 2.0f0)\nMyPoint{Float32}(1.0f0, 2.0f0)\n\njulia> get_x(p)\nERROR: UndefVarError: get_x not defined\nStacktrace:\n [1] top-level scope at REPL[4]:1\n\njulia>"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"the input argument name to the macro is "},{"type":"text","text":"type","style":{"code":true}},{"type":"text","text":", which is also a keyword. I tried changing that as well and got the same result."}]}]}],"thread_ts":"1616092564.110100","parent_user_id":"U0190AJCYK0"}]