[{"client_msg_id":"25866c8f-0cf2-4398-a027-d5cdcb7035e0","type":"message","text":"I have many 2D arrays filled with numbers of type UInt16. When I subtract two of them using `.-` syntax *sometimes* it spits out way bigger numbers than it should (but not always...). If I manually loop through the arrays and convert each entry to Float64 before doing the subtraction however it works fine? Anybody know why this might be happening?","user":"U01EJQLLZBM","ts":"1618193296.058800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MvEAD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have many 2D arrays filled with numbers of type UInt16. When I subtract two of them using "},{"type":"text","text":".-","style":{"code":true}},{"type":"text","text":" syntax "},{"type":"text","text":"sometimes","style":{"bold":true}},{"type":"text","text":" it spits out way bigger numbers than it should (but not always...). If I manually loop through the arrays and convert each entry to Float64 before doing the subtraction however it works fine? Anybody know why this might be happening?"}]}]}],"thread_ts":"1618193296.058800","reply_count":2,"reply_users_count":1,"latest_reply":"1618194791.059400","reply_users":["U019K6Q9N15"],"is_locked":false,"subscribed":false},{"type":"message","text":"Unsigned integers are not the recommended data structure to represent the integers on which you want to perform \"normal\" arithmetic operations, precisely because they *wrap around*. I think that most programming contexts avoid this conflation.\n\nIf you wanted to give them the charitable interpretation of being strictly positive integers, what would you expect the result of subtracting a larger UInt from a smaller UInt to be? Julia doesn't perform automatic type promotion, so the result wouldn't be very meaningful.\n\nObserve this in action:\n```julia&gt; first_uint = 0x0010\n0x0010\n\njulia&gt; Int(first_uint)\n16\n\njulia&gt; second_uint = 0x0020\n0x0020\n\njulia&gt; Int(second_uint)\n32\n\njulia&gt; first_uint - second_uint\n0xfff0\n\njulia&gt; Int(first_uint - second_uint)\n65520```","files":[{"id":"F01TVB2D8BF","mode":"tombstone"}],"upload":false,"blocks":[{"type":"rich_text","block_id":"6JMk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Unsigned integers are not the recommended data structure to represent the integers on which you want to perform \"normal\" arithmetic operations, precisely because they "},{"type":"text","text":"wrap around","style":{"bold":true}},{"type":"text","text":". I think that most programming contexts avoid this conflation.\n\nIf you wanted to give them the charitable interpretation of being strictly positive integers, what would you expect the result of subtracting a larger UInt from a smaller UInt to be? Julia doesn't perform automatic type promotion, so the result wouldn't be very meaningful.\n\nObserve this in action:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> first_uint = 0x0010\n0x0010\n\njulia> Int(first_uint)\n16\n\njulia> second_uint = 0x0020\n0x0020\n\njulia> Int(second_uint)\n32\n\njulia> first_uint - second_uint\n0xfff0\n\njulia> Int(first_uint - second_uint)\n65520"}]}]}],"user":"U019K6Q9N15","display_as_bot":false,"ts":"1618194591.059200","edited":{"user":"U019K6Q9N15","ts":"1618196426.000000"},"thread_ts":"1618193296.058800","parent_user_id":"U01EJQLLZBM"},{"client_msg_id":"4aa804d2-83ec-4576-b3ea-1bf443404648","type":"message","text":"I assume that what you really want is real subtraction or truncated subtraction-- either way you should represent your data with a signed integer or a float.\n\nA single pre-processing step after you obtain your data should suffice:\n```a_better_array = Int32.(my_uint_array)```","user":"U019K6Q9N15","ts":"1618194791.059400","team":"T68168MUP","edited":{"user":"U019K6Q9N15","ts":"1618195438.000000"},"blocks":[{"type":"rich_text","block_id":"/ctU4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I assume that what you really want is real subtraction or truncated subtraction-- either way you should represent your data with a signed integer or a float.\n\nA single pre-processing step after you obtain your data should suffice:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"a_better_array = Int32.(my_uint_array)"}]}]}],"thread_ts":"1618193296.058800","parent_user_id":"U01EJQLLZBM"}]