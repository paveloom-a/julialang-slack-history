[{"client_msg_id":"b63b5d8e-8fb0-4fd1-8e15-b8084573feb9","type":"message","text":"Let's say I have a function that takes `N` 2x2 arrays of floats. How can I perform broadcast multiplication on all `N` arrays? I tried something like:\n```N = 3\narrays = [rand(2,2) for _ in 1:N]\nreduce(.*, arrays)```\nbut `.*` is not defined.","user":"UEA5FBCRH","ts":"1615159338.058900","team":"T68168MUP","edited":{"user":"UEA5FBCRH","ts":"1615159438.000000"},"blocks":[{"type":"rich_text","block_id":"CcB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's say I have a function that takes "},{"type":"text","text":"N","style":{"code":true}},{"type":"text","text":" 2x2 arrays of floats. How can I perform broadcast multiplication on all "},{"type":"text","text":"N","style":{"code":true}},{"type":"text","text":" arrays? I tried something like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"N = 3\narrays = [rand(2,2) for _ in 1:N]\nreduce(.*, arrays)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but "},{"type":"text","text":".*","style":{"code":true}},{"type":"text","text":" is not defined."}]}]}],"thread_ts":"1615159338.058900","reply_count":9,"reply_users_count":4,"latest_reply":"1615160947.063800","reply_users":["B01J9QZ4SP8","UGU761DU2","UEA5FBCRH","UDD5Z7FLZ"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615159340.059000","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615159338.058900","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"108f70af-0b91-4c1d-a04a-6cef76777130","type":"message","text":"Are you perhaps looking for either\n```julia&gt; reduce(*, arrays)\n2×2 Array{Float64,2}:\n 0.252272  0.335882\n 0.211855  0.26018```\nor\n```julia&gt; reduce.(*, arrays)\n3-element Array{Float64,1}:\n 0.15062751622855264\n 0.0011946608696811619\n 0.0048831636456027755```\n?","user":"UGU761DU2","ts":"1615159858.059500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"II6y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you perhaps looking for either\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> reduce(*, arrays)\n2×2 Array{Float64,2}:\n 0.252272  0.335882\n 0.211855  0.26018"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"or\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> reduce.(*, arrays)\n3-element Array{Float64,1}:\n 0.15062751622855264\n 0.0011946608696811619\n 0.0048831636456027755"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"?"}]}]}],"thread_ts":"1615159338.058900","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"b276facc-4e7a-4503-ab5a-0d295c951371","type":"message","text":"The first one. Thanks. One follow-up question. In this article, they mention that the `.*` operator does loop fusion. Is `reduce(*, arrays)` equivalent to using the `.*` operator?","user":"UEA5FBCRH","ts":"1615160161.059700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pJp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The first one. Thanks. One follow-up question. In this article, they mention that the "},{"type":"text","text":".*","style":{"code":true}},{"type":"text","text":" operator does loop fusion. Is "},{"type":"text","text":"reduce(*, arrays)","style":{"code":true}},{"type":"text","text":" equivalent to using the "},{"type":"text","text":".*","style":{"code":true}},{"type":"text","text":" operator?"}]}]}],"thread_ts":"1615159338.058900","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"4fd38666-5b2b-4f51-9488-664b580630ac","type":"message","text":"<https://julialang.org/blog/2017/01/moredots/>","user":"UEA5FBCRH","ts":"1615160171.059900","team":"T68168MUP","attachments":[{"title":"More Dots: Syntactic Loop Fusion in Julia","title_link":"https://julialang.org/blog/2017/01/moredots/","text":"More Dots: Syntactic Loop Fusion in Julia | After a lengthy design process (<https://github.com/JuliaLang/julia/issues/8450>) and preliminary foundations in Julia 0.5 (/blog/2016-10-11-julia-0.5-highlights#vectorized_function_calls), Julia 0.6 includes new facilities for writing code in the","fallback":"More Dots: Syntactic Loop Fusion in Julia","image_url":"https://julialang.org/assets/images/julia-open-graph.png","from_url":"https://julialang.org/blog/2017/01/moredots/","image_width":500,"image_height":250,"image_bytes":742374,"service_name":"julialang.org","id":1,"original_url":"https://julialang.org/blog/2017/01/moredots/"}],"blocks":[{"type":"rich_text","block_id":"ASZ7","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://julialang.org/blog/2017/01/moredots/"}]}]}],"thread_ts":"1615159338.058900","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"ad8b4d6d-a233-4548-8780-29b9939fba17","type":"message","text":"```julia&gt; reduce(*, [[1 2;3 4], [1 2;3 4]])\n2×2 Array{Int64,2}:\n  7  10\n 15  22\n\njulia&gt; (*).([[1 2;3 4], [1 2;3 4]]...)\n2×2 Array{Int64,2}:\n 1   4\n 9  16```","user":"UDD5Z7FLZ","ts":"1615160665.062700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8Ji","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> reduce(*, [[1 2;3 4], [1 2;3 4]])\n2×2 Array{Int64,2}:\n  7  10\n 15  22\n\njulia> (*).([[1 2;3 4], [1 2;3 4]]...)\n2×2 Array{Int64,2}:\n 1   4\n 9  16"}]}]}],"thread_ts":"1615159338.058900","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"6da81ac6-05dd-4572-8bec-af4dd8302605","type":"message","text":"I would suggest `reduce( x, y -&gt; x.*y, arrays)` and am not convinced what Keller suggested is what you wanted","user":"UDD5Z7FLZ","ts":"1615160783.063200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gqr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would suggest "},{"type":"text","text":"reduce( x, y -> x.*y, arrays)","style":{"code":true}},{"type":"text","text":" and am not convinced what Keller suggested is what you wanted"}]}]}],"thread_ts":"1615159338.058900","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"28c235b5-c779-4dd4-8c74-8ae48e852259","type":"message","text":"Right. I don't think it is based on your examples. Your second example is the result I want.","user":"UEA5FBCRH","ts":"1615160859.063400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mGl8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right. I don't think it is based on your examples. Your second example is the result I want."}]}]}],"thread_ts":"1615159338.058900","parent_user_id":"UEA5FBCRH"},{"client_msg_id":"d094da1a-66eb-46cf-a7bc-4ab2842ad6ed","type":"message","text":"In Julia 1.6, `reduce(.*, arrays)` would work, but not before I believe.","user":"UDD5Z7FLZ","ts":"1615160881.063600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q7pez","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In Julia 1.6, "},{"type":"text","text":"reduce(.*, arrays)","style":{"code":true}},{"type":"text","text":" would work, but not before I believe."}]}]}],"thread_ts":"1615159338.058900","parent_user_id":"UEA5FBCRH","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","UGU761DU2"],"count":2}]},{"client_msg_id":"2f21da9a-b9e1-4703-a05c-6e37a21fdded","type":"message","text":"Hmm so that does work on Julia 1.6. Nice.","user":"UEA5FBCRH","ts":"1615160947.063800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y3rdo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm so that does work on Julia 1.6. Nice."}]}]}],"thread_ts":"1615159338.058900","parent_user_id":"UEA5FBCRH"}]