[{"client_msg_id":"a7722b09-b99d-471c-a831-881ee89f0178","type":"message","text":"Say I have a `Float64` like 13.4. I want a mutable collection of the bytes. Is `collect(only(reinterpret(NTuple{8,UInt8}, [13.4])))` the only way to do it?","user":"U680THK2S","ts":"1615422586.304000","team":"T68168MUP","edited":{"user":"U680THK2S","ts":"1615422608.000000"},"blocks":[{"type":"rich_text","block_id":"rbLGy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Say I have a "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" like 13.4. I want a mutable collection of the bytes. Is "},{"type":"text","text":"collect(only(reinterpret(NTuple{8,UInt8}, [13.4])))","style":{"code":true}},{"type":"text","text":" the only way to do it?"}]}]}],"thread_ts":"1615422586.304000","reply_count":11,"reply_users_count":3,"latest_reply":"1615423592.307700","reply_users":["B01J9QZ4SP8","UDB26738Q","U680THK2S"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615422588.304200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615422586.304000","parent_user_id":"U680THK2S"},{"client_msg_id":"a21b11ba-bac9-47ba-9afb-6e4453f4fd7a","type":"message","text":"```julia&gt; reinterpret(UInt8, [13.4])\n8-element reinterpret(UInt8, ::Vector{Float64}):\n 0xcd\n 0xcc\n 0xcc\n 0xcc\n 0xcc\n 0xcc\n 0x2a\n 0x40```\nor `collect` around it if necessary","user":"UDB26738Q","ts":"1615422726.305200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XMkmO","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> reinterpret(UInt8, [13.4])\n8-element reinterpret(UInt8, ::Vector{Float64}):\n 0xcd\n 0xcc\n 0xcc\n 0xcc\n 0xcc\n 0xcc\n 0x2a\n 0x40"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"or "},{"type":"text","text":"collect","style":{"code":true}},{"type":"text","text":" around it if necessary"}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S"},{"client_msg_id":"b1c8c04c-332d-409f-b4cd-b90a01fb7ce5","type":"message","text":"Aha! That's perfect, thanks!","user":"U680THK2S","ts":"1615422770.305400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"onx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Aha! That's perfect, thanks!"}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S"},{"client_msg_id":"76355112-5648-4cba-9442-1056496837b9","type":"message","text":"I wonder why it's necessary from an implementation/interface perspective to require wrapping the input in an array","user":"U680THK2S","ts":"1615422938.306200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y4c/G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder why it's necessary from an implementation/interface perspective to require wrapping the input in an array"}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S"},{"client_msg_id":"fc0dcfda-2b28-43b3-af70-9feb62b3bb45","type":"message","text":"I wondered that a few times :smile:","user":"UDB26738Q","ts":"1615422970.306400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dq7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wondered that a few times "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S"},{"client_msg_id":"59bb31e9-5b37-459e-bc08-2bbfa11611d1","type":"message","text":"to get the ntuple, as you did in the above message, you have to allocate an array.  if you could just use `13.4` it would be allocations-free","user":"UDB26738Q","ts":"1615423116.306600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Es4Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to get the ntuple, as you did in the above message, you have to allocate an array.  if you could just use "},{"type":"text","text":"13.4","style":{"code":true}},{"type":"text","text":" it would be allocations-free"}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S"},{"client_msg_id":"30aa0871-189d-4978-ad8f-7bd6b1cdcd4f","type":"message","text":"and it isn't infrequent you want to unpack a `Float64` in smaller types if you're fiddling with C-like code","user":"UDB26738Q","ts":"1615423168.306800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pY3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and it isn't infrequent you want to unpack a "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" in smaller types if you're fiddling with C-like code"}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S","reactions":[{"name":"heavy_check_mark","users":["U680THK2S"],"count":1}]},{"client_msg_id":"637c654f-59d0-4638-ad84-00ed72bddc72","type":"message","text":"That's my exact use case for this :slightly_smiling_face:","user":"U680THK2S","ts":"1615423181.307100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F5T=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's my exact use case for this "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S"},{"client_msg_id":"f173061c-1f11-4996-9208-9b3d9762e476","type":"message","text":"in C you'd use the typedef with `float/double`","user":"UDB26738Q","ts":"1615423204.307300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jMA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in C you'd use the typedef with "},{"type":"text","text":"float/double","style":{"code":true}}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S"},{"client_msg_id":"7115a1ae-42c6-4a28-9ba7-bbe9866ec4ba","type":"message","text":"uhm, probably because the output is an array","user":"UDB26738Q","ts":"1615423443.307500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Go4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"uhm, probably because the output is an array"}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S"},{"client_msg_id":"38b4b37e-a0ce-4a1e-8f5d-661d16363f46","type":"message","text":"```julia&gt; a = [13.4]\n1-element Vector{Float64}:\n 13.4\n\njulia&gt; r = reinterpret(NTuple{2,Float32}, a)\n1-element reinterpret(Tuple{Float32, Float32}, ::Vector{Float64}):\n (-1.07374184f8, 2.6687498)\n\njulia&gt; pointer(r) == pointer(a)\ntrue```\nso `reinterpret` is kind of a view of the original data, so needs to be an array as well","user":"UDB26738Q","ts":"1615423592.307700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LC+","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a = [13.4]\n1-element Vector{Float64}:\n 13.4\n\njulia> r = reinterpret(NTuple{2,Float32}, a)\n1-element reinterpret(Tuple{Float32, Float32}, ::Vector{Float64}):\n (-1.07374184f8, 2.6687498)\n\njulia> pointer(r) == pointer(a)\ntrue"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so "},{"type":"text","text":"reinterpret","style":{"code":true}},{"type":"text","text":" is kind of a view of the original data, so needs to be an array as well"}]}]}],"thread_ts":"1615422586.304000","parent_user_id":"U680THK2S","reactions":[{"name":"+1","users":["U680THK2S"],"count":1}]}]