[{"client_msg_id":"15bf8bed-14b9-43fa-a161-5bc317aff945","type":"message","text":"Can anyone think of an easy, threadsafe way to build a dict, multithreaded? I could build a vector and then convert it to a Dict, but I'm not sure pushing to vectors are threadsafe either?","user":"U7HAYKY9X","ts":"1612806474.290100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LnW9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can anyone think of an easy, threadsafe way to build a dict, multithreaded? I could build a vector and then convert it to a Dict, but I'm not sure pushing to vectors are threadsafe either?"}]}]}],"thread_ts":"1612806474.290100","reply_count":27,"reply_users_count":9,"latest_reply":"1612854829.337800","reply_users":["B01J9QZ4SP8","UDB26738Q","U6NFPDBV1","U7HAYKY9X","U67SCG4HG","UH24GRBLL","U0179G7FG4F","UC7AF7NSU","UP9P4JFNJ"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612806476.290200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X","reactions":[{"name":"bridge","users":["U7HAYKY9X"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/54856| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1612806576.290500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"3f792541-9767-4199-8a5f-42508672c98c","type":"message","text":"pushing to a vector no, but to a\n```Vector{Vector{...}}(undef, nthreads()}```\nit is","user":"UDB26738Q","ts":"1612806603.290700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8ojC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pushing to a vector no, but to a\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Vector{Vector{...}}(undef, nthreads()}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"it is"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X","reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"1f0f2463-a47e-4a08-85d2-8214e3b901fc","type":"message","text":"There's also <https://github.com/wherrera10/ThreadSafeDicts.jl>","user":"U6NFPDBV1","ts":"1612806614.290900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dqs4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There's also "},{"type":"link","url":"https://github.com/wherrera10/ThreadSafeDicts.jl"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"f70cba54-a9ff-4069-a259-e5a2a2bd11d3","type":"message","text":"Alright. I'll do it  the roundabout way","user":"U7HAYKY9X","ts":"1612806662.291100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w2lp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alright. I'll do it  the roundabout way"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"0c15c100-389f-4c07-957f-9ddb5addc5fc","type":"message","text":"If the work of computing the elements is bigger than the time to insert you could just lock","user":"U67SCG4HG","ts":"1612806683.291300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KsQe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If the work of computing the elements is bigger than the time to insert you could just lock"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"375cc188-0d7e-4c3e-9f08-d3e57927c155","type":"message","text":"which is probably what ThreadSafeDicts.jl does?","user":"UDB26738Q","ts":"1612806713.291500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pk6FK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which is probably what ThreadSafeDicts.jl does?"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X","reactions":[{"name":"point_up","users":["U6NFPDBV1"],"count":1}]},{"client_msg_id":"5ba469ef-ed98-4af7-bb6a-677dbb105de6","type":"message","text":"Yea","user":"U67SCG4HG","ts":"1612806725.291700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xGtYz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"b7fd1d9c-f363-4232-9900-d78c7985742d","type":"message","text":"there isn't much documentation, to say the least, but there are references to locks everywhere :joy:","user":"UDB26738Q","ts":"1612806769.292000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ONoq7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there isn't much documentation, to say the least, but there are references to locks everywhere "},{"type":"emoji","name":"joy"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"d3c4022a-9d43-4c5d-8bb0-764589398aba","type":"message","text":"<https://github.com/JuliaServices/WorkerUtilities.jl/blob/2e0f59bbfad14dd0f3b4935f8a5e14b2955867b8/src/WorkerUtilities.jl#L74-L107> is also pretty convenient for `ThreadSafeAnything`","user":"U67SCG4HG","ts":"1612806777.292200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UXP","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaServices/WorkerUtilities.jl/blob/2e0f59bbfad14dd0f3b4935f8a5e14b2955867b8/src/WorkerUtilities.jl#L74-L107"},{"type":"text","text":" is also pretty convenient for "},{"type":"text","text":"ThreadSafeAnything","style":{"code":true}}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"f213190d-2cfd-4005-9c7d-03673a6daf91","type":"message","text":"yeah, lock-/wait-free programming is not easy right now","user":"UH24GRBLL","ts":"1612806923.292400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rI0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, lock-/wait-free programming is not easy right now"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"330a5c54-1384-4293-ba0c-fd69ef610093","type":"message","text":"I've spent my whole day reading about this and how it could be done in julia","user":"UH24GRBLL","ts":"1612806941.292600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eV6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've spent my whole day reading about this and how it could be done in julia"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"8b801b49-f0b6-49a1-b98d-0aef58a9ccaa","type":"message","text":"let's just say it's in the works","user":"UH24GRBLL","ts":"1612806949.292800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hu/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let's just say it's in the works"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"b544ed57-baee-450e-a1cb-9d9fb9d9b0d3","type":"message","text":"Can't you just build separate dicts per thread and merge them?","user":"U0179G7FG4F","ts":"1612807008.293000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AbIJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can't you just build separate dicts per thread and merge them?"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"afe5747a-2c04-42ab-a9ca-9f6dbf324c54","type":"message","text":"I opted for the following design\n```a = Vector{MyType}(undef, length(xs))\nThreads.@threads for (i, x) in collect(enumerate(xs))\n    a[i] = calc_mytype()\nend\nDict(zip(xs, a))```","user":"U7HAYKY9X","ts":"1612807071.293200","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1612807085.000000"},"blocks":[{"type":"rich_text","block_id":"NmRu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I opted for the following design\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"a = Vector{MyType}(undef, length(xs))\nThreads.@threads for (i, x) in collect(enumerate(xs))\n    a[i] = calc_mytype()\nend\nDict(zip(xs, a))"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","UC7AF7NSU"],"count":2}]},{"client_msg_id":"7c103ecd-c7e8-48e2-9af4-c3ba74a3434c","type":"message","text":"Works because `calc_mytype` is fairly slow, but thanks for the tip about ThreadSafeDicts :)","user":"U7HAYKY9X","ts":"1612807157.293600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eNL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Works because "},{"type":"text","text":"calc_mytype","style":{"code":true}},{"type":"text","text":" is fairly slow, but thanks for the tip about ThreadSafeDicts :)"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"697f2bb8-1676-4d38-b052-d6c47d3a3b7f","type":"message","text":"My tutorials explain how to use Dict with multiple threads: <https://juliafolds.github.io/data-parallelism/tutorials/quick-introduction/#histogram_with_reduce> / <https://juliafolds.github.io/Transducers.jl/dev/tutorials/tutorial_parallel/#Example:-ad-hoc-histogram>\n\nIf you want performance, using \"thread-safe\" data structure is not the best approach, usually.","user":"UC7AF7NSU","ts":"1612808678.293900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k+O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My tutorials explain how to use Dict with multiple threads: "},{"type":"link","url":"https://juliafolds.github.io/data-parallelism/tutorials/quick-introduction/#histogram_with_reduce"},{"type":"text","text":" / "},{"type":"link","url":"https://juliafolds.github.io/Transducers.jl/dev/tutorials/tutorial_parallel/#Example:-ad-hoc-histogram"},{"type":"text","text":"\n\nIf you want performance, using \"thread-safe\" data structure is not the best approach, usually."}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X","reactions":[{"name":"100","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"7603a65e-a696-467e-833f-e538189e2f5e","type":"message","text":"yes","user":"UH24GRBLL","ts":"1612808949.294200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"neq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"964d9e73-300b-43ca-9c99-b1cee92d221d","type":"message","text":"requiring thread safety is, if possible, best avoided","user":"UH24GRBLL","ts":"1612808965.294400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MZmB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"requiring thread safety is, if possible, best avoided"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"37a5a287-9699-468f-a173-49ab50d3423b","type":"message","text":"at least for now","user":"UH24GRBLL","ts":"1612808974.294600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tzC3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"at least for now"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ced97f3c-e837-40ee-a921-d8ead65e5351","type":"message","text":"In my case each element takes something like 200 ms to compute and is embarrasingly parallel so I can get pretty sloppy and still reap large benefits.","user":"U7HAYKY9X","ts":"1612809182.294800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Gn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In my case each element takes something like 200 ms to compute and is embarrasingly parallel so I can get pretty sloppy and still reap large benefits."}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"d771009c-1ebd-48c1-90b7-b9fe8abbabd0","type":"message","text":"That's pretty cool, <@UC7AF7NSU>!","user":"U7HAYKY9X","ts":"1612809419.295000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bU8yt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's pretty cool, "},{"type":"user","user_id":"UC7AF7NSU"},{"type":"text","text":"!"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X","reactions":[{"name":"+1","users":["UC7AF7NSU"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Hey <@U7HAYKY9X>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1612817386.295400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"7e717ea5-b4ab-420c-8ff9-5d1b982f0315","type":"message","text":"I have a <https://juliaactors.github.io/Actors.jl/dev/actors/#dict-server|lock-free example of a thread-safe Dict> in <https://github.com/JuliaActors/Actors.jl|Actors.jl>","user":"UP9P4JFNJ","ts":"1612854268.336400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"504=C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a "},{"type":"link","url":"https://juliaactors.github.io/Actors.jl/dev/actors/#dict-server","text":"lock-free example of a thread-safe Dict"},{"type":"text","text":" in "},{"type":"link","url":"https://github.com/JuliaActors/Actors.jl","text":"Actors.jl"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ac6fe841-b123-4904-be41-430fd0e480b2","type":"message","text":"interesting! is `lk` in that example the wrapped `Dict`?","user":"UH24GRBLL","ts":"1612854711.337400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ezuh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"interesting! is "},{"type":"text","text":"lk","style":{"code":true}},{"type":"text","text":" in that example the wrapped "},{"type":"text","text":"Dict","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"e8c24731-9b87-481d-9bc4-3b29c7210983","type":"message","text":"how do you prevent multiple actors from racing on `setindex!`?","user":"UH24GRBLL","ts":"1612854764.337600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HlThJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how do you prevent multiple actors from racing on "},{"type":"text","text":"setindex!","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"e771e843-165f-4fd9-959c-9eaf7e6366d9","type":"message","text":"how do you synchronize state between actors?","user":"UH24GRBLL","ts":"1612854829.337800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cVbxb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how do you synchronize state between actors?"}]}]}],"thread_ts":"1612806474.290100","parent_user_id":"U7HAYKY9X"}]