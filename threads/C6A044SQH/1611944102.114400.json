[{"client_msg_id":"c7ce2350-a3ef-43f7-9c1f-60efd6c4c6bf","type":"message","text":"Hi! I have a DataFrame with multiple columns of type Union{Missing, String}. What is the most concise manner of converting the non-missing values in Float?","user":"U01HEFY9D6Y","ts":"1611944102.114400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"biJhd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi! I have a DataFrame with multiple columns of type Union{Missing, String}. What is the most concise manner of converting the non-missing values in Float?"}]}]}],"thread_ts":"1611944102.114400","reply_count":12,"reply_users_count":3,"latest_reply":"1611944630.117300","reply_users":["B01J9QZ4SP8","UH8A351DJ","U01HEFY9D6Y"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Hey <@U01HEFY9D6Y>, Thanks for asking this question. Is it okay if we cross post this to Discourse for further visibility and in case someone has the same question in the future? If so, please react with :bridge: on the original message you sent above above ^ (not this threaded reply). Note that only reactions from the posts author will trigger a re-post. Thank you for being here!","ts":"1611944105.114500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y","reactions":[{"name":"bridge","users":["U01HEFY9D6Y"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Hey <@U01HEFY9D6Y>! Thanks for asking this question. It has been cross posted to discourse here: <https://discourse.julialang.org/t/hi-i-have-a-dataframe-with-multiple-columns-of-type-union-missing-string-what>. Please add an answer there once you are satisfied with the solution so others can benfit as well. ","ts":"1611944154.114800","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y","attachments":[{"service_name":"JuliaLang","title":"Hi! I have a DataFrame with multiple columns of type Union{Missing, String}. What","title_link":"https://discourse.julialang.org/t/hi-i-have-a-dataframe-with-multiple-columns-of-type-union-missing-string-what","text":"Hi! I have a DataFrame with multiple columns of type Union{Missing, String}. What is the most concise manner of converting the non-missing values in Float? (Original message :slack:)","fallback":"JuliaLang: Hi! I have a DataFrame with multiple columns of type Union{Missing, String}. What","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1611944153,"from_url":"https://discourse.julialang.org/t/hi-i-have-a-dataframe-with-multiple-columns-of-type-union-missing-string-what","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/hi-i-have-a-dataframe-with-multiple-columns-of-type-union-missing-string-what"}],"edited":{"user":"B01J9QZ4SP8","ts":"1611944156.000000"}},{"client_msg_id":"6fb22634-0170-4bfb-a136-d225b822975c","type":"message","text":"what do you want the `missing` to be after converting to float?","user":"UH8A351DJ","ts":"1611944164.115200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qjp7G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you want the "},{"type":"text","text":"missing","style":{"code":true}},{"type":"text","text":" to be after converting to float?"}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"},{"client_msg_id":"1fddc7bd-8f8c-412f-9652-1a423a69eb3f","type":"message","text":"Would be happy to keep it as `missing`","user":"U01HEFY9D6Y","ts":"1611944193.115500","team":"T68168MUP","edited":{"user":"U01HEFY9D6Y","ts":"1611944217.000000"},"blocks":[{"type":"rich_text","block_id":"=O=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would be happy to keep it as "},{"type":"text","text":"missing","style":{"code":true}}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"},{"client_msg_id":"72d7f52b-04c0-4b8e-80a4-c5fbafa5bb4f","type":"message","text":"I am wondering if I can have a similar behavior for `missing` in _Dataframe_ as `NaN` in _Pandas_","user":"U01HEFY9D6Y","ts":"1611944278.115800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iVn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am wondering if I can have a similar behavior for "},{"type":"text","text":"missing","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"Dataframe","style":{"italic":true}},{"type":"text","text":" as "},{"type":"text","text":"NaN","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"Pandas","style":{"italic":true}}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"},{"client_msg_id":"bce49eb3-50e6-4cee-8530-ed15824a7dc5","type":"message","text":"no, `NaN` is part of the IEEE floats, you can have `NaN` in Julia","user":"UH8A351DJ","ts":"1611944318.116000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cjT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, "},{"type":"text","text":"NaN","style":{"code":true}},{"type":"text","text":" is part of the IEEE floats, you can have "},{"type":"text","text":"NaN","style":{"code":true}},{"type":"text","text":" in Julia"}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"},{"client_msg_id":"8b24abc8-92b0-468f-a543-f0928504c01c","type":"message","text":"```julia&gt; f(x) = x===missing ? missing : parse(Float64, x)\nf (generic function with 1 method)\n\njulia&gt; f(missing)\nmissing\n\njulia&gt; f(\"3.5\")\n3.5```","user":"UH8A351DJ","ts":"1611944371.116200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UPJJ","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> f(x) = x===missing ? missing : parse(Float64, x)\nf (generic function with 1 method)\n\njulia> f(missing)\nmissing\n\njulia> f(\"3.5\")\n3.5"}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"},{"client_msg_id":"c09b5798-e6d0-4114-bb9d-0827e51a7ce0","type":"message","text":"you can apply this `f()` to your entire column to replace it by doing:\n```df.mycol = f.(df.mycol)```","user":"UH8A351DJ","ts":"1611944391.116400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U3qW1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can apply this "},{"type":"text","text":"f()","style":{"code":true}},{"type":"text","text":" to your entire column to replace it by doing:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df.mycol = f.(df.mycol)"}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"},{"client_msg_id":"3e5ab464-a1c6-4904-945d-0c58c942f863","type":"message","text":"Oh ok, thanks! And if I want to use NaN, I then use `f(x) = x===missing ? NaN : parse(Float64, x)`  ?","user":"U01HEFY9D6Y","ts":"1611944453.116600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Y1fg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh ok, thanks! And if I want to use NaN, I then use"},{"type":"text","text":" f(x) = x===missing ? NaN : parse(Float64, x)","style":{"code":true}},{"type":"text","text":"  ?"}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"},{"client_msg_id":"c6df00e9-f168-4fb5-9c2f-f2c43d50a6b1","type":"message","text":"yeah, this way your column will actually become of type `Float64` since `f()` is always gonna return a `Float64`","user":"UH8A351DJ","ts":"1611944489.116800","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1611944502.000000"},"blocks":[{"type":"rich_text","block_id":"9zsXl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, this way your column will actually become of type "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" since "},{"type":"text","text":"f()","style":{"code":true}},{"type":"text","text":" is always gonna return a "},{"type":"text","text":"Float64","style":{"code":true}}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"},{"client_msg_id":"b45cd314-7087-4ccd-bca4-69089f491a68","type":"message","text":"Wow, perfect!","user":"U01HEFY9D6Y","ts":"1611944617.117100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rhoy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow, perfect!"}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"},{"client_msg_id":"590a808c-a6b9-4a0e-b655-9b52298c25a4","type":"message","text":"Thank you so much :pray:","user":"U01HEFY9D6Y","ts":"1611944630.117300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ITyr=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you so much "},{"type":"emoji","name":"pray"}]}]}],"thread_ts":"1611944102.114400","parent_user_id":"U01HEFY9D6Y"}]