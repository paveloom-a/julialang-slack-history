[{"client_msg_id":"74fdc39c-1872-4100-87c4-18297e7266c6","type":"message","text":"Hi all!  I am trying to make a type that is a union type:\n```AbstractWord{N} = Union{NTuple{N, T}, AbstractVector{T}} where {T}```\nHowever, I want this method to work:\n```getlength(::AbstractWord{N}) where {N} = N```\nThis will currently only work if the input is an `NTuple`, not a vector.  I am wondering how I might go about doing this for the vector as well?","user":"U014LRLJXRP","ts":"1609549748.496700","team":"T68168MUP","edited":{"user":"U014LRLJXRP","ts":"1609549830.000000"},"blocks":[{"type":"rich_text","block_id":"7QnXa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all!  I am trying to make a type that is a union type:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"AbstractWord{N} = Union{NTuple{N, T}, AbstractVector{T}} where {T}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"However, I want this method to work:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"getlength(::AbstractWord{N}) where {N} = N"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"This will currently only work if the input is an "},{"type":"text","text":"NTuple","style":{"code":true}},{"type":"text","text":", not a vector.  I am wondering how I might go about doing this for the vector as well?"}]}]}],"thread_ts":"1609549748.496700","reply_count":6,"reply_users_count":3,"latest_reply":"1609576314.009300","reply_users":["U014LRLJXRP","U01FKQQ7J0J","UH24GRBLL"],"subscribed":false},{"client_msg_id":"ee1cba09-e022-46be-ad1e-2b0730498a62","type":"message","text":"I know I can just call `length` on either of the types in the union, but is that the best way?  I am unsure…","user":"U014LRLJXRP","ts":"1609549882.496900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s7tp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I know I can just call "},{"type":"text","text":"length","style":{"code":true}},{"type":"text","text":" on either of the types in the union, but is that the best way?  I am unsure…"}]}]}],"thread_ts":"1609549748.496700","parent_user_id":"U014LRLJXRP"},{"client_msg_id":"869cebac-17e5-40a9-bb78-6ca5d76ee001","type":"message","text":"Actually, I think I might not actually need to ever define this `getlength` function.  Am I overcomplicating everything for no reason??","user":"U014LRLJXRP","ts":"1609550182.497100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0R3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually, I think I might not actually need to ever define this "},{"type":"text","text":"getlength","style":{"code":true}},{"type":"text","text":" function.  Am I overcomplicating everything for no reason??"}]}]}],"thread_ts":"1609549748.496700","parent_user_id":"U014LRLJXRP"},{"client_msg_id":"a484f3e3-1e14-4917-b287-65f48fcaf621","type":"message","text":"Would it work to define two `getlength` methods?  One for `NTuple{N, T}` and one for `AbstractVectoer{T}` (and don't define one for `AbstractWord{N}`)?","user":"U01FKQQ7J0J","ts":"1609566761.007300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m/zE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would it work to define two "},{"type":"text","text":"getlength","style":{"code":true}},{"type":"text","text":" methods?  One for "},{"type":"text","text":"NTuple{N, T}","style":{"code":true}},{"type":"text","text":" and one for "},{"type":"text","text":"AbstractVectoer{T}","style":{"code":true}},{"type":"text","text":" (and don't define one for "},{"type":"text","text":"AbstractWord{N}","style":{"code":true}},{"type":"text","text":")?"}]}]}],"thread_ts":"1609549748.496700","parent_user_id":"U014LRLJXRP"},{"client_msg_id":"42B27CBE-B1DE-4ACD-B7E7-E638EA09BA9C","type":"message","text":"<@U01FKQQ7J0J> I think that would work, and I have ended up doing something similar :)","user":"U014LRLJXRP","ts":"1609566993.008900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ATk1j","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01FKQQ7J0J"},{"type":"text","text":" I think that would work, and I have ended up doing something similar :)"}]}]}],"thread_ts":"1609549748.496700","parent_user_id":"U014LRLJXRP"},{"client_msg_id":"2e198863-e35d-42c0-bc2e-87aa7097a0ae","type":"message","text":"`AbstractWord{N} = Union{NTuple{N, T}, &lt;:AbstractVector{T}} where {T}`","user":"UH24GRBLL","ts":"1609575828.009100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rj3Gw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"AbstractWord{N} = Union{NTuple{N, T}, <:AbstractVector{T}} where {T}","style":{"code":true}}]}]}],"thread_ts":"1609549748.496700","parent_user_id":"U014LRLJXRP"},{"client_msg_id":"9413ef9b-1e9b-4df6-8b8d-1713270dbcf9","type":"message","text":"that technically works for dispatch, but you won't get a `N` if it's a vector","user":"UH24GRBLL","ts":"1609576314.009300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uK7Nk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that technically works for dispatch, but you won't get a "},{"type":"text","text":"N","style":{"code":true}},{"type":"text","text":" if it's a vector"}]}]}],"thread_ts":"1609549748.496700","parent_user_id":"U014LRLJXRP"}]