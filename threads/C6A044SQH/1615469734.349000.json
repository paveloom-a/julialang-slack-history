[{"client_msg_id":"452e2173-66e9-44a0-97f7-12026b46b89f","type":"message","text":"Is there a package in Julia for unit tests which would have something similar to C++ Catch2 `SECTION` ? Sections define a tree of tests which get executed down to the leaves like so <https://github.com/catchorg/Catch2/blob/devel/docs/test-cases-and-sections.md#type-parametrised-test-cases> - could be translated to Julia like:\n```@testset \"vector\" begin\n  v = Vector{Int}()\n  @section \"can't pop when empty\" begin\n    @test_throws Error pop!(v)\n  end\n\n  @section \"adds one element\" begin\n    push!(v, 1)\n    @test length(v) == 1\n    \n    @section \"adds another element\" begin\n      push!(v, 1)\n      @test length(v) == 2\n    end\n\n    @section \"removes - empty\" begin\n      pop!(v)\n      @test isempty(v)\n    end\n  end```\nFor every leaf section in the tree all of the “branches” will get re-run. I like the approach because the setup of the test and testing complicated state transitions becomes natural.","user":"U86LUCPRP","ts":"1615469734.349000","team":"T68168MUP","edited":{"user":"U86LUCPRP","ts":"1615469968.000000"},"blocks":[{"type":"rich_text","block_id":"5GQ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a package in Julia for unit tests which would have something similar to C++ Catch2 "},{"type":"text","text":"SECTION","style":{"code":true}},{"type":"text","text":" ? Sections define a tree of tests which get executed down to the leaves like so "},{"type":"link","url":"https://github.com/catchorg/Catch2/blob/devel/docs/test-cases-and-sections.md#type-parametrised-test-cases"},{"type":"text","text":" - could be translated to Julia like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@testset \"vector\" begin\n  v = Vector{Int}()\n  @section \"can't pop when empty\" begin\n    @test_throws Error pop!(v)\n  end\n\n  @section \"adds one element\" begin\n    push!(v, 1)\n    @test length(v) == 1\n    \n    @section \"adds another element\" begin\n      push!(v, 1)\n      @test length(v) == 2\n    end\n\n    @section \"removes - empty\" begin\n      pop!(v)\n      @test isempty(v)\n    end\n  end"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"For every leaf section in the tree all of the “branches” will get re-run. I like the approach because the setup of the test and testing complicated state transitions becomes natural."}]}]}],"thread_ts":"1615469734.349000","reply_count":2,"reply_users_count":2,"latest_reply":"1615583681.021800","reply_users":["B01J9QZ4SP8","U6QGE7S86"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615469736.349100","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"6af9c796-6413-4e5e-8a61-2deee59eb030","type":"message","text":"<@U86LUCPRP> I saw your post on <#C688QKS7Q|internals>, but I'll try to answer it here.","user":"U6QGE7S86","ts":"1615583681.021800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AYD","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U86LUCPRP"},{"type":"text","text":" I saw your post on "},{"type":"channel","channel_id":"C688QKS7Q"},{"type":"text","text":", but I'll try to answer it here."}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"}]