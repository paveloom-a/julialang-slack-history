[{"client_msg_id":"452e2173-66e9-44a0-97f7-12026b46b89f","type":"message","text":"Is there a package in Julia for unit tests which would have something similar to C++ Catch2 `SECTION` ? Sections define a tree of tests which get executed down to the leaves like so <https://github.com/catchorg/Catch2/blob/devel/docs/test-cases-and-sections.md#type-parametrised-test-cases> - could be translated to Julia like:\n```@testset \"vector\" begin\n  v = Vector{Int}()\n  @section \"can't pop when empty\" begin\n    @test_throws Error pop!(v)\n  end\n\n  @section \"adds one element\" begin\n    push!(v, 1)\n    @test length(v) == 1\n    \n    @section \"adds another element\" begin\n      push!(v, 1)\n      @test length(v) == 2\n    end\n\n    @section \"removes - empty\" begin\n      pop!(v)\n      @test isempty(v)\n    end\n  end```\nFor every leaf section in the tree all of the “branches” will get re-run. I like the approach because the setup of the test and testing complicated state transitions becomes natural.","user":"U86LUCPRP","ts":"1615469734.349000","team":"T68168MUP","edited":{"user":"U86LUCPRP","ts":"1615469968.000000"},"blocks":[{"type":"rich_text","block_id":"5GQ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a package in Julia for unit tests which would have something similar to C++ Catch2 "},{"type":"text","text":"SECTION","style":{"code":true}},{"type":"text","text":" ? Sections define a tree of tests which get executed down to the leaves like so "},{"type":"link","url":"https://github.com/catchorg/Catch2/blob/devel/docs/test-cases-and-sections.md#type-parametrised-test-cases"},{"type":"text","text":" - could be translated to Julia like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@testset \"vector\" begin\n  v = Vector{Int}()\n  @section \"can't pop when empty\" begin\n    @test_throws Error pop!(v)\n  end\n\n  @section \"adds one element\" begin\n    push!(v, 1)\n    @test length(v) == 1\n    \n    @section \"adds another element\" begin\n      push!(v, 1)\n      @test length(v) == 2\n    end\n\n    @section \"removes - empty\" begin\n      pop!(v)\n      @test isempty(v)\n    end\n  end"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"For every leaf section in the tree all of the “branches” will get re-run. I like the approach because the setup of the test and testing complicated state transitions becomes natural."}]}]}],"thread_ts":"1615469734.349000","reply_count":12,"reply_users_count":3,"latest_reply":"1615801653.147000","reply_users":["B01J9QZ4SP8","U6QGE7S86","U86LUCPRP"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615469736.349100","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"6af9c796-6413-4e5e-8a61-2deee59eb030","type":"message","text":"<@U86LUCPRP> I saw your post on <#C688QKS7Q|internals>, but I'll try to answer it here.","user":"U6QGE7S86","ts":"1615583681.021800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AYD","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U86LUCPRP"},{"type":"text","text":" I saw your post on "},{"type":"channel","channel_id":"C688QKS7Q"},{"type":"text","text":", but I'll try to answer it here."}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"6db4e32d-ba7b-45b2-836e-d2f17a3193d1","type":"message","text":"Maybe I'm misunderstanding but why do you want the `@section` macro?","user":"U6QGE7S86","ts":"1615583715.022000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j4jM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe I'm misunderstanding but why do you want the "},{"type":"text","text":"@section","style":{"code":true}},{"type":"text","text":" macro?"}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"09319e84-d5cf-406d-9883-dda071c26e19","type":"message","text":"`@testset` already nests, so replacing your `@section` by `@testset` already works.","user":"U6QGE7S86","ts":"1615583742.022200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xUGF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":" already nests, so replacing your "},{"type":"text","text":"@section","style":{"code":true}},{"type":"text","text":" by "},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":" already works."}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"7742b514-969d-4ba9-9001-fe19abda04df","type":"message","text":"```@testset \"vector\" begin\n  v = Vector{Int}()\n  @section \"can't pop when empty\" begin\n    @test_throws Error pop!(v)\n  end\n  @section \"adds one element\" begin\n    push!(v, 1)\n    @test length(v) == 1\n    @section \"adds another element\" begin\n      push!(v, 1)\n      @test length(v) == 2\n    end\n    @section \"removes - empty\" begin\n      pop!(v)\n      @test isempty(v)\n    end\n  end```","user":"U6QGE7S86","ts":"1615583761.022400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V4se","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@testset \"vector\" begin\n  v = Vector{Int}()\n  @section \"can't pop when empty\" begin\n    @test_throws Error pop!(v)\n  end\n  @section \"adds one element\" begin\n    push!(v, 1)\n    @test length(v) == 1\n    @section \"adds another element\" begin\n      push!(v, 1)\n      @test length(v) == 2\n    end\n    @section \"removes - empty\" begin\n      pop!(v)\n      @test isempty(v)\n    end\n  end"}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"23bcd4e4-2f33-4233-b00a-3dd492127f09","type":"message","text":"<@U6QGE7S86> unfortunately `@testset` doesn’t work. The above test shouldn’t fail. When converted to `@testset`, it fails:\n```@testset \"vector\" begin\n    v = vector{int}()\n    @testset \"can't pop when empty\" begin\n        @test_throws error pop!(v)\n    end\n\n    @testset \"adds one element\" begin\n        push!(v, 1)\n        @test length(v) == 1\n\n        @testset \"adds another element\" begin\n            push!(v, 1)\n            @test length(v) == 2\n        end\n\n        @testset \"removes - empty\" begin\n            pop!(v)\n            @test isempty(v)\n        end\n    end\nend```\nthen\n```Test Summary:            | Pass  Fail  Error  Total\nvector                   |    2     1      1      4\n  can't pop when empty   |                 1      1\n  adds one element       |    2     1             3\n    adds another element |    1                   1\n    removes - empty      |          1             1```","user":"U86LUCPRP","ts":"1615585763.025700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hAjF","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6QGE7S86"},{"type":"text","text":" unfortunately "},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":" doesn’t work. The above test shouldn’t fail. When converted to "},{"type":"text","text":"@testset","style":{"code":true}},{"type":"text","text":", it fails:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@testset \"vector\" begin\n    v = vector{int}()\n    @testset \"can't pop when empty\" begin\n        @test_throws error pop!(v)\n    end\n\n    @testset \"adds one element\" begin\n        push!(v, 1)\n        @test length(v) == 1\n\n        @testset \"adds another element\" begin\n            push!(v, 1)\n            @test length(v) == 2\n        end\n\n        @testset \"removes - empty\" begin\n            pop!(v)\n            @test isempty(v)\n        end\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"then\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Test Summary:            | Pass  Fail  Error  Total\nvector                   |    2     1      1      4\n  can't pop when empty   |                 1      1\n  adds one element       |    2     1             3\n    adds another element |    1                   1\n    removes - empty      |          1             1"}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"72537705-ddf1-424f-9419-9751b53f9222","type":"message","text":"specifically - the “removes - empty” testset. With sections as done in Catch2, every path to the leaf “section” is executed separately. So “adds another element” and “removes - empty” get a brand new instance of Vector `v` each.","user":"U86LUCPRP","ts":"1615586036.026300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CQRjj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"specifically - the “removes - empty” testset. With sections as done in Catch2, every path to the leaf “section” is executed separately. So “adds another element” and “removes - empty” get a brand new instance of Vector "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":" each."}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"62bd4cda-3ee4-49e5-87d1-6a9fe3f2c1fd","type":"message","text":"Oh, I see, a copy of `v` gets defined for each leaf.","user":"U6QGE7S86","ts":"1615587168.029400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qg1cF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, I see, a copy of "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":" gets defined for each leaf."}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"c2039ef3-7acf-4a31-a6f1-497a93d16dc2","type":"message","text":"Hmmm.","user":"U6QGE7S86","ts":"1615587233.030000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nJt4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmm."}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"83404080-800b-4e76-9a57-eca7d7652322","type":"message","text":"Yeah, that does sound useful.","user":"U6QGE7S86","ts":"1615587238.030400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I5F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, that does sound useful."}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"5bfee754-9c79-4586-80b1-1a76a86a0d3e","type":"message","text":"<@U6QGE7S86> please see <https://github.com/dm3/BranchTests>","user":"U86LUCPRP","ts":"1615797398.146400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H+V","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6QGE7S86"},{"type":"text","text":" please see "},{"type":"link","url":"https://github.com/dm3/BranchTests"}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"},{"client_msg_id":"660e6754-3095-4326-ae92-e0f991fe9731","type":"message","text":"Oh neat!","user":"U6QGE7S86","ts":"1615801653.147000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ABt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh neat!"}]}]}],"thread_ts":"1615469734.349000","parent_user_id":"U86LUCPRP"}]