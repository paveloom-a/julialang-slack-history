[{"client_msg_id":"a75eb852-a47f-4267-af99-51f455da953e","type":"message","text":"Is it possible to generalize such function to arbitrary tuple size? I couldn't find relevant information in docs.\n```function from_vec(::Type{MyType{Tuple{T1, T2}}}, x) where {T1, T2}\n\tMyType((f(T1, x), f(T2, x)))\nend```","user":"UGTUKUHLN","ts":"1613382820.315100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oeE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it possible to generalize such function to arbitrary tuple size? I couldn't find relevant information in docs.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function from_vec(::Type{MyType{Tuple{T1, T2}}}, x) where {T1, T2}\n\tMyType((f(T1, x), f(T2, x)))\nend"}]}]}],"thread_ts":"1613382820.315100","reply_count":9,"reply_users_count":4,"latest_reply":"1613384022.321300","reply_users":["B01J9QZ4SP8","U7HAYKY9X","UGTUKUHLN","U6N6VQE30"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613382822.315200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613382820.315100","parent_user_id":"UGTUKUHLN","reactions":[{"name":"bridge","users":["UGTUKUHLN"],"count":1}]},{"client_msg_id":"24d590e3-b49c-48e6-a2ff-9fe7dad090fa","type":"message","text":"Check NTuple","user":"U7HAYKY9X","ts":"1613382849.315400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"96v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Check NTuple"}]}]}],"thread_ts":"1613382820.315100","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"f9e980e4-cec8-4b7b-8e77-f40d185f1e1b","type":"message","text":"NTuple only works for same types within tuple, right?","user":"UGTUKUHLN","ts":"1613382873.315600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sHR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NTuple only works for same types within tuple, right?"}]}]}],"thread_ts":"1613382820.315100","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"ec4dd9e9-6c74-476d-bb77-d7115b5f68ac","type":"message","text":"Vararg","user":"U6N6VQE30","ts":"1613382878.315800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KMr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Vararg"}]}]}],"thread_ts":"1613382820.315100","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"6543b884-6130-42cb-8844-6563a6c05efa","type":"message","text":"<@U6N6VQE30> I tried playing with Vararg, but cannot understand its usage here","user":"UGTUKUHLN","ts":"1613382915.316200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yh9","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6N6VQE30"},{"type":"text","text":" I tried playing with Vararg, but cannot understand its usage here"}]}]}],"thread_ts":"1613382820.315100","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"f90b801d-551b-4db0-a7b1-86971b4c1c51","type":"message","text":"I can put `Tuple{Vararg{Any, N}}` into the signature, but then I somehow need to access types of tuple elements within the function","user":"UGTUKUHLN","ts":"1613383188.317800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hD6da","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can put "},{"type":"text","text":"Tuple{Vararg{Any, N}}","style":{"code":true}},{"type":"text","text":" into the signature, but then I somehow need to access types of tuple elements within the function"}]}]}],"thread_ts":"1613382820.315100","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"e8e64382-1ad0-4d5e-a710-6d7bf9cc8859","type":"message","text":"Oh, sorry, you only have the type, not an instance. Maybe you can do\n\n```from_vec(::Type{MyType{T}}, x) where {T&lt;:Tuple} =\n  MyType(map(S -&gt; S(x), T.parameters))```","user":"U6N6VQE30","ts":"1613383509.319600","team":"T68168MUP","edited":{"user":"U6N6VQE30","ts":"1613383581.000000"},"blocks":[{"type":"rich_text","block_id":"2Zu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, sorry, you only have the type, not an instance. Maybe you can do\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"from_vec(::Type{MyType{T}}, x) where {T<:Tuple} =\n  MyType(map(S -> S(x), T.parameters))"}]}]}],"thread_ts":"1613382820.315100","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"d763fb17-fe5d-40de-a095-6741ac870593","type":"message","text":"This gives `MyType{Vector{Any}}`. Changing to\n```from_vec(::Type{MyType{T}}, x) where {T&lt;:Tuple} = MyType(Tuple(map(S -&gt; S(x), T.parameters)))```\nreturns the correct type, but is not stable.","user":"UGTUKUHLN","ts":"1613383935.320800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u13","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This gives "},{"type":"text","text":"MyType{Vector{Any}}","style":{"code":true}},{"type":"text","text":". Changing to\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"from_vec(::Type{MyType{T}}, x) where {T<:Tuple} = MyType(Tuple(map(S -> S(x), T.parameters)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"returns the correct type, but is not stable."}]}]}],"thread_ts":"1613382820.315100","parent_user_id":"UGTUKUHLN"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/55305| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1613384022.321300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613382820.315100","parent_user_id":"UGTUKUHLN"}]