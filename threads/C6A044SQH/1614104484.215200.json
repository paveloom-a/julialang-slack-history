[{"client_msg_id":"e07cde9c-408f-479f-be22-b47183c082ed","type":"message","text":"Is there a way to restrict two fields in a struct to either be both `AbstractTypeA` or both `AbstractTypeB`, but not necessarily the same concrete type?","user":"U01AZS0JT6K","ts":"1614104484.215200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qiI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to restrict two fields in a struct to either be both "},{"type":"text","text":"AbstractTypeA","style":{"code":true}},{"type":"text","text":" or both "},{"type":"text","text":"AbstractTypeB","style":{"code":true}},{"type":"text","text":", but not necessarily the same concrete type?"}]}]}],"thread_ts":"1614104484.215200","reply_count":11,"reply_users_count":6,"latest_reply":"1614115322.227000","reply_users":["B01J9QZ4SP8","U0179G7FG4F","USU9FRPEU","UDB26738Q","U7HAYKY9X","U01AZS0JT6K"],"subscribed":false,"reactions":[{"name":"bridge","users":["U01AZS0JT6K"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614104485.215300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/55873| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1614104516.215600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K"},{"client_msg_id":"455c394b-fe7f-4f30-9ae7-30a40e046f05","type":"message","text":"Isn't this just `Union{AbstractTypeA,AbstractTypeB}`","user":"U0179G7FG4F","ts":"1614104556.215800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7bv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Isn't this just "},{"type":"text","text":"Union{AbstractTypeA,AbstractTypeB}","style":{"code":true}}]}]}],"thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K"},{"client_msg_id":"ca8dc070-94b5-4dfa-a3db-918c41570081","type":"message","text":"But they both need to be the same","user":"USU9FRPEU","ts":"1614104571.216000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"C5oH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But they both need to be the same"}]}]}],"thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K","reactions":[{"name":"point_up","users":["U01AZS0JT6K"],"count":1}]},{"client_msg_id":"1b3a5b07-b9d9-4359-9f7f-804da3cf1269","type":"message","text":"I think you need a Union of structs with different parameters.","user":"USU9FRPEU","ts":"1614104595.216200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AKO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you need a Union of structs with different parameters."}]}]}],"thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K"},{"client_msg_id":"ae42d173-a314-4831-87d9-43e79602b655","type":"message","text":"or maybe an extra parameter to the struct?","user":"UDB26738Q","ts":"1614104610.216400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9OX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or maybe an extra parameter to the struct?"}]}]}],"thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K","reactions":[{"name":"+1","users":["USU9FRPEU"],"count":1}]},{"client_msg_id":"dfb436a7-0f29-4b42-b47b-4a132057e7dd","type":"message","text":"```julia&gt; struct Foo{T&lt;:Union{Integer,AbstractFloat}, A&lt;:T, B&lt;:T}\n           a::A\n           b::B\n       end\n\njulia&gt; Foo{AbstractFloat,Float32,Float64}(1.0, 2.0)\nFoo{AbstractFloat, Float32, Float64}(1.0f0, 2.0)\n\njulia&gt; Foo{Integer,UInt8,Int32}(1, 2)\nFoo{Integer, UInt8, Int32}(0x01, 2)\n\njulia&gt; Foo{Integer,Float64,Int32}(1.0, 2)\nERROR: TypeError: in Foo, in A, expected A&lt;:T&lt;:Union{AbstractFloat, Integer}, got Type{Float64}\nStacktrace:\n [1] top-level scope\n   @ REPL[4]:1```","user":"UDB26738Q","ts":"1614104852.217200","team":"T68168MUP","edited":{"user":"UDB26738Q","ts":"1614105046.000000"},"blocks":[{"type":"rich_text","block_id":"/12I5","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct Foo{T<:Union{Integer,AbstractFloat}, A<:T, B<:T}\n           a::A\n           b::B\n       end\n\njulia> Foo{AbstractFloat,Float32,Float64}(1.0, 2.0)\nFoo{AbstractFloat, Float32, Float64}(1.0f0, 2.0)\n\njulia> Foo{Integer,UInt8,Int32}(1, 2)\nFoo{Integer, UInt8, Int32}(0x01, 2)\n\njulia> Foo{Integer,Float64,Int32}(1.0, 2)\nERROR: TypeError: in Foo, in A, expected A<:T<:Union{AbstractFloat, Integer}, got Type{Float64}\nStacktrace:\n [1] top-level scope\n   @ REPL[4]:1"}]}]}],"thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K","reactions":[{"name":"+1","users":["U01AZS0JT6K"],"count":1}]},{"client_msg_id":"f9b6536b-2977-4c30-8181-bd1fc2b01c1e","type":"message","text":"Or just have it in the constructor to save a parameter :)","user":"U7HAYKY9X","ts":"1614105084.217700","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1614105108.000000"},"blocks":[{"type":"rich_text","block_id":"w7zg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or just have it in the constructor to save a parameter :)"}]}]}],"thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K"},{"client_msg_id":"d3664363-8c46-4c2a-b484-204abb7597e4","type":"message","text":"<@U7HAYKY9X> Could you elaborate - what do you mean by \"it\"?","user":"U01AZS0JT6K","ts":"1614105464.218100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vgh1","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" Could you elaborate - what do you mean by \"it\"?"}]}]}],"thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K"},{"client_msg_id":"1c89f024-c419-4f47-bd0e-76f5f8a9f273","type":"message","text":"```struct Foo{A, B}\n\tx::A\n\ty::B\n\n\tfunction Foo{A, B}(x::A, y::B) where {A, B}\n\t\tif !((A &lt;: Integer &amp;&amp; B &lt;: Integer) || (A &lt;: AbstractFloat &amp;&amp; B &lt;: AbstractFloat))\n\t\t\terror(\"In Foo, Types A and B must have same supertype\")\n\t\tend\n\t\tnew{A, B}(x, y)\n\tend\nend```","user":"U7HAYKY9X","ts":"1614106434.218800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"scPQ","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Foo{A, B}\n\tx::A\n\ty::B\n\n\tfunction Foo{A, B}(x::A, y::B) where {A, B}\n\t\tif !((A <: Integer && B <: Integer) || (A <: AbstractFloat && B <: AbstractFloat))\n\t\t\terror(\"In Foo, Types A and B must have same supertype\")\n\t\tend\n\t\tnew{A, B}(x, y)\n\tend\nend"}]}]}],"thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K","reactions":[{"name":"+1","users":["U01AZS0JT6K"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Hey <@U01AZS0JT6K>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1614115322.227000","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614104484.215200","parent_user_id":"U01AZS0JT6K"}]