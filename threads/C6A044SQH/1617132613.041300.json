[{"client_msg_id":"62b1f159-9fb6-4824-9cc2-1aa3f98d030c","type":"message","text":"[SOLVED]","user":"U017D621ELC","ts":"1617132613.041300","team":"T68168MUP","edited":{"user":"U017D621ELC","ts":"1617133562.000000"},"blocks":[{"type":"rich_text","block_id":"ramOP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"[SOLVED]"}]}]}],"thread_ts":"1617132613.041300","reply_count":7,"reply_users_count":4,"latest_reply":"1617133472.044700","reply_users":["U017D621ELC","UH24GRBLL","U01HD5VFXJM","UM30MT6RF"],"is_locked":false,"subscribed":false},{"client_msg_id":"a0b2fe7a-b159-449b-8468-535a6e05c6e8","type":"message","text":"```julia&gt; function sumxbad(x)\n           s = zero(eltype(x))\n           for elt in x\n               println(\"Bad\")\n               s += elt\n           end\n           return s\n       end\njulia&gt; @code_warntype sumxbad([1, 2, 4])\nVariables\n  #self#::Core.Const(sumxbad)\n  x::Vector{Int64}\n  @_3::Union{Nothing, Tuple{Int64, Int64}} # red color shows up here..\n  s::Int64\n  elt::Int64\n\nBody::Int64\n1 ─ %1 = Main.eltype(x)::Core.Const(Int64)\n│        (s = Main.zero(%1))\n│   %3 = x::Vector{Int64}\n│        (@_3 = Base.iterate(%3))\n│   %5 = (@_3 === nothing)::Bool\n│   %6 = Base.not_int(%5)::Bool\n└──      goto #3 if not %6\n2 ─ %8 = @_3::Tuple{Int64, Int64}::Tuple{Int64, Int64}\n│        (elt = Core.getfield(%8, 1))\n│        Core.getfield(%8, 2)\n│        Main.println(\"Bad\")\n│        (s = s::Core.Const(0) + x)\n│        Core.Const(:(@_3 = Base.iterate(%3, %10)))\n│        Core.Const(:(@_3 === nothing))\n│        Core.Const(:(Base.not_int(%14)))\n│        Core.Const(:(goto %18 if not %15))\n└──      Core.Const(:(goto %8))\n3 ┄      return s::Core.Const(0)```\n","user":"U017D621ELC","ts":"1617132672.041600","team":"T68168MUP","edited":{"user":"U017D621ELC","ts":"1617133235.000000"},"blocks":[{"type":"rich_text","block_id":"1ny","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function sumxbad(x)\n           s = zero(eltype(x))\n           for elt in x\n               println(\"Bad\")\n               s += elt\n           end\n           return s\n       end\njulia> @code_warntype sumxbad([1, 2, 4])\nVariables\n  #self#::Core.Const(sumxbad)\n  x::Vector{Int64}\n  @_3::Union{Nothing, Tuple{Int64, Int64}} # red color shows up here..\n  s::Int64\n  elt::Int64\n\nBody::Int64\n1 ─ %1 = Main.eltype(x)::Core.Const(Int64)\n│        (s = Main.zero(%1))\n│   %3 = x::Vector{Int64}\n│        (@_3 = Base.iterate(%3))\n│   %5 = (@_3 === nothing)::Bool\n│   %6 = Base.not_int(%5)::Bool\n└──      goto #3 if not %6\n2 ─ %8 = @_3::Tuple{Int64, Int64}::Tuple{Int64, Int64}\n│        (elt = Core.getfield(%8, 1))\n│        Core.getfield(%8, 2)\n│        Main.println(\"Bad\")\n│        (s = s::Core.Const(0) + x)\n│        Core.Const(:(@_3 = Base.iterate(%3, %10)))\n│        Core.Const(:(@_3 === nothing))\n│        Core.Const(:(Base.not_int(%14)))\n│        Core.Const(:(goto %18 if not %15))\n└──      Core.Const(:(goto %8))\n3 ┄      return s::Core.Const(0)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617132613.041300","parent_user_id":"U017D621ELC"},{"client_msg_id":"d88d33e6-f761-4555-8bf7-dfc53dcd9015","type":"message","text":"`s` is first the zero of the elements of `x` and then you add `x` (the collection) to it?","user":"UH24GRBLL","ts":"1617132733.041800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lRKc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"s","style":{"code":true}},{"type":"text","text":" is first the zero of the elements of "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" and then you add "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" (the collection) to it?"}]}]}],"thread_ts":"1617132613.041300","parent_user_id":"U017D621ELC"},{"client_msg_id":"9397562b-29fc-40f4-8c79-dcbe1148103d","type":"message","text":"Is it really a type instability if the return type is inferred correctly? (it shows up yellow for me, not red, which is a notice of a potential issue but not necessarily a problem)","user":"U01HD5VFXJM","ts":"1617133026.042500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QOUa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it really a type instability if the return type is inferred correctly? (it shows up yellow for me, not red, which is a notice of a potential issue but not necessarily a problem)"}]}]}],"thread_ts":"1617132613.041300","parent_user_id":"U017D621ELC"},{"client_msg_id":"764dcd34-f4a1-49e6-bf68-79449a5fe53d","type":"message","text":"This is due to how iterators are implemented (see <https://docs.julialang.org/en/v1/manual/interfaces/#man-interface-iteration|https://docs.julialang.org/en/v1/manual/interfaces/#man-interface-iteration>). Since it's a small union, this is completely fine performance wise","user":"UM30MT6RF","ts":"1617133057.042700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r6y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is due to how iterators are implemented (see "},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/interfaces/#man-interface-iteration","text":"https://docs.julialang.org/en/v1/manual/interfaces/#man-interface-iteration"},{"type":"text","text":"). Since it's a small union, this is completely fine performance wise"}]}]}],"thread_ts":"1617132613.041300","parent_user_id":"U017D621ELC","reactions":[{"name":"today-i-learned","users":["U017D621ELC"],"count":1}]},{"client_msg_id":"025ef942-eb76-4e25-b38c-6ed22a4d7618","type":"message","text":"if it's just yellow that's normal - `@_3` is the return value of `iterate(x,state)`","user":"UH24GRBLL","ts":"1617133064.042900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oEcA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if it's just yellow that's normal - "},{"type":"text","text":"@_3","style":{"code":true}},{"type":"text","text":" is the return value of "},{"type":"text","text":"iterate(x,state)","style":{"code":true}}]}]}],"thread_ts":"1617132613.041300","parent_user_id":"U017D621ELC","reactions":[{"name":"+1","users":["U017D621ELC"],"count":1}]},{"client_msg_id":"844faca0-6465-470d-801c-72a35450dec7","type":"message","text":"<@UH24GRBLL>, sorry for the error, it still persists after changing the code","user":"U017D621ELC","ts":"1617133196.043100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vuvib","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UH24GRBLL"},{"type":"text","text":", sorry for the error, it still persists after changing the code"}]}]}],"thread_ts":"1617132613.041300","parent_user_id":"U017D621ELC"},{"client_msg_id":"6abf83fc-3771-47ab-9d37-45256ad8bbdc","type":"message","text":"okay, it was actually a silly error on my part, turns out that the monokai theme on OhMyREPL highlights warnings and instabilities as red, just different shades. Thanks for the replies!","user":"U017D621ELC","ts":"1617133472.044700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SJE6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay, it was actually a silly error on my part, turns out that the monokai theme on OhMyREPL highlights warnings and instabilities as red, just different shades. Thanks for the replies!"}]}]}],"thread_ts":"1617132613.041300","parent_user_id":"U017D621ELC","reactions":[{"name":"+1","users":["U01HD5VFXJM"],"count":1}]}]