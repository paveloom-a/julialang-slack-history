[{"type":"message","text":"Are there any libraries for discrete probability tables in order to do these type of operations directly (see images)?\n\nI'm looking for having discrete probability tables with these operations defined on them. I also want them to be sparse (see last image). I.e., I want zero probabilities (or sometimes even an arbitrary common-to-many-states probability) to have no \"entry\"/ take up no memory.\n\nIs there anything that already fit these requirements? Or are there perhaps some legwork that I can pick up and enhance?","files":[{"id":"F01NBQ31Q00","created":1612960891,"timestamp":1612960891,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U018FJVBXPD","editable":false,"size":68087,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01NBQ31Q00/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01NBQ31Q00/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01NBQ31Q00-a8b5240aa8/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01NBQ31Q00-a8b5240aa8/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01NBQ31Q00-a8b5240aa8/image_360.png","thumb_360_w":360,"thumb_360_h":177,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01NBQ31Q00-a8b5240aa8/image_480.png","thumb_480_w":480,"thumb_480_h":237,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01NBQ31Q00-a8b5240aa8/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01NBQ31Q00-a8b5240aa8/image_720.png","thumb_720_w":720,"thumb_720_h":355,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01NBQ31Q00-a8b5240aa8/image_800.png","thumb_800_w":800,"thumb_800_h":394,"original_w":915,"original_h":451,"thumb_tiny":"AwAXADDSY0m70oYE0m08UAKGyelKT81IFIIpcc5oAQkZ70oOaCuaAMUAMcNu4pNrVIetJQAza1JtapKKAGbW96coO4daWlFAH//Z","permalink":"https://julialang.slack.com/files/U018FJVBXPD/F01NBQ31Q00/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01NBQ31Q00-30f2b146a7","is_starred":false,"has_rich_preview":false},{"id":"F01MN5CHP0T","created":1612960931,"timestamp":1612960931,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U018FJVBXPD","editable":false,"size":140791,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01MN5CHP0T/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01MN5CHP0T/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01MN5CHP0T-0fb72f19b8/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01MN5CHP0T-0fb72f19b8/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01MN5CHP0T-0fb72f19b8/image_360.png","thumb_360_w":356,"thumb_360_h":360,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01MN5CHP0T-0fb72f19b8/image_480.png","thumb_480_w":475,"thumb_480_h":480,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01MN5CHP0T-0fb72f19b8/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01MN5CHP0T-0fb72f19b8/image_720.png","thumb_720_w":712,"thumb_720_h":720,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01MN5CHP0T-0fb72f19b8/image_800.png","thumb_800_w":800,"thumb_800_h":809,"original_w":885,"original_h":895,"thumb_tiny":"AwAwAC/SJAPWkJ98UjdaUrk0ALnP/wCum7h70oBHWkI570ALuxnHNKDntTCDzTlBBOaAGs5DYpN5PapCgJzSBR6H86AGbm9KNzelPKgev50bR7/nQAzc3pTlYkjNLtHofzoCjrg/iaAHHpUeDxxQzsDxSb2oAcegpcApimb2o3H0oAUdakHSog7U5WJYAkUAf//Z","permalink":"https://julialang.slack.com/files/U018FJVBXPD/F01MN5CHP0T/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01MN5CHP0T-f5d681a35f","is_starred":false,"has_rich_preview":false},{"id":"F01MF6111NJ","created":1612960981,"timestamp":1612960981,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U018FJVBXPD","editable":false,"size":64007,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01MF6111NJ/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01MF6111NJ/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01MF6111NJ-9a421cbac2/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01MF6111NJ-9a421cbac2/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01MF6111NJ-9a421cbac2/image_360.png","thumb_360_w":360,"thumb_360_h":173,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01MF6111NJ-9a421cbac2/image_480.png","thumb_480_w":480,"thumb_480_h":231,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01MF6111NJ-9a421cbac2/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01MF6111NJ-9a421cbac2/image_720.png","thumb_720_w":720,"thumb_720_h":347,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01MF6111NJ-9a421cbac2/image_800.png","thumb_800_w":800,"thumb_800_h":385,"original_w":887,"original_h":427,"thumb_tiny":"AwAXADDSY4FIG570pIPGabhfUUAOJx0NGTjNIcHvRkYxmgYBunWlHTrmm4HqKcCOBmgREw+akxTm+8aSgAwPejA9TRRQAYHvSr94YpKcn3hQB//Z","permalink":"https://julialang.slack.com/files/U018FJVBXPD/F01MF6111NJ/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01MF6111NJ-0f16427759","is_starred":false,"has_rich_preview":false},{"id":"F01MN5GEZEF","created":1612961005,"timestamp":1612961005,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U018FJVBXPD","editable":false,"size":62854,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01MN5GEZEF/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01MN5GEZEF/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01MN5GEZEF-a2a0d68c89/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01MN5GEZEF-a2a0d68c89/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01MN5GEZEF-a2a0d68c89/image_360.png","thumb_360_w":360,"thumb_360_h":170,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01MN5GEZEF-a2a0d68c89/image_480.png","thumb_480_w":480,"thumb_480_h":227,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01MN5GEZEF-a2a0d68c89/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01MN5GEZEF-a2a0d68c89/image_720.png","thumb_720_w":720,"thumb_720_h":341,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01MN5GEZEF-a2a0d68c89/image_800.png","thumb_800_w":800,"thumb_800_h":379,"original_w":885,"original_h":419,"thumb_tiny":"AwAWADDTPSmbhnvTm6U3B9KADcaUEkUm00o4GDQABh6mlH1pu30p4GBQBGQ27rRhvWnHrRQA3DetGG9adRQA3Dev60oByP8AGlpR1oA//9k=","permalink":"https://julialang.slack.com/files/U018FJVBXPD/F01MN5GEZEF/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01MN5GEZEF-7084e51c70","is_starred":false,"has_rich_preview":false},{"id":"F01MU4D4DKN","created":1612961024,"timestamp":1612961024,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U018FJVBXPD","editable":false,"size":64812,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01MU4D4DKN/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01MU4D4DKN/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01MU4D4DKN-a4e6d3cf4d/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01MU4D4DKN-a4e6d3cf4d/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01MU4D4DKN-a4e6d3cf4d/image_360.png","thumb_360_w":360,"thumb_360_h":192,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01MU4D4DKN-a4e6d3cf4d/image_480.png","thumb_480_w":480,"thumb_480_h":256,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01MU4D4DKN-a4e6d3cf4d/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01MU4D4DKN-a4e6d3cf4d/image_720.png","thumb_720_w":720,"thumb_720_h":383,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01MU4D4DKN-a4e6d3cf4d/image_800.png","thumb_800_w":800,"thumb_800_h":426,"original_w":907,"original_h":483,"thumb_tiny":"AwAZADDTpu4etKelMx9aAHb6VTkUwD2p6jjFACZHqacOlN2mnDgUARszBuDSb29alooAi3N6il3H+8KkooAi3H+8KcrHcOc0+igD/9k=","permalink":"https://julialang.slack.com/files/U018FJVBXPD/F01MU4D4DKN/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01MU4D4DKN-996af17d46","is_starred":false,"has_rich_preview":false},{"id":"F01MU4FTCMS","created":1612961073,"timestamp":1612961073,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U018FJVBXPD","editable":false,"size":76499,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01MU4FTCMS/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01MU4FTCMS/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01MU4FTCMS-60e7398c3c/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01MU4FTCMS-60e7398c3c/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01MU4FTCMS-60e7398c3c/image_360.png","thumb_360_w":360,"thumb_360_h":191,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01MU4FTCMS-60e7398c3c/image_480.png","thumb_480_w":480,"thumb_480_h":255,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01MU4FTCMS-60e7398c3c/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01MU4FTCMS-60e7398c3c/image_720.png","thumb_720_w":720,"thumb_720_h":382,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01MU4FTCMS-60e7398c3c/image_800.png","thumb_800_w":800,"thumb_800_h":425,"original_w":891,"original_h":473,"thumb_tiny":"AwAZADDRJGeTRvHakI5pMZoAcDk96Unnk00DBHFK3WgA3D3NKGyelMxTgMHpQAwu2etG9qlooAi3tQHb1qWigCLcf7wpysSwGc0+igD/2Q==","permalink":"https://julialang.slack.com/files/U018FJVBXPD/F01MU4FTCMS/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01MU4FTCMS-d7e4141871","is_starred":false,"has_rich_preview":false},{"id":"F01N0JEQWDP","created":1612961311,"timestamp":1612961311,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U018FJVBXPD","editable":false,"size":50131,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01N0JEQWDP/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01N0JEQWDP/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01N0JEQWDP-fd280eb57c/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01N0JEQWDP-fd280eb57c/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01N0JEQWDP-fd280eb57c/image_360.png","thumb_360_w":360,"thumb_360_h":267,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01N0JEQWDP-fd280eb57c/image_160.png","original_w":380,"original_h":282,"thumb_tiny":"AwAjADDTpDnI5paO9ADRnjntQASOppQOn0oXpQAgyT948U6mp1b8KdQAUhyOabk5PWkyeeT+VADgxyOD+VKM80zLep/L/wCtS5bPf8v/AK1ADgO+OtLUeW9T/n8KXLZ7/wCfwoAdtX0FG1c5wKWigAooooAKKKKAP//Z","permalink":"https://julialang.slack.com/files/U018FJVBXPD/F01N0JEQWDP/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01N0JEQWDP-4bb2ca39a9","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"aoe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any libraries for discrete probability tables in order to do these type of operations directly (see images)?\n\nI'm looking for having discrete probability tables with these operations defined on them. I also want them to be sparse (see last image). I.e., I want zero probabilities (or sometimes even an arbitrary common-to-many-states probability) to have no \"entry\"/ take up no memory.\n\nIs there anything that already fit these requirements? Or are there perhaps some legwork that I can pick up and enhance?"}]}]}],"user":"U018FJVBXPD","ts":"1612961520.462300","thread_ts":"1612961520.462300","reply_count":10,"reply_users_count":3,"latest_reply":"1612983026.482700","reply_users":["B01J9QZ4SP8","U019K6Q9N15","U018FJVBXPD"],"subscribed":false,"reactions":[{"name":"bridge","users":["U018FJVBXPD"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612961522.462400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/54990| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1612962840.464300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD"},{"type":"message","subtype":"bot_message","text":"Hey <@U018FJVBXPD>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1612973642.472600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"d8bc8f35-574e-4524-b4c3-dffde9505d3a","type":"message","text":"`Distributions.jl` has discrete distributions, but these operations are best represented by linear algebra. `LinearAlgebra` should suffice entirely.","user":"U019K6Q9N15","ts":"1612976332.477600","team":"T68168MUP","edited":{"user":"U019K6Q9N15","ts":"1612976373.000000"},"blocks":[{"type":"rich_text","block_id":"GKW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Distributions.jl","style":{"code":true}},{"type":"text","text":" has discrete distributions, but these operations are best represented by linear algebra. "},{"type":"text","text":"LinearAlgebra","style":{"code":true}},{"type":"text","text":" should suffice entirely."}]}]}],"thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD"},{"type":"message","text":"So I was thinking the same some years ago and got frustrated with\n• matching/reshuffling dimensions to fit the \"variable\" labels. E.g. p(x,y,z) == p(y,x,z), and p(x,y)  may be multiplied with p(y,z) with only one variable in the overlapping scope.\n• I wanted a sparse implementation, and I'm not sure how the memory mapping reshaping arrays worked back in the day in Python.\nIn C++ I have an object that with the main data structure similar to  `Dict{Vector{Int}, Any}` to represent this:","files":[{"id":"F01NDGPQNGY","created":1612981137,"timestamp":1612981137,"name":"image (6).png","title":"image (6).png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U018FJVBXPD","editable":false,"size":50131,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01NDGPQNGY/image__6_.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01NDGPQNGY/download/image__6_.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01NDGPQNGY-e3af210ad5/image__6__64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01NDGPQNGY-e3af210ad5/image__6__80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01NDGPQNGY-e3af210ad5/image__6__360.png","thumb_360_w":360,"thumb_360_h":267,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01NDGPQNGY-e3af210ad5/image__6__160.png","original_w":380,"original_h":282,"thumb_tiny":"AwAjADDTpDnI5paO9ADRnjntQASOppQOn0oXpQAgyT948U6mp1b8KdQAUhyOabk5PWkyeeT+VADgxyOD+VKM80zLep/L/wCtS5bPf8v/AK1ADgO+OtLUeW9T/n8KXLZ7/wCfwoAdtX0FG1c5wKWigAooooAKKKKAP//Z","permalink":"https://julialang.slack.com/files/U018FJVBXPD/F01NDGPQNGY/image__6_.png","permalink_public":"https://slack-files.com/T68168MUP-F01NDGPQNGY-29ba6d5c5e","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"q30","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I was thinking the same some years ago and got frustrated with\n"}]},{"type":"rich_text_list","style":"bullet","indent":0,"elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"matching/reshuffling dimensions to fit the \"variable\" labels. E.g. p(x,y,z) == p(y,x,z), and p(x,y)  may be multiplied with p(y,z) with only one variable in the overlapping scope."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I wanted a sparse implementation, and I'm not sure how the memory mapping reshaping arrays worked back in the day in Python."}]}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIn C++ I have an object that with the main data structure similar to  "},{"type":"text","text":"Dict{Vector{Int}, Any}","style":{"code":true}},{"type":"text","text":" to represent this:"}]}]}],"user":"U018FJVBXPD","display_as_bot":false,"ts":"1612981146.480400","edited":{"user":"U018FJVBXPD","ts":"1612981481.000000"},"thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"ddbf3006-4ac9-42f9-b794-162d48c73892","type":"message","text":"Along with some other helper data such as the A,B,C,D labels. These are wrapped in a object `DiscreteTable` which is a subclass of `Factor`\n\nThose operations were then defined on `DiscreteTable` and allowed `DiscreteTable` to operate in other algorithms designed for `Factor` classes. But doing anything in that library is such a hassle and a big mess. I'm busy writing up my thesis, and I was wondering if it's not better to just get the minimal stuff I did working in Julia and then be able to write my experiments much faster.","user":"U018FJVBXPD","ts":"1612981457.480600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"15nx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Along with some other helper data such as the A,B,C,D labels. These are wrapped in a object "},{"type":"text","text":"DiscreteTable","style":{"code":true}},{"type":"text","text":" which is a subclass of "},{"type":"text","text":"Factor","style":{"code":true}},{"type":"text","text":"\n\nThose operations were then defined on "},{"type":"text","text":"DiscreteTable","style":{"code":true}},{"type":"text","text":" and allowed "},{"type":"text","text":"DiscreteTable","style":{"code":true}},{"type":"text","text":" to operate in other algorithms designed for "},{"type":"text","text":"Factor","style":{"code":true}},{"type":"text","text":" classes. But doing anything in that library is such a hassle and a big mess. I'm busy writing up my thesis, and I was wondering if it's not better to just get the minimal stuff I did working in Julia and then be able to write my experiments much faster."}]}]}],"thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"344fe13a-44fc-4d84-8df4-4d050d06f639","type":"message","text":"So I can obviously go with the same structure as C++ in Julia, but I have the same hunch as you <@U019K6Q9N15>:\nLinearAlgebra should be able to reach this problem. I just don't have any idea how to do the dimension-&gt;variable mapping, and have everything sparse.","user":"U018FJVBXPD","ts":"1612981631.480900","team":"T68168MUP","edited":{"user":"U018FJVBXPD","ts":"1612981686.000000"},"blocks":[{"type":"rich_text","block_id":"dXY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I can obviously go with the same structure as C++ in Julia, but I have the same hunch as you "},{"type":"user","user_id":"U019K6Q9N15"},{"type":"text","text":":\nLinearAlgebra should be able to reach this problem. I just don't have any idea how to do the dimension->variable mapping, and have everything sparse."}]}]}],"thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"e208f2ef-3f46-47f7-8131-978f219751c8","type":"message","text":"Hmm, this might help me:\n<https://discourse.julialang.org/t/implementing-an-equivalent-of-pythons-xarray-labeled-nd-arrays-in-julia/1741>","user":"U018FJVBXPD","ts":"1612982150.481200","team":"T68168MUP","edited":{"user":"U018FJVBXPD","ts":"1612982752.000000"},"blocks":[{"type":"rich_text","block_id":"1JmW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, this might help me:\n"},{"type":"link","url":"https://discourse.julialang.org/t/implementing-an-equivalent-of-pythons-xarray-labeled-nd-arrays-in-julia/1741"}]}]}],"thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"0d389f7a-be0f-4271-9ca4-b4f640a845a1","type":"message","text":"I might be wrong, but it seems like <https://github.com/JuliaArrays/AxisArrays.jl> annotates the \"indexes\", i.e. for a 2x2 array, each row can get a name and each column can get a name. But what I would need is to let each dimension have a name, like :row and :column and not each item within that dimension.","user":"U018FJVBXPD","ts":"1612982937.482500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r6Lu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I might be wrong, but it seems like "},{"type":"link","url":"https://github.com/JuliaArrays/AxisArrays.jl"},{"type":"text","text":" annotates the \"indexes\", i.e. for a 2x2 array, each row can get a name and each column can get a name. But what I would need is to let each dimension have a name, like :row and :column and not each item within that dimension."}]}]}],"thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"55a3fe01-6754-4e9f-99ec-5f9e23720d2e","type":"message","text":"This looks exactly like what I want:\n<https://github.com/davidavdav/NamedArrays.jl>","user":"U018FJVBXPD","ts":"1612983026.482700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"izCO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This looks exactly like what I want:\n"},{"type":"link","url":"https://github.com/davidavdav/NamedArrays.jl"}]}]}],"thread_ts":"1612961520.462300","parent_user_id":"U018FJVBXPD","reactions":[{"name":"thumbsup_all","users":["U019K6Q9N15"],"count":1}]}]