[{"client_msg_id":"4fc71941-588c-4d58-8a7a-b3f3393410ee","type":"message","text":"Is there a Blosc-like byte shuffle for TranscodingStreams.jl ?","user":"USU9FRPEU","ts":"1614862470.306900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3xg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a Blosc-like byte shuffle for TranscodingStreams.jl ?"}]}]}],"thread_ts":"1614862470.306900","reply_count":3,"reply_users_count":2,"latest_reply":"1614862660.307400","reply_users":["B01J9QZ4SP8","U9769MVA7"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614862473.307000","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614862470.306900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"0c5343f7-57a5-4dd1-ad9e-d0b874c15274","type":"message","text":"hm, I don't know but I think adding the TranscodingStreams API to Blosc shouldn't be too hard\n<https://github.com/JuliaIO/Blosc.jl/issues/79>","user":"U9769MVA7","ts":"1614862590.307200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Js6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hm, I don't know but I think adding the TranscodingStreams API to Blosc shouldn't be too hard\n"},{"type":"link","url":"https://github.com/JuliaIO/Blosc.jl/issues/79"}]}]}],"thread_ts":"1614862470.306900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"9990360c-daf1-4cbf-97f6-1ee31537df29","type":"message","text":"in fact, the most naive thing already seems to work..\n```using Blosc\nBlosc.eval(:(struct BloscCompressor end))\nBlosc.eval(:(struct BloscDecompressor end))\nimport Blosc: BloscCompressor, BloscDecompressor\nimport JLD2: TranscodingStreams\n\nTranscodingStreams.transcode(::BloscCompressor, buf) = Blosc.compress(buf)\nTranscodingStreams.initialize(::BloscCompressor) = nothing\nTranscodingStreams.finalize(::BloscCompressor) = nothing\n\nTranscodingStreams.transcode(::BloscDecompressor, buf) = Blosc.decompress(UInt8, buf)\nTranscodingStreams.initialize(::BloscDecompressor) = nothing\nTranscodingStreams.finalize(::BloscDecompressor) = nothing```","user":"U9769MVA7","ts":"1614862660.307400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UwcP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in fact, the most naive thing already seems to work..\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Blosc\nBlosc.eval(:(struct BloscCompressor end))\nBlosc.eval(:(struct BloscDecompressor end))\nimport Blosc: BloscCompressor, BloscDecompressor\nimport JLD2: TranscodingStreams\n\nTranscodingStreams.transcode(::BloscCompressor, buf) = Blosc.compress(buf)\nTranscodingStreams.initialize(::BloscCompressor) = nothing\nTranscodingStreams.finalize(::BloscCompressor) = nothing\n\nTranscodingStreams.transcode(::BloscDecompressor, buf) = Blosc.decompress(UInt8, buf)\nTranscodingStreams.initialize(::BloscDecompressor) = nothing\nTranscodingStreams.finalize(::BloscDecompressor) = nothing"}]}]}],"thread_ts":"1614862470.306900","parent_user_id":"USU9FRPEU"}]