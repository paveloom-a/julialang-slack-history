[{"client_msg_id":"1e9598b6-b46c-4d96-b16f-bc644acfeb80","type":"message","text":"I'd like to find `undef` elements in an array - is there a way to do this without a try/catch, as trying to access `undef` elements in an array throws an `UndefRefError`?\n```julia&gt; A = Array{String}(undef,2)\n2-element Array{String,1}:\n #undef\n #undef\n\njulia&gt; A[1] = \"ASDF\"\n\"ASDF\"\n\njulia&gt; findall(isempty.(A))\nERROR: UndefRefError: access to undefined reference```","user":"UNH0PT5D3","ts":"1615561942.479500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mftx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd like to find "},{"type":"text","text":"undef","style":{"code":true}},{"type":"text","text":" elements in an array - is there a way to do this without a try/catch, as trying to access "},{"type":"text","text":"undef","style":{"code":true}},{"type":"text","text":" elements in an array throws an "},{"type":"text","text":"UndefRefError","style":{"code":true}},{"type":"text","text":"?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> A = Array{String}(undef,2)\n2-element Array{String,1}:\n #undef\n #undef\n\njulia> A[1] = \"ASDF\"\n\"ASDF\"\n\njulia> findall(isempty.(A))\nERROR: UndefRefError: access to undefined reference"}]}]}],"thread_ts":"1615561942.479500","reply_count":9,"reply_users_count":4,"latest_reply":"1615562864.481400","reply_users":["B01J9QZ4SP8","U7HAYKY9X","UEA5FBCRH","UNH0PT5D3"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615561943.479600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615561942.479500","parent_user_id":"UNH0PT5D3"},{"client_msg_id":"a3390ccf-4c5a-46b1-ad11-81f5d2275b24","type":"message","text":"```julia&gt; A = Array{String}(undef,2);\n\njulia&gt; A[1] = \"Julia\"\n\"Julia\"\n\njulia&gt; findall(iszero, unsafe_wrap(Array, Ptr{UInt}(pointer(A)), length(A)))\n1-element Vector{Int64}:\n 2```","user":"U7HAYKY9X","ts":"1615562515.479800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Taw","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> A = Array{String}(undef,2);\n\njulia> A[1] = \"Julia\"\n\"Julia\"\n\njulia> findall(iszero, unsafe_wrap(Array, Ptr{UInt}(pointer(A)), length(A)))\n1-element Vector{Int64}:\n 2"}]}]}],"thread_ts":"1615561942.479500","parent_user_id":"UNH0PT5D3"},{"client_msg_id":"47cccd95-49ff-482c-9966-19baf0e6a9ca","type":"message","text":"This exploits the implementation detail that undef reference objects are null pointers, so it's a dirtry trick that may break in any future Julia release","user":"U7HAYKY9X","ts":"1615562547.480000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OMd5P","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This exploits the implementation detail that undef reference objects are null pointers, so it's a dirtry trick that may break in any future Julia release"}]}]}],"thread_ts":"1615561942.479500","parent_user_id":"UNH0PT5D3"},{"client_msg_id":"a75741ed-81d2-4d65-acf9-2fafa70af159","type":"message","text":"Ah, or just use `isassigned` instead ;)","user":"U7HAYKY9X","ts":"1615562692.480200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aPpv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, or just use "},{"type":"text","text":"isassigned","style":{"code":true}},{"type":"text","text":" instead ;)"}]}]}],"thread_ts":"1615561942.479500","parent_user_id":"UNH0PT5D3","reactions":[{"name":"today-i-learned","users":["UGU761DU2"],"count":1}]},{"client_msg_id":"abfecb9d-63ac-4f56-817b-a02e9a564eb6","type":"message","text":"What about this:\n```A = Array{String}(undef,2);\njulia&gt; map(x -&gt; isdefined(A, x), 1:length(A)) |&gt; count```\nThis actually counts the number of elements defined.","user":"UEA5FBCRH","ts":"1615562737.480400","team":"T68168MUP","edited":{"user":"UEA5FBCRH","ts":"1615562793.000000"},"blocks":[{"type":"rich_text","block_id":"1OJNk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What about this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"A = Array{String}(undef,2);\njulia> map(x -> isdefined(A, x), 1:length(A)) |> count"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"This actually counts the number of elements defined."}]}]}],"thread_ts":"1615561942.479500","parent_user_id":"UNH0PT5D3"},{"client_msg_id":"1832876c-793e-43b7-a3dc-66a2cd467df2","type":"message","text":"```julia&gt; filter(i -&gt; !isassigned(A, i), eachindex(A))\n1-element Vector{Int64}:\n 2```","user":"U7HAYKY9X","ts":"1615562743.480600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5BZ","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> filter(i -> !isassigned(A, i), eachindex(A))\n1-element Vector{Int64}:\n 2"}]}]}],"thread_ts":"1615561942.479500","parent_user_id":"UNH0PT5D3"},{"client_msg_id":"d1369642-757c-4510-b4c3-4789d1a47a32","type":"message","text":"<@UEA5FBCRH> nope, try adding a string at one of the positions in your array and see if it works","user":"U7HAYKY9X","ts":"1615562839.480900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QW2dv","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UEA5FBCRH"},{"type":"text","text":" nope, try adding a string at one of the positions in your array and see if it works"}]}]}],"thread_ts":"1615561942.479500","parent_user_id":"UNH0PT5D3"},{"client_msg_id":"ceeb5597-7d84-43a4-a3d9-e46339092be8","type":"message","text":"<@U7HAYKY9X> thanks for the null pointer explanation! `isassigned` is just what I was looking for","user":"UNH0PT5D3","ts":"1615562845.481100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ySS","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" thanks for the null pointer explanation! "},{"type":"text","text":"isassigned","style":{"code":true}},{"type":"text","text":" is just what I was looking for"}]}]}],"thread_ts":"1615561942.479500","parent_user_id":"UNH0PT5D3","reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"21760a1e-6a31-4082-b26e-18ba4b2fb7f9","type":"message","text":"<@U7HAYKY9X> ahh you are right.","user":"UEA5FBCRH","ts":"1615562864.481400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zl8sE","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7HAYKY9X"},{"type":"text","text":" ahh you are right."}]}]}],"thread_ts":"1615561942.479500","parent_user_id":"UNH0PT5D3"}]