[{"client_msg_id":"e1f58aee-96f0-435d-a2cf-517026d897b9","type":"message","text":"Hey, does anybody know why a generator does allocate memory while an iterator doesn't when assigned to an existing location?\n```julia&gt; x = randn((1000));\n\njulia&gt; y = 1:1000\n1:1000\n\njulia&gt; g = (i for i=1:1000)\nBase.Generator{UnitRange{Int64}, typeof(identity)}(identity, 1:1000)\n\njulia&gt; @time x .= g;\n  0.000020 seconds (3 allocations: 7.969 KiB)\n\njulia&gt; @time x .= g;\n  0.000030 seconds (3 allocations: 7.969 KiB)\n\njulia&gt; @time x .= y;\n  0.000048 seconds (3 allocations: 96 bytes)\n\njulia&gt; @time x .= y;\n  0.000027 seconds (3 allocations: 96 bytes)```","user":"U84GATUBU","ts":"1616110321.129100","team":"T68168MUP","edited":{"user":"U84GATUBU","ts":"1616110338.000000"},"blocks":[{"type":"rich_text","block_id":"SKfQ3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey, does anybody know why a generator does allocate memory while an iterator doesn't when assigned to an existing location?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> x = randn((1000));\n\njulia> y = 1:1000\n1:1000\n\njulia> g = (i for i=1:1000)\nBase.Generator{UnitRange{Int64}, typeof(identity)}(identity, 1:1000)\n\njulia> @time x .= g;\n  0.000020 seconds (3 allocations: 7.969 KiB)\n\njulia> @time x .= g;\n  0.000030 seconds (3 allocations: 7.969 KiB)\n\njulia> @time x .= y;\n  0.000048 seconds (3 allocations: 96 bytes)\n\njulia> @time x .= y;\n  0.000027 seconds (3 allocations: 96 bytes)"}]}]}],"thread_ts":"1616110321.129100","reply_count":11,"reply_users_count":5,"latest_reply":"1616121165.140200","reply_users":["B01J9QZ4SP8","UDB26738Q","U84GATUBU","UD0NS8PDF","UH24GRBLL"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1616110322.129200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU","reactions":[{"name":"bridge","users":["U84GATUBU"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/57504| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1616110363.129600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU"},{"client_msg_id":"0532b5cd-530c-4bd3-ab0f-9a9c850d175d","type":"message","text":"1) don't benchmark in global scope\n2) use BenchmarkTools for benchmarking","user":"UDB26738Q","ts":"1616110405.129800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I8yXg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1) don't benchmark in global scope\n2) use BenchmarkTools for benchmarking"}]}]}],"thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU"},{"client_msg_id":"c011bede-9d07-41ef-a306-799cb7b6070a","type":"message","text":"I believe that's not the error:\n```using BenchmarkTools\n\nfunction main()\n\n    N = 100000\n    x = randn((N));\n    y = 1:N \n    g = (i for i=1:N)\n    @btime $x .= $g;\n    @btime $x .= $g;\n    @btime $x .= $y;\n    @btime $x .= $y;\n\n    return\nend\n\n# returning\njulia&gt; main()\n  123.617 μs (2 allocations: 781.33 KiB)\n  123.162 μs (2 allocations: 781.33 KiB)\n  57.900 μs (0 allocations: 0 bytes)\n  57.895 μs (0 allocations: 0 bytes)```","user":"U84GATUBU","ts":"1616110783.130100","team":"T68168MUP","edited":{"user":"U84GATUBU","ts":"1616110816.000000"},"blocks":[{"type":"rich_text","block_id":"Ec1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe that's not the error:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using BenchmarkTools\n\nfunction main()\n\n    N = 100000\n    x = randn((N));\n    y = 1:N \n    g = (i for i=1:N)\n    @btime $x .= $g;\n    @btime $x .= $g;\n    @btime $x .= $y;\n    @btime $x .= $y;\n\n    return\nend\n\n# returning\njulia> main()\n  123.617 μs (2 allocations: 781.33 KiB)\n  123.162 μs (2 allocations: 781.33 KiB)\n  57.900 μs (0 allocations: 0 bytes)\n  57.895 μs (0 allocations: 0 bytes)"}]}]}],"thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU"},{"client_msg_id":"b17d47d8-b2d0-4689-9072-d2ca798ec9e9","type":"message","text":"Generators get `collect`ed when used with broadcasting.","user":"UD0NS8PDF","ts":"1616110815.130300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lHd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Generators get `collect`ed when used with broadcasting."}]}]}],"thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU","reactions":[{"name":"cry","users":["U84GATUBU"],"count":1}]},{"client_msg_id":"9f229f37-2931-47ef-b491-d322c5b9aab3","type":"message","text":"What's the reason for that?","user":"U84GATUBU","ts":"1616110834.130700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y0H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's the reason for that?"}]}]}],"thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU"},{"client_msg_id":"33889291-60c9-4828-8c42-b89959cd7b7a","type":"message","text":"I don’t exactly know. Broadcasting really likes AbstractArray objects, while a generic iterator is something you can only step through &amp; it’ll tell you when it’s finished.","user":"UD0NS8PDF","ts":"1616110984.130900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G6hM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t exactly know. Broadcasting really likes AbstractArray objects, while a generic iterator is something you can only step through & it’ll tell you when it’s finished."}]}]}],"thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU"},{"client_msg_id":"611ed7ad-4bae-4241-868a-c4ee5c5fd226","type":"message","text":"But some have more info, and presumably broadcasting could eventually be made aware of this.\n```julia&gt; size(g)\n(1000,)\n\njulia&gt; g[2]\nERROR: MethodError: no method matching getindex(::Base.Generator{UnitRange{Int64}, typeof(identity)}, ::Int64)```\nOr, simple generators could be upgraded to be more array-like. Something like what MappedArrays and LazyArrays do.","user":"UD0NS8PDF","ts":"1616111095.131100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZJM7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But some have more info, and presumably broadcasting could eventually be made aware of this.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> size(g)\n(1000,)\n\njulia> g[2]\nERROR: MethodError: no method matching getindex(::Base.Generator{UnitRange{Int64}, typeof(identity)}, ::Int64)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Or, simple generators could be upgraded to be more array-like. Something like what MappedArrays and LazyArrays do."}]}]}],"thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU","reactions":[{"name":"+1","users":["U84GATUBU"],"count":1}]},{"client_msg_id":"a3530488-a5fe-47d2-99f3-23112be2ae39","type":"message","text":"Sometimes `map` or mapreduce does better:\n```julia&gt; @btime $g .+ 1;  # collects, then broadcasts\n  462.733 ns (2 allocations: 15.88 KiB)\n\njulia&gt; @btime map(x -&gt; x+1, $g);  # only the final array\n  266.000 ns (1 allocation: 7.94 KiB)\n\njulia&gt; @btime map!(x -&gt; x+1, $x, $g);  # sadly doesn't work\nERROR: MethodError: no method matching map!(::var\"#47#49\", ::Vector{Float64}, ::Base.Generator{UnitR...```","user":"UD0NS8PDF","ts":"1616111310.131300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N9WP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sometimes "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":" or mapreduce does better:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime $g .+ 1;  # collects, then broadcasts\n  462.733 ns (2 allocations: 15.88 KiB)\n\njulia> @btime map(x -> x+1, $g);  # only the final array\n  266.000 ns (1 allocation: 7.94 KiB)\n\njulia> @btime map!(x -> x+1, $x, $g);  # sadly doesn't work\nERROR: MethodError: no method matching map!(::var\"#47#49\", ::Vector{Float64}, ::Base.Generator{UnitR..."}]}]}],"thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU"},{"client_msg_id":"aff78c36-2ad0-4792-9576-6ea7e67e9ba1","type":"message","text":"you may want to compare the generator with a known length to one with infinite length","user":"UH24GRBLL","ts":"1616112775.131600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1m/a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you may want to compare the generator with a known length to one with infinite length"}]}]}],"thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU"},{"type":"message","subtype":"bot_message","text":"Hey <@U84GATUBU>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1616121165.140200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1616110321.129100","parent_user_id":"U84GATUBU"}]