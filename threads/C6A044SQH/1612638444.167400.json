[{"client_msg_id":"c5aa9e00-b672-42e5-9e44-e68e02a958af","type":"message","text":"how can i make an abstract array which can literally hold anything any shape and size","user":"U01B0JZ4SJF","ts":"1612638444.167400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KJWpY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how can i make an abstract array which can literally hold anything any shape and size"}]}]}],"thread_ts":"1612638444.167400","reply_count":5,"reply_users_count":4,"latest_reply":"1612638852.168400","reply_users":["B01J9QZ4SP8","UH8A351DJ","U01B0JZ4SJF","U0179G7FG4F"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612638446.167500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612638444.167400","parent_user_id":"U01B0JZ4SJF"},{"client_msg_id":"b371aaae-9e91-493c-900e-8c308c78c697","type":"message","text":"`Any[]`","user":"UH8A351DJ","ts":"1612638465.167700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vI7o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any[]","style":{"code":true}}]}]}],"thread_ts":"1612638444.167400","parent_user_id":"U01B0JZ4SJF"},{"client_msg_id":"b1cb5607-385c-4434-aac8-501bc84f99ba","type":"message","text":"ah man thanks i was doing Array{Any} and it was not workin","user":"U01B0JZ4SJF","ts":"1612638525.167900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mifL=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah man thanks i was doing Array{Any} and it was not workin"}]}]}],"thread_ts":"1612638444.167400","parent_user_id":"U01B0JZ4SJF"},{"client_msg_id":"74feb253-9670-449b-9ddb-ecf2df3c2013","type":"message","text":"this has 2 problems. The first is that `Array{Any}` is an abstract type (since `Array` can be multidimensional). You were probably looking for `Vector{Any}`. The second problem is that `Vector{Any}` is a type, not a value.","user":"U0179G7FG4F","ts":"1612638685.168100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"djo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this has 2 problems. The first is that "},{"type":"text","text":"Array{Any}","style":{"code":true}},{"type":"text","text":" is an abstract type (since "},{"type":"text","text":"Array","style":{"code":true}},{"type":"text","text":" can be multidimensional). You were probably looking for "},{"type":"text","text":"Vector{Any}","style":{"code":true}},{"type":"text","text":". The second problem is that "},{"type":"text","text":"Vector{Any}","style":{"code":true}},{"type":"text","text":" is a type, not a value."}]}]}],"thread_ts":"1612638444.167400","parent_user_id":"U01B0JZ4SJF"},{"client_msg_id":"69f322c8-91af-4b2a-8790-3ba4b41b256d","type":"message","text":"`T[]` is equivalent to `Vector{T}()` which is an alias for `Array{T, 1}()`","user":"UH8A351DJ","ts":"1612638852.168400","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1612639274.000000"},"blocks":[{"type":"rich_text","block_id":"ZXc7S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"T[]","style":{"code":true}},{"type":"text","text":" is equivalent to "},{"type":"text","text":"Vector{T}()","style":{"code":true}},{"type":"text","text":" which is an alias for "},{"type":"text","text":"Array{T, 1}()","style":{"code":true}}]}]}],"thread_ts":"1612638444.167400","parent_user_id":"U01B0JZ4SJF","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F","UGU761DU2"],"count":2}]}]