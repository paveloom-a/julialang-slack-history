[{"client_msg_id":"0322daf5-6b05-4f19-83d0-ecb2329db592","type":"message","text":"What’s the recommended way of defining a type with a variable number of arguments, which would behave like this?\n```struct MyStruct\n    x\nend\nMyStruct(1).x # returns (1,)\nMyStruct(1,2).x # returns (1,2)```","user":"U017PV1H2LV","ts":"1617735554.093500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nq8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What’s the recommended way of defining a type with a variable number of arguments, which would behave like this?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct MyStruct\n    x\nend\nMyStruct(1).x # returns (1,)\nMyStruct(1,2).x # returns (1,2)"}]}]}],"thread_ts":"1617735554.093500","reply_count":4,"reply_users_count":3,"latest_reply":"1617736043.096000","reply_users":["UEGRU91B2","U017PV1H2LV","UD0NS8PDF"],"is_locked":false,"subscribed":false},{"client_msg_id":"7fc7eb68-ca32-4907-a158-1934eddd8969","type":"message","text":"Not exactly the same but you could pass a tuple.\n```struct MyStruct{T}\n    x :: T\nend\nMyStruct((1,)).x # returns (1,)\nMyStruct((1,2)).x # returns (1,2)```","user":"UEGRU91B2","ts":"1617735769.094000","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1617736018.000000"},"blocks":[{"type":"rich_text","block_id":"aFdh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not exactly the same but you could pass a tuple.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct MyStruct{T}\n    x :: T\nend\nMyStruct((1,)).x # returns (1,)\nMyStruct((1,2)).x # returns (1,2)"}]}]}],"thread_ts":"1617735554.093500","parent_user_id":"U017PV1H2LV"},{"client_msg_id":"c057cfa0-5b83-45e2-a772-b0c18115156d","type":"message","text":"in that case wouldn’t `MyStruct(1).x` return `1`  instead of `(1,)`?","user":"U017PV1H2LV","ts":"1617735851.094600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e=9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in that case wouldn’t "},{"type":"text","text":"MyStruct(1).x","style":{"code":true}},{"type":"text","text":" return "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":"  instead of "},{"type":"text","text":"(1,)","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1617735554.093500","parent_user_id":"U017PV1H2LV"},{"client_msg_id":"11932734-0dad-4223-9aa9-abcf06e1aee9","type":"message","text":"```julia&gt; struct MyStruct\n           x\n           MyStruct(x...) = new(x)\n       end\n\njulia&gt; Base.show(io::IO, y::MyStruct) = print(io, \"MyStruct(\", join(y.x, \", \"), \")\")\n\njulia&gt; MyStruct(1,2,3).x\n(1, 2, 3)\n\njulia&gt; MyStruct(1).x\n(1,)```","user":"UD0NS8PDF","ts":"1617735883.094900","team":"T68168MUP","edited":{"user":"UD0NS8PDF","ts":"1617735969.000000"},"blocks":[{"type":"rich_text","block_id":"lrG","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct MyStruct\n           x\n           MyStruct(x...) = new(x)\n       end\n\njulia> Base.show(io::IO, y::MyStruct) = print(io, \"MyStruct(\", join(y.x, \", \"), \")\")\n\njulia> MyStruct(1,2,3).x\n(1, 2, 3)\n\njulia> MyStruct(1).x\n(1,)"}]}]}],"thread_ts":"1617735554.093500","parent_user_id":"U017PV1H2LV","reactions":[{"name":"heavy_check_mark","users":["UEGRU91B2","U017PV1H2LV"],"count":2}]},{"client_msg_id":"4fc46a8a-bbb3-482c-9ded-bb8f3ae72a95","type":"message","text":"nice, thanks!","user":"U017PV1H2LV","ts":"1617736043.096000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EcuB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nice, thanks!"}]}]}],"thread_ts":"1617735554.093500","parent_user_id":"U017PV1H2LV"}]