[{"client_msg_id":"9acaa4c3-1c4e-44a1-a66f-90684a2c3996","type":"message","text":"Is there a way to use the 4-argument `@nloops` with `@generated` on Julia 1.6? Since the last argument is an anonymous function, it triggers an error about purity now. StatsBase currently uses that so it fails on nightlies: <https://github.com/JuliaStats/StatsBase.jl/blob/3b0b2da5179af9696928e5ecc72794b098c4cb53/src/hist.jl#L465>","user":"U67431ELR","ts":"1612773782.271300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SBIO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to use the 4-argument "},{"type":"text","text":"@nloops","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"@generated","style":{"code":true}},{"type":"text","text":" on Julia 1.6? Since the last argument is an anonymous function, it triggers an error about purity now. StatsBase currently uses that so it fails on nightlies: "},{"type":"link","url":"https://github.com/JuliaStats/StatsBase.jl/blob/3b0b2da5179af9696928e5ecc72794b098c4cb53/src/hist.jl#L465"}]}]}],"thread_ts":"1612773782.271300","reply_count":19,"reply_users_count":4,"latest_reply":"1612805620.288700","reply_users":["B01J9QZ4SP8","UM30MT6RF","U67431ELR","UAUPJLBQX"],"subscribed":false,"reactions":[{"name":"bridge","users":["U67431ELR"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612773784.271400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/54830| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1612773853.271700","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"ed0d1b27-d6aa-4d51-9d5c-bed31c20e5e9","type":"message","text":"Perhaps the easiest solution here would be just to use a regular for loop with `CartesianIndices` instead of `@nloops`","user":"UM30MT6RF","ts":"1612774189.271900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+LEOP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps the easiest solution here would be just to use a regular for loop with "},{"type":"text","text":"CartesianIndices","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"@nloops","style":{"code":true}}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"919ee35c-9e81-4821-a566-85ab371eea24","type":"message","text":"Yeah probably. Though that requires diving into the logic of that function and I don't know anything about it. :slightly_smiling_face:","user":"U67431ELR","ts":"1612774772.272100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YCM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah probably. Though that requires diving into the logic of that function and I don't know anything about it. "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"9188bb3d-0d96-4bd2-bb35-27af6738da42","type":"message","text":"I'll add a mention to the docs if that particular method doesn't work with `@generated` now.","user":"U67431ELR","ts":"1612775391.273500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Pt3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll add a mention to the docs if that particular method doesn't work with "},{"type":"text","text":"@generated","style":{"code":true}},{"type":"text","text":" now."}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"type":"message","subtype":"bot_message","text":"Hey <@U67431ELR>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1612784656.276200","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"6bfb47f1-3d04-4eb9-a407-86d19538970a","type":"message","text":"I thought all the anonymous functions were expanded by the macro and replaced with code?","user":"UAUPJLBQX","ts":"1612793965.281800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QCy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought all the anonymous functions were expanded by the macro and replaced with code?"}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"31a08875-8f7d-4661-bb27-254d16faf4f9","type":"message","text":"Example from the docstring (5-argument version just adds an extra `preexpr` argument to the 4-argument version):\n```julia&gt; using Base.Cartesian\n\njulia&gt; @macroexpand @nloops 2 i A d -&gt; j_d = min(i_d, 5) begin\n             s += @nref 2 A j\n         end\nquote\n    #= cartesian.jl:62 =#\n    for i_2 = Base.axes(A, 2)\n        #= cartesian.jl:63 =#\n        j_2 = min(i_2, 5)\n        #= cartesian.jl:64 =#\n        begin\n            #= cartesian.jl:62 =#\n            for i_1 = Base.axes(A, 1)\n                #= cartesian.jl:63 =#\n                j_1 = min(i_1, 5)\n                #= cartesian.jl:64 =#\n                begin\n                    #= REPL[38]:2 =#\n                    s += A[j_1, j_2]\n                end\n                #= cartesian.jl:65 =#\n                nothing\n            end\n        end\n        #= cartesian.jl:65 =#\n        nothing\n    end\nend```","user":"UAUPJLBQX","ts":"1612794063.282000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z2yW0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Example from the docstring (5-argument version just adds an extra "},{"type":"text","text":"preexpr","style":{"code":true}},{"type":"text","text":" argument to the 4-argument version):\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Base.Cartesian\n\njulia> @macroexpand @nloops 2 i A d -> j_d = min(i_d, 5) begin\n             s += @nref 2 A j\n         end\nquote\n    #= cartesian.jl:62 =#\n    for i_2 = Base.axes(A, 2)\n        #= cartesian.jl:63 =#\n        j_2 = min(i_2, 5)\n        #= cartesian.jl:64 =#\n        begin\n            #= cartesian.jl:62 =#\n            for i_1 = Base.axes(A, 1)\n                #= cartesian.jl:63 =#\n                j_1 = min(i_1, 5)\n                #= cartesian.jl:64 =#\n                begin\n                    #= REPL[38]:2 =#\n                    s += A[j_1, j_2]\n                end\n                #= cartesian.jl:65 =#\n                nothing\n            end\n        end\n        #= cartesian.jl:65 =#\n        nothing\n    end\nend"}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"ec79680c-50b0-43e7-862d-e86aa4f93446","type":"message","text":"I have to admit I haven't investigated this a lot. I just wanted to check whether I was missing something obvious first. :wink:","user":"U67431ELR","ts":"1612794108.282200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HEDt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have to admit I haven't investigated this a lot. I just wanted to check whether I was missing something obvious first. "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"3baaf18b-62ee-4040-935d-c4494345ab51","type":"message","text":"Maybe the check that throws an error is overzealous here and it doesn't realize that the anonymous function disappears at macro time?","user":"U67431ELR","ts":"1612794165.282400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1ZLqb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe the check that throws an error is overzealous here and it doesn't realize that the anonymous function disappears at macro time?"}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"45a59bcb-9a2e-4dc3-a7da-de0e0dc9bf74","type":"message","text":"Or the StatsBase example:\n```julia&gt; @macroexpand @nloops 4 i weights d-&gt;(vs_{4-d+1} = vs_{4-d} * _edge_binvolume(SumT, edges[d], i_d)) begin\n                               (@nref 4 weights i) /= vs_4\n                               for A in aux_weights\n                                   (@nref 4 A i) /= vs_4\n                               end\n                           end\nquote\n    #= cartesian.jl:62 =#\n    for i_4 = Base.axes(weights, 4)\n        #= cartesian.jl:63 =#\n        vs_1 = vs_0 * _edge_binvolume(SumT, edges[4], i_4)\n        #= cartesian.jl:64 =#\n        begin\n            #= cartesian.jl:62 =#\n            for i_3 = Base.axes(weights, 3)\n                #= cartesian.jl:63 =#\n                vs_2 = vs_1 * _edge_binvolume(SumT, edges[3], i_3)\n                #= cartesian.jl:64 =#\n                begin\n                    #= cartesian.jl:62 =#\n                    for i_2 = Base.axes(weights, 2)\n                        #= cartesian.jl:63 =#\n                        vs_3 = vs_2 * _edge_binvolume(SumT, edges[2], i_2)\n                        #= cartesian.jl:64 =#\n                        begin\n                            #= cartesian.jl:62 =#\n                            for i_1 = Base.axes(weights, 1)\n                                #= cartesian.jl:63 =#\n                                vs_4 = vs_3 * _edge_binvolume(SumT, edges[1], i_1)\n                                #= cartesian.jl:64 =#\n                                begin\n                                    #= REPL[43]:2 =#\n                                    weights[i_1, i_2, i_3, i_4] /= vs_4\n                                    #= REPL[43]:3 =#\n                                    for A = aux_weights\n                                        #= REPL[43]:4 =#\n                                        A[i_1, i_2, i_3, i_4] /= vs_4\n                                    end\n                                end\n                                #= cartesian.jl:65 =#\n                                nothing\n                            end\n                        end\n                        #= cartesian.jl:65 =#\n                        nothing\n                    end\n                end\n                #= cartesian.jl:65 =#\n                nothing\n            end\n        end\n        #= cartesian.jl:65 =#\n        nothing\n    end\nend```","user":"UAUPJLBQX","ts":"1612794212.282600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rs7j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or the StatsBase example:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @macroexpand @nloops 4 i weights d->(vs_{4-d+1} = vs_{4-d} * _edge_binvolume(SumT, edges[d], i_d)) begin\n                               (@nref 4 weights i) /= vs_4\n                               for A in aux_weights\n                                   (@nref 4 A i) /= vs_4\n                               end\n                           end\nquote\n    #= cartesian.jl:62 =#\n    for i_4 = Base.axes(weights, 4)\n        #= cartesian.jl:63 =#\n        vs_1 = vs_0 * _edge_binvolume(SumT, edges[4], i_4)\n        #= cartesian.jl:64 =#\n        begin\n            #= cartesian.jl:62 =#\n            for i_3 = Base.axes(weights, 3)\n                #= cartesian.jl:63 =#\n                vs_2 = vs_1 * _edge_binvolume(SumT, edges[3], i_3)\n                #= cartesian.jl:64 =#\n                begin\n                    #= cartesian.jl:62 =#\n                    for i_2 = Base.axes(weights, 2)\n                        #= cartesian.jl:63 =#\n                        vs_3 = vs_2 * _edge_binvolume(SumT, edges[2], i_2)\n                        #= cartesian.jl:64 =#\n                        begin\n                            #= cartesian.jl:62 =#\n                            for i_1 = Base.axes(weights, 1)\n                                #= cartesian.jl:63 =#\n                                vs_4 = vs_3 * _edge_binvolume(SumT, edges[1], i_1)\n                                #= cartesian.jl:64 =#\n                                begin\n                                    #= REPL[43]:2 =#\n                                    weights[i_1, i_2, i_3, i_4] /= vs_4\n                                    #= REPL[43]:3 =#\n                                    for A = aux_weights\n                                        #= REPL[43]:4 =#\n                                        A[i_1, i_2, i_3, i_4] /= vs_4\n                                    end\n                                end\n                                #= cartesian.jl:65 =#\n                                nothing\n                            end\n                        end\n                        #= cartesian.jl:65 =#\n                        nothing\n                    end\n                end\n                #= cartesian.jl:65 =#\n                nothing\n            end\n        end\n        #= cartesian.jl:65 =#\n        nothing\n    end\nend"}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"13673dee-9472-4aaf-ba78-dad95a631682","type":"message","text":"(I used `N=4` above)","user":"UAUPJLBQX","ts":"1612794219.282800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aus0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(I used "},{"type":"text","text":"N=4","style":{"code":true}},{"type":"text","text":" above)"}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"6dec493f-506a-40d3-9f8e-522df328a4c5","type":"message","text":"I don't see any anonymous functions there.\n\nIt'd probably be better if you could use `CartesianIndices` instead.\n\n&gt; Maybe the check that throws an error is overzealous here and it doesn't realize that the anonymous function disappears at macro time?\nI'd be surprised if that's the case, but you could check for it by calling `macroexpand(StatsBase, ex)`  on the expression.","user":"UAUPJLBQX","ts":"1612794316.283000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oFSA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't see any anonymous functions there.\n\nIt'd probably be better if you could use "},{"type":"text","text":"CartesianIndices","style":{"code":true}},{"type":"text","text":" instead.\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"Maybe the check that throws an error is overzealous here and it doesn't realize that the anonymous function disappears at macro time?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI'd be surprised if that's the case, but you could check for it by calling "},{"type":"text","text":"macroexpand(StatsBase, ex)","style":{"code":true}},{"type":"text","text":"  on the expression."}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"c3526ef8-4c64-45ce-acf0-fcdede1f6c8b","type":"message","text":"May also be good to just double check/look at what expression its generating.","user":"UAUPJLBQX","ts":"1612794337.283200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vDl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"May also be good to just double check/look at what expression its generating."}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"0488ad50-11a3-4cbf-876a-2655ae8684b1","type":"message","text":"Indeed with a simple example of a macro that ignores its input argument, using an anonymous function with `@generated` doesn't trigger an error.","user":"U67431ELR","ts":"1612796081.283400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"alOFR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Indeed with a simple example of a macro that ignores its input argument, using an anonymous function with "},{"type":"text","text":"@generated","style":{"code":true}},{"type":"text","text":" doesn't trigger an error."}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"6be09634-824e-484a-8463-baa1b23c1c81","type":"message","text":"Here's the generated code that errors:\n```julia&gt; normalize!(float(h))\nquote\n    #= REPL[25]:3 =#\n    edges = h.edges\n    #= REPL[25]:4 =#\n    weights = h.weights\n    #= REPL[25]:6 =#\n    for A = aux_weights\n        #= REPL[25]:7 =#\n        size(A) != size(weights) &amp;&amp; throw(DimensionMismatch(\"aux_weights must have same size as histogram weights\"))\n    end\n    #= REPL[25]:10 =#\n    if mode == :none\n    elseif #= REPL[25]:12 =# mode == :pdf || (mode == :density || mode == :probability)\n        #= REPL[25]:13 =#\n        if h.isdensity\n            #= REPL[25]:14 =#\n            if mode == :pdf || mode == :probability\n                #= REPL[25]:16 =#\n                s = 1 / norm(h)\n                #= REPL[25]:17 =#\n                weights .*= s\n                #= REPL[25]:18 =#\n                for A = aux_weights\n                    #= REPL[25]:19 =#\n                    A .*= s\n                end\n            else\n                #= REPL[25]:23 =#\n            end\n        else\n            #= REPL[25]:25 =#\n            if mode == :pdf || mode == :density\n                #= REPL[25]:27 =#\n                SumT = norm_type(h)\n                #= REPL[25]:28 =#\n                vs_0 = if mode == :pdf\n                        sum((SumT(x) for x = weights))\n                    else\n                        one(SumT)\n                    end\n                #= REPL[25]:29 =#\n                #= REPL[25]:29 =# @inbounds #= REPL[25]:29 =# @nloops(3, i, weights, (d-&gt;begin\n                                #= REPL[25]:29 =#\n                                vs_{(3 - d) + 1} = vs_{3 - d} * _edge_binvolume(SumT, edges[d], i_d)\n                            end), begin\n                            #= REPL[25]:30 =#\n                            #= REPL[25]:30 =# @nref(3, weights, i) /= vs_3\n                            #= REPL[25]:31 =#\n                            for A = aux_weights\n                                #= REPL[25]:32 =#\n                                #= REPL[25]:32 =# @nref(3, A, i) /= vs_3\n                            end\n                        end)\n                #= REPL[25]:35 =#\n                h.isdensity = true\n            else\n                #= REPL[25]:38 =#\n                nf = inv(sum(weights))\n                #= REPL[25]:39 =#\n                weights .*= nf\n                #= REPL[25]:40 =#\n                for A = aux_weights\n                    #= REPL[25]:41 =#\n                    A .*= nf\n                end\n            end\n        end\n    else\n        #= REPL[25]:46 =#\n        throw(ArgumentError(\"Normalization mode must be :pdf, :density, :probability or :none\"))\n    end\n    #= REPL[25]:48 =#\n    h\nend```","user":"U67431ELR","ts":"1612796093.283600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yf8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's the generated code that errors:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> normalize!(float(h))\nquote\n    #= REPL[25]:3 =#\n    edges = h.edges\n    #= REPL[25]:4 =#\n    weights = h.weights\n    #= REPL[25]:6 =#\n    for A = aux_weights\n        #= REPL[25]:7 =#\n        size(A) != size(weights) && throw(DimensionMismatch(\"aux_weights must have same size as histogram weights\"))\n    end\n    #= REPL[25]:10 =#\n    if mode == :none\n    elseif #= REPL[25]:12 =# mode == :pdf || (mode == :density || mode == :probability)\n        #= REPL[25]:13 =#\n        if h.isdensity\n            #= REPL[25]:14 =#\n            if mode == :pdf || mode == :probability\n                #= REPL[25]:16 =#\n                s = 1 / norm(h)\n                #= REPL[25]:17 =#\n                weights .*= s\n                #= REPL[25]:18 =#\n                for A = aux_weights\n                    #= REPL[25]:19 =#\n                    A .*= s\n                end\n            else\n                #= REPL[25]:23 =#\n            end\n        else\n            #= REPL[25]:25 =#\n            if mode == :pdf || mode == :density\n                #= REPL[25]:27 =#\n                SumT = norm_type(h)\n                #= REPL[25]:28 =#\n                vs_0 = if mode == :pdf\n                        sum((SumT(x) for x = weights))\n                    else\n                        one(SumT)\n                    end\n                #= REPL[25]:29 =#\n                #= REPL[25]:29 =# @inbounds #= REPL[25]:29 =# @nloops(3, i, weights, (d->begin\n                                #= REPL[25]:29 =#\n                                vs_{(3 - d) + 1} = vs_{3 - d} * _edge_binvolume(SumT, edges[d], i_d)\n                            end), begin\n                            #= REPL[25]:30 =#\n                            #= REPL[25]:30 =# @nref(3, weights, i) /= vs_3\n                            #= REPL[25]:31 =#\n                            for A = aux_weights\n                                #= REPL[25]:32 =#\n                                #= REPL[25]:32 =# @nref(3, A, i) /= vs_3\n                            end\n                        end)\n                #= REPL[25]:35 =#\n                h.isdensity = true\n            else\n                #= REPL[25]:38 =#\n                nf = inv(sum(weights))\n                #= REPL[25]:39 =#\n                weights .*= nf\n                #= REPL[25]:40 =#\n                for A = aux_weights\n                    #= REPL[25]:41 =#\n                    A .*= nf\n                end\n            end\n        end\n    else\n        #= REPL[25]:46 =#\n        throw(ArgumentError(\"Normalization mode must be :pdf, :density, :probability or :none\"))\n    end\n    #= REPL[25]:48 =#\n    h\nend"}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"c4842c03-f996-4785-8ea7-fe7b1c3b46ff","type":"message","text":"OK the problem is likely `sum(SumT(x) for x in weights)` .","user":"U67431ELR","ts":"1612796170.283800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/j6MH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK the problem is likely "},{"type":"text","text":"sum(SumT(x) for x in weights)","style":{"code":true}},{"type":"text","text":" ."}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"},{"client_msg_id":"08669336-4c23-4d30-932f-29b12600dd43","type":"message","text":"The fix is so trivial. :smile: <https://github.com/JuliaStats/StatsBase.jl/pull/656>","user":"U67431ELR","ts":"1612796320.284000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3sX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The fix is so trivial. "},{"type":"emoji","name":"smile"},{"type":"text","text":" "},{"type":"link","url":"https://github.com/JuliaStats/StatsBase.jl/pull/656"}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR","reactions":[{"name":"+1","users":["UAUPJLBQX"],"count":1}]},{"client_msg_id":"21c5e3e2-fc58-402d-9f97-629af59f2589","type":"message","text":"I've also filed <https://github.com/JuliaLang/julia/pull/39568> to improve the message.","user":"U67431ELR","ts":"1612805620.288700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oLbz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've also filed "},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/39568"},{"type":"text","text":" to improve the message."}]}]}],"thread_ts":"1612773782.271300","parent_user_id":"U67431ELR"}]