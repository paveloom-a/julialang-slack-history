[{"client_msg_id":"e59e8e58-03db-4ce1-b8e8-09d27adb32ca","type":"message","text":"Hello everybody!\nBeing new to Julia, coming from python, I would appreciate a little guidance:\nWhere should I look for Julia's analogs to Pythons logic of creating, and combining generators? Aside from using something like `yield` and `range`, I'm looking for things like `chain`, `product`, `combinations` and `combinations_with_replacement` from the python's `itertools` module.","user":"UG59025DJ","ts":"1613932875.079500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ze3L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello everybody!\nBeing new to Julia, coming from python, I would appreciate a little guidance:\nWhere should I look for Julia's analogs to Pythons logic of creating, and combining generators? Aside from using something like "},{"type":"text","text":"yield","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"range","style":{"code":true}},{"type":"text","text":", I'm looking for things like "},{"type":"text","text":"chain","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"product","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"combinations","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"combinations_with_replacement","style":{"code":true}},{"type":"text","text":" from the python's "},{"type":"text","text":"itertools","style":{"code":true}},{"type":"text","text":" module."}]}]}],"thread_ts":"1613932875.079500","reply_count":13,"reply_users_count":6,"latest_reply":"1613980807.115200","reply_users":["B01J9QZ4SP8","UG59025DJ","U01FKQQ7J0J","UH24GRBLL","U0179G7FG4F","U7HAYKY9X"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613932877.079600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"},{"client_msg_id":"db65f232-333e-40fb-b1a3-da8323058ab2","type":"message","text":":bridge:","user":"UG59025DJ","ts":"1613932904.079800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XQE","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"bridge"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"},{"client_msg_id":"5bc3dc84-8934-4c6d-9463-380cd687b590","type":"message","text":"Can't really help with your `itertools` question, but the bridging needs to be added as a \"reaction\" to the original question (not a \"reply\" in the thread)","user":"U01FKQQ7J0J","ts":"1613934660.080200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tq20","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can't really help with your "},{"type":"text","text":"itertools","style":{"code":true}},{"type":"text","text":" question, but the bridging needs to be added as a \"reaction\" to the original question (not a \"reply\" in the thread)"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ","reactions":[{"name":"bulb","users":["UG59025DJ"],"count":1}]},{"client_msg_id":"687e16b1-becb-4b25-ae92-9b73574db2a0","type":"message","text":"Combinatorics.jl, Permutations.jl as well as the Iterators stdlib","user":"UH24GRBLL","ts":"1613934898.080500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LSs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Combinatorics.jl, Permutations.jl as well as the Iterators stdlib"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ","reactions":[{"name":"slightly_smiling_face","users":["UG59025DJ","U0179G7FG4F"],"count":2}]},{"client_msg_id":"eaaa9a0d-0b46-495b-8e86-4db453f022ee","type":"message","text":"That said, this is one of the places where imo python is just ahead of Julia","user":"U0179G7FG4F","ts":"1613936155.081000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ns0+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That said, this is one of the places where imo python is just ahead of Julia"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"},{"client_msg_id":"1de5ef54-dc6d-4aca-8d82-0cff7ba5f612","type":"message","text":"Iterators and generators are.. nice, but imo they're only worth it when the individual operation is somewhat expensive","user":"UH24GRBLL","ts":"1613936597.081200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wv8N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Iterators and generators are.. nice, but imo they're only worth it when the individual operation is somewhat expensive"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"},{"client_msg_id":"b45c648c-24c2-433c-9773-dda26dade5b6","type":"message","text":"and building/writing batched iterators with more internal state just hasn't been done all that much in julia so far, though the interface certainly supports it","user":"UH24GRBLL","ts":"1613936628.081400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RW3V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and building/writing batched iterators with more internal state just hasn't been done all that much in julia so far, though the interface certainly supports it"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"},{"client_msg_id":"e55b4e96-c5d2-49e1-9c33-c8a42e43332c","type":"message","text":"maybe we'll see more of that with better multithreading capabilities, specifically better data race prevention","user":"UH24GRBLL","ts":"1613936682.081600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PHDjp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe we'll see more of that with better multithreading capabilities, specifically better data race prevention"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"},{"client_msg_id":"69be658e-7bfe-4882-bd5d-cd7b0bc9f338","type":"message","text":"you could build an iterator that processes everything in the background","user":"UH24GRBLL","ts":"1613936724.081800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3vM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could build an iterator that processes everything in the background"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"},{"client_msg_id":"62a34a4d-6650-4549-98b1-d8cc4a96952d","type":"message","text":"Julia's generators (the one in brackets) are just like Python's. To write iterators, either use Julia's iterator protocol (much more annoying to write than Python's), or use FGenerators.jl. For range, consruct `StepRange`  or `UnitRange` struct with e.g. `0.1:0.01:2.0` . For itertools, use Julia's `IterTools.jl` package","user":"U7HAYKY9X","ts":"1613938662.082400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UQlTQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia's generators (the one in brackets) are just like Python's. To write iterators, either use Julia's iterator protocol (much more annoying to write than Python's), or use FGenerators.jl. For range, consruct "},{"type":"text","text":"StepRange","style":{"code":true}},{"type":"text","text":"  or "},{"type":"text","text":"UnitRange","style":{"code":true}},{"type":"text","text":" struct with e.g. "},{"type":"text","text":"0.1:0.01:2.0","style":{"code":true}},{"type":"text","text":" . For itertools, use Julia's "},{"type":"text","text":"IterTools.jl","style":{"code":true}},{"type":"text","text":" package"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ","reactions":[{"name":"+1","users":["U01M24BJPTP"],"count":1}]},{"client_msg_id":"6a0c61ea-e1d9-4873-8a02-79ee110a765b","type":"message","text":"Julia's iterator protocol, StepRange, UnitRange, Combinatorics.jl, Permutations.jl, FGenerators.jl, IterTools.jl.\nThank You everybody; I will have a look.\nIn the meantime perhaps You'll have an answer from the top of Your head: how do I construct a generator that generates n-element indices of upper triangle of a nD square matrix, eg. for n=2: [0, 0], [0, 1], [1, 1], [0, 2], ..., [n, n].","user":"UG59025DJ","ts":"1613977457.106500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gNR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia's iterator protocol, StepRange, UnitRange, Combinatorics.jl, Permutations.jl, FGenerators.jl, IterTools.jl.\nThank You everybody; I will have a look.\nIn the meantime perhaps You'll have an answer from the top of Your head: how do I construct a generator that generates n-element indices of upper triangle of a nD square matrix, eg. for n=2: [0, 0], [0, 1], [1, 1], [0, 2], ..., [n, n]."}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"},{"client_msg_id":"8648286b-27e6-4ccf-a44b-d544979ad00e","type":"message","text":"Do you want to index into a square matrix? If so, you could just use UpperTriangular from the LinearAlgebra stdlib and iterate over that instead <https://docs.julialang.org/en/v1/stdlib/LinearAlgebra/#LinearAlgebra.UpperTriangular>","user":"UH24GRBLL","ts":"1613980797.115000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u6Y=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you want to index into a square matrix? If so, you could just use UpperTriangular from the LinearAlgebra stdlib and iterate over that instead "},{"type":"link","url":"https://docs.julialang.org/en/v1/stdlib/LinearAlgebra/#LinearAlgebra.UpperTriangular"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"},{"client_msg_id":"558e5573-eba1-4509-8e64-0185fd5198e2","type":"message","text":"saves you the hassle of computing the indices yourself","user":"UH24GRBLL","ts":"1613980807.115200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5fB9z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"saves you the hassle of computing the indices yourself"}]}]}],"thread_ts":"1613932875.079500","parent_user_id":"UG59025DJ"}]