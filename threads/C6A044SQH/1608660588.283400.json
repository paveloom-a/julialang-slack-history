[{"client_msg_id":"4853fdd1-ff7d-40b2-bc33-20abf7d3fad1","type":"message","text":"oh, thanks for your “pointers” :laughing:. Yep, I need either a Vector or a Ref because I have to assign them after. I cannot do it on the fly, the example I posted here is just a MWE.","user":"U01658MJH3P","ts":"1608660588.283400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P=QFP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, thanks for your “pointers” "},{"type":"emoji","name":"laughing"},{"type":"text","text":". Yep, I need either a Vector or a Ref because I have to assign them after. I cannot do it on the fly, the example I posted here is just a MWE."}]}]}],"thread_ts":"1608660588.283400","reply_count":7,"reply_users_count":3,"latest_reply":"1608663102.287000","reply_users":["U0179G7FG4F","U8D9768Q6","U01658MJH3P"],"subscribed":false},{"client_msg_id":"85d402c7-ca05-4c48-ab0b-c98f4549200a","type":"message","text":"what about a `mutable` struct then?","user":"U0179G7FG4F","ts":"1608660688.283700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0wdJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what about a "},{"type":"text","text":"mutable","style":{"code":true}},{"type":"text","text":" struct then?"}]}]}],"thread_ts":"1608660588.283400","parent_user_id":"U01658MJH3P"},{"client_msg_id":"080a8ad4-7ed5-4e7c-87c4-8e666efe2d0b","type":"message","text":"Yeah, a mutable struct might be preferable.\n\nThat said, often, mutation is not as necessary as you might think. for instance, Setfield.jl is really good for this stuff:\n```julia&gt; using Setfield\n\njulia&gt; struct Foo\n         x::Int\n       end\n\njulia&gt; struct Bar\n         y::Foo\n       end\n\njulia&gt; b = Bar(Foo(typemin(Int)))\nBar(Foo(-9223372036854775808))\n\njulia&gt; @set! b.y.x = 2\nBar(Foo(2))\n\njulia&gt; b\nBar(Foo(2))```","user":"U8D9768Q6","ts":"1608660927.284000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QHo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, a mutable struct might be preferable.\n\nThat said, often, mutation is not as necessary as you might think. for instance, Setfield.jl is really good for this stuff:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Setfield\n\njulia> struct Foo\n         x::Int\n       end\n\njulia> struct Bar\n         y::Foo\n       end\n\njulia> b = Bar(Foo(typemin(Int)))\nBar(Foo(-9223372036854775808))\n\njulia> @set! b.y.x = 2\nBar(Foo(2))\n\njulia> b\nBar(Foo(2))"}]}]}],"thread_ts":"1608660588.283400","parent_user_id":"U01658MJH3P"},{"client_msg_id":"5f4826b8-3418-408c-8584-5ff95adfa904","type":"message","text":"I forgot about SetField.jl, I will try to use that.","user":"U01658MJH3P","ts":"1608660975.284300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DEN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I forgot about SetField.jl, I will try to use that."}]}]}],"thread_ts":"1608660588.283400","parent_user_id":"U01658MJH3P"},{"client_msg_id":"4386eed7-8886-44ed-b951-5c0e941adc01","type":"message","text":"Using immutable types where possible can be really nice, often avoids a lot of allocations.","user":"U8D9768Q6","ts":"1608661009.284500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oyPv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Using immutable types where possible can be really nice, often avoids a lot of allocations."}]}]}],"thread_ts":"1608660588.283400","parent_user_id":"U01658MJH3P"},{"client_msg_id":"e24573ec-c86c-4570-8865-0c4c70c3ffc0","type":"message","text":"I am working with <https://github.com/rvignolo/RayTracing.jl|RayTracing.jl> and I have to set a to a Track its track in its forward direction. But first I need to define all the tracks. That is why I need a field of Track to be mutable or referenced in the future (once I have all the tracks)","user":"U01658MJH3P","ts":"1608661092.284700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"llQU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am working with "},{"type":"link","url":"https://github.com/rvignolo/RayTracing.jl","text":"RayTracing.jl"},{"type":"text","text":" and I have to set a to a Track its track in its forward direction. But first I need to define all the tracks. That is why I need a field of Track to be mutable or referenced in the future (once I have all the tracks)"}]}]}],"thread_ts":"1608660588.283400","parent_user_id":"U01658MJH3P"},{"client_msg_id":"4f2f58b6-761d-4431-8abb-ef0979c22c5c","type":"message","text":"i will push this in a minute if you want to check it out","user":"U01658MJH3P","ts":"1608661104.284900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hPB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i will push this in a minute if you want to check it out"}]}]}],"thread_ts":"1608660588.283400","parent_user_id":"U01658MJH3P"},{"client_msg_id":"76dd5c6f-01e6-4772-96b7-5402794ae3c1","type":"message","text":"Cool!","user":"U8D9768Q6","ts":"1608663102.287000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KzEny","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool!"}]}]}],"thread_ts":"1608660588.283400","parent_user_id":"U01658MJH3P","reactions":[{"name":"+1","users":["U01658MJH3P"],"count":1}]}]