[{"client_msg_id":"a8d092b9-3b6f-4989-8244-9c2a74f6a8ba","type":"message","text":"Is there an efficient way to associate a value with  a parameterized type.\nFor example:\n`struct GaloisField{p,r}; val::Int end`\n```+(a::G, b::G} where G&lt;:GaloisField = addop(a.val, b.val, logtable(G))```\nMemoization of `logtable` or using a global dictionary is not fast enough.","user":"UDHCV0BHD","ts":"1612886961.370800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JNEQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there an efficient way to associate a value with  a parameterized type.\nFor example:\n"},{"type":"text","text":"struct GaloisField{p,r}; val::Int end","style":{"code":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"+(a::G, b::G} where G<:GaloisField = addop(a.val, b.val, logtable(G))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Memoization of "},{"type":"text","text":"logtable","style":{"code":true}},{"type":"text","text":" or using a global dictionary is not fast enough."}]}]}],"thread_ts":"1612886961.370800","reply_count":7,"reply_users_count":4,"latest_reply":"1612890831.373800","reply_users":["B01J9QZ4SP8","U017LQ3A59U","UDHCV0BHD","U0179G7FG4F"],"subscribed":false,"reactions":[{"name":"bridge","users":["UDHCV0BHD"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612886963.370900","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612886961.370800","parent_user_id":"UDHCV0BHD"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/54940| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1612887384.371600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612886961.370800","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"cb5d0fdf-97ac-4b25-8f22-eedfe6fa9392","type":"message","text":"Is defining\n```+(a::G, b::G) where {p, r, G&lt;:GaloisField{p, r}} = addop(a.val, b.val, logtable(p, r))```\ndoing what you need?","user":"U017LQ3A59U","ts":"1612887926.371800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZoO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is defining\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"+(a::G, b::G) where {p, r, G<:GaloisField{p, r}} = addop(a.val, b.val, logtable(p, r))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"doing what you need?"}]}]}],"thread_ts":"1612886961.370800","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"069d9832-b428-43df-9e02-c9c917f4886d","type":"message","text":"Yes. But `logtable` is expensive to calculate and shal be executed only once.","user":"UDHCV0BHD","ts":"1612888790.372000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KQI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes. But "},{"type":"text","text":"logtable","style":{"code":true}},{"type":"text","text":" is expensive to calculate and shal be executed only once."}]}]}],"thread_ts":"1612886961.370800","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"8abba205-b932-4305-9cc5-75f860736589","type":"message","text":"I think what you need is a generated function then\n```@generated logtable(::Type{G}) where {p, r, G &lt;: GaloisField{p, r}}\n    lg = _logtable(p, r)  # The actual computation\n    return :($lg)\nend```\nThat way the actual logtable will be comptued only once per type","user":"U017LQ3A59U","ts":"1612889206.372200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vam","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think what you need is a generated function then\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@generated logtable(::Type{G}) where {p, r, G <: GaloisField{p, r}}\n    lg = _logtable(p, r)  # The actual computation\n    return :($lg)\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"That way the actual logtable will be comptued only once per type"}]}]}],"thread_ts":"1612886961.370800","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"f2b123a0-80d9-464f-a2da-cd4c01db520b","type":"message","text":"Thanks! I will try that.","user":"UDHCV0BHD","ts":"1612889940.372400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/w3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! I will try that."}]}]}],"thread_ts":"1612886961.370800","parent_user_id":"UDHCV0BHD"},{"client_msg_id":"beed0d5a-b794-4875-91f0-c76f49cf751b","type":"message","text":"imo `@generated` is not the right approach. I would use `Memoize.jl` to cache the output instead. This will be much less brittle","user":"U0179G7FG4F","ts":"1612890831.373800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f+O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"imo "},{"type":"text","text":"@generated","style":{"code":true}},{"type":"text","text":" is not the right approach. I would use "},{"type":"text","text":"Memoize.jl","style":{"code":true}},{"type":"text","text":" to cache the output instead. This will be much less brittle"}]}]}],"thread_ts":"1612886961.370800","parent_user_id":"UDHCV0BHD"}]