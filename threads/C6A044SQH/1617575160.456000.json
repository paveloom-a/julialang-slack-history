[{"client_msg_id":"7c3431e7-7386-4f2c-a50e-7b69ab784fcf","type":"message","text":"Could someone help me find a less-ugly way to do something? I have a function `dom_cws!()` (takes no arguments) which, when called on a remote process (i.e. `@spawnat 2 dom_cws!()`), performs some computation local to that process.  Anyway, I want to run `dom_cws!()`  on each worker process asynchronously and then wait for each to complete before moving on.\n\nMy first attempt at this is written below:\n\n`fs = Array{Future}(undef, nworkers())`\n`for (i, w) in enumerate(workers())`   \n    `fs[i] = @spawnat w dom_cws!()`    \n`end`                                  \n`[wait(f) for f in fs]`   \n\nbut this seemed too wordy. My next attempt was:\n\n`pmap((_) -&gt; dom_cws!(), 1:nworkers())`\n\nbut I’m implicitly using the fact that pmap works on each available worker process by default. While succinct, this seems gross. Is there a better way to do this? Maybe there is some macro I’m not aware of?\n\nThanks for the help! I’m new to Distributed so this may be a little basic.","user":"U01DLEYN56U","ts":"1617575160.456000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vmmxE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could someone help me find a less-ugly way to do something? I have a function "},{"type":"text","text":"dom_cws!()","style":{"code":true}},{"type":"text","text":" (takes no arguments) which, when called on a remote process (i.e. "},{"type":"text","text":"@spawnat 2 dom_cws!()","style":{"code":true}},{"type":"text","text":"), performs some computation local to that process.  Anyway, I want to run "},{"type":"text","text":"dom_cws!()","style":{"code":true}},{"type":"text","text":"  on each worker process asynchronously and then wait for each to complete before moving on.\n\nMy first attempt at this is written below:\n\n"},{"type":"text","text":"fs = Array{Future}(undef, nworkers())","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"for (i, w) in enumerate(workers())   ","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"    fs[i] = @spawnat w dom_cws!()    ","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"end                                  ","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"[wait(f) for f in fs]   ","style":{"code":true}},{"type":"text","text":"\n\nbut this seemed too wordy. My next attempt was:\n\n"},{"type":"text","text":"pmap((_) -> dom_cws!(), 1:nworkers())","style":{"code":true}},{"type":"text","text":"\n\nbut I’m implicitly using the fact that pmap works on each available worker process by default. While succinct, this seems gross. Is there a better way to do this? Maybe there is some macro I’m not aware of?\n\nThanks for the help! I’m new to Distributed so this may be a little basic."}]}]}],"thread_ts":"1617575160.456000","reply_count":3,"reply_users_count":1,"latest_reply":"1617584863.457100","reply_users":["U011V2YN59N"],"is_locked":false,"subscribed":false},{"client_msg_id":"4e8ed186-46c0-4ffe-8b9c-25cf51f92230","type":"message","text":"The `pmap` solution seems fine to me.\n\nWhat about something like..\n\n`fs = map(proc -&gt; (@spawnat proc dom_cws!()), workers())`","user":"U011V2YN59N","ts":"1617584831.456700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4uuiS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The "},{"type":"text","text":"pmap","style":{"code":true}},{"type":"text","text":" solution seems fine to me.\n\nWhat about something like..\n\n"},{"type":"text","text":"fs = map(proc -> (@spawnat proc dom_cws!()), workers())","style":{"code":true}}]}]}],"thread_ts":"1617575160.456000","parent_user_id":"U01DLEYN56U"},{"client_msg_id":"2a1af1c2-0c96-4bb5-ba41-8bde452c25d0","type":"message","text":"then `wait.(fs)`","user":"U011V2YN59N","ts":"1617584840.456900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VqRFF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"then "},{"type":"text","text":"wait.(fs)","style":{"code":true}}]}]}],"thread_ts":"1617575160.456000","parent_user_id":"U01DLEYN56U"},{"client_msg_id":"65d1c91a-323f-47f8-929b-589ab66a831c","type":"message","text":"or even `wait.(map(proc -&gt; (@spawnat proc dom_cws!()), workers()))` but that might be a bit noisy","user":"U011V2YN59N","ts":"1617584863.457100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BgE/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or even "},{"type":"text","text":"wait.(map(proc -> (@spawnat proc dom_cws!()), workers()))","style":{"code":true}},{"type":"text","text":" but that might be a bit noisy"}]}]}],"thread_ts":"1617575160.456000","parent_user_id":"U01DLEYN56U"}]