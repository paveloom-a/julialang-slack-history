[{"client_msg_id":"0cc2dd7a-da74-4e19-a4df-2be8fcddca01","type":"message","text":"Is there any good way to write the type of a function that takes a real and returns a real? i.e. is there anything I can do like\n`f(g::Function{Real,Real}) = ...`","user":"U01Q7MHAE5U","ts":"1617517384.394800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QYn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any good way to write the type of a function that takes a real and returns a real? i.e. is there anything I can do like\n"},{"type":"text","text":"f(g::Function{Real,Real}) = ...","style":{"code":true}}]}]}],"thread_ts":"1617517384.394800","reply_count":3,"reply_users_count":2,"latest_reply":"1617530148.407200","reply_users":["U017D4RFTFC","UH24GRBLL"],"is_locked":false,"subscribed":false},{"client_msg_id":"4c329950-7d14-4453-92c5-eb2926b07f02","type":"message","text":"FunctionWrappers.jl might be of use.","user":"U017D4RFTFC","ts":"1617517520.395100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pFQCf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FunctionWrappers.jl might be of use."}]}]}],"thread_ts":"1617517384.394800","parent_user_id":"U01Q7MHAE5U"},{"client_msg_id":"55d2d0f0-d18c-468d-a78e-e8770359d930","type":"message","text":"Also this <https://discourse.julialang.org/t/enforcing-function-signatures-by-both-argument-return-types/8174/8|thread> in Discourse has several really cool implementations. I don't think there's a core language method to do this still.","user":"U017D4RFTFC","ts":"1617517613.395500","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Enforcing function signatures by both argument &amp; return types","title_link":"https://discourse.julialang.org/t/enforcing-function-signatures-by-both-argument-return-types/8174/8","text":"I’m truly amazed with all of the solutions above. I was originally hoping for a one-liner just in the method signature though. I know I’m greedy. :wink:","fallback":"JuliaLang: Enforcing function signatures by both argument &amp; return types","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1515186805,"from_url":"https://discourse.julialang.org/t/enforcing-function-signatures-by-both-argument-return-types/8174/8","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/enforcing-function-signatures-by-both-argument-return-types/8174/8"}],"blocks":[{"type":"rich_text","block_id":"A6Nkl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also this "},{"type":"link","url":"https://discourse.julialang.org/t/enforcing-function-signatures-by-both-argument-return-types/8174/8","text":"thread"},{"type":"text","text":" in Discourse has several really cool implementations. I don't think there's a core language method to do this still."}]}]}],"thread_ts":"1617517384.394800","parent_user_id":"U01Q7MHAE5U"},{"client_msg_id":"1c94f4f1-bdce-4ed3-8bf5-28a97e66a945","type":"message","text":"Julia does not have arrow functions","user":"UH24GRBLL","ts":"1617530148.407200","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1617530154.000000"},"blocks":[{"type":"rich_text","block_id":"Cyn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia does not have arrow functions"}]}]}],"thread_ts":"1617517384.394800","parent_user_id":"U01Q7MHAE5U"}]