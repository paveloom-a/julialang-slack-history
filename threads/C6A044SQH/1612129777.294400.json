[{"client_msg_id":"f23fd17c-abe1-4d80-9759-0a2a80bbfcff","type":"message","text":"Is there an in-place version of `my_vector = my_vector[my_mask]` ?","user":"U7HAYKY9X","ts":"1612129777.294400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i4a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there an in-place version of "},{"type":"text","text":"my_vector = my_vector[my_mask]","style":{"code":true}},{"type":"text","text":" ?"}]}]}],"thread_ts":"1612129777.294400","reply_count":14,"reply_users_count":5,"latest_reply":"1612131966.298400","reply_users":["B01J9QZ4SP8","U8D9768Q6","U7HAYKY9X","UH8A351DJ","UH24GRBLL"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612129779.294500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"35d0cee5-562d-49e9-8b73-c01bd41d6ae0","type":"message","text":"`filter!`","user":"U8D9768Q6","ts":"1612129816.294700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5O0d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"filter!","style":{"code":true}}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"42bced6d-8e70-49e8-bdce-cec8f50bc68c","type":"message","text":"But how would you use `filter!`  here?","user":"U7HAYKY9X","ts":"1612129872.295300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Iz5h5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But how would you use "},{"type":"text","text":"filter!","style":{"code":true}},{"type":"text","text":"  here?"}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"d2b14635-64d4-4a0d-94c3-d403b6fbf770","type":"message","text":"using what you used to generate `mask`","user":"UH8A351DJ","ts":"1612129887.295500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B4pJ5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"using what you used to generate "},{"type":"text","text":"mask","style":{"code":true}}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"dc4e9442-921c-4cbb-b1a8-57d903395edb","type":"message","text":"That's a slow process though, that's why I generate the mask","user":"U7HAYKY9X","ts":"1612129920.295900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9IAQR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's a slow process though, that's why I generate the mask"}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ff3352d5-d1f1-46da-bda4-0911987eed1f","type":"message","text":"do you care about the inverse of the mask as well?","user":"UH24GRBLL","ts":"1612129954.296100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h+cqf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do you care about the inverse of the mask as well?"}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"8600156b-64dd-4de5-b195-529c8bb3b284","type":"message","text":"Hm, maybe I don't need to make the mask after all :thinking_face:","user":"U7HAYKY9X","ts":"1612129971.296300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"geJj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hm, maybe I don't need to make the mask after all "},{"type":"emoji","name":"thinking_face"}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"978bbc99-dc9f-4f51-8312-79204c77a08a","type":"message","text":"I think the `filter!` step should be faster than generating and then applying the mask because it fuses the operations and doesn't allocate a `mask`","user":"U8D9768Q6","ts":"1612130020.296500","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1612130052.000000"},"blocks":[{"type":"rich_text","block_id":"tM5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the "},{"type":"text","text":"filter!","style":{"code":true}},{"type":"text","text":" step should be faster than generating and then applying the mask because it fuses the operations and doesn't allocate a "},{"type":"text","text":"mask","style":{"code":true}}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"30302ca7-9b61-4b4b-ada0-b37ab9aca267","type":"message","text":"I don't even think `filter!` is \"in-place\", basically what you're doing is already using minimal memory because the old one can be freed by GC","user":"UH8A351DJ","ts":"1612130022.296700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XtBEL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't even think "},{"type":"text","text":"filter!","style":{"code":true}},{"type":"text","text":" is \"in-place\", basically what you're doing is already using minimal memory because the old one can be freed by GC"}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"21f8912c-3bec-487b-a507-aa4fe47efdd2","type":"message","text":"yeah but maybe Jakob need mask in for other stuff too","user":"UH8A351DJ","ts":"1612130045.296900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"maT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah but maybe Jakob need mask in for other stuff too"}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X","reactions":[{"name":"+1","users":["U8D9768Q6"],"count":1}]},{"client_msg_id":"134ed165-fb35-4ddb-83f8-24480aaa9f4d","type":"message","text":"if we're talking about an array of `isbit` types ~ bytes, \"viewing\" means making a new array which records what indexs to \"keep\". It would be about same efficiency to just generate a new array which has the elements you want to keep","user":"UH8A351DJ","ts":"1612130157.297400","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1612130173.000000"},"blocks":[{"type":"rich_text","block_id":"Kdh9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if we're talking about an array of "},{"type":"text","text":"isbit","style":{"code":true}},{"type":"text","text":" types ~ bytes, \"viewing\" means making a new array which records what indexs to \"keep\". It would be about same efficiency to just generate a new array which has the elements you want to keep"}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"cd84fea0-bc30-4487-b14c-aa1621e8c89c","type":"message","text":"Turns out I didn't need the mask at all. But in any case, it would perhaps be a good function to have.","user":"U7HAYKY9X","ts":"1612130469.298000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cdkFN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Turns out I didn't need the mask at all. But in any case, it would perhaps be a good function to have."}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"b5a8a521-1e6c-4a97-bcb8-6dc52e20f692","type":"message","text":"Here's one way to do it by basically copying the implementation of `Base.filter!`:\n```julia&gt; function Base.filter!(a::AbstractVector, m::AbstractVector)\n           j = firstindex(a)\n           for i in eachindex(a, m)\n               @inbounds begin\n                   ai = a[i]\n                   a[j] = ai\n                   mi = m[i]\n               end\n               j = ifelse(mi, nextind(a, j), j)\n           end\n           j &gt; lastindex(a) &amp;&amp; return a\n           if a isa Vector\n               resize!(a, j-1)\n               sizehint!(a, j-1)\n           else\n               deleteat!(a, j:lastindex(a))\n           end\n           return a\n       end\n\njulia&gt; let a = [:a, :b, :c], m = [true, false, true]\n           filter!(a, m)\n       end\n2-element Vector{Symbol}:\n :a\n :c```","user":"U8D9768Q6","ts":"1612130691.298200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3AotD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's one way to do it by basically copying the implementation of "},{"type":"text","text":"Base.filter!","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function Base.filter!(a::AbstractVector, m::AbstractVector)\n           j = firstindex(a)\n           for i in eachindex(a, m)\n               @inbounds begin\n                   ai = a[i]\n                   a[j] = ai\n                   mi = m[i]\n               end\n               j = ifelse(mi, nextind(a, j), j)\n           end\n           j > lastindex(a) && return a\n           if a isa Vector\n               resize!(a, j-1)\n               sizehint!(a, j-1)\n           else\n               deleteat!(a, j:lastindex(a))\n           end\n           return a\n       end\n\njulia> let a = [:a, :b, :c], m = [true, false, true]\n           filter!(a, m)\n       end\n2-element Vector{Symbol}:\n :a\n :c"}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"bb58fd91-d9fd-4fa0-bd78-dea74a0d42cc","type":"message","text":"<https://github.com/JuliaLang/julia/issues/39470>","user":"U8D9768Q6","ts":"1612131966.298400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uw03","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/issues/39470"}]}]}],"thread_ts":"1612129777.294400","parent_user_id":"U7HAYKY9X","reactions":[{"name":"+1","users":["U7HAYKY9X"],"count":1}]}]