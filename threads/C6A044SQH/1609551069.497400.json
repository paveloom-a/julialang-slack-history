[{"client_msg_id":"29d2a360-6ba8-4241-81a4-20843fe77c8c","type":"message","text":"Is there a more compact way to write\n```function interp!(A, B, dim)\n    Rpre = CartesianIndices(size(A)[1:dim-1])\n    Rpost = CartesianIndices(size(A)[dim+1:end])\n    n = size(A, dim)\n    for Ipost in Rpost\n        for i = 1:n\n            for Ipre in Rpre\n                A[Ipre, i, Ipost] = B[Ipre, i, Ipost]/2 + B[Ipre, i+1, Ipost]/2\n            end\n        end\n    end\nend```\n? I was thinking something like\n```function interp!(A, B, dim)\n    for (Ipre, i, Ipost) in sweep(A, dim)\n        A[Ipre, i, Ipost] = B[Ipre, i, Ipost]/2 + B[Ipre, i+1, Ipost]/2\n    end\nend```\nThis would require `sweep` to return something with `iterate` defined\nfor it, and somehow recover and pass `Ipre, i, Ipost` through.\n\nI started trying to do this, but I'm having trouble recovering `Ipre, i, Ipost`.","user":"UEN48T0BT","ts":"1609551069.497400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"woai/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a more compact way to write\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function interp!(A, B, dim)\n    Rpre = CartesianIndices(size(A)[1:dim-1])\n    Rpost = CartesianIndices(size(A)[dim+1:end])\n    n = size(A, dim)\n    for Ipost in Rpost\n        for i = 1:n\n            for Ipre in Rpre\n                A[Ipre, i, Ipost] = B[Ipre, i, Ipost]/2 + B[Ipre, i+1, Ipost]/2\n            end\n        end\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"? I was thinking something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function interp!(A, B, dim)\n    for (Ipre, i, Ipost) in sweep(A, dim)\n        A[Ipre, i, Ipost] = B[Ipre, i, Ipost]/2 + B[Ipre, i+1, Ipost]/2\n    end\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"This would require "},{"type":"text","text":"sweep","style":{"code":true}},{"type":"text","text":" to return something with "},{"type":"text","text":"iterate","style":{"code":true}},{"type":"text","text":" defined\nfor it, and somehow recover and pass "},{"type":"text","text":"Ipre, i, Ipost","style":{"code":true}},{"type":"text","text":" through.\n\nI started trying to do this, but I'm having trouble recovering "},{"type":"text","text":"Ipre, i, Ipost","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1609551069.497400","reply_count":15,"reply_users_count":3,"latest_reply":"1609580893.012400","reply_users":["USU9FRPEU","UEN48T0BT","UD0NS8PDF"],"subscribed":false},{"client_msg_id":"4053f985-db9e-4101-ae11-aef2ad15bf1f","type":"message","text":"You can combine the for loops","user":"USU9FRPEU","ts":"1609551149.497500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r1g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can combine the for loops"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT","reactions":[{"name":"+1","users":["UEN48T0BT"],"count":1}]},{"client_msg_id":"00beb7ed-fe95-444d-adad-2c5e25c79cfe","type":"message","text":"```julia&gt; function interp!(A, B, dim)\n           Rpre = CartesianIndices(size(A)[1:dim-1])\n               Rpost = CartesianIndices(size(A)[dim+1:end])\n           n = size(A, dim)\n           for Ipost in Rpost, i = 1:n, Ipre in Rpre\n                       A[Ipre, i, Ipost] = B[Ipre, i, Ipost]/2 + B[Ipre, i+1, Ipost]/2\n           end\n       end\ninterp! (generic function with 1 method)```","user":"USU9FRPEU","ts":"1609551196.497800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r8c","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function interp!(A, B, dim)\n           Rpre = CartesianIndices(size(A)[1:dim-1])\n               Rpost = CartesianIndices(size(A)[dim+1:end])\n           n = size(A, dim)\n           for Ipost in Rpost, i = 1:n, Ipre in Rpre\n                       A[Ipre, i, Ipost] = B[Ipre, i, Ipost]/2 + B[Ipre, i+1, Ipost]/2\n           end\n       end\ninterp! (generic function with 1 method)"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"c57a46d6-0d95-4896-ac06-be3704b4b156","type":"message","text":"Yeah, I guess I was kind of hoping to write an iterator for this","user":"UEN48T0BT","ts":"1609551317.498000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cVWq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I guess I was kind of hoping to write an iterator for this"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"26a50fe9-3d3c-4b2b-897c-7f5dc9786dad","type":"message","text":"zip","user":"USU9FRPEU","ts":"1609551338.498200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NrZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"zip"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"046992a5-940d-4918-a4c2-da7a4dfa11ad","type":"message","text":"?","user":"UEN48T0BT","ts":"1609551345.498400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3ex9h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"?"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"e4af8c67-9390-4c13-aec0-cb59eb954d83","type":"message","text":"```julia&gt; function interp!(A, B, dim)\n           Rpre = CartesianIndices(size(A)[1:dim-1])\n               Rpost = CartesianIndices(size(A)[dim+1:end])\n           n = size(A, dim)\n           for (Ipost,i,Ipre) in zip(Rpost, 1:n, Rpre)\n                       A[Ipre, i, Ipost] = B[Ipre, i, Ipost]/2 + B[Ipre, i+1, Ipost]/2\n           end\n       end\ninterp! (generic function with 1 method)```","user":"USU9FRPEU","ts":"1609551396.498600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vv5","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function interp!(A, B, dim)\n           Rpre = CartesianIndices(size(A)[1:dim-1])\n               Rpost = CartesianIndices(size(A)[dim+1:end])\n           n = size(A, dim)\n           for (Ipost,i,Ipre) in zip(Rpost, 1:n, Rpre)\n                       A[Ipre, i, Ipost] = B[Ipre, i, Ipost]/2 + B[Ipre, i+1, Ipost]/2\n           end\n       end\ninterp! (generic function with 1 method)"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"7ea5c4dc-86cc-4c2b-ab96-dcf645ef1036","type":"message","text":"Ahhh, yes. That might help, thanks!","user":"UEN48T0BT","ts":"1609551462.498800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AErwy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ahhh, yes. That might help, thanks!"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"aead72c6-bbbf-4a5b-b4b5-9963d5966620","type":"message","text":"Although now I'm wondering why you don't just iterate over all the CartesianIndices ...","user":"USU9FRPEU","ts":"1609551479.499000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FpcB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Although now I'm wondering why you don't just iterate over all the CartesianIndices ..."}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"f43dffe6-080f-4812-a7e6-d145de8529a6","type":"message","text":"This is iterating over all the cartesian indices.. I was just trying to write it more compactly","user":"UEN48T0BT","ts":"1609551610.499200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FipVP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is iterating over all the cartesian indices.. I was just trying to write it more compactly"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"336c4373-426f-4733-a050-4b95cb49436b","type":"message","text":"So, I could use what I had in the original post with `sweep(A, dim) = zip(CartesianIndices(size(A)[dim+1:end]), 1:size(A, dim), CartesianIndices(size(A)[1:dim-1]))`","user":"UEN48T0BT","ts":"1609551626.499400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rLm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, I could use what I had in the original post with "},{"type":"text","text":"sweep(A, dim) = zip(CartesianIndices(size(A)[dim+1:end]), 1:size(A, dim), CartesianIndices(size(A)[1:dim-1]))","style":{"code":true}}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"ed878ab0-e351-4b67-99a1-23e1ab7eb3d3","type":"message","text":"That should work perfectly, thanks!","user":"UEN48T0BT","ts":"1609551666.499600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r4W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That should work perfectly, thanks!"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"bebfc760-5f26-4dfb-9caa-82a77498f340","type":"message","text":"Any reason not to use Interpolations.jl ?","user":"USU9FRPEU","ts":"1609551714.499800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CJWt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any reason not to use Interpolations.jl ?"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"b2194c05-5905-4379-aaa7-d6e6d5619084","type":"message","text":"It's is for more than just interpolations","user":"UEN48T0BT","ts":"1609552373.000500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4fk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's is for more than just interpolations"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"df8b68a6-3571-482e-8b41-5e8597a5e100","type":"message","text":"Actually, ended up using `Iterators.product` instead of `zip`, but this whole thing turned out a lot easier than what I was originally trying","user":"UEN48T0BT","ts":"1609556414.005800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ldl/q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually, ended up using "},{"type":"text","text":"Iterators.product","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"zip","style":{"code":true}},{"type":"text","text":", but this whole thing turned out a lot easier than what I was originally trying"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"},{"client_msg_id":"ac5c9dd4-4ffa-4fc0-82c6-dc79f7dfdb1e","type":"message","text":"I’m late but here’s another way:\n```function interp2!(A, B, dim)\n\tfor I in CartesianIndices(A)\n\t    J = CartesianIndex(ntuple(d -&gt; d==dim ? I[d]+1 : I[d], ndims(A)))\n\t    A[I] = (B[I] + B[J])/2\n\tend\n\tA\nend\n\nB = reshape(1:12, 3, 4)\ninterp!(rand(3,3), B, 2)\ninterp2!(rand(3,3), B, 2)```","user":"UD0NS8PDF","ts":"1609580893.012400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EiuD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m late but here’s another way:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function interp2!(A, B, dim)\n\tfor I in CartesianIndices(A)\n\t    J = CartesianIndex(ntuple(d -> d==dim ? I[d]+1 : I[d], ndims(A)))\n\t    A[I] = (B[I] + B[J])/2\n\tend\n\tA\nend\n\nB = reshape(1:12, 3, 4)\ninterp!(rand(3,3), B, 2)\ninterp2!(rand(3,3), B, 2)"}]}]}],"thread_ts":"1609551069.497400","parent_user_id":"UEN48T0BT"}]