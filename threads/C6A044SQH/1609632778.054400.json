[{"client_msg_id":"0d186800-1e79-4cb3-ab94-ef23eb075ceb","type":"message","text":"Literals are specialized","user":"U69BL50BF","ts":"1609632778.054400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"znmD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Literals are specialized"}]}]}],"thread_ts":"1609632778.054400","reply_count":4,"reply_users_count":3,"latest_reply":"1609662007.066800","reply_users":["UH8A351DJ","URPFQPSEQ","U6N6VQE30"],"subscribed":false,"reactions":[{"name":"heavy_check_mark","users":["UH8A351DJ","U014LRLJXRP"],"count":2}]},{"client_msg_id":"bf02364e-c8ca-4db2-9897-832364f5cad2","type":"message","text":"this is actually really black box magic-y:\n```julia&gt; ^(2, -3)\n0.125\n\njulia&gt; @which ^(2, -3)\n^(x::T, p::T) where T&lt;:Integer in Base at intfuncs.jl:273\n\njulia&gt; @enter ^(2, -3)\n[ Info: tracking Base\nIn ^(x, p) at intfuncs.jl:273\n\n1|debug&gt;\nIn power_by_squaring(x_, p) at intfuncs.jl:238\n 245      return x*x\n 246  elseif p &lt; 0\n 247      isone(x) &amp;&amp; return copy(x)\n 248      isone(-x) &amp;&amp; return iseven(p) ? one(x) : copy(x)\n&gt;249      throw_domerr_powbysq(x, p)\n 250  end\n 251  t = trailing_zeros(p) + 1\n 252  p &gt;&gt;= t\n 253  while (t -= 1) &gt; 0\n\nAbout to run: (Base.throw_domerr_powbysq)(2, -3)\n1|debug&gt;\nERROR: DomainError with -3:\nCannot raise an integer x to a negative power -3.```","user":"UH8A351DJ","ts":"1609633087.054600","team":"T68168MUP","edited":{"user":"UH8A351DJ","ts":"1609633104.000000"},"blocks":[{"type":"rich_text","block_id":"wbW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is actually really black box magic-y:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> ^(2, -3)\n0.125\n\njulia> @which ^(2, -3)\n^(x::T, p::T) where T<:Integer in Base at intfuncs.jl:273\n\njulia> @enter ^(2, -3)\n[ Info: tracking Base\nIn ^(x, p) at intfuncs.jl:273\n\n1|debug>\nIn power_by_squaring(x_, p) at intfuncs.jl:238\n 245      return x*x\n 246  elseif p < 0\n 247      isone(x) && return copy(x)\n 248      isone(-x) && return iseven(p) ? one(x) : copy(x)\n>249      throw_domerr_powbysq(x, p)\n 250  end\n 251  t = trailing_zeros(p) + 1\n 252  p >>= t\n 253  while (t -= 1) > 0\n\nAbout to run: (Base.throw_domerr_powbysq)(2, -3)\n1|debug>\nERROR: DomainError with -3:\nCannot raise an integer x to a negative power -3."}]}]}],"thread_ts":"1609632778.054400","parent_user_id":"U69BL50BF","reactions":[{"name":"magicwand","users":["U014LRLJXRP"],"count":1}]},{"client_msg_id":"bfff17b9-7418-4067-8efe-351f7cd1a9c0","type":"message","text":"When the exponent is a variable, then I get the error:\n```julia&gt; p=-5\n-5\n\njulia&gt; 2^p\nERROR: DomainError with -5:\nCannot raise an integer x to a negative power -5.\nMake x or -5 a float by adding a zero decimal (e.g., 2.0^-5 or 2^-5.0 instead of 2^-5), or write 1/x^5, float(x)^-5, x^float(-5) or (x//1)^-5\nStacktrace:\n [1] throw_domerr_powbysq(::Int64, ::Int64) at .\\intfuncs.jl:228\n [2] power_by_squaring(::Int64, ::Int64) at .\\intfuncs.jl:249\n [3] ^(::Int64, ::Int64) at .\\intfuncs.jl:273\n [4] top-level scope at none:1\n\njulia&gt; @which 2^p\n^(x::T, p::T) where T&lt;:Integer in Base at intfuncs.jl:273```\nI see that the behaviour is different but I don't understand how the code produces this behaviour.\n\nAlso `@code_warntype` tells me that the return is `Int64`  and this function is type stable\n```julia&gt; @code_warntype 2^-5\nVariables\n  #self#::Core.Compiler.Const(^, false)\n  x::Int64\n  p::Int64\n\nBody::Int64\n1 ─ %1 = Base.power_by_squaring(x, p)::Int64\n└──      return %1```\n","user":"URPFQPSEQ","ts":"1609635349.056500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2wrz+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When the exponent is a variable, then I get the error:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> p=-5\n-5\n\njulia> 2^p\nERROR: DomainError with -5:\nCannot raise an integer x to a negative power -5.\nMake x or -5 a float by adding a zero decimal (e.g., 2.0^-5 or 2^-5.0 instead of 2^-5), or write 1/x^5, float(x)^-5, x^float(-5) or (x//1)^-5\nStacktrace:\n [1] throw_domerr_powbysq(::Int64, ::Int64) at .\\intfuncs.jl:228\n [2] power_by_squaring(::Int64, ::Int64) at .\\intfuncs.jl:249\n [3] ^(::Int64, ::Int64) at .\\intfuncs.jl:273\n [4] top-level scope at none:1\n\njulia> @which 2^p\n^(x::T, p::T) where T<:Integer in Base at intfuncs.jl:273"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I see that the behaviour is different but I don't understand how the code produces this behaviour.\n\nAlso "},{"type":"text","text":"@code_warntype","style":{"code":true}},{"type":"text","text":" tells me that the return is "},{"type":"text","text":"Int64","style":{"code":true}},{"type":"text","text":"  and this function is type stable\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @code_warntype 2^-5\nVariables\n  #self#::Core.Compiler.Const(^, false)\n  x::Int64\n  p::Int64\n\nBody::Int64\n1 ─ %1 = Base.power_by_squaring(x, p)::Int64\n└──      return %1"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1609632778.054400","parent_user_id":"U69BL50BF"},{"client_msg_id":"9476902c-6e48-4eb4-9a83-c01e77fd32ab","type":"message","text":"Code warntype is not smart enough","user":"U6N6VQE30","ts":"1609661670.066600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KB3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Code warntype is not smart enough"}]}]}],"thread_ts":"1609632778.054400","parent_user_id":"U69BL50BF"},{"client_msg_id":"7766197d-2fd6-4f9a-9a66-e07512e14a14","type":"message","text":"Try @code_lowered f() with f() = 2^-1","user":"U6N6VQE30","ts":"1609662007.066800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QOaOA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Try @code_lowered f() with f() = 2^-1"}]}]}],"thread_ts":"1609632778.054400","parent_user_id":"U69BL50BF"}]