[{"client_msg_id":"4ca61b69-5c97-49f4-b694-2b64bb57775b","type":"message","text":"What does it mean to use `Symbol` type in `struct` or `Dict`  key? I am trying to understand how is it different (and better?) than just using, say, a string literal?\n\nEg\n```struct MyStruct\n  value: Symbol\nend```","user":"U01S6HCA87Q","ts":"1617516843.393300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xr=Gq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What does it mean to use "},{"type":"text","text":"Symbol","style":{"code":true}},{"type":"text","text":" type in "},{"type":"text","text":"struct","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"Dict","style":{"code":true}},{"type":"text","text":"  key? I am trying to understand how is it different (and better?) than just using, say, a string literal?\n\nEg\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct MyStruct\n  value: Symbol\nend"}]}]}],"thread_ts":"1617516843.393300","reply_count":7,"reply_users_count":3,"latest_reply":"1617519641.396000","reply_users":["U017D4RFTFC","U0179G7FG4F","U01S6HCA87Q"],"is_locked":false,"subscribed":false},{"client_msg_id":"5eaa5492-d168-4d32-a95b-e7db1b7178dd","type":"message","text":"Using symbols is faster, but it's really dependent on what you're trying to do. The speed won't generally be an issue for dictionaries","user":"U017D4RFTFC","ts":"1617517100.393400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=20","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Using symbols is faster, but it's really dependent on what you're trying to do. The speed won't generally be an issue for dictionaries"}]}]}],"thread_ts":"1617516843.393300","parent_user_id":"U01S6HCA87Q"},{"client_msg_id":"61447b63-bf95-4d5b-b4bc-1250d6c0bb61","type":"message","text":"it might. I think `Symbol`s might be hashed by object ID, which will be faster than a character based hash","user":"U0179G7FG4F","ts":"1617517141.393600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m3X46","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it might. I think "},{"type":"text","text":"Symbol","style":{"code":true}},{"type":"text","text":"s might be hashed by object ID, which will be faster than a character based hash"}]}]}],"thread_ts":"1617516843.393300","parent_user_id":"U01S6HCA87Q"},{"client_msg_id":"e26335f3-aaad-47a4-8551-a57b3e2f78a9","type":"message","text":"If you have a known set of keys that you, the programmer, are using then symbols can be better. Otherwise strings can be better. But that should only be an issue with seriously large dicts or really hot ones right <@U0179G7FG4F>?","user":"U017D4RFTFC","ts":"1617517178.393800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QeN6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you have a known set of keys that you, the programmer, are using then symbols can be better. Otherwise strings can be better. But that should only be an issue with seriously large dicts or really hot ones right "},{"type":"user","user_id":"U0179G7FG4F"},{"type":"text","text":"?"}]}]}],"thread_ts":"1617516843.393300","parent_user_id":"U01S6HCA87Q"},{"client_msg_id":"9876cee3-f13f-4f0e-bf47-6a9ec5668aae","type":"message","text":"pretty much. The only addition is if for some reason you have long symbols vs long strings, the symbols won't pay for being longer.","user":"U0179G7FG4F","ts":"1617517495.394900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LQp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"pretty much. The only addition is if for some reason you have long symbols vs long strings, the symbols won't pay for being longer."}]}]}],"thread_ts":"1617516843.393300","parent_user_id":"U01S6HCA87Q"},{"client_msg_id":"da26db02-656c-485e-8f98-8d51170d19a6","type":"message","text":"Thanks guys. Except for the speed, is there any other difference worth understanding deeply? As I understand, a `Symbol` is an atomic identifier which evaluates to a value. Does using a `Symbol` over a string literal provide any flexibility (eg manipulating values during evaluation)?","user":"U01S6HCA87Q","ts":"1617517605.395300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rHf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks guys. Except for the speed, is there any other difference worth understanding deeply? As I understand, a "},{"type":"text","text":"Symbol","style":{"code":true}},{"type":"text","text":" is an atomic identifier which evaluates to a value. Does using a "},{"type":"text","text":"Symbol","style":{"code":true}},{"type":"text","text":" over a string literal provide any flexibility (eg manipulating values during evaluation)?"}]}]}],"thread_ts":"1617516843.393300","parent_user_id":"U01S6HCA87Q"},{"client_msg_id":"35ec2a89-a505-418c-9ae6-34e81c31901e","type":"message","text":"no, not really. The main reason `Symbol`s exist is for meta-programming. It isn't much of a coincidence that the things used to represent variables have similar behavior to the strings that are how humans write variables.","user":"U0179G7FG4F","ts":"1617518250.395800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zmg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no, not really. The main reason "},{"type":"text","text":"Symbol","style":{"code":true}},{"type":"text","text":"s exist is for meta-programming. It isn't much of a coincidence that the things used to represent variables have similar behavior to the strings that are how humans write variables."}]}]}],"thread_ts":"1617516843.393300","parent_user_id":"U01S6HCA87Q"},{"client_msg_id":"0cce4559-0fd7-4dfe-b20e-33bb3bf39b6e","type":"message","text":"And you can switch between them fairly easily, so if you find a use case for one over the other later it should be easy to refactor.","user":"U017D4RFTFC","ts":"1617519641.396000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"54+xe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And you can switch between them fairly easily, so if you find a use case for one over the other later it should be easy to refactor."}]}]}],"thread_ts":"1617516843.393300","parent_user_id":"U01S6HCA87Q","reactions":[{"name":"thumbsup_all","users":["U0179G7FG4F"],"count":1}]}]