[{"client_msg_id":"984c8458-aba5-4643-91f3-abe5d66b78a9","type":"message","text":"Playing around with the julia type system, and I want to know if there is a way to assert not nothing in a type definition. I can do this\n```abstract type Goo{S&lt;:Nothing} end\nstruct Gee{S} &lt;: Goo{S} end\n\njulia&gt; Gee{Nothing}()\nGee{Nothing}()\n\njulia&gt; Gee{Int64}()\nERROR: TypeError: in Goo, in S, expected S&lt;:Nothing, got Type{Int64}```\nIs there a way to do:\n```abstract type Foo{S&lt;:NOT NOTHING} end\nstruct Fee{S} &lt;: Foo{S} end\n\njulia&gt; Fee{Nothing}()\nFee{Nothing}()\nERROR: TypeError: in Foo, in S, expected S&lt;:NOT NOTHING, got Type{Nothing}\n\njulia&gt; Fee{Int64}()\nFee{Int64}()```","user":"U01MWNUGFUL","ts":"1613570885.063500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tbdn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Playing around with the julia type system, and I want to know if there is a way to assert not nothing in a type definition. I can do this\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"abstract type Goo{S<:Nothing} end\nstruct Gee{S} <: Goo{S} end\n\njulia> Gee{Nothing}()\nGee{Nothing}()\n\njulia> Gee{Int64}()\nERROR: TypeError: in Goo, in S, expected S<:Nothing, got Type{Int64}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to do:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"abstract type Foo{S<:NOT NOTHING} end\nstruct Fee{S} <: Foo{S} end\n\njulia> Fee{Nothing}()\nFee{Nothing}()\nERROR: TypeError: in Foo, in S, expected S<:NOT NOTHING, got Type{Nothing}\n\njulia> Fee{Int64}()\nFee{Int64}()"}]}]}],"thread_ts":"1613570885.063500","reply_count":3,"reply_users_count":3,"latest_reply":"1613572721.068200","reply_users":["B01J9QZ4SP8","U7HAYKY9X","U68QW0PUZ"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613570886.063600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613570885.063500","parent_user_id":"U01MWNUGFUL"},{"client_msg_id":"4fe708b5-f1ab-4dbb-818a-e243eff6a395","type":"message","text":"I don't think so. But you can make a check against `Nothing` , and throw an error if it matches","user":"U7HAYKY9X","ts":"1613571197.063800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VKm9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think so. But you can make a check against "},{"type":"text","text":"Nothing","style":{"code":true}},{"type":"text","text":" , and throw an error if it matches"}]}]}],"thread_ts":"1613570885.063500","parent_user_id":"U01MWNUGFUL","reactions":[{"name":"+1","users":["U01MWNUGFUL"],"count":1}]},{"client_msg_id":"d608b3f9-2d29-4f27-8e9b-b03dcaa15de7","type":"message","text":"for example\n```struct Something{T}\n  x::T\n\n  function Something(x::T) where T\n    if isnothing(x) || x &lt;: Nothing\n      throw(ErrorException(\"anything that is something\"))\n    else\n      new{T}(x)\n    end\n  end\nend```","user":"U68QW0PUZ","ts":"1613572721.068200","team":"T68168MUP","edited":{"user":"U68QW0PUZ","ts":"1613573031.000000"},"blocks":[{"type":"rich_text","block_id":"5HX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Something{T}\n  x::T\n\n  function Something(x::T) where T\n    if isnothing(x) || x <: Nothing\n      throw(ErrorException(\"anything that is something\"))\n    else\n      new{T}(x)\n    end\n  end\nend"}]}]}],"thread_ts":"1613570885.063500","parent_user_id":"U01MWNUGFUL","reactions":[{"name":"+1","users":["U01MWNUGFUL"],"count":1}]}]