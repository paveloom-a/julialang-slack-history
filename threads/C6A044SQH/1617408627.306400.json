[{"type":"message","text":"Any good reason why\n```\n        if length(G_Type) == m \n            unsafe_wrap(Vector{Int32},opt.GType,m) .= G_Type\n        else\n            @error \"G_Type has wrong length\"\n        end\n```\nShould crash with:\n```\nsignal (11): segmentation fault\nin expression starting at /home/joto/Projekte/Julia/Worhp.jl/test/BindingTest.jl:56\n__memcpy_avx_unaligned_erms at /usr/bin/../lib64/libc.so.6 (unknown line)\nunknown function (ip: 0x7fcced7eb638)\ncopyto! at ./array.jl:326 [inlined]\n```\nwhere G_Type::Vector{Int32} ?\n\nEdit: Yes Error 20 cm in front of the screen","user":"U9MD78Z9N","ts":"1617408627.306400","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1617410341.000000"},"thread_ts":"1617408627.306400","reply_count":18,"reply_users_count":3,"latest_reply":"1617410232.310500","reply_users":["UDB26738Q","U012XER8K4M","U9MD78Z9N"],"is_locked":false,"subscribed":false},{"client_msg_id":"e10eed4f-7f49-4545-b0bf-7684db106110","type":"message","text":"because you're using `unsafe_wrap` in an unsafe way?","user":"UDB26738Q","ts":"1617408798.306500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"naxu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"because you're using "},{"type":"text","text":"unsafe_wrap","style":{"code":true}},{"type":"text","text":" in an unsafe way?"}]}]}],"thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"2b8071a1-b1be-44dd-81e6-f2091f9804a9","type":"message","text":"I'm not paricularly sure about this, but, isn't\n```@boundscheck length(G_Type) == m```\na pointless statement?","user":"U012XER8K4M","ts":"1617408835.306700","team":"T68168MUP","edited":{"user":"U012XER8K4M","ts":"1617408847.000000"},"blocks":[{"type":"rich_text","block_id":"f7Nk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not paricularly sure about this, but, isn't\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@boundscheck length(G_Type) == m"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"a pointless statement?"}]}]}],"thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"3464081b-b1fa-470d-aa20-21ee4e72ddd9","type":"message","text":"it won't do any boundschecking, it'd just evaluate to false or true even if called","user":"U012XER8K4M","ts":"1617408873.307100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WPEV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it won't do any boundschecking, it'd just evaluate to false or true even if called"}]}]}],"thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"aeda5f3b-f8d3-4db9-89b3-7e8dafe39689","type":"message","text":"what is `opt.GType`?","user":"UDB26738Q","ts":"1617408917.307400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"39J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what is "},{"type":"text","text":"opt.GType","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"Ok, i tried:\n```\n        if length(G_Type) == m \n            unsafe_wrap(Vector{Int32},opt.GType,m) .= G_Type\n        else\n            @error \"G_Type has wrong length\"\n        end\n```","user":"U9MD78Z9N","ts":"1617408936.307600","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"And the same problem persist","user":"U9MD78Z9N","ts":"1617408955.307800","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"da367b5c-2ca6-4876-bbe0-a3e5ffa812cc","type":"message","text":"providing a _*minimal working*_  example would greatly increase the probability we understand what you're doing at all","user":"UDB26738Q","ts":"1617408999.308000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"im3r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"providing a "},{"type":"text","text":"minimal working","style":{"bold":true,"italic":true}},{"type":"text","text":"  example would greatly increase the probability we understand what you're doing at all"}]}]}],"thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"`opt.GType` is `ùê£ùê•.Ptr{ùê£ùê•.Cint}` from `CBinding`","user":"U9MD78Z9N","ts":"1617409017.308200","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"Making a minimal working example is hard as i'm interacting with C code and a binary i don't have the source too.\nI'm trying to make an Array of `m` elements of `Int32`s i created in Jullia available for C code under the GType slot in the opt struct. the opt struct is allocated by the C code\n\n","user":"U9MD78Z9N","ts":"1617409431.308400","team":"T68168MUP","edited":{"user":"U9MD78Z9N","ts":"1617409910.000000"},"thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"The C side documentation says \n```\nType [int*] dim = m  \nC  array  of  constraint  types  for  the  constraint  functions g.\n```","user":"U9MD78Z9N","ts":"1617409553.308600","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"<@UDB26738Q> Can you tell what's unsafe about the way i use unsafe_wrap? What would be a safe way?","user":"U9MD78Z9N","ts":"1617409792.308900","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"6092b102-d31d-4441-98c4-124c89920f3d","type":"message","text":"I don't know, I was just guessing since you provided little information and using an \"unsafe\" function can lead to... well... segmentation faults","user":"UDB26738Q","ts":"1617409880.309100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ITlu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know, I was just guessing since you provided little information and using an \"unsafe\" function can lead to... well... segmentation faults"}]}]}],"thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"client_msg_id":"65b3309a-1386-4133-82fc-1d75240390fe","type":"message","text":"well, there is nothing in this code that guarantees that the length of your `opt.GType` memory is sizeof(Int32)*m","user":"U012XER8K4M","ts":"1617410097.309400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tON","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well, there is nothing in this code that guarantees that the length of your "},{"type":"text","text":"opt.GType","style":{"code":true}},{"type":"text","text":" memory is sizeof(Int32)*m"}]}]}],"thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"You are right.","user":"U9MD78Z9N","ts":"1617410117.309600","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"Wait ...","user":"U9MD78Z9N","ts":"1617410122.309800","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"Ughh, thanks","user":"U9MD78Z9N","ts":"1617410132.310000","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N","reactions":[{"name":"+1","users":["U012XER8K4M"],"count":1}]},{"type":"message","text":"I tried to write into the struct before i gave it back to C to initializie it which wasn't a problem for Int32 but for Vector{Int32} it is,","user":"U9MD78Z9N","ts":"1617410192.310300","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"},{"type":"message","text":"Moved the initializer up and the test pass","user":"U9MD78Z9N","ts":"1617410232.310500","team":"T68168MUP","thread_ts":"1617408627.306400","parent_user_id":"U9MD78Z9N"}]