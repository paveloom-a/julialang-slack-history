[{"client_msg_id":"ddb43652-e418-4311-ac95-3aea5161063a","type":"message","text":"Say I have a type `Tuple{SVector{1000;Int},Int}` and an object `x=(vec,a)`  of this type and construct `y=(vec,a+1)` , I assume since `SVector` have known sizes, they, `x`  and `y`  won't share `vec` , right?","user":"U01MG0TN079","ts":"1613988093.120300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"awnA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Say I have a type "},{"type":"text","text":"Tuple{SVector{1000;Int},Int}","style":{"code":true}},{"type":"text","text":" and an object "},{"type":"text","text":"x=(vec,a)","style":{"code":true}},{"type":"text","text":"  of this type and construct "},{"type":"text","text":"y=(vec,a+1)","style":{"code":true}},{"type":"text","text":" , I assume since "},{"type":"text","text":"SVector","style":{"code":true}},{"type":"text","text":" have known sizes, they, "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":"  and "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":"  won't share "},{"type":"text","text":"vec","style":{"code":true}},{"type":"text","text":" , right?"}]}]}],"thread_ts":"1613988093.120300","reply_count":2,"reply_users_count":2,"latest_reply":"1613988264.120600","reply_users":["B01J9QZ4SP8","UM30MT6RF"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613988095.120400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613988093.120300","parent_user_id":"U01MG0TN079"},{"client_msg_id":"ce00fd7b-888f-43d8-a32e-3b425f9f63b2","type":"message","text":"Since `vec` is immutable, it is completely irrelevant whether `vec` is shared, that's simply an implementation detail. Semantically, there is no way to distinguish `vec` being shared or not.","user":"UM30MT6RF","ts":"1613988264.120600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Y0L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Since "},{"type":"text","text":"vec","style":{"code":true}},{"type":"text","text":" is immutable, it is completely irrelevant whether "},{"type":"text","text":"vec","style":{"code":true}},{"type":"text","text":" is shared, that's simply an implementation detail. Semantically, there is no way to distinguish "},{"type":"text","text":"vec","style":{"code":true}},{"type":"text","text":" being shared or not."}]}]}],"thread_ts":"1613988093.120300","parent_user_id":"U01MG0TN079"}]