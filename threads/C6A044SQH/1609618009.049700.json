[{"client_msg_id":"80e0e0d5-a7fd-4b5f-9957-1e968e847752","type":"message","text":"Hi all,\nI have recently created my first package (DAMMmodel.jl , <https://github.com/AlexisRenchon/DAMMmodel.jl>), which is a simple model of soil respiration... it's a pre-release and I am working on making the code clean and efficient. (and I need to do the docs).\n\nThe following code works as intended:\n\n```function DAMM(x, p) # x are independent variables, p are parameters\n     # Fixed param, default values\n\tR = 8.314472e-3 # Universal gas constant, kJ K-1 mol-1\n\tO2ₐ = 0.209 # volume of O2 in the air, L L-1\n\tBD = 1.5396 # Soil bulk density, g cm-3  \n\tPD = 2.52 # Soil particle density, g cm-3\n\tporosity = 1-BD/PD # total porosity \n\tpₛₓ = 2.4e-2 # Fraction of soil C that is considered soluble\n\tDₗᵢ = 3.17 # Diffusion coeff of substrate in liquid phase, dimensionless\n\tDₒₐ = 1.67 # Diffusion coefficient of oxygen in air, dimensionless\n\tSxₜₒₜ = 0.0125 #\n     # Ind. and parameters to fit\n\tTₛ = x[:, 1]\n\tθ = x[:, 2]\n\tEaₛₓ = p[1]\n\tαₛₓ = p[2]\n\tkMₒ₂ = p[3]\n\tkMₛₓ = p[4]\n     # DAMM model\n\tSₓ = @. Sxₜₒₜ * Dₗᵢ * θ^3\n\tO2 = @. Dₒₐ * O2ₐ * ((porosity - θ)^(4/3))\n\tMMₛₓ = @. Sₓ / (kMₛₓ + Sₓ)\n\tMMₒ₂ = @. O2 / (kMₒ₂ + O2)\n\tVmaxₛₓ = @. (αₛₓ * exp(-Eaₛₓ/(R * (273.15 + Tₛ))))\n\tResp = @. Vmaxₛₓ * MMₛₓ * MMₒ₂ * 2314.8148 # 2314 to convert mgC hr-1 to umol s-1\nend\n\n# test\nx = [18.0 0.3; 22 0.22]\np = [62.0, 1e8, 2.0e-3, 3.46e-8]\nDAMM(x, p)```\nbut it could be better...\nIs there a (nice) way for user to use their own fixed parameters (e.g., BD = 1.3)? like `DAMM(x, p; BD = 1.3)`\nI previously wrote\n```function DAMM(Tsoil::Float64, Msoil::Float64; kMSx::Float64=1e-8, AlphaSx::Float64=1e8, kMO2::Float64=1e-3, EaSx::Float64=62.0, Sxtot::Float64=0.0125)::Float64 ```\nwhich worked (but not with vectors), and it wasn't very nice imo (I like having those fixed param written inside the function)\n\nOtherwise, do you have general comment to make the code nicer / more efficient?\nThanks :slightly_smiling_face:","user":"US5RA4FK4","ts":"1609618009.049700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GCd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all,\nI have recently created my first package (DAMMmodel.jl , "},{"type":"link","url":"https://github.com/AlexisRenchon/DAMMmodel.jl"},{"type":"text","text":"), which is a simple model of soil respiration... it's a pre-release and I am working on making the code clean and efficient. (and I need to do the docs).\n\nThe following code works as intended:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function DAMM(x, p) # x are independent variables, p are parameters\n     # Fixed param, default values\n\tR = 8.314472e-3 # Universal gas constant, kJ K-1 mol-1\n\tO2ₐ = 0.209 # volume of O2 in the air, L L-1\n\tBD = 1.5396 # Soil bulk density, g cm-3  \n\tPD = 2.52 # Soil particle density, g cm-3\n\tporosity = 1-BD/PD # total porosity \n\tpₛₓ = 2.4e-2 # Fraction of soil C that is considered soluble\n\tDₗᵢ = 3.17 # Diffusion coeff of substrate in liquid phase, dimensionless\n\tDₒₐ = 1.67 # Diffusion coefficient of oxygen in air, dimensionless\n\tSxₜₒₜ = 0.0125 #\n     # Ind. and parameters to fit\n\tTₛ = x[:, 1]\n\tθ = x[:, 2]\n\tEaₛₓ = p[1]\n\tαₛₓ = p[2]\n\tkMₒ₂ = p[3]\n\tkMₛₓ = p[4]\n     # DAMM model\n\tSₓ = @. Sxₜₒₜ * Dₗᵢ * θ^3\n\tO2 = @. Dₒₐ * O2ₐ * ((porosity - θ)^(4/3))\n\tMMₛₓ = @. Sₓ / (kMₛₓ + Sₓ)\n\tMMₒ₂ = @. O2 / (kMₒ₂ + O2)\n\tVmaxₛₓ = @. (αₛₓ * exp(-Eaₛₓ/(R * (273.15 + Tₛ))))\n\tResp = @. Vmaxₛₓ * MMₛₓ * MMₒ₂ * 2314.8148 # 2314 to convert mgC hr-1 to umol s-1\nend\n\n# test\nx = [18.0 0.3; 22 0.22]\np = [62.0, 1e8, 2.0e-3, 3.46e-8]\nDAMM(x, p)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nbut it could be better...\nIs there a (nice) way for user to use their own fixed parameters (e.g., BD = 1.3)? like "},{"type":"text","text":"DAMM(x, p; BD = 1.3)","style":{"code":true}},{"type":"text","text":"\nI previously wrote\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function DAMM(Tsoil::Float64, Msoil::Float64; kMSx::Float64=1e-8, AlphaSx::Float64=1e8, kMO2::Float64=1e-3, EaSx::Float64=62.0, Sxtot::Float64=0.0125)::Float64 "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which worked (but not with vectors), and it wasn't very nice imo (I like having those fixed param written inside the function)\n\nOtherwise, do you have general comment to make the code nicer / more efficient?\nThanks "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1609618009.049700","reply_count":2,"reply_users_count":1,"latest_reply":"1609635146.056300","reply_users":["US5RA4FK4"],"subscribed":false},{"client_msg_id":"6ebb4aab-a8bc-4c31-add8-c0d427904124","type":"message","text":"seems like `kwargs...` is what I am looking for, but I am not sure how to use it\n```function f(x; y=0, kwargs...)\n    ###\nend```","user":"US5RA4FK4","ts":"1609634015.055100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J8OBf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"seems like "},{"type":"text","text":"kwargs...","style":{"code":true}},{"type":"text","text":" is what I am looking for, but I am not sure how to use it\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function f(x; y=0, kwargs...)\n    ###\nend"}]}]}],"thread_ts":"1609618009.049700","parent_user_id":"US5RA4FK4"},{"client_msg_id":"7a9cf733-daaf-41a4-bd60-3c4b659b1f1d","type":"message","text":"This works,\n```function DAMM(x, p;  # x are independent variables, p are parameters\n     # Fixed param, default values\n\tR = 8.314472e-3, # Universal gas constant, kJ K-1 mol-1\n\tO2ₐ = 0.209, # volume of O2 in the air, L L-1\n\tBD = 1.5396, # Soil bulk density, g cm-3  \n\tPD = 2.52, # Soil particle density, g cm-3\n\tporosity = 1-BD/PD, # total porosity \n\tpₛₓ = 2.4e-2, # Fraction of soil C that is considered soluble\n\tDₗᵢ = 3.17, # Diffusion coeff of substrate in liquid phase, dimensionless\n\tDₒₐ = 1.67, # Diffusion coefficient of oxygen in air, dimensionless\n\tSxₜₒₜ = 0.0125)\n     # Independent variables\n\tTₛ = x[:, 1]\n\tθ = x[:, 2]\n     # Parameters to fit\n\tEaₛₓ = p[1]\n\tαₛₓ = p[2]\n\tkMₒ₂ = p[3]\n\tkMₛₓ = p[4]\n     # DAMM model\n\tSₓ = @. Sxₜₒₜ * Dₗᵢ * θ^3\n\tO2 = @. Dₒₐ * O2ₐ * ((porosity - θ)^(4/3))\n\tMMₛₓ = @. Sₓ / (kMₛₓ + Sₓ)\n\tMMₒ₂ = @. O2 / (kMₒ₂ + O2)\n\tVmaxₛₓ = @. (αₛₓ * exp(-Eaₛₓ/(R * (273.15 + Tₛ))))\n\tResp = @. Vmaxₛₓ * MMₛₓ * MMₒ₂ * 2314.8148 # 2314 to convert mgC hr-1 to umol s-1\nend\n\n# test\nx = [18.0 0.3; 22.0 0.22]\np = [62.0, 1e8, 2.0e-3, 3.46e-8]\nDAMM(x, p)\nDAMM(x, p, Sxₜₒₜ = 0.01)```\nI guess I could declare types to make it faster :slightly_smiling_face:","user":"US5RA4FK4","ts":"1609635146.056300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uG1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This works,\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function DAMM(x, p;  # x are independent variables, p are parameters\n     # Fixed param, default values\n\tR = 8.314472e-3, # Universal gas constant, kJ K-1 mol-1\n\tO2ₐ = 0.209, # volume of O2 in the air, L L-1\n\tBD = 1.5396, # Soil bulk density, g cm-3  \n\tPD = 2.52, # Soil particle density, g cm-3\n\tporosity = 1-BD/PD, # total porosity \n\tpₛₓ = 2.4e-2, # Fraction of soil C that is considered soluble\n\tDₗᵢ = 3.17, # Diffusion coeff of substrate in liquid phase, dimensionless\n\tDₒₐ = 1.67, # Diffusion coefficient of oxygen in air, dimensionless\n\tSxₜₒₜ = 0.0125)\n     # Independent variables\n\tTₛ = x[:, 1]\n\tθ = x[:, 2]\n     # Parameters to fit\n\tEaₛₓ = p[1]\n\tαₛₓ = p[2]\n\tkMₒ₂ = p[3]\n\tkMₛₓ = p[4]\n     # DAMM model\n\tSₓ = @. Sxₜₒₜ * Dₗᵢ * θ^3\n\tO2 = @. Dₒₐ * O2ₐ * ((porosity - θ)^(4/3))\n\tMMₛₓ = @. Sₓ / (kMₛₓ + Sₓ)\n\tMMₒ₂ = @. O2 / (kMₒ₂ + O2)\n\tVmaxₛₓ = @. (αₛₓ * exp(-Eaₛₓ/(R * (273.15 + Tₛ))))\n\tResp = @. Vmaxₛₓ * MMₛₓ * MMₒ₂ * 2314.8148 # 2314 to convert mgC hr-1 to umol s-1\nend\n\n# test\nx = [18.0 0.3; 22.0 0.22]\np = [62.0, 1e8, 2.0e-3, 3.46e-8]\nDAMM(x, p)\nDAMM(x, p, Sxₜₒₜ = 0.01)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I guess I could declare types to make it faster "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1609618009.049700","parent_user_id":"US5RA4FK4"}]