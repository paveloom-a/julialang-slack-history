[{"client_msg_id":"59ae9e7f-33d1-47ae-bf92-d5c8598f938a","type":"message","text":"I am using `Distributed` to run replicate simulations on multiple processes and running into some \"world age\" issues. Essentially, I have a `evolve_worker(input, output)` function that has parameter objects in the `input` channel and then saves the data in the `output` channel. The parameter objects have a mix of scalar parameter values and functions like\n```struct Params\n    val::Int\n    func::Function\nend```\nI usually assign an anonymous function to the `func` field in `Params`.\n\nWhen I run `for w in workers() remote_do(evolve_worker, w, input, output) end`, julia complains about the `MethodError: no method matching` and `applicable method may be too new` in the part of `evolve_worker` that uses `Params.func`.\n\nLooking at <https://github.com/dfdx/Spark.jl/issues/78>, it seems like the solution is to invoke `Params.func` with `Base.invokelatest`. Is this right? Is there any better way of sending anonymous functions to distributed workers without running into world age issues?","user":"UKFUT8N5A","ts":"1609388942.413300","team":"T68168MUP","edited":{"user":"UKFUT8N5A","ts":"1609388976.000000"},"blocks":[{"type":"rich_text","block_id":"gj0K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am using "},{"type":"text","text":"Distributed","style":{"code":true}},{"type":"text","text":" to run replicate simulations on multiple processes and running into some \"world age\" issues. Essentially, I have a "},{"type":"text","text":"evolve_worker(input, output)","style":{"code":true}},{"type":"text","text":" function that has parameter objects in the "},{"type":"text","text":"input","style":{"code":true}},{"type":"text","text":" channel and then saves the data in the "},{"type":"text","text":"output","style":{"code":true}},{"type":"text","text":" channel. The parameter objects have a mix of scalar parameter values and functions like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct Params\n    val::Int\n    func::Function\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI usually assign an anonymous function to the "},{"type":"text","text":"func","style":{"code":true}},{"type":"text","text":" field in "},{"type":"text","text":"Params","style":{"code":true}},{"type":"text","text":".\n\nWhen I run "},{"type":"text","text":"for w in workers() remote_do(evolve_worker, w, input, output) end","style":{"code":true}},{"type":"text","text":", julia complains about the "},{"type":"text","text":"MethodError: no method matching","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"applicable method may be too new","style":{"code":true}},{"type":"text","text":" in the part of "},{"type":"text","text":"evolve_worker","style":{"code":true}},{"type":"text","text":" that uses "},{"type":"text","text":"Params.func","style":{"code":true}},{"type":"text","text":".\n\nLooking at "},{"type":"link","url":"https://github.com/dfdx/Spark.jl/issues/78"},{"type":"text","text":", it seems like the solution is to invoke "},{"type":"text","text":"Params.func","style":{"code":true}},{"type":"text","text":" with "},{"type":"text","text":"Base.invokelatest","style":{"code":true}},{"type":"text","text":". Is this right? Is there any better way of sending anonymous functions to distributed workers without running into world age issues?"}]}]}],"thread_ts":"1609388942.413300","reply_count":10,"reply_users_count":2,"latest_reply":"1609390067.415400","reply_users":["U0179G7FG4F","UKFUT8N5A"],"subscribed":false},{"client_msg_id":"89c43646-7dd8-4fc5-ac3a-8c9219fab12e","type":"message","text":"Any chance you can just use threads where this won't be a problem?","user":"U0179G7FG4F","ts":"1609389181.413500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T4wJ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Any chance you can just use threads where this won't be a problem?"}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"},{"client_msg_id":"0bc3fa18-a9b6-410a-8938-0058f7d3d90e","type":"message","text":"performance was really bad with threads :disappointed: so I thought I'd try this.","user":"UKFUT8N5A","ts":"1609389251.413700","team":"T68168MUP","edited":{"user":"UKFUT8N5A","ts":"1609389257.000000"},"blocks":[{"type":"rich_text","block_id":"gf9r+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"performance was really bad with threads "},{"type":"emoji","name":"disappointed"},{"type":"text","text":" so I thought I'd try this."}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"},{"client_msg_id":"4ad15640-bc6e-4493-9c14-99872128e50b","type":"message","text":"which is probably due to my lack of knowing how to optimize for threads so I thought this might be a \"quick fix\" :joy:","user":"UKFUT8N5A","ts":"1609389426.414000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7lNg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which is probably due to my lack of knowing how to optimize for threads so I thought this might be a \"quick fix\" "},{"type":"emoji","name":"joy"}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"},{"client_msg_id":"008b5feb-1894-468a-abda-257790831290","type":"message","text":"that shouldn't be the case. (and distributed is unlikely to be better)","user":"U0179G7FG4F","ts":"1609389723.414200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HtSm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that shouldn't be the case. (and distributed is unlikely to be better)"}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"},{"client_msg_id":"bf91ad8b-2a8f-4083-a0d7-ddaad2473d23","type":"message","text":"hmm, ok","user":"UKFUT8N5A","ts":"1609389782.414400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N8l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm, ok"}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"},{"client_msg_id":"7b43c9c7-9857-4d9c-9329-9f08edcc2db0","type":"message","text":"your best bet is probably posting the single threaded version in <#CF53T1DU4|performance-helpdesk>. Problems with the single threaded version are often the cause of problems when you add multithreading","user":"U0179G7FG4F","ts":"1609389884.414600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q4T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"your best bet is probably posting the single threaded version in "},{"type":"channel","channel_id":"CF53T1DU4"},{"type":"text","text":". Problems with the single threaded version are often the cause of problems when you add multithreading"}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"},{"client_msg_id":"edf5c9a9-4b55-49b2-a2f7-e243f04d0126","type":"message","text":"specifically, if you have heavy allocation adding threads just makes everything way worse","user":"U0179G7FG4F","ts":"1609389906.414800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PolA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"specifically, if you have heavy allocation adding threads just makes everything way worse"}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"},{"client_msg_id":"a992e58b-d65b-4edd-9af8-8e7f4391472a","type":"message","text":"gotcha. I tried to reduce the allocations some but probably not nearly enough.","user":"UKFUT8N5A","ts":"1609389939.415000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e7d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"gotcha. I tried to reduce the allocations some but probably not nearly enough."}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"},{"client_msg_id":"3ca19edf-5ce3-43e1-8b2f-e2d731fdcd56","type":"message","text":"thanks for the advice!","user":"UKFUT8N5A","ts":"1609389944.415200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bapDj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks for the advice!"}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"},{"client_msg_id":"bee63986-f4f3-44bf-8211-458fddf4af68","type":"message","text":"no problem!","user":"U0179G7FG4F","ts":"1609390067.415400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MBW3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no problem!"}]}]}],"thread_ts":"1609388942.413300","parent_user_id":"UKFUT8N5A"}]