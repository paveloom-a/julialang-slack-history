[{"client_msg_id":"ec8e9e70-bfa1-4111-9567-9406296806c1","type":"message","text":"Is there a way to round all numbers printed using `println` without using `round()`. I have quite a few `println` functions that output some data, but it's quite messy for example\n```    (lo R) inc mean: 1.0830098189359761e6 (CrI: 937167.4969324856 - 1.22668829309364e6)```\nI would like to automatically just round these to the nearest whole digit (but not through out the script, only for that function).  And even more particular, only round inside the `println` the data that is interpolated. I would really hate to have `round` statements everywhere","user":"U6Z8377N2","ts":"1614750513.247300","team":"T68168MUP","edited":{"user":"U6Z8377N2","ts":"1614750570.000000"},"blocks":[{"type":"rich_text","block_id":"WnO6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to round all numbers printed using "},{"type":"text","text":"println","style":{"code":true}},{"type":"text","text":" without using "},{"type":"text","text":"round()","style":{"code":true}},{"type":"text","text":". I have quite a few "},{"type":"text","text":"println","style":{"code":true}},{"type":"text","text":" functions that output some data, but it's quite messy for example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    (lo R) inc mean: 1.0830098189359761e6 (CrI: 937167.4969324856 - 1.22668829309364e6)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I would like to automatically just round these to the nearest whole digit (but not through out the script, only for that function).  And even more particular, only round inside the "},{"type":"text","text":"println","style":{"code":true}},{"type":"text","text":" the data that is interpolated. I would really hate to have "},{"type":"text","text":"round","style":{"code":true}},{"type":"text","text":" statements everywhere"}]}]}],"thread_ts":"1614750513.247300","reply_count":4,"reply_users_count":3,"latest_reply":"1614769993.260900","reply_users":["B01J9QZ4SP8","UP9P4JFNJ","UEA5FBCRH"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614750515.247400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614750513.247300","parent_user_id":"U6Z8377N2"},{"client_msg_id":"d04958a0-486c-43d3-8a1e-6331930e8992","type":"message","text":"why not use `Printf`:\n```julia&gt; x = randn(10);\n\njulia&gt; using Printf, Statistics\n\njulia&gt; @printf(\"μ: %.2f, σ: %.2f\", mean(x), std(x))\nμ: -0.22, σ: 1.33```","user":"UP9P4JFNJ","ts":"1614755589.248100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"krSi0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"why not use "},{"type":"text","text":"Printf","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> x = randn(10);\n\njulia> using Printf, Statistics\n\njulia> @printf(\"μ: %.2f, σ: %.2f\", mean(x), std(x))\nμ: -0.22, σ: 1.33"}]}]}],"thread_ts":"1614750513.247300","parent_user_id":"U6Z8377N2"},{"client_msg_id":"8b496fa9-64c5-4902-9d91-b1076b41f8a5","type":"message","text":"I was trying to do the same thing the other day. I ran into this discourse entry: <https://discourse.julialang.org/t/formatted-printing-of-arrays/3121> where someone proposes:\n```using Printf\nBase.show(io::IO, f::Float64) = @printf io \"%1.3f\" f```\nwhich works fine. But then somebody else warns that this is not the ideal way since it extends a Base function without using module-defined type arguments. No alternative solution is proposed though.","user":"UEA5FBCRH","ts":"1614763039.250200","team":"T68168MUP","edited":{"user":"UEA5FBCRH","ts":"1614763953.000000"},"attachments":[{"service_name":"JuliaLang","title":"Formatted printing of arrays","title_link":"https://discourse.julialang.org/t/formatted-printing-of-arrays/3121","text":"I want to print the elements of an array of floating point numbers in the same format. In Python/Numpy, I do: np.set_printoptions(formatter={‘float’: ‘{: 10.6f}’.format, ‘complexfloat’: ‘{: 10.6f}’.format}) and the simple command “print someArray” will print the elements of an array in a uniform format. For example, I want arr = [1.0 2.583] to be printed as [1.000 2.583] rather than [1.0 2.583]. Is it possible to do this in Julia?","fallback":"JuliaLang: Formatted printing of arrays","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"7 :heart:","short":true}],"ts":1491672877,"from_url":"https://discourse.julialang.org/t/formatted-printing-of-arrays/3121","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/formatted-printing-of-arrays/3121"}],"blocks":[{"type":"rich_text","block_id":"+ZDqi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was trying to do the same thing the other day. I ran into this discourse entry: "},{"type":"link","url":"https://discourse.julialang.org/t/formatted-printing-of-arrays/3121"},{"type":"text","text":" where someone proposes:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Printf\nBase.show(io::IO, f::Float64) = @printf io \"%1.3f\" f"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which works fine. But then somebody else warns that this is not the ideal way since it extends a Base function without using module-defined type arguments. No alternative solution is proposed though."}]}]}],"thread_ts":"1614750513.247300","parent_user_id":"U6Z8377N2"},{"client_msg_id":"27b29b23-82ac-4523-8583-1d6a76d148f7","type":"message","text":"I think, that refers to `IOContext`:\n```julia&gt; show((μ=mean(x), σ=std(x)))\n(μ = -0.22220783431140062, σ = 1.3261111764251339)\njulia&gt; show(IOContext(stdout, :compact=&gt;true), (μ=mean(x), σ=std(x)))\n(μ = -0.222208, σ = 1.32611)```","user":"UP9P4JFNJ","ts":"1614769993.260900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4do1d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think, that refers to "},{"type":"text","text":"IOContext","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> show((μ=mean(x), σ=std(x)))\n(μ = -0.22220783431140062, σ = 1.3261111764251339)\njulia> show(IOContext(stdout, :compact=>true), (μ=mean(x), σ=std(x)))\n(μ = -0.222208, σ = 1.32611)"}]}]}],"thread_ts":"1614750513.247300","parent_user_id":"U6Z8377N2"}]