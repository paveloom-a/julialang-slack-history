[{"client_msg_id":"cc9cd7f0-0622-4dd7-91b8-3c515d743cbe","type":"message","text":"Hello everyone,\nI'm trying to write a function that returns an array with all paths from root to leaves in a binary tree, where each path is an array of symbols.\nThe tree struct is defined like this:\n```abstract type Node end\n\nstruct Branch_Node &lt;: Node\n    left::Node\n    right::Node\nend\n\nstruct Leaf_Node &lt;: Node\nend```\nSo for this tree\n```tree = Branch_Node(Branch_Node(Branch_Node(Leaf_Node(), Leaf_Node()), Leaf_Node()),Branch_Node(Leaf_Node(), Leaf_Node()))```\nI want the function to return\n```[[:left, :left, :left], [:left, :left, :right], [:left, :right], [:right, :left], [:right, :right]]```\nI can write a function that returns a nested array like this:\n```function get_path_to_leaf(node::Leaf_Node)\n    return\nend\nfunction get_path_to_leaf(node::Branch_Node)\n    return [[:left, get_path_to_leaf(node.left)], [:right, get_path_to_leaf(node.right)]]\nend```\nBut I can't figure out how to unfold the paths into flat arrays. I though something like this:\n```function get_path_to_leaf(node::Leaf_Node)\n    return []\nend\n\nfunction get_path_to_leaf(node::Branch_Node)\n    return [[append!([:left], i) for i in get_path_to_leaf(node.left)], [append!([:right], i) for i in get_path_to_leaf(node.right)]]\nend```\nwould do it, but I get the following error \"ERROR: MethodError: Cannot `convert` an object of type Array{Symbol,1} to an object of type Symbol\"\nand I'm having no luck debugging it. Sorry for the wall of text, can anyone help?","user":"U01RKJECJE8","ts":"1615897793.015400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yme","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello everyone,\nI'm trying to write a function that returns an array with all paths from root to leaves in a binary tree, where each path is an array of symbols.\nThe tree struct is defined like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"abstract type Node end\n\nstruct Branch_Node <: Node\n    left::Node\n    right::Node\nend\n\nstruct Leaf_Node <: Node\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"So for this tree\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"tree = Branch_Node(Branch_Node(Branch_Node(Leaf_Node(), Leaf_Node()), Leaf_Node()),Branch_Node(Leaf_Node(), Leaf_Node()))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I want the function to return\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[[:left, :left, :left], [:left, :left, :right], [:left, :right], [:right, :left], [:right, :right]]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I can write a function that returns a nested array like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function get_path_to_leaf(node::Leaf_Node)\n    return\nend\nfunction get_path_to_leaf(node::Branch_Node)\n    return [[:left, get_path_to_leaf(node.left)], [:right, get_path_to_leaf(node.right)]]\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"But I can't figure out how to unfold the paths into flat arrays. I though something like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function get_path_to_leaf(node::Leaf_Node)\n    return []\nend\n\nfunction get_path_to_leaf(node::Branch_Node)\n    return [[append!([:left], i) for i in get_path_to_leaf(node.left)], [append!([:right], i) for i in get_path_to_leaf(node.right)]]\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"would do it, but I get the following error \"ERROR: MethodError: Cannot `convert` an object of type Array{Symbol,1} to an object of type Symbol\"\nand I'm having no luck debugging it. Sorry for the wall of text, can anyone help?"}]}]}],"thread_ts":"1615897793.015400","reply_count":8,"reply_users_count":3,"latest_reply":"1615908634.024500","reply_users":["B01J9QZ4SP8","UB197FRCL","U01RKJECJE8"],"is_locked":false,"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1615897795.015500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615897793.015400","parent_user_id":"U01RKJECJE8","reactions":[{"name":"bridge","users":["U01RKJECJE8"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/57296| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1615897827.015800","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615897793.015400","parent_user_id":"U01RKJECJE8"},{"client_msg_id":"88f248b1-9fe1-46ab-9da7-259c86428f7b","type":"message","text":"FWIW, I gave you a possible answer on discourse :slightly_smiling_face:","user":"UB197FRCL","ts":"1615901716.017500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l8VnS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW, I gave you a possible answer on discourse "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1615897793.015400","parent_user_id":"U01RKJECJE8"},{"client_msg_id":"6d42c2e9-1ecf-46d7-aed1-77e1d7b79c87","type":"message","text":"Thanks so much <@UB197FRCL>, that works for me!","user":"U01RKJECJE8","ts":"1615902179.017900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hWgk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks so much "},{"type":"user","user_id":"UB197FRCL"},{"type":"text","text":", that works for me!"}]}]}],"thread_ts":"1615897793.015400","parent_user_id":"U01RKJECJE8","reactions":[{"name":"+1","users":["UB197FRCL"],"count":1}]},{"client_msg_id":"a38ddab7-2695-42a2-b0fc-68a0fcbfb777","type":"message","text":"I just edited my answer actually, (I had a `:leaf` symbol before, but it's now gone), so check that you saw the latest! (Sorry I was hoping to be ninja quick enough for nobody to notice)","user":"UB197FRCL","ts":"1615902277.019200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kYp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just edited my answer actually, (I had a "},{"type":"text","text":":leaf","style":{"code":true}},{"type":"text","text":" symbol before, but it's now gone), so check that you saw the latest! (Sorry I was hoping to be ninja quick enough for nobody to notice)"}]}]}],"thread_ts":"1615897793.015400","parent_user_id":"U01RKJECJE8"},{"client_msg_id":"4a1f9085-59e3-43fe-a206-fe9f5c8b94fa","type":"message","text":"Note that you can vertically concatenate stuff directly with `;`, as I did with `[:right; x]` for example.","user":"UB197FRCL","ts":"1615902358.020200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qt98","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Note that you can vertically concatenate stuff directly with "},{"type":"text","text":";","style":{"code":true}},{"type":"text","text":", as I did with "},{"type":"text","text":"[:right; x]","style":{"code":true}},{"type":"text","text":" for example."}]}]}],"thread_ts":"1615897793.015400","parent_user_id":"U01RKJECJE8","reactions":[{"name":"thumbsup_all","users":["U01RKJECJE8"],"count":1}]},{"client_msg_id":"e749f01d-bd6a-423c-b124-adad3a99c6ff","type":"message","text":"Yeah, I didn't conceive of it as a 2d array, and didn't think of trying to vertically concatenate :slightly_smiling_face: Thanks again!","user":"U01RKJECJE8","ts":"1615902612.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CDz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I didn't conceive of it as a 2d array, and didn't think of trying to vertically concatenate "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" Thanks again!"}]}]}],"thread_ts":"1615897793.015400","parent_user_id":"U01RKJECJE8","reactions":[{"name":"+1","users":["UB197FRCL"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Hey <@U01RKJECJE8>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1615908634.024500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1615897793.015400","parent_user_id":"U01RKJECJE8"}]