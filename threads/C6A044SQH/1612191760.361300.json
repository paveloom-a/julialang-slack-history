[{"client_msg_id":"0696cf43-bd4c-4ec9-a9e3-7cac4bfc81c4","type":"message","text":"Hello, I would like to take an existing method `m::Method` and generate a new method with the identical signature (except for the method name). What is the right way to do this please? I have been trying to piece together the `Expr` representing the method header from `m.sig`, but I am having a really hard time handling methods with `m.sig isa UnionAll`. So far, this was my unsuccessful attempt:\n```julia&gt; f(x::T) where {T&lt;:Number} = nothing\nf (generic function with 1 method)\n\njulia&gt; m = methods(f).ms[1]\nf(x::T) where T&lt;:Number in Main at REPL[54]:1\n\njulia&gt; expr = :(g(x::$(m.sig.body.parameters[2])) where {$(m.sig.var)} = nothing)\n:((g(x::T&lt;:Number) where T&lt;:Number) = begin\n          #= REPL[57]:1 =#\n          nothing\n      end)\n\njulia&gt; Meta.eval(expr)\nERROR: syntax: invalid type parameter name \"T&lt;:Number\"\nStacktrace:\n [1] top-level scope at none:1\n [2] eval at ./boot.jl:331 [inlined]\n [3] eval(::Expr) at ./meta.jl:6\n [4] top-level scope at REPL[58]:1```\nThanks a lot!","user":"UTQSS9F42","ts":"1612191760.361300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"St0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello, I would like to take an existing method "},{"type":"text","text":"m::Method","style":{"code":true}},{"type":"text","text":" and generate a new method with the identical signature (except for the method name). What is the right way to do this please? I have been trying to piece together the "},{"type":"text","text":"Expr","style":{"code":true}},{"type":"text","text":" representing the method header from "},{"type":"text","text":"m.sig","style":{"code":true}},{"type":"text","text":", but I am having a really hard time handling methods with "},{"type":"text","text":"m.sig isa UnionAll","style":{"code":true}},{"type":"text","text":". So far, this was my unsuccessful attempt:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> f(x::T) where {T<:Number} = nothing\nf (generic function with 1 method)\n\njulia> m = methods(f).ms[1]\nf(x::T) where T<:Number in Main at REPL[54]:1\n\njulia> expr = :(g(x::$(m.sig.body.parameters[2])) where {$(m.sig.var)} = nothing)\n:((g(x::T<:Number) where T<:Number) = begin\n          #= REPL[57]:1 =#\n          nothing\n      end)\n\njulia> Meta.eval(expr)\nERROR: syntax: invalid type parameter name \"T<:Number\"\nStacktrace:\n [1] top-level scope at none:1\n [2] eval at ./boot.jl:331 [inlined]\n [3] eval(::Expr) at ./meta.jl:6\n [4] top-level scope at REPL[58]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks a lot!"}]}]}],"thread_ts":"1612191760.361300","reply_count":2,"reply_users_count":1,"latest_reply":"1612191796.361700","reply_users":["B01J9QZ4SP8"],"subscribed":false,"reactions":[{"name":"bridge","users":["UTQSS9F42"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612191763.361400","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612191760.361300","parent_user_id":"UTQSS9F42"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/hello-i-would-like-to-take-an-existing-method-m-method-and-generate-a-new-meth|to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1612191796.361700","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612191760.361300","parent_user_id":"UTQSS9F42"}]