[{"client_msg_id":"56b6285c-623e-43cb-b429-d2085779df4c","type":"message","text":"Does GR.jl have a persistent state? If I run this code in two different Julia sessions, the second session is faster:\n```   _       _ _(_)_     |  Documentation: <https://docs.julialang.org>\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.6.0 (2021-03-24)\n _/ |\\__'_|_|_|\\__'_|  |  Official <https://julialang.org/> release\n|__/                   |\n\njulia&gt; @time begin\n           import GR, Random\n           Random.seed!(37)\n           y = randn(20, 501)\n\n           GR.setviewport(0.1, 0.95, 0.1, 0.95)\n           GR.setcharheight(0.020)\n           GR.settextcolorind(82)\n           GR.setfillcolorind(90)\n           GR.setfillintstyle(1)\n\n           let x = 1\n               GR.clearws()\n               GR.setwindow(x, x+500, -200, 200)\n               GR.fillrect(x, x+500, -200, 200)\n               GR.setlinecolorind(0);  GR.grid(50, 50, 0, -200, 2, 2)\n               GR.setlinecolorind(82); GR.axes(50, 50, x, -200, 2, 2, -0.005)\n               for i in 1:20\n                   GR.setlinecolorind(980 + i)\n                   s = cumsum(reshape(y[i,:], x+500))\n                   GR.polyline([x:x+500;], s[x:x+500])\n               end\n               GR.updatews()\n           end\n       end\n  0.463608 seconds (574.50 k allocations: 36.339 MiB, 1.38% gc time, 0.69% compilation time)```\n","user":"USU9FRPEU","ts":"1617050644.473000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"63t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does GR.jl have a persistent state? If I run this code in two different Julia sessions, the second session is faster:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"   _       _ _(_)_     |  Documentation: "},{"type":"link","url":"https://docs.julialang.org"},{"type":"text","text":"\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.6.0 (2021-03-24)\n _/ |\\__'_|_|_|\\__'_|  |  Official "},{"type":"link","url":"https://julialang.org/"},{"type":"text","text":" release\n|__/                   |\n\njulia> @time begin\n           import GR, Random\n           Random.seed!(37)\n           y = randn(20, 501)\n\n           GR.setviewport(0.1, 0.95, 0.1, 0.95)\n           GR.setcharheight(0.020)\n           GR.settextcolorind(82)\n           GR.setfillcolorind(90)\n           GR.setfillintstyle(1)\n\n           let x = 1\n               GR.clearws()\n               GR.setwindow(x, x+500, -200, 200)\n               GR.fillrect(x, x+500, -200, 200)\n               GR.setlinecolorind(0);  GR.grid(50, 50, 0, -200, 2, 2)\n               GR.setlinecolorind(82); GR.axes(50, 50, x, -200, 2, 2, -0.005)\n               for i in 1:20\n                   GR.setlinecolorind(980 + i)\n                   s = cumsum(reshape(y[i,:], x+500))\n                   GR.polyline([x:x+500;], s[x:x+500])\n               end\n               GR.updatews()\n           end\n       end\n  0.463608 seconds (574.50 k allocations: 36.339 MiB, 1.38% gc time, 0.69% compilation time)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617050644.473000","reply_count":4,"reply_users_count":2,"latest_reply":"1617062277.494100","reply_users":["U6740K1SP","USU9FRPEU"],"is_locked":false,"subscribed":false},{"client_msg_id":"6b5d3cda-71f1-4ee2-bb78-282b60079e50","type":"message","text":"how much faster?  It might just be RAM-hotness","user":"U6740K1SP","ts":"1617054603.489200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VdH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"how much faster?  It might just be RAM-hotness"}]}]}],"thread_ts":"1617050644.473000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"8059440a-0c88-4fd0-beba-0c839a3f9032","type":"message","text":"This is a cold start:\n```   _       _ _(_)_     |  Documentation: <https://docs.julialang.org>\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.6.0 (2021-03-24)\n _/ |\\__'_|_|_|\\__'_|  |  Official <https://julialang.org/> release\n|__/                   |\n\njulia&gt; @time begin\n           import GR, Random\n           Random.seed!(37)\n           y = randn(20, 501)\n\n           GR.setviewport(0.1, 0.95, 0.1, 0.95)\n           GR.setcharheight(0.020)\n           GR.settextcolorind(82)\n           GR.setfillcolorind(90)\n           GR.setfillintstyle(1)\n\n           let x = 1\n               GR.clearws()\n               GR.setwindow(x, x+500, -200, 200)\n               GR.fillrect(x, x+500, -200, 200)\n               GR.setlinecolorind(0);  GR.grid(50, 50, 0, -200, 2, 2)\n               GR.setlinecolorind(82); GR.axes(50, 50, x, -200, 2, 2, -0.005)\n               let i = 1\n                   GR.setlinecolorind(980 + i)\n                   s = cumsum(reshape(y[i,:], x+500))\n                   GR.polyline([x:x+500;], s[x:x+500])\n               end\n               GR.updatews()\n           end\n       end\n  2.811827 seconds (575.52 k allocations: 36.056 MiB, 0.22% gc time, 0.14% compilation time)```\nThe original post is from doing the above, keeping the plot open, and then starting a new Julia session.","user":"USU9FRPEU","ts":"1617057085.489400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tlUf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This is a cold start:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"   _       _ _(_)_     |  Documentation: "},{"type":"link","url":"https://docs.julialang.org"},{"type":"text","text":"\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.6.0 (2021-03-24)\n _/ |\\__'_|_|_|\\__'_|  |  Official "},{"type":"link","url":"https://julialang.org/"},{"type":"text","text":" release\n|__/                   |\n\njulia> @time begin\n           import GR, Random\n           Random.seed!(37)\n           y = randn(20, 501)\n\n           GR.setviewport(0.1, 0.95, 0.1, 0.95)\n           GR.setcharheight(0.020)\n           GR.settextcolorind(82)\n           GR.setfillcolorind(90)\n           GR.setfillintstyle(1)\n\n           let x = 1\n               GR.clearws()\n               GR.setwindow(x, x+500, -200, 200)\n               GR.fillrect(x, x+500, -200, 200)\n               GR.setlinecolorind(0);  GR.grid(50, 50, 0, -200, 2, 2)\n               GR.setlinecolorind(82); GR.axes(50, 50, x, -200, 2, 2, -0.005)\n               let i = 1\n                   GR.setlinecolorind(980 + i)\n                   s = cumsum(reshape(y[i,:], x+500))\n                   GR.polyline([x:x+500;], s[x:x+500])\n               end\n               GR.updatews()\n           end\n       end\n  2.811827 seconds (575.52 k allocations: 36.056 MiB, 0.22% gc time, 0.14% compilation time)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThe original post is from doing the above, keeping the plot open, and then starting a new Julia session."}]}]}],"thread_ts":"1617050644.473000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"323271ed-ea87-4b23-934e-153ccbd91b5f","type":"message","text":"By the way plotting from Julia in less than a second is pretty cool","user":"USU9FRPEU","ts":"1617061207.491900","team":"T68168MUP","edited":{"user":"USU9FRPEU","ts":"1617061228.000000"},"blocks":[{"type":"rich_text","block_id":"2j7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"By the way plotting from Julia in less than a second is pretty cool"}]}]}],"thread_ts":"1617050644.473000","parent_user_id":"USU9FRPEU"},{"client_msg_id":"2f5d068e-4988-4d02-835a-ad4ed0ae7468","type":"message","text":"I'm starting to narrow it down: <https://discourse.julialang.org/t/why-is-plotting-with-gr-faster-when-using-gr-jll-and-ccall-directly/58199>\n\nIt has something to do with an environmental variable.","user":"USU9FRPEU","ts":"1617062277.494100","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Why is plotting with GR faster when using GR_jll and `@ccall` directly","title_link":"https://discourse.julialang.org/t/why-is-plotting-with-gr-faster-when-using-gr-jll-and-ccall-directly/58199","text":"Why is plotting with GR faster when using GR_jll and @ccall directly? @jheinen using GR_jll _ _ _(_)_ | Documentation: <https://docs.julialang.org> (_) | (_) (_) | _ _ _| |_ __ _ | Type \"?\" for help, \"]?\" for Pkg help. | | | | | | |/ _` | | | | |_| | | | (_| | | Version 1.6.0 (2021-03-24) _/ |\\__'_|_|_|\\__'_| | Official <https://julialang.org/> release |__/ | julia&gt; @time begin @time using GR_jll x = [0, 0.2, 0.4, 0...","fallback":"JuliaLang: Why is plotting with GR faster when using GR_jll and `@ccall` directly","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1617061076,"from_url":"https://discourse.julialang.org/t/why-is-plotting-with-gr-faster-when-using-gr-jll-and-ccall-directly/58199","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/why-is-plotting-with-gr-faster-when-using-gr-jll-and-ccall-directly/58199"}],"blocks":[{"type":"rich_text","block_id":"BqpJN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm starting to narrow it down: "},{"type":"link","url":"https://discourse.julialang.org/t/why-is-plotting-with-gr-faster-when-using-gr-jll-and-ccall-directly/58199"},{"type":"text","text":"\n\nIt has something to do with an environmental variable."}]}]}],"thread_ts":"1617050644.473000","parent_user_id":"USU9FRPEU"}]