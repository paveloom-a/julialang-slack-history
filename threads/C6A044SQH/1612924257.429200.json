[{"client_msg_id":"d1ad6c1c-040a-4240-8bda-ca49c0a973b8","type":"message","text":"What is the generally accepted way to efficiently index into arrays and operate on them?\n```function t(a)\n       a[1] + a[2]\nend\nfunction t1(a, b)\n       a + b\nend\n####\n@benchmark t([1.0, 2.0])\nBenchmarkTools.Trial: \n  memory estimate:  96 bytes\n  allocs estimate:  1\n  --------------\n  minimum time:     20.744 ns (0.00% GC)\n  median time:      21.617 ns (0.00% GC)\n  mean time:        24.306 ns (7.29% GC)\n  maximum time:     1.103 μs (97.53% GC)\n\n@benchmark t1(1.0, 2.0)\nBenchmarkTools.Trial: \n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     0.014 ns (0.00% GC)\n  median time:      0.016 ns (0.00% GC)\n  mean time:        0.016 ns (0.00% GC)\n  maximum time:     2.617 ns (0.00% GC)```","user":"U01FSUY7YES","ts":"1612924257.429200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5oB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the generally accepted way to efficiently index into arrays and operate on them?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function t(a)\n       a[1] + a[2]\nend\nfunction t1(a, b)\n       a + b\nend\n####\n@benchmark t([1.0, 2.0])\nBenchmarkTools.Trial: \n  memory estimate:  96 bytes\n  allocs estimate:  1\n  --------------\n  minimum time:     20.744 ns (0.00% GC)\n  median time:      21.617 ns (0.00% GC)\n  mean time:        24.306 ns (7.29% GC)\n  maximum time:     1.103 μs (97.53% GC)\n\n@benchmark t1(1.0, 2.0)\nBenchmarkTools.Trial: \n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     0.014 ns (0.00% GC)\n  median time:      0.016 ns (0.00% GC)\n  mean time:        0.016 ns (0.00% GC)\n  maximum time:     2.617 ns (0.00% GC)"}]}]}],"thread_ts":"1612924257.429200","reply_count":16,"reply_users_count":4,"latest_reply":"1612935415.447000","reply_users":["B01J9QZ4SP8","U01FSUY7YES","U019K6Q9N15","UEGRU91B2"],"subscribed":false,"reactions":[{"name":"bridge","users":["U01FSUY7YES"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1612924259.429300","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"d1d807f1-1acc-4aa8-8df9-3bbd266d48cf","type":"message","text":"It is definitely more convenient to work with arrays than defining them out beforehand. My actual function looks like:\n```function _get_βγ(α, D, n, zb, l, ::Val{3})\n    β = D[2]*α[2]*n[2]^2*(1 + exp(-2*α[2]*l[2]))*(1 - exp(-2*α[3]*(l[3] + zb[2])))\n    β += D[3]*α[3]*n[3]^2*(1 - exp(-2*α[2]*l[2]))*(1 + exp(-2*α[3]*(l[3] + zb[2])))\n\n    γ = D[2]*α[2]*n[2]^2*(1 - exp(-2*α[2]*l[2]))*(1 - exp(-2*α[3]*(l[3] + zb[2])))\n    γ += D[3]*α[3]*n[3]^2*(1 + exp(-2*α[2]*l[2]))*(1 + exp(-2*α[3]*(l[3] + zb[2])))\n\n    return β, γ\nend```","user":"U01FSUY7YES","ts":"1612924415.429500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GXLC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is definitely more convenient to work with arrays than defining them out beforehand. My actual function looks like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function _get_βγ(α, D, n, zb, l, ::Val{3})\n    β = D[2]*α[2]*n[2]^2*(1 + exp(-2*α[2]*l[2]))*(1 - exp(-2*α[3]*(l[3] + zb[2])))\n    β += D[3]*α[3]*n[3]^2*(1 - exp(-2*α[2]*l[2]))*(1 + exp(-2*α[3]*(l[3] + zb[2])))\n\n    γ = D[2]*α[2]*n[2]^2*(1 - exp(-2*α[2]*l[2]))*(1 - exp(-2*α[3]*(l[3] + zb[2])))\n    γ += D[3]*α[3]*n[3]^2*(1 + exp(-2*α[2]*l[2]))*(1 + exp(-2*α[3]*(l[3] + zb[2])))\n\n    return β, γ\nend"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/54962| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1612924612.429800","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"8a89feb0-7139-477f-97a4-ddb6aa07fd6c","type":"message","text":"Are you encountering performance problems?","user":"U019K6Q9N15","ts":"1612926943.440900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=LRLc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you encountering performance problems?"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"d1398f08-6300-4eed-b364-872035c633d1","type":"message","text":"Ya.. unfortunately I tried rewriting a bunch of code to make it easier to read but now it is 1000x slower but yields the same answer.... :face_with_rolling_eyes:","user":"U01FSUY7YES","ts":"1612927762.441500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Yd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya.. unfortunately I tried rewriting a bunch of code to make it easier to read but now it is 1000x slower but yields the same answer.... "},{"type":"emoji","name":"face_with_rolling_eyes"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"2904d4bf-51b6-45ae-b06f-492a3551f42f","type":"message","text":"I think in your second test the compiler is actually doing the operation at compile time. And in the test you are counting the allocations from the array you are passing as an argument so it doesn’t look like representative of the problem.","user":"UEGRU91B2","ts":"1612932205.444100","team":"T68168MUP","edited":{"user":"UEGRU91B2","ts":"1612932478.000000"},"blocks":[{"type":"rich_text","block_id":"krQx4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think in your second test the compiler is actually doing the operation at compile time. And in the test you are counting the allocations from the array you are passing as an argument so it doesn’t look like representative of the problem."}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES","reactions":[{"name":"+1","users":["U01FSUY7YES"],"count":1}]},{"client_msg_id":"11b988a7-81a5-45d1-b838-2dcd85ffd26e","type":"message","text":"Would it be possible for you to reduce your problems as a Minimal Working Example (MWE)? What is the other version of your function and what performance problem are you encountering?","user":"UEGRU91B2","ts":"1612932274.444300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hNhkz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would it be possible for you to reduce your problems as a Minimal Working Example (MWE)? What is the other version of your function and what performance problem are you encountering?"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"6c674e06-47f2-4b09-9ccc-f5e4f9782803","type":"message","text":"I don’t know if wrapping your code into an @inbounds would be of help, but maybe?","user":"UEGRU91B2","ts":"1612932324.444500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9e=Xe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t know if wrapping your code into an @inbounds would be of help, but maybe?"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"39463a7b-faa2-4d27-92ae-51acb9f28a82","type":"message","text":"Are you always working with small arrays?","user":"U019K6Q9N15","ts":"1612932413.444800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GdQGV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you always working with small arrays?"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"74155315-ee13-4a39-b82e-579fa95ec8e5","type":"message","text":"Ok yes the example I originally gave the compiler was optimizing the a + b out it looks like thank you! But it looks like there is still a pretty large difference if you don't have to index into it:\n```function _get_βγ(α1, α2, l1, l2, ::Val{2})\n           β = (1 - exp(-2*α2*(l2)))\n\n           γ = (1 + exp(-2*α1*(l1)))\n           \n           return β, γ\nend\nfunction _get_βγ(α, l, ::Val{2})\n           β = (1 - exp(-2*α[2]*(l[2])))\n\n           γ = (1 + exp(-2*α[1]*(l[1])))\n           \n           return β, γ\nend\n###\n@benchmark _get_βγ(1.0, 1.2, 2.0, 3.0, Val(2))\nBenchmarkTools.Trial: \n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     17.445 ns (0.00% GC)\n  median time:      17.536 ns (0.00% GC)\n  mean time:        17.688 ns (0.00% GC)\n  maximum time:     87.092 ns (0.00% GC)\n\n@benchmark _get_βγ([1.0, 1.2], [2.0, 3.0], Val(2))\nBenchmarkTools.Trial: \n  memory estimate:  192 bytes\n  allocs estimate:  2\n  --------------\n  minimum time:     58.416 ns (0.00% GC)\n  median time:      60.484 ns (0.00% GC)\n  mean time:        66.154 ns (6.86% GC)\n  maximum time:     1.376 μs (94.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     982```","user":"U01FSUY7YES","ts":"1612932672.445100","team":"T68168MUP","edited":{"user":"U01FSUY7YES","ts":"1612932810.000000"},"blocks":[{"type":"rich_text","block_id":"HWd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok yes the example I originally gave the compiler was optimizing the a + b out it looks like thank you! But it looks like there is still a pretty large difference if you don't have to index into it:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function _get_βγ(α1, α2, l1, l2, ::Val{2})\n           β = (1 - exp(-2*α2*(l2)))\n\n           γ = (1 + exp(-2*α1*(l1)))\n           \n           return β, γ\nend\nfunction _get_βγ(α, l, ::Val{2})\n           β = (1 - exp(-2*α[2]*(l[2])))\n\n           γ = (1 + exp(-2*α[1]*(l[1])))\n           \n           return β, γ\nend\n###\n@benchmark _get_βγ(1.0, 1.2, 2.0, 3.0, Val(2))\nBenchmarkTools.Trial: \n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     17.445 ns (0.00% GC)\n  median time:      17.536 ns (0.00% GC)\n  mean time:        17.688 ns (0.00% GC)\n  maximum time:     87.092 ns (0.00% GC)\n\n@benchmark _get_βγ([1.0, 1.2], [2.0, 3.0], Val(2))\nBenchmarkTools.Trial: \n  memory estimate:  192 bytes\n  allocs estimate:  2\n  --------------\n  minimum time:     58.416 ns (0.00% GC)\n  median time:      60.484 ns (0.00% GC)\n  mean time:        66.154 ns (6.86% GC)\n  maximum time:     1.376 μs (94.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     982"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"d39860b2-99b6-4ca3-bacf-67457eb25963","type":"message","text":"I've also tried using SArrays and @inbounds macros but they seem to perform about the same ... Unfortunately this problem just amplifies when the arrays get larger and have to index more often\n```@benchmark @inbounds _get_βγ([1.0, 1.2], [2.0, 3.0], Val(2))\nBenchmarkTools.Trial: \n  memory estimate:  192 bytes\n  allocs estimate:  2\n  --------------\n  minimum time:     58.575 ns (0.00% GC)\n  median time:      60.946 ns (0.00% GC)\n  mean time:        66.703 ns (7.00% GC)\n  maximum time:     1.373 μs (95.08% GC)```","user":"U01FSUY7YES","ts":"1612933003.445600","team":"T68168MUP","edited":{"user":"U01FSUY7YES","ts":"1612933029.000000"},"blocks":[{"type":"rich_text","block_id":"Dmevq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've also tried using SArrays and @inbounds macros but they seem to perform about the same ... Unfortunately this problem just amplifies when the arrays get larger and have to index more often\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@benchmark @inbounds _get_βγ([1.0, 1.2], [2.0, 3.0], Val(2))\nBenchmarkTools.Trial: \n  memory estimate:  192 bytes\n  allocs estimate:  2\n  --------------\n  minimum time:     58.575 ns (0.00% GC)\n  median time:      60.946 ns (0.00% GC)\n  mean time:        66.703 ns (7.00% GC)\n  maximum time:     1.373 μs (95.08% GC)"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"client_msg_id":"0eb2d7ce-2e2b-4513-bef4-04cd6cd5e14c","type":"message","text":"Hmm, they look very similar to me. Could it not be due to bechmarking noise? Check this out:\n``` @benchmark _get_βγ(a, b, Val(2)) setup=(a=[1.0, 1.2]; b=[2.0, 3.0])\nBenchmarkTools.Trial:\n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     15.470 ns (0.00% GC)\n  median time:      15.588 ns (0.00% GC)\n  mean time:        16.952 ns (0.00% GC)\n  maximum time:     116.063 ns (0.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     998```","user":"UEGRU91B2","ts":"1612933480.445900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R8qad","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, they look very similar to me. Could it not be due to bechmarking noise? Check this out:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":" @benchmark _get_βγ(a, b, Val(2)) setup=(a=[1.0, 1.2]; b=[2.0, 3.0])\nBenchmarkTools.Trial:\n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     15.470 ns (0.00% GC)\n  median time:      15.588 ns (0.00% GC)\n  mean time:        16.952 ns (0.00% GC)\n  maximum time:     116.063 ns (0.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     998"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES","reactions":[{"name":"white_check_mark","users":["U01FSUY7YES"],"count":1}]},{"client_msg_id":"01172967-dc88-4be7-8d4f-9487ec334b2c","type":"message","text":"I get the same if I interpolate the variables:\n```@benchmark _get_βγ($([1.0, 1.2]), $([2.0, 3.0]), Val(2))\nBenchmarkTools.Trial:\n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     15.802 ns (0.00% GC)\n  median time:      15.986 ns (0.00% GC)\n  mean time:        17.814 ns (0.00% GC)\n  maximum time:     98.582 ns (0.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     995```","user":"UEGRU91B2","ts":"1612933505.446100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LCV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I get the same if I interpolate the variables:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@benchmark _get_βγ($([1.0, 1.2]), $([2.0, 3.0]), Val(2))\nBenchmarkTools.Trial:\n  memory estimate:  0 bytes\n  allocs estimate:  0\n  --------------\n  minimum time:     15.802 ns (0.00% GC)\n  median time:      15.986 ns (0.00% GC)\n  mean time:        17.814 ns (0.00% GC)\n  maximum time:     98.582 ns (0.00% GC)\n  --------------\n  samples:          10000\n  evals/sample:     995"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES","reactions":[{"name":"raised_hands","users":["U01FSUY7YES"],"count":1}]},{"client_msg_id":"cea15186-ccaa-4e3c-a96a-02e74fc7ba71","type":"message","text":"From the BenchmarkTools manual, if you don’t interpolate you are creating an array for each evaluation in the benchmark, so that is probably what you are measuring","user":"UEGRU91B2","ts":"1612933579.446300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Wir","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"From the BenchmarkTools manual, if you don’t interpolate you are creating an array for each evaluation in the benchmark, so that is probably what you are measuring"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES","reactions":[{"name":"+1","users":["U01FSUY7YES"],"count":1}]},{"client_msg_id":"f53eaaf5-ce4b-4371-89aa-44b2a19438a0","type":"message","text":"Yes you are absolutely correct.. This works for any dimension. Really appreciate it, should've read BenchmarkTools manual more thoroughly","user":"U01FSUY7YES","ts":"1612934203.446600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OJKon","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes you are absolutely correct.. This works for any dimension. Really appreciate it, should've read BenchmarkTools manual more thoroughly"}]}]}],"thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"},{"type":"message","subtype":"bot_message","text":"Hey <@U01FSUY7YES>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1612935415.447000","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1612924257.429200","parent_user_id":"U01FSUY7YES"}]