[{"client_msg_id":"39dc20a7-b79f-45cf-8a98-3c2ae90a2b61","type":"message","text":"Can <https://github.com/invenia/NamedDims.jl> make use of sparse arrays?","user":"U018FJVBXPD","ts":"1613023205.033700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qFf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can "},{"type":"link","url":"https://github.com/invenia/NamedDims.jl"},{"type":"text","text":" make use of sparse arrays?"}]}]}],"thread_ts":"1613023205.033700","reply_count":19,"reply_users_count":3,"latest_reply":"1613042047.045500","reply_users":["B01J9QZ4SP8","UD0NS8PDF","U018FJVBXPD"],"subscribed":false,"reactions":[{"name":"bridge","users":["U018FJVBXPD"],"count":1}]},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1613023208.033800","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"type":"message","subtype":"bot_message","text":"Success, it has been cross posted <https://discourse.julialang.org/t/55043| to Discourse>. Keep and eye out on Discourse for responses and please add an answer there once you are satisfied with the solution so others can benefit as well. Happy debugging!","ts":"1613023451.034100","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"type":"message","subtype":"bot_message","text":"Hey <@U018FJVBXPD>, if you were able to find an answer here on Slack, please cross post it to Discourse via the link above. Thank you! ","ts":"1613034254.035600","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"21e3f70d-2b05-428c-b93b-ec08321f0a89","type":"message","text":"Sure, `NamedDimsArray(sprand(5,10,0.2), (:x, :y)) * NamedDimsArray(sprand(10,0.2), :y)` seems to work. Functions specific to sparse arrays may not work, e.g. `nnz(ans)`. It would probably be trivial to make them work (likewise make sparse-array’s printing work). Perhaps open an issue, ideally with a list of what you wish would work.","user":"UD0NS8PDF","ts":"1613038328.040800","team":"T68168MUP","edited":{"user":"UD0NS8PDF","ts":"1613038374.000000"},"blocks":[{"type":"rich_text","block_id":"b5=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure, "},{"type":"text","text":"NamedDimsArray(sprand(5,10,0.2), (:x, :y)) * NamedDimsArray(sprand(10,0.2), :y)","style":{"code":true}},{"type":"text","text":" seems to work. Functions specific to sparse arrays may not work, e.g. "},{"type":"text","text":"nnz(ans)","style":{"code":true}},{"type":"text","text":". It would probably be trivial to make them work (likewise make sparse-array’s printing work). Perhaps open an issue, ideally with a list of what you wish would work."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"24561048-6fe8-4f8f-a9cd-d95ac580eb19","type":"message","text":"Cool, thanks that is good to know. I'm probably going to start using it in 3/4 months time, so only then I will know what type of problems I am going to run in to.","user":"U018FJVBXPD","ts":"1613038419.041100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sd6I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool, thanks that is good to know. I'm probably going to start using it in 3/4 months time, so only then I will know what type of problems I am going to run in to."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD","reactions":[{"name":"+1","users":["UD0NS8PDF"],"count":1}]},{"client_msg_id":"54855043-7b12-4469-91c4-3374d62a3820","type":"message","text":"Cool. Would be good to support, but I guess nobody else needed it yet.","user":"UD0NS8PDF","ts":"1613038607.042100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uD=s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool. Would be good to support, but I guess nobody else needed it yet."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"3f47aa5e-faac-470d-9576-90e9847fc791","type":"message","text":"<@UD0NS8PDF> would you say that these type of calculations would be easily achievable with NamedDimsArrays + SparseArrays?\n<https://discourse.julialang.org/t/are-there-any-libraries-for-discrete-probability-tables-in-order-to-do-these-type/54990>\n\nI'm looking to put quite some effort into implementing it, so it would be cool to know if I'm looking at the right stuff","user":"U018FJVBXPD","ts":"1613038966.042300","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Are there any libraries for discrete probability tables in order to do these type","title_link":"https://discourse.julialang.org/t/are-there-any-libraries-for-discrete-probability-tables-in-order-to-do-these-type/54990","text":"Are there any libraries for discrete probability tables in order to do these type of operations directly (see images)? I’m looking for having discrete probability tables with these operations defined on them. I also want them to be sparse (see last image). I.e., I want zero probabilities (or sometimes even an arbitrary common-to-many-states probability) to have no “entry”/ take up no memory. Is there anything that already fit these requirements? Or are there perhaps some legwork that I can pic...","fallback":"JuliaLang: Are there any libraries for discrete probability tables in order to do these type","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/3X/b/d/bd4565bf91c0274847b43c96ce6ade9b82ca3bce.png","ts":1612963061,"from_url":"https://discourse.julialang.org/t/are-there-any-libraries-for-discrete-probability-tables-in-order-to-do-these-type/54990","thumb_width":915,"thumb_height":451,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/are-there-any-libraries-for-discrete-probability-tables-in-order-to-do-these-type/54990"}],"blocks":[{"type":"rich_text","block_id":"PvF4","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UD0NS8PDF"},{"type":"text","text":" would you say that these type of calculations would be easily achievable with NamedDimsArrays + SparseArrays?\n"},{"type":"link","url":"https://discourse.julialang.org/t/are-there-any-libraries-for-discrete-probability-tables-in-order-to-do-these-type/54990"},{"type":"text","text":"\n\nI'm looking to put quite some effort into implementing it, so it would be cool to know if I'm looking at the right stuff"}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"757f56d0-eeaf-46e7-a7a4-9765cc7b248c","type":"message","text":"Maybe. I think the built-in sparse arrays are only vectors &amp; matrices, so if you need things with 3 indices, then maybe you want <https://github.com/Jutho/SparseArrayKit.jl> instead? That ought to work with TensorOperations to perform arbitrary contractions.","user":"UD0NS8PDF","ts":"1613040055.043200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PCGRN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe. I think the built-in sparse arrays are only vectors & matrices, so if you need things with 3 indices, then maybe you want "},{"type":"link","url":"https://github.com/Jutho/SparseArrayKit.jl"},{"type":"text","text":" instead? That ought to work with TensorOperations to perform arbitrary contractions."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"da18ae34-672f-4ff6-90bd-9976c2380aa9","type":"message","text":"NamedDims.jl is completely N-dimensional. My (slightly rickety!) extension in NamedPlus.jl has some things to do contractions on a given name, which calls TensorOperations, and thus might work well with its SparseArrays. But I haven’t tried that out, you’d have to explore a bit.","user":"UD0NS8PDF","ts":"1613040128.043400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dCQuc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NamedDims.jl is completely N-dimensional. My (slightly rickety!) extension in NamedPlus.jl has some things to do contractions on a given name, which calls TensorOperations, and thus might work well with its SparseArrays. But I haven’t tried that out, you’d have to explore a bit."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"77a5e981-15bf-4d13-9ed1-ac5dcb5d7193","type":"message","text":"Ah okay, so the inbuild sparse arrays can't handle n-dimensions. Good to be aware of.","user":"U018FJVBXPD","ts":"1613040165.043600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"66T+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah okay, so the inbuild sparse arrays can't handle n-dimensions. Good to be aware of."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"d3688c71-9101-4892-90d4-0cf6e3d84b73","type":"message","text":"And another implementation thing that just poped into my head, would something like swapaxes preserve the sparseness?","user":"U018FJVBXPD","ts":"1613040294.043800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=FY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And another implementation thing that just poped into my head, would something like swapaxes preserve the sparseness?"}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"72d2c30e-0059-48e0-9544-b7beb5931ba8","type":"message","text":"Cool, my research list is just getting longer and longer (but in a good way). TODO: check NamedPlus.jl operations","user":"U018FJVBXPD","ts":"1613040334.044000","team":"T68168MUP","edited":{"user":"U018FJVBXPD","ts":"1613040371.000000"},"blocks":[{"type":"rich_text","block_id":"fa1r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool, my research list is just getting longer and longer (but in a good way). TODO: check NamedPlus.jl operations"}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"59b888bc-5251-48d1-baa9-fa21b6ea20a2","type":"message","text":"Yes, I think there are many tricks for multiplying sparse matrices, etc, but for N-dims you fall back to simpler algorithms. Not sure but I presume these would implement a method for `permutedims` which preserves sparseness.","user":"UD0NS8PDF","ts":"1613040955.044300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8G=o5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, I think there are many tricks for multiplying sparse matrices, etc, but for N-dims you fall back to simpler algorithms. Not sure but I presume these would implement a method for "},{"type":"text","text":"permutedims","style":{"code":true}},{"type":"text","text":" which preserves sparseness."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"6737a770-00ff-4db9-976b-530cbaa17cf1","type":"message","text":"Okay. I take it the underlying data structure would be something like a map of indices to values. Which means it wouldn't be too difficult to implement axis reordering, by just reordering the columns of the mapping (if I'm correct about the underlying implementation).","user":"U018FJVBXPD","ts":"1613041118.044500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pLOC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay. I take it the underlying data structure would be something like a map of indices to values. Which means it wouldn't be too difficult to implement axis reordering, by just reordering the columns of the mapping (if I'm correct about the underlying implementation)."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"8b9bf291-ced4-4ec5-8eba-8a1fbf56e9fa","type":"message","text":"Yes, I think it’s just a dictionary.","user":"UD0NS8PDF","ts":"1613041277.044700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ps2h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, I think it’s just a dictionary."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"0e674416-5f31-4ee0-b199-3d8c220132ec","type":"message","text":"I think the last time we created this in C++ we unknowingly just implemented most of features of a n dimensional sparse array without realising it. All wrapped in very \"DiscreteTable\" specific interface. What a waste of effort!","user":"U018FJVBXPD","ts":"1613041428.044900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jdm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the last time we created this in C++ we unknowingly just implemented most of features of a n dimensional sparse array without realising it. All wrapped in very \"DiscreteTable\" specific interface. What a waste of effort!"}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"b91b4a65-dee8-4b96-a196-5018ec5415dd","type":"message","text":"Oh, another thing I just realised, is there a way to set a value other than \"0\" as the sparse value? Our implementation handles that. If you dot multiply A of default val 3 with B of default val 5, the resulting default val would be 15","user":"U018FJVBXPD","ts":"1613041784.045100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MYOLY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, another thing I just realised, is there a way to set a value other than \"0\" as the sparse value? Our implementation handles that. If you dot multiply A of default val 3 with B of default val 5, the resulting default val would be 15"}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"d8f94838-0919-496c-b58e-580936d29850","type":"message","text":"This comes in handy if you set the \"I don't know\" values of a discrete table as 0.5 (max-normalised). Then those values can be kept sparse and they propagate nicely through the whole sistem.","user":"U018FJVBXPD","ts":"1613041964.045300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"utqUW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This comes in handy if you set the \"I don't know\" values of a discrete table as 0.5 (max-normalised). Then those values can be kept sparse and they propagate nicely through the whole sistem."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"},{"client_msg_id":"7798b4bf-1289-4b14-b35e-9efb99009aaf","type":"message","text":"That I don’t know, I didn’t think the built-in ones did this. Would not be hard to add to dict-like ones, I presume.","user":"UD0NS8PDF","ts":"1613042047.045500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"awh5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That I don’t know, I didn’t think the built-in ones did this. Would not be hard to add to dict-like ones, I presume."}]}]}],"thread_ts":"1613023205.033700","parent_user_id":"U018FJVBXPD"}]