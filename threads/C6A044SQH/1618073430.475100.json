[{"client_msg_id":"8776f3a8-1920-4000-8d54-165bac2a73b4","type":"message","text":"Hi guys, I have some type instability that I do not understand..\n```mutable struct LinearMap{T}\n  m::Int\n  n::Int\n  mul!::Function\n  mulc!::Function\n  getidx::Function\n  _tmp::Union{Array{T}, Nothing}\nend\n\nBase.getindex(A::LinearMap, ::Colon, ::Colon) = A.getidx(1:A.m, 1:A.n)\nBase.getindex(A::LinearMap, rows, ::Colon) = A.getidx(rows, 1:A.n)\nBase.getindex(A::LinearMap, ::Colon, cols) = A.getidx(1:A.m, cols)\nBase.getindex(A::LinearMap, rows, cols) = A.getidx(rows, cols)\n\nm = 1000; n = 1000\nId(i,j) = Matrix{Float64}(i.*ones(length(j))' .== ones(length(i)).*j')\nIdOp = LinearMap{Float64}(n, n, (y,_,x) -&gt; x, (y,_,x) -&gt; x, (i,j) -&gt; Id(i,j), nothing)\n\n@code_warntype getindex(IdOp, 1:10, 1:10)\n@code_warntype IdOp.getidx(1:10, 1:10)```\nthe second `@code_warntype`  does not return an instability so it seems to be some issue with the forwarding. Any ideas?","user":"U01L0RJC6FM","ts":"1618073430.475100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DJ+k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi guys, I have some type instability that I do not understand..\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"mutable struct LinearMap{T}\n  m::Int\n  n::Int\n  mul!::Function\n  mulc!::Function\n  getidx::Function\n  _tmp::Union{Array{T}, Nothing}\nend\n\nBase.getindex(A::LinearMap, ::Colon, ::Colon) = A.getidx(1:A.m, 1:A.n)\nBase.getindex(A::LinearMap, rows, ::Colon) = A.getidx(rows, 1:A.n)\nBase.getindex(A::LinearMap, ::Colon, cols) = A.getidx(1:A.m, cols)\nBase.getindex(A::LinearMap, rows, cols) = A.getidx(rows, cols)\n\nm = 1000; n = 1000\nId(i,j) = Matrix{Float64}(i.*ones(length(j))' .== ones(length(i)).*j')\nIdOp = LinearMap{Float64}(n, n, (y,_,x) -> x, (y,_,x) -> x, (i,j) -> Id(i,j), nothing)\n\n@code_warntype getindex(IdOp, 1:10, 1:10)\n@code_warntype IdOp.getidx(1:10, 1:10)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"the second "},{"type":"text","text":"@code_warntype","style":{"code":true}},{"type":"text","text":"  does not return an instability so it seems to be some issue with the forwarding. Any ideas?"}]}]}],"thread_ts":"1618073430.475100","reply_count":4,"reply_users_count":3,"latest_reply":"1618073779.476600","reply_users":["UM30MT6RF","UDB26738Q","U01L0RJC6FM"],"is_locked":false,"subscribed":false},{"client_msg_id":"88509493-c6f0-4653-a785-65419fe6692b","type":"message","text":"`Function` is not a concrete type. You probably want to make all of these separate type paramsters","user":"UM30MT6RF","ts":"1618073576.475600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x7D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Function","style":{"code":true}},{"type":"text","text":" is not a concrete type. You probably want to make all of these separate type paramsters"}]}]}],"thread_ts":"1618073430.475100","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"52b52455-0e84-4cfa-9006-d465b6da9e22","type":"message","text":"but those fields are not accessed, as far as I can see?","user":"UDB26738Q","ts":"1618073631.475800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L7Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but those fields are not accessed, as far as I can see?"}]}]}],"thread_ts":"1618073430.475100","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"2a3228b7-cacf-4588-a98f-d6d85368bfa1","type":"message","text":"oh, `getidx`","user":"UDB26738Q","ts":"1618073660.476000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Lid","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, "},{"type":"text","text":"getidx","style":{"code":true}}]}]}],"thread_ts":"1618073430.475100","parent_user_id":"U01L0RJC6FM"},{"client_msg_id":"638e211f-9aa1-485e-9c77-298b00d8c02a","type":"message","text":"yeah `mul` and `mulc`   are for fast multiplication. it's basically `LinearOperator`  with a custom `getindex`","user":"U01L0RJC6FM","ts":"1618073779.476600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eg8kF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah "},{"type":"text","text":"mul","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"mulc ","style":{"code":true}},{"type":"text","text":"  are for fast multiplication. it's basically "},{"type":"text","text":"LinearOperator","style":{"code":true}},{"type":"text","text":"  with a custom "},{"type":"text","text":"getindex","style":{"code":true}}]}]}],"thread_ts":"1618073430.475100","parent_user_id":"U01L0RJC6FM"}]