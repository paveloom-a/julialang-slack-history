[{"client_msg_id":"ae821bbd-ab80-4a5a-bbf8-5a55806ae686","type":"message","text":"Has anyone ever hit a _practical_ limit as to the depth to which Julia/LLVM perform inlining of functions? I have posted a similar question on <https://discourse.julialang.org/t/what-is-the-maximum-inlining-depth-in-practice/55929|Discourse> but to no avail, so I wanted to try my luck here.","user":"UTKCH2WFL","ts":"1614316355.454000","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"What is the maximum inlining depth in practice?","title_link":"https://discourse.julialang.org/t/what-is-the-maximum-inlining-depth-in-practice/55929","text":"Out of professional curiosity: What is the maximum depth for inlining function calls in Julia in practice? My programming intuition says that there must exist a practical limit regarding how deeply nested functions may be before they are not inlined anymore. Is this a fixed (possibly configurable) number? Or does it depend on some compiler heuristics? And if yes, what are the limits in practice that people have experienced? I am asking since Julia favors many small functions and weâ€™ve tried to...","fallback":"JuliaLang: What is the maximum inlining depth in practice?","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"1 :heart:","short":true}],"ts":1614170418,"from_url":"https://discourse.julialang.org/t/what-is-the-maximum-inlining-depth-in-practice/55929","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/what-is-the-maximum-inlining-depth-in-practice/55929"}],"blocks":[{"type":"rich_text","block_id":"bVed7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Has anyone ever hit a "},{"type":"text","text":"practical","style":{"italic":true}},{"type":"text","text":" limit as to the depth to which Julia/LLVM perform inlining of functions? I have posted a similar question on "},{"type":"link","url":"https://discourse.julialang.org/t/what-is-the-maximum-inlining-depth-in-practice/55929","text":"Discourse"},{"type":"text","text":" but to no avail, so I wanted to try my luck here."}]}]}],"thread_ts":"1614316355.454000","reply_count":2,"reply_users_count":2,"latest_reply":"1614320062.454400","reply_users":["B01J9QZ4SP8","U7HAYKY9X"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614316357.454100","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614316355.454000","parent_user_id":"UTKCH2WFL"},{"client_msg_id":"5d9a2050-fe63-4689-a890-2897b8481b1a","type":"message","text":"I haven't seen it. The call chains involving mapreduce in Base gets to about ten layers, I think that's the highest I've seen.\nBut I don't see why it couldn't keep doing it indefinitely. Why would it ever bottom out? If there's a stack overflow error in LLVM?","user":"U7HAYKY9X","ts":"1614320062.454400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DY9Zm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven't seen it. The call chains involving mapreduce in Base gets to about ten layers, I think that's the highest I've seen.\nBut I don't see why it couldn't keep doing it indefinitely. Why would it ever bottom out? If there's a stack overflow error in LLVM?"}]}]}],"thread_ts":"1614316355.454000","parent_user_id":"UTKCH2WFL"}]