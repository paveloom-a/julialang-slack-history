[{"client_msg_id":"b90a4491-0550-4ba7-8a7a-f1eddb07ea32","type":"message","text":"Is there a builtin like `filter` but returns two arrays depending if the predicate is true or false (instead of returning one array for the trues)?","user":"U6J06TCQ0","ts":"1611783148.459000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jv2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a builtin like "},{"type":"text","text":"filter","style":{"code":true}},{"type":"text","text":" but returns two arrays depending if the predicate is true or false (instead of returning one array for the trues)?"}]}]}],"thread_ts":"1611783148.459000","reply_count":4,"reply_users_count":3,"latest_reply":"1611785575.461000","reply_users":["U6J06TCQ0","U019K6Q9N15","UH8A351DJ"],"subscribed":false},{"client_msg_id":"f580178c-c7c1-46d0-96dd-6477655228ff","type":"message","text":"I'll just write my own.","user":"U6J06TCQ0","ts":"1611783371.459100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hhV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll just write my own."}]}]}],"thread_ts":"1611783148.459000","parent_user_id":"U6J06TCQ0"},{"client_msg_id":"c876d6f0-294d-4a4c-8b93-d22c807c4d18","type":"message","text":"```function accumulator(predicate, x, y)\n  trues = first(x)\n  falses = second(x)\n  if predicate(y)\n    push!(trues, y)\n  else\n    push!(falses, y)\n  end\n  return (trues, falses)\nend\n\ndouble_filter(predicate, iter) = foldl(\n  (x, y) -&gt; accumulator(predicate, x, y),\n  iter,\n  init=([], [])\n)```","user":"U019K6Q9N15","ts":"1611784167.460000","team":"T68168MUP","edited":{"user":"U019K6Q9N15","ts":"1611784358.000000"},"blocks":[{"type":"rich_text","block_id":"mv/J","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function accumulator(predicate, x, y)\n  trues = first(x)\n  falses = second(x)\n  if predicate(y)\n    push!(trues, y)\n  else\n    push!(falses, y)\n  end\n  return (trues, falses)\nend\n\ndouble_filter(predicate, iter) = foldl(\n  (x, y) -> accumulator(predicate, x, y),\n  iter,\n  init=([], [])\n)"}]}]}],"thread_ts":"1611783148.459000","parent_user_id":"U6J06TCQ0"},{"client_msg_id":"7670745c-0a71-485d-a8e3-1a879ea279d0","type":"message","text":"Think that'll work?","user":"U019K6Q9N15","ts":"1611784186.460200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JEdLA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Think that'll work?"}]}]}],"thread_ts":"1611783148.459000","parent_user_id":"U6J06TCQ0"},{"client_msg_id":"ad4b7a36-0af8-4046-a1a0-b6186c53f989","type":"message","text":"you can get a mask by doing:\n`mask = predicate.(ary)`\nthen you can get two arrays via:\n```ary[mask]\nary[.~(mask)]```","user":"UH8A351DJ","ts":"1611785575.461000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z0n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can get a mask by doing:\n"},{"type":"text","text":"mask = predicate.(ary)","style":{"code":true}},{"type":"text","text":"\nthen you can get two arrays via:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ary[mask]\nary[.~(mask)]"}]}]}],"thread_ts":"1611783148.459000","parent_user_id":"U6J06TCQ0","reactions":[{"name":"raised_hands","users":["U019K6Q9N15"],"count":1}]}]