[{"client_msg_id":"ba5d8738-0514-4770-bd38-db87a56c654b","type":"message","text":"Is it worth it to use `@inbounds` to squeeze performance in general?","user":"U01MG0TN079","ts":"1614078372.185400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=lODL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it worth it to use `@inbounds` to squeeze performance in general?"}]}]}],"thread_ts":"1614078372.185400","reply_count":7,"reply_users_count":5,"latest_reply":"1614084010.194500","reply_users":["B01J9QZ4SP8","U7HAYKY9X","UH24GRBLL","U017FUJDBT7","U01MG0TN079"],"subscribed":false},{"type":"message","subtype":"bot_message","text":"Can we cross post this publicly to <https://discourse.julialang.org|Discourse> for further visibility? React with :bridge: on the message above to approve. <https://github.com/JuliaCommunity/SlackBridge/blob/main/README.md#faq|More info here>","ts":"1614078374.185500","username":"HelpDeskBot","bot_id":"B01J9QZ4SP8","thread_ts":"1614078372.185400","parent_user_id":"U01MG0TN079"},{"client_msg_id":"888a55d8-0586-48b9-91cb-c7f48c1802ea","type":"message","text":"Depends entirely on the value of performance. In general I would say yes, but only if it's a loop or low-level function, and only if it's either in a performance sensitive package, or a package that could conceivably be used in performance sentitive situations","user":"U7HAYKY9X","ts":"1614079188.187500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DiAkP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Depends entirely on the value of performance. In general I would say yes, but only if it's a loop or low-level function, and only if it's either in a performance sensitive package, or a package that could conceivably be used in performance sentitive situations"}]}]}],"thread_ts":"1614078372.185400","parent_user_id":"U01MG0TN079"},{"client_msg_id":"54c0238b-af1f-4b2e-afca-128385bb5455","type":"message","text":"and if you're 100% sure that the accesses are really always going to be in bounds","user":"UH24GRBLL","ts":"1614079520.187700","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1614079526.000000"},"blocks":[{"type":"rich_text","block_id":"jyZg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and if you're 100% sure that the accesses are really always going to be in bounds"}]}]}],"thread_ts":"1614078372.185400","parent_user_id":"U01MG0TN079","reactions":[{"name":"100","users":["U7HAYKY9X","U017FUJDBT7","U0179G7FG4F"],"count":3},{"name":"heavy_division_sign","users":["U7HAYKY9X"],"count":1}]},{"client_msg_id":"BD2FBBD0-D5A6-4E2B-9527-5702E124A904","type":"message","text":"I can’t give you exact figures off the top of my head, but anecdotally in our use case (simulations using DifferentialEquations) makes a significant difference, probably of the order of 10% time reduction. We do have a lot of for loops accessing arrays though.\n\nAs Valentin said, a caveat is we are confident we are always inbounds so it’s safe to do. When we’ve messed this up it’s definitely caused a lot of a lot of time bug fixing, so just using it everywhere can be a headache sometimes.","user":"U017FUJDBT7","ts":"1614080594.193700","team":"T68168MUP","edited":{"user":"U017FUJDBT7","ts":"1614080723.000000"},"blocks":[{"type":"rich_text","block_id":"I3Wx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can’t give you exact figures off the top of my head, but anecdotally in our use case (simulations using DifferentialEquations) makes a significant difference, probably of the order of 10% time reduction. We do have a lot of for loops accessing arrays though.\n\nAs Valentin said, a caveat is we are confident we are always inbounds so it’s safe to do. When we’ve messed this up it’s definitely caused a lot of a lot of time bug fixing, so just using it everywhere can be a headache sometimes."}]}]}],"thread_ts":"1614078372.185400","parent_user_id":"U01MG0TN079"},{"client_msg_id":"d3fd7a47-424e-439a-9651-1824ec6e0632","type":"message","text":"makes sense, thanks!","user":"U01MG0TN079","ts":"1614081058.194100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vHtZ4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"makes sense, thanks!"}]}]}],"thread_ts":"1614078372.185400","parent_user_id":"U01MG0TN079"},{"client_msg_id":"93426154-d7c8-4d54-b259-a56da3906c25","type":"message","text":"Just repeated the \"biofast\" fastq benchmark with and without boundschecks.\nWith: 1.56 s\nWithout: 1.07 s","user":"U7HAYKY9X","ts":"1614081095.194300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qv5E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just repeated the \"biofast\" fastq benchmark with and without boundschecks.\nWith: 1.56 s\nWithout: 1.07 s"}]}]}],"thread_ts":"1614078372.185400","parent_user_id":"U01MG0TN079"},{"client_msg_id":"256225f3-c1d2-4aca-8901-a7341d268965","type":"message","text":"oh, pretty big difference!","user":"U01MG0TN079","ts":"1614084010.194500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0AI/d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh, pretty big difference!"}]}]}],"thread_ts":"1614078372.185400","parent_user_id":"U01MG0TN079"}]