[{"client_msg_id":"4425eb06-b144-47ed-9865-6a01014046d4","type":"message","text":"I’ve got an issue where multi-threading causes non-deterministic outputs, and I’m not sure how I can debug it. Definitively, removing `Threads.@threads` fixes the problem, so I’m not sure what’s happening","user":"UN97XTLCV","ts":"1610061109.040900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZHlGv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ve got an issue where multi-threading causes non-deterministic outputs, and I’m not sure how I can debug it. Definitively, removing "},{"type":"text","text":"Threads.@threads","style":{"code":true}},{"type":"text","text":" fixes the problem, so I’m not sure what’s happening"}]}]}],"thread_ts":"1610061109.040900","reply_count":11,"reply_users_count":3,"latest_reply":"1610062266.049300","reply_users":["U019K6Q9N15","UN97XTLCV","UDB26738Q"],"subscribed":false},{"client_msg_id":"a0ebc774-8dd9-481c-aeec-ea305edc29f2","type":"message","text":"Let's see a minimally-reproducible example","user":"U019K6Q9N15","ts":"1610061553.041000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B96Kz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's see a minimally-reproducible example"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"c2230bc7-32e3-4dcd-b8e6-a22ed375952e","type":"message","text":"here’s a snippet of what’s failing, not the exact code\n```data = # 2D SubArray\nS = similar(data)\nThreads.@threads for i in axes(data, 1)\n    t = @view data[i:i, :] # single row, maintain 2D\n    ref = @view data[inds, :] # multiple rows\n    out = f(t, ref) # statistical method, returns data similar to `t`\n    S[i:i, :] .= out\nend```","user":"UN97XTLCV","ts":"1610061880.042800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CmXIb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"here’s a snippet of what’s failing, not the exact code\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"data = # 2D SubArray\nS = similar(data)\nThreads.@threads for i in axes(data, 1)\n    t = @view data[i:i, :] # single row, maintain 2D\n    ref = @view data[inds, :] # multiple rows\n    out = f(t, ref) # statistical method, returns data similar to `t`\n    S[i:i, :] .= out\nend"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"56a2efb0-08f5-4716-b9d4-de56aeef3168","type":"message","text":"hard for me to paste runnable code, this is a method in a package so I might have to dig through a couple code-bases to resolve, for right now I just don’t really know how to start debugging","user":"UN97XTLCV","ts":"1610061950.043800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qjy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hard for me to paste runnable code, this is a method in a package so I might have to dig through a couple code-bases to resolve, for right now I just don’t really know how to start debugging"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"5796b75f-57ee-4e3c-beb5-ea86593e0514","type":"message","text":"changing the use of `views` does not change the failed behavior of the multi-threading","user":"UN97XTLCV","ts":"1610061984.044400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SAfm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"changing the use of "},{"type":"text","text":"views","style":{"code":true}},{"type":"text","text":" does not change the failed behavior of the multi-threading"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"6fdb044d-a8eb-446d-a58a-a8a235761dd1","type":"message","text":"and the failed behavior is that the array `S` above is not deterministic when using multithreading (eg a random row will have a different output than when ran serially)","user":"UN97XTLCV","ts":"1610062036.045100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=FpA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and the failed behavior is that the array "},{"type":"text","text":"S","style":{"code":true}},{"type":"text","text":" above is not deterministic when using multithreading (eg a random row will have a different output than when ran serially)"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"749f3403-da53-4325-89b7-0399487aa7b0","type":"message","text":"what's `inds`?","user":"UDB26738Q","ts":"1610062063.045600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SzK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what's "},{"type":"text","text":"inds","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"d78b04ec-1f3b-4082-bdb1-cf09792b65b1","type":"message","text":"vecotr of indices, either a range or array-\n```inds = vcat(1:12, 14:16) ```\nfor example","user":"UN97XTLCV","ts":"1610062141.047000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qLc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"vecotr of indices, either a range or array-\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"inds = vcat(1:12, 14:16) "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"for example"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"73c932e1-2504-4e2f-a642-40edad53982f","type":"message","text":"fixed?","user":"UDB26738Q","ts":"1610062172.047600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0G8z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"fixed?"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"bdd2f44d-b265-49fd-a18f-e00b2048e550","type":"message","text":"changes each iteration, but should be deterministic","user":"UN97XTLCV","ts":"1610062199.048000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tOAd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"changes each iteration, but should be deterministic"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"6586f936-c288-4018-80df-8e88eb7792d0","type":"message","text":"if it helps, this is the method failing: <https://github.com/JuliaHCI/ADI.jl/blob/2b1892c3af84775ba310ba79e200c11a9fd94f52/src/framewise.jl#L30-L49>","user":"UN97XTLCV","ts":"1610062246.049000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9wH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if it helps, this is the method failing: "},{"type":"link","url":"https://github.com/JuliaHCI/ADI.jl/blob/2b1892c3af84775ba310ba79e200c11a9fd94f52/src/framewise.jl#L30-L49"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"},{"client_msg_id":"c8188c98-a122-4f87-bdb1-620fb7136f96","type":"message","text":"here’s how `inds` is calculated <https://github.com/JuliaHCI/ADI.jl/blob/2b1892c3af84775ba310ba79e200c11a9fd94f52/src/framewise.jl#L129-L157>","user":"UN97XTLCV","ts":"1610062266.049300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lMBR6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"here’s how "},{"type":"text","text":"inds","style":{"code":true}},{"type":"text","text":" is calculated "},{"type":"link","url":"https://github.com/JuliaHCI/ADI.jl/blob/2b1892c3af84775ba310ba79e200c11a9fd94f52/src/framewise.jl#L129-L157"}]}]}],"thread_ts":"1610061109.040900","parent_user_id":"UN97XTLCV"}]