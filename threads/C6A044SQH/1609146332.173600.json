[{"client_msg_id":"27be6559-71ea-4d4e-a795-f1d16d6c4e2a","type":"message","text":"Can i think of julia arrays as a list of references , like pythons list ?","user":"UQWRPDJ68","ts":"1609146332.173600","team":"T68168MUP","edited":{"user":"UQWRPDJ68","ts":"1609146338.000000"},"blocks":[{"type":"rich_text","block_id":"qLa4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can i think of julia arrays as a list of references , like pythons list ?"}]}]}],"thread_ts":"1609146332.173600","reply_count":74,"reply_users_count":3,"latest_reply":"1609149127.189100","reply_users":["UH24GRBLL","UQWRPDJ68","UM30MT6RF"],"subscribed":false},{"client_msg_id":"f94e992a-f547-47c6-b5a1-e832434f9131","type":"message","text":"some types are stored inline","user":"UH24GRBLL","ts":"1609146375.173800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vpAnD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"some types are stored inline"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"3705f9ee-7b91-4647-ac6c-a8738fef7285","type":"message","text":"so not necessarily, no","user":"UH24GRBLL","ts":"1609146382.174000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s1J","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so not necessarily, no"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"f7993ca8-19f3-4ff9-87a4-0e6a69a82d62","type":"message","text":"okay","user":"UQWRPDJ68","ts":"1609146386.174200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LxjY7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"fae299c0-2a13-42c9-aff4-4fe781e9b350","type":"message","text":"it shouldn't matter from a julia program point of view","user":"UH24GRBLL","ts":"1609146403.174400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Do7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it shouldn't matter from a julia program point of view"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"9a6aa447-cd59-46fb-a898-596c8aaa9f18","type":"message","text":"by some types you mean immutable types?","user":"UQWRPDJ68","ts":"1609146430.174600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NaTY5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"by some types you mean immutable types?"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"c6fd47f6-bb9a-4fff-8ceb-059663ebb467","type":"message","text":"I'm specifically thinking of `isbits`","user":"UH24GRBLL","ts":"1609146445.174800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"v9vM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm specifically thinking of "},{"type":"text","text":"isbits","style":{"code":true}}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"69b06f20-6891-4d3b-b69f-478eaf4347b0","type":"message","text":"in general though, it's an implementation detail whether there's a reference or it's stored inline","user":"UH24GRBLL","ts":"1609146469.175000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"stMF5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in general though, it's an implementation detail whether there's a reference or it's stored inline"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"7037121a-2f54-4f52-ba71-5309287cc8bd","type":"message","text":"okay","user":"UQWRPDJ68","ts":"1609146483.175200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3WJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"c1264937-eae3-4a1f-ad16-4e2ac272a086","type":"message","text":"also depends on where the array lives, I think","user":"UH24GRBLL","ts":"1609146489.175400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gru28","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also depends on where the array lives, I think"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"68f64f38-4db5-4dfa-aaab-0eae4082eefe","type":"message","text":"is there some deeper reason for these questions or just curiosity?","user":"UH24GRBLL","ts":"1609146512.175600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=MW7z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there some deeper reason for these questions or just curiosity?"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"60a4e292-e682-4d1b-989b-2ce528b1e8a0","type":"message","text":"curiosity mostly , but i would like to have a working knowledge of the \"canonical implementation\" or the inner model of whats going on  , so when in doubt what would happen i can work out what would happen","user":"UQWRPDJ68","ts":"1609146609.175800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FM9Vr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"curiosity mostly , but i would like to have a working knowledge of the \"canonical implementation\" or the inner model of whats going on  , so when in doubt what would happen i can work out what would happen"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"3f0b7784-f4f5-42f5-80b2-b7d9247f70a8","type":"message","text":"I see","user":"UH24GRBLL","ts":"1609146619.176000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3tSsF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"b0022cff-b627-41db-9a5b-0ef0534d68ff","type":"message","text":"there's a lot of stuff in the devdocs, but they're not really conductive to debugging regular julia code","user":"UH24GRBLL","ts":"1609146653.176200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OvJ1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there's a lot of stuff in the devdocs, but they're not really conductive to debugging regular julia code"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"7da00388-fb63-4f64-a27a-6d9e6f733240","type":"message","text":"<https://docs.julialang.org/en/v1/devdocs/reflection/>","user":"UH24GRBLL","ts":"1609146654.176400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fk=u","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://docs.julialang.org/en/v1/devdocs/reflection/"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"058fb370-0647-4960-b4a0-88c36f7defde","type":"message","text":"if there's some specific behaviour that's unintuitive to you, feel free to ask","user":"UH24GRBLL","ts":"1609146674.176600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yyDwn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if there's some specific behaviour that's unintuitive to you, feel free to ask"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"866e498a-783a-49f0-bc53-0a084bd39701","type":"message","text":"so\nwhen i do\n`a=1`\nand then `b=a`\ndo b and a point to the same location in memory ?","user":"UQWRPDJ68","ts":"1609146687.176800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JaUKn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so\nwhen i do\n"},{"type":"text","text":"a=1","style":{"code":true}},{"type":"text","text":"\nand then "},{"type":"text","text":"b=a","style":{"code":true}},{"type":"text","text":"\ndo b and a point to the same location in memory ?"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"c21c2184-076d-4284-b801-55b3e02c1362","type":"message","text":"though again, unless you're dealing with the `unsafe_` API, you're not likely to gain much by knowing what julia does internally","user":"UH24GRBLL","ts":"1609146716.177000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HVs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"though again, unless you're dealing with the "},{"type":"text","text":"unsafe_","style":{"code":true}},{"type":"text","text":" API, you're not likely to gain much by knowing what julia does internally"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"d9e06a7b-6a00-4fba-951a-733ff6d74118","type":"message","text":"`a` and `b` don't point to anything here","user":"UH24GRBLL","ts":"1609146746.177200","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609146753.000000"},"blocks":[{"type":"rich_text","block_id":"9AB2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" don't point to anything here"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"fa5d12d9-b9be-4c3d-ab40-a0cfac024801","type":"message","text":"The equivalent to Python lists would be a Julia array with element type `Any`. If you have an array with concrete element types like `Float64` it behaves more like numpy arrays and everything will be stored inline, so access can be really efficient.","user":"UM30MT6RF","ts":"1609146760.177500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eD42H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The equivalent to Python lists would be a Julia array with element type "},{"type":"text","text":"Any","style":{"code":true}},{"type":"text","text":". If you have an array with concrete element types like "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" it behaves more like numpy arrays and everything will be stored inline, so access can be really efficient."}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"a380a621-56cd-4926-b4b0-7ca3000643c2","type":"message","text":"i see","user":"UQWRPDJ68","ts":"1609146786.177700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BN1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i see"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"24899559-3b3e-49f1-a07e-b52d46c78497","type":"message","text":"in julia, it's not generally useful to think of variables as pointers to some memory","user":"UH24GRBLL","ts":"1609146807.177900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tCZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in julia, it's not generally useful to think of variables as pointers to some memory"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"c6e07673-bc16-4d09-be49-eacd011b94b1","type":"message","text":"what is the \"working model\" in your head when you see a=1 and then b = a","user":"UQWRPDJ68","ts":"1609146856.178100","team":"T68168MUP","edited":{"user":"UQWRPDJ68","ts":"1609146867.000000"},"blocks":[{"type":"rich_text","block_id":"lOQm5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what is the \"working model\" in your head when you see a=1 and then b = a"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"d8fef41e-5a72-463f-87d5-22353663b62e","type":"message","text":"I have an `a` that, when used, is `1` and a `b`, that, when used, is `1`, since I set it equal to whatever value `a` has.","user":"UH24GRBLL","ts":"1609146908.178400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2M7ed","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have an "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" that, when used, is "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" and a "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":", that, when used, is "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":", since I set it equal to whatever value "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" has."}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"1df75e5e-9aeb-45ce-9f32-60ff311211e9","type":"message","text":"okay , is it safe for me to assume immutables will always be copied , a_copy = a","user":"UQWRPDJ68","ts":"1609146957.178600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iNFrb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay , is it safe for me to assume immutables will always be copied , a_copy = a"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"abf0fe6d-9a95-441f-945c-feb31b8dd4a0","type":"message","text":"`a_copy` will be a copy of `a`","user":"UQWRPDJ68","ts":"1609146996.178800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2egV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a_copy","style":{"code":true}},{"type":"text","text":" will be a copy of "},{"type":"text","text":"a","style":{"code":true}}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"7a648ae7-ca81-4258-84fd-cc6116745e40","type":"message","text":"no","user":"UH24GRBLL","ts":"1609147044.179000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"klM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"no"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"6d343602-78a0-4ffe-bf71-e7d1b5cdfeea","type":"message","text":"```julia&gt; struct A; field; end\n\njulia&gt; a = A(1)\nA(1)\n\njulia&gt; isimmutable(a)\ntrue\n\njulia&gt; b = a\nA(1)\n\njulia&gt; a == b\ntrue\n\njulia&gt; a === b\ntrue```","user":"UH24GRBLL","ts":"1609147047.179200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"858","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct A; field; end\n\njulia> a = A(1)\nA(1)\n\njulia> isimmutable(a)\ntrue\n\njulia> b = a\nA(1)\n\njulia> a == b\ntrue\n\njulia> a === b\ntrue"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"2d5fba75-b9bf-4252-80dc-0f7a22425fcc","type":"message","text":"both `a` and `b` will behave the same, since their value is indistinguishable","user":"UH24GRBLL","ts":"1609147095.179400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V2x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"both "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" will behave the same, since their value is indistinguishable"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"88f1a4e3-bc05-43f4-a904-8699104cf43b","type":"message","text":"```julia&gt; a = 1\n1\n\njulia&gt; b = 1\n1\n\njulia&gt; a == b\ntrue\n\njulia&gt; a === b\ntrue\n\njulia&gt; isimmutable(a)\ntrue```","user":"UH24GRBLL","ts":"1609147131.179600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JuM5","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a = 1\n1\n\njulia> b = 1\n1\n\njulia> a == b\ntrue\n\njulia> a === b\ntrue\n\njulia> isimmutable(a)\ntrue"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"283f82ec-7f80-412e-a654-6474ef483f26","type":"message","text":"i guess it doesnt matter when it comes to immutables right ?, but somehow i get an uncomfortable feeling not knowing what actually happens ,\nAre there two locations in memory with `1` written in it or are they the same spot in memory with different \"labels\" a and b","user":"UQWRPDJ68","ts":"1609147176.179800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i+GCl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i guess it doesnt matter when it comes to immutables right ?, but somehow i get an uncomfortable feeling not knowing what actually happens ,\nAre there two locations in memory with "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" written in it or are they the same spot in memory with different \"labels\" a and b"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"7b1f9e3c-a2d5-498a-8a57-c2b9a092610e","type":"message","text":"or am i completely wrong to think of it these two ways","user":"UQWRPDJ68","ts":"1609147188.180000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+W=X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or am i completely wrong to think of it these two ways"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"886969dd-e716-4dcc-9492-521d2d1c46c8","type":"message","text":"they may be copies and they may be the same - if it's not distinguishable from the behaviour of the program, what does it matter?","user":"UH24GRBLL","ts":"1609147215.180200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FFfw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"they may be copies and they may be the same - if it's not distinguishable from the behaviour of the program, what does it matter?"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"cd146a64-d2eb-47ac-884e-dbaccad605fc","type":"message","text":"from my intuition, if it's not necessary to copy, it won't be copied","user":"UH24GRBLL","ts":"1609147235.180400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9dJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"from my intuition, if it's not necessary to copy, it won't be copied"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"f4baf8ab-e97d-4152-b029-ee454c4b1a5d","type":"message","text":"true true","user":"UQWRPDJ68","ts":"1609147245.180600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wGXZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"true true"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"75939bfd-05e1-4d2f-9711-73b789d3e38d","type":"message","text":"okay","user":"UQWRPDJ68","ts":"1609147247.180800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cyRJD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"655df5b1-dd13-44d4-8181-c511dbd1b038","type":"message","text":"thanks for the discussuion","user":"UQWRPDJ68","ts":"1609147299.181000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gclR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks for the discussuion"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"26024c68-5a46-4ed8-992b-79be7c0e0b0d","type":"message","text":"maybe another example:\n\n```julia&gt; mutable struct B; field; end\n\njulia&gt; c = B(1)\nB(1)\n\njulia&gt; d = c\nB(1)\n\njulia&gt; d == c\ntrue\n\njulia&gt; d === c\ntrue\n\njulia&gt; d\nB(1)\n\njulia&gt; c\nB(1)\n\njulia&gt; c.field = 2\n2\n\njulia&gt; d\nB(2)```","user":"UH24GRBLL","ts":"1609147382.181200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iZk6X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe another example:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> mutable struct B; field; end\n\njulia> c = B(1)\nB(1)\n\njulia> d = c\nB(1)\n\njulia> d == c\ntrue\n\njulia> d === c\ntrue\n\njulia> d\nB(1)\n\njulia> c\nB(1)\n\njulia> c.field = 2\n2\n\njulia> d\nB(2)"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"3fd69848-d75c-409d-826c-2c2c6e4dbc3b","type":"message","text":"this time, `B` is `mutable`, but since we've done `d = c`, the two should behave the same, no matter which binding we use.","user":"UH24GRBLL","ts":"1609147419.181400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gSm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this time, "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":" is "},{"type":"text","text":"mutable","style":{"code":true}},{"type":"text","text":", but since we've done "},{"type":"text","text":"d = c","style":{"code":true}},{"type":"text","text":", the two should behave the same, no matter which binding we use."}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"d4b0f305-b5d7-48f7-800e-911948324414","type":"message","text":"thus, when we do `c.field = 2`, we can observe that change in `d`","user":"UH24GRBLL","ts":"1609147432.181600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FFI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thus, when we do "},{"type":"text","text":"c.field = 2","style":{"code":true}},{"type":"text","text":", we can observe that change in "},{"type":"text","text":"d","style":{"code":true}}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"2238f48c-ce2e-4f66-b159-9f72503bcb7c","type":"message","text":"right","user":"UQWRPDJ68","ts":"1609147440.181800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tE+B7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"e2ca22d4-adec-462b-8f85-018303839cd2","type":"message","text":"whether that's done by also setting `d.field = 2` automatically or by `d` pointing to the same memory as `c` is an implementation detail","user":"UH24GRBLL","ts":"1609147462.182000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=9r/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"whether that's done by also setting "},{"type":"text","text":"d.field = 2","style":{"code":true}},{"type":"text","text":" automatically or by "},{"type":"text","text":"d","style":{"code":true}},{"type":"text","text":" pointing to the same memory as "},{"type":"text","text":"c","style":{"code":true}},{"type":"text","text":" is an implementation detail"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"c5b7845a-25e4-4d65-ad7f-f30127c05edf","type":"message","text":"okay","user":"UQWRPDJ68","ts":"1609147478.182200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RQM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"f5d8366c-e850-4d68-b564-a27e84ebcbd1","type":"message","text":"(though it'll never be copied, since that's very wasteful)","user":"UH24GRBLL","ts":"1609147490.182400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609147498.000000"},"blocks":[{"type":"rich_text","block_id":"1dN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(though it'll never be copied, since that's very wasteful)"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"400abc62-6a8b-4f51-b3e3-df275008d2db","type":"message","text":"right right","user":"UQWRPDJ68","ts":"1609147499.182700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HHWX7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right right"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"a3fc6104-c0de-41d1-9618-19604b9ba895","type":"message","text":"if you need to make a complete seperate thing that may behave differently, you can use `deepcopy`","user":"UH24GRBLL","ts":"1609147561.182900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rhs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you need to make a complete seperate thing that may behave differently, you can use "},{"type":"text","text":"deepcopy","style":{"code":true}}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"5b533e9f-be9d-4cbb-a6e7-d932c3a74974","type":"message","text":"```julia&gt; e = deepcopy(c)\nB(2)\n\njulia&gt; c.field = 3\n3\n\njulia&gt; e\nB(2)```","user":"UH24GRBLL","ts":"1609147565.183100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"069","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> e = deepcopy(c)\nB(2)\n\njulia> c.field = 3\n3\n\njulia> e\nB(2)"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"3277db0c-d949-44ff-857a-0e37fe2d8bc7","type":"message","text":"the returned object is guaranteed to be a fully independent object","user":"UH24GRBLL","ts":"1609147639.183300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8FtT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the returned object is guaranteed to be a fully independent object"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"c1204524-aecd-4616-9450-940f1eab46b1","type":"message","text":"okay","user":"UQWRPDJ68","ts":"1609147650.183500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zPKK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"7b9a5fae-12dd-4f5f-a2f1-77d0f2d611c6","type":"message","text":"does that help?","user":"UH24GRBLL","ts":"1609147655.183700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YAXYa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does that help?"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"71227635-222b-40c8-bae4-b9ecdee8419c","type":"message","text":"yes","user":"UQWRPDJ68","ts":"1609147660.183900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nvJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"0efb60c4-f21e-43dc-b36b-d4e2b97f6c6f","type":"message","text":"just to clarify , immutables dont exactly have a \"location in memory\"","user":"UQWRPDJ68","ts":"1609147684.184100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pDc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"just to clarify , immutables dont exactly have a \"location in memory\""}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"6a7cffbe-c892-4e91-b19b-11f7b816f0d6","type":"message","text":"?","user":"UQWRPDJ68","ts":"1609147687.184300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cv+B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"?"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"f1bc6a22-539d-4299-a4af-fc3740edf7a9","type":"message","text":"to summarize: if you do something like `a = b`, you can expect `a` and `b` to behave the same in the scope that expression was in. (until you have some other `a = c`, for example - at that point, `a` and `c` would refer to the same thing and `b` would refer to something else)","user":"UH24GRBLL","ts":"1609147746.184500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dy+t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to summarize: if you do something like "},{"type":"text","text":"a = b","style":{"code":true}},{"type":"text","text":", you can expect "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" to behave the same in the scope that expression was in. (until you have some other "},{"type":"text","text":"a = c","style":{"code":true}},{"type":"text","text":", for example - at that point, "},{"type":"text","text":"a","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"c","style":{"code":true}},{"type":"text","text":" would refer to the same thing and "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" would refer to something else)"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"d380cdea-ee5c-4510-9f8a-2ec7578d95cd","type":"message","text":"that helps","user":"UQWRPDJ68","ts":"1609147774.184700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yVNu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that helps"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"2c87f7dc-3422-402d-942d-240b4bbb823c","type":"message","text":"Well, in practice they do of course, but you can't rely on any specific location being persistent across function calls? They may be put on the stack, only live on the stack, parts of things may move from the heap to the stack during some inner calls etc.","user":"UH24GRBLL","ts":"1609147810.184900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WSk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, in practice they do of course, but you can't rely on any specific location being persistent across function calls? They may be put on the stack, only live on the stack, parts of things may move from the heap to the stack during some inner calls etc."}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"3b0c9d88-b9c1-4d9f-b9e4-c4e36bc7693a","type":"message","text":"okay","user":"UQWRPDJ68","ts":"1609147821.185100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6W=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"67f8ece7-3a0b-411a-9b7b-e60a747882fc","type":"message","text":"another question .. regarding imutable structs with mutable fields","user":"UQWRPDJ68","ts":"1609147835.185300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8GuS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"another question .. regarding imutable structs with mutable fields"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"a88182cc-b11c-4458-ae36-13bac0411134","type":"message","text":"the names are what give meaning to the data - how it's stored is irrelevant to julia semantics (well, mostly - you need to know about memory layouts if you want to truly optimize for performance, but even thenyou don't go for pointer fiddling as the common tactics for optimization)","user":"UH24GRBLL","ts":"1609147871.185500","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609147898.000000"},"blocks":[{"type":"rich_text","block_id":"g16fQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the names are what give meaning to the data - how it's stored is irrelevant to julia semantics (well, mostly - you need to know about memory layouts if you want to truly optimize for performance, but even thenyou don't go for pointer fiddling as the common tactics for optimization)"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"7a5ee064-00a6-4c71-bfeb-0ce76fbef08d","type":"message","text":"```julia&gt; struct A\n       field\n       end\n\njulia&gt; a1 = A([1,2,3])\nA([1, 2, 3])\n\njulia&gt; a2 = a1\nA([1, 2, 3])\n\njulia&gt; a2.field[1] = 1000\n1000\n\njulia&gt; a1.field\n3-element Array{Int64,1}:\n 1000\n    2\n    3```","user":"UQWRPDJ68","ts":"1609147920.185800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jj3D","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> struct A\n       field\n       end\n\njulia> a1 = A([1,2,3])\nA([1, 2, 3])\n\njulia> a2 = a1\nA([1, 2, 3])\n\njulia> a2.field[1] = 1000\n1000\n\njulia> a1.field\n3-element Array{Int64,1}:\n 1000\n    2\n    3"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"c11ca618-5040-4210-b9f7-fae0e9a11730","type":"message","text":"does this go against the \"immutability\" of A?","user":"UQWRPDJ68","ts":"1609147962.186000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yYT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"does this go against the \"immutability\" of A?"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"2ad6b752-c08f-4d54-8468-ebe614079404","type":"message","text":"Using variables is always completely free. Later stages of compilation use a normalized SSA form anyways.","user":"UM30MT6RF","ts":"1609147974.186200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TXLT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Using variables is always completely free. Later stages of compilation use a normalized SSA form anyways."}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68","reactions":[{"name":"point_up_2","users":["UH24GRBLL"],"count":1},{"name":"+1","users":["UQWRPDJ68"],"count":1}]},{"client_msg_id":"b1d0117c-1089-402a-a88b-4da90a25b34e","type":"message","text":"While `a1.field` itself is immutable (i.e., you can't assign a _new_ array to `a1.field`), the array it's referring to is still mutable","user":"UH24GRBLL","ts":"1609147975.186400","team":"T68168MUP","edited":{"user":"UH24GRBLL","ts":"1609148006.000000"},"blocks":[{"type":"rich_text","block_id":"nG3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"While "},{"type":"text","text":"a1.field","style":{"code":true}},{"type":"text","text":" itself is immutable (i.e., you can't assign a "},{"type":"text","text":"new","style":{"italic":true}},{"type":"text","text":" array to "},{"type":"text","text":"a1.field","style":{"code":true}},{"type":"text","text":"), the array it's referring to is still mutable"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"f9fb5ebf-a990-4894-9400-59ae0b1cfec7","type":"message","text":"ah alright ,","user":"UQWRPDJ68","ts":"1609148013.186800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nfc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah alright ,"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"a17704de-1a91-49a7-9e55-f783760cfbba","type":"message","text":"a1.field = [1000,2,3] will bug out","user":"UQWRPDJ68","ts":"1609148024.187000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"99iEs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"a1.field = [1000,2,3] will bug out"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"607b7a16-c329-4f38-8587-33b351ac5929","type":"message","text":"```julia&gt; a1 = A([1 2 3])\nA([1 2 3])\n\njulia&gt; isimmutable(a1)\ntrue\n\njulia&gt; isimmutable(a1.field)\nfalse\n\njulia&gt; a1.field = [1 2 3 4]\nERROR: setfield! immutable struct of type A cannot be changed\nStacktrace:\n [1] setproperty!(::A, ::Symbol, ::Array{Int64,2}) at ./Base.jl:34\n [2] top-level scope at REPL[31]:1```","user":"UH24GRBLL","ts":"1609148040.187200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zk+","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a1 = A([1 2 3])\nA([1 2 3])\n\njulia> isimmutable(a1)\ntrue\n\njulia> isimmutable(a1.field)\nfalse\n\njulia> a1.field = [1 2 3 4]\nERROR: setfield! immutable struct of type A cannot be changed\nStacktrace:\n [1] setproperty!(::A, ::Symbol, ::Array{Int64,2}) at ./Base.jl:34\n [2] top-level scope at REPL[31]:1"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"e8af2231-b223-4473-8d46-dbfc3a3c79fc","type":"message","text":"right","user":"UQWRPDJ68","ts":"1609148041.187400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"isj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"9e2d2ff0-930a-49ce-b180-4b7491013610","type":"message","text":"okay okay","user":"UQWRPDJ68","ts":"1609148048.187600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ndKh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay okay"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"530aece1-9055-499a-8b4e-3d8aa4cc826e","type":"message","text":"if you want to have a mutable field in an immutable struct, either put it in a `RefValue` or use an array","user":"UH24GRBLL","ts":"1609148075.187800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bFH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you want to have a mutable field in an immutable struct, either put it in a "},{"type":"text","text":"RefValue","style":{"code":true}},{"type":"text","text":" or use an array"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"3be15ec0-329f-4941-90c8-5bbf95737727","type":"message","text":"`RefValue` guarantees to be only a single element, which is beneficial if you only need to store a single element","user":"UH24GRBLL","ts":"1609148097.188000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xGV5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"RefValue","style":{"code":true}},{"type":"text","text":" guarantees to be only a single element, which is beneficial if you only need to store a single element"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"f9d685c7-f016-4a49-a02a-5229bdceb747","type":"message","text":"okay","user":"UQWRPDJ68","ts":"1609148114.188200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JDp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"dfb38a82-dca4-4464-8004-a7c64aecb50f","type":"message","text":"```julia&gt; a2 = A(Ref(1))\nA(Base.RefValue{Int64}(1))\n\njulia&gt; a2.field[] = 3\n3\n\njulia&gt; a2\nA(Base.RefValue{Int64}(3))```","user":"UH24GRBLL","ts":"1609148143.188400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pKa","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> a2 = A(Ref(1))\nA(Base.RefValue{Int64}(1))\n\njulia> a2.field[] = 3\n3\n\njulia> a2\nA(Base.RefValue{Int64}(3))"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"f0559ff4-1fa0-44b5-967d-3bd972cdae78","type":"message","text":"right","user":"UQWRPDJ68","ts":"1609148205.188600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A1=N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"e328e3e8-3f43-40be-9229-57e831522bc5","type":"message","text":"`Ref` is the constructor, `RefValue{T} where T` is the type","user":"UH24GRBLL","ts":"1609148258.188900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"85k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ref","style":{"code":true}},{"type":"text","text":" is the constructor, "},{"type":"text","text":"RefValue{T} where T","style":{"code":true}},{"type":"text","text":" is the type"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"},{"client_msg_id":"e21d02a4-964a-48ec-9c4c-04c130a66409","type":"message","text":"thanks <@UH24GRBLL> and <@UM30MT6RF>","user":"UQWRPDJ68","ts":"1609149127.189100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RN8zt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks "},{"type":"user","user_id":"UH24GRBLL"},{"type":"text","text":" and "},{"type":"user","user_id":"UM30MT6RF"}]}]}],"thread_ts":"1609146332.173600","parent_user_id":"UQWRPDJ68"}]