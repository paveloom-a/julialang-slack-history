[{"client_msg_id":"d13b88f1-82bb-4874-a07a-47846a1671f3","type":"message","text":"Is there a way to intersect a bunch of linestrings and return a new collection of linestrings with an attribute of # of intersections for each new feature/geometry? I figure that GIS in Julia isn't quite that far along in development, but wanted to check just in case!","user":"U011NV8FNF7","ts":"1609180541.152600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d16","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a way to intersect a bunch of linestrings and return a new collection of linestrings with an attribute of # of intersections for each new feature/geometry? I figure that GIS in Julia isn't quite that far along in development, but wanted to check just in case!"}]}]}],"thread_ts":"1609180541.152600","reply_count":6,"reply_users_count":3,"latest_reply":"1609187823.153900","reply_users":["UA3UH56HL","U011NV8FNF7","U88813859"],"subscribed":false},{"client_msg_id":"36d43298-867e-4ce0-938d-642ce5556c71","type":"message","text":"In Meshes.jl I have added robust methods for intersection of line segments in 2D space. These methods take two segments and return a point, a line segment or nothing. In order to achieve your final goal, the next step would consist of taking this core algorithm and applying it to the collection of line segments that make the line strings (we call line strings Chain in Meshes.jl because line string is a jargon in GIS that is not present in computational geometry). The naive algorithm for intersection is O(n^2) where n is the number of constituent segments but I am planning to implement a O(n * logn) algorithm when I find time. The work that is happening in Meshes.jl will hopefully pay off in the long term. It is already useful as a starter code in case you want to contribute the intersection of Chain objects for example.","user":"UA3UH56HL","ts":"1609181126.152700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9xy4p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In Meshes.jl I have added robust methods for intersection of line segments in 2D space. These methods take two segments and return a point, a line segment or nothing. In order to achieve your final goal, the next step would consist of taking this core algorithm and applying it to the collection of line segments that make the line strings (we call line strings Chain in Meshes.jl because line string is a jargon in GIS that is not present in computational geometry). The naive algorithm for intersection is O(n^2) where n is the number of constituent segments but I am planning to implement a O(n * logn) algorithm when I find time. The work that is happening in Meshes.jl will hopefully pay off in the long term. It is already useful as a starter code in case you want to contribute the intersection of Chain objects for example."}]}]}],"thread_ts":"1609180541.152600","parent_user_id":"U011NV8FNF7"},{"client_msg_id":"4e5192d0-1288-4533-a274-df34d9f3fa44","type":"message","text":"Oh great to know, thanks! Would it be relatively easy to convert between ArchGDAL.IGeometry to types suited for Meshes.jl functions?","user":"U011NV8FNF7","ts":"1609181458.152900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NPg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh great to know, thanks! Would it be relatively easy to convert between ArchGDAL.IGeometry to types suited for Meshes.jl functions?"}]}]}],"thread_ts":"1609180541.152600","parent_user_id":"U011NV8FNF7"},{"client_msg_id":"e2bd676f-50e0-4a2c-b9db-0ab3ed4c8188","type":"message","text":"Here is the core algorithm which is based on the notion of winding numbers: <https://github.com/JuliaGeometry/Meshes.jl/blob/832074ebd415c3ac2651bd8f36a2a48207f9634c/src/polytopes/segment.jl#L47-L142>\n\nAnd here is an example of usage in the test suite: <https://github.com/JuliaGeometry/Meshes.jl/blob/832074ebd415c3ac2651bd8f36a2a48207f9634c/test/polytopes.jl#L2-L39>\n\nIf you would like to continue the discussion, please start a thread in the Zulip <#C9XBLUCVB|geo> stream so that the content is not erased from history :slightly_smiling_face:","user":"UA3UH56HL","ts":"1609181471.153100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PR1XV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here is the core algorithm which is based on the notion of winding numbers: "},{"type":"link","url":"https://github.com/JuliaGeometry/Meshes.jl/blob/832074ebd415c3ac2651bd8f36a2a48207f9634c/src/polytopes/segment.jl#L47-L142"},{"type":"text","text":"\n\nAnd here is an example of usage in the test suite: "},{"type":"link","url":"https://github.com/JuliaGeometry/Meshes.jl/blob/832074ebd415c3ac2651bd8f36a2a48207f9634c/test/polytopes.jl#L2-L39"},{"type":"text","text":"\n\nIf you would like to continue the discussion, please start a thread in the Zulip "},{"type":"channel","channel_id":"C9XBLUCVB"},{"type":"text","text":" stream so that the content is not erased from history "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1609180541.152600","parent_user_id":"U011NV8FNF7","reactions":[{"name":"+1::skin-tone-2","users":["U011NV8FNF7"],"count":1}]},{"client_msg_id":"ecd029f4-f42f-4701-91a3-10158c21e144","type":"message","text":"I'd be happy to try to increase interop with other packages in the GIS universe. Currently I am trying to get the core geometric concepts and algorithms right first, and then people can evaluate if a transition from GeometryBasics.jl to Meshes.jl makes sense.","user":"UA3UH56HL","ts":"1609181632.153400","team":"T68168MUP","edited":{"user":"UA3UH56HL","ts":"1609181910.000000"},"blocks":[{"type":"rich_text","block_id":"1czL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd be happy to try to increase interop with other packages in the GIS universe. Currently I am trying to get the core geometric concepts and algorithms right first, and then people can evaluate if a transition from GeometryBasics.jl to Meshes.jl makes sense."}]}]}],"thread_ts":"1609180541.152600","parent_user_id":"U011NV8FNF7"},{"client_msg_id":"8261d46c-03cd-4363-85a6-4f779931e476","type":"message","text":"Sounds good! Thanks","user":"U011NV8FNF7","ts":"1609181688.153600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SUEiY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sounds good! Thanks"}]}]}],"thread_ts":"1609180541.152600","parent_user_id":"U011NV8FNF7"},{"client_msg_id":"4c1a1b48-3c78-4e85-b650-6a687a074a6c","type":"message","text":"Interop should be better when GeoInterface becomes trait based (PR needs some work). And ArchGDAL should be able to do this, via GeoDataFrames at least. You're doing an mapreduce, in the sense, you map an intersection for each row and then reduce (groupby) each unique row? So existing tools in the Table space should work.","user":"U88813859","ts":"1609187823.153900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3XUbf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interop should be better when GeoInterface becomes trait based (PR needs some work). And ArchGDAL should be able to do this, via GeoDataFrames at least. You're doing an mapreduce, in the sense, you map an intersection for each row and then reduce (groupby) each unique row? So existing tools in the Table space should work."}]}]}],"thread_ts":"1609180541.152600","parent_user_id":"U011NV8FNF7"}]