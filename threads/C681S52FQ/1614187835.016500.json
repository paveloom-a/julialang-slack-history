[{"client_msg_id":"f0dfd861-113c-4cc9-883d-f2537eca96f5","type":"message","text":"Hey folks, and perhaps <@UJ7DVTVQ8> might be the right person to ask. Does anyone know if the optimization libraries in Julia are fully differentiable? So say I have a linear program--which is not differentiable. But then I read about an approach to smoothing the solution to a linear program, which would make it differentiable. So i was trying to figure out how to implement something like this. I can write the smoother, but I am am not sure about what else needs to be setup in a library to allow for differentiating though that library? Sorry, I am not sure if I am phrasing these things correct.","user":"UDDSTBX19","ts":"1614187835.016500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Eg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey folks, and perhaps "},{"type":"user","user_id":"UJ7DVTVQ8"},{"type":"text","text":" might be the right person to ask. Does anyone know if the optimization libraries in Julia are fully differentiable? So say I have a linear program--which is not differentiable. But then I read about an approach to smoothing the solution to a linear program, which would make it differentiable. So i was trying to figure out how to implement something like this. I can write the smoother, but I am am not sure about what else needs to be setup in a library to allow for differentiating though that library? Sorry, I am not sure if I am phrasing these things correct."}]}]}],"thread_ts":"1614187835.016500","reply_count":15,"reply_users_count":4,"latest_reply":"1614190453.019400","reply_users":["UCT7E536E","UJ7DVTVQ8","UDDSTBX19","UKG4WF8PJ"],"subscribed":false},{"client_msg_id":"aa8af418-bc83-424a-a9f6-5483a5ab40e0","type":"message","text":"I got a question about Zygote compatibility for Tulip a few weeks ago: <https://github.com/ds4dm/Tulip.jl/issues/78>\n\nOne package you may be interested in is <https://github.com/jump-dev/DiffOpt.jl>","user":"UCT7E536E","ts":"1614187961.016600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YdC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I got a question about Zygote compatibility for Tulip a few weeks ago: "},{"type":"link","url":"https://github.com/ds4dm/Tulip.jl/issues/78"},{"type":"text","text":"\n\nOne package you may be interested in is "},{"type":"link","url":"https://github.com/jump-dev/DiffOpt.jl"}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"2285509e-bc3b-4d50-8da2-d2c179059556","type":"message","text":"Broadly speaking, there are ways to differentiate through convex optimization problems, but I don't know which are implemented and where.","user":"UCT7E536E","ts":"1614187992.016800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mrW4+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Broadly speaking, there are ways to differentiate through convex optimization problems, but I don't know which are implemented and where."}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"45aa86d8-2f32-4996-b94e-187359d9c8b2","type":"message","text":"I'm afraid I'm not the right person to answer the question in general, but linear programs can indeed be smoothed, the sinkhorn algorithm is an example of an algorithm solving a linear program that has been smoothed with entropic regularization. The sinkhorn algorithm also natively calculates the gradients of the inputs as parts of the calculation, so it's straightforward to differentiate through.\n\nThere is a discussion in an issue or PR to NLsolvers or something like that as well, about differentiating through the solution to a nonlinear system of equations","user":"UJ7DVTVQ8","ts":"1614188122.017000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6aa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm afraid I'm not the right person to answer the question in general, but linear programs can indeed be smoothed, the sinkhorn algorithm is an example of an algorithm solving a linear program that has been smoothed with entropic regularization. The sinkhorn algorithm also natively calculates the gradients of the inputs as parts of the calculation, so it's straightforward to differentiate through.\n\nThere is a discussion in an issue or PR to NLsolvers or something like that as well, about differentiating through the solution to a nonlinear system of equations"}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"11e483dc-83b1-4d66-8b6f-a85655dc519e","type":"message","text":"<@UCT7E536E> Oh thanks. I had not seen that. Thanks for pointing it out.","user":"UDDSTBX19","ts":"1614188209.017200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PlTD4","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UCT7E536E"},{"type":"text","text":" Oh thanks. I had not seen that. Thanks for pointing it out."}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"a5ad8d0d-0f13-4dd7-8f2e-44e6ce0e086f","type":"message","text":"<https://github.com/JuliaNLSolvers/NLsolve.jl/issues/205|https://github.com/JuliaNLSolvers/NLsolve.jl/issues/205>","user":"UJ7DVTVQ8","ts":"1614188230.017400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rQag4","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaNLSolvers/NLsolve.jl/issues/205","text":"https://github.com/JuliaNLSolvers/NLsolve.jl/issues/205"}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"9428d18a-c866-497c-a8b7-4a1bc35a5eb2","type":"message","text":"Wow, diffopt seems very useful :heart_eyes:","user":"UJ7DVTVQ8","ts":"1614188292.017600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6hKfJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Wow, diffopt seems very useful "},{"type":"emoji","name":"heart_eyes"}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"678a429f-6acc-45fe-945d-2f78f6212d11","type":"message","text":"<@UJ7DVTVQ8> Yeah, this sounds like a really interesting thing. Like in the Julia ecosystem we hear a lot about differentiable programming with respect to ODEs and PDEs, but not as much with respect to optimization. But when I search arxiv for papers there are a lot about differentiable programming applied to optimization. And that makes sense since Bertsekas and Tsitsilkis talked about that back in 1996 or something.","user":"UDDSTBX19","ts":"1614188358.017800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"equ+A","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UJ7DVTVQ8"},{"type":"text","text":" Yeah, this sounds like a really interesting thing. Like in the Julia ecosystem we hear a lot about differentiable programming with respect to ODEs and PDEs, but not as much with respect to optimization. But when I search arxiv for papers there are a lot about differentiable programming applied to optimization. And that makes sense since Bertsekas and Tsitsilkis talked about that back in 1996 or something."}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"a08eca29-80ed-4296-b22f-a1c27bd59384","type":"message","text":"A lot of libraries talk about being fully differentiable, but I want to figure out how that is implemented :slightly_smiling_face:.","user":"UDDSTBX19","ts":"1614188430.018000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O4F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A lot of libraries talk about being fully differentiable, but I want to figure out how that is implemented "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"."}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"989df2a2-4644-4e3a-8c61-f844ab6e1441","type":"message","text":"<@UCT7E536E> Oh yeah, now that I am reading through DiffOpt, it looks really nice. I have to see how it works, but thanks for turning me on to that :slightly_smiling_face:.","user":"UDDSTBX19","ts":"1614188648.018200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XfpQ","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UCT7E536E"},{"type":"text","text":" Oh yeah, now that I am reading through DiffOpt, it looks really nice. I have to see how it works, but thanks for turning me on to that "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"."}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"9b8948ec-99b3-4589-a16f-41f64eca6a7b","type":"message","text":"My current understanding is that, on the one hand, there are mathematically-well-understood ways to differentiate through LPs &amp; convex programs. The implementation is not as mature as the solvers themselves though.\nOn the other hand, automatic differentiation libraries will often fail against \"classical\" optimization solvers. Typically because of non-supported operations (like in-place modification of a vector), and lots of try-catch &amp; edge-case management. Not to mention all the modeling &amp; API layers (like adding constraints, modifying coefficients, presolve, etc...)","user":"UCT7E536E","ts":"1614188661.018400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=+Ed","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My current understanding is that, on the one hand, there are mathematically-well-understood ways to differentiate through LPs & convex programs. The implementation is not as mature as the solvers themselves though.\nOn the other hand, automatic differentiation libraries will often fail against \"classical\" optimization solvers. Typically because of non-supported operations (like in-place modification of a vector), and lots of try-catch & edge-case management. Not to mention all the modeling & API layers (like adding constraints, modifying coefficients, presolve, etc...)"}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"f740a8b2-9dec-4cec-8281-2ece9bb88923","type":"message","text":"<@UCT7E536E> Okay very interesting. So seems like an interesting area that needs more support. I am still getting up to speed on some of these methods, but it definitely seems like an interesting area. I can just start small to understand how it works, and then build up.","user":"UDDSTBX19","ts":"1614189443.018600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gl7r","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UCT7E536E"},{"type":"text","text":" Okay very interesting. So seems like an interesting area that needs more support. I am still getting up to speed on some of these methods, but it definitely seems like an interesting area. I can just start small to understand how it works, and then build up."}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"f4fdc54c-d132-49f5-b09b-de51450b7c82","type":"message","text":"The most mature library that I'm aware of is <https://github.com/cvxgrp/cvxpylayers>\nIt's based on the \"mathematical\" approach, i.e., they solve the problem, get some low-level information at the solution and differentiate based on that. It's in python because, AFAIK, the prime audience is the ML community","user":"UCT7E536E","ts":"1614189639.018800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4KW2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The most mature library that I'm aware of is "},{"type":"link","url":"https://github.com/cvxgrp/cvxpylayers"},{"type":"text","text":"\nIt's based on the \"mathematical\" approach, i.e., they solve the problem, get some low-level information at the solution and differentiate based on that. It's in python because, AFAIK, the prime audience is the ML community"}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"e58a406f-9c5b-443b-af92-699d7bed0b50","type":"message","text":"<@UCT7E536E> well heck, we can't let the python folks get ahead of us--especially in the differentiable programming game :slightly_smiling_face:.","user":"UDDSTBX19","ts":"1614189743.019000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mwf","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UCT7E536E"},{"type":"text","text":" well heck, we can't let the python folks get ahead of us--especially in the differentiable programming game "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"."}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"8a43b627-bc38-4815-bc5f-95fa38b28d4d","type":"message","text":"There is a rule for the differential of an optimization","user":"UKG4WF8PJ","ts":"1614190128.019200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qWe4=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is a rule for the differential of an optimization"}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"},{"client_msg_id":"377d3fa0-9a25-492b-a1b3-64300222bf90","type":"message","text":"<@UKG4WF8PJ> thanks for chiming in. Can you elaborate a bit. Were you thinking about a specific problem?","user":"UDDSTBX19","ts":"1614190453.019400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IQujo","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UKG4WF8PJ"},{"type":"text","text":" thanks for chiming in. Can you elaborate a bit. Were you thinking about a specific problem?"}]}]}],"thread_ts":"1614187835.016500","parent_user_id":"UDDSTBX19"}]