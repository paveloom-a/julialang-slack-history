[{"client_msg_id":"2234cb4e-2ff1-4040-a1e8-0dd0664f25ab","type":"message","text":"To be precise, I have a 1D function `y(x)` (say `y(x) = cos(x)` and I want the smallest curve that is (weakly) above every point of `y`","user":"U91Q3595Y","ts":"1615765690.091600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"78Bok","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To be precise, I have a 1D function "},{"type":"text","text":"y(x)","style":{"code":true}},{"type":"text","text":" (say "},{"type":"text","text":"y(x) = cos(x)","style":{"code":true}},{"type":"text","text":" and I want the smallest curve that is (weakly) above every point of "},{"type":"text","text":"y","style":{"code":true}}]}]}],"thread_ts":"1615765690.091600","reply_count":6,"reply_users_count":4,"latest_reply":"1616085691.010400","reply_users":["UKG4WF8PJ","U91Q3595Y","U67G3QRJM","U9Z3H4H5F"],"is_locked":false,"subscribed":false},{"client_msg_id":"68cb0b97-0ac5-4283-a71b-9ea1cef80422","type":"message","text":"Sounds like what EAGO.jl does, check this <https://psorlab.github.io/EAGO.jl/dev/McCormick/usage/|https://psorlab.github.io/EAGO.jl/dev/McCormick/usage/>","user":"UKG4WF8PJ","ts":"1615767678.091700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AqBL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sounds like what EAGO.jl does, check this "},{"type":"link","url":"https://psorlab.github.io/EAGO.jl/dev/McCormick/usage/","text":"https://psorlab.github.io/EAGO.jl/dev/McCormick/usage/"}]}]}],"thread_ts":"1615765690.091600","parent_user_id":"U91Q3595Y"},{"client_msg_id":"58650778-d850-4f7b-ba59-3843ec1257f3","type":"message","text":"I don't think this is quite it because there's not an explicit requirement for the relaxation to be minimal :disappointed:","user":"U91Q3595Y","ts":"1615816220.094000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HEk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think this is quite it because there's not an explicit requirement for the relaxation to be minimal "},{"type":"emoji","name":"disappointed"}]}]}],"thread_ts":"1615765690.091600","parent_user_id":"U91Q3595Y"},{"client_msg_id":"46a3952e-9888-458f-ad2e-3965e6afaf48","type":"message","text":"I think you need to find the stationary points and then take the convex hull of those?","user":"U67G3QRJM","ts":"1615819989.095000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7yLDO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you need to find the stationary points and then take the convex hull of those?"}]}]}],"thread_ts":"1615765690.091600","parent_user_id":"U91Q3595Y"},{"client_msg_id":"0e659c98-f68c-4d7c-aae8-991b894ff334","type":"message","text":"You can find the stationary points eg using IntervalRootFinding.jl.","user":"U67G3QRJM","ts":"1615820033.095200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mQm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can find the stationary points eg using IntervalRootFinding.jl."}]}]}],"thread_ts":"1615765690.091600","parent_user_id":"U91Q3595Y"},{"client_msg_id":"95f389f4-d5ba-4d2d-821f-8ac61da51f36","type":"message","text":"Something like that might work -- I'll have to think a bit. Thanks for the tip!","user":"U91Q3595Y","ts":"1615823997.096400","team":"T68168MUP","edited":{"user":"U91Q3595Y","ts":"1615824012.000000"},"blocks":[{"type":"rich_text","block_id":"ySgZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Something like that might work -- I'll have to think a bit. Thanks for the tip!"}]}]}],"thread_ts":"1615765690.091600","parent_user_id":"U91Q3595Y","reactions":[{"name":"+1","users":["U67G3QRJM","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"eb7e419d-3dc1-41ad-bdb4-bf443934e21b","type":"message","text":"Copying the reply from another thread: the following link gives an example of computing  a concave hull and a convex hull in Julia: <https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb>","user":"U9Z3H4H5F","ts":"1616085691.010400","team":"T68168MUP","edited":{"user":"U9Z3H4H5F","ts":"1616085708.000000"},"attachments":[{"title":"Notebook on nbviewer","title_link":"https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb","text":"Check out this Jupyter notebook!","fallback":"Notebook on nbviewer","from_url":"https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb","service_icon":"https://nbviewer.jupyter.org/static/ico/apple-touch-icon-144-precomposed.png","service_name":"nbviewer.jupyter.org","id":1,"original_url":"https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb"}],"blocks":[{"type":"rich_text","block_id":"e=Q6F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Copying the reply from another thread: the following link gives an example of computing  a concave hull and a convex hull in Julia: "},{"type":"link","url":"https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb"}]}]}],"thread_ts":"1615765690.091600","parent_user_id":"U91Q3595Y","reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]}]