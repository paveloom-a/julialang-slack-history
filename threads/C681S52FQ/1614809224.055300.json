[{"client_msg_id":"a87b6708-1e31-4bbb-ae5e-969dface2fe3","type":"message","text":"Is there a Julia package that allows exploiting the function space structure of the problem (using the right inner products, instead of Euclidian l^2)?","user":"UFMH09DAR","ts":"1614809224.055300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r4ts","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a Julia package that allows exploiting the function space structure of the problem (using the right inner products, instead of Euclidian l^2)?"}]}]}],"thread_ts":"1614809224.055300","reply_count":8,"reply_users_count":4,"latest_reply":"1614854603.062000","reply_users":["UCT7E536E","UFMH09DAR","U9AHT3YM7","UPJ6Q2SQY"],"subscribed":false},{"client_msg_id":"69236648-2351-4cd1-a264-c4f95eb7ab45","type":"message","text":"What do you mean by that?","user":"UCT7E536E","ts":"1614809944.055400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xj=Vc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean by that?"}]}]}],"thread_ts":"1614809224.055300","parent_user_id":"UFMH09DAR"},{"client_msg_id":"79dd01dd-9b15-478f-bab7-435a033b0fb6","type":"message","text":"If we want to minimize the functional J : ℝⁿ -&gt; ℝ, we can use steepest descent x_new = x_old - stepsize * ∇J(x_old). ∇J(x_old) ∈ ℝⁿ is the gradient of J.\nNow if we have minimization of J: V -&gt; ℝ, where V is a Hilbert Space, the analogue of steepest descent is Fréchet derivative J' that lives in the dual of V and we need a Riesz map R: V* -&gt; V, then the minimization algorithm is x_new = x_old - stepsize*R ( J' (x_old) ). Without the Riesz map number of iterations required for convergence blows up. That's usually considered in PDE-constrained optimization or preconditioning of PDEs for Krylov methods.","user":"UFMH09DAR","ts":"1614811887.055600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1MTWy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If we want to minimize the functional J : ℝⁿ -> ℝ, we can use steepest descent x_new = x_old - stepsize * ∇J(x_old). ∇J(x_old) ∈ ℝⁿ is the gradient of J.\nNow if we have minimization of J: V -> ℝ, where V is a Hilbert Space, the analogue of steepest descent is Fréchet derivative J' that lives in the dual of V and we need a Riesz map R: V* -> V, then the minimization algorithm is x_new = x_old - stepsize*R ( J' (x_old) ). Without the Riesz map number of iterations required for convergence blows up. That's usually considered in PDE-constrained optimization or preconditioning of PDEs for Krylov methods."}]}]}],"thread_ts":"1614809224.055300","parent_user_id":"UFMH09DAR","reactions":[{"name":"today-i-learned","users":["U0138UTB7A4"],"count":1},{"name":"astonished","users":["U0138UTB7A4"],"count":1}]},{"client_msg_id":"963d8b69-29b0-40eb-9af1-8e098fed921f","type":"message","text":"I don't know what to answer to that :slightly_smiling_face:","user":"UCT7E536E","ts":"1614816301.059400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k5AO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know what to answer to that "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1614809224.055300","parent_user_id":"UFMH09DAR"},{"client_msg_id":"e6032410-d8a4-40fc-bfe4-2f33a22e7a75","type":"message","text":"Manopt.jl + FunManifolds.jl should be relatively close to what you want to do here","user":"U9AHT3YM7","ts":"1614853735.061200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kNYj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Manopt.jl + FunManifolds.jl should be relatively close to what you want to do here"}]}]}],"thread_ts":"1614809224.055300","parent_user_id":"UFMH09DAR"},{"client_msg_id":"475a284d-c29a-462d-977d-dca60bf70d06","type":"message","text":"They are still somewhat a work-in-progress but geometric-functional optimization is one of the goals there","user":"U9AHT3YM7","ts":"1614853897.061400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z7Y5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They are still somewhat a work-in-progress but geometric-functional optimization is one of the goals there"}]}]}],"thread_ts":"1614809224.055300","parent_user_id":"UFMH09DAR"},{"client_msg_id":"c1ea9a91-1bd1-4ba0-9ffc-8b8825e21424","type":"message","text":"<@UPJ6Q2SQY> may be able to help here :slightly_smiling_face:","user":"U9AHT3YM7","ts":"1614854004.061600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KxB","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UPJ6Q2SQY"},{"type":"text","text":" may be able to help here "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1614809224.055300","parent_user_id":"UFMH09DAR"},{"client_msg_id":"9da4f9cc-6c95-4211-bde4-b5a0c9ab8388","type":"message","text":"Ah, one thing you can do is take the `Euclidean` manifold from `Manifolds.jl` , implement your own new metric in a `MetricManifold` (I can help you with that if you want to go that way) and then use `Manopt.jl` (for example its gradient descent or even its CG).","user":"UPJ6Q2SQY","ts":"1614854543.061800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1G4a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, one thing you can do is take the "},{"type":"text","text":"Euclidean","style":{"code":true}},{"type":"text","text":" manifold from "},{"type":"text","text":"Manifolds.jl","style":{"code":true}},{"type":"text","text":" , implement your own new metric in a "},{"type":"text","text":"MetricManifold","style":{"code":true}},{"type":"text","text":" (I can help you with that if you want to go that way) and then use "},{"type":"text","text":"Manopt.jl","style":{"code":true}},{"type":"text","text":" (for example its gradient descent or even its CG)."}]}]}],"thread_ts":"1614809224.055300","parent_user_id":"UFMH09DAR"},{"client_msg_id":"81c685ac-6dda-4390-9ace-2b799ecc2476","type":"message","text":"Sure the manifold approach is broader than what you actually need, but is a first way you can look into","user":"UPJ6Q2SQY","ts":"1614854603.062000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Gk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sure the manifold approach is broader than what you actually need, but is a first way you can look into"}]}]}],"thread_ts":"1614809224.055300","parent_user_id":"UFMH09DAR"}]