[{"client_msg_id":"f8149310-0f7f-4968-a8da-79e99106e42c","type":"message","text":"Hi! I'd like to ask for a suggestion of what approach and package to use for an opt problem. Basically, I need to fit data with a heavily nonlinear formula, so: the objective is fast to compute, analytical/autodiff derivatives are easily available, but it is known that the objective \"surface\" is very complex with local minima. There are about 10-20 parameters. Is there any go-to method for such cases?","user":"UGTUKUHLN","ts":"1613173835.076800","team":"T68168MUP","edited":{"user":"UGTUKUHLN","ts":"1613173885.000000"},"blocks":[{"type":"rich_text","block_id":"QXh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi! I'd like to ask for a suggestion of what approach and package to use for an opt problem. Basically, I need to fit data with a heavily nonlinear formula, so: the objective is fast to compute, analytical/autodiff derivatives are easily available, but it is known that the objective \"surface\" is very complex with local minima. There are about 10-20 parameters. Is there any go-to method for such cases?"}]}]}],"thread_ts":"1613173835.076800","reply_count":2,"reply_users_count":2,"latest_reply":"1613174480.077300","reply_users":["UCZ7VBGUD","UGTUKUHLN"],"subscribed":false},{"client_msg_id":"a9e75e10-093a-4e54-9d69-4f27108ef694","type":"message","text":"many local minima means you want “global optimization”; there are heuristic and rigorous techniques (rigorous ones often being things like dividing the solution space and bounding the objective on each piece, i.e. exponentially slow with dimension). For heuristic, you could try BlackBoxOptim or particle swarm options in Optim.jl. For non-heuristic, you could try EAGO.jl, or IntervalOptimisation.jl, or a commerical optimizer like Baron","user":"UCZ7VBGUD","ts":"1613174216.077100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Djkv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"many local minima means you want “global optimization”; there are heuristic and rigorous techniques (rigorous ones often being things like dividing the solution space and bounding the objective on each piece, i.e. exponentially slow with dimension). For heuristic, you could try BlackBoxOptim or particle swarm options in Optim.jl. For non-heuristic, you could try EAGO.jl, or IntervalOptimisation.jl, or a commerical optimizer like Baron"}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"a515ddbc-8cb8-43b2-a691-c2268bc9c9dc","type":"message","text":"Are there any \"heuristic\" algorithms that can utilize derivatives to improve performance? Or gradients typically not worth it in such scenarios?","user":"UGTUKUHLN","ts":"1613174480.077300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nycUq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any \"heuristic\" algorithms that can utilize derivatives to improve performance? Or gradients typically not worth it in such scenarios?"}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN"}]