[{"client_msg_id":"f8149310-0f7f-4968-a8da-79e99106e42c","type":"message","text":"Hi! I'd like to ask for a suggestion of what approach and package to use for an opt problem. Basically, I need to fit data with a heavily nonlinear formula, so: the objective is fast to compute, analytical/autodiff derivatives are easily available, but it is known that the objective \"surface\" is very complex with local minima. There are about 10-20 parameters. Is there any go-to method for such cases?","user":"UGTUKUHLN","ts":"1613173835.076800","team":"T68168MUP","edited":{"user":"UGTUKUHLN","ts":"1613173885.000000"},"blocks":[{"type":"rich_text","block_id":"QXh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi! I'd like to ask for a suggestion of what approach and package to use for an opt problem. Basically, I need to fit data with a heavily nonlinear formula, so: the objective is fast to compute, analytical/autodiff derivatives are easily available, but it is known that the objective \"surface\" is very complex with local minima. There are about 10-20 parameters. Is there any go-to method for such cases?"}]}]}],"thread_ts":"1613173835.076800","reply_count":9,"reply_users_count":4,"latest_reply":"1613318959.082200","reply_users":["UCZ7VBGUD","UGTUKUHLN","UCT7E536E","U67G3QRJM"],"subscribed":false},{"client_msg_id":"a9e75e10-093a-4e54-9d69-4f27108ef694","type":"message","text":"many local minima means you want “global optimization”; there are heuristic and rigorous techniques (rigorous ones often being things like dividing the solution space and bounding the objective on each piece, i.e. exponentially slow with dimension). For heuristic, you could try BlackBoxOptim or particle swarm options in Optim.jl. For non-heuristic, you could try EAGO.jl, or IntervalOptimisation.jl, or a commerical optimizer like Baron","user":"UCZ7VBGUD","ts":"1613174216.077100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Djkv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"many local minima means you want “global optimization”; there are heuristic and rigorous techniques (rigorous ones often being things like dividing the solution space and bounding the objective on each piece, i.e. exponentially slow with dimension). For heuristic, you could try BlackBoxOptim or particle swarm options in Optim.jl. For non-heuristic, you could try EAGO.jl, or IntervalOptimisation.jl, or a commerical optimizer like Baron"}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN","reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"a515ddbc-8cb8-43b2-a691-c2268bc9c9dc","type":"message","text":"Are there any \"heuristic\" algorithms that can utilize derivatives to improve performance? Or gradients typically not worth it in such scenarios?","user":"UGTUKUHLN","ts":"1613174480.077300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nycUq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there any \"heuristic\" algorithms that can utilize derivatives to improve performance? Or gradients typically not worth it in such scenarios?"}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"161C0721-7687-46B8-ABB5-9E1CFB5F4551","type":"message","text":"Since you don’t have many decision variables, Interval methods might be a good alternative.\n\n<https://github.com/JuliaIntervals/IntervalOptimisation.jl|https://github.com/JuliaIntervals/IntervalOptimisation.jl>","user":"UCT7E536E","ts":"1613179170.078700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Qoz4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Since you don’t have many decision variables, Interval methods might be a good alternative.\n\n"},{"type":"link","url":"https://github.com/JuliaIntervals/IntervalOptimisation.jl","text":"https://github.com/JuliaIntervals/IntervalOptimisation.jl"}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"9A0D7F87-4795-4A9C-91B1-9A2261148EB2","type":"message","text":"They provide rigorous bounds and explore the whole space to find a global optimum","user":"UCT7E536E","ts":"1613179210.079700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qYnju","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"They provide rigorous bounds and explore the whole space to find a global optimum"}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"190ab4f0-933a-48af-b3d5-dfd15f605f9d","type":"message","text":"I think multistart methods are basically like finding the nearest local optimum from many initial points and then taking the best one (but I think they have more clever variants), and that can definitely use derivative information to speed up the local solve","user":"UCZ7VBGUD","ts":"1613181079.079900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BGi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think multistart methods are basically like finding the nearest local optimum from many initial points and then taking the best one (but I think they have more clever variants), and that can definitely use derivative information to speed up the local solve"}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"3c196085-8aab-49a2-b3e7-27d36b332436","type":"message","text":"Thanks for the suggestion, I tried intervaloptimization. It works really well for a smaller version of my model with 3 parameters, but quickly becomes prohibitively slow after that. I think this is due to oscillatory nature of the function I fit, so it's not possible for intervaloptimization to exclude large regions of space early.","user":"UGTUKUHLN","ts":"1613197604.080200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"La9r2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for the suggestion, I tried intervaloptimization. It works really well for a smaller version of my model with 3 parameters, but quickly becomes prohibitively slow after that. I think this is due to oscillatory nature of the function I fit, so it's not possible for intervaloptimization to exclude large regions of space early."}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN","reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"494ddcd0-9071-479b-975d-61d55549c677","type":"message","text":"<@UCZ7VBGUD> do you specifically mean MultistartOptimization.jl package, or there are others? As I see, global methods in e.g. Optim.jl don't use gradients in any way.","user":"UGTUKUHLN","ts":"1613197973.080400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yqMM","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UCZ7VBGUD"},{"type":"text","text":" do you specifically mean MultistartOptimization.jl package, or there are others? As I see, global methods in e.g. Optim.jl don't use gradients in any way."}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"98FABE7A-FDC5-4718-A24F-1DFDCEAFCB97","type":"message","text":"I mean the technique in general; I’m not sure about the packages available for it","user":"UCZ7VBGUD","ts":"1613209084.081500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3n3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean the technique in general; I’m not sure about the packages available for it"}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN"},{"client_msg_id":"7eaebbbc-6a2d-4059-8055-d55fde9d5363","type":"message","text":"<@UGTUKUHLN> The algorithm currently implemented in IntervalOptimisation is missing integration with IntervalConstraintProgramming.jl. That should help (but not necessarily enough)","user":"U67G3QRJM","ts":"1613318959.082200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sowY","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UGTUKUHLN"},{"type":"text","text":" The algorithm currently implemented in IntervalOptimisation is missing integration with IntervalConstraintProgramming.jl. That should help (but not necessarily enough)"}]}]}],"thread_ts":"1613173835.076800","parent_user_id":"UGTUKUHLN"}]