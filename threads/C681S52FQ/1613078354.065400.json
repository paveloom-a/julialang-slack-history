[{"client_msg_id":"d2346159-e59e-43f4-b1bf-6fce1f4ee3c2","type":"message","text":"more importantly, I believe SparseAxisArray is actually an array, thoguh it looks like it also supports some bizarre indexing schemes","user":"U9VG1AYSG","ts":"1613078354.065400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N4H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"more importantly, I believe SparseAxisArray is actually an array, thoguh it looks like it also supports some bizarre indexing schemes"}]}]}],"thread_ts":"1613078354.065400","reply_count":4,"reply_users_count":3,"latest_reply":"1613125055.066200","reply_users":["U82RE6STE","U9VG1AYSG","U019078LDND"],"subscribed":false},{"client_msg_id":"778c4fb5-2286-42f6-a071-3d22bfe6ad94","type":"message","text":"yes with some gotcha, I think it's supposed to be an array but doesn't implement some functions it should (Base.size maybe?)","user":"U82RE6STE","ts":"1613078846.065500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lmiTS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes with some gotcha, I think it's supposed to be an array but doesn't implement some functions it should (Base.size maybe?)"}]}]}],"thread_ts":"1613078354.065400","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"bd97531a-14c7-47b2-b655-3477a62b4aad","type":"message","text":"I personally just use regular SparseArrays.  With the MutableArithmetics stuff it works great, I'm not sure why anyone would use either a Dict or SparseAxisArray","user":"U9VG1AYSG","ts":"1613079409.065700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XSSE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I personally just use regular SparseArrays.  With the MutableArithmetics stuff it works great, I'm not sure why anyone would use either a Dict or SparseAxisArray"}]}]}],"thread_ts":"1613078354.065400","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"766cbcfa-5582-4037-8571-b182568dab9a","type":"message","text":"A question only slightly related to this: Is there a good way to distinguish between structural zeros and zero values in sparse arrays? I am currently using a Dict but using a sparse array would make so much more sense from the meaning of the index. But I want to to distinguish whether a value has been set to (possibly) zero or if it just does not exist...","user":"U019078LDND","ts":"1613124724.066000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Atpfg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A question only slightly related to this: Is there a good way to distinguish between structural zeros and zero values in sparse arrays? I am currently using a Dict but using a sparse array would make so much more sense from the meaning of the index. But I want to to distinguish whether a value has been set to (possibly) zero or if it just does not exist..."}]}]}],"thread_ts":"1613078354.065400","parent_user_id":"U9VG1AYSG"},{"client_msg_id":"4ece146f-83fb-46a8-91a3-4b37a049fa11","type":"message","text":"&gt;  I personally just use regular SparseArrays. With the MutableArithmetics stuff it works great, I'm not sure why anyone would use either a Dict or SparseAxisArray\nyou can have more exotic indices.\nEven with standard integer coordinates, the key difference is that the non-set entries are not structural zeros, they are undefined, for example if you have x[i in 1:5, j in i:5], x[3, 2] would error because it doesn't exist","user":"U82RE6STE","ts":"1613125055.066200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PEn","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" I personally just use regular SparseArrays. With the MutableArithmetics stuff it works great, I'm not sure why anyone would use either a Dict or SparseAxisArray"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"you can have more exotic indices.\nEven with standard integer coordinates, the key difference is that the non-set entries are not structural zeros, they are undefined, for example if you have x[i in 1:5, j in i:5], x[3, 2] would error because it doesn't exist"}]}]}],"thread_ts":"1613078354.065400","parent_user_id":"U9VG1AYSG"}]