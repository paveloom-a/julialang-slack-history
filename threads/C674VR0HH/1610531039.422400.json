[{"client_msg_id":"d744d4a1-b7b8-4c81-9dd0-2c7e671f03d3","type":"message","text":"I exported a MATLAB table as a parquet file and I can read it in julia, but get an error when trying to convert it into a `DataFrame`\n```UndefRefError: access to undefined reference\n\ngetproperty(::ParquetFiles.RCType350, ::Symbol)@Base.jl:33\nmacro expansion@ParquetFiles.jl:48[inlined]\niterate(::ParquetFiles.ParquetNamedTupleIterator{NamedTuple{(:animalid, :subjid, :species, :strain, :gender, :arrivedage, :iacucprotocol, :rfid, :status, :dateordered, :datearrived, :datedead, :cageid, :health, :owner, :water, :expgroupid, :expgroup),Tuple{Float64,Float64,String,String,String,Float64,String,Float64,String,String,String,String,Float64,String,String,String,Float64,String}},ParquetFiles.RCType350}, ::Int64)@ParquetFiles.jl:39\niterate@tofromdatavalues.jl:53[inlined]\niterate@iterators.jl:139[inlined]\nbuildcolumns(::Tables.Schema{(:animalid, :subjid, :species, :strain, :gender, :arrivedage, :iacucprotocol, :rfid, :status, :dateordered, :datearrived, :datedead, :cageid, :health, :owner, :water, :expgroupid, :expgroup),Tuple{Float64,Float64,String,String,String,Float64,String,Float64,String,String,String,String,Float64,String,String,String,Float64,String}}, ::Tables.IteratorWrapper{ParquetFiles.ParquetNamedTupleIterator{NamedTuple{(:animalid, :subjid, :species, :strain, :gender, :arrivedage, :iacucprotocol, :rfid, :status, :dateordered, :datearrived, :datedead, :cageid, :health, :owner, :water, :expgroupid, :expgroup),Tuple{Float64,Float64,String,String,String,Float64,String,Float64,String,String,String,String,Float64,String,String,String,Float64,String}},ParquetFiles.RCType350}})@fallbacks.jl:135\ncolumns@fallbacks.jl:262[inlined]\n#DataFrame#572(::Bool, ::Type{DataFrames.DataFrame}, ::ParquetFiles.ParquetFile)@tables.jl:43\nDataFrames.DataFrame(::ParquetFiles.ParquetFile)@tables.jl:34\ntop-level scope@Local: 1[inlined]```","user":"U017JTQFNEQ","ts":"1610531039.422400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d8/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I exported a MATLAB table as a parquet file and I can read it in julia, but get an error when trying to convert it into a "},{"type":"text","text":"DataFrame","style":{"code":true}},{"type":"text","text":"\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"UndefRefError: access to undefined reference\n\ngetproperty(::ParquetFiles.RCType350, ::Symbol)@Base.jl:33\nmacro expansion@ParquetFiles.jl:48[inlined]\niterate(::ParquetFiles.ParquetNamedTupleIterator{NamedTuple{(:animalid, :subjid, :species, :strain, :gender, :arrivedage, :iacucprotocol, :rfid, :status, :dateordered, :datearrived, :datedead, :cageid, :health, :owner, :water, :expgroupid, :expgroup),Tuple{Float64,Float64,String,String,String,Float64,String,Float64,String,String,String,String,Float64,String,String,String,Float64,String}},ParquetFiles.RCType350}, ::Int64)@ParquetFiles.jl:39\niterate@tofromdatavalues.jl:53[inlined]\niterate@iterators.jl:139[inlined]\nbuildcolumns(::Tables.Schema{(:animalid, :subjid, :species, :strain, :gender, :arrivedage, :iacucprotocol, :rfid, :status, :dateordered, :datearrived, :datedead, :cageid, :health, :owner, :water, :expgroupid, :expgroup),Tuple{Float64,Float64,String,String,String,Float64,String,Float64,String,String,String,String,Float64,String,String,String,Float64,String}}, ::Tables.IteratorWrapper{ParquetFiles.ParquetNamedTupleIterator{NamedTuple{(:animalid, :subjid, :species, :strain, :gender, :arrivedage, :iacucprotocol, :rfid, :status, :dateordered, :datearrived, :datedead, :cageid, :health, :owner, :water, :expgroupid, :expgroup),Tuple{Float64,Float64,String,String,String,Float64,String,Float64,String,String,String,String,Float64,String,String,String,Float64,String}},ParquetFiles.RCType350}})@fallbacks.jl:135\ncolumns@fallbacks.jl:262[inlined]\n#DataFrame#572(::Bool, ::Type{DataFrames.DataFrame}, ::ParquetFiles.ParquetFile)@tables.jl:43\nDataFrames.DataFrame(::ParquetFiles.ParquetFile)@tables.jl:34\ntop-level scope@Local: 1[inlined]"}]}]}],"thread_ts":"1610531039.422400","reply_count":8,"reply_users_count":3,"latest_reply":"1610551846.423900","reply_users":["UBF9YRB6H","U017JTQFNEQ","U67431ELR"],"subscribed":false},{"client_msg_id":"0872503e-bd48-47fa-a55a-51ae7446bfed","type":"message","text":"Can you try Parquet.jl instead?","user":"UBF9YRB6H","ts":"1610548709.422500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kJkR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you try Parquet.jl instead?"}]}]}],"thread_ts":"1610531039.422400","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"5129bf1c-5649-4200-94d2-da2eee9b97a2","type":"message","text":"```julia&gt; using Parquet, DataFrames\n\njulia&gt; patho_parquet_file = \"/Users/jerlich/Downloads/animals.parquet\"\n\"/Users/jerlich/Downloads/animals.parquet\"\n\njulia&gt; pf = ParFile(patho_parquet_file)\nParquet file: /Users/jerlich/Downloads/animals.parquet\n    version: 1\n    nrows: 578\n    created by: parquet-cpp version 1.5.1-SNAPSHOT\n    cached: 0 column chunks\n\n\njulia&gt; schema(pf)\nSchema:\n    required schema {\n      optional DOUBLE animalid\n      optional DOUBLE subjid\n      optional BYTE_ARRAY species# (from UTF8)\n      optional BYTE_ARRAY strain# (from UTF8)\n      optional BYTE_ARRAY gender# (from UTF8)\n      optional DOUBLE arrivedage\n      optional BYTE_ARRAY iacucprotocol# (from UTF8)\n      optional DOUBLE rfid\n      optional BYTE_ARRAY status# (from UTF8)\n      optional BYTE_ARRAY dateordered# (from UTF8)\n      optional BYTE_ARRAY datearrived# (from UTF8)\n      optional BYTE_ARRAY datedead# (from UTF8)\n      optional DOUBLE cageid\n      optional BYTE_ARRAY health# (from UTF8)\n      optional BYTE_ARRAY owner# (from UTF8)\n      optional BYTE_ARRAY water# (from UTF8)\n      optional DOUBLE expgroupid\n      optional BYTE_ARRAY expgroup# (from UTF8)\n    }\n\n\njulia&gt; df = DataFrame(pf)\nERROR: ArgumentError: no default `Tables.columns` implementation for type: ParFile\nStacktrace:\n [1] columns at /Users/jerlich/.julia/packages/Tables/8Ud85/src/fallbacks.jl:264 [inlined]\n [2] DataFrame(::ParFile; copycols::Bool) at /Users/jerlich/.julia/packages/DataFrames/GtZ1l/src/other/tables.jl:43\n [3] DataFrame(::ParFile) at /Users/jerlich/.julia/packages/DataFrames/GtZ1l/src/other/tables.jl:34\n [4] top-level scope at REPL[4]:1\n\njulia&gt;```","user":"U017JTQFNEQ","ts":"1610549173.422700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7D1W","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Parquet, DataFrames\n\njulia> patho_parquet_file = \"/Users/jerlich/Downloads/animals.parquet\"\n\"/Users/jerlich/Downloads/animals.parquet\"\n\njulia> pf = ParFile(patho_parquet_file)\nParquet file: /Users/jerlich/Downloads/animals.parquet\n    version: 1\n    nrows: 578\n    created by: parquet-cpp version 1.5.1-SNAPSHOT\n    cached: 0 column chunks\n\n\njulia> schema(pf)\nSchema:\n    required schema {\n      optional DOUBLE animalid\n      optional DOUBLE subjid\n      optional BYTE_ARRAY species# (from UTF8)\n      optional BYTE_ARRAY strain# (from UTF8)\n      optional BYTE_ARRAY gender# (from UTF8)\n      optional DOUBLE arrivedage\n      optional BYTE_ARRAY iacucprotocol# (from UTF8)\n      optional DOUBLE rfid\n      optional BYTE_ARRAY status# (from UTF8)\n      optional BYTE_ARRAY dateordered# (from UTF8)\n      optional BYTE_ARRAY datearrived# (from UTF8)\n      optional BYTE_ARRAY datedead# (from UTF8)\n      optional DOUBLE cageid\n      optional BYTE_ARRAY health# (from UTF8)\n      optional BYTE_ARRAY owner# (from UTF8)\n      optional BYTE_ARRAY water# (from UTF8)\n      optional DOUBLE expgroupid\n      optional BYTE_ARRAY expgroup# (from UTF8)\n    }\n\n\njulia> df = DataFrame(pf)\nERROR: ArgumentError: no default `Tables.columns` implementation for type: ParFile\nStacktrace:\n [1] columns at /Users/jerlich/.julia/packages/Tables/8Ud85/src/fallbacks.jl:264 [inlined]\n [2] DataFrame(::ParFile; copycols::Bool) at /Users/jerlich/.julia/packages/DataFrames/GtZ1l/src/other/tables.jl:43\n [3] DataFrame(::ParFile) at /Users/jerlich/.julia/packages/DataFrames/GtZ1l/src/other/tables.jl:34\n [4] top-level scope at REPL[4]:1\n\njulia>"}]}]}],"thread_ts":"1610531039.422400","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"8d3295d6-f4d3-4118-94fd-eda89b0d0f73","type":"message","text":"sorry, for some reason that environment was stuck at 0.4.0","user":"U017JTQFNEQ","ts":"1610549868.422900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lrgvu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sorry, for some reason that environment was stuck at 0.4.0"}]}]}],"thread_ts":"1610531039.422400","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"465e51b7-201f-4b74-8979-6280984d0fbb","type":"message","text":"ok. with 0.8.0 it is working! thanks","user":"U017JTQFNEQ","ts":"1610549995.423100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HJ8Ws","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok. with 0.8.0 it is working! thanks"}]}]}],"thread_ts":"1610531039.422400","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"f9902279-5962-409d-8a1c-0afe23a2865c","type":"message","text":"The issue was `Queryverse.jl`  it seems to want `Parquet 0.4.0`","user":"U017JTQFNEQ","ts":"1610550284.423300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fnzl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The issue was "},{"type":"text","text":"Queryverse.jl","style":{"code":true}},{"type":"text","text":"  it seems to want "},{"type":"text","text":"Parquet 0.4.0","style":{"code":true}}]}]}],"thread_ts":"1610531039.422400","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"1187fd1c-4b40-4417-860f-fe626a26aade","type":"message","text":"Maybe worth filing an issue.","user":"U67431ELR","ts":"1610550883.423500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FaS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe worth filing an issue."}]}]}],"thread_ts":"1610531039.422400","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"95c59ec8-6f94-45cc-a78c-b8a4a1aedac4","type":"message","text":"<https://github.com/queryverse/Queryverse.jl/issues/46>","user":"U017JTQFNEQ","ts":"1610551834.423700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PRE","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/queryverse/Queryverse.jl/issues/46"}]}]}],"thread_ts":"1610531039.422400","parent_user_id":"U017JTQFNEQ","reactions":[{"name":"+1","users":["U67431ELR"],"count":1}]},{"client_msg_id":"c5b53e9c-b2c1-46e2-8b64-a39f40bae101","type":"message","text":"hope that is sufficient","user":"U017JTQFNEQ","ts":"1610551846.423900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H8v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hope that is sufficient"}]}]}],"thread_ts":"1610531039.422400","parent_user_id":"U017JTQFNEQ"}]