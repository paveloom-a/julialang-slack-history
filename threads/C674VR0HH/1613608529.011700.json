[{"client_msg_id":"c3c52c8e-5663-4cb3-873c-7ac3b3130e58","type":"message","text":"is there a good function to unpack vector-valued columns with DataFrames.jl? i.e. this transformation\n```julia&gt; df = DataFrame( (; a =  rand(3), b = [rand(2) for _ = 1:3]))\n3×2 DataFrame\n Row │ a         b                    \n     │ Float64   Array…               \n─────┼────────────────────────────────\n   1 │ 0.562557  [0.805228, 0.323733]\n   2 │ 0.438863  [0.509096, 0.656699]\n   3 │ 0.417421  [0.824068, 0.48768]\n\njulia&gt; expand(df, :b)\n6×2 DataFrame\n Row │ a         b        \n     │ Float64   Float64  \n─────┼────────────────────\n   1 │ 0.562557  0.805228\n   2 │ 0.562557  0.323733\n   3 │ 0.438863  0.509096\n   4 │ 0.438863  0.656699\n   5 │ 0.417421  0.824068\n   6 │ 0.417421  0.48768```","user":"UCZ7VBGUD","ts":"1613608529.011700","team":"T68168MUP","edited":{"user":"UCZ7VBGUD","ts":"1613608581.000000"},"blocks":[{"type":"rich_text","block_id":"=g44","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a good function to unpack vector-valued columns with DataFrames.jl? i.e. this transformation\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> df = DataFrame( (; a =  rand(3), b = [rand(2) for _ = 1:3]))\n3×2 DataFrame\n Row │ a         b                    \n     │ Float64   Array…               \n─────┼────────────────────────────────\n   1 │ 0.562557  [0.805228, 0.323733]\n   2 │ 0.438863  [0.509096, 0.656699]\n   3 │ 0.417421  [0.824068, 0.48768]\n\njulia> expand(df, :b)\n6×2 DataFrame\n Row │ a         b        \n     │ Float64   Float64  \n─────┼────────────────────\n   1 │ 0.562557  0.805228\n   2 │ 0.562557  0.323733\n   3 │ 0.438863  0.509096\n   4 │ 0.438863  0.656699\n   5 │ 0.417421  0.824068\n   6 │ 0.417421  0.48768"}]}]}],"thread_ts":"1613608529.011700","reply_count":24,"reply_users_count":6,"latest_reply":"1613644141.021300","reply_users":["UCZ7VBGUD","U680THK2S","U6A936746","UBF9YRB6H","U681ELA87","U7JQGPGCQ"],"subscribed":false},{"client_msg_id":"9b5d7e84-fb29-4e61-a7a7-7a224cd0110d","type":"message","text":"my implementation doesn't seem very good:\n```function expand(df, col)\n    new_df = DataFrame()\n    for row in Tables.namedtupleiterator(df)\n        for val in row[col]\n            push!(new_df, (; (k =&gt; v for (k,v) in pairs(row) if k !== col)..., ((col =&gt; val),)...); cols=:union)\n        end\n    end\n    return new_df\nend```\n","user":"UCZ7VBGUD","ts":"1613608546.011800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y5n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"my implementation doesn't seem very good:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function expand(df, col)\n    new_df = DataFrame()\n    for row in Tables.namedtupleiterator(df)\n        for val in row[col]\n            push!(new_df, (; (k => v for (k,v) in pairs(row) if k !== col)..., ((col => val),)...); cols=:union)\n        end\n    end\n    return new_df\nend"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"a1a4a623-b33c-4299-b154-9a95d1490e2c","type":"message","text":"If all of the values of `b` have the same length then you can separate them into columns and call `stack`, but I don't know that that's any more satisfying than what you have","user":"U680THK2S","ts":"1613609156.012100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oXzb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If all of the values of "},{"type":"text","text":"b","style":{"code":true}},{"type":"text","text":" have the same length then you can separate them into columns and call "},{"type":"text","text":"stack","style":{"code":true}},{"type":"text","text":", but I don't know that that's any more satisfying than what you have"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"061f1bde-49a9-412b-9085-ad10c4a45bf3","type":"message","text":"they don't have the same length. Ah ok, well I can just spruce up this implementation then aha. Somehow I figured it was common","user":"UCZ7VBGUD","ts":"1613609206.012300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3hV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"they don't have the same length. Ah ok, well I can just spruce up this implementation then aha. Somehow I figured it was common"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"type":"message","text":"¯\\_(ツ)_/¯","user":"U680THK2S","ts":"1613609222.012500","team":"T68168MUP","thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"9e5dd7b6-39d8-48e8-82b9-2f3d0fc69a80","type":"message","text":"I've not come across that situation (except in cases of user error) but that's not to say it's uncommon","user":"U680THK2S","ts":"1613609255.012700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KIk2I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've not come across that situation (except in cases of user error) but that's not to say it's uncommon"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"e87fa4b4-5730-4b76-b878-d2c958157c68","type":"message","text":"This one has come up twice before.\nBut it is lost to the slack memory hole","user":"U6A936746","ts":"1613609398.012900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o=I7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This one has come up twice before.\nBut it is lost to the slack memory hole"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"hole","users":["UDXST8ARK","UCZ7VBGUD","U680THK2S"],"count":3}]},{"client_msg_id":"b7132249-edde-4ac8-89d5-078a8d6194ff","type":"message","text":"&gt;  I've not come across that situation (except in cases of user error) but that's not to say it's uncommon\nwell you haven't had me designing the table then :laughing:. The column in question is all the software licenses found in a file in a Julia package, which is usually 1 but can be as many as 7","user":"UCZ7VBGUD","ts":"1613609454.013200","team":"T68168MUP","edited":{"user":"UCZ7VBGUD","ts":"1613609475.000000"},"blocks":[{"type":"rich_text","block_id":"ppD","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" I've not come across that situation (except in cases of user error) but that's not to say it's uncommon"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nwell you haven't had me designing the table then "},{"type":"emoji","name":"laughing"},{"type":"text","text":". The column in question is all the software licenses found in a file in a Julia package, which is usually 1 but can be as many as 7"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"1b6a4056-e0f4-4131-8a79-c0eafe8af400","type":"message","text":"This operation is iirc what tidyr calls unnest\n<https://tidyr.tidyverse.org/articles/nest.html|https://tidyr.tidyverse.org/articles/nest.html>","user":"U6A936746","ts":"1613609570.013600","team":"T68168MUP","attachments":[{"title":"Nested data","title_link":"https://tidyr.tidyverse.org/articles/nest.html","text":"A nested data frame contains a list-column of data frames. It's an alternative way of representing grouped data, that works particularly well when you're modelling.","fallback":"Nested data","thumb_url":"https://tidyr.tidyverse.org/logo.png","from_url":"https://tidyr.tidyverse.org/articles/nest.html","thumb_width":240,"thumb_height":277,"service_icon":"https://tidyr.tidyverse.org/apple-touch-icon.png","service_name":"tidyr.tidyverse.org","id":1,"original_url":"https://tidyr.tidyverse.org/articles/nest.html"}],"blocks":[{"type":"rich_text","block_id":"6Tb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This operation is iirc what tidyr calls unnest\n"},{"type":"link","url":"https://tidyr.tidyverse.org/articles/nest.html","text":"https://tidyr.tidyverse.org/articles/nest.html"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"e4ee5f50-f13d-4c7c-8891-b3abeee49304","type":"message","text":"It last came up for me when wrangling the JuliaCon program.\n\nFor a table of talks you want to nest the list of author's (on multiauthor talks), so it is one talk per row.\n\nTo get from that to all the talks from a author, you want to unnest to get the table fully long.\nThen group by author.","user":"U6A936746","ts":"1613609793.014000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jqyS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It last came up for me when wrangling the JuliaCon program.\n\nFor a table of talks you want to nest the list of author's (on multiauthor talks), so it is one talk per row.\n\nTo get from that to all the talks from a author, you want to unnest to get the table fully long.\nThen group by author."}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"6d0eecf4-2b23-44d0-ab79-f3a6111ed9fa","type":"message","text":"yeah, it's basically the same here; one row per file, but there's the possibility of several licenses per file, so I made it a vector. I could've unnested from the start by doing this expansion at creation time, but it makes looking at the table way more verbose (and these are small tables for when you're just looking at one package), so it seems nicer to only do it later on when you've combined many packages","user":"UCZ7VBGUD","ts":"1613609886.014300","team":"T68168MUP","edited":{"user":"UCZ7VBGUD","ts":"1613609952.000000"},"blocks":[{"type":"rich_text","block_id":"0Wgv3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, it's basically the same here; one row per file, but there's the possibility of several licenses per file, so I made it a vector. I could've unnested from the start by doing this expansion at creation time, but it makes looking at the table way more verbose (and these are small tables for when you're just looking at one package), so it seems nicer to only do it later on when you've combined many packages"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"2c23a9a3-16ad-41c7-9e5b-72af3219bf4d","type":"message","text":"this is the file with 7 licenses btw, in case anyone's curious: <https://github.com/BioJulia/FormatSpecimens.jl/blob/master/LICENSE.md>","user":"UCZ7VBGUD","ts":"1613609918.014500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oQFdj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is the file with 7 licenses btw, in case anyone's curious: "},{"type":"link","url":"https://github.com/BioJulia/FormatSpecimens.jl/blob/master/LICENSE.md"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"heart","users":["U6A936746"],"count":1},{"name":"wat","users":["U680THK2S"],"count":1}]},{"client_msg_id":"5bd7783f-5ea2-4e0e-9e18-57983a7ea7c9","type":"message","text":"In database terminology.\nNesting moves you from the first normalized form (1NF) to be unnormalized (UNF)\nUnnesting goes from UNF to 1NF, but no further (going further would be splitting the table)\n<https://en.m.wikipedia.org/wiki/Database_normalization|https://en.m.wikipedia.org/wiki/Database_normalization> \n<https://en.m.wikipedia.org/wiki/First_normal_form|https://en.m.wikipedia.org/wiki/First_normal_form>","user":"U6A936746","ts":"1613610103.014900","team":"T68168MUP","attachments":[{"title":"Database normalization","title_link":"https://en.m.wikipedia.org/wiki/Database_normalization","from_url":"https://en.m.wikipedia.org/wiki/Database_normalization","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"Database normalization is the process of structuring a database, usually a relational database, in accordance with a series of so-called normal forms in order to reduce data redundancy and improve data integrity. It was first proposed by Edgar F. Codd as part of his relational model.\nNormalization entails organizing the columns (attributes) and tables (relations) of a database to ensure that their dependencies are properly enforced by database integrity constraints. It is accomplished by applying some formal rules either by a process of synthesis (creating a new database design) or decomposition (improving an existing database design).","fallback":"wikipedia: Database normalization","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":1,"original_url":"https://en.m.wikipedia.org/wiki/Database_normalization"},{"title":"First normal form","title_link":"https://en.m.wikipedia.org/wiki/First_normal_form","from_url":"https://en.m.wikipedia.org/wiki/First_normal_form","author_name":"Wikipedia","author_link":"https://en.wikipedia.org/","text":"First normal form (1NF) is a property of a relation in a relational database.  A relation is in first normal form if and only if the domain of each attribute contains only atomic (indivisible) values, and the value of each attribute contains only a single value from that domain. The first definition of the term, in a 1971 conference paper by Edgar Codd, defined a relation to be in first normal form when none of its domains have any sets as elements.First normal form is an essential property of a relation in a relational database. Database normalization is the process of representing a database in terms of relations in standard normal forms, where first normal is a minimal requirement.\nFirst normal form enforces these criteria:\nEliminate repeating groups in individual tables\nCreate a separate table for each set of related data\nIdentify each set of related data with a primary key","fallback":"wikipedia: First normal form","service_icon":"https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png","id":2,"original_url":"https://en.m.wikipedia.org/wiki/First_normal_form"}],"blocks":[{"type":"rich_text","block_id":"RYzHi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In database terminology.\nNesting moves you from the first normalized form (1NF) to be unnormalized (UNF)\nUnnesting goes from UNF to 1NF, but no further (going further would be splitting the table)\n"},{"type":"link","url":"https://en.m.wikipedia.org/wiki/Database_normalization","text":"https://en.m.wikipedia.org/wiki/Database_normalization"},{"type":"text","text":" \n"},{"type":"link","url":"https://en.m.wikipedia.org/wiki/First_normal_form","text":"https://en.m.wikipedia.org/wiki/First_normal_form"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"type":"message","subtype":"thread_broadcast","text":"`flatten`. I think it existed before Juliacon... we really need to improve the data frames docs i guess","user":"UBF9YRB6H","ts":"1613610237.015400","thread_ts":"1613608529.011700","root":{"client_msg_id":"c3c52c8e-5663-4cb3-873c-7ac3b3130e58","type":"message","text":"is there a good function to unpack vector-valued columns with DataFrames.jl? i.e. this transformation\n```julia&gt; df = DataFrame( (; a =  rand(3), b = [rand(2) for _ = 1:3]))\n3×2 DataFrame\n Row │ a         b                    \n     │ Float64   Array…               \n─────┼────────────────────────────────\n   1 │ 0.562557  [0.805228, 0.323733]\n   2 │ 0.438863  [0.509096, 0.656699]\n   3 │ 0.417421  [0.824068, 0.48768]\n\njulia&gt; expand(df, :b)\n6×2 DataFrame\n Row │ a         b        \n     │ Float64   Float64  \n─────┼────────────────────\n   1 │ 0.562557  0.805228\n   2 │ 0.562557  0.323733\n   3 │ 0.438863  0.509096\n   4 │ 0.438863  0.656699\n   5 │ 0.417421  0.824068\n   6 │ 0.417421  0.48768```","user":"UCZ7VBGUD","ts":"1613608529.011700","team":"T68168MUP","edited":{"user":"UCZ7VBGUD","ts":"1613608581.000000"},"blocks":[{"type":"rich_text","block_id":"=g44","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is there a good function to unpack vector-valued columns with DataFrames.jl? i.e. this transformation\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> df = DataFrame( (; a =  rand(3), b = [rand(2) for _ = 1:3]))\n3×2 DataFrame\n Row │ a         b                    \n     │ Float64   Array…               \n─────┼────────────────────────────────\n   1 │ 0.562557  [0.805228, 0.323733]\n   2 │ 0.438863  [0.509096, 0.656699]\n   3 │ 0.417421  [0.824068, 0.48768]\n\njulia> expand(df, :b)\n6×2 DataFrame\n Row │ a         b        \n     │ Float64   Float64  \n─────┼────────────────────\n   1 │ 0.562557  0.805228\n   2 │ 0.562557  0.323733\n   3 │ 0.438863  0.509096\n   4 │ 0.438863  0.656699\n   5 │ 0.417421  0.824068\n   6 │ 0.417421  0.48768"}]}]}],"thread_ts":"1613608529.011700","reply_count":24,"reply_users_count":6,"latest_reply":"1613644141.021300","reply_users":["UCZ7VBGUD","U680THK2S","U6A936746","UBF9YRB6H","U681ELA87","U7JQGPGCQ"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"b+q/u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"flatten","style":{"code":true}},{"type":"text","text":". I think it existed before Juliacon... we really need to improve the data frames docs i guess"}]}]}],"client_msg_id":"724d2f37-0187-49dd-8f34-bce7a7236016"},{"client_msg_id":"607e64df-b7a9-4953-90b4-f5dd34a525ec","type":"message","text":"ooh, perfect. Thanks!","user":"UCZ7VBGUD","ts":"1613610306.015700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BiCxZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ooh, perfect. Thanks!"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"88a656c4-ca7e-4187-96d1-83264d279128","type":"message","text":"What's the opposite though?","user":"U6A936746","ts":"1613610375.015900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ajz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What's the opposite though?"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"9059b0b1-e360-440d-a297-77c23590de99","type":"message","text":"It's not quite groupby. Though I suspect it is some combine function ontop of groupby?","user":"U6A936746","ts":"1613610473.016100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4=6LE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's not quite groupby. Though I suspect it is some combine function ontop of groupby?"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"596529aa-ed92-4cf0-b8d9-8d681ccdab75","type":"message","text":"So Strapping.jl has this kind of functionality in `Strapping.deconstruct` (and corresponding `Strapping.construct`). An example is like this:\n```struct T\n    a::Float64\n    b::Vector{Float64}\nend\nStructTypes.StructType(::Type{T}) = StructTypes.Struct()\ntbl = [T(rand(Float64), rand(2)) for i = 1:3]\nDataFrame(Strapping.deconstruct(tbl))```\nwhich does what's expected in OP.","user":"U681ELA87","ts":"1613610710.016300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7UU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So Strapping.jl has this kind of functionality in "},{"type":"text","text":"Strapping.deconstruct","style":{"code":true}},{"type":"text","text":" (and corresponding "},{"type":"text","text":"Strapping.construct","style":{"code":true}},{"type":"text","text":"). An example is like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct T\n    a::Float64\n    b::Vector{Float64}\nend\nStructTypes.StructType(::Type{T}) = StructTypes.Struct()\ntbl = [T(rand(Float64), rand(2)) for i = 1:3]\nDataFrame(Strapping.deconstruct(tbl))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which does what's expected in OP."}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"eyes","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"998eb353-220a-4252-8882-7e9fccf80030","type":"message","text":"Currently, this relies on having a defined `struct` though, so maybe there's a way to allow it to operate on input tables as well (currently it expects the input in a Vector{T} form)","user":"U681ELA87","ts":"1613610761.016500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q86v","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Currently, this relies on having a defined "},{"type":"text","text":"struct","style":{"code":true}},{"type":"text","text":" though, so maybe there's a way to allow it to operate on input tables as well (currently it expects the input in a Vector{T} form)"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"96a4661a-eda2-4248-a3d6-86ae95dfa490","type":"message","text":"&gt; It's not quite groupby. Though I suspect it is some combine function ontop of groupby?\nit would be groupby and combine. something like\n\n```@chain df begin \n    groupby(Not(:v))\n    @combine(v = Ref(:v))\nend```\n","user":"UBF9YRB6H","ts":"1613610985.016800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oxC1","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"It's not quite groupby. Though I suspect it is some combine function ontop of groupby?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nit would be groupby and combine. something like\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@chain df begin \n    groupby(Not(:v))\n    @combine(v = Ref(:v))\nend"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"75461666-a97f-4a26-ba11-8ddd381d6e3f","type":"message","text":"<@U681ELA87> this looks great; I actually do have `struct`s, and these tables are fields within the struct. If I try with a vector of my structs though, I get\n```julia&gt; using Strapping, StructTypes\n\njulia&gt; StructTypes.StructType(::Type{AnalyzeRegistry.Package}) = StructTypes.Struct()\n\njulia&gt; DataFrame(Strapping.deconstruct(results))\nERROR: BoundsError: attempt to access 0-element Vector{String} at index [1]\nStacktrace:\n [1] getindex\n   @ ./array.jl:801 [inlined]\n [2] nametypeindex!\n   @ ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:483 [inlined]\n [3] nametypeindex!\n   @ ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:461 [inlined]\n [4] #_#58\n   @ ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:403 [inlined]\n [5] DeconstructClosure\n   @ ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:399 [inlined]\n [6] foreachfield\n   @ ~/.julia/packages/StructTypes/eCxx6/src/StructTypes.jl:604 [inlined]\n [7] deconstruct(values::Vector{AnalyzeRegistry.Package})\n   @ Strapping ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:412\n [8] top-level scope\n   @ REPL[94]:1```\nOpening the code it looks like Strapping assumes ArrayTypes are nonempty in\n```function nametypeindex!(::StructTypes.ArrayType, x::T, i, nm, c) where {T}\n    nametypeindex!(x[1], i, nm, c)\nend```\n","user":"UCZ7VBGUD","ts":"1613611104.017000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TN5=","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U681ELA87"},{"type":"text","text":" this looks great; I actually do have "},{"type":"text","text":"struct","style":{"code":true}},{"type":"text","text":"s, and these tables are fields within the struct. If I try with a vector of my structs though, I get\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Strapping, StructTypes\n\njulia> StructTypes.StructType(::Type{AnalyzeRegistry.Package}) = StructTypes.Struct()\n\njulia> DataFrame(Strapping.deconstruct(results))\nERROR: BoundsError: attempt to access 0-element Vector{String} at index [1]\nStacktrace:\n [1] getindex\n   @ ./array.jl:801 [inlined]\n [2] nametypeindex!\n   @ ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:483 [inlined]\n [3] nametypeindex!\n   @ ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:461 [inlined]\n [4] #_#58\n   @ ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:403 [inlined]\n [5] DeconstructClosure\n   @ ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:399 [inlined]\n [6] foreachfield\n   @ ~/.julia/packages/StructTypes/eCxx6/src/StructTypes.jl:604 [inlined]\n [7] deconstruct(values::Vector{AnalyzeRegistry.Package})\n   @ Strapping ~/.julia/packages/Strapping/kHXFJ/src/Strapping.jl:412\n [8] top-level scope\n   @ REPL[94]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Opening the code it looks like Strapping assumes ArrayTypes are nonempty in\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function nametypeindex!(::StructTypes.ArrayType, x::T, i, nm, c) where {T}\n    nametypeindex!(x[1], i, nm, c)\nend"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"5a1957c4-235e-40d0-b234-e6cef38f14bb","type":"message","text":"Ah, good bug! So I've actually been overhauling the internals of the package over the last week or so, so you may have more success trying master. Though my gut says we might have that same assumption on master. But if you file an issue I can pretty much guarantee a fix tonight since I'm trying to get a new release out soon!","user":"U681ELA87","ts":"1613611210.017200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fNHZO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, good bug! So I've actually been overhauling the internals of the package over the last week or so, so you may have more success trying master. Though my gut says we might have that same assumption on master. But if you file an issue I can pretty much guarantee a fix tonight since I'm trying to get a new release out soon!"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["UCZ7VBGUD"],"count":1}]},{"client_msg_id":"c499c689-f71b-4d20-b4de-35733b0dcc78","type":"message","text":"Actually the last part of the revamp I have planned touches that code specifically, so it'll be good to have a solid use-case in mind.","user":"U681ELA87","ts":"1613611303.017500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lyk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually the last part of the revamp I have planned touches that code specifically, so it'll be good to have a solid use-case in mind."}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"aa95e24a-84b1-41f9-aefb-9ee5fe6a1c6d","type":"message","text":"Cool, I'll open an issue and describe the use case! edit: <https://github.com/JuliaData/Strapping.jl/issues/12>","user":"UCZ7VBGUD","ts":"1613611369.017700","team":"T68168MUP","edited":{"user":"UCZ7VBGUD","ts":"1613611643.000000"},"blocks":[{"type":"rich_text","block_id":"Dm1A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Cool, I'll open an issue and describe the use case! edit: "},{"type":"link","url":"https://github.com/JuliaData/Strapping.jl/issues/12"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD"},{"client_msg_id":"5454dfae-2b9d-4a0e-aa0d-95232c30be32","type":"message","text":"Late to the party but just to add as I was in this situation just last week - I ended up with:\n```combine(groupby(df, :a), :b =&gt; collect ∘ Iterators.flatten =&gt; :b)```\nwhich is close to what Peter suggested I guess","user":"U7JQGPGCQ","ts":"1613644141.021300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ODr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Late to the party but just to add as I was in this situation just last week - I ended up with:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"combine(groupby(df, :a), :b => collect ∘ Iterators.flatten => :b)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which is close to what Peter suggested I guess"}]}]}],"thread_ts":"1613608529.011700","parent_user_id":"UCZ7VBGUD","reactions":[{"name":"+1","users":["U680THK2S"],"count":1}]}]