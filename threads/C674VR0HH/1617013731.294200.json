[{"client_msg_id":"015b4958-e704-46f2-af9a-34047a6ae901","type":"message","text":"I have a Dataframe with these column types:\n```eltype.(eachcol(planets))\n\n4-element Vector{DataType}:\n String\n Quantity{Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}\n Quantity{Int64, 𝐋, Unitful.FreeUnits{(km,), 𝐋, nothing}}\n Quantity{Float64, 𝐓, Unitful.FreeUnits{(d,), 𝐓, nothing}}```\nI want to save this to disk, and read it to another Julia program while retaining the units.\nI can save it to CSV:\n```planet,mass,diameter,orbital_period\nMercury,3.3000000000000004e24 kg,4879 km,88.0 d\nVenus,4.8700000000000005e25 kg,12104 km,224.7 d\n...```\nBut when I read it in, it’s all strings.  This is not surprising, but I’d like to fix it.\nSuggestions? Just ‘remember’ the types and don’t store them in CSV, or somehow parse the “4879 km” back to unitful, which I didn’t notice in the docs for that package.","user":"U01CQTKB86N","ts":"1617013731.294200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WCvJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a Dataframe with these column types:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"eltype.(eachcol(planets))\n\n4-element Vector{DataType}:\n String\n Quantity{Float64, 𝐌, Unitful.FreeUnits{(kg,), 𝐌, nothing}}\n Quantity{Int64, 𝐋, Unitful.FreeUnits{(km,), 𝐋, nothing}}\n Quantity{Float64, 𝐓, Unitful.FreeUnits{(d,), 𝐓, nothing}}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I want to save this to disk, and read it to another Julia program while retaining the units.\nI can save it to CSV:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"planet,mass,diameter,orbital_period\nMercury,3.3000000000000004e24 kg,4879 km,88.0 d\nVenus,4.8700000000000005e25 kg,12104 km,224.7 d\n..."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"But when I read it in, it’s all strings.  This is not surprising, but I’d like to fix it.\nSuggestions? Just ‘remember’ the types and don’t store them in CSV, or somehow parse the “4879 km” back to unitful, which I didn’t notice in the docs for that package."}]}]}],"thread_ts":"1617013731.294200","reply_count":5,"reply_users_count":3,"latest_reply":"1617034968.298700","reply_users":["U8WEJ293L","U681ELA87","U01CQTKB86N"],"is_locked":false,"subscribed":false},{"client_msg_id":"87270220-49d2-4e15-8693-5f908a2c0ee4","type":"message","text":"have you tried saving using JLD2 or BSON? this should save the object itself with the respective data column types.","user":"U8WEJ293L","ts":"1617020985.297000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iNA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"have you tried saving using JLD2 or BSON? this should save the object itself with the respective data column types."}]}]}],"thread_ts":"1617013731.294200","parent_user_id":"U01CQTKB86N"},{"client_msg_id":"2ddcd112-7e45-4605-ad4b-b494b2ae4f56","type":"message","text":"I just merged <https://github.com/JuliaData/Arrow.jl/pull/156>, which should allow doing something like this with Arrow.jl pretty easily and would be much faster than trying to use CSV.jl. I just tagged a new 1.3 release, so you can wait the 20 minutes or so for the new release to percolate thru General or just checkout master if you want to give it a try. The docs manual gives a walk-through of how to support custom types. Let me know if you want to give it a go or need any help.","user":"U681ELA87","ts":"1617024305.297200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"318hK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just merged "},{"type":"link","url":"https://github.com/JuliaData/Arrow.jl/pull/156"},{"type":"text","text":", which should allow doing something like this with Arrow.jl pretty easily and would be much faster than trying to use CSV.jl. I just tagged a new 1.3 release, so you can wait the 20 minutes or so for the new release to percolate thru General or just checkout master if you want to give it a try. The docs manual gives a walk-through of how to support custom types. Let me know if you want to give it a go or need any help."}]}]}],"thread_ts":"1617013731.294200","parent_user_id":"U01CQTKB86N"},{"client_msg_id":"8343e47d-6029-4f7e-942f-8c1e86967384","type":"message","text":"JLD2 worked straight away!","user":"U01CQTKB86N","ts":"1617034838.298300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3XI+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"JLD2 worked straight away!"}]}]}],"thread_ts":"1617013731.294200","parent_user_id":"U01CQTKB86N"},{"client_msg_id":"52d0f02c-e954-4972-9ab8-66117035feea","type":"message","text":"I don’t have time for the Arrow version right now, but I think Arrow would be the preferred format for this kind of thing, but that there’s probably no consensus?","user":"U01CQTKB86N","ts":"1617034894.298500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qLMF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t have time for the Arrow version right now, but I think Arrow would be the preferred format for this kind of thing, but that there’s probably no consensus?"}]}]}],"thread_ts":"1617013731.294200","parent_user_id":"U01CQTKB86N"},{"client_msg_id":"170aee12-4828-47cd-9647-8de37ee3491a","type":"message","text":"This does not sound good: “Warning: Loading BSON files is not safe from malicious or erroneously constructed data. Loading BSON files can cause arbitrary code to execute on your machine. Do not load files from unknown or untrusted sources.”","user":"U01CQTKB86N","ts":"1617034968.298700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ln5tG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This does not sound good: “Warning: Loading BSON files is not safe from malicious or erroneously constructed data. Loading BSON files can cause arbitrary code to execute on your machine. Do not load files from unknown or untrusted sources.”"}]}]}],"thread_ts":"1617013731.294200","parent_user_id":"U01CQTKB86N"}]