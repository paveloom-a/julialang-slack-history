[{"client_msg_id":"2588e29a-6d6e-435e-a1ee-e606a373a5b9","type":"message","text":"Hey, I am working with DataFrames.jl and was wondering - is there a better/more efficient way of filtering DataFrame objects? Right now, whenever I need a sub-dataframe, I use `filter` with generally more than one condition in it but was wondering if this isn't the best way to do things. Could anyone give me some pointers/guidance on best practices with filtering dataframes in performant/effective ways? Thank you!","user":"US64J0NPQ","ts":"1614262767.066400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h76/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey, I am working with DataFrames.jl and was wondering - is there a better/more efficient way of filtering DataFrame objects? Right now, whenever I need a sub-dataframe, I use "},{"type":"text","text":"filter","style":{"code":true}},{"type":"text","text":" with generally more than one condition in it but was wondering if this isn't the best way to do things. Could anyone give me some pointers/guidance on best practices with filtering dataframes in performant/effective ways? Thank you!"}]}]}],"thread_ts":"1614262767.066400","reply_count":9,"reply_users_count":3,"latest_reply":"1614472787.101800","reply_users":["UBF9YRB6H","US64J0NPQ","U01EF0QVAB0"],"subscribed":false},{"client_msg_id":"6fe6be54-3d6c-422d-a928-03e1c8a02545","type":"message","text":"```filter([:x, :y] =&gt; ((x, y) =&gt; x == 1 || y == 2), df)```\nwill be the fastest option. But it won't return a `SubDataFrame`. You can add the keyword argument `view = true` to return a SubDataFrame.","user":"UBF9YRB6H","ts":"1614262871.066500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hcm3s","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"filter([:x, :y] => ((x, y) => x == 1 || y == 2), df)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nwill be the fastest option. But it won't return a "},{"type":"text","text":"SubDataFrame","style":{"code":true}},{"type":"text","text":". You can add the keyword argument "},{"type":"text","text":"view = true","style":{"code":true}},{"type":"text","text":" to return a SubDataFrame."}]}]}],"thread_ts":"1614262767.066400","parent_user_id":"US64J0NPQ"},{"client_msg_id":"f2208e40-0a51-4a63-bf6c-a2e318068069","type":"message","text":"With the anonymous tuple, is a row being passed in and and having a comparison performed on it based on the anonymous variables' values? Or what is going on in this syntax?","user":"US64J0NPQ","ts":"1614263647.066800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x9U2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With the anonymous tuple, is a row being passed in and and having a comparison performed on it based on the anonymous variables' values? Or what is going on in this syntax?"}]}]}],"thread_ts":"1614262767.066400","parent_user_id":"US64J0NPQ"},{"client_msg_id":"ff6a3325-2ca7-4f23-b8eb-524825c0da03","type":"message","text":"You should read the data frames docs if you don't understand this syntax. It's the standard syntax for `transform` and friends.\n\nIt's operating by row. It's doing this\n\n```anon_fun(x, y) = x == 1 || y == 2\ntokeep = anon_fun.(df.x, df.y)\ndf[tokeep, :]```\n","user":"UBF9YRB6H","ts":"1614263749.067200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RO+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You should read the data frames docs if you don't understand this syntax. It's the standard syntax for "},{"type":"text","text":"transform","style":{"code":true}},{"type":"text","text":" and friends.\n\nIt's operating by row. It's doing this\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"anon_fun(x, y) = x == 1 || y == 2\ntokeep = anon_fun.(df.x, df.y)\ndf[tokeep, :]"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1614262767.066400","parent_user_id":"US64J0NPQ"},{"client_msg_id":"e02a0960-fc1c-4419-bcaa-6b87b24d6b97","type":"message","text":"Gotcha - which part of the docs is this talked about?","user":"US64J0NPQ","ts":"1614263800.067400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7kOlj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Gotcha - which part of the docs is this talked about?"}]}]}],"thread_ts":"1614262767.066400","parent_user_id":"US64J0NPQ"},{"client_msg_id":"3728c629-b96f-433a-b84b-ca426885e43a","type":"message","text":"Hunh, I am trying your example out on my code and analogously, it says that \"x is not defined\". Any idea why?","user":"US64J0NPQ","ts":"1614264686.067600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1md1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hunh, I am trying your example out on my code and analogously, it says that \"x is not defined\". Any idea why?"}]}]}],"thread_ts":"1614262767.066400","parent_user_id":"US64J0NPQ"},{"client_msg_id":"561abf75-72af-4eef-bfe2-935113b17db0","type":"message","text":"sorry, misplaced `=&gt;`.\n\n```filter([:x, :y] =&gt; ((x, y) -&gt; x == 1 || y == 2), df)```","user":"UBF9YRB6H","ts":"1614264817.067800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XqPnR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sorry, misplaced "},{"type":"text","text":"=>","style":{"code":true}},{"type":"text","text":".\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"filter([:x, :y] => ((x, y) -> x == 1 || y == 2), df)"}]}]}],"thread_ts":"1614262767.066400","parent_user_id":"US64J0NPQ"},{"client_msg_id":"e83057ea-e9c4-4774-99b4-e1c47cdf9d65","type":"message","text":"<https://dataframes.juliadata.org/stable/lib/functions/#Filtering-rows>","user":"UBF9YRB6H","ts":"1614264869.068000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5zY","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://dataframes.juliadata.org/stable/lib/functions/#Filtering-rows"}]}]}],"thread_ts":"1614262767.066400","parent_user_id":"US64J0NPQ"},{"client_msg_id":"052d49d8-bb03-477b-abe1-642dac04fb6d","type":"message","text":"Ah should've caught that. :man-facepalming: Thanks <@UBF9YRB6H> - also, thanks for the docs. Much appreciated as always!","user":"US64J0NPQ","ts":"1614265534.068200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dOg94","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah should've caught that. "},{"type":"emoji","name":"man-facepalming"},{"type":"text","text":" Thanks "},{"type":"user","user_id":"UBF9YRB6H"},{"type":"text","text":" - also, thanks for the docs. Much appreciated as always!"}]}]}],"thread_ts":"1614262767.066400","parent_user_id":"US64J0NPQ"},{"client_msg_id":"3ccc5392-9095-44dd-89b3-210a66f6c574","type":"message","text":"Do you mean like dplyr filter()? I like DataFramesMeta.jl, the @linq data |&gt; where() can take multiple things","user":"U01EF0QVAB0","ts":"1614472787.101800","team":"T68168MUP","edited":{"user":"U01EF0QVAB0","ts":"1614472818.000000"},"blocks":[{"type":"rich_text","block_id":"aD01u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you mean like dplyr filter()? I like DataFramesMeta.jl, the @linq data |> where() can take multiple things"}]}]}],"thread_ts":"1614262767.066400","parent_user_id":"US64J0NPQ","reactions":[{"name":"thumbsup_all","users":["U017JTQFNEQ"],"count":1}]}]