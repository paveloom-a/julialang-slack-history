[{"client_msg_id":"f524b58b-c30c-44fc-82fc-69d316decfef","type":"message","text":"I have (lots of) csv files with a `Vector{Float64}` column a la `1, 2, \"[1.0, 2.0, 3.0]\"` . Is there a good way to parse this into a `DataFrame`? Since this is a one-shot script i’ve tried the hacky\n```Base.parse(::Type{Vector{Float64}}, s::String) = eval(Meta.parse(s))\ndf = CSV.read(f, DataFrame, types=Dict(:correlation=&gt;Vector{Float64}))```\nwhich works but it is very slow…","user":"U01BYANF42K","ts":"1616159455.052500","team":"T68168MUP","edited":{"user":"U01BYANF42K","ts":"1616159618.000000"},"blocks":[{"type":"rich_text","block_id":"39QBH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have (lots of) csv files with a "},{"type":"text","text":"Vector{Float64}","style":{"code":true}},{"type":"text","text":" column a la "},{"type":"text","text":"1, 2, \"[1.0, 2.0, 3.0]\"","style":{"code":true}},{"type":"text","text":" . Is there a good way to parse this into a "},{"type":"text","text":"DataFrame","style":{"code":true}},{"type":"text","text":"? Since this is a one-shot script i’ve tried the hacky\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Base.parse(::Type{Vector{Float64}}, s::String) = eval(Meta.parse(s))\ndf = CSV.read(f, DataFrame, types=Dict(:correlation=>Vector{Float64}))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which works but it is very slow…"}]}]}],"thread_ts":"1616159455.052500","reply_count":6,"reply_users_count":3,"latest_reply":"1616173891.066900","reply_users":["U67431ELR","U01BYANF42K","U681ELA87"],"subscribed":false},{"client_msg_id":"23294065-424f-4704-b78c-d38564a880aa","type":"message","text":"Maybe instead of `Meta.parse` you could use `split` and then `parse(Float64, ...)` on the elements?","user":"U67431ELR","ts":"1616160072.057700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xh=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe instead of "},{"type":"text","text":"Meta.parse","style":{"code":true}},{"type":"text","text":" you could use "},{"type":"text","text":"split","style":{"code":true}},{"type":"text","text":" and then "},{"type":"text","text":"parse(Float64, ...)","style":{"code":true}},{"type":"text","text":" on the elements?"}]}]}],"thread_ts":"1616159455.052500","parent_user_id":"U01BYANF42K"},{"client_msg_id":"a1db39d4-5339-4a62-8265-768fddc969c0","type":"message","text":"i’ve just tried  `Base.parse(::Type{Vector{Float64}}, s::String) = [Base.parse(Float64, num) for num in split(s[2:end-1], ',')`  and yeah it is more then 10x faster but feels wrong somehow…","user":"U01BYANF42K","ts":"1616160289.058000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EIN96","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"i’ve just tried  "},{"type":"text","text":"Base.parse(::Type{Vector{Float64}}, s::String) = [Base.parse(Float64, num) for num in split(s[2:end-1], ',')","style":{"code":true}},{"type":"text","text":"  and yeah it is more then 10x faster but feels wrong somehow…"}]}]}],"thread_ts":"1616159455.052500","parent_user_id":"U01BYANF42K"},{"client_msg_id":"c729e32e-a074-4892-9c0f-a402a98d3448","type":"message","text":"Why? It's also safer, as `Meta.parse` could run any code stored in the file. It might be even faster to avoid a copy using `@view s[2:end-1]`.","user":"U67431ELR","ts":"1616162071.058800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zJ/e=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why? It's also safer, as "},{"type":"text","text":"Meta.parse","style":{"code":true}},{"type":"text","text":" could run any code stored in the file. It might be even faster to avoid a copy using "},{"type":"text","text":"@view s[2:end-1]","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1616159455.052500","parent_user_id":"U01BYANF42K"},{"client_msg_id":"5801bfe0-a574-4dc6-b034-6a501716a10e","type":"message","text":"Yes, this solution is much better than the `Meta.parse` i’ve tried first. I am not that happy with the performance and overloading of Base function for a very specific case though. But i think for my problem it will work like this. Thanks!","user":"U01BYANF42K","ts":"1616163941.062500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qICL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, this solution is much better than the "},{"type":"text","text":"Meta.parse","style":{"code":true}},{"type":"text","text":" i’ve tried first. I am not that happy with the performance and overloading of Base function for a very specific case though. But i think for my problem it will work like this. Thanks!"}]}]}],"thread_ts":"1616159455.052500","parent_user_id":"U01BYANF42K"},{"client_msg_id":"af436745-79fb-452f-8a1f-496bf8ef5d30","type":"message","text":"Yeah overloading a Base function for `Vector` isn't right. It would be cleaner to be able to pass a parsing function directly. You could also define a custom type to avoid type piracy.","user":"U67431ELR","ts":"1616166406.062700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qd7w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah overloading a Base function for "},{"type":"text","text":"Vector","style":{"code":true}},{"type":"text","text":" isn't right. It would be cleaner to be able to pass a parsing function directly. You could also define a custom type to avoid type piracy."}]}]}],"thread_ts":"1616159455.052500","parent_user_id":"U01BYANF42K"},{"client_msg_id":"528122d9-d83b-4c02-b574-f3d267fba958","type":"message","text":"You can see an example of a custom type for this here: <https://github.com/JuliaData/CSV.jl/issues/740#issuecomment-695128156>","user":"U681ELA87","ts":"1616173891.066900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sMr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can see an example of a custom type for this here: "},{"type":"link","url":"https://github.com/JuliaData/CSV.jl/issues/740#issuecomment-695128156"}]}]}],"thread_ts":"1616159455.052500","parent_user_id":"U01BYANF42K","reactions":[{"name":"thumbsup_all","users":["U01BYANF42K"],"count":1}]}]