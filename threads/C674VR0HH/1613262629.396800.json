[{"client_msg_id":"252ee084-82d7-4f00-a57e-fde60141fa09","type":"message","text":"SQLite.jl seems to accept SQL strings that contain more than one SQL statement inside them. In a few quick experiments it appears to execute the first one and ignore the rest. I'm curious if I have understood the behavior correctly and, if so, if this is considered a bug. I ran into it in the course of work and had to spend a bit of time debugging before I figured out why statements that I thought were executing weren't executing.\n```julia&gt; using SQLite\n\njulia&gt; db = SQLite.DB()\nSQLite.DB(\":memory:\")\n\njulia&gt; collect(DBInterface.execute(db, \"select 1; select 2;\"))\n1-element Vector{SQLite.Row}:\n SQLite.Row: (1 = missing,)```","user":"U68M6ERG8","ts":"1613262629.396800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UKnx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"SQLite.jl seems to accept SQL strings that contain more than one SQL statement inside them. In a few quick experiments it appears to execute the first one and ignore the rest. I'm curious if I have understood the behavior correctly and, if so, if this is considered a bug. I ran into it in the course of work and had to spend a bit of time debugging before I figured out why statements that I thought were executing weren't executing.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using SQLite\n\njulia> db = SQLite.DB()\nSQLite.DB(\":memory:\")\n\njulia> collect(DBInterface.execute(db, \"select 1; select 2;\"))\n1-element Vector{SQLite.Row}:\n SQLite.Row: (1 = missing,)"}]}]}],"thread_ts":"1613262629.396800","reply_count":9,"reply_users_count":3,"latest_reply":"1613317749.404000","reply_users":["U9VG1AYSG","U68M6ERG8","U011QC7QLPL"],"subscribed":false},{"client_msg_id":"619fd238-1d1a-420e-befa-471bb4fb5443","type":"message","text":"I haven't looked at that particularly library, but it is highly likely that this comes down to the implementation in the underlying C library, which is either a bug, a feature of that particular implementation, or required for compatibility with the database","user":"U9VG1AYSG","ts":"1613263625.396900","team":"T68168MUP","edited":{"user":"U9VG1AYSG","ts":"1613263690.000000"},"blocks":[{"type":"rich_text","block_id":"c0C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven't looked at that particularly library, but it is highly likely that this comes down to the implementation in the underlying C library, which is either a bug, a feature of that particular implementation, or required for compatibility with the database"}]}]}],"thread_ts":"1613262629.396800","parent_user_id":"U68M6ERG8"},{"client_msg_id":"6158d3c1-a7fd-4376-820f-67e59c30795e","type":"message","text":"SQL libraries are always doing weird things like this because the interface libraries have all sorts of bizarre (and often ancient) conventions and arcana and all the implementations and flavors of SQL are completely different","user":"U9VG1AYSG","ts":"1613263661.397100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NV/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"SQL libraries are always doing weird things like this because the interface libraries have all sorts of bizarre (and often ancient) conventions and arcana and all the implementations and flavors of SQL are completely different"}]}]}],"thread_ts":"1613262629.396800","parent_user_id":"U68M6ERG8"},{"client_msg_id":"502e9571-3e26-413e-8c50-cf80d310ffe8","type":"message","text":"bottom line: you can't really ask for consistency on these types of things from the Julia wrappers, though, there is a small chance that it is a bug caused by the wrapper itself","user":"U9VG1AYSG","ts":"1613263799.397400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jGGPs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"bottom line: you can't really ask for consistency on these types of things from the Julia wrappers, though, there is a small chance that it is a bug caused by the wrapper itself"}]}]}],"thread_ts":"1613262629.396800","parent_user_id":"U68M6ERG8"},{"client_msg_id":"fa89e4b0-6b77-413d-88e8-27ca14be9e2b","type":"message","text":"I noticed another odd behavior which may be a bug while investigating this one: `collect` on a query result gives missing results while if you turn it into a DataFrame you see the actual values (which are not missing)","user":"U68M6ERG8","ts":"1613263828.397600","team":"T68168MUP","edited":{"user":"U68M6ERG8","ts":"1613285742.000000"},"blocks":[{"type":"rich_text","block_id":"JLsiA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I noticed another odd behavior which may be a bug while investigating this one: "},{"type":"text","text":"collect","style":{"code":true}},{"type":"text","text":" on a query result gives missing results while if you turn it into a DataFrame you see the actual values (which are not missing)"}]}]}],"thread_ts":"1613262629.396800","parent_user_id":"U68M6ERG8"},{"client_msg_id":"7999d08a-c7da-4707-bc32-7778465a6d9b","type":"message","text":"I'm not sure if the original question might have to do with an underlying setting in the C library that can change whether SQLite accepts multiple queries, I haven't looked at that and just changed my code to execute queries individually","user":"U68M6ERG8","ts":"1613263861.397800","team":"T68168MUP","edited":{"user":"U68M6ERG8","ts":"1613285790.000000"},"blocks":[{"type":"rich_text","block_id":"CFc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure if the original question might have to do with an underlying setting in the C library that can change whether SQLite accepts multiple queries, I haven't looked at that and just changed my code to execute queries individually"}]}]}],"thread_ts":"1613262629.396800","parent_user_id":"U68M6ERG8"},{"type":"message","text":"","files":[{"id":"F01N7U8VA12","created":1613263874,"timestamp":1613263874,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U68M6ERG8","editable":false,"size":133151,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01N7U8VA12/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01N7U8VA12/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01N7U8VA12-b398d7b297/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01N7U8VA12-b398d7b297/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01N7U8VA12-b398d7b297/image_360.png","thumb_360_w":360,"thumb_360_h":198,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01N7U8VA12-b398d7b297/image_480.png","thumb_480_w":480,"thumb_480_h":264,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01N7U8VA12-b398d7b297/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01N7U8VA12-b398d7b297/image_720.png","thumb_720_w":720,"thumb_720_h":396,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01N7U8VA12-b398d7b297/image_800.png","thumb_800_w":800,"thumb_800_h":440,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01N7U8VA12-b398d7b297/image_960.png","thumb_960_w":960,"thumb_960_h":528,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01N7U8VA12-b398d7b297/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":563,"original_w":1644,"original_h":904,"thumb_tiny":"AwAaADDOzk9aMH1o2kev5UmPc0AJg0UuKMUAJRS4pMUAP+bvmmkEmjJozQAmKMUvY0lABijFFFAH/9k=","permalink":"https://julialang.slack.com/files/U68M6ERG8/F01N7U8VA12/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01N7U8VA12-aad6069e95","is_starred":false,"has_rich_preview":false}],"upload":false,"user":"U68M6ERG8","display_as_bot":false,"ts":"1613263877.398000","thread_ts":"1613262629.396800","parent_user_id":"U68M6ERG8"},{"client_msg_id":"b5ef1e69-472d-417d-b839-884a9832c2a0","type":"message","text":"I've into the `collect` one, it's falling back to the Base  implementation that doesnt know the Row objects from SQlite.jl are lazy. You can use something like `Tables.columntable` if you want the values not in a DataFrame","user":"U011QC7QLPL","ts":"1613317139.403600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T4l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've into the "},{"type":"text","text":"collect","style":{"code":true}},{"type":"text","text":" one, it's falling back to the Base  implementation that doesnt know the Row objects from SQlite.jl are lazy. You can use something like "},{"type":"text","text":"Tables.columntable","style":{"code":true}},{"type":"text","text":" if you want the values not in a DataFrame"}]}]}],"thread_ts":"1613262629.396800","parent_user_id":"U68M6ERG8"},{"client_msg_id":"5476a24e-e5ef-4692-a6f4-8b5c9b3b7a25","type":"message","text":"Thanks Chris. That still feels like a bug since the printing of row indicates missing values, rather than values that aren't loaded yet (whch IIRC is what is happening). Re: my original question, it looks like executing one statement at a time is the underlying behavior of SQLite.","user":"U68M6ERG8","ts":"1613317467.403800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=6n4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks Chris. That still feels like a bug since the printing of row indicates missing values, rather than values that aren't loaded yet (whch IIRC is what is happening). Re: my original question, it looks like executing one statement at a time is the underlying behavior of SQLite."}]}]}],"thread_ts":"1613262629.396800","parent_user_id":"U68M6ERG8"},{"client_msg_id":"29a4217d-587c-48c3-a699-9a35b988ed4b","type":"message","text":"Yep, I think SQlite.jl probably could/should override `Base.collect`  to fix.","user":"U011QC7QLPL","ts":"1613317749.404000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ht2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yep, I think SQlite.jl probably could/should override "},{"type":"text","text":"Base.collect","style":{"code":true}},{"type":"text","text":"  to fix."}]}]}],"thread_ts":"1613262629.396800","parent_user_id":"U68M6ERG8"}]