[{"client_msg_id":"a92ba145-d94a-4a36-9bc9-b0813b2286ad","type":"message","text":"It will try to coerce a column type to a small union if possible and serialize accordingly. Otherwise, it will throw an error","user":"U681ELA87","ts":"1617288430.360000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aT/a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It will try to coerce a column type to a small union if possible and serialize accordingly. Otherwise, it will throw an error"}]}]}],"thread_ts":"1617288430.360000","reply_count":16,"reply_users_count":2,"latest_reply":"1617313059.370900","reply_users":["U69J94HT9","U681ELA87"],"is_locked":false,"subscribed":false},{"client_msg_id":"964d6b26-20d3-4942-989b-bf374e746279","type":"message","text":"How many different types does it have to see before it gives up and errors?","user":"U69J94HT9","ts":"1617306278.366800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TzMs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How many different types does it have to see before it gives up and errors?"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"3612ad90-9d2a-4b07-a184-6a04d1bc6223","type":"message","text":"as long as they’re all concrete, there’s currently no limit. it can treat any number of Union eltypes as a `DenseUnion` vector type, as long as they’re concrete.","user":"U681ELA87","ts":"1617306592.367000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uApI9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as long as they’re all concrete, there’s currently no limit. it can treat any number of Union eltypes as a "},{"type":"text","text":"DenseUnion","style":{"code":true}},{"type":"text","text":" vector type, as long as they’re concrete."}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"befd1553-cfa9-4379-84ab-8d8de87e2206","type":"message","text":"Hmm I'm not sure I understand, since every value has a concrete type. Or do type parameters also need to be concrete?","user":"U69J94HT9","ts":"1617306778.367200","team":"T68168MUP","edited":{"user":"U69J94HT9","ts":"1617306784.000000"},"blocks":[{"type":"rich_text","block_id":"zjhWK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm I'm not sure I understand, since every value has a concrete type. Or do type parameters also need to be concrete?"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"eb712eaa-8bb6-4af9-9d63-10f387018902","type":"message","text":"Hmm, well it’s a bit tricky, but currently relies on this promotion mechanism:\n```function promoteunion(T, S)\n    new = promote_type(T, S)\n    return new === Any ? Union{T, S} : new\nend```\nWhat we’re trying to balance here is that if, for example, you have `Any[1, 1.0]` that we end up with final eltype of `Float64` instead of `Union{Int, Float64}`, but want to avoid ever getting an “inferred” eltype of, say, `Real` .","user":"U681ELA87","ts":"1617307094.367500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1aD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, well it’s a bit tricky, but currently relies on this promotion mechanism:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function promoteunion(T, S)\n    new = promote_type(T, S)\n    return new === Any ? Union{T, S} : new\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"What we’re trying to balance here is that if, for example, you have "},{"type":"text","text":"Any[1, 1.0]","style":{"code":true}},{"type":"text","text":" that we end up with final eltype of "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"Union{Int, Float64}","style":{"code":true}},{"type":"text","text":", but want to avoid ever getting an “inferred” eltype of, say, "},{"type":"text","text":"Real","style":{"code":true}},{"type":"text","text":" ."}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"f5bdfb05-b7bb-457e-96fd-806e0a141f4b","type":"message","text":"So I think for the majority of cases, we’ll end up with `Union{…}`s that should work fine, but there might be cases where they’ve defined promotion rules that lead to some non-Any abstract type which we would end up erroring on.","user":"U681ELA87","ts":"1617307196.367700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M4S9T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I think for the majority of cases, we’ll end up with "},{"type":"text","text":"Union{…}","style":{"code":true}},{"type":"text","text":"s that should work fine, but there might be cases where they’ve defined promotion rules that lead to some non-Any abstract type which we would end up erroring on."}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"25bac68c-12be-42d0-8615-e89e82b30d1d","type":"message","text":"perhaps we should just change that definition to:\n```function promoteunion(T, S)\n    new = promote_type(T, S)\n    return isabstracttype(new) ? Union{T, S} : new\nend```\nsince then we’re avoiding the abstract cases","user":"U681ELA87","ts":"1617307319.367900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c6Vmz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"perhaps we should just change that definition to:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function promoteunion(T, S)\n    new = promote_type(T, S)\n    return isabstracttype(new) ? Union{T, S} : new\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"since then we’re avoiding the abstract cases"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87","reactions":[{"name":"+1","users":["U69J94HT9"],"count":1}]},{"client_msg_id":"1b72dd77-7795-47a6-a618-c33ea0a952fe","type":"message","text":"that change would match my intuition and cover more cases I think :slightly_smiling_face:","user":"U69J94HT9","ts":"1617311801.369100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Us","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that change would match my intuition and cover more cases I think "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"9b4b3999-4cbf-4ec7-8ba1-7699fb5be015","type":"message","text":"PR up: <https://github.com/JuliaData/Arrow.jl/pull/162>","user":"U681ELA87","ts":"1617312392.369300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V27x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"PR up: "},{"type":"link","url":"https://github.com/JuliaData/Arrow.jl/pull/162"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"bfd423ea-5222-47f8-9eb7-e747028f6494","type":"message","text":"awesome! tagged the wrong person though :wink:","user":"U69J94HT9","ts":"1617312545.369500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xU2T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"awesome! tagged the wrong person though "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"22cd6947-5d5f-4645-b5c1-686c5989b3a3","type":"message","text":"oops!","user":"U681ELA87","ts":"1617312584.369700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ai+DR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oops!"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"4f947b22-31a0-4726-a617-e3d7e9c7f5e5","type":"message","text":"Looks like `@IAMED` isn’t an active github user, so maybe you could request to take over the username!","user":"U681ELA87","ts":"1617312708.369900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8uLDu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks like "},{"type":"text","text":"@IAMED","style":{"code":true}},{"type":"text","text":" isn’t an active github user, so maybe you could request to take over the username!"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"49f2afc6-c39b-4084-888a-159d315385fe","type":"message","text":"oh no I'm already iamed2 everywhere\n\nI think if I switch to anything it'll be some clearer variation on my name","user":"U69J94HT9","ts":"1617312753.370100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fXKGB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh no I'm already iamed2 everywhere\n\nI think if I switch to anything it'll be some clearer variation on my name"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"add4751b-4188-41cf-ae8c-4dd28b3fcc12","type":"message","text":"Makes sense. I’m curious if `iamed2` stands for anything?","user":"U681ELA87","ts":"1617312815.370300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uxxI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Makes sense. I’m curious if "},{"type":"text","text":"iamed2","style":{"code":true}},{"type":"text","text":" stands for anything?"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"85d243fc-4f3c-4525-bf12-bc46717375be","type":"message","text":"I Am Eric Davies, and the 2 was because the online java pinball game I played when I was 11 needed a 6-character user name, but I rationalized it with my grandpa also being E. D. (Edward Davies)","user":"U69J94HT9","ts":"1617312893.370500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NAY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I Am Eric Davies, and the 2 was because the online java pinball game I played when I was 11 needed a 6-character user name, but I rationalized it with my grandpa also being E. D. (Edward Davies)"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"ae1b7895-af46-4667-a314-7993f795b767","type":"message","text":"haha, nice. I love hearing back stories like that. I had the `karbarcca` handle for quite a while until switching to `quinnj`. I had a friend sign me up for a hotmail account way back and I still don’t know where he came up with `karbarcca`, but I’ve kept it ever since because it’s so handy as an _always_ available unique username.","user":"U681ELA87","ts":"1617313018.370700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P64","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"haha, nice. I love hearing back stories like that. I had the "},{"type":"text","text":"karbarcca","style":{"code":true}},{"type":"text","text":" handle for quite a while until switching to "},{"type":"text","text":"quinnj","style":{"code":true}},{"type":"text","text":". I had a friend sign me up for a hotmail account way back and I still don’t know where he came up with "},{"type":"text","text":"karbarcca","style":{"code":true}},{"type":"text","text":", but I’ve kept it ever since because it’s so handy as an "},{"type":"text","text":"always","style":{"italic":true}},{"type":"text","text":" available unique username."}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"},{"client_msg_id":"4bb9fcd6-6c97-4cd7-b653-b7ee36da5d66","type":"message","text":"haha I like that even you don't know where it came from","user":"U69J94HT9","ts":"1617313059.370900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"euko","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"haha I like that even you don't know where it came from"}]}]}],"thread_ts":"1617288430.360000","parent_user_id":"U681ELA87"}]