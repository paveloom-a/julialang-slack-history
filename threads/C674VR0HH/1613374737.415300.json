[{"client_msg_id":"b26db966-9a05-4127-92ec-4362d7dd4501","type":"message","text":"Following up from the previous thread: Is there a discussion somewhere about pros/cons of `TypedTables` vs. `DataFrames` and when to use one or the other? It seems like for the case where one is reading data in from a CSV or SQL query and using that as a read-only data source, `TypedTables` will be more performant.","user":"U017JTQFNEQ","ts":"1613374737.415300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t7k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Following up from the previous thread: Is there a discussion somewhere about pros/cons of "},{"type":"text","text":"TypedTables","style":{"code":true}},{"type":"text","text":" vs. "},{"type":"text","text":"DataFrames","style":{"code":true}},{"type":"text","text":" and when to use one or the other? It seems like for the case where one is reading data in from a CSV or SQL query and using that as a read-only data source, "},{"type":"text","text":"TypedTables","style":{"code":true}},{"type":"text","text":" will be more performant."}]}]}],"thread_ts":"1613374737.415300","reply_count":7,"reply_users_count":4,"latest_reply":"1613382415.417300","reply_users":["U7PGB5DU3","U017JTQFNEQ","U6A936746","U66QZ3QF3"],"subscribed":false},{"client_msg_id":"c612b886-5f6c-4012-8b0a-38beef590797","type":"message","text":"do they have the \"same\" features though?","user":"U7PGB5DU3","ts":"1613375624.415700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W8gHg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"do they have the \"same\" features though?"}]}]}],"thread_ts":"1613374737.415300","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"5e78ca96-982e-4d5e-8ba6-fd622478ee36","type":"message","text":"<@U7PGB5DU3> that’s what i’m asking for. A feature comparison.","user":"U017JTQFNEQ","ts":"1613375966.415900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mui","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7PGB5DU3"},{"type":"text","text":" that’s what i’m asking for. A feature comparison."}]}]}],"thread_ts":"1613374737.415300","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"39df71b1-51a4-4615-be06-c7e4d6d4cd70","type":"message","text":"sorry, thought you asked about the difference in speeds.","user":"U7PGB5DU3","ts":"1613376529.416100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Tu8F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sorry, thought you asked about the difference in speeds."}]}]}],"thread_ts":"1613374737.415300","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"d918a391-8b34-4f1b-b942-ba38fcf227ba","type":"message","text":"can i have both? :slightly_smiling_face:","user":"U017JTQFNEQ","ts":"1613376560.416300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lwOo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can i have both? "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1613374737.415300","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"8d4bfd2c-d355-4296-970b-f245290b109c","type":"message","text":"But if they have different functions (like, one is more feature complete than the other) then it's not really fair. In any case, I don't have the stats you need.","user":"U7PGB5DU3","ts":"1613377443.416500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S/OI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But if they have different functions (like, one is more feature complete than the other) then it's not really fair. In any case, I don't have the stats you need."}]}]}],"thread_ts":"1613374737.415300","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"37af1bac-9252-4e13-b7ae-f0141be8c40d","type":"message","text":"How much do you like compiling? TypedTables needs to recompile everything for each \"schema\".\nDataFrames only once","user":"U6A936746","ts":"1613378770.416700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wUq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How much do you like compiling? TypedTables needs to recompile everything for each \"schema\".\nDataFrames only once"}]}]}],"thread_ts":"1613374737.415300","parent_user_id":"U017JTQFNEQ"},{"client_msg_id":"926e834e-7f4d-4083-8662-850c9944c094","type":"message","text":"Indeed. :)\n\nTypedTables is a little less \"opinionated\" and let's you manipulate things using `map`,  `filter`, `reduce` and other functions from SplitApplyCombine.jl, etc. It can be faster for some things, but that's not guaranteed, and was meant in a similar spirit to StructArrays, where sometimes you want to think of each row like a strongly-typed struct, and sometimes you want to think of columns of a table, so it's probably ideal for long, narrow tables (it was invented with point clouds and similar in mind). If you feel comforable with `Vector` and `NamedTuple` you'd probably be comfortable with TypedTables. It's seen less maintanence than DataFrames but still is functional and I'd like to push the ideas further (but have limited time).\n\nDataFrames is a larger and more developed framework with I'd say more functionality and to a reasonable extent it's own APIs. It is well maintained and is evolving and there has been recent work to make operations like grouping (done?) and joining (in progress?) much faster. If you've used pandas or R you'd probably feel quite comfortable with it's APIs.\n\nUnless you know you are speed limited I'd focus on which you think has better programmer productivity for what you are doing.","user":"U66QZ3QF3","ts":"1613382415.417300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0pT/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Indeed. :)\n\nTypedTables is a little less \"opinionated\" and let's you manipulate things using "},{"type":"text","text":"map","style":{"code":true}},{"type":"text","text":",  "},{"type":"text","text":"filter","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" and other functions from SplitApplyCombine.jl, etc. It can be faster for some things, but that's not guaranteed, and was meant in a similar spirit to StructArrays, where sometimes you want to think of each row like a strongly-typed struct, and sometimes you want to think of columns of a table, so it's probably ideal for long, narrow tables (it was invented with point clouds and similar in mind). If you feel comforable with "},{"type":"text","text":"Vector","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"NamedTuple","style":{"code":true}},{"type":"text","text":" you'd probably be comfortable with TypedTables. It's seen less maintanence than DataFrames but still is functional and I'd like to push the ideas further (but have limited time).\n\nDataFrames is a larger and more developed framework with I'd say more functionality and to a reasonable extent it's own APIs. It is well maintained and is evolving and there has been recent work to make operations like grouping (done?) and joining (in progress?) much faster. If you've used pandas or R you'd probably feel quite comfortable with it's APIs.\n\nUnless you know you are speed limited I'd focus on which you think has better programmer productivity for what you are doing."}]}]}],"thread_ts":"1613374737.415300","parent_user_id":"U017JTQFNEQ","reactions":[{"name":"+1","users":["U8JAMQGQY","U017JTQFNEQ"],"count":2}]}]