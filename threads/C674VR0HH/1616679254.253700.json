[{"client_msg_id":"7db74b6b-e58d-41e3-8ab0-15e4b2f2adfc","type":"message","text":"I feel kinda silly but is it possible to groupby, transform without ungrouping, and then sort by this new column?","user":"U01C2E6TYEM","ts":"1616679254.253700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nAly","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I feel kinda silly but is it possible to groupby, transform without ungrouping, and then sort by this new column?"}]}]}],"thread_ts":"1616679254.253700","reply_count":13,"reply_users_count":4,"latest_reply":"1616707456.259000","reply_users":["U8JAMQGQY","U8JP5B9T2","UBF9YRB6H","U01C2E6TYEM"],"is_locked":false,"subscribed":false},{"client_msg_id":"fa48c60b-f9e4-40f9-bb5e-c322347d69ba","type":"message","text":"there are several ways to do it, but the simplest is I think (I hope I understood correctly what you want):\n```combine(groupby(df, cols), ungroup=false) do\n    df = copy(sdf)\n    # here add a new column\n    return sort!(df, :newcolumn)\nend```","user":"U8JAMQGQY","ts":"1616681554.254400","team":"T68168MUP","edited":{"user":"U8JAMQGQY","ts":"1616688393.000000"},"blocks":[{"type":"rich_text","block_id":"G1=b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there are several ways to do it, but the simplest is I think (I hope I understood correctly what you want):\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"combine(groupby(df, cols), ungroup=false) do\n    df = copy(sdf)\n    # here add a new column\n    return sort!(df, :newcolumn)\nend"}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"f4d8fdf3-1b71-493d-8c8f-81f5b7b94e52","type":"message","text":"I don't think so, I think he wants a grouped dataframe out the other end, just with the new column and now sorted. This would return an ungrouped df, right?","user":"U8JP5B9T2","ts":"1616687628.255400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4mpq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think so, I think he wants a grouped dataframe out the other end, just with the new column and now sorted. This would return an ungrouped df, right?"}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"74020a78-7a72-4478-af4a-b094c688c4be","type":"message","text":"ah - I have forgotten to add `ungroup=false`. Fixed","user":"U8JAMQGQY","ts":"1616688381.255600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ua4hZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah - I have forgotten to add "},{"type":"text","text":"ungroup=false","style":{"code":true}},{"type":"text","text":". Fixed"}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"175bbca8-0f6a-4f38-9966-51594f63693d","type":"message","text":"you can't sort the observations in a grouped data frame. that will mess up the inner-working of the grouping. So you will have to ungroup before you sort. The way to do this is `parent` right?","user":"UBF9YRB6H","ts":"1616698551.256600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QLxvv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can't sort the observations in a grouped data frame. that will mess up the inner-working of the grouping. So you will have to ungroup before you sort. The way to do this is "},{"type":"text","text":"parent","style":{"code":true}},{"type":"text","text":" right?"}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"bcec155c-1489-4913-bd71-f64fea7e321e","type":"message","text":"Yeah Kevin's correct in terms of what I'm looking for. I find it strange how you can't sort a grouped data frame. How does it mess up the inner workings? Where can I read about these inner workings. I'd love to use DataFrames more but I feel like I don't understand it well enough so everything feels unintuitive.","user":"U01C2E6TYEM","ts":"1616704586.257300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AtNZu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah Kevin's correct in terms of what I'm looking for. I find it strange how you can't sort a grouped data frame. How does it mess up the inner workings? Where can I read about these inner workings. I'd love to use DataFrames more but I feel like I don't understand it well enough so everything feels unintuitive."}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"8962bfcd-c8ca-4f5f-abfa-9413e87671f4","type":"message","text":"When you say \"sort\" you can mean two different things:\n1. sort groups\n2. sort row within groups, but keeping the order of groups unchanged\nwhich of these behaviors are you looking for?","user":"U8JAMQGQY","ts":"1616705558.257500","team":"T68168MUP","edited":{"user":"U8JAMQGQY","ts":"1616705604.000000"},"blocks":[{"type":"rich_text","block_id":"exB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"When you say \"sort\" you can mean two different things:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sort groups"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"sort row within groups, but keeping the order of groups unchanged"}]}],"style":"ordered","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"which of these behaviors are you looking for?"}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"10481ce0-e48e-4ec5-87cb-a3c1ef166881","type":"message","text":"I take back that it messes up the inner workings. I think it actually works fine.\n\n```julia&gt; df = DataFrame(a = [1, 1, 2, 2], b = [6, 5, 4, 3])\n4×2 DataFrame\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1      6\n   2 │     1      5\n   3 │     2      4\n   4 │     2      3\n\njulia&gt; gd = groupby(df, :a)\nGroupedDataFrame with 2 groups based on key: a\nFirst Group (2 rows): a = 1\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1      6\n   2 │     1      5\n⋮\nLast Group (2 rows): a = 2\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     2      4\n   2 │     2      3\n\njulia&gt; sort!(df, :b);\n\njulia&gt; gd\nGroupedDataFrame with 2 groups based on key: a\nFirst Group (2 rows): a = 2\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     2      3\n   2 │     2      4\n⋮\nLast Group (2 rows): a = 1\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1      5\n   2 │     1      6```\nBut w.r.t. calling `sort!` on a `GroupedDataFrame` directly, the problem is that a `GroupedDataFrame` is an iterator of `SubDataFrame`s. So you have this contradiction. Should `sort(gd::GroupedDataFrame)` re-order the sub-dataframes that it iterates through? Or should re-order the rows of the data frame.\n\nBecause of this inconsistency, we just throw an error. This enables to do behavior that feels more \"intuitive\" in the future.","user":"UBF9YRB6H","ts":"1616705564.257700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z/dE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I take back that it messes up the inner workings. I think it actually works fine.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> df = DataFrame(a = [1, 1, 2, 2], b = [6, 5, 4, 3])\n4×2 DataFrame\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1      6\n   2 │     1      5\n   3 │     2      4\n   4 │     2      3\n\njulia> gd = groupby(df, :a)\nGroupedDataFrame with 2 groups based on key: a\nFirst Group (2 rows): a = 1\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1      6\n   2 │     1      5\n⋮\nLast Group (2 rows): a = 2\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     2      4\n   2 │     2      3\n\njulia> sort!(df, :b);\n\njulia> gd\nGroupedDataFrame with 2 groups based on key: a\nFirst Group (2 rows): a = 2\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     2      3\n   2 │     2      4\n⋮\nLast Group (2 rows): a = 1\n Row │ a      b     \n     │ Int64  Int64 \n─────┼──────────────\n   1 │     1      5\n   2 │     1      6"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nBut w.r.t. calling "},{"type":"text","text":"sort!","style":{"code":true}},{"type":"text","text":" on a "},{"type":"text","text":"GroupedDataFrame","style":{"code":true}},{"type":"text","text":" directly, the problem is that a "},{"type":"text","text":"GroupedDataFrame","style":{"code":true}},{"type":"text","text":" is an iterator of `SubDataFrame`s. So you have this contradiction. Should "},{"type":"text","text":"sort(gd::GroupedDataFrame)","style":{"code":true}},{"type":"text","text":" re-order the sub-dataframes that it iterates through? Or should re-order the rows of the data frame.\n\nBecause of this inconsistency, we just throw an error. This enables to do behavior that feels more \"intuitive\" in the future."}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"4d843bea-b0a3-4204-9d45-db34abd94773","type":"message","text":"doing it this way is not good. It will mess up `GroupdeDataFrame` as you commented above. You either have to sort whole groups or sort within-group and I am not sure which operation <@U01C2E6TYEM> is looking for as they are fundamentally different and both potentially make sense.","user":"U8JAMQGQY","ts":"1616705710.258000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xrX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"doing it this way is not good. It will mess up "},{"type":"text","text":"GroupdeDataFrame","style":{"code":true}},{"type":"text","text":" as you commented above. You either have to sort whole groups or sort within-group and I am not sure which operation "},{"type":"user","user_id":"U01C2E6TYEM"},{"type":"text","text":" is looking for as they are fundamentally different and both potentially make sense."}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"000605f0-483c-40ee-9edd-3486703276ca","type":"message","text":"Regarding the mental model - I find it cleanest if I think of `GroupedDataFrame` as a way to add an index to a data frame.","user":"U8JAMQGQY","ts":"1616705843.258200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vxf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Regarding the mental model - I find it cleanest if I think of "},{"type":"text","text":"GroupedDataFrame","style":{"code":true}},{"type":"text","text":" as a way to add an index to a data frame."}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"58451319-d6c5-4cca-9d34-a873154e733b","type":"message","text":"I agree with this clean model, I really like how `DataFrames.jl` prints a `GroupedDataFrame` which demonstrates how the data is split. As far as the `sort` function goes I have never thought to sort the order of the groups as opposed to sorting each group by a row. I understand that if a `GroupedDataFrame` is iterable then it is a bit ambiguous to call `sort` on it, but to me all ambiguity is removed when you specify that you want to sort by a certain column. How does one sort an iterable of DataFrames by a column? I understand why you would want this to throw an error but perhaps there should be an argument for `sort` that allows you to specify rather than just making it impossible to sort a grouped data frame.","user":"U01C2E6TYEM","ts":"1616706372.258400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nR4ZK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree with this clean model, I really like how "},{"type":"text","text":"DataFrames.jl","style":{"code":true}},{"type":"text","text":" prints a "},{"type":"text","text":"GroupedDataFrame","style":{"code":true}},{"type":"text","text":" which demonstrates how the data is split. As far as the "},{"type":"text","text":"sort","style":{"code":true}},{"type":"text","text":" function goes I have never thought to sort the order of the groups as opposed to sorting each group by a row. I understand that if a "},{"type":"text","text":"GroupedDataFrame","style":{"code":true}},{"type":"text","text":" is iterable then it is a bit ambiguous to call "},{"type":"text","text":"sort","style":{"code":true}},{"type":"text","text":" on it, but to me all ambiguity is removed when you specify that you want to sort by a certain column. How does one sort an iterable of DataFrames by a column? I understand why you would want this to throw an error but perhaps there should be an argument for "},{"type":"text","text":"sort","style":{"code":true}},{"type":"text","text":" that allows you to specify rather than just making it impossible to sort a grouped data frame."}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"822a9738-295f-4386-861f-6d368fbaafa6","type":"message","text":"We could add `sort` to `GroupedDataFrame`. What we say is that it would have to be very carefully designed to avoid ambiguities. Can you please open an issue on GitHub to discuss this?","user":"U8JAMQGQY","ts":"1616707254.258600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yGXh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We could add "},{"type":"text","text":"sort","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"GroupedDataFrame","style":{"code":true}},{"type":"text","text":". What we say is that it would have to be very carefully designed to avoid ambiguities. Can you please open an issue on GitHub to discuss this?"}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"fb219b9d-dd3c-4923-a69f-37ae14d5d89e","type":"message","text":"I agree, but we have definitely seen users expect `sort(gd)` to return a re-sorted grouped data frame.\n\nDataFramesMeta has the macro `@orderby` which is *not* called sort deliberately to avoid this ambiguity in expectation. It currently errors, just like `sort`, but is another avenue for flexible behavior we can change.","user":"UBF9YRB6H","ts":"1616707363.258800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"T3D0Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree, but we have definitely seen users expect "},{"type":"text","text":"sort(gd)","style":{"code":true}},{"type":"text","text":" to return a re-sorted grouped data frame.\n\nDataFramesMeta has the macro "},{"type":"text","text":"@orderby","style":{"code":true}},{"type":"text","text":" which is "},{"type":"text","text":"not","style":{"bold":true}},{"type":"text","text":" called sort deliberately to avoid this ambiguity in expectation. It currently errors, just like "},{"type":"text","text":"sort","style":{"code":true}},{"type":"text","text":", but is another avenue for flexible behavior we can change."}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"},{"client_msg_id":"6ccca0df-d6a2-4f09-9b41-b0c8701f103c","type":"message","text":"and this is what `sort` kwarg in `groupby` does - so indeed we have to be careful here.","user":"U8JAMQGQY","ts":"1616707456.259000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b6LiE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and this is what "},{"type":"text","text":"sort","style":{"code":true}},{"type":"text","text":" kwarg in "},{"type":"text","text":"groupby","style":{"code":true}},{"type":"text","text":" does - so indeed we have to be careful here."}]}]}],"thread_ts":"1616679254.253700","parent_user_id":"U01C2E6TYEM"}]