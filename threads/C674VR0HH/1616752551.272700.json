[{"client_msg_id":"da0c85b0-d279-4aba-b470-a1e5a7b5edd9","type":"message","text":"I have a grouped and sorted dataframe and want to add a column with `transform` that is just an integer from 1 to n_groups. How do I do that?\n\nThere must be something like `nrow`, maybe `igroup` . data.table has `.GRP` for example\n```DT[ , i := .GRP, by = key(DT)]```","user":"UK1BNFHFV","ts":"1616752551.272700","team":"T68168MUP","edited":{"user":"UK1BNFHFV","ts":"1616752780.000000"},"blocks":[{"type":"rich_text","block_id":"oIy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a grouped and sorted dataframe and want to add a column with "},{"type":"text","text":"transform","style":{"code":true}},{"type":"text","text":" that is just an integer from 1 to n_groups. How do I do that?\n\nThere must be something like "},{"type":"text","text":"nrow","style":{"code":true}},{"type":"text","text":", maybe "},{"type":"text","text":"igroup","style":{"code":true}},{"type":"text","text":" . data.table has "},{"type":"text","text":".GRP","style":{"code":true}},{"type":"text","text":" for example\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"DT[ , i := .GRP, by = key(DT)]"}]}]}],"thread_ts":"1616752551.272700","reply_count":10,"reply_users_count":3,"latest_reply":"1616780515.278400","reply_users":["UBF9YRB6H","UK1BNFHFV","U66M57AN4"],"is_locked":false,"subscribed":false},{"client_msg_id":"70cfd583-084c-44d2-bca7-90d6954125e6","type":"message","text":"No, no function for that, unfortunately.\n\nCan't think of an obvious way to do that atm","user":"UBF9YRB6H","ts":"1616771180.274300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tkD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, no function for that, unfortunately.\n\nCan't think of an obvious way to do that atm"}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"},{"client_msg_id":"8867721c-082a-4312-8566-9960dc26a5f7","type":"message","text":"I saw some thread on github where this was discussed, are people opposed to just adding it to the minilanguage? there are really not many cases like this, index of group is one of them","user":"UK1BNFHFV","ts":"1616772024.274500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ivhN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I saw some thread on github where this was discussed, are people opposed to just adding it to the minilanguage? there are really not many cases like this, index of group is one of them"}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"},{"client_msg_id":"a0fb0546-548e-4757-a34e-857ffa089979","type":"message","text":"so I don't think adding it would \"open the floodgates\"","user":"UK1BNFHFV","ts":"1616772044.274700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Y4u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so I don't think adding it would \"open the floodgates\""}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"},{"client_msg_id":"B11F5C39-470A-459E-A55B-B941EA6C1A26","type":"message","text":"Can you map over enumerate? Should give you the groups ","user":"U66M57AN4","ts":"1616775276.275400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"be4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can you map over enumerate? Should give you the groups "}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"},{"client_msg_id":"0e227cb3-9382-422b-92bb-cd3d3096550d","type":"message","text":"But you can't create new variables inside the sub-dataframes, so you would need to pre-declare the variables.\n\nAlso, direct comparisons with `NamedTuples` aren't allowed unless you have <https://github.com/JuliaData/DataFrames.jl/pull/2669>","user":"UBF9YRB6H","ts":"1616776429.275600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jKR/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But you can't create new variables inside the sub-dataframes, so you would need to pre-declare the variables.\n\nAlso, direct comparisons with "},{"type":"text","text":"NamedTuples","style":{"code":true}},{"type":"text","text":" aren't allowed unless you have "},{"type":"link","url":"https://github.com/JuliaData/DataFrames.jl/pull/2669"}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"},{"client_msg_id":"4c44ff4c-379d-48a2-87b4-c21b1e7e8d64","type":"message","text":"so you can't use `findfirst` or anything.","user":"UBF9YRB6H","ts":"1616776458.275800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KUGeB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so you can't use "},{"type":"text","text":"findfirst","style":{"code":true}},{"type":"text","text":" or anything."}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"},{"client_msg_id":"736247bc-65cf-41b4-b9bb-01a53f77dee0","type":"message","text":"ahh yeah.","user":"U66M57AN4","ts":"1616776612.276000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WM89","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ahh yeah."}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"},{"client_msg_id":"8ae69c71-6c8d-4755-bf2b-1327bf7807a9","type":"message","text":"I think this is sufficiently hard that a \"built-in\" solution would be nice. But definitely a 1.X thing.\n\nI also don't know if it needs to go in the mini-language. Maybe it can be a standalone function.","user":"UBF9YRB6H","ts":"1616776823.276200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4wl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think this is sufficiently hard that a \"built-in\" solution would be nice. But definitely a 1.X thing.\n\nI also don't know if it needs to go in the mini-language. Maybe it can be a standalone function."}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"},{"client_msg_id":"b2305739-ebb9-4811-a24d-bd00b6e72be9","type":"message","text":"ah, the internal parameters `groups`. `gd.groups` gets what you want","user":"UBF9YRB6H","ts":"1616777990.276400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KKP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah, the internal parameters "},{"type":"text","text":"groups","style":{"code":true}},{"type":"text","text":". "},{"type":"text","text":"gd.groups","style":{"code":true}},{"type":"text","text":" gets what you want"}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"},{"client_msg_id":"BBEC5538-4E43-413E-8F4F-BEF6C041ED51","type":"message","text":"groups.gd.groups? But that's not exposed in the mini language right","user":"UK1BNFHFV","ts":"1616780515.278400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rewQR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"groups.gd.groups? But that's not exposed in the mini language right"}]}]}],"thread_ts":"1616752551.272700","parent_user_id":"UK1BNFHFV"}]