[{"client_msg_id":"08975616-7976-46e2-bef5-2874dd8c1ea3","type":"message","text":"(and are you using a plain terminal REPL or some other Juno/Atom/VSCode/Jupyter/IJulia setup?)","user":"U681ELA87","ts":"1614619019.144200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JndDe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(and are you using a plain terminal REPL or some other Juno/Atom/VSCode/Jupyter/IJulia setup?)"}]}]}],"thread_ts":"1614619019.144200","reply_count":9,"reply_users_count":2,"latest_reply":"1614769844.179100","reply_users":["U01GFAJRZ44","U681ELA87"],"subscribed":false},{"client_msg_id":"b5246352-36e8-4938-9ba0-4c1c751025cb","type":"message","text":"Hi Jacob, thanks for taking the time to answer. I’m using JuliaPro 1.5.3 / Atom. JSON3 is actually being pulled in by my use of JsonTables. I’ll reload JSON3 1.7.1 and do as you suggest.","user":"U01GFAJRZ44","ts":"1614624810.148200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qe=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi Jacob, thanks for taking the time to answer. I’m using JuliaPro 1.5.3 / Atom. JSON3 is actually being pulled in by my use of JsonTables. I’ll reload JSON3 1.7.1 and do as you suggest."}]}]}],"thread_ts":"1614619019.144200","parent_user_id":"U681ELA87"},{"client_msg_id":"86745818-24fd-436a-ba97-15fd9952539a","type":"message","text":"So, if I just update the packages, it brings in JSON3@1.7.1. I can use JSON3 from the terminal in atom, no problem. I can use JSONTables, also no problem. Now I try to use it in contex, that is by using a module that starts with\nmodule JSONDumpUtils\n\n    using DrWatson\n    quickactivate(@__DIR__)\n    using JSONTables, DataFrames, DataFramesMeta, Dates, Chain\n\nand I get the error seen before.\n[ Info: Precompiling JSONTables [b9914132-a727-11e9-1322-f18e41205b0b]\nWARNING: could not import StructTypes.OrderedStruct into JSON3\nERROR: LoadError: LoadError: UndefVarError: OrderedStruct not defined\nStacktrace:\n [1] top-level scope at /Users/impero/.julia/packages/JSON3/rjLPB/src/structs.jl:591\n [2] include(::Function, ::Module, ::String) at ./Base.jl:380\n [3] include at ./Base.jl:368 [inlined]\n [4] include(::String) at /Users/impero/.julia/packages/JSON3/rjLPB/src/JSON3.jl:1\n [5] top-level scope at /Users/impero/.julia/packages/JSON3/rjLPB/src/JSON3.jl:163\n [6] include(::Function, ::Module, ::String) at ./Base.jl:380\n [7] include(::Module, ::String) at ./Base.jl:368\n [8] top-level scope at none:2\n [9] eval at ./boot.jl:331 [inlined]\n [10] eval(::Expr) at ./client.jl:467\n [11] top-level scope at ./none:3\nin expression starting at /Users/impero/.julia/packages/JSON3/rjLPB/src/structs.jl:591\nin expression starting at /Users/impero/.julia/packages/JSON3/rjLPB/src/JSON3.jl:163\nERROR: LoadError: Failed to precompile JSON3 [0f8b85d8-7281-11e9-16c2-39a750bddbf1] to /Users/impero/.julia/compiled/v1.5/JSON3/1p699_D7IQd.ji.\nStacktrace:\n [1] error(::String) at ./error.jl:33\n [2] compilecache(::Base.PkgId, ::String) at ./loading.jl:1305\n [3] _require(::Base.PkgId) at ./loading.jl:1030\n [4] require(::Base.PkgId) at ./loading.jl:928\n [5] require(::Module, ::Symbol) at ./loading.jl:923\n [6] include(::Function, ::Module, ::String) at ./Base.jl:380\n [7] include(::Module, ::String) at ./Base.jl:368\n [8] top-level scope at none:2\n [9] eval at ./boot.jl:331 [inlined]\n [10] eval(::Expr) at ./client.jl:467\n [11] top-level scope at ./none:3\nin expression starting at /Users/impero/.julia/packages/JSONTables/g5bSA/src/JSONTables.jl:3\n\nbut if I go back to JSON3@1.5.1 I can load this module without problem. Not a blocker, given that loading a previous version fixes it, but thought you would want to know.","user":"U01GFAJRZ44","ts":"1614624989.148400","team":"T68168MUP","edited":{"user":"U01GFAJRZ44","ts":"1614625019.000000"},"blocks":[{"type":"rich_text","block_id":"hNefd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So, if I just update the packages, it brings in JSON3@1.7.1. I can use JSON3 from the terminal in atom, no problem. I can use JSONTables, also no problem. Now I try to use it in contex, that is by using a module that starts with\nmodule JSONDumpUtils\n\n    using DrWatson\n    quickactivate(@__DIR__)\n    using JSONTables, DataFrames, DataFramesMeta, Dates, Chain\n\nand I get the error seen before.\n[ Info: Precompiling JSONTables [b9914132-a727-11e9-1322-f18e41205b0b]\nWARNING: could not import StructTypes.OrderedStruct into JSON3\nERROR: LoadError: LoadError: UndefVarError: OrderedStruct not defined\nStacktrace:\n [1] top-level scope at /Users/impero/.julia/packages/JSON3/rjLPB/src/structs.jl:591\n [2] include(::Function, ::Module, ::String) at ./Base.jl:380\n [3] include at ./Base.jl:368 [inlined]\n [4] include(::String) at /Users/impero/.julia/packages/JSON3/rjLPB/src/JSON3.jl:1\n [5] top-level scope at /Users/impero/.julia/packages/JSON3/rjLPB/src/JSON3.jl:163\n [6] include(::Function, ::Module, ::String) at ./Base.jl:380\n [7] include(::Module, ::String) at ./Base.jl:368\n [8] top-level scope at none:2\n [9] eval at ./boot.jl:331 [inlined]\n [10] eval(::Expr) at ./client.jl:467\n [11] top-level scope at ./none:3\nin expression starting at /Users/impero/.julia/packages/JSON3/rjLPB/src/structs.jl:591\nin expression starting at /Users/impero/.julia/packages/JSON3/rjLPB/src/JSON3.jl:163\nERROR: LoadError: Failed to precompile JSON3 [0f8b85d8-7281-11e9-16c2-39a750bddbf1] to /Users/impero/.julia/compiled/v1.5/JSON3/1p699_D7IQd.ji.\nStacktrace:\n [1] error(::String) at ./error.jl:33\n [2] compilecache(::Base.PkgId, ::String) at ./loading.jl:1305\n [3] _require(::Base.PkgId) at ./loading.jl:1030\n [4] require(::Base.PkgId) at ./loading.jl:928\n [5] require(::Module, ::Symbol) at ./loading.jl:923\n [6] include(::Function, ::Module, ::String) at ./Base.jl:380\n [7] include(::Module, ::String) at ./Base.jl:368\n [8] top-level scope at none:2\n [9] eval at ./boot.jl:331 [inlined]\n [10] eval(::Expr) at ./client.jl:467\n [11] top-level scope at ./none:3\nin expression starting at /Users/impero/.julia/packages/JSONTables/g5bSA/src/JSONTables.jl:3\n\nbut if I go back to JSON3@1.5.1 I can load this module without problem. Not a blocker, given that loading a previous version fixes it, but thought you would want to know."}]}]}],"thread_ts":"1614619019.144200","parent_user_id":"U681ELA87"},{"client_msg_id":"8b730593-3e93-4ca6-8e74-bf1b5843ae30","type":"message","text":"Well, it’s not really something I can fix. There’s some kind of Manifest you have that’s causing the version mismatch or something. I’m not sure what the `quickactivate` is doing in your code.","user":"U681ELA87","ts":"1614625194.148700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0pr0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, it’s not really something I can fix. There’s some kind of Manifest you have that’s causing the version mismatch or something. I’m not sure what the "},{"type":"text","text":"quickactivate","style":{"code":true}},{"type":"text","text":" is doing in your code."}]}]}],"thread_ts":"1614619019.144200","parent_user_id":"U681ELA87"},{"client_msg_id":"472a7ca1-80cd-4270-b61d-a34bb34ae71e","type":"message","text":"That is, _somewhere_, a Manifest or I’ve even seen it in Atom itself, an old version of StructTypes is getting loaded, and then when JSONTables loads and request to load JSON3, the _new_ code of JSON3 is expecting the _new_ code of StructTypes, but an _old_ version is already loaded and the error is thrown.","user":"U681ELA87","ts":"1614625292.148900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2+j+B","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is, "},{"type":"text","text":"somewhere","style":{"italic":true}},{"type":"text","text":", a Manifest or I’ve even seen it in Atom itself, an old version of StructTypes is getting loaded, and then when JSONTables loads and request to load JSON3, the "},{"type":"text","text":"new","style":{"italic":true}},{"type":"text","text":" code of JSON3 is expecting the "},{"type":"text","text":"new","style":{"italic":true}},{"type":"text","text":" code of StructTypes, but an "},{"type":"text","text":"old","style":{"italic":true}},{"type":"text","text":" version is already loaded and the error is thrown."}]}]}],"thread_ts":"1614619019.144200","parent_user_id":"U681ELA87"},{"client_msg_id":"757248b3-6448-4c12-b0df-85a55bfcb148","type":"message","text":"OK, np. quickactivate is from DrWatson, in this context it is just setting up some paths for functions that are used later.","user":"U01GFAJRZ44","ts":"1614625943.149100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pAP8n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, np. quickactivate is from DrWatson, in this context it is just setting up some paths for functions that are used later."}]}]}],"thread_ts":"1614619019.144200","parent_user_id":"U681ELA87"},{"client_msg_id":"0a26d3bf-22df-4fc3-b8f6-96dcdf1ac617","type":"message","text":"Ok, just for reference, the Atom/Juno integration isn’t being actively developed anymore. Focus as moved to the VSCode Julia extension","user":"U681ELA87","ts":"1614626469.149400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rn9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, just for reference, the Atom/Juno integration isn’t being actively developed anymore. Focus as moved to the VSCode Julia extension"}]}]}],"thread_ts":"1614619019.144200","parent_user_id":"U681ELA87"},{"client_msg_id":"b621663d-a92d-44ef-bd6a-e5a810144c9b","type":"message","text":"(that doesn’t do any precompiling of packages that can cause weird issues like this)","user":"U681ELA87","ts":"1614626484.149600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"86yAo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(that doesn’t do any precompiling of packages that can cause weird issues like this)"}]}]}],"thread_ts":"1614619019.144200","parent_user_id":"U681ELA87"},{"client_msg_id":"901ee4be-d54e-4712-96f9-cb401bebbc5a","type":"message","text":"Yes, I’m aware that new dev is moved to VSCode. Shame, I liked the Atom environment for this. I’m wondering if the issue is because other packages, such as Conda, import JSON (not JSON3), causing conflicts.","user":"U01GFAJRZ44","ts":"1614627828.150600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Aav46","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, I’m aware that new dev is moved to VSCode. Shame, I liked the Atom environment for this. I’m wondering if the issue is because other packages, such as Conda, import JSON (not JSON3), causing conflicts."}]}]}],"thread_ts":"1614619019.144200","parent_user_id":"U681ELA87"},{"client_msg_id":"af94588a-5eae-4aac-b636-5bbd036abe35","type":"message","text":"Thanks for looking in to it, Jacob. Appreciated.","user":"U01GFAJRZ44","ts":"1614769844.179100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q=7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for looking in to it, Jacob. Appreciated."}]}]}],"thread_ts":"1614619019.144200","parent_user_id":"U681ELA87"}]