[{"client_msg_id":"3b80e2c3-5934-4885-af33-6cf14b9e37e4","type":"message","text":"Is it possible to read a subset of columns into a DataFrame? I see `Arrow.Table(\"mytable.arrow\")[:col1]` in the docs, but this doesn't seem to extend to vectors of symbols. `DataFrame([Arrow.Table(\"mytable.arrow\")[c] for c in [:col1, :col2]])` works but is quite slow as I guess it materializes everything?","user":"U7JQGPGCQ","ts":"1613496884.459100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VOJK0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is it possible to read a subset of columns into a DataFrame? I see "},{"type":"text","text":"Arrow.Table(\"mytable.arrow\")[:col1]","style":{"code":true}},{"type":"text","text":" in the docs, but this doesn't seem to extend to vectors of symbols. "},{"type":"text","text":"DataFrame([Arrow.Table(\"mytable.arrow\")[c] for c in [:col1, :col2]])","style":{"code":true}},{"type":"text","text":" works but is quite slow as I guess it materializes everything?"}]}]}],"thread_ts":"1613496884.459100","reply_count":8,"reply_users_count":2,"latest_reply":"1613500919.483300","reply_users":["U681ELA87","U7JQGPGCQ"],"subscribed":false},{"client_msg_id":"e07718cf-74b2-48c3-afd4-305f04d08567","type":"message","text":"You could use `TableOperations.select`","user":"U681ELA87","ts":"1613498026.476000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1y3EL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could use "},{"type":"text","text":"TableOperations.select","style":{"code":true}}]}]}],"thread_ts":"1613496884.459100","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"6437ac88-9094-4b98-a8ba-973d68518001","type":"message","text":"Yeah, the example you show is doing the entire arrow table re-reading for each column which is pretty inefficient","user":"U681ELA87","ts":"1613498061.476400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"svA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, the example you show is doing the entire arrow table re-reading for each column which is pretty inefficient"}]}]}],"thread_ts":"1613496884.459100","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"25cdf762-d11e-4d13-b54a-7b852d799e86","type":"message","text":"Hmm... that still seems to allocate? `DataFrame(TableOperations.select(Arrow.Table(\"mytable.arrow\"), [:col1, :col2, :col3, :col4]))` gives `36.480954 seconds (103.42 M allocations: 4.350 GiB, 82.27% gc time)`, versus `0.011874 seconds (710 allocations: 47.047 KiB, 93.17% compilation time)` for the same call without `select`","user":"U7JQGPGCQ","ts":"1613500144.482300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HXY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm... that still seems to allocate? "},{"type":"text","text":"DataFrame(TableOperations.select(Arrow.Table(\"mytable.arrow\"), [:col1, :col2, :col3, :col4]))","style":{"code":true}},{"type":"text","text":" gives "},{"type":"text","text":"36.480954 seconds (103.42 M allocations: 4.350 GiB, 82.27% gc time)","style":{"code":true}},{"type":"text","text":", versus "},{"type":"text","text":"0.011874 seconds (710 allocations: 47.047 KiB, 93.17% compilation time)","style":{"code":true}},{"type":"text","text":" for the same call without "},{"type":"text","text":"select","style":{"code":true}}]}]}],"thread_ts":"1613496884.459100","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"2ff07041-0e38-4f6d-8944-30180e322219","type":"message","text":"am I doing it wrong?","user":"U7JQGPGCQ","ts":"1613500148.482500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OCqgu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"am I doing it wrong?"}]}]}],"thread_ts":"1613496884.459100","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"c6c3e289-b654-47f9-b7f5-1f22fbbfbb06","type":"message","text":"Also just in terms of memory footprint, that `select` call akes me from 7.5GB RAM usage at the start of the session to 14GB, when the arrow file on disk is 2.8GB - is this expected?","user":"U7JQGPGCQ","ts":"1613500262.482700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ISz8=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also just in terms of memory footprint, that "},{"type":"text","text":"select","style":{"code":true}},{"type":"text","text":" call akes me from 7.5GB RAM usage at the start of the session to 14GB, when the arrow file on disk is 2.8GB - is this expected?"}]}]}],"thread_ts":"1613496884.459100","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"d1e4a7f5-8f4a-43bc-86a4-323a28730e94","type":"message","text":"Oh yeah, DataFrames.jl copies columns by default, so you'd want to do `DataFrame(...; copycols=false)`","user":"U681ELA87","ts":"1613500316.482900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wfKBn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh yeah, DataFrames.jl copies columns by default, so you'd want to do "},{"type":"text","text":"DataFrame(...; copycols=false)","style":{"code":true}}]}]}],"thread_ts":"1613496884.459100","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"c1e26020-246e-480a-9154-a5501d82c6ac","type":"message","text":"But that doesn't happen when I just do `DataFrame(Arrow.Table(\"mytable.arrow\"))`, is that constructor special cased?","user":"U7JQGPGCQ","ts":"1613500377.483100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CpAW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But that doesn't happen when I just do "},{"type":"text","text":"DataFrame(Arrow.Table(\"mytable.arrow\"))","style":{"code":true}},{"type":"text","text":", is that constructor special cased?"}]}]}],"thread_ts":"1613496884.459100","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"d6151a35-d669-47ab-b878-b8203b826510","type":"message","text":"Yes. When you call `Tables.columns` on an Arrow.Table, it's wrapped in `Tables.CopiedColumns` so DataFrames doesn't make a copy by default.","user":"U681ELA87","ts":"1613500919.483300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lsr5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes. When you call "},{"type":"text","text":"Tables.columns","style":{"code":true}},{"type":"text","text":" on an Arrow.Table, it's wrapped in "},{"type":"text","text":"Tables.CopiedColumns","style":{"code":true}},{"type":"text","text":" so DataFrames doesn't make a copy by default."}]}]}],"thread_ts":"1613496884.459100","parent_user_id":"U7JQGPGCQ"}]