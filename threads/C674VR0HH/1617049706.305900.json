[{"client_msg_id":"cda05851-ceef-47b0-92d1-ea575070f605","type":"message","text":"I just got burned by my own stupidity, but my god did it take a long time to figure out what I had done.  Consider the following\n```julia&gt; using DataFrames\n\njulia&gt; df = DataFrame(A=rand(5))\n5×1 DataFrame\n Row │ A\n     │ Float64\n─────┼──────────\n   1 │ 0.899862\n   2 │ 0.309756\n   3 │ 0.905428\n   4 │ 0.986047\n   5 │ 0.219594\n\njulia&gt; df[!, :B] = df.A;\n\njulia&gt; filter!(:A=&gt;(≥)(0.9), df)\nERROR: BoundsError\nStacktrace:\n [1] _deleteat!(a::Vector{Float64}, inds::Vector{Int64}, dltd::Base.Nowhere)\n   @ Base ./array.jl:1398\n [2] _deleteat!\n   @ ./array.jl:1383 [inlined]\n [3] deleteat!\n   @ ./array.jl:1377 [inlined]\n [4] (::DataFrames.var\"#184#185\"{Vector{Int64}})(col::Vector{Float64})\n   @ DataFrames ~/.julia/packages/DataFrames/zXEKU/src/dataframe/dataframe.jl:885\n [5] foreach(f::DataFrames.var\"#184#185\"{Vector{Int64}}, itr::Vector{AbstractVector{T} where T})\n   @ Base ./abstractarray.jl:2141\n [6] delete!\n   @ ~/.julia/packages/DataFrames/zXEKU/src/dataframe/dataframe.jl:885 [inlined]\n [7] _filter!_helper(df::DataFrame, f::Base.Fix2{typeof(&gt;=), Float64}, cols::Vector{Float64})\n   @ DataFrames ~/.julia/packages/DataFrames/zXEKU/src/abstractdataframe/abstractdataframe.jl:1126\n [8] filter!(::Pair{Symbol, Base.Fix2{typeof(&gt;=), Float64}}, df::DataFrame)\n   @ DataFrames ~/.julia/packages/DataFrames/zXEKU/src/abstractdataframe/abstractdataframe.jl:1109\n [9] top-level scope\n   @ REPL[4]:1```\nI had enough code that it wasn't obvious to me that I had assigned columns this way without copying.  I don't think there's anything to be done here, but man did I get myself confused","user":"U9VG1AYSG","ts":"1617049706.305900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h2e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just got burned by my own stupidity, but my god did it take a long time to figure out what I had done.  Consider the following\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using DataFrames\n\njulia> df = DataFrame(A=rand(5))\n5×1 DataFrame\n Row │ A\n     │ Float64\n─────┼──────────\n   1 │ 0.899862\n   2 │ 0.309756\n   3 │ 0.905428\n   4 │ 0.986047\n   5 │ 0.219594\n\njulia> df[!, :B] = df.A;\n\njulia> filter!(:A=>(≥)(0.9), df)\nERROR: BoundsError\nStacktrace:\n [1] _deleteat!(a::Vector{Float64}, inds::Vector{Int64}, dltd::Base.Nowhere)\n   @ Base ./array.jl:1398\n [2] _deleteat!\n   @ ./array.jl:1383 [inlined]\n [3] deleteat!\n   @ ./array.jl:1377 [inlined]\n [4] (::DataFrames.var\"#184#185\"{Vector{Int64}})(col::Vector{Float64})\n   @ DataFrames ~/.julia/packages/DataFrames/zXEKU/src/dataframe/dataframe.jl:885\n [5] foreach(f::DataFrames.var\"#184#185\"{Vector{Int64}}, itr::Vector{AbstractVector{T} where T})\n   @ Base ./abstractarray.jl:2141\n [6] delete!\n   @ ~/.julia/packages/DataFrames/zXEKU/src/dataframe/dataframe.jl:885 [inlined]\n [7] _filter!_helper(df::DataFrame, f::Base.Fix2{typeof(>=), Float64}, cols::Vector{Float64})\n   @ DataFrames ~/.julia/packages/DataFrames/zXEKU/src/abstractdataframe/abstractdataframe.jl:1126\n [8] filter!(::Pair{Symbol, Base.Fix2{typeof(>=), Float64}}, df::DataFrame)\n   @ DataFrames ~/.julia/packages/DataFrames/zXEKU/src/abstractdataframe/abstractdataframe.jl:1109\n [9] top-level scope\n   @ REPL[4]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I had enough code that it wasn't obvious to me that I had assigned columns this way without copying.  I don't think there's anything to be done here, but man did I get myself confused"}]}]}],"thread_ts":"1617049706.305900","reply_count":1,"reply_users_count":1,"latest_reply":"1617050594.306000","reply_users":["U8JAMQGQY"],"is_locked":false,"subscribed":false,"reactions":[{"name":"exclamation","users":["U8JAMQGQY"],"count":1}]},{"client_msg_id":"388f1497-8189-4534-b321-e9e275deda09","type":"message","text":"that is why there is `!` in the syntax - it is ugly to warn you not to do it :slightly_smiling_face:. Now the question is what is an idiomatic way to do it. There are three:\n```df.B = copy(df.A)```\nor\n```df.B = df[:, :A]```\nor\n```df[:, :B] = df.A```\nI personally prefer the first one with explicit call to `copy` as it is most clearly showing what is going on.","user":"U8JAMQGQY","ts":"1617050594.306000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cgEEn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that is why there is "},{"type":"text","text":"!","style":{"code":true}},{"type":"text","text":" in the syntax - it is ugly to warn you not to do it "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":". Now the question is what is an idiomatic way to do it. There are three:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df.B = copy(df.A)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"or\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df.B = df[:, :A]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"or\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df[:, :B] = df.A"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I personally prefer the first one with explicit call to "},{"type":"text","text":"copy","style":{"code":true}},{"type":"text","text":" as it is most clearly showing what is going on."}]}]}],"thread_ts":"1617049706.305900","parent_user_id":"U9VG1AYSG"}]