[{"client_msg_id":"41c4a946-aacb-41b4-a5ab-cf7d7f4b4240","type":"message","text":"Is there a more sensible way to do this transform?\n```julia&gt; df = DataFrame(a = [\"test|one\", \"test|two\", \"test\"])\n3×1 DataFrame\n Row │ a\n     │ String\n─────┼──────────\n   1 │ test|one\n   2 │ test|two\n   3 │ test\n\njulia&gt; transform(df, :a =&gt; ByRow(s-&gt;begin\n           things = split(s, \"|\")\n           (p1, p2) = length(things) == 1 ? (first(things), nothing) : things\n           end) =&gt; [:p1, :p2])\n3×3 DataFrame\n Row │ a         p1         p2\n     │ String    SubStrin…  Union…\n─────┼─────────────────────────────\n   1 │ test|one  test       one\n   2 │ test|two  test       two\n   3 │ test      test```\n","user":"U8JP5B9T2","ts":"1613078515.364400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"heNM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a more sensible way to do this transform?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> df = DataFrame(a = [\"test|one\", \"test|two\", \"test\"])\n3×1 DataFrame\n Row │ a\n     │ String\n─────┼──────────\n   1 │ test|one\n   2 │ test|two\n   3 │ test\n\njulia> transform(df, :a => ByRow(s->begin\n           things = split(s, \"|\")\n           (p1, p2) = length(things) == 1 ? (first(things), nothing) : things\n           end) => [:p1, :p2])\n3×3 DataFrame\n Row │ a         p1         p2\n     │ String    SubStrin…  Union…\n─────┼─────────────────────────────\n   1 │ test|one  test       one\n   2 │ test|two  test       two\n   3 │ test      test"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1613078515.364400","reply_count":10,"reply_users_count":3,"latest_reply":"1613079443.367100","reply_users":["U9VG1AYSG","U8JP5B9T2","U67431ELR"],"subscribed":false},{"client_msg_id":"b3e10496-c788-4a67-805b-c83f4229c7b0","type":"message","text":"```a = split.(df.a, (\"|\",))\ndf[!, :p1] = first.(a)\ndf[!, :p2] = [length(α) &gt; 1 ? last(α) : missing for α ∈ a]```","user":"U9VG1AYSG","ts":"1613078740.364900","team":"T68168MUP","edited":{"user":"U9VG1AYSG","ts":"1613078767.000000"},"blocks":[{"type":"rich_text","block_id":"DY=U3","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"a = split.(df.a, (\"|\",))\ndf[!, :p1] = first.(a)\ndf[!, :p2] = [length(α) > 1 ? last(α) : missing for α ∈ a]"}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"cc5d2a7a-c352-4fe5-8250-9b9cd65129b3","type":"message","text":"Yeah, but that requires iterating over a several times, and I've been brainwashed by the julia community to do things as efficiently as possible in all things, even if it's not actually a bottleneck :laughing:","user":"U8JP5B9T2","ts":"1613078885.365200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AAtmH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, but that requires iterating over a several times, and I've been brainwashed by the julia community to do things as efficiently as possible in all things, even if it's not actually a bottleneck "},{"type":"emoji","name":"laughing"}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"e7c2547b-df44-44df-8b9f-48cc11f57fbb","type":"message","text":"Mostly I'm trying to use `transform` and friends correctly and wherever possible to help it sink in","user":"U8JP5B9T2","ts":"1613078918.365400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U2cL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Mostly I'm trying to use "},{"type":"text","text":"transform","style":{"code":true}},{"type":"text","text":" and friends correctly and wherever possible to help it sink in"}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"3e70f562-8913-4112-9255-ae471152e54c","type":"message","text":"I think in the vast majority of cases transform and such is just bloat, you can just use methods from base","user":"U9VG1AYSG","ts":"1613078995.365600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wV/pV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think in the vast majority of cases transform and such is just bloat, you can just use methods from base"}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"7ae3a11f-5840-4616-a487-b3d46b5d7f3b","type":"message","text":"in this particular case, the difficulty of doing it all in one go is that it is returning a tuple","user":"U9VG1AYSG","ts":"1613079021.365800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FHI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in this particular case, the difficulty of doing it all in one go is that it is returning a tuple"}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"682f7f87-1418-4762-9591-c408fbb79d81","type":"message","text":"SplitApplyCombine.jl might be handy","user":"U9VG1AYSG","ts":"1613079075.366000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zjE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"SplitApplyCombine.jl might be handy"}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"2efa6a3d-aa36-4920-b96a-3816d6f4e0d6","type":"message","text":"Adding another dependency is not reduced bloat :stuck_out_tongue:","user":"U8JP5B9T2","ts":"1613079092.366200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"05dy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Adding another dependency is not reduced bloat "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"02f79200-06b9-40a5-a8b1-e0a6785cb14f","type":"message","text":"well depends on what your definition of bloat is, but yeah I would just do this with stuff from base.  I'm pretty skeptical that whatever transform is doing is any more efficient than what I wrote above","user":"U9VG1AYSG","ts":"1613079137.366600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sCI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well depends on what your definition of bloat is, but yeah I would just do this with stuff from base.  I'm pretty skeptical that whatever transform is doing is any more efficient than what I wrote above"}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"c5f9a4d6-d601-464d-a1c8-e75dca78afc9","type":"message","text":"There's been a discussion about whether a special function was needed: <https://github.com/JuliaData/DataFrames.jl/issues/2375> Indeed when the result has variable size it's not super nice to handle by hand.","user":"U67431ELR","ts":"1613079140.366800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OU+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There's been a discussion about whether a special function was needed: "},{"type":"link","url":"https://github.com/JuliaData/DataFrames.jl/issues/2375"},{"type":"text","text":" Indeed when the result has variable size it's not super nice to handle by hand."}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"31092f3f-309d-491c-acee-582a16575a1f","type":"message","text":"```julia&gt; df = DataFrame(a = [rand() &lt; 0.2 ? randstring() : randstring() * \"|\" * randstring() for _ in 1:1000]);\n\njulia&gt; @btime transform($df, :a =&gt; ByRow(s-&gt;begin\n                  things = split(s, \"|\")\n                  (p1, p2) = length(things) == 1 ? (first(things), nothing) : things\n                  end) =&gt; [:p1, :p2]);\n  221.530 μs (7553 allocations: 396.89 KiB)\n\njulia&gt; @btime let a = split.($df.a, (\"|\",))\n       df[!, :p1] = first.(a)\n       df[!, :p2] = [length(α) &gt; 1 ? last(α) : missing for α ∈ a]\n       end;\n  125.239 μs (2821 allocations: 275.73 KiB)```","user":"U8JP5B9T2","ts":"1613079443.367100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LHxt","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> df = DataFrame(a = [rand() < 0.2 ? randstring() : randstring() * \"|\" * randstring() for _ in 1:1000]);\n\njulia> @btime transform($df, :a => ByRow(s->begin\n                  things = split(s, \"|\")\n                  (p1, p2) = length(things) == 1 ? (first(things), nothing) : things\n                  end) => [:p1, :p2]);\n  221.530 μs (7553 allocations: 396.89 KiB)\n\njulia> @btime let a = split.($df.a, (\"|\",))\n       df[!, :p1] = first.(a)\n       df[!, :p2] = [length(α) > 1 ? last(α) : missing for α ∈ a]\n       end;\n  125.239 μs (2821 allocations: 275.73 KiB)"}]}]}],"thread_ts":"1613078515.364400","parent_user_id":"U8JP5B9T2"}]