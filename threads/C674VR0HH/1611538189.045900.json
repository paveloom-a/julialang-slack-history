[{"client_msg_id":"a1187456-5b4e-4861-ba8c-3135b0f3c594","type":"message","text":":wave: is there a straight forward way to do lag a column by something? I used to do this but `by` has been deprecated:\n```@&gt; begin\n    df\n    sort!([:category, :item, :date])\n    by([:category, :item], \n    lag_sales = :sales =&gt; Base.Fix2(ShiftedArrays.lag, 1))\nend```","user":"UUYRZ3LU8","ts":"1611538189.045900","team":"T68168MUP","edited":{"user":"UUYRZ3LU8","ts":"1611538196.000000"},"blocks":[{"type":"rich_text","block_id":"cNEL","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"wave"},{"type":"text","text":" is there a straight forward way to do lag a column by something? I used to do this but "},{"type":"text","text":"by","style":{"code":true}},{"type":"text","text":" has been deprecated:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@> begin\n    df\n    sort!([:category, :item, :date])\n    by([:category, :item], \n    lag_sales = :sales => Base.Fix2(ShiftedArrays.lag, 1))\nend"}]}]}],"thread_ts":"1611538189.045900","reply_count":7,"reply_users_count":4,"latest_reply":"1611582328.050900","reply_users":["UBF9YRB6H","UUYRZ3LU8","U7JQGPGCQ","U8JAMQGQY"],"subscribed":false},{"client_msg_id":"3014cb07-033e-4628-a927-fd6e60744ffa","type":"message","text":"you want `groupby` and the `combine` as separate steps.","user":"UBF9YRB6H","ts":"1611542831.046700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"q8JSG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you want "},{"type":"text","text":"groupby","style":{"code":true}},{"type":"text","text":" and the "},{"type":"text","text":"combine","style":{"code":true}},{"type":"text","text":" as separate steps."}]}]}],"thread_ts":"1611538189.045900","parent_user_id":"UUYRZ3LU8"},{"client_msg_id":"41d4eed0-8ce5-475c-a082-85441f5aee45","type":"message","text":"thanks <@UBF9YRB6H>. I couldn't trouble you for an example per chance, could I?\nI did manage to do it in a janky multistep way (output the grouped df, list comprehension over it apply `log` to the `:sales`  field, then stitching that to the original df) but it's pretty crappy\n\n```@chain df begin\n    sort!([:category, :item, :date])\n    groupby([:category, :item])\n    [[x coalesce.(lag(x.sales), x.sales)] for x in _]\n    vcat(_...)\nend```","user":"UUYRZ3LU8","ts":"1611547996.048400","team":"T68168MUP","edited":{"user":"UUYRZ3LU8","ts":"1611549282.000000"},"blocks":[{"type":"rich_text","block_id":"zyi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks "},{"type":"user","user_id":"UBF9YRB6H"},{"type":"text","text":". I couldn't trouble you for an example per chance, could I?\nI did manage to do it in a janky multistep way (output the grouped df, list comprehension over it apply "},{"type":"text","text":"log","style":{"code":true}},{"type":"text","text":" to the "},{"type":"text","text":":sales","style":{"code":true}},{"type":"text","text":"  field, then stitching that to the original df) but it's pretty crappy\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@chain df begin\n    sort!([:category, :item, :date])\n    groupby([:category, :item])\n    [[x coalesce.(lag(x.sales), x.sales)] for x in _]\n    vcat(_...)\nend"}]}]}],"thread_ts":"1611538189.045900","parent_user_id":"UUYRZ3LU8"},{"client_msg_id":"56effb42-de1f-41d1-8dd4-babf0e9a65fc","type":"message","text":"^ maybe am doing something wrong, but tried using `transform` which ignores the grouped df component","user":"UUYRZ3LU8","ts":"1611549366.048700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fYELv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"^ maybe am doing something wrong, but tried using "},{"type":"text","text":"transform","style":{"code":true}},{"type":"text","text":" which ignores the grouped df component"}]}]}],"thread_ts":"1611538189.045900","parent_user_id":"UUYRZ3LU8"},{"client_msg_id":"7ca6cb4d-412a-45fb-8a5d-28cd126742d6","type":"message","text":"Don't think you need a chain here?\n```\nsort!(df, [:category, :item, :date])\ntransform!(groupby(df, [:category, :item]), :sales =&gt; lag)\n```\n(you also don't need fix2 as the single argument lag does one period lag)","user":"U7JQGPGCQ","ts":"1611558971.049300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"syYIU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Don't think you need a chain here?\n```\nsort!(df, [:category, :item, :date])\ntransform!(groupby(df, [:category, :item]), :sales => lag)\n```\n(you also don't need fix2 as the single argument lag does one period lag)"}]}]}],"thread_ts":"1611538189.045900","parent_user_id":"UUYRZ3LU8"},{"client_msg_id":"714745c0-dac8-4045-9f3e-b1241dc2a4e0","type":"message","text":"you need `combine` as I mentioned above.\n\n```@&gt; begin\n    df\n    sort!([:category, :item, :date])\n    groupby([:category, :item])\n    combine(:sales =&gt; lag =&gt; :lag_sales)\nend```","user":"UBF9YRB6H","ts":"1611579741.050300","team":"T68168MUP","edited":{"user":"UBF9YRB6H","ts":"1611579750.000000"},"blocks":[{"type":"rich_text","block_id":"CWMH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you need "},{"type":"text","text":"combine","style":{"code":true}},{"type":"text","text":" as I mentioned above.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@> begin\n    df\n    sort!([:category, :item, :date])\n    groupby([:category, :item])\n    combine(:sales => lag => :lag_sales)\nend"}]}]}],"thread_ts":"1611538189.045900","parent_user_id":"UUYRZ3LU8"},{"client_msg_id":"9f85a393-ef00-4b8f-a3d5-380516a1a5b9","type":"message","text":"`transform` does not ignore the `groupby` but it keeps the oreder of rows from the source while `combine` orders rows by group.","user":"U8JAMQGQY","ts":"1611579868.050600","team":"T68168MUP","edited":{"user":"U8JAMQGQY","ts":"1611579879.000000"},"blocks":[{"type":"rich_text","block_id":"ZuAiP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"transform","style":{"code":true}},{"type":"text","text":" does not ignore the "},{"type":"text","text":"groupby","style":{"code":true}},{"type":"text","text":" but it keeps the oreder of rows from the source while "},{"type":"text","text":"combine","style":{"code":true}},{"type":"text","text":" orders rows by group."}]}]}],"thread_ts":"1611538189.045900","parent_user_id":"UUYRZ3LU8"},{"client_msg_id":"bbc865b3-c716-4590-8073-107a1a50fcbf","type":"message","text":"thank you all for the responses. Really appreciate it.","user":"UUYRZ3LU8","ts":"1611582328.050900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Myo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thank you all for the responses. Really appreciate it."}]}]}],"thread_ts":"1611538189.045900","parent_user_id":"UUYRZ3LU8"}]