[{"client_msg_id":"b49f723b-803c-4468-ad5c-2898bb7b2d63","type":"message","text":"Since `combine` doesn't currently allow that","user":"U680THK2S","ts":"1609960981.340200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7DD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Since "},{"type":"text","text":"combine","style":{"code":true}},{"type":"text","text":" doesn't currently allow that"}]}]}],"thread_ts":"1609960981.340200","reply_count":11,"reply_users_count":2,"latest_reply":"1609975209.346600","reply_users":["U8JAMQGQY","U680THK2S"],"subscribed":false},{"client_msg_id":"d723f36f-7c92-4a6e-be61-27ad66e9e45f","type":"message","text":"currently the best option is to add a column to `df` after grouping that is `groupindices(gdf)` and then you can use it normally.","user":"U8JAMQGQY","ts":"1609965162.340300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AXs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"currently the best option is to add a column to "},{"type":"text","text":"df","style":{"code":true}},{"type":"text","text":" after grouping that is "},{"type":"text","text":"groupindices(gdf)","style":{"code":true}},{"type":"text","text":" and then you can use it normally."}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"},{"client_msg_id":"54003ce7-1b6a-4e74-b850-55d6e03bba12","type":"message","text":"So I'd do like\n```g = groupby(df, x)\ndf.grouping = groupindices(g)```\n? And then what?","user":"U680THK2S","ts":"1609966064.340500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WWgsq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I'd do like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"g = groupby(df, x)\ndf.grouping = groupindices(g)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"? And then what?"}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"},{"client_msg_id":"6352d8c2-d739-466f-b1a5-307ed6caaaba","type":"message","text":"That will give me a numeric value corresponding to the group, but I still have one per row, so to get the single unique value I need to do like `first` or `only(unique())`","user":"U680THK2S","ts":"1609966206.340700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G0W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That will give me a numeric value corresponding to the group, but I still have one per row, so to get the single unique value I need to do like "},{"type":"text","text":"first","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"only(unique())","style":{"code":true}}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"},{"client_msg_id":"41f91961-1399-4043-9bc9-fc1e031f6c97","type":"message","text":"To make what I'm after a bit more concrete: Currently I'm doing\n```combine(groupby(df, x)) do subdf\n    x = first(subdf.x)  # would be `key.x` if I could pass `pairs`\n    # ...\nend```\nand I'm wondering whether there's a cleaner way to accomplish that.","user":"U680THK2S","ts":"1609966307.340900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d3V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"To make what I'm after a bit more concrete: Currently I'm doing\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"combine(groupby(df, x)) do subdf\n    x = first(subdf.x)  # would be `key.x` if I could pass `pairs`\n    # ...\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and I'm wondering whether there's a cleaner way to accomplish that."}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"},{"client_msg_id":"36741f5f-1229-4f43-b36a-28c116c002da","type":"message","text":"No. In general \"group number\" was was not a feature that people asked for in the past much (especially given that you can reorder/subset groups in `GroupedDataFrame`, so it is kind-of volatile).\n\nOnly recently we got several requests for allowing to track group number. Of course you can do\n```map(pairs(groupby(df, x))) do key, subdf\n...\nend```\nand then collect the resulting vector back but you will not get all the functionality that `combine` gives you (regarding handling grouping columns).\n\nWhat we could consider doing is adding a special column selector that would produce group number, and the syntax would be like\n```combine(groupby(df, x), [GroupNumber(), col] =&gt; fun)```\nbut I am a bit hesitant to add such stuff, as the mini-language is already quite complex.","user":"U8JAMQGQY","ts":"1609971344.345200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kt6Pn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No. In general \"group number\" was was not a feature that people asked for in the past much (especially given that you can reorder/subset groups in "},{"type":"text","text":"GroupedDataFrame","style":{"code":true}},{"type":"text","text":", so it is kind-of volatile).\n\nOnly recently we got several requests for allowing to track group number. Of course you can do\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"map(pairs(groupby(df, x))) do key, subdf\n...\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"and then collect the resulting vector back but you will not get all the functionality that "},{"type":"text","text":"combine","style":{"code":true}},{"type":"text","text":" gives you (regarding handling grouping columns).\n\nWhat we could consider doing is adding a special column selector that would produce group number, and the syntax would be like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"combine(groupby(df, x), [GroupNumber(), col] => fun)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but I am a bit hesitant to add such stuff, as the mini-language is already quite complex."}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S","reactions":[{"name":"+1","users":["UBF9YRB6H"],"count":1}]},{"client_msg_id":"609deef0-8177-4383-845c-a8058f01b3ba","type":"message","text":"Okay, thanks for explaining, always appreciated :heart:","user":"U680THK2S","ts":"1609972275.345400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J+hGM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, thanks for explaining, always appreciated "},{"type":"emoji","name":"heart"}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"},{"client_msg_id":"4b155b26-df47-4d55-a484-1008ebeed15d","type":"message","text":"(but do you feel the use-case warrants adding something like this, or it is rare enough that a work-around is enough?)","user":"U8JAMQGQY","ts":"1609972467.345600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PJgJE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(but do you feel the use-case warrants adding something like this, or it is rare enough that a work-around is enough?)"}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"},{"client_msg_id":"b03805bb-249c-436d-9fb2-b9a93db19512","type":"message","text":"I find that I use the pattern I showed above very regularly, but I share your hesitation over adding complication to the DSL. Would it be possible to add a method to `combine` that can take the result of `pairs(::GroupedDataFrame)`?","user":"U680THK2S","ts":"1609972567.345800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"g0H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I find that I use the pattern I showed above very regularly, but I share your hesitation over adding complication to the DSL. Would it be possible to add a method to "},{"type":"text","text":"combine","style":{"code":true}},{"type":"text","text":" that can take the result of "},{"type":"text","text":"pairs(::GroupedDataFrame)","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"},{"client_msg_id":"a9bf6068-052c-42d0-ae76-89e86d837995","type":"message","text":"I guess the result of that `pairs` call isn't particularly conducive to dispatch, since it's some kind of generator instead of e.g. an `Iterators.Pairs` or whatever","user":"U680THK2S","ts":"1609972616.346000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U/N2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess the result of that "},{"type":"text","text":"pairs","style":{"code":true}},{"type":"text","text":" call isn't particularly conducive to dispatch, since it's some kind of generator instead of e.g. an "},{"type":"text","text":"Iterators.Pairs","style":{"code":true}},{"type":"text","text":" or whatever"}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"},{"client_msg_id":"bb901a30-384b-4a48-87ca-d1e707e2b4a3","type":"message","text":"Now I realized that the problem with `pairs` is that it does not produce group number, but group key:\n```julia&gt; collect(pairs(gdf))\n3-element Array{Pair{DataFrames.GroupKey{GroupedDataFrame{DataFrame}},SubDataFrame{DataFrame,DataFrames.Index,Array{Int64,1}}},1}:\n GroupKey: (a = 1,) =&gt; 1×1 SubDataFrame\n Row │ a     \n     │ Int64 \n─────┼───────\n   1 │     1\n GroupKey: (a = 2,) =&gt; 1×1 SubDataFrame\n Row │ a     \n     │ Int64 \n─────┼───────\n   1 │     2\n GroupKey: (a = 3,) =&gt; 1×1 SubDataFrame\n Row │ a     \n     │ Int64 \n─────┼───────\n   1 │     3```\nwe would have to go for:\n```combine(::Function, ::Base.Iterators.Enumerate{&lt;:GroupedDataFrame})```\nsignature and require:\n```combine(enumerate(gdf)) do idx, sdf\n...\nend```\nThe only downside of this pattern (fortunately not user-visible) is that it would require a completely separate code path. Could you please open an issue in DataFrames.jl to discuss this?","user":"U8JAMQGQY","ts":"1609974016.346400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IRY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Now I realized that the problem with "},{"type":"text","text":"pairs","style":{"code":true}},{"type":"text","text":" is that it does not produce group number, but group key:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> collect(pairs(gdf))\n3-element Array{Pair{DataFrames.GroupKey{GroupedDataFrame{DataFrame}},SubDataFrame{DataFrame,DataFrames.Index,Array{Int64,1}}},1}:\n GroupKey: (a = 1,) => 1×1 SubDataFrame\n Row │ a     \n     │ Int64 \n─────┼───────\n   1 │     1\n GroupKey: (a = 2,) => 1×1 SubDataFrame\n Row │ a     \n     │ Int64 \n─────┼───────\n   1 │     2\n GroupKey: (a = 3,) => 1×1 SubDataFrame\n Row │ a     \n     │ Int64 \n─────┼───────\n   1 │     3"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"we would have to go for:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"combine(::Function, ::Base.Iterators.Enumerate{<:GroupedDataFrame})"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"signature and require:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"combine(enumerate(gdf)) do idx, sdf\n...\nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The only downside of this pattern (fortunately not user-visible) is that it would require a completely separate code path. Could you please open an issue in DataFrames.jl to discuss this?"}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"},{"client_msg_id":"fc4e6252-6f41-49a7-a929-ac4ed242bac7","type":"message","text":"<https://github.com/JuliaData/DataFrames.jl/issues/2593>","user":"U680THK2S","ts":"1609975209.346600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"brrLZ","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaData/DataFrames.jl/issues/2593"}]}]}],"thread_ts":"1609960981.340200","parent_user_id":"U680THK2S"}]