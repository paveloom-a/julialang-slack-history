[{"client_msg_id":"7da18ca9-6c60-4705-96d8-5d975239bc3a","type":"message","text":"Is there a ~straightforward~ generic way with a `Tables.jl` -compatible object to transpose? Eg I have a 1 row N col table, and I want that to become an N row x 2 col table (where one column contains the headers of the original table, and the other has the row values)","user":"U8JP5B9T2","ts":"1612190566.208600","team":"T68168MUP","edited":{"user":"U8JP5B9T2","ts":"1612190596.000000"},"blocks":[{"type":"rich_text","block_id":"8FfK2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there a "},{"type":"text","text":"straightforward","style":{"strike":true}},{"type":"text","text":" generic way with a "},{"type":"text","text":"Tables.jl","style":{"code":true}},{"type":"text","text":" -compatible object to transpose? Eg I have a 1 row N col table, and I want that to become an N row x 2 col table (where one column contains the headers of the original table, and the other has the row values)"}]}]}],"thread_ts":"1612190566.208600","reply_count":7,"reply_users_count":4,"latest_reply":"1612342903.220600","reply_users":["U8JAMQGQY","U8JP5B9T2","U681ELA87","U68QW0PUZ"],"subscribed":false},{"client_msg_id":"8e22e8d1-b3b6-416b-9607-48b549d00412","type":"message","text":"I do not think there is, unless you accept going through a `DataFrame` :smile:.","user":"U8JAMQGQY","ts":"1612193225.209200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9XZV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I do not think there is, unless you accept going through a "},{"type":"text","text":"DataFrame","style":{"code":true}},{"type":"text","text":" "},{"type":"emoji","name":"smile"},{"type":"text","text":"."}]}]}],"thread_ts":"1612190566.208600","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"d5cef15e-c0f9-4407-9bc8-f8ea1df20d74","type":"message","text":"Heh, yeah, that satisfies \"straightforward\" but not \"generic\"","user":"U8JP5B9T2","ts":"1612194913.209500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ao+=O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Heh, yeah, that satisfies \"straightforward\" but not \"generic\""}]}]}],"thread_ts":"1612190566.208600","parent_user_id":"U8JP5B9T2","reactions":[{"name":"grin","users":["U8JAMQGQY"],"count":1}]},{"client_msg_id":"BB4C6FD2-E7BB-4A73-99DE-C6CA1C672AD0","type":"message","text":"You could go through a Matrix instead; see `Tables.table` and `Tables.matrix`","user":"U681ELA87","ts":"1612195463.210900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qTw=8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could go through a Matrix instead; see "},{"type":"text","text":"Tables.table","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Tables.matrix","style":{"code":true}}]}]}],"thread_ts":"1612190566.208600","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"C94C766F-4199-458E-93FD-64A4B4467F27","type":"message","text":"<https://tables.juliadata.org/stable/#Tables.table|https://tables.juliadata.org/stable/#Tables.table>","user":"U681ELA87","ts":"1612195480.211200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"noZ2A","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://tables.juliadata.org/stable/#Tables.table","text":"https://tables.juliadata.org/stable/#Tables.table"}]}]}],"thread_ts":"1612190566.208600","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"ad6a4f3e-0a64-497c-9aef-f17faa485081","type":"message","text":"<@U681ELA87> That loses the header info though, right? That's effectively what I'm doing now (my table type is just wrapped around a sparse matrix) manually","user":"U8JP5B9T2","ts":"1612206149.211900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZjAli","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U681ELA87"},{"type":"text","text":" That loses the header info though, right? That's effectively what I'm doing now (my table type is just wrapped around a sparse matrix) manually"}]}]}],"thread_ts":"1612190566.208600","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"B3F51106-66BF-4DCA-8751-06AB8052666B","type":"message","text":"We could probably do a lazy Tables.jl -based transpose in TableOperations.jl","user":"U681ELA87","ts":"1612225918.216400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EDg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We could probably do a lazy Tables.jl -based transpose in TableOperations.jl"}]}]}],"thread_ts":"1612190566.208600","parent_user_id":"U8JP5B9T2"},{"client_msg_id":"1e77a359-b72f-4d80-96da-3810e46d72c6","type":"message","text":"that sounds like a good idea","user":"U68QW0PUZ","ts":"1612342903.220600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kIOhs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that sounds like a good idea"}]}]}],"thread_ts":"1612190566.208600","parent_user_id":"U8JP5B9T2"}]