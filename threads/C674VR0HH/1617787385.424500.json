[{"client_msg_id":"6bde79f7-09df-41df-825b-e77abcd5abeb","type":"message","text":"Did the default move from `copycols = false` to `true` maybe?","user":"U7JQGPGCQ","ts":"1617787385.424500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lVB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Did the default move from "},{"type":"text","text":"copycols = false","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":" maybe?"}]}]}],"thread_ts":"1617787385.424500","reply_count":23,"reply_users_count":3,"latest_reply":"1618159263.484800","reply_users":["U8JAMQGQY","U7JQGPGCQ","U681ELA87"],"is_locked":false,"subscribed":false},{"client_msg_id":"683551ac-9c30-4dac-ab23-523da64397d1","type":"message","text":"<https://github.com/JuliaData/DataFrames.jl/commit/140a3e0247de209d261ca039cb7444e0f9744169>","user":"U8JAMQGQY","ts":"1617790783.424600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CMl","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaData/DataFrames.jl/commit/140a3e0247de209d261ca039cb7444e0f9744169"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"873bd668-25fa-489d-af99-77d6ea8652c0","type":"message","text":"this is the only change in this area and it has been backported to 0.22.7.","user":"U8JAMQGQY","ts":"1617790839.424800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bGTl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this is the only change in this area and it has been backported to 0.22.7."}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"212c5df7-7fc1-442f-b7c7-e4d7bebc5a88","type":"message","text":"Interesting, thanks, although I can't say I'm necessarily following the discussion there :slightly_smiling_face:","user":"U7JQGPGCQ","ts":"1617791983.425000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"V=hQL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting, thanks, although I can't say I'm necessarily following the discussion there "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"29c499e3-3977-4ad5-8612-7d0810bfc04b","type":"message","text":"The original reason was to make sure that `copy` copies columns (i.e. materializes them). But the change might have some additional side effects. Can you check what types the columns have after the operation you described. CC <@U681ELA87>","user":"U8JAMQGQY","ts":"1617795577.425200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GHC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The original reason was to make sure that "},{"type":"text","text":"copy","style":{"code":true}},{"type":"text","text":" copies columns (i.e. materializes them). But the change might have some additional side effects. Can you check what types the columns have after the operation you described. CC "},{"type":"user","user_id":"U681ELA87"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"f214254c-fba2-4ccb-91aa-65207014c969","type":"message","text":"After `DataFrame(Arrow.Table(\"mytable.arrow\"), copycols = false)` I get:\n```7-element Vector{DataType}:\n Arrow.List{String, Int32, Vector{UInt8}}\n Arrow.Primitive{Date, Vector{Arrow.Date{Arrow.Flatbuf.DateUnitModule.DAY, Int32}}}\n Arrow.Primitive{Date, Vector{Arrow.Date{Arrow.Flatbuf.DateUnitModule.DAY, Int32}}}\n Arrow.List{Union{Missing, String}, Int32, Vector{UInt8}}\n Arrow.List{Union{Missing, String}, Int32, Vector{UInt8}}\n Arrow.DictEncoded{String, Int8, Arrow.List{String, Int32, Vector{UInt8}}}\n Arrow.Primitive{Int64, Vector{Int64}}```","user":"U7JQGPGCQ","ts":"1617802186.425600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fgL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"After "},{"type":"text","text":"DataFrame(Arrow.Table(\"mytable.arrow\"), copycols = false)","style":{"code":true}},{"type":"text","text":" I get:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"7-element Vector{DataType}:\n Arrow.List{String, Int32, Vector{UInt8}}\n Arrow.Primitive{Date, Vector{Arrow.Date{Arrow.Flatbuf.DateUnitModule.DAY, Int32}}}\n Arrow.Primitive{Date, Vector{Arrow.Date{Arrow.Flatbuf.DateUnitModule.DAY, Int32}}}\n Arrow.List{Union{Missing, String}, Int32, Vector{UInt8}}\n Arrow.List{Union{Missing, String}, Int32, Vector{UInt8}}\n Arrow.DictEncoded{String, Int8, Arrow.List{String, Int32, Vector{UInt8}}}\n Arrow.Primitive{Int64, Vector{Int64}}"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"1fbc8b40-144d-4cfe-9088-0404e695b53a","type":"message","text":"After `DataFrame(Arrow.Table(\"mytable.arrow\"), copycols = true)` I get:\n```7-element Vector{DataType}:\n Vector{String} (alias for Array{String, 1})\n Vector{Date} (alias for Array{Date, 1})\n Vector{Date} (alias for Array{Date, 1})\n Vector{Union{Missing, String}} (alias for Array{Union{Missing, String}, 1})\n Vector{Union{Missing, String}} (alias for Array{Union{Missing, String}, 1})\n PooledArrays.PooledVector{String, Int8, Vector{Int8}} (alias for PooledArrays.PooledArray{String, Int8, 1, Array{Int8, 1}})\n Vector{Int64} (alias for Array{Int64, 1})```","user":"U7JQGPGCQ","ts":"1617802400.425800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"slN0x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"After "},{"type":"text","text":"DataFrame(Arrow.Table(\"mytable.arrow\"), copycols = true)","style":{"code":true}},{"type":"text","text":" I get:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"7-element Vector{DataType}:\n Vector{String} (alias for Array{String, 1})\n Vector{Date} (alias for Array{Date, 1})\n Vector{Date} (alias for Array{Date, 1})\n Vector{Union{Missing, String}} (alias for Array{Union{Missing, String}, 1})\n Vector{Union{Missing, String}} (alias for Array{Union{Missing, String}, 1})\n PooledArrays.PooledVector{String, Int8, Vector{Int8}} (alias for PooledArrays.PooledArray{String, Int8, 1, Array{Int8, 1}})\n Vector{Int64} (alias for Array{Int64, 1})"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"03e5b388-ad49-4617-8329-9bef6f4c3be0","type":"message","text":"Time is 1 second without copying, 100 seconds with copying","user":"U7JQGPGCQ","ts":"1617802427.426000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qN1g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Time is 1 second without copying, 100 seconds with copying"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"454528b3-7bba-4a97-ae18-4936cfaff937","type":"message","text":"so all as expected I would say?","user":"U7JQGPGCQ","ts":"1617802432.426200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+6f+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so all as expected I would say?"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"3537e982-3f09-4482-b44e-384076e05e25","type":"message","text":"Yes - up till now all as expected. The question is what you get when you do `DataFrame(ArrowTable(\"mytable.arrow\"))` because I understand that your expectation is to have `copycols=false` case, and you seem to get `copycols=true`. Right?","user":"U8JAMQGQY","ts":"1617805612.428400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dVbKP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes - up till now all as expected. The question is what you get when you do "},{"type":"text","text":"DataFrame(ArrowTable(\"mytable.arrow\"))","style":{"code":true}},{"type":"text","text":" because I understand that your expectation is to have "},{"type":"text","text":"copycols=false","style":{"code":true}},{"type":"text","text":" case, and you seem to get "},{"type":"text","text":"copycols=true","style":{"code":true}},{"type":"text","text":". Right?"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"b4170f71-1695-4fc4-8f66-037a6a66c698","type":"message","text":"Yes, just checked again, without specifyin the kwarg I'm getting the `true` behaviour now.","user":"U7JQGPGCQ","ts":"1617806875.428900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AuopF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, just checked again, without specifyin the kwarg I'm getting the "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":" behaviour now."}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"54f689db-eded-4126-8d15-f47ee3e6efcb","type":"message","text":"Sorry; I've been on vacation this week; did we get this sorted out? Is there a bug where `copycols=true` by default for `Arrow.Tabl` going into a DataFrame?","user":"U681ELA87","ts":"1618066893.472700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ksD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry; I've been on vacation this week; did we get this sorted out? Is there a bug where "},{"type":"text","text":"copycols=true","style":{"code":true}},{"type":"text","text":" by default for "},{"type":"text","text":"Arrow.Tabl","style":{"code":true}},{"type":"text","text":" going into a DataFrame?"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"8d52cd68-387d-4354-a7ef-1cffb715a153","type":"message","text":"Yes, it seems a copy is made now. Just tested:\n```julia&gt; using Arrow, DataFrames\n\njulia&gt; df = DataFrame(Arrow.Table(\"test.arrow\"))\n2×2 DataFrame\n Row │ x      y\n     │ Int64  String\n─────┼───────────────\n   1 │     1  a\n   2 │     2  b\n\njulia&gt; df.x\n2-element Vector{Int64}:\n 1\n 2\n\njulia&gt; df.y\n2-element Vector{String}:\n \"a\"\n \"b\"```\nI will have a look at it.","user":"U8JAMQGQY","ts":"1618071149.473100","team":"T68168MUP","edited":{"user":"U8JAMQGQY","ts":"1618071418.000000"},"blocks":[{"type":"rich_text","block_id":"l7S","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, it seems a copy is made now. Just tested:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Arrow, DataFrames\n\njulia> df = DataFrame(Arrow.Table(\"test.arrow\"))\n2×2 DataFrame\n Row │ x      y\n     │ Int64  String\n─────┼───────────────\n   1 │     1  a\n   2 │     2  b\n\njulia> df.x\n2-element Vector{Int64}:\n 1\n 2\n\njulia> df.y\n2-element Vector{String}:\n \"a\"\n \"b\""}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I will have a look at it."}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"299f0889-3abb-4fb2-84d6-d9fadc8dcdfb","type":"message","text":"OK, now I see the reason:\n```julia&gt; Arrow.Table(\"test.arrow\") isa Tables.CopiedColumns\nfalse```\nso it should be solved in Arrow.jl I think.","user":"U8JAMQGQY","ts":"1618071312.473300","team":"T68168MUP","edited":{"user":"U8JAMQGQY","ts":"1618071397.000000"},"blocks":[{"type":"rich_text","block_id":"YSqMB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK, now I see the reason:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Arrow.Table(\"test.arrow\") isa Tables.CopiedColumns\nfalse"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"so it should be solved in Arrow.jl I think."}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"578e2df6-8d19-40da-ad1d-5b97528fa67e","type":"message","text":"as now it is just:\n```julia&gt; typeof(Arrow.Table(\"test.arrow\"))\nArrow.Table```\n","user":"U8JAMQGQY","ts":"1618071348.473500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mhzxD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"as now it is just:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> typeof(Arrow.Table(\"test.arrow\"))\nArrow.Table"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"a703ed49-63f3-4938-bb70-fd8d1f13ee0f","type":"message","text":"and then:\n```julia&gt; supertype(typeof(Arrow.Table(\"test.arrow\")))\nTables.AbstractColumns```\nwhich is not specific enough","user":"U8JAMQGQY","ts":"1618071387.473700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XPK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and then:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> supertype(typeof(Arrow.Table(\"test.arrow\")))\nTables.AbstractColumns"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which is not specific enough"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"C1EF78CF-D599-418A-9EF7-7E7CF7BD8A3D","type":"message","text":"That is correct. What is the type of the result of Tables.columns on Arrow.Table?","user":"U681ELA87","ts":"1618071816.475400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZOvCg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That is correct. What is the type of the result of Tables.columns on Arrow.Table?"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"a9891a49-12a7-4267-9145-37958971240f","type":"message","text":"It is:\n```julia&gt; t = Arrow.Table(\"test.arrow\")\nArrow.Table: (a = [1],)\n\njulia&gt; Tables.columns(t)\nTables.CopiedColumns{Arrow.Table}: (a = [1],)```\nbut the problem is that in DataFrames.jl the constructor is:\n```DataFrame(x::Tables.CopiedColumns; copycols::Bool=false) =\n    DataFrame(Tables.source(x); copycols=copycols)```\nwhich means that `DataFrame(Tables.columns(t))` is OK (not copied columns) but `DataFrame(t)` is not OK as it dispatches to other method with signature:\n```function DataFrame(x::T; copycols::Bool=true) where {T}```\nwhich we cannot change and it copies columns by default:","user":"U8JAMQGQY","ts":"1618155684.483600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AGNx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> t = Arrow.Table(\"test.arrow\")\nArrow.Table: (a = [1],)\n\njulia> Tables.columns(t)\nTables.CopiedColumns{Arrow.Table}: (a = [1],)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but the problem is that in DataFrames.jl the constructor is:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"DataFrame(x::Tables.CopiedColumns; copycols::Bool=false) =\n    DataFrame(Tables.source(x); copycols=copycols)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which means that "},{"type":"text","text":"DataFrame(Tables.columns(t))","style":{"code":true}},{"type":"text","text":" is OK (not copied columns) but "},{"type":"text","text":"DataFrame(t)","style":{"code":true}},{"type":"text","text":" is not OK as it dispatches to other method with signature:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function DataFrame(x::T; copycols::Bool=true) where {T}"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"which we cannot change and it copies columns by default:"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"d2a0c24b-91ba-45a0-abdc-9a81d05764b3","type":"message","text":"```julia&gt; DataFrame(Tables.columns(t)).a\n1-element Arrow.Primitive{Int64, Vector{Int64}}:\n 1\n\njulia&gt; DataFrame(t).a\n1-element Vector{Int64}:\n 1```","user":"U8JAMQGQY","ts":"1618155695.483800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wF9=","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> DataFrame(Tables.columns(t)).a\n1-element Arrow.Primitive{Int64, Vector{Int64}}:\n 1\n\njulia> DataFrame(t).a\n1-element Vector{Int64}:\n 1"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"abcff0eb-41c9-48a6-ae4d-e7ac134fb689","type":"message","text":"So what do you think we should do? I would prefer to resolve this issue on Arrow.jl side. But if you would want to make a change in DataFrames.jl we have to do it now as in at most 2 weeks we will have a 1.0 release and then this will get frozen.","user":"U8JAMQGQY","ts":"1618155764.484000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lMJLV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So what do you think we should do? I would prefer to resolve this issue on Arrow.jl side. But if you would want to make a change in DataFrames.jl we have to do it now as in at most 2 weeks we will have a 1.0 release and then this will get frozen."}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"f62fb611-870e-4136-b750-d6d3970f9c00","type":"message","text":"As commented above as now `Arrow.Table` is a subtype of `Tables.AbstractColumns` and also `Tables.CopiedColumns` is a subtype of `Tables.AbstractColumns` I would just make `Arrow.Table` a subtype of `Tables.CopiedColumns`. The only problem I now notice is that `Tables.CopiedColumns` is not abstract as I have thought previously so this cannot be done like this.\n\nSo what do you think?","user":"U8JAMQGQY","ts":"1618156022.484200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9wh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As commented above as now "},{"type":"text","text":"Arrow.Table","style":{"code":true}},{"type":"text","text":" is a subtype of "},{"type":"text","text":"Tables.AbstractColumns","style":{"code":true}},{"type":"text","text":" and also "},{"type":"text","text":"Tables.CopiedColumns","style":{"code":true}},{"type":"text","text":" is a subtype of "},{"type":"text","text":"Tables.AbstractColumns","style":{"code":true}},{"type":"text","text":" I would just make "},{"type":"text","text":"Arrow.Table","style":{"code":true}},{"type":"text","text":" a subtype of "},{"type":"text","text":"Tables.CopiedColumns","style":{"code":true}},{"type":"text","text":". The only problem I now notice is that "},{"type":"text","text":"Tables.CopiedColumns","style":{"code":true}},{"type":"text","text":" is not abstract as I have thought previously so this cannot be done like this.\n\nSo what do you think?"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"aa540011-36fc-4f79-a220-0d3e05775f0d","type":"message","text":"Note that in CSV.jl we also have the same problem, and `DataFrame(CSV.File(\"test.csv\"))` copies columns while `CSV.read(\"test.csv\", DataFrame)` does not copy.","user":"U8JAMQGQY","ts":"1618156277.484400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3mS7m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Note that in CSV.jl we also have the same problem, and "},{"type":"text","text":"DataFrame(CSV.File(\"test.csv\"))","style":{"code":true}},{"type":"text","text":" copies columns while "},{"type":"text","text":"CSV.read(\"test.csv\", DataFrame)","style":{"code":true}},{"type":"text","text":" does not copy."}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"224df237-37dc-4581-9238-3d040d83aa24","type":"message","text":"Ok, I propose we do this then: <https://github.com/JuliaData/DataFrames.jl/pull/2710>. Sorry I've been a little scattered/unresponsive here; coming back from vacation where I've had very little internet service.","user":"U681ELA87","ts":"1618158778.484600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9xJK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, I propose we do this then: "},{"type":"link","url":"https://github.com/JuliaData/DataFrames.jl/pull/2710"},{"type":"text","text":". Sorry I've been a little scattered/unresponsive here; coming back from vacation where I've had very little internet service."}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"},{"client_msg_id":"1b303b75-9524-41e2-bedd-62312996d1c9","type":"message","text":"Looks good. Could you please add a test for this to avoid regression like we had this time? Thank you!","user":"U8JAMQGQY","ts":"1618159263.484800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iTAy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Looks good. Could you please add a test for this to avoid regression like we had this time? Thank you!"}]}]}],"thread_ts":"1617787385.424500","parent_user_id":"U7JQGPGCQ"}]