[{"client_msg_id":"3825e63d-4c0c-4c60-8d94-99e26b8d22db","type":"message","text":"Is there any precedent for using Arrow.jl with image data? I'm realizing that several of the tasks I'm working on could be rephrased into pure data handling issues. In particular the LZ4 or ZStd support could be particular useful.","user":"USU9FRPEU","ts":"1616000902.013900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SBK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any precedent for using Arrow.jl with image data? I'm realizing that several of the tasks I'm working on could be rephrased into pure data handling issues. In particular the LZ4 or ZStd support could be particular useful."}]}]}],"thread_ts":"1616000902.013900","reply_count":23,"reply_users_count":4,"latest_reply":"1616022075.022900","reply_users":["U9VG1AYSG","USU9FRPEU","U681ELA87","UCNPT22MQ"],"subscribed":false},{"client_msg_id":"667b6d89-0024-4567-866e-2d81bb8689e7","type":"message","text":"technically the standard supports tensors of arbitrary rank, so you could just put a matrix, or even a rank 3 set of matrices of different channels","user":"U9VG1AYSG","ts":"1616000966.014400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tj+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"technically the standard supports tensors of arbitrary rank, so you could just put a matrix, or even a rank 3 set of matrices of different channels"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"2b47f6df-da97-40a0-812e-918db919c8d7","type":"message","text":"last I looked they seemed fairly undecided about how the tensor format was going to work, and I don't know if it's been implemented in Arrow.jl","user":"U9VG1AYSG","ts":"1616000989.014600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0M+zu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"last I looked they seemed fairly undecided about how the tensor format was going to work, and I don't know if it's been implemented in Arrow.jl"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"d19ef3e1-9845-4397-97da-ebec1e139acf","type":"message","text":"short of that, you could of course just use a set of rank-1 vectors, it just wouldn't be that nice","user":"U9VG1AYSG","ts":"1616001023.014800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bqc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"short of that, you could of course just use a set of rank-1 vectors, it just wouldn't be that nice"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"8fc48fa1-0027-4029-8ad2-3003c4985284","type":"message","text":"At the end of the day the target format involves 5D data divided into subblocks which are linearized.  This paper describes pretty well one way to organize that kind of data:\n<https://arxiv.org/abs/2008.10311>","user":"USU9FRPEU","ts":"1616001092.015000","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"ImarisWriter: Open Source Software for Storage of Large Images in...","title_link":"https://arxiv.org/abs/2008.10311","text":"We publish as open source a high performance file writer library to store large images in the IMS format for high performance visualization and analysis. The library is capable of writing images...","fallback":"arXiv.org: ImarisWriter: Open Source Software for Storage of Large Images in...","from_url":"https://arxiv.org/abs/2008.10311","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/2008.10311"}],"blocks":[{"type":"rich_text","block_id":"8dg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"At the end of the day the target format involves 5D data divided into subblocks which are linearized.  This paper describes pretty well one way to organize that kind of data:\n"},{"type":"link","url":"https://arxiv.org/abs/2008.10311"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"type":"message","subtype":"thread_broadcast","text":"One thing I'm missing at the moment is a byte or bit shuffle such as implemented by Blosc:\n<https://github.com/Blosc/c-blosc/blob/5352508a420bec865c57cda116a5e5303df898d2/blosc/shuffle-generic.h#L32-L52>\n\nThat seems to have an impact on how well LZ4 compression works.","user":"USU9FRPEU","ts":"1616001188.015500","thread_ts":"1616000902.013900","root":{"client_msg_id":"3825e63d-4c0c-4c60-8d94-99e26b8d22db","type":"message","text":"Is there any precedent for using Arrow.jl with image data? I'm realizing that several of the tasks I'm working on could be rephrased into pure data handling issues. In particular the LZ4 or ZStd support could be particular useful.","user":"USU9FRPEU","ts":"1616000902.013900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SBK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any precedent for using Arrow.jl with image data? I'm realizing that several of the tasks I'm working on could be rephrased into pure data handling issues. In particular the LZ4 or ZStd support could be particular useful."}]}]}],"thread_ts":"1616000902.013900","reply_count":23,"reply_users_count":4,"latest_reply":"1616022075.022900","reply_users":["U9VG1AYSG","USU9FRPEU","U681ELA87","UCNPT22MQ"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"Kbni8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One thing I'm missing at the moment is a byte or bit shuffle such as implemented by Blosc:\n"},{"type":"link","url":"https://github.com/Blosc/c-blosc/blob/5352508a420bec865c57cda116a5e5303df898d2/blosc/shuffle-generic.h#L32-L52"},{"type":"text","text":"\n\nThat seems to have an impact on how well LZ4 compression works."}]}]}],"client_msg_id":"7b4003a7-d865-4974-a9df-999e5e52068c"},{"client_msg_id":"e4549f7a-72ae-4a83-af76-ecad9fc19795","type":"message","text":"to be honest I think I'd recommend that you do *NOT* attempt to use Arrow for this, yes it can probably work, but Arrow was very much designed to be a tabular format.  I kind of feel like what happened is that they started out with a tabular format to solve the problems they had with pandas, and then over time they realized they needed a ton of extra stuff to interop with all the things they wanted to and support all the things they wanted to, and they wound up with a tabular format that supports a ton of different data types, but is still essentially a tabular format","user":"U9VG1AYSG","ts":"1616001216.015800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nagg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to be honest I think I'd recommend that you do "},{"type":"text","text":"NOT","style":{"bold":true}},{"type":"text","text":" attempt to use Arrow for this, yes it can probably work, but Arrow was very much designed to be a tabular format.  I kind of feel like what happened is that they started out with a tabular format to solve the problems they had with pandas, and then over time they realized they needed a ton of extra stuff to interop with all the things they wanted to and support all the things they wanted to, and they wound up with a tabular format that supports a ton of different data types, but is still essentially a tabular format"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"7cc020cf-bb61-432a-b6a2-6d3d47f21089","type":"message","text":"frankly, I find the tabular nature of arrow to be a wasted opportunity, in its current form it doesn't make much sense that it goes so far out of its way to be tabular and have only metadata for tabular formats","user":"U9VG1AYSG","ts":"1616001252.016200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ppr+f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"frankly, I find the tabular nature of arrow to be a wasted opportunity, in its current form it doesn't make much sense that it goes so far out of its way to be tabular and have only metadata for tabular formats"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"faf44a3c-995b-4427-af24-075a731046ff","type":"message","text":"That's a useful note. I appreciate that.","user":"USU9FRPEU","ts":"1616001302.016400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k3E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's a useful note. I appreciate that."}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"d7f1b34f-d0da-44f2-bb23-6fcb2148172f","type":"message","text":"yeah, you probably want to go HDF5 frankly, it's not as hyped of course, but still makes way more sense for stuff like this in my mind","user":"U9VG1AYSG","ts":"1616001352.016600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pwm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, you probably want to go HDF5 frankly, it's not as hyped of course, but still makes way more sense for stuff like this in my mind"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"7ba717eb-8a02-4a03-ba96-9f0d904924d4","type":"message","text":"That ImarisWriter package I linked above is basically a HDF5 overlay. The .ims files are valid HDF5 containers.","user":"USU9FRPEU","ts":"1616001421.016800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"mZ4/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That ImarisWriter package I linked above is basically a HDF5 overlay. The .ims files are valid HDF5 containers."}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"887e87d4-6c26-426a-8c4e-aad48bdd2d6a","type":"message","text":"that's even more of a reason to stick with HDF5","user":"U9VG1AYSG","ts":"1616001439.017000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3J5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's even more of a reason to stick with HDF5"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"3b7eb1c3-b92a-4638-8b26-4a06a39dfd2f","type":"message","text":"in that case I *really* would not consider arrow","user":"U9VG1AYSG","ts":"1616001447.017200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JRe/L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in that case I "},{"type":"text","text":"really","style":{"bold":true}},{"type":"text","text":" would not consider arrow"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"1acf6d22-eab4-4c8d-962d-1062183ca4af","type":"message","text":"That makes sense from the on-disk perspective, but I'm also thinking about in-memory formatting.","user":"USU9FRPEU","ts":"1616001476.017400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YlPf0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That makes sense from the on-disk perspective, but I'm also thinking about in-memory formatting."}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"8bebfcaa-102b-410e-aef7-8a0985897246","type":"message","text":"if you have tabular stuff: yes, definitely use Arrow, it's at least as good as parquet despite the fact that it's less common, but for non-tabular stuff it's kind of a hack","user":"U9VG1AYSG","ts":"1616001499.017600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VGx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if you have tabular stuff: yes, definitely use Arrow, it's at least as good as parquet despite the fact that it's less common, but for non-tabular stuff it's kind of a hack"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"448cc947-868a-445c-a6aa-01dadacf1b71","type":"message","text":"well I don't really think arrow is going to help you with that either.  If you can use memory mapped HDF5, you can potentially do zero-copy stuff just like you would with arrow","user":"U9VG1AYSG","ts":"1616001527.017800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oWh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well I don't really think arrow is going to help you with that either.  If you can use memory mapped HDF5, you can potentially do zero-copy stuff just like you would with arrow"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"type":"message","subtype":"thread_broadcast","text":"Perhaps what I'm really asking about is reusing some of the components that Arrow uses to do other things. For example, the compression codecs interface has come to my attention.","user":"USU9FRPEU","ts":"1616001614.018000","thread_ts":"1616000902.013900","root":{"client_msg_id":"3825e63d-4c0c-4c60-8d94-99e26b8d22db","type":"message","text":"Is there any precedent for using Arrow.jl with image data? I'm realizing that several of the tasks I'm working on could be rephrased into pure data handling issues. In particular the LZ4 or ZStd support could be particular useful.","user":"USU9FRPEU","ts":"1616000902.013900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SBK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any precedent for using Arrow.jl with image data? I'm realizing that several of the tasks I'm working on could be rephrased into pure data handling issues. In particular the LZ4 or ZStd support could be particular useful."}]}]}],"thread_ts":"1616000902.013900","reply_count":23,"reply_users_count":4,"latest_reply":"1616022075.022900","reply_users":["U9VG1AYSG","USU9FRPEU","U681ELA87","UCNPT22MQ"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"PJG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Perhaps what I'm really asking about is reusing some of the components that Arrow uses to do other things. For example, the compression codecs interface has come to my attention."}]}]}],"client_msg_id":"91ed8538-b964-4f55-bc78-68bb460d05d5"},{"client_msg_id":"806d6aed-7711-4bd3-b949-44b5c01cd60d","type":"message","text":"<@U681ELA87> would know a lot more about that than I do, but I don't think arrow will help you there either, you should probably just use [TranscodingStreams.jl](<https://github.com/JuliaIO/TranscodingStreams.jl>).\n\nAgain, you really should think of Arrow as \"just another tabular format\", despite all of its fancy features, it is still pretty table-obsessed, very different from more general serialization formats such as HDF5, protobuf, flatbuffer, BSON","user":"U9VG1AYSG","ts":"1616001770.018500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2bTf","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U681ELA87"},{"type":"text","text":" would know a lot more about that than I do, but I don't think arrow will help you there either, you should probably just use [TranscodingStreams.jl]("},{"type":"link","url":"https://github.com/JuliaIO/TranscodingStreams.jl"},{"type":"text","text":").\n\nAgain, you really should think of Arrow as \"just another tabular format\", despite all of its fancy features, it is still pretty table-obsessed, very different from more general serialization formats such as HDF5, protobuf, flatbuffer, BSON"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"04a5ac8f-a87c-48ad-93cd-aae453088bb6","type":"message","text":"Got it. This makes sense. I'll probably return to this when I have analysis artifacts to deal with.","user":"USU9FRPEU","ts":"1616001830.018700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vc10","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Got it. This makes sense. I'll probably return to this when I have analysis artifacts to deal with."}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"ddd97203-24f4-4a16-998d-d7fc6bccf1c4","type":"message","text":"if those artifacts happen to be tables, then yes, by all means, use arrow","user":"U9VG1AYSG","ts":"1616001869.019500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4E5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if those artifacts happen to be tables, then yes, by all means, use arrow"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"a367fa80-6d80-4647-ba2f-68f9da6123a0","type":"message","text":"yeah, Arrow.jl isn’t really doing anything that fancy w/ the compression stuff. Better off just using CodecZstd.jl or CodecLZ4.jl directly.","user":"U681ELA87","ts":"1616001950.020500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lXBha","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, Arrow.jl isn’t really doing anything that fancy w/ the compression stuff. Better off just using CodecZstd.jl or CodecLZ4.jl directly."}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU","reactions":[{"name":"+1","users":["USU9FRPEU"],"count":1}]},{"client_msg_id":"0c6b34fa-7f09-4e81-8ea4-863cfa64279d","type":"message","text":"HDF5 with blosc Zstd as a filter works pretty well, and as Michael said, you can memory map HDF5 (assuming your array is not compressed or chunked). The only real downside of HDF5, in my view, is that it isn't threadsafe (even across independent files)","user":"UCNPT22MQ","ts":"1616021614.022500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cSny","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"HDF5 with blosc Zstd as a filter works pretty well, and as Michael said, you can memory map HDF5 (assuming your array is not compressed or chunked). The only real downside of HDF5, in my view, is that it isn't threadsafe (even across independent files)"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"c7787efa-c8bb-463e-9d2f-1b05c4295e72","type":"message","text":"*using the HDF library.","user":"USU9FRPEU","ts":"1616021856.022700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DZn5M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"*using the HDF library."}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"aaae07ab-8143-40b3-94c5-6ef762eb1f41","type":"message","text":"yeah I was going to say, it has to be threadsafe accross different files almost by definition.  Didn't someone do a pure Julia implementation of HDF5 as part of JLD2?  is there a separate library for it or is it part of JLD2?","user":"U9VG1AYSG","ts":"1616022075.022900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qMZgl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah I was going to say, it has to be threadsafe accross different files almost by definition.  Didn't someone do a pure Julia implementation of HDF5 as part of JLD2?  is there a separate library for it or is it part of JLD2?"}]}]}],"thread_ts":"1616000902.013900","parent_user_id":"USU9FRPEU"}]