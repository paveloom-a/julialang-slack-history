[{"client_msg_id":"4e368dc0-a389-4e2f-8fb2-b137b4f0e40f","type":"message","text":"```ERROR: LoadError: UndefRefError: access to undefined reference\nStacktrace:\n [1] getindex at ./array.jl:809 [inlined]\n [2] construct at /home/vchuravy/.julia/packages/StructTypes/MF8bN/src/StructTypes.jl:860 [inlined]\n [3] #read#42 at /home/vchuravy/.julia/packages/JSON3/IvnMR/src/structs.jl:572 [inlined]\n [4] read at /home/vchuravy/.julia/packages/JSON3/IvnMR/src/structs.jl:494 [inlined]\n [5] read(::String, ::Type{FluxRM.System}; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/vchuravy/.julia/packages/JSON3/IvnMR/src/structs.jl:34\n [6] read(::String, ::Type{FluxRM.System}) at /home/vchuravy/.julia/packages/JSON3/IvnMR/src/structs.jl:33```","user":"U67BJLYCS","ts":"1617136970.318500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k/bq","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: LoadError: UndefRefError: access to undefined reference\nStacktrace:\n [1] getindex at ./array.jl:809 [inlined]\n [2] construct at /home/vchuravy/.julia/packages/StructTypes/MF8bN/src/StructTypes.jl:860 [inlined]\n [3] #read#42 at /home/vchuravy/.julia/packages/JSON3/IvnMR/src/structs.jl:572 [inlined]\n [4] read at /home/vchuravy/.julia/packages/JSON3/IvnMR/src/structs.jl:494 [inlined]\n [5] read(::String, ::Type{FluxRM.System}; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/vchuravy/.julia/packages/JSON3/IvnMR/src/structs.jl:34\n [6] read(::String, ::Type{FluxRM.System}) at /home/vchuravy/.julia/packages/JSON3/IvnMR/src/structs.jl:33"}]}]}],"thread_ts":"1617136970.318500","reply_count":1,"reply_users_count":1,"latest_reply":"1617138723.322700","reply_users":["U681ELA87"],"is_locked":false,"subscribed":false},{"client_msg_id":"ca81ca08-ae38-4f78-93ba-9ec4c4262302","type":"message","text":"Ah, this is an interesting bug/issue. The current code is assuming that we at least got a value for each field in the struct, and when we go to construct, it’s finding that it’s missing the 2nd/3rd field values. I think we can probably fix that, but you would need a constructor like `System(duration) = …` that took just the single argument. If you open an issues at StructTypes/JSON3.jl. I can look into it","user":"U681ELA87","ts":"1617138723.322700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zTQEx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, this is an interesting bug/issue. The current code is assuming that we at least got a value for each field in the struct, and when we go to construct, it’s finding that it’s missing the 2nd/3rd field values. I think we can probably fix that, but you would need a constructor like "},{"type":"text","text":"System(duration) = …","style":{"code":true}},{"type":"text","text":" that took just the single argument. If you open an issues at StructTypes/JSON3.jl. I can look into it"}]}]}],"thread_ts":"1617136970.318500","parent_user_id":"U67BJLYCS"}]