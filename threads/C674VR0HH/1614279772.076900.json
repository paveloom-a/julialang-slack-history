[{"client_msg_id":"e19373d0-b878-4f98-9c9d-283d173feefa","type":"message","text":"I have a file where I want to read in all the bytes, but after every 3rd byte I want to insert a `0` byte.\n\nThe bigger picture is that the three bytes contain two `UInt12`s which I want to unpack into `UInt16`s\n\nWhat's the fastest way to do this?","user":"USU9FRPEU","ts":"1614279772.076900","team":"T68168MUP","edited":{"user":"USU9FRPEU","ts":"1614279799.000000"},"blocks":[{"type":"rich_text","block_id":"DX2O+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have a file where I want to read in all the bytes, but after every 3rd byte I want to insert a "},{"type":"text","text":"0","style":{"code":true}},{"type":"text","text":" byte.\n\nThe bigger picture is that the three bytes contain two `UInt12`s which I want to unpack into `UInt16`s\n\nWhat's the fastest way to do this?"}]}]}],"thread_ts":"1614279772.076900","reply_count":4,"reply_users_count":2,"latest_reply":"1614288672.078300","reply_users":["U011QC7QLPL","USU9FRPEU"],"subscribed":false},{"client_msg_id":"a1d67447-ed39-4d8f-9e60-000023896afa","type":"message","text":"Here's a start for ideas.  I think it should be relatively quick, but there may be something less painful\n```# scratch storage for two Uint16s\nuint16_buf = zeros(UInt8, 4)\n\nwhile bytesavailable(io) &gt;= 3\n    readbytes!(io, uint16_buf, 3)\n    a, b = reinterpret(UInt16, uint16_buf)   \n    # do whatever with a and b\nend```","user":"U011QC7QLPL","ts":"1614287632.077700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eU/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's a start for ideas.  I think it should be relatively quick, but there may be something less painful\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"# scratch storage for two Uint16s\nuint16_buf = zeros(UInt8, 4)\n\nwhile bytesavailable(io) >= 3\n    readbytes!(io, uint16_buf, 3)\n    a, b = reinterpret(UInt16, uint16_buf)   \n    # do whatever with a and b\nend"}]}]}],"thread_ts":"1614279772.076900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"f777157f-8c2e-4f14-9c7a-4346a07e0908","type":"message","text":"I started messing with this:\n```primitive type UInt12Pair &lt;: Unsigned 24 end\nBase.UInt32(x::UInt12Pair) = Core.zext_int(UInt32,x)```","user":"USU9FRPEU","ts":"1614287932.077900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wtXq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I started messing with this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"primitive type UInt12Pair <: Unsigned 24 end\nBase.UInt32(x::UInt12Pair) = Core.zext_int(UInt32,x)"}]}]}],"thread_ts":"1614279772.076900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"b4b3ff4d-0c04-4a13-82c7-1e6b145144bb","type":"message","text":"Ah, didn't know about `zext_int`; looks that maps to an LLVM intrinsic so may generate better code than above","user":"U011QC7QLPL","ts":"1614288622.078100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A9Km7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, didn't know about "},{"type":"text","text":"zext_int","style":{"code":true}},{"type":"text","text":"; looks that maps to an LLVM intrinsic so may generate better code than above"}]}]}],"thread_ts":"1614279772.076900","parent_user_id":"USU9FRPEU"},{"client_msg_id":"d7a16c24-1307-45a9-ac79-43825a1d8026","type":"message","text":"yea, I've been trying to figure that out. Googling it and the related `sext_int` was not very fun","user":"USU9FRPEU","ts":"1614288672.078300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"as/sb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yea, I've been trying to figure that out. Googling it and the related "},{"type":"text","text":"sext_int","style":{"code":true}},{"type":"text","text":" was not very fun"}]}]}],"thread_ts":"1614279772.076900","parent_user_id":"USU9FRPEU"}]