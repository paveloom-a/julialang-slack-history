[{"client_msg_id":"94c63e73-e51f-4606-ac90-6bb4cdbc0613","type":"message","text":"Are there some established JSON serialization formats for DataFrames?","user":"UB2QSHWPN","ts":"1616669419.246700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SEZXd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are there some established JSON serialization formats for DataFrames?"}]}]}],"thread_ts":"1616669419.246700","reply_count":3,"reply_users_count":2,"latest_reply":"1616751286.266900","reply_users":["UB2QSHWPN","U681ELA87"],"is_locked":false,"subscribed":false},{"client_msg_id":"87b72316-6845-4c26-aaf1-168e1f23d9b9","type":"message","text":"I'm asking, because JSON keys are unordered, so we can't guarantee that writing and parsing JSON will produce the same DataFrame, if we use eihter one of this formats:\n```[ {\"fieldA\":1,\"fieldB\":\"a\",}, {\"fieldA\":2,\"fieldB\":\"b\"}, {\"fieldA\":3,\"fieldB\":\"c\"} ]```\nor\n```{ \"fieldA\":[1,2,3], \"fieldB\":[\"a\",\"b\",\"c\"] }```\nSo we need to order them using something like this:\n```[ {\"fieldA\":[1,2,3]}, {\"fieldB\":[\"a\",\"b\",\"c\"]} ]```","user":"UB2QSHWPN","ts":"1616675502.251200","team":"T68168MUP","edited":{"user":"UB2QSHWPN","ts":"1616675529.000000"},"blocks":[{"type":"rich_text","block_id":"cYHuo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm asking, because JSON keys are unordered, so we can't guarantee that writing and parsing JSON will produce the same DataFrame, if we use eihter one of this formats:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[ {\"fieldA\":1,\"fieldB\":\"a\",}, {\"fieldA\":2,\"fieldB\":\"b\"}, {\"fieldA\":3,\"fieldB\":\"c\"} ]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"or\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"{ \"fieldA\":[1,2,3], \"fieldB\":[\"a\",\"b\",\"c\"] }"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nSo we need to order them using something like this:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"[ {\"fieldA\":[1,2,3]}, {\"fieldB\":[\"a\",\"b\",\"c\"]} ]"}]}]}],"thread_ts":"1616669419.246700","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"54c93ddb-3373-4bcb-bf83-54a0903eaff9","type":"message","text":"You can use JSONTables.jl. It maintains JSON object key ordering when reading/writing. It provides both the `arraytable` and `objecttable` functions for the two formats you mentioned. Reading the table back in is always just `jsontable(json)`. Then to turn it into a DataFrame, you just do:\n\n```df = DataFrame(jsontable(json))```","user":"U681ELA87","ts":"1616682401.254700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6bh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can use JSONTables.jl. It maintains JSON object key ordering when reading/writing. It provides both the "},{"type":"text","text":"arraytable","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"objecttable","style":{"code":true}},{"type":"text","text":" functions for the two formats you mentioned. Reading the table back in is always just "},{"type":"text","text":"jsontable(json)","style":{"code":true}},{"type":"text","text":". Then to turn it into a DataFrame, you just do:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df = DataFrame(jsontable(json))"}]}]}],"thread_ts":"1616669419.246700","parent_user_id":"UB2QSHWPN"},{"client_msg_id":"b6d2189d-b422-43c1-aded-9938b361d582","type":"message","text":"Thanks, I will try! So, there is care taken to order elements, but this requirement is NOT represented in JSON format itself, right?","user":"UB2QSHWPN","ts":"1616751286.266900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XbL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, I will try! So, there is care taken to order elements, but this requirement is NOT represented in JSON format itself, right?"}]}]}],"thread_ts":"1616669419.246700","parent_user_id":"UB2QSHWPN"}]