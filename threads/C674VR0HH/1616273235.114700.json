[{"client_msg_id":"42618c2d-fb35-4609-931c-4c9081839af2","type":"message","text":"<@UBF9YRB6H> some time ago you had this...\n`@where(flights, (:month .== 1) | (:month .== 2))` as an example of an `or` clause. Is this syntax still supported?","user":"UUYRZ3LU8","ts":"1616273235.114700","team":"T68168MUP","edited":{"user":"UUYRZ3LU8","ts":"1616273245.000000"},"blocks":[{"type":"rich_text","block_id":"opY6l","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UBF9YRB6H"},{"type":"text","text":" some time ago you had this...\n"},{"type":"text","text":"@where(flights, (:month .== 1) | (:month .== 2))","style":{"code":true}},{"type":"text","text":" as an example of an "},{"type":"text","text":"or","style":{"code":true}},{"type":"text","text":" clause. Is this syntax still supported?"}]}]}],"thread_ts":"1616273235.114700","reply_count":1,"reply_users_count":1,"latest_reply":"1616274463.114900","reply_users":["UBF9YRB6H"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"I don't think there is a vectorized `or` that would work for that use-case, actually. it's a shortcoming that we should fix.\n\nhere is something that will have the behavior you want\n\n```julia&gt; function ⩔(x, y) # \\Or\n       if x === missing || y === missing \n           return false\n       else\n           x || y\n       end\n       end\n⩔ (generic function with 1 method)\n\njulia&gt; [true] .⩔ [false]\n1-element BitArray{1}:\n 1```\nThis seems like an embarrassing absence in the ecosystem. Maybe I'm missing an obvious solution? In particular, you should be able to do `x .|| y`, but you can't. Should I file an issue in base?","user":"UBF9YRB6H","ts":"1616274463.114900","thread_ts":"1616273235.114700","root":{"client_msg_id":"42618c2d-fb35-4609-931c-4c9081839af2","type":"message","text":"<@UBF9YRB6H> some time ago you had this...\n`@where(flights, (:month .== 1) | (:month .== 2))` as an example of an `or` clause. Is this syntax still supported?","user":"UUYRZ3LU8","ts":"1616273235.114700","team":"T68168MUP","edited":{"user":"UUYRZ3LU8","ts":"1616273245.000000"},"blocks":[{"type":"rich_text","block_id":"opY6l","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UBF9YRB6H"},{"type":"text","text":" some time ago you had this...\n"},{"type":"text","text":"@where(flights, (:month .== 1) | (:month .== 2))","style":{"code":true}},{"type":"text","text":" as an example of an "},{"type":"text","text":"or","style":{"code":true}},{"type":"text","text":" clause. Is this syntax still supported?"}]}]}],"thread_ts":"1616273235.114700","reply_count":1,"reply_users_count":1,"latest_reply":"1616274463.114900","reply_users":["UBF9YRB6H"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"tK2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think there is a vectorized "},{"type":"text","text":"or","style":{"code":true}},{"type":"text","text":" that would work for that use-case, actually. it's a shortcoming that we should fix.\n\nhere is something that will have the behavior you want\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> function ⩔(x, y) # \\Or\n       if x === missing || y === missing \n           return false\n       else\n           x || y\n       end\n       end\n⩔ (generic function with 1 method)\n\njulia> [true] .⩔ [false]\n1-element BitArray{1}:\n 1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nThis seems like an embarrassing absence in the ecosystem. Maybe I'm missing an obvious solution? In particular, you should be able to do "},{"type":"text","text":"x .|| y","style":{"code":true}},{"type":"text","text":", but you can't. Should I file an issue in base?"}]}]}],"client_msg_id":"974c5b72-280a-4851-9025-fcdcf91a0366"}]