[{"client_msg_id":"F12BA2FD-D0EA-48C5-B469-00E23BB6BE16","type":"message","text":"How can you use leftjoin with multiple data frames? For working with just a few, leftjoining two at a time would work but  if I want to leftjoin 100 data frames, how can I join them faster?\n\nI’m thinking of implementing some sort of for loop for this but not sure if this is best or how I’d so.\n\n","user":"U01QJ915TFD","ts":"1616159976.057600","team":"T68168MUP","edited":{"user":"U01QJ915TFD","ts":"1616160090.000000"},"blocks":[{"type":"rich_text","block_id":"L=K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How can you use leftjoin with multiple data frames? For working with just a few, leftjoining two at a time would work but  if I want to leftjoin 100 data frames, how can I join them faster?\n\nI’m thinking of implementing some sort of for loop for this but not sure if this is best or how I’d so.\n\n"}]}]}],"thread_ts":"1616159976.057600","reply_count":14,"reply_users_count":3,"latest_reply":"1616172056.065000","reply_users":["U7JQGPGCQ","U01QJ915TFD","UBF9YRB6H"],"subscribed":false},{"client_msg_id":"e5655275-d9d0-4b3f-9aaf-4db6db0fb574","type":"message","text":"`reduce((x, y) -&gt; leftjoin(x, y, on = joincols), df_array) `","user":"U7JQGPGCQ","ts":"1616160791.058200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"R=s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"`reduce((x, y) -> leftjoin(x, y, on = joincols), df_array) `"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"a5990d7a-650f-4a2c-8462-60c1a8ce0280","type":"message","text":"Assuming you have a variable `joincols` which holds the columns you're joining on and a vector `df_array` which holds your DataFrames","user":"U7JQGPGCQ","ts":"1616160855.058400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"13O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Assuming you have a variable "},{"type":"text","text":"joincols","style":{"code":true}},{"type":"text","text":" which holds the columns you're joining on and a vector "},{"type":"text","text":"df_array","style":{"code":true}},{"type":"text","text":" which holds your DataFrames"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"8f2befcd-fd6e-40eb-a5b9-845a7ce0caf8","type":"message","text":"Of course a loop would work as well","user":"U7JQGPGCQ","ts":"1616160882.058600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uo7d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Of course a loop would work as well"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"66731A49-2882-4F01-85F8-401841ABFF14","type":"message","text":"<@U7JQGPGCQ> thank you. How do you assign the columns you’re joining to the joincols variable? Also, how do you hold your data frames in a vector df_array? In my case, I’m trying to left join the DateTime column which conveniently all my dataframes have.","user":"U01QJ915TFD","ts":"1616163115.062200","team":"T68168MUP","edited":{"user":"U01QJ915TFD","ts":"1616163339.000000"},"blocks":[{"type":"rich_text","block_id":"/6i8l","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U7JQGPGCQ"},{"type":"text","text":" thank you. How do you assign the columns you’re joining to the joincols variable? Also, how do you hold your data frames in a vector df_array? In my case, I’m trying to left join the DateTime column which conveniently all my dataframes have."}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"e856ad2a-7841-4f18-b7a1-cc712362ccf5","type":"message","text":"<@U01QJ915TFD> these are things you can learn in the manual. You can create a vector of dataframes with `df_array = [df1, df2, df3, df4]`.\n\n&gt; How do you assign the columns you’re joining to the joincols variable?\nhe just means `joincols = :DateTime`\n\nPlease make sure you have read the manual. It's the only way to get intuition for understanding these kinds of answers","user":"UBF9YRB6H","ts":"1616169047.063200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZfO8","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01QJ915TFD"},{"type":"text","text":" these are things you can learn in the manual. You can create a vector of dataframes with "},{"type":"text","text":"df_array = [df1, df2, df3, df4]","style":{"code":true}},{"type":"text","text":".\n\n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"How do you assign the columns you’re joining to the joincols variable?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nhe just means "},{"type":"text","text":"joincols = :DateTime","style":{"code":true}},{"type":"text","text":"\n\nPlease make sure you have read the manual. It's the only way to get intuition for understanding these kinds of answers"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"17908acb-e5c0-4eae-b07c-67f1b1777749","type":"message","text":"<@UBF9YRB6H> Thank you, yeah you're right. I'm heading back to the manual. In his example he has x and y. What are these supposed to represent? Would I include the dataframe names in place of x,y on both the reduce function and the leftjoin?","user":"U01QJ915TFD","ts":"1616169583.063400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B3T","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UBF9YRB6H"},{"type":"text","text":" Thank you, yeah you're right. I'm heading back to the manual. In his example he has x and y. What are these supposed to represent? Would I include the dataframe names in place of x,y on both the reduce function and the leftjoin?"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"6dce82ee-0092-4de4-8f60-d3028e900877","type":"message","text":"Actually just leaving it as is with the x and y made it work :slightly_smiling_face: No idea why there's an x and a y though.","user":"U01QJ915TFD","ts":"1616169689.063600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GJ4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually just leaving it as is with the x and y made it work "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" No idea why there's an x and a y though."}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"ef3f4b20-24f0-4e46-b145-110bc90129c3","type":"message","text":"My rows with missing values are now classified as a `Float64?`  . How will this question mark effect the work I do on this data? If I forward fill will it turn back into a float64 without the question mark?","user":"U01QJ915TFD","ts":"1616169759.063800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"i=Wvd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My rows with missing values are now classified as a "},{"type":"text","text":"Float64?","style":{"code":true}},{"type":"text","text":"  . How will this question mark effect the work I do on this data? If I forward fill will it turn back into a float64 without the question mark?"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"3b2744de-7d40-4a80-93c3-61cb3db65253","type":"message","text":"`x` and `y` are data frames. See the documentation for `leftjoin` by doing `? leftjoin`. You can see that in Nils's example, the `x` and `y` take the place of the data frames in the documentation.\n\n`Float64?` means the column contains both `Float64` and `missing` values. I don't know what \"forward fill\" means, but if you replace all the missing values with `float` values, it should work. And if not, it's easy to make the column only allow Float64 values again.","user":"UBF9YRB6H","ts":"1616169978.064000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n3g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" are data frames. See the documentation for "},{"type":"text","text":"leftjoin","style":{"code":true}},{"type":"text","text":" by doing "},{"type":"text","text":"? leftjoin","style":{"code":true}},{"type":"text","text":". You can see that in Nils's example, the "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" take the place of the data frames in the documentation.\n\n"},{"type":"text","text":"Float64?","style":{"code":true}},{"type":"text","text":" means the column contains both "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"missing","style":{"code":true}},{"type":"text","text":" values. I don't know what \"forward fill\" means, but if you replace all the missing values with "},{"type":"text","text":"float","style":{"code":true}},{"type":"text","text":" values, it should work. And if not, it's easy to make the column only allow Float64 values again."}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"455e83bd-0d29-4a2a-9d12-b24dc63cafa9","type":"message","text":"Thanks that makes sense. So it's as if x will always be the main dataframe on the left and y will be substituted by each of the other dataframes","user":"U01QJ915TFD","ts":"1616170315.064200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Md4xz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks that makes sense. So it's as if x will always be the main dataframe on the left and y will be substituted by each of the other dataframes"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"e2ecd790-2a82-4518-9f23-c13e809b86dc","type":"message","text":"If I change missing values to float, what will be the numerical value for these missing values?","user":"U01QJ915TFD","ts":"1616170348.064400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VpO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I change missing values to float, what will be the numerical value for these missing values?"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"e4ec937a-1e69-43ea-a868-e4603ae955d7","type":"message","text":"Forward fill means that the last available value before a missing value replaces the missing values.","user":"U01QJ915TFD","ts":"1616170497.064600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yul","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Forward fill means that the last available value before a missing value replaces the missing values."}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"95634579-8299-4666-9407-e687643b28b9","type":"message","text":"So if my data has values at 9:30:01\nbut no data at 9:30:02, it would replace the missing value at 9:30:02 with the available data from the previous row","user":"U01QJ915TFD","ts":"1616170595.064800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qIEdp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So if my data has values at 9:30:01\nbut no data at 9:30:02, it would replace the missing value at 9:30:02 with the available data from the previous row"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"},{"client_msg_id":"881b9751-0926-403c-adc4-e007223eee10","type":"message","text":"&gt; If I change missing values to float, what will be the numerical value for these missing values?\nYou can't just convert `missing` to `float`, you have to actually input a number, like you describe with forward fill","user":"UBF9YRB6H","ts":"1616172056.065000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wC5w","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"If I change missing values to float, what will be the numerical value for these missing values?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nYou can't just convert "},{"type":"text","text":"missing","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"float","style":{"code":true}},{"type":"text","text":", you have to actually input a number, like you describe with forward fill"}]}]}],"thread_ts":"1616159976.057600","parent_user_id":"U01QJ915TFD"}]