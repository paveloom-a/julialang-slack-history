[{"client_msg_id":"505bf0af-1db3-492c-8b46-a4d1e05106f4","type":"message","text":"How do people actually do moving averages?\nLike this seems like a simple task, i just want my 1D time series plot to be smoother.","user":"U6A936746","ts":"1614944987.236100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fKh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How do people actually do moving averages?\nLike this seems like a simple task, i just want my 1D time series plot to be smoother."}]}]}],"thread_ts":"1614944987.236100","reply_count":7,"reply_users_count":5,"latest_reply":"1614959181.240000","reply_users":["U01C3624SGJ","U01G3TX4F9A","U6BJ9E351","U7JQGPGCQ","U6QGE7S86"],"subscribed":false},{"client_msg_id":"a9edef54-a03c-4bac-b4cf-6fa936f77ddb","type":"message","text":"probably a for loop. MarketTechnicals.jl also has an implementation","user":"U01C3624SGJ","ts":"1614945353.236800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DM8hI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"probably a for loop. MarketTechnicals.jl also has an implementation"}]}]}],"thread_ts":"1614944987.236100","parent_user_id":"U6A936746"},{"client_msg_id":"e01c8afc-cd60-420b-9498-4db2e9fd2297","type":"message","text":"I use <https://github.com/joshday/OnlineStats.jl>","user":"U01G3TX4F9A","ts":"1614945508.237000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GOx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I use "},{"type":"link","url":"https://github.com/joshday/OnlineStats.jl"}]}]}],"thread_ts":"1614944987.236100","parent_user_id":"U6A936746"},{"client_msg_id":"0a59a8d2-61b4-48a4-a9be-27ac285ef843","type":"message","text":"I pretty much always default to ExponentialWeight: <https://joshday.github.io/OnlineStats.jl/stable/weights/#Example-of-Weight-Effects-using-Data-with-[Concept-Drift](https://en.wikipedia.org/wiki/Concept_drift)|https://joshday.github.io/OnlineStats.jl/stable/weights/#Example-of-Weight-Effects-using-Data-with-[C[…]https://en.wikipedia.org/wiki/Concept_drift)>","user":"U01G3TX4F9A","ts":"1614945615.237200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+uVXa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I pretty much always default to ExponentialWeight: "},{"type":"link","url":"https://joshday.github.io/OnlineStats.jl/stable/weights/#Example-of-Weight-Effects-using-Data-with-[Concept-Drift](https://en.wikipedia.org/wiki/Concept_drift)","text":"https://joshday.github.io/OnlineStats.jl/stable/weights/#Example-of-Weight-Effects-using-Data-with-[C[…]https://en.wikipedia.org/wiki/Concept_drift)"}]}]}],"thread_ts":"1614944987.236100","parent_user_id":"U6A936746"},{"client_msg_id":"9af50109-5beb-4e27-b51b-1b92536bf89a","type":"message","text":"for exponentially decaying weights you can probably also do it by hand with `accumulate`:\n```julia&gt; s = randn(1000);\n\njulia&gt; α = 0.1;\n\njulia&gt; accumulate(s, init=0.) do a, b\n           (1 - α) * a + α * b\n       end```","user":"U6BJ9E351","ts":"1614945828.237400","team":"T68168MUP","edited":{"user":"U6BJ9E351","ts":"1614946013.000000"},"blocks":[{"type":"rich_text","block_id":"wJoK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for exponentially decaying weights you can probably also do it by hand with "},{"type":"text","text":"accumulate","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> s = randn(1000);\n\njulia> α = 0.1;\n\njulia> accumulate(s, init=0.) do a, b\n           (1 - α) * a + α * b\n       end"}]}]}],"thread_ts":"1614944987.236100","parent_user_id":"U6A936746"},{"client_msg_id":"c018e3e3-e718-4ac9-9cae-a63516dea461","type":"message","text":"(for fancier stuff you are probably better off with OnlineStats though, it is a really nice package)","user":"U6BJ9E351","ts":"1614945880.237600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A1uaC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(for fancier stuff you are probably better off with OnlineStats though, it is a really nice package)"}]}]}],"thread_ts":"1614944987.236100","parent_user_id":"U6A936746"},{"client_msg_id":"377718f7-1ce0-4961-afe3-980dabb6fb2a","type":"message","text":"RollingFunctions.jl","user":"U7JQGPGCQ","ts":"1614945964.237800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EpPE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"RollingFunctions.jl"}]}]}],"thread_ts":"1614944987.236100","parent_user_id":"U6A936746","reactions":[{"name":"point_up","users":["ULG5V164A","U6QGE7S86","USBKT1275"],"count":3}]},{"client_msg_id":"1d8e8938-2e8f-427c-8869-0bf0390712cc","type":"message","text":"Rolling functions are the most optimized for sure.","user":"U6QGE7S86","ts":"1614959181.240000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bGU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rolling functions are the most optimized for sure."}]}]}],"thread_ts":"1614944987.236100","parent_user_id":"U6A936746"}]