[{"client_msg_id":"28694823-1612-4c13-8a24-cf2c21f80eda","type":"message","text":"<@U8JAMQGQY> can you help me understand the reasoning for the following\n\n```df = DataFrame(a = [\"1\", \"2\"])\ndf[:, \"a\"]  = parse.(Int64, df[:, \"a\"])```\nthrows an error? but using `!` does not? My intuition would be the opposite: `:` means you can make *more* modifications to the data frame, not fewer, since you are copying everywhere.","user":"UBF9YRB6H","ts":"1611524015.041000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IBgi","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8JAMQGQY"},{"type":"text","text":" can you help me understand the reasoning for the following\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"df = DataFrame(a = [\"1\", \"2\"])\ndf[:, \"a\"]  = parse.(Int64, df[:, \"a\"])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nthrows an error? but using "},{"type":"text","text":"!","style":{"code":true}},{"type":"text","text":" does not? My intuition would be the opposite: "},{"type":"text","text":":","style":{"code":true}},{"type":"text","text":" means you can make "},{"type":"text","text":"more","style":{"bold":true}},{"type":"text","text":" modifications to the data frame, not fewer, since you are copying everywhere."}]}]}],"thread_ts":"1611524015.041000","reply_count":11,"reply_users_count":3,"latest_reply":"1611525934.044000","reply_users":["U8JAMQGQY","UBF9YRB6H","U681ELA87"],"subscribed":false},{"client_msg_id":"f3c17d5d-ddc3-43ea-9456-743dd2467871","type":"message","text":"The reason is that `df[:, \"a\"]` on LHS is in-place.","user":"U8JAMQGQY","ts":"1611524284.041100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"agj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The reason is that "},{"type":"text","text":"df[:, \"a\"]","style":{"code":true}},{"type":"text","text":" on LHS is in-place."}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"87218547-1365-4483-94ee-0219695004d7","type":"message","text":"It is as if you had:\n```a = [\"a\", \"b\"]\na[:] = [1, 2]```\nthis will also error in Julia Base","user":"U8JAMQGQY","ts":"1611524296.041300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"24ajw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is as if you had:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"a = [\"a\", \"b\"]\na[:] = [1, 2]"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"this will also error in Julia Base"}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"bc927e69-2c8f-442a-bcf8-7366dbbaf04b","type":"message","text":"Now `!` means that you are allowing mutating `DataFrame` schema (as opposed to `:` which is in-place so it does not mutate schema)","user":"U8JAMQGQY","ts":"1611524335.041500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vrF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Now "},{"type":"text","text":"!","style":{"code":true}},{"type":"text","text":" means that you are allowing mutating "},{"type":"text","text":"DataFrame","style":{"code":true}},{"type":"text","text":" schema (as opposed to "},{"type":"text","text":":","style":{"code":true}},{"type":"text","text":" which is in-place so it does not mutate schema)"}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"41dfae3f-e591-407f-9a4e-c4416aa6715b","type":"message","text":"hmm... I guess that makes sense. Maybe a good way to think of it is that `:` is always safe, and safety means not changing types","user":"UBF9YRB6H","ts":"1611524369.041700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G=lP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm... I guess that makes sense. Maybe a good way to think of it is that "},{"type":"text","text":":","style":{"code":true}},{"type":"text","text":" is always safe, and safety means not changing types"}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"935659d5-5e18-4554-a25b-d93b166f0b9f","type":"message","text":"A way to think about it is that `:` on LHS is exactly like `:` in Julia Base (which is type-safe)","user":"U8JAMQGQY","ts":"1611524410.041900","team":"T68168MUP","edited":{"user":"U8JAMQGQY","ts":"1611524424.000000"},"blocks":[{"type":"rich_text","block_id":"Go0X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A way to think about it is that "},{"type":"text","text":":","style":{"code":true}},{"type":"text","text":" on LHS is exactly like "},{"type":"text","text":":","style":{"code":true}},{"type":"text","text":" in Julia Base (which is type-safe)"}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"791c96b0-d810-40a8-aa92-01e873c0b5cf","type":"message","text":"Obviously my motivation here is <https://discourse.julialang.org/t/dataframes-convert-column-data-type/35522/18>\n\nIt's a shame this person is getting such opaque error messages. I think this `WeakRefString` stuff is a CSV optimization?","user":"UBF9YRB6H","ts":"1611524416.042100","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"DataFrames: convert column data type","title_link":"https://discourse.julialang.org/t/dataframes-convert-column-data-type/35522/18","text":"I tried df[:2,:Id_internal ] = tryparse.(Int64,df[:2,:Id_internal ]) and df[:2,:Id_internal ] = parse.(Int64,df[:2,:Id_internal ]) both gave me ERROR: setindex! not defined for WeakRefStrings.StringArray{String,1} I read my data as follow: df_all = CSV.File(\"file.csv\", delim = '\\t' |&gt; DataFrame I then I create a df with what I need df = df_all[[:Id_internal, :Date]]","fallback":"JuliaLang: DataFrames: convert column data type","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1611521085,"from_url":"https://discourse.julialang.org/t/dataframes-convert-column-data-type/35522/18","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/dataframes-convert-column-data-type/35522/18"}],"blocks":[{"type":"rich_text","block_id":"hFIG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Obviously my motivation here is "},{"type":"link","url":"https://discourse.julialang.org/t/dataframes-convert-column-data-type/35522/18"},{"type":"text","text":"\n\nIt's a shame this person is getting such opaque error messages. I think this "},{"type":"text","text":"WeakRefString","style":{"code":true}},{"type":"text","text":" stuff is a CSV optimization?"}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"f65f951f-7a26-444f-9a32-b4727c94c01f","type":"message","text":"Yes `StringArray` isa custom type that <@U681ELA87> implemented to avoid allocating a lot of strings.","user":"U8JAMQGQY","ts":"1611524607.042500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"f8Z91","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes "},{"type":"text","text":"StringArray","style":{"code":true}},{"type":"text","text":" isa custom type that "},{"type":"user","user_id":"U681ELA87"},{"type":"text","text":" implemented to avoid allocating a lot of strings."}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"a482fa1e-4bea-40fd-998e-30c9c76a8515","type":"message","text":"It is most likely old version of DataFrames.jl and CSV.jl as ``df_all[[:Id_internal, :Date]]` works for him and this errors now.","user":"U8JAMQGQY","ts":"1611524720.042700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hFKw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It is most likely old version of DataFrames.jl and CSV.jl as `"},{"type":"text","text":"df_all[[:Id_internal, :Date]]","style":{"code":true}},{"type":"text","text":" works for him and this errors now."}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"978da70f-ce26-4083-84eb-04216769ec94","type":"message","text":"yeah that is most likely it.","user":"UBF9YRB6H","ts":"1611524751.042900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JdW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah that is most likely it."}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"faa95a0e-b9b4-4fbd-befc-69546a5fb55f","type":"message","text":"Yeah, you shouldn't see StringArray any more w/ CSV.jl","user":"U681ELA87","ts":"1611525683.043800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DRE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, you shouldn't see StringArray any more w/ CSV.jl"}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"4ced2baa-576b-4ccc-ab2b-373f9bd19bd2","type":"message","text":"sounds good. Glad users on more up-to-date versions won't see this","user":"UBF9YRB6H","ts":"1611525934.044000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2izA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sounds good. Glad users on more up-to-date versions won't see this"}]}]}],"thread_ts":"1611524015.041000","parent_user_id":"UBF9YRB6H"}]