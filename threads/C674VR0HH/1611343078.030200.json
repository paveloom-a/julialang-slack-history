[{"client_msg_id":"0e1acbe3-f4f4-4c4e-816e-45959235f2ca","type":"message","text":"Just saw these latest benchmarks done this month and was quite surprised by how slow DataFrames.jl seems to be for joins, its ~10x slower than R dplyr: <https://h2oai.github.io/db-benchmark/>, though is faster than dplyr for groupby. I know the reason data.table wins is because multithreading but still very weird that dplyr beats DataFrames.jl for joins. Why might joins be this slow?","user":"U01EF0QVAB0","ts":"1611343078.030200","team":"T68168MUP","edited":{"user":"U01EF0QVAB0","ts":"1611343094.000000"},"blocks":[{"type":"rich_text","block_id":"GrP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just saw these latest benchmarks done this month and was quite surprised by how slow DataFrames.jl seems to be for joins, its ~10x slower than R dplyr: "},{"type":"link","url":"https://h2oai.github.io/db-benchmark/"},{"type":"text","text":", though is faster than dplyr for groupby. I know the reason data.table wins is because multithreading but still very weird that dplyr beats DataFrames.jl for joins. Why might joins be this slow?"}]}]}],"thread_ts":"1611343078.030200","reply_count":6,"reply_users_count":4,"latest_reply":"1611350141.032400","reply_users":["U7JQGPGCQ","U9VG1AYSG","U8JP5B9T2","U8JAMQGQY"],"subscribed":false},{"client_msg_id":"57eb1060-9a82-48bd-953f-bbc3c72a5469","type":"message","text":"<https://github.com/JuliaData/DataFrames.jl/issues/2340|https://github.com/JuliaData/DataFrames.jl/issues/2340>","user":"U7JQGPGCQ","ts":"1611343346.030400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ogQ","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaData/DataFrames.jl/issues/2340","text":"https://github.com/JuliaData/DataFrames.jl/issues/2340"}]}]}],"thread_ts":"1611343078.030200","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"e2b00a6f-db96-4244-b247-e2133c5c30e9","type":"message","text":"yup, it's long past due for a major rewrite of join.  This will definitely happen before 1.0","user":"U9VG1AYSG","ts":"1611348695.030800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7KCLp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yup, it's long past due for a major rewrite of join.  This will definitely happen before 1.0"}]}]}],"thread_ts":"1611343078.030200","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"f768445b-3efd-458f-bb60-bd16bb4d0039","type":"message","text":"&gt; This will definitely happen before 1.0\nWill it? Presumably the API is locked, so all of the improvements will be non-breaking and could happen in point releases.\n\nI mean, that would be great, but I hadn't heard this","user":"U8JP5B9T2","ts":"1611349197.031000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vOO","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"This will definitely happen before 1.0"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Will it? Presumably the API is locked, so all of the improvements will be non-breaking and could happen in point releases.\n\nI mean, that would be great, but I hadn't heard this"}]}]}],"thread_ts":"1611343078.030200","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"2e25e344-1125-4b11-a9de-5297f591c018","type":"message","text":"it will not involve a change to the API","user":"U9VG1AYSG","ts":"1611349333.031400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sxK7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it will not involve a change to the API"}]}]}],"thread_ts":"1611343078.030200","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"d10d9c64-be84-4623-aff0-f14fdd54e46e","type":"message","text":"<@U8JAMQGQY> can you confirm this is still the plan?","user":"U9VG1AYSG","ts":"1611349341.031600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1bp=9","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U8JAMQGQY"},{"type":"text","text":" can you confirm this is still the plan?"}]}]}],"thread_ts":"1611343078.030200","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"172011d1-5e04-4478-9ffe-b7959c9b3462","type":"message","text":"Yes. The plan is for <@U67431ELR> to finish threading in `groupby` and then I will work on joins. Probably not all possible optimizations will be implemented but at least we will get rid of embarrassingly slow cases.","user":"U8JAMQGQY","ts":"1611350141.032400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8edlU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes. The plan is for "},{"type":"user","user_id":"U67431ELR"},{"type":"text","text":" to finish threading in "},{"type":"text","text":"groupby","style":{"code":true}},{"type":"text","text":" and then I will work on joins. Probably not all possible optimizations will be implemented but at least we will get rid of embarrassingly slow cases."}]}]}],"thread_ts":"1611343078.030200","parent_user_id":"U01EF0QVAB0","reactions":[{"name":"heart","users":["U9VG1AYSG","UCAFZ51L3","UAZP7LJLU","UB7JS9CHF"],"count":4}]}]