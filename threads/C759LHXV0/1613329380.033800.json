[{"client_msg_id":"44da1a66-be7c-4e4f-b5e5-6df406654a17","type":"message","text":"Hi there! Does the JuliaGraphs ecosystem include a weighted graph type with general weights? From the looks of it, `SimpleWeightedGraphs.jl` only accepts `Real` weights, and for my next project I need weights from abstract algebraic structures. Should I use `MetaGraphs.jl`, or write my own structure (without sparse matrices since they also prefer real entries)? Thanks :pray:","user":"U01GMP3HF9C","ts":"1613329380.033800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wL794","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi there! Does the JuliaGraphs ecosystem include a weighted graph type with general weights? From the looks of it, "},{"type":"text","text":"SimpleWeightedGraphs.jl","style":{"code":true}},{"type":"text","text":" only accepts "},{"type":"text","text":"Real","style":{"code":true}},{"type":"text","text":" weights, and for my next project I need weights from abstract algebraic structures. Should I use "},{"type":"text","text":"MetaGraphs.jl","style":{"code":true}},{"type":"text","text":", or write my own structure (without sparse matrices since they also prefer real entries)? Thanks "},{"type":"emoji","name":"pray"}]}]}],"thread_ts":"1613329380.033800","reply_count":11,"reply_users_count":3,"latest_reply":"1613456154.039200","reply_users":["UBEF50B7C","U01GMP3HF9C","U82RE6STE"],"subscribed":false},{"client_msg_id":"a70e11e6-9ecd-4ee7-83f1-ec10071f0d3e","type":"message","text":"Depends on the size of your graph and the performance hat you need. MetaGraphs uses dicionaries to store metadata, so if you will have large graphs or algorithms that access metadata a lot  you might run in some issues.","user":"UBEF50B7C","ts":"1613329736.033900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UO6Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Depends on the size of your graph and the performance hat you need. MetaGraphs uses dicionaries to store metadata, so if you will have large graphs or algorithms that access metadata a lot  you might run in some issues."}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C"},{"client_msg_id":"c78c7ee5-6f89-478c-8b89-6553c7d7f791","type":"message","text":"I could also use some feedback/betatesters for <https://github.com/simonschoelly/SimpleValueGraphs.jl> if you wan to give that a try","user":"UBEF50B7C","ts":"1613329820.034100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sq+sM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I could also use some feedback/betatesters for "},{"type":"link","url":"https://github.com/simonschoelly/SimpleValueGraphs.jl"},{"type":"text","text":" if you wan to give that a try"}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C","reactions":[{"name":"heart","users":["U01GMP3HF9C"],"count":1}]},{"client_msg_id":"573e2d82-99b4-48c3-9a76-f9ee698f1aca","type":"message","text":"Thanks, I will definitely give it a try and contribute if you need a (beginner's) hand!","user":"U01GMP3HF9C","ts":"1613339150.034400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yfwrg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, I will definitely give it a try and contribute if you need a (beginner's) hand!"}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C"},{"client_msg_id":"1f7d1384-7476-473e-bf7e-b4126d3947a8","type":"message","text":"<@U82RE6STE> since you have nothing to do this morning :slightly_smiling_face:","user":"U01GMP3HF9C","ts":"1613378203.034600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s1U","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U82RE6STE"},{"type":"text","text":" since you have nothing to do this morning "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C"},{"client_msg_id":"3bb135f8-d981-4f06-b6ef-8caf9a78f299","type":"message","text":"busted","user":"U82RE6STE","ts":"1613378219.034800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Omzo9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"busted"}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C"},{"client_msg_id":"11b24341-0ecd-41b5-95ad-f43da399d0e5","type":"message","text":"the best bets would be\n• defining a new graph type (that can go fairly quickly, few functions to implement for the graph interface)\n• using MetaGraphs, you don't have a weight semantic but you can attach your weights and then manipulate them in other functions\n• SimpleValueGraphs, haven't tried it myself but I'm sure Simon baked something cool there","user":"U82RE6STE","ts":"1613378406.035000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eWExa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the best bets would be\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"defining a new graph type (that can go fairly quickly, few functions to implement for the graph interface)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"using MetaGraphs, you don't have a weight semantic but you can attach your weights and then manipulate them in other functions"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"SimpleValueGraphs, haven't tried it myself but I'm sure Simon baked something cool there"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C"},{"client_msg_id":"92160fab-e86f-4a68-9441-5d80ff538be4","type":"message","text":"I took a look at `SimpleValueGraphs.jl` <@UBEF50B7C>, and it's really nice! However, since I only need one (non-tuple) attribute for each edge and none for the vertices, do you think I could gain performance / clarity by making my own structure?","user":"U01GMP3HF9C","ts":"1613378624.035200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4eVA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I took a look at "},{"type":"text","text":"SimpleValueGraphs.jl","style":{"code":true}},{"type":"text","text":" "},{"type":"user","user_id":"UBEF50B7C"},{"type":"text","text":", and it's really nice! However, since I only need one (non-tuple) attribute for each edge and none for the vertices, do you think I could gain performance / clarity by making my own structure?"}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C"},{"client_msg_id":"452e5601-4e82-4860-8dfa-eaeadb796f69","type":"message","text":"I think this is a good starting point. For clarity you can add your own function on top, and the package accepts custom types to indicate what you attach to verices / edges.\nFor performance I don't think you'll gain much in a rewrite","user":"U82RE6STE","ts":"1613378872.035400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fae","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think this is a good starting point. For clarity you can add your own function on top, and the package accepts custom types to indicate what you attach to verices / edges.\nFor performance I don't think you'll gain much in a rewrite"}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C","reactions":[{"name":"thumbsup_all","users":["U01GMP3HF9C"],"count":1}]},{"client_msg_id":"f6c67248-91ab-4ef4-bf47-f02e6bf7b2e4","type":"message","text":"<@UBEF50B7C>, I have a question about SVG. Say I use a `SimpleValueDiGraph` with one edge attribute (`:resource`) and no vertex attribute. I would like to define a type shortcut to indicate resource type (`RT`) to the compiler in function definitions, but I’m not sure how to do it. My best guess for now is:\n```ResourceDiGraph{RT} = ValDiGraph{\n    Int32,\n    Tuple{},\n    NamedTuple{(:resource,),Tuple{RT}},\n    Tuple{},\n    Tuple{},\n    NamedTuple{(:resource,),Tuple{Array{Array{RT},1}}}\n}```","user":"U01GMP3HF9C","ts":"1613456046.038800","team":"T68168MUP","edited":{"user":"U01GMP3HF9C","ts":"1613456231.000000"},"blocks":[{"type":"rich_text","block_id":"M7WP","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UBEF50B7C"},{"type":"text","text":", I have a question about SVG. Say I use a "},{"type":"text","text":"SimpleValueDiGraph","style":{"code":true}},{"type":"text","text":" with one edge attribute ("},{"type":"text","text":":resource","style":{"code":true}},{"type":"text","text":") and no vertex attribute. I would like to define a type shortcut to indicate resource type (`RT`) to the compiler in function definitions, but I’m not sure how to do it. My best guess for now is:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ResourceDiGraph{RT} = ValDiGraph{\n    Int32,\n    Tuple{},\n    NamedTuple{(:resource,),Tuple{RT}},\n    Tuple{},\n    Tuple{},\n    NamedTuple{(:resource,),Tuple{Array{Array{RT},1}}}\n}"}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C"},{"client_msg_id":"7ebdb82d-9046-4858-85bf-17861ee22f9f","type":"message","text":"But it seems a bit overkill","user":"U01GMP3HF9C","ts":"1613456051.039000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RV=s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But it seems a bit overkill"}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C"},{"client_msg_id":"c1bbf6d1-783f-4602-9c77-fdf479dc0b1e","type":"message","text":"And I’m not even sure it would work","user":"U01GMP3HF9C","ts":"1613456154.039200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ohz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And I’m not even sure it would work"}]}]}],"thread_ts":"1613329380.033800","parent_user_id":"U01GMP3HF9C"}]