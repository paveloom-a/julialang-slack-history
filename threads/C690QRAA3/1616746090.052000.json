[{"client_msg_id":"0895e0dc-7cef-43f0-866f-66cd6bd4a000","type":"message","text":"<@U6DKQSV7Z> Hi yueh, I have added to <https://github.com/CTUAvastLab/Mill.jl> a rudimentary support for representing graphs in branch <https://github.com/CTUAvastLab/Mill.jl/tree/graphsupport>. The idea behind Mill.jl is to facilitate machine learning over complex structure by adopting an invariant that each data type (Vector, set of vectors, tuple of vectors and now graphs) can be projected to a vector. This design decision allows you to “stack” building blocks to represent complicated structures, like for example graphs with complex description on vertices and edges. At the moment, I have added a rudimentary support for graph neural networks, effectively supporting just message passing approaches (in <https://github.com/CTUAvastLab/Mill.jl/blob/graphsupport/src/modelnodes/graphmodel.jl>). I would like to ask, if you would be willing to help me in adding support for using models of GeometricFlux. It might be quite a nice addition to the ecosystem and in line with automated feature engineering <@U01CQTKB86N> has mentioned above.","user":"U6YRZ18GZ","ts":"1616746090.052000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hV2","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6DKQSV7Z"},{"type":"text","text":" Hi yueh, I have added to "},{"type":"link","url":"https://github.com/CTUAvastLab/Mill.jl"},{"type":"text","text":" a rudimentary support for representing graphs in branch "},{"type":"link","url":"https://github.com/CTUAvastLab/Mill.jl/tree/graphsupport"},{"type":"text","text":". The idea behind Mill.jl is to facilitate machine learning over complex structure by adopting an invariant that each data type (Vector, set of vectors, tuple of vectors and now graphs) can be projected to a vector. This design decision allows you to “stack” building blocks to represent complicated structures, like for example graphs with complex description on vertices and edges. At the moment, I have added a rudimentary support for graph neural networks, effectively supporting just message passing approaches (in "},{"type":"link","url":"https://github.com/CTUAvastLab/Mill.jl/blob/graphsupport/src/modelnodes/graphmodel.jl"},{"type":"text","text":"). I would like to ask, if you would be willing to help me in adding support for using models of GeometricFlux. It might be quite a nice addition to the ecosystem and in line with automated feature engineering "},{"type":"user","user_id":"U01CQTKB86N"},{"type":"text","text":" has mentioned above."}]}]}],"thread_ts":"1616746090.052000","reply_count":6,"reply_users_count":2,"latest_reply":"1616758785.053700","reply_users":["U6DKQSV7Z","U6YRZ18GZ"],"is_locked":false,"subscribed":false},{"client_msg_id":"af8378d1-ac00-47c3-b34a-124e79f888d3","type":"message","text":"Yeah, it will be nice to have support of models from GeometricFlux. But, I just wondering about the position of Mill.jl. Multi-instance learning is an essential field in machine learning. Graph neural network is a raising field in machine learning. The common thing is graph structure. I am wondering the future map of Mill.jl.","user":"U6DKQSV7Z","ts":"1616748361.052100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U+=YA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, it will be nice to have support of models from GeometricFlux. But, I just wondering about the position of Mill.jl. Multi-instance learning is an essential field in machine learning. Graph neural network is a raising field in machine learning. The common thing is graph structure. I am wondering the future map of Mill.jl."}]}]}],"thread_ts":"1616746090.052000","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"ae706c61-8388-44f4-b6e3-febd5632db55","type":"message","text":"The future map of Mill is probably up to users. It was created to solve a slightly different problem then graphs","user":"U6YRZ18GZ","ts":"1616750205.052300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EtV0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The future map of Mill is probably up to users. It was created to solve a slightly different problem then graphs"}]}]}],"thread_ts":"1616746090.052000","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"e4188806-b71e-44fc-a7ae-2fa827dba0c5","type":"message","text":"Yeah, in my imagination, the interest of multi-instance learning may far from GNN. It might be little reason to cover it. It is strange to me that bridging these two packages or concepts.","user":"U6DKQSV7Z","ts":"1616750603.052500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"M1z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, in my imagination, the interest of multi-instance learning may far from GNN. It might be little reason to cover it. It is strange to me that bridging these two packages or concepts."}]}]}],"thread_ts":"1616746090.052000","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"d2b33679-f65d-43fa-afbf-dd8d14ebf2ad","type":"message","text":"Well, if you're willing to do this I just can help anyway.","user":"U6DKQSV7Z","ts":"1616750676.052700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xXL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, if you're willing to do this I just can help anyway."}]}]}],"thread_ts":"1616746090.052000","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"daf88af5-c416-4060-b0e6-4d3e9c790acf","type":"message","text":"The bridge stemmed from the necessity, that in our applications, we have a general graphs with rich description on edges and vertices. May-be, my GraphNode reimplements features you have in Feature Graph, which I would need to understand better.  Similarly, I would need to understand better implementation of GNNs and how to use them in GraphNode. Ideally, I would like our `GraphNode` and `GraphModel` thinly wraps models from geometric flux.","user":"U6YRZ18GZ","ts":"1616751754.052900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k9j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The bridge stemmed from the necessity, that in our applications, we have a general graphs with rich description on edges and vertices. May-be, my GraphNode reimplements features you have in Feature Graph, which I would need to understand better.  Similarly, I would need to understand better implementation of GNNs and how to use them in GraphNode. Ideally, I would like our "},{"type":"text","text":"GraphNode","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"GraphModel","style":{"code":true}},{"type":"text","text":" thinly wraps models from geometric flux."}]}]}],"thread_ts":"1616746090.052000","parent_user_id":"U6YRZ18GZ"},{"client_msg_id":"a255b6db-0f04-4420-82a6-3baea16c5a68","type":"message","text":"Overall, I think it's better have a good document on GeometricFlux. Yeah, I admit it is difficult for most people.","user":"U6DKQSV7Z","ts":"1616758785.053700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5hOs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Overall, I think it's better have a good document on GeometricFlux. Yeah, I admit it is difficult for most people."}]}]}],"thread_ts":"1616746090.052000","parent_user_id":"U6YRZ18GZ"}]