[{"client_msg_id":"411953db-f888-444f-9753-35847713318b","type":"message","text":"is it possible to define my own optimiser type that would work as an input to <https://github.com/FluxML/Flux.jl/blob/08e79c4ee7d0d6d4fb130d9f996a89a6b4726511/src/optimise/optimisers.jl#L533|Flux.Optimiser>? I would like to use Cosine Annealing, but none of the provided optimisers have that capability. When I tried to implement it myself, I get this error saying that Flux doesn't \"see\" my definition of `apply!(o::CosineAnnealing, x, Δ)`:\n```MethodError: no method matching apply!(::CosineAnnealing, ::CuArray{Float32,4}, ::CuArray{Float32,4})\nClosest candidates are:\n  apply!(::Momentum, ::Any, ::Any) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/optimisers.jl:69\n  apply!(::ADAGrad, ::Any, ::Any) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/optimisers.jl:346\n  apply!(::InvDecay, ::Any, ::Any) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/optimisers.jl:577\n  ...\nStacktrace:\n [1] apply!(::Optimiser, ::CuArray{Float32,4}, ::CuArray{Float32,4}) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/optimisers.jl:553\n [2] update!(::Optimiser, ::CuArray{Float32,4}, ::CuArray{Float32,4}) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/train.jl:23\n...```","user":"U01EK81V5GF","ts":"1611608484.043100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F7d7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"is it possible to define my own optimiser type that would work as an input to "},{"type":"link","url":"https://github.com/FluxML/Flux.jl/blob/08e79c4ee7d0d6d4fb130d9f996a89a6b4726511/src/optimise/optimisers.jl#L533","text":"Flux.Optimiser"},{"type":"text","text":"? ","style":{"unlink":true}},{"type":"text","text":"I would like to use Cosine Annealing, but none of the provided optimisers have that capability. When I tried to implement it myself, I get this error saying that Flux doesn't \"see\" my definition of "},{"type":"text","text":"apply!(o::CosineAnnealing, x, Δ)","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"MethodError: no method matching apply!(::CosineAnnealing, ::CuArray{Float32,4}, ::CuArray{Float32,4})\nClosest candidates are:\n  apply!(::Momentum, ::Any, ::Any) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/optimisers.jl:69\n  apply!(::ADAGrad, ::Any, ::Any) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/optimisers.jl:346\n  apply!(::InvDecay, ::Any, ::Any) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/optimisers.jl:577\n  ...\nStacktrace:\n [1] apply!(::Optimiser, ::CuArray{Float32,4}, ::CuArray{Float32,4}) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/optimisers.jl:553\n [2] update!(::Optimiser, ::CuArray{Float32,4}, ::CuArray{Float32,4}) at /home/kaitlin/.julia/packages/Flux/AFZ1P/src/optimise/train.jl:23\n..."}]}]}],"thread_ts":"1611608484.043100","reply_count":5,"reply_users_count":4,"latest_reply":"1611660222.044500","reply_users":["U6A936746","U01EK81V5GF","UH9KWTTD3","UC4QQPG4A"],"subscribed":false},{"client_msg_id":"daf32b4f-b494-4c8c-a41a-8827c696d8fd","type":"message","text":"Did you overload `apply!`  in the right namespace?\nEither via qualifying it or by `importing it?`","user":"U6A936746","ts":"1611610958.043200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=DB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Did you overload "},{"type":"text","text":"apply! ","style":{"code":true}},{"type":"text","text":" in the right namespace?\nEither via qualifying it or by "},{"type":"text","text":"importing it?","style":{"code":true}}]}]}],"thread_ts":"1611608484.043100","parent_user_id":"U01EK81V5GF","reactions":[{"name":"point_up","users":["UMY1LV01G"],"count":1}]},{"client_msg_id":"155266b8-caf5-4555-affc-aed66bed4473","type":"message","text":"Hmm, what does that look like? I tried defining `function Flux.Optimise.apply!(o::CosineAnnealing, x, Δ)`","user":"U01EK81V5GF","ts":"1611612118.043500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0XuLt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, what does that look like? I tried defining "},{"type":"text","text":"function Flux.Optimise.apply!(o::CosineAnnealing, x, Δ)","style":{"code":true}}]}]}],"thread_ts":"1611608484.043100","parent_user_id":"U01EK81V5GF"},{"client_msg_id":"0726634b-ccab-4da7-b283-3f92e41a4d5f","type":"message","text":"Try restarting your Julia session","user":"UH9KWTTD3","ts":"1611614974.044100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c0YMY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Try restarting your Julia session"}]}]}],"thread_ts":"1611608484.043100","parent_user_id":"U01EK81V5GF"},{"client_msg_id":"84822f28-b972-4f61-9654-536f644aabfb","type":"message","text":"Also ParameterSchedulers.jl implements cosine annealing: <https://darsnack.github.io/ParameterSchedulers.jl/dev/docstrings/ParameterSchedulers.Cos.html>","user":"UH9KWTTD3","ts":"1611614988.044300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Oegk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also ParameterSchedulers.jl implements cosine annealing: "},{"type":"link","url":"https://darsnack.github.io/ParameterSchedulers.jl/dev/docstrings/ParameterSchedulers.Cos.html"}]}]}],"thread_ts":"1611608484.043100","parent_user_id":"U01EK81V5GF"},{"client_msg_id":"d8ef5167-d9a8-40b7-9864-80edd835c536","type":"message","text":"You can inspect the `methods` ","user":"UC4QQPG4A","ts":"1611660222.044500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YE7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can inspect the "},{"type":"text","text":"methods ","style":{"code":true}}]}]}],"thread_ts":"1611608484.043100","parent_user_id":"U01EK81V5GF"}]