[{"client_msg_id":"c8fac36f-b04a-449c-8eaa-91738c17b5ff","type":"message","text":"According to the Flux docs the Conv layer assumes WHCN order (width, height, # channels, batch size) <https://fluxml.ai/Flux.jl/stable/models/layers/#Flux.Conv>. I have a non-image  dataset but want to try convolution along a specific dimension. In particular my data points are tensors of dimension 2x16x32 (where the first 2 are real/imaginary components, the last is a time index) and I would like to create a Conv layer across  the last (time) dimension. How should I go about achieving this in Flux? Any points to tutorials, or relevant examples are highly appreciated.","user":"U01G3TX4F9A","ts":"1610315830.219200","team":"T68168MUP","edited":{"user":"U01G3TX4F9A","ts":"1610315906.000000"},"blocks":[{"type":"rich_text","block_id":"opihb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"According to the Flux docs the Conv layer assumes WHCN order (width, height, # channels, batch size) "},{"type":"link","url":"https://fluxml.ai/Flux.jl/stable/models/layers/#Flux.Conv"},{"type":"text","text":". I have a non-image  dataset but want to try convolution along a specific dimension. In particular my data points are tensors of dimension 2x16x32 (where the first 2 are real/imaginary components, the last is a time index) and I would like to create a Conv layer across  the last (time) dimension. How should I go about achieving this in Flux? Any points to tutorials, or relevant examples are highly appreciated."}]}]}],"thread_ts":"1610315830.219200","reply_count":33,"reply_users_count":4,"latest_reply":"1610505453.230700","reply_users":["UMY1LV01G","U01G3TX4F9A","U01724Q3PGW","UH9KWTTD3"],"subscribed":false},{"client_msg_id":"5f180363-e8c5-42ad-9931-1ad1acd2ca30","type":"message","text":"`filter` can be a 1 element tuple as well, that's how you get a 1D conv.","user":"UMY1LV01G","ts":"1610316015.219400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6aP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"filter","style":{"code":true}},{"type":"text","text":" can be a 1 element tuple as well, that's how you get a 1D conv."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"f8e52790-682d-4ebe-b155-bedc45b31b69","type":"message","text":"So the input becomes LCN instead of WHCN.","user":"UMY1LV01G","ts":"1610316038.219600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Moj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the input becomes LCN instead of WHCN."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"2dfcc99c-34f4-4ad3-8758-4648dc1f1ed4","type":"message","text":"Reading this again, I'm unsure of what exactly your input is supposed to be. Does that mean a batch will have 4 dimensions?","user":"UMY1LV01G","ts":"1610316167.219800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KtKyJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Reading this again, I'm unsure of what exactly your input is supposed to be. Does that mean a batch will have 4 dimensions?"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"1802e6c5-ee74-4535-b137-84a8b942e3a0","type":"message","text":"I don’t see how that (LCN) helps me convolving the third dimension in a tensor?","user":"U01G3TX4F9A","ts":"1610316171.220000","team":"T68168MUP","edited":{"user":"U01G3TX4F9A","ts":"1610316217.000000"},"blocks":[{"type":"rich_text","block_id":"mG+3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t see how that (LCN) helps me convolving the third dimension in a tensor?"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"6c4ec5c3-10b2-435d-a3b0-21828102dd79","type":"message","text":"yes","user":"U01G3TX4F9A","ts":"1610316175.220200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kyBT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"e9844840-b52a-4c2d-8b2b-12482d41d0c5","type":"message","text":"2x16x32x(batchsize) Float32 values","user":"U01G3TX4F9A","ts":"1610316191.220400","team":"T68168MUP","edited":{"user":"U01G3TX4F9A","ts":"1610316277.000000"},"blocks":[{"type":"rich_text","block_id":"qjqNQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"2x16x32x(batchsize) Float32 values"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"77201434-9e61-49ff-868c-53afc0105d13","type":"message","text":"That's a 3d conv and something I've never seen with a time series...you could try a 3d kernel dim (3-tuple), but it may or may not be supported. There's also <https://github.com/FluxML/Flux3D.jl>, but again it's meant for volumes/point clouds IIRC instead of, well, I'm still not sure what your input is","user":"UMY1LV01G","ts":"1610316299.220900","team":"T68168MUP","edited":{"user":"UMY1LV01G","ts":"1610316361.000000"},"blocks":[{"type":"rich_text","block_id":"T9I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's a 3d conv and something I've never seen with a time series...you could try a 3d kernel dim (3-tuple), but it may or may not be supported. There's also "},{"type":"link","url":"https://github.com/FluxML/Flux3D.jl"},{"type":"text","text":", but again it's meant for volumes/point clouds IIRC instead of, well, I'm still not sure what your input is"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A","reactions":[{"name":"+1","users":["U01G3TX4F9A"],"count":1}]},{"client_msg_id":"46c63aec-3241-4d67-8878-94fac7de7282","type":"message","text":"My input is radar data, it comes as complex (<https://dsp.stackexchange.com/questions/13405/what-is-iq-data|baseband IQ>) numbers (first dim) for a series of ranges (second dim) for each time step (third dim).","user":"U01G3TX4F9A","ts":"1610316501.221200","team":"T68168MUP","attachments":[{"service_name":"Signal Processing Stack Exchange","title":"What is IQ Data?","title_link":"https://dsp.stackexchange.com/questions/13405/what-is-iq-data","text":"I have no background in telecommunication. Could anyone please explain to me what is the IQ data in telecommunication? It will be best to explain it with some basic analogies. Many thanks!!","fallback":"Signal Processing Stack Exchange: What is IQ Data?","thumb_url":"https://cdn.sstatic.net/Sites/dsp/Img/apple-touch-icon@2.png?v=e0439310c223","from_url":"https://dsp.stackexchange.com/questions/13405/what-is-iq-data","thumb_width":316,"thumb_height":316,"service_icon":"https://cdn.sstatic.net/Sites/dsp/Img/apple-touch-icon.png?v=966f090a2019","id":1,"original_url":"https://dsp.stackexchange.com/questions/13405/what-is-iq-data"}],"blocks":[{"type":"rich_text","block_id":"qjxoO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"My input is radar data, it comes as complex ("},{"type":"link","url":"https://dsp.stackexchange.com/questions/13405/what-is-iq-data","text":"baseband IQ"},{"type":"text","text":") numbers (first dim) for a series of ranges (second dim) for each time step (third dim)."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"a907c939-c92d-45b7-a4c2-b97000fb4778","type":"message","text":"Interesting, I mostly work with 1D timeseries so this is new. Might be able to help translate if you have a working example in Python, but otherwise this is totally out of my wheelhouse.","user":"UMY1LV01G","ts":"1610316724.221800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CY2b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Interesting, I mostly work with 1D timeseries so this is new. Might be able to help translate if you have a working example in Python, but otherwise this is totally out of my wheelhouse."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"11cc0d99-802e-4191-b2dc-78f7a086aedb","type":"message","text":"<@UMY1LV01G> thanks! I might take you up on that, if I resort to python :)","user":"U01G3TX4F9A","ts":"1610316942.222000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a1lPL","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UMY1LV01G"},{"type":"text","text":" thanks! I might take you up on that, if I resort to python :)"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A","reactions":[{"name":"+1","users":["UMY1LV01G"],"count":1}]},{"client_msg_id":"1ac90b12-7cd4-40fa-8fe8-ff918e47caaa","type":"message","text":"You could try flux.unsqueeze(x,3) to make #channels be 1, and then do whatever you want with the conv layer to make 1=&gt;16 or however many channels output","user":"U01724Q3PGW","ts":"1610333186.222500","team":"T68168MUP","edited":{"user":"U01724Q3PGW","ts":"1610333228.000000"},"blocks":[{"type":"rich_text","block_id":"2Mjm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could try flux.unsqueeze(x,3) to make #channels be 1, and then do whatever you want with the conv layer to make 1=>16 or however many channels output"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"7d907614-6fc6-48a2-967f-8bdd292bf24b","type":"message","text":"Do you want to filter the I and Q with the same kernel or different kernels?","user":"UH9KWTTD3","ts":"1610373154.223100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BrV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you want to filter the I and Q with the same kernel or different kernels?"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"feab7220-75c6-42a1-b8c0-611cb1e2cbdc","type":"message","text":"So I think you have (I and Q)x(range)x(time) and you want to filter across time? That sounds like a 1D convolution to me. The N in N-D convolution is the # of dimensions along which you slide. Here you are only sliding along a single dimension, so it is 1D.","user":"UH9KWTTD3","ts":"1610373472.223300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tQlu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I think you have (I and Q)x(range)x(time) and you want to filter across time? That sounds like a 1D convolution to me. The N in N-D convolution is the # of dimensions along which you slide. Here you are only sliding along a single dimension, so it is 1D."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"bdfd4d6e-d2a1-4e32-8dd2-107e1bfe73a5","type":"message","text":"Andrew’s suggestion seems like the right one. I would reshape your data to be (IQ x range)x(time). That would make your data like normal time series data (which it is). I don’t know what to pass Flux in this case, but I think Brian or Andrew have experience.","user":"UH9KWTTD3","ts":"1610373844.223500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GOa7C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Andrew’s suggestion seems like the right one. I would reshape your data to be (IQ x range)x(time). That would make your data like normal time series data (which it is). I don’t know what to pass Flux in this case, but I think Brian or Andrew have experience."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"28284ba2-4c33-4ee9-a018-e1c51e89b836","type":"message","text":"Yes <@UH9KWTTD3>, the question should have been phrased in terms of timeseries, it is indeed a 1D convolution I want, the IQ issue is not relevant. But say I have data with the shape (NCovariates x Ntime x NBatchsize). It still seems to me that I need to permute the dimensions to something like ( Ntime x 1 x NCovariates x NBatchsize )  in order to conform to the, WHCN order.  Such that the kernel could be something like (1Dkernelsize, 1), i.e. time along “width” -, nothing along “height”- and covariates along the”channel”-dimension. Is my understanding correct or is there a better way to achieve this?","user":"U01G3TX4F9A","ts":"1610385591.223700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oq=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes "},{"type":"user","user_id":"UH9KWTTD3"},{"type":"text","text":", the question should have been phrased in terms of timeseries, it is indeed a 1D convolution I want, the IQ issue is not relevant. But say I have data with the shape (NCovariates x Ntime x NBatchsize). It still seems to me that I need to permute the dimensions to something like ( Ntime x 1 x NCovariates x NBatchsize )  in order to conform to the, WHCN order.  Such that the kernel could be something like (1Dkernelsize, 1), i.e. time along “width” -, nothing along “height”- and covariates along the”channel”-dimension. Is my understanding correct or is there a better way to achieve this?"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"955dda90-cf4f-43d4-b3f3-e684c28cb439","type":"message","text":"So I the Flux docs are not great for non-image data w.r.t. Conv. If you want to do a 1D convolution, `Conv` expects a 3D input. This is more explicit in the NNlib docstring and the Flux one (<https://fluxml.ai/Flux.jl/stable/models/nnlib/#Convolution-1>).","user":"UH9KWTTD3","ts":"1610385853.223900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZP3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So I the Flux docs are not great for non-image data w.r.t. Conv. If you want to do a 1D convolution, "},{"type":"text","text":"Conv","style":{"code":true}},{"type":"text","text":" expects a 3D input. This is more explicit in the NNlib docstring and the Flux one ("},{"type":"link","url":"https://fluxml.ai/Flux.jl/stable/models/nnlib/#Convolution-1"},{"type":"text","text":")."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A","reactions":[{"name":"point_up","users":["U01724Q3PGW"],"count":1}]},{"client_msg_id":"56c2a535-6e2f-41e6-b459-88ac7e548935","type":"message","text":"As for the ordering of that 3D input…I’m not sure. I would expect it to be NCovariates x Ntime x NBatch, but the docs nor the source code does a great job of explaining that. Maybe <@UMY1LV01G> or <@U01724Q3PGW> who have worked with time series data can chime in.","user":"UH9KWTTD3","ts":"1610385936.224100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cykr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As for the ordering of that 3D input…I’m not sure. I would expect it to be NCovariates x Ntime x NBatch, but the docs nor the source code does a great job of explaining that. Maybe "},{"type":"user","user_id":"UMY1LV01G"},{"type":"text","text":" or "},{"type":"user","user_id":"U01724Q3PGW"},{"type":"text","text":" who have worked with time series data can chime in."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A","reactions":[{"name":"+1","users":["UMY1LV01G"],"count":1}]},{"client_msg_id":"c0ca6279-8c88-4627-8a9b-a54c1ab959ac","type":"message","text":"Definitely, you shouldn’t have to conform your time series data to match WHCN format. There is some other format…I just don’t know what it is.","user":"UH9KWTTD3","ts":"1610386001.224300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wtN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Definitely, you shouldn’t have to conform your time series data to match WHCN format. There is some other format…I just don’t know what it is."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"6beeeb29-569c-4ace-89b9-3fd7c09a058b","type":"message","text":"Yup, that's the way to go. I like to think of it as lopping the first dimension off WHCN, so channels and batch are still 2nd last and last respectively","user":"UMY1LV01G","ts":"1610387408.224600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rjkHr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yup, that's the way to go. I like to think of it as lopping the first dimension off WHCN, so channels and batch are still 2nd last and last respectively"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"85043981-ee1d-4437-844d-756ceee0048c","type":"message","text":"So in this case it would be NTime x NCovariates X NBatch (which incidentally is the exact opposite of PyTorch because of batch first vs batch last)","user":"UMY1LV01G","ts":"1610387486.224800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wMa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So in this case it would be NTime x NCovariates X NBatch (which incidentally is the exact opposite of PyTorch because of batch first vs batch last)"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"fd95aba8-c481-494c-bdb3-d4549339e192","type":"message","text":"I'm not sure if a spectrogram makes sense for your data, but if it can be represented that way you could make use of 2d convs","user":"UMY1LV01G","ts":"1610387544.225000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"66C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure if a spectrogram makes sense for your data, but if it can be represented that way you could make use of 2d convs"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"50bdf31f-174f-4da3-bd84-9ee5c29959a8","type":"message","text":"<@UMY1LV01G>,  am I understanding you correctly in that if I provide a 3D tensor to Chain, with a filter tuple of one element, then it convolves along the first dimension only?","user":"U01G3TX4F9A","ts":"1610390010.225600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hHv","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UMY1LV01G"},{"type":"text","text":",  am I understanding you correctly in that if I provide a 3D tensor to Chain, with a filter tuple of one element, then it convolves along the first dimension only?"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A","reactions":[{"name":"heavy_check_mark","users":["UMY1LV01G"],"count":1}]},{"client_msg_id":"7b2ac224-4cde-41c9-81d2-395dc821937d","type":"message","text":"<@UMY1LV01G> Many thanks!","user":"U01G3TX4F9A","ts":"1610390088.225900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s9c","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UMY1LV01G"},{"type":"text","text":" Many thanks!"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"c25fff0e-dc12-405c-9720-796260715a09","type":"message","text":"You can think of my data as a specrogram-ish with complex data values, but I think that the 1D convolution is the only thing that makes sense","user":"U01G3TX4F9A","ts":"1610390151.226100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"W9rE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can think of my data as a specrogram-ish with complex data values, but I think that the 1D convolution is the only thing that makes sense"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"375c1976-beb2-40a7-8bed-05605ba366f5","type":"message","text":"the data is not translational invariant in the “frequency” direction","user":"U01G3TX4F9A","ts":"1610390181.226300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"u92fU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the data is not translational invariant in the “frequency” direction"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"6b43c743-ef9e-4713-9f8c-0a52961f4988","type":"message","text":"Thanks all for helping me out!","user":"U01G3TX4F9A","ts":"1610390208.226500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dcX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks all for helping me out!"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"1458e03d-d2d4-4b51-a1dd-24f61c58bf3e","type":"message","text":"I've been struggling with this as well recently. I'm also currently working on a 1-D convolution with (#vars x #timesteps x batchsize) and I used the unsqueeze thing to add an additional dimension for \"channels\" but still running into some issues.","user":"U01724Q3PGW","ts":"1610413702.226800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1DaU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've been struggling with this as well recently. I'm also currently working on a 1-D convolution with (#vars x #timesteps x batchsize) and I used the unsqueeze thing to add an additional dimension for \"channels\" but still running into some issues."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"d4db008f-7978-443a-96c5-688f4d23b17f","type":"message","text":"Generally it's easiest to represent each var as a channel, so time x vars x batch.","user":"UMY1LV01G","ts":"1610418050.227000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hXFW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Generally it's easiest to represent each var as a channel, so time x vars x batch."}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"155fc582-f7ff-456b-8654-f7691c0855d7","type":"message","text":"So no need to do any unsqueezing","user":"UMY1LV01G","ts":"1610418059.227200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4m=Nl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So no need to do any unsqueezing"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"72fb1f0e-e30a-459c-bdbc-89409db84db5","type":"message","text":"What do you mean by \"each var as a channel\"?","user":"U01724Q3PGW","ts":"1610426502.227400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Y+M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean by \"each var as a channel\"?"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"3fdb7140-23c2-4247-a869-3a52f29886db","type":"message","text":"If you have a multivariate time series, the easiest way to run a 1d conv over it is to treat each variable as a channel","user":"UMY1LV01G","ts":"1610428092.227600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JDe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you have a multivariate time series, the easiest way to run a 1d conv over it is to treat each variable as a channel"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"},{"client_msg_id":"a141713c-bab5-4b4a-a700-9abf1ffcb2b0","type":"message","text":"I believe that handles interactions between variables as well because of channel mixing","user":"UMY1LV01G","ts":"1610428313.227800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X229","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I believe that handles interactions between variables as well because of channel mixing"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A","reactions":[{"name":"thinking_face","users":["U01724Q3PGW"],"count":1}]},{"client_msg_id":"12c41c89-b7d0-4e62-abf8-1d31d532d4d7","type":"message","text":"I'll have to try that out!","user":"U01724Q3PGW","ts":"1610505453.230700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"42=Ne","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll have to try that out!"}]}]}],"thread_ts":"1610315830.219200","parent_user_id":"U01G3TX4F9A"}]