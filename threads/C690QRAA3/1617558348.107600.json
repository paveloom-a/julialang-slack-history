[{"client_msg_id":"D01307C2-AF8F-4349-B257-D83B4AD51D16","type":"message","text":"I am looking at `Flux.outputsize`. I don’t quite understand it yet, but before I dig deeper into it, does anybody know whether it is possible to adapt it to find out which neurons (or índices in the output array) on the next layer are activated by a specific neuron in the current layer?","user":"U01CR62LAAD","ts":"1617558348.107600","team":"T68168MUP","edited":{"user":"U01CR62LAAD","ts":"1617560596.000000"},"blocks":[{"type":"rich_text","block_id":"YTX6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am looking at "},{"type":"text","text":"Flux.outputsize","style":{"code":true}},{"type":"text","text":". I don’t quite understand it yet, but before I dig deeper into it, does anybody know whether it is possible to adapt it to find out which neurons (or índices in the output array) on the next layer are activated by a specific neuron in the current layer?"}]}]}],"thread_ts":"1617558348.107600","reply_count":15,"reply_users_count":2,"latest_reply":"1617621259.123000","reply_users":["U01CR62LAAD","UH9KWTTD3"],"is_locked":false,"subscribed":false},{"client_msg_id":"32EC5791-EE80-4E55-97DA-16D8CC9B2BA3","type":"message","text":"I am currently traversing the elements in the canonical basis for the input array, multiplying them by a number of random numbers and checking which ones are affected, but that might not be as efficient and it is not foolproof.","user":"U01CR62LAAD","ts":"1617558587.111300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"By8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am currently traversing the elements in the canonical basis for the input array, multiplying them by a number of random numbers and checking which ones are affected, but that might not be as efficient and it is not foolproof."}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"A1FF5E20-6480-40C1-BFCD-FA99719E998B","type":"message","text":"No `outputsize` only carries shape information. Possibly you could use a similar technique to `outputsize` source code to do what you are trying to achieve.","user":"UH9KWTTD3","ts":"1617562746.115400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BbBZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No "},{"type":"text","text":"outputsize","style":{"code":true}},{"type":"text","text":" only carries shape information. Possibly you could use a similar technique to "},{"type":"text","text":"outputsize","style":{"code":true}},{"type":"text","text":" source code to do what you are trying to achieve."}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"03162759-4845-486d-8bc2-8a3003960bba","type":"message","text":"Yeah, I know `outputsize` does not do what I need, the question was precisely whether I might be able to adapt it for that. So, thanks, I will look at it and see if I can manage it!","user":"U01CR62LAAD","ts":"1617564029.115600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y3C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I know "},{"type":"text","text":"outputsize","style":{"code":true}},{"type":"text","text":" does not do what I need, the question was precisely whether I might be able to adapt it for that. So, thanks, I will look at it and see if I can manage it!"}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"6151fa9b-9240-4ec1-ae9d-9bdf29f9ee16","type":"message","text":"Oh, I’ve got it, the `Nil` “number” is really cool!\n\nI think I can adapt it to have a `NilUp` (for active) and `NilDown` (for not), and set the proper logic to make it work. Sweet.\n\nIt could just be `Up` and `Down`, but prepending them with `Nil` seems safer.","user":"U01CR62LAAD","ts":"1617567767.115800","team":"T68168MUP","edited":{"user":"U01CR62LAAD","ts":"1617567796.000000"},"blocks":[{"type":"rich_text","block_id":"CcQT2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, I’ve got it, the "},{"type":"text","text":"Nil","style":{"code":true}},{"type":"text","text":" “number” is really cool!\n\nI think I can adapt it to have a "},{"type":"text","text":"NilUp","style":{"code":true}},{"type":"text","text":" (for active) and "},{"type":"text","text":"NilDown","style":{"code":true}},{"type":"text","text":" (for not), and set the proper logic to make it work. Sweet.\n\nIt could just be "},{"type":"text","text":"Up","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Down","style":{"code":true}},{"type":"text","text":", but prepending them with "},{"type":"text","text":"Nil","style":{"code":true}},{"type":"text","text":" seems safer."}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD","reactions":[{"name":"+1::skin-tone-5","users":["UH9KWTTD3"],"count":1},{"name":"+1","users":["UMY1LV01G"],"count":1}]},{"client_msg_id":"1642F6BC-5B89-48D0-988F-C1DC17938FC1","type":"message","text":"Yeah that’s something along the lines I was thinking","user":"UH9KWTTD3","ts":"1617568041.116500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LKQ+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah that’s something along the lines I was thinking"}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"C3B65FD5-978F-41E8-BCB8-4DEBD37F549A","type":"message","text":"You could even switch it up to be a `NilBoolean` like number to have “up” and “down” encoded in a single quantity.","user":"UH9KWTTD3","ts":"1617568101.117800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"A4ap","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could even switch it up to be a "},{"type":"text","text":"NilBoolean","style":{"code":true}},{"type":"text","text":" like number to have “up” and “down” encoded in a single quantity."}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD","reactions":[{"name":"+1","users":["U01CR62LAAD","UMY1LV01G"],"count":2}]},{"client_msg_id":"adcd2781-a1ce-4082-8b0d-a3b92edb6c0d","type":"message","text":"Yeah, that would save repeating part of the code!!","user":"U01CR62LAAD","ts":"1617568202.118100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OsK8M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, that would save repeating part of the code!!"}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"f381eafa-d81c-449a-ae37-a53be55263c4","type":"message","text":"Would something like this be a good way to implement `NilBool`?\n```struct NilBool &lt;: Number \n    state:: Bool\nend\n\nconst nilup = NilBool(1)\nconst nildown = NilBool(0)```","user":"U01CR62LAAD","ts":"1617569026.118600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AHS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would something like this be a good way to implement "},{"type":"text","text":"NilBool","style":{"code":true}},{"type":"text","text":"?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct NilBool <: Number \n    state:: Bool\nend\n\nconst nilup = NilBool(1)\nconst nildown = NilBool(0)"}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"F769B22A-F1B1-4B89-B30D-583570BD9A82","type":"message","text":"Yeah looks good to me!","user":"UH9KWTTD3","ts":"1617577108.119000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vgq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah looks good to me!"}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"50690376-6a02-4c6b-a7de-fce60cdec80d","type":"message","text":"Well, it works great with `Dense` and with tailor-made functions like `dx(x) = x[2:end]-x[1:end-1]` and `x³(x) = x.^3`. It correctly spots the activated neurons. But I get an error which seems to be related to the change that enforces that the eltype of the input and hidden state to be `float32`. Even with `Nil` there is an error. In fact,  `outputsize` itself is not working:\n\n```ulia&gt; m = Chain(Dense(3,5))\nChain(Dense(3, 5))\n\njulia&gt; Flux.outputsize(m, (3,))\n(5,)\n\njulia&gt; m = Chain(RNN(3,5))\nChain(Recur(RNNCell(3, 5, tanh)))\n\njulia&gt; Flux.outputsize(m, (3,))\n┌ Error: layer Recur(RNNCell(3, 5, tanh)), index 1 in Chain, gave an error with input of size (3,)\n└ @ Flux ~/.julia/packages/Flux/qp1gc/src/outputsize.jl:107\nERROR: MethodError: no method matching (::Flux.RNNCell{typeof(tanh), Matrix{Float32}, Vector{Float32}, Matrix{Float32}})(::Matrix{Float32}, ::Vector{Flux.NilNumber.Nil})```\n","user":"U01CR62LAAD","ts":"1617580335.119200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ACr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, it works great with "},{"type":"text","text":"Dense","style":{"code":true}},{"type":"text","text":" and with tailor-made functions like "},{"type":"text","text":"dx(x) = x[2:end]-x[1:end-1]","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"x³(x) = x.^3","style":{"code":true}},{"type":"text","text":". It correctly spots the activated neurons. But I get an error which seems to be related to the change that enforces that the eltype of the input and hidden state to be "},{"type":"text","text":"float32","style":{"code":true}},{"type":"text","text":". Even with "},{"type":"text","text":"Nil","style":{"code":true}},{"type":"text","text":" there is an error. In fact,  "},{"type":"text","text":"outputsize","style":{"code":true}},{"type":"text","text":" itself is not working:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ulia> m = Chain(Dense(3,5))\nChain(Dense(3, 5))\n\njulia> Flux.outputsize(m, (3,))\n(5,)\n\njulia> m = Chain(RNN(3,5))\nChain(Recur(RNNCell(3, 5, tanh)))\n\njulia> Flux.outputsize(m, (3,))\n┌ Error: layer Recur(RNNCell(3, 5, tanh)), index 1 in Chain, gave an error with input of size (3,)\n└ @ Flux ~/.julia/packages/Flux/qp1gc/src/outputsize.jl:107\nERROR: MethodError: no method matching (::Flux.RNNCell{typeof(tanh), Matrix{Float32}, Vector{Float32}, Matrix{Float32}})(::Matrix{Float32}, ::Vector{Flux.NilNumber.Nil})"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"724c9836-6e10-4c61-ba7d-3649f7d286a8","type":"message","text":"`paramtype` has no effect","user":"U01CR62LAAD","ts":"1617581092.119400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TY+0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"paramtype","style":{"code":true}},{"type":"text","text":" has no effect"}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"2E8C233B-E2AD-45BF-B585-51EC7DAC6229","type":"message","text":"Yes, you are right. This is because of the same new restriction on the type of the input matching the hidden state in recurrent cells","user":"UH9KWTTD3","ts":"1617592173.120500","team":"T68168MUP","edited":{"user":"UH9KWTTD3","ts":"1617592273.000000"},"blocks":[{"type":"rich_text","block_id":"+38","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, you are right. This is because of the same new restriction on the type of the input matching the hidden state in recurrent cells"}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"98DD09ED-17DD-4BA2-8508-8078F8DBE1A4","type":"message","text":"We’ll have to special case it to address the bug this introduced for `outputsize`","user":"UH9KWTTD3","ts":"1617592208.121600","team":"T68168MUP","edited":{"user":"UH9KWTTD3","ts":"1617592230.000000"},"blocks":[{"type":"rich_text","block_id":"xona","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We’ll have to special case it to address the bug this introduced for "},{"type":"text","text":"outputsize","style":{"code":true}}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"a70f02cb-d0c1-41ad-a423-88b5b382dc6d","type":"message","text":"I see. Okay, so I assume you are gonna make the `Nil` thing work again, right? In this case, I will let the `NilBool` idea rest, and I should work on the 3D visualization, which is already under way.","user":"U01CR62LAAD","ts":"1617618307.122600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dN3nV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see. Okay, so I assume you are gonna make the "},{"type":"text","text":"Nil","style":{"code":true}},{"type":"text","text":" thing work again, right? In this case, I will let the "},{"type":"text","text":"NilBool","style":{"code":true}},{"type":"text","text":" idea rest, and I should work on the 3D visualization, which is already under way."}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"},{"client_msg_id":"453968db-a227-479f-a34b-664f1e0bc946","type":"message","text":"By the way. Someone at the Discord server suggested using LightGraphs+GraphPlot, instead of Recipes for Plots (for the ChainPlot). It is a good idea. It has the side effect of giving us a graph of the network, not only the plot. I will look into that, as well.","user":"U01CR62LAAD","ts":"1617621259.123000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UveQ2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"By the way. Someone at the Discord server suggested using LightGraphs+GraphPlot, instead of Recipes for Plots (for the ChainPlot). It is a good idea. It has the side effect of giving us a graph of the network, not only the plot. I will look into that, as well."}]}]}],"thread_ts":"1617558348.107600","parent_user_id":"U01CR62LAAD"}]