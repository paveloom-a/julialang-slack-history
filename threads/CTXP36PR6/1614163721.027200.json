[{"client_msg_id":"5a1644c8-7ce3-4b37-91f1-613c0530ee95","type":"message","text":"Is the new version of Franklin that supports CommonMark.jl going to be pluggable?\nIf I wrapped `cmark` could I plug it in somewhere?\n\nI just want a markdown engine that fully follows the spec.\nIncluding unadorned raw html blocks.\n\nBecause I don't want to give up portability, nor do I want to check 40K lines of blog posts.\n\n<https://github.com/commonmark/cmark|https://github.com/commonmark/cmark>","user":"U6A936746","ts":"1614163721.027200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"79L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is the new version of Franklin that supports CommonMark.jl going to be pluggable?\nIf I wrapped "},{"type":"text","text":"cmark","style":{"code":true}},{"type":"text","text":" could I plug it in somewhere?\n\nI just want a markdown engine that fully follows the spec.\nIncluding unadorned raw html blocks.\n\nBecause I don't want to give up portability, nor do I want to check 40K lines of blog posts.\n\n"},{"type":"link","url":"https://github.com/commonmark/cmark","text":"https://github.com/commonmark/cmark"}]}]}],"thread_ts":"1614163721.027200","reply_count":15,"reply_users_count":3,"latest_reply":"1614178255.030800","reply_users":["UDP5WL2RX","U6A936746","U01CQTKB86N"],"subscribed":false},{"client_msg_id":"4a555f6b-365c-47b1-8f5b-ac46c2c60761","type":"message","text":"what do you mean 'pluggable'?\n\nRe raw HTML unfortunately that's not going to be like you want (it will have to be fenced, same as indented code blocks, they will never be supported).\nWhat I'd suggest is that you just include the raw HTML from your old posts so that you don't have to bother with it","user":"UDP5WL2RX","ts":"1614163985.027300","team":"T68168MUP","edited":{"user":"UDP5WL2RX","ts":"1614164165.000000"},"blocks":[{"type":"rich_text","block_id":"mNFkF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you mean 'pluggable'?\n\nRe raw HTML unfortunately that's not going to be like you want (it will have to be fenced, same as indented code blocks, they will never be supported).\nWhat I'd suggest is that you just include the raw HTML from your old posts so that you don't have to bother with it"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"ba724ee8-649a-4551-8849-089b934c317d","type":"message","text":"note that if you don't need any of the fancy stuff provided by Franklin; you could \"just\" use a function to generate your HTML. Basically you'd just replace all your `.md` files by empty `.md`  files that only contain `{{insert_blogpost}}` where the function `insert_blogpost` would load the old MD you'd have put in `_assets` , pass it through CommonMark, convert it to HTML with commonmark and inject the HTML there; then Franklin would take that and add the layout stuff around it","user":"UDP5WL2RX","ts":"1614164118.027500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1bb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"note that if you don't need any of the fancy stuff provided by Franklin; you could \"just\" use a function to generate your HTML. Basically you'd just replace all your "},{"type":"text","text":".md","style":{"code":true}},{"type":"text","text":" files by empty "},{"type":"text","text":".md","style":{"code":true}},{"type":"text","text":"  files that only contain "},{"type":"text","text":"{{insert_blogpost}}","style":{"code":true}},{"type":"text","text":" where the function "},{"type":"text","text":"insert_blogpost","style":{"code":true}},{"type":"text","text":" would load the old MD you'd have put in "},{"type":"text","text":"_assets","style":{"code":true}},{"type":"text","text":" , pass it through CommonMark, convert it to HTML with commonmark and inject the HTML there; then Franklin would take that and add the layout stuff around it"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"ed823ed7-f5e5-4d87-88e5-081b41aeeef7","type":"message","text":"&gt;  what do you mean ‘pluggable’?\nAs in setting in some config one of the following functions that would be called when Franklin wants to process a page full of markdown\n```markdown2html = md_page_str-&gt;show(\"text/html\", Markdown(md_page_str))\nmarkdown2html = cmark.md2html_full\nmarkdown2html = CommonMark.html ∘ CommonMark.parse```\n","user":"U6A936746","ts":"1614164673.027800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HWym7","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" what do you mean ‘pluggable’?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAs in setting in some config one of the following functions that would be called when Franklin wants to process a page full of markdown\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"markdown2html = md_page_str->show(\"text/html\", Markdown(md_page_str))\nmarkdown2html = cmark.md2html_full\nmarkdown2html = CommonMark.html ∘ CommonMark.parse"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"9e4f3f47-ffa3-42f7-ba4c-34f1a01b1f2f","type":"message","text":"&gt; Re raw HTML unfortunately that’s not going to be like you want (it will have to be fenced, same as indented code blocks, they will never be supported).\nLegit question: why does everyone hate the spec so much? and want to introduce their own extention for inserting raw html?\nI get why that might want to be optional (security if applying to user generated content though that is just as bad with an extention),\n\nand I get  why it is hard to implement, but if I gave you a parser that supported it?","user":"U6A936746","ts":"1614164719.028000","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1614164855.000000"},"blocks":[{"type":"rich_text","block_id":"JJ9","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Re raw HTML unfortunately that’s not going to be like you want (it will have to be fenced, same as indented code blocks, they will never be supported)."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Legit question: why does everyone hate the spec so much? and want to introduce their own extention for inserting raw html?\nI get why that might want to be optional (security if applying to user generated content though that is just as bad with an extention),\n\nand I get  why it is hard to implement, but if I gave you a parser that supported it?"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"050849d5-aa6c-4fd3-ae98-9b173de1426c","type":"message","text":"I don't know about everyone, but for Franklin the difficulty is that you can nest contexts, and very quickly things become tricky to parse due to ambiguities. So these two requirements (fenced HTML and fenced code blocks) simplify my life a lot in the extra parsing that Franklin does before feeding stuff to CommonMark.\n\nIn your own case, if you have a repo where you're currently migrating stuff, let me know and I can give you a hand if you'd like","user":"UDP5WL2RX","ts":"1614169033.028400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sKg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know about everyone, but for Franklin the difficulty is that you can nest contexts, and very quickly things become tricky to parse due to ambiguities. So these two requirements (fenced HTML and fenced code blocks) simplify my life a lot in the extra parsing that Franklin does before feeding stuff to CommonMark.\n\nIn your own case, if you have a repo where you're currently migrating stuff, let me know and I can give you a hand if you'd like"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"4d6d2df3-1df5-4f0e-b09a-391e82e0f466","type":"message","text":"one thing that could be done though now that I think of it, is to have a page toggle where you say \"don't do any extra parsing\" and you just use CommonMark -&gt; HTML (that might be what you were hinting from the start)","user":"UDP5WL2RX","ts":"1614169156.028600","team":"T68168MUP","edited":{"user":"UDP5WL2RX","ts":"1614169174.000000"},"blocks":[{"type":"rich_text","block_id":"dh5aZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"one thing that could be done though now that I think of it, is to have a page toggle where you say \"don't do any extra parsing\" and you just use CommonMark -> HTML (that might be what you were hinting from the start)"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"067c0751-233e-4af9-8a7f-02e6e73d8c85","type":"message","text":"Does Commonmark have some cool new features? :slightly_smiling_face:","user":"U01CQTKB86N","ts":"1614170510.028900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FA6Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does Commonmark have some cool new features? "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"73a73ab7-027b-48d2-985d-aaea1d549ea5","type":"message","text":"if by cool new feature you mean that it meets the commonmark specs then yes :sweat_smile: (Base.Markdown doesn't)","user":"UDP5WL2RX","ts":"1614170899.029100","team":"T68168MUP","edited":{"user":"UDP5WL2RX","ts":"1614170939.000000"},"blocks":[{"type":"rich_text","block_id":"pRD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"if by cool new feature you mean that it meets the commonmark specs then yes "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":" (Base.Markdown doesn't)"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"5688d134-7d9d-41bc-b88d-bc2941f34d1c","type":"message","text":":joy:","user":"U01CQTKB86N","ts":"1614171005.029500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S2E","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"joy"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"1b26b2b3-c94b-4c7d-9163-195d1c808380","type":"message","text":"Nope, something fancy. :smile:","user":"U01CQTKB86N","ts":"1614171013.029700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/80Mv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nope, something fancy. "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"aab341e5-0c42-4bb8-806f-5030ba1a171a","type":"message","text":"&gt;  In your own case, if you have a repo where you’re currently migrating stuff, let me know and I can give you a hand if you’d like\nIts less about getting the migration done, and more about future proofing,\nI want to follow the strict spec.","user":"U6A936746","ts":"1614171166.029900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oUWmQ","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" In your own case, if you have a repo where you’re currently migrating stuff, let me know and I can give you a hand if you’d like"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIts less about getting the migration done, and more about future proofing,\nI want to follow the strict spec."}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"d6af5f62-03a7-4054-9d88-6e4666e42154","type":"message","text":"CommonMark.jl *almost* follows the CommonMark Spec, but it violates the two raw HTML parts.\n<https://spec.commonmark.org/0.29/#html-blocks>\n<https://spec.commonmark.org/0.29/#raw-html>\n\nWhich is a frequent thing to exclude.\n\nInstead CommonMark.jl has its own extension mode for raw-pass through. It can achieve the same things.\nExcept that it is nonstandard.\n<https://github.com/MichaelHatherly/CommonMark.jl#raw-content>\n\n---\n\nIn contrast the Markdown standard library conciously and intentionally violates the spec even when set to CommonMark mode.\nE.g. it doesn’t believe in hard-breaks indicated by two spaces at the end of the line. Because that is a terrible idea.\nHowever, it is a violation of the spec non the less.","user":"U6A936746","ts":"1614171610.030100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k4s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"CommonMark.jl "},{"type":"text","text":"almost","style":{"bold":true}},{"type":"text","text":" follows the CommonMark Spec, but it violates the two raw HTML parts.\n"},{"type":"link","url":"https://spec.commonmark.org/0.29/#html-blocks"},{"type":"text","text":"\n"},{"type":"link","url":"https://spec.commonmark.org/0.29/#raw-html"},{"type":"text","text":"\n\nWhich is a frequent thing to exclude.\n\nInstead CommonMark.jl has its own extension mode for raw-pass through. It can achieve the same things.\nExcept that it is nonstandard.\n"},{"type":"link","url":"https://github.com/MichaelHatherly/CommonMark.jl#raw-content"},{"type":"text","text":"\n\n---\n\nIn contrast the Markdown standard library conciously and intentionally violates the spec even when set to CommonMark mode.\nE.g. it doesn’t believe in hard-breaks indicated by two spaces at the end of the line. Because that is a terrible idea.\nHowever, it is a violation of the spec non the less."}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"a09b965c-db23-4ec1-9d73-11fe8b56e127","type":"message","text":"&gt;  I don’t know about everyone, but for Franklin the difficulty is that you can nest contexts, and very quickly things become tricky to parse due to ambiguities. So these two requirements (fenced HTML and fenced code blocks) simplify my life a lot in the extra parsing that Franklin does before feeding stuff to CommonMark.\nI wonder if the correct way to do this is to first parse it into an intermidate structure by the markdown parser, and then Franklin can do its tranformations, and then the markdown-&gt;html generator can run.\n\nIt would be good to look at what Liquid or Ninja2 based things do here.","user":"U6A936746","ts":"1614172070.030300","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1614172128.000000"},"blocks":[{"type":"rich_text","block_id":"aBeK","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" I don’t know about everyone, but for Franklin the difficulty is that you can nest contexts, and very quickly things become tricky to parse due to ambiguities. So these two requirements (fenced HTML and fenced code blocks) simplify my life a lot in the extra parsing that Franklin does before feeding stuff to CommonMark."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI wonder if the correct way to do this is to first parse it into an intermidate structure by the markdown parser, and then Franklin can do its tranformations, and then the markdown->html generator can run.\n\nIt would be good to look at what Liquid or Ninja2 based things do here."}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"53ce6d9c-59b7-403d-9cd3-8d8bd9d8c4dc","type":"message","text":"it was never Franklin's goal to be strictly compliant with Markdown. I understand the feeling that this might seem like we're reinventing the wheel but it does make my life easier. What you're saying is _possible_ but I don't plan to do it as it would require significant changes to the parser (beyond what I'm currently doing to be able to use CM.jl).\n\nI'm willing to add a mode where you can say that a page should be just parsed by something specific (which could be CM.jl by default but could be specified by the user to be an arbitrary lib) but then the understanding would be that that page would not have the Franklin-specific stuff (div blocks, commands and what not).\nDoes that seem like a reasonable compromise?","user":"UDP5WL2RX","ts":"1614172828.030600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UXDfD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it was never Franklin's goal to be strictly compliant with Markdown. I understand the feeling that this might seem like we're reinventing the wheel but it does make my life easier. What you're saying is "},{"type":"text","text":"possible","style":{"italic":true}},{"type":"text","text":" but I don't plan to do it as it would require significant changes to the parser (beyond what I'm currently doing to be able to use CM.jl).\n\nI'm willing to add a mode where you can say that a page should be just parsed by something specific (which could be CM.jl by default but could be specified by the user to be an arbitrary lib) but then the understanding would be that that page would not have the Franklin-specific stuff (div blocks, commands and what not).\nDoes that seem like a reasonable compromise?"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746"},{"client_msg_id":"a4b5f549-2edc-4ba6-a4ef-c2f122cf98ab","type":"message","text":"nah, don’t do it on my behalf, I get that it isn’t Franklins goal.\n(I am more gripe-y about CommonMark.jl which *does* have it as a goal. and the Markdown stdlib which IMO should)\n\nI will either do like you said before, just run a julia function that directly outputs HTML,\nor I will just use another static site generator.\n(which is fine :slightly_smiling_face:)","user":"U6A936746","ts":"1614178255.030800","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1614178396.000000"},"blocks":[{"type":"rich_text","block_id":"tpg/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"nah, don’t do it on my behalf, I get that it isn’t Franklins goal.\n(I am more gripe-y about CommonMark.jl which "},{"type":"text","text":"does","style":{"bold":true}},{"type":"text","text":" have it as a goal. and the Markdown stdlib which IMO should)\n\nI will either do like you said before, just run a julia function that directly outputs HTML,\nor I will just use another static site generator.\n(which is fine "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":")"}]}]}],"thread_ts":"1614163721.027200","parent_user_id":"U6A936746","reactions":[{"name":"raised_hands","users":["UDP5WL2RX"],"count":1}]}]