[{"client_msg_id":"411e4db9-a4c7-4a0b-8d7a-7f00120561ae","type":"message","text":"Hi, we have S3 compatible storage and I want to download objects from that storage in Julia. I'm struggling with supplying my own URL address so it's not using the AWS one, but address of our own storage.\nHow can it be done? I've read docs for AWSS3, AWS and AWSCore, but I'm still not how to specify the endpoint.","user":"USBKT1275","ts":"1616166861.002300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bD4=C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, we have S3 compatible storage and I want to download objects from that storage in Julia. I'm struggling with supplying my own URL address so it's not using the AWS one, but address of our own storage.\nHow can it be done? I've read docs for AWSS3, AWS and AWSCore, but I'm still not how to specify the endpoint."}]}]}],"thread_ts":"1616166861.002300","reply_count":3,"reply_users_count":2,"latest_reply":"1616172515.002900","reply_users":["ULDQSHD41","USBKT1275"],"subscribed":false},{"client_msg_id":"c0d9e04e-56c5-46ca-b0d5-084e169ccf42","type":"message","text":"Currently there are two ways to achieve this, by using the provided `AWS.Request` object, constructing filling the fields and then calling `submit_request(::AWSConfig, ::Request)`\n\nAlternatively you can modify the AWSConfig functionality, and override the `generate_service_url()` function.\n\n- <https://github.com/JuliaCloud/AWS.jl#modifying-functionality>\n\nI’ve logged an issue for this here,\n\n- <https://github.com/JuliaCloud/AWS.jl/issues/323>","user":"ULDQSHD41","ts":"1616168035.002400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AQtk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Currently there are two ways to achieve this, by using the provided "},{"type":"text","text":"AWS.Request","style":{"code":true}},{"type":"text","text":" object, constructing filling the fields and then calling "},{"type":"text","text":"submit_request(::AWSConfig, ::Request)","style":{"code":true}},{"type":"text","text":"\n\nAlternatively you can modify the AWSConfig functionality, and override the "},{"type":"text","text":"generate_service_url()","style":{"code":true}},{"type":"text","text":" function.\n\n- "},{"type":"link","url":"https://github.com/JuliaCloud/AWS.jl#modifying-functionality"},{"type":"text","text":"\n\nI’ve logged an issue for this here,\n\n- "},{"type":"link","url":"https://github.com/JuliaCloud/AWS.jl/issues/323"}]}]}],"thread_ts":"1616166861.002300","parent_user_id":"USBKT1275"},{"client_msg_id":"841a54cc-e0ef-44bc-8205-0fdee851de2b","type":"message","text":"Oh, perfect, thanks. So I wouldn't be using  `AWS.AWSServices: s3`  or `AWSS3.s3_get(aws, \"my.bucket\", \"key\")` , but instead, I'd call the more low-level `submit_request` ?\n\nOr I'll probably follow the minio example in modifying functionality and make similar changes.","user":"USBKT1275","ts":"1616168364.002600","team":"T68168MUP","edited":{"user":"USBKT1275","ts":"1616168442.000000"},"blocks":[{"type":"rich_text","block_id":"Pr+I4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, perfect, thanks. So I wouldn't be using  "},{"type":"text","text":"AWS.AWSServices: s3","style":{"code":true}},{"type":"text","text":"  or "},{"type":"text","text":"AWSS3.s3_get(aws, \"my.bucket\", \"key\")","style":{"code":true}},{"type":"text","text":" , but instead, I'd call the more low-level "},{"type":"text","text":"submit_request","style":{"code":true}},{"type":"text","text":" ?\n\nOr I'll probably follow the minio example in modifying functionality and make similar changes."}]}]}],"thread_ts":"1616166861.002300","parent_user_id":"USBKT1275"},{"client_msg_id":"ff2162ad-2592-4376-b974-2dc54281c011","type":"message","text":"Correct. I would probably create a sub-type of `AWSConfig` and a `generate_service_url(::YourType)` function which then configures to your custom URL.\n\nI believe this should also work with AWSS3 as well, I need to double check if I’ve updated that package to use `AbstractAWSConfig` however.\n\nFollowing the MinIO example would be the easiest way to achieve what you’re doing.","user":"ULDQSHD41","ts":"1616172515.002900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qIta0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Correct. I would probably create a sub-type of "},{"type":"text","text":"AWSConfig","style":{"code":true}},{"type":"text","text":" and a "},{"type":"text","text":"generate_service_url(::YourType)","style":{"code":true}},{"type":"text","text":" function which then configures to your custom URL.\n\nI believe this should also work with AWSS3 as well, I need to double check if I’ve updated that package to use "},{"type":"text","text":"AbstractAWSConfig","style":{"code":true}},{"type":"text","text":" however.\n\nFollowing the MinIO example would be the easiest way to achieve what you’re doing."}]}]}],"thread_ts":"1616166861.002300","parent_user_id":"USBKT1275","reactions":[{"name":"+1","users":["USBKT1275"],"count":1}]}]