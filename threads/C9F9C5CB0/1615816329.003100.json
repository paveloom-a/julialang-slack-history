[{"client_msg_id":"8b265f9c-b010-4e26-b123-aac7e536a217","type":"message","text":"Might any of you know a good way (a package or an algorithm) for finding the concave hull of a function (or set of points)?\n\nTo be precise, I have a 1D function `y(x)` (say `y(x) = cos(x)` and I want the smallest curve that is (weakly) above every point of `y` .","user":"U91Q3595Y","ts":"1615816329.003100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DZV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Might any of you know a good way (a package or an algorithm) for finding the concave hull of a function (or set of points)?\n\nTo be precise, I have a 1D function "},{"type":"text","text":"y(x)","style":{"code":true}},{"type":"text","text":" (say "},{"type":"text","text":"y(x) = cos(x)","style":{"code":true}},{"type":"text","text":" and I want the smallest curve that is (weakly) above every point of "},{"type":"text","text":"y","style":{"code":true}},{"type":"text","text":" ."}]}]}],"thread_ts":"1615816329.003100","reply_count":6,"reply_users_count":3,"latest_reply":"1615927513.001600","reply_users":["U017YGFQTE3","U91Q3595Y","U9Z3H4H5F"],"is_locked":false,"subscribed":false},{"client_msg_id":"54fb7494-9f1d-4fc8-aa47-65aa9437abcb","type":"message","text":"These two might suit: <https://juliareach.github.io/LazySets.jl/v1.11/man/convex_hulls.html> <https://github.com/JuliaPolyhedra/QHull.jl>","user":"U017YGFQTE3","ts":"1615820252.003200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h2Th","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"These two might suit: "},{"type":"link","url":"https://juliareach.github.io/LazySets.jl/v1.11/man/convex_hulls.html"},{"type":"text","text":" "},{"type":"link","url":"https://github.com/JuliaPolyhedra/QHull.jl"}]}]}],"thread_ts":"1615816329.003100","parent_user_id":"U91Q3595Y"},{"client_msg_id":"0fec36c6-8464-4f27-a8ca-325893129ce2","type":"message","text":"I'm a bit confused about the structs that these functions use, but I will try to figure it out..thanks!","user":"U91Q3595Y","ts":"1615866966.000100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wqe7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm a bit confused about the structs that these functions use, but I will try to figure it out..thanks!"}]}]}],"thread_ts":"1615816329.003100","parent_user_id":"U91Q3595Y"},{"client_msg_id":"0fc53b76-504c-4529-b420-c6006dd3b564","type":"message","text":"I'm not sure what channel would be best but <@U9Z3H4H5F>  and <@U011ZFBLH6U>, maintainers of LazySets, are on Slack and might be able to help if the package is right for your problem.","user":"U017YGFQTE3","ts":"1615884192.000300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JPvJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure what channel would be best but "},{"type":"user","user_id":"U9Z3H4H5F"},{"type":"text","text":"  and "},{"type":"user","user_id":"U011ZFBLH6U"},{"type":"text","text":", maintainers of LazySets, are on Slack and might be able to help if the package is right for your problem."}]}]}],"thread_ts":"1615816329.003100","parent_user_id":"U91Q3595Y","reactions":[{"name":"+1","users":["U9Z3H4H5F"],"count":1},{"name":"heart","users":["U91Q3595Y"],"count":1}]},{"client_msg_id":"717b083e-28cb-4925-a009-02d1222c71e4","type":"message","text":"Hi, for the *convex* hull you may use LazySets while for the *concave* hull you may use <https://github.com/lstagner/ConcaveHull.jl>","user":"U9Z3H4H5F","ts":"1615890174.000800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JMF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi, for the "},{"type":"text","text":"convex","style":{"bold":true}},{"type":"text","text":" hull you may use LazySets while for the "},{"type":"text","text":"concave","style":{"bold":true}},{"type":"text","text":" hull you may use "},{"type":"link","url":"https://github.com/lstagner/ConcaveHull.jl"}]}]}],"thread_ts":"1615816329.003100","parent_user_id":"U91Q3595Y"},{"client_msg_id":"c3e859a4-148c-4b14-835b-c33b91e8232e","type":"message","text":"I uploaded a notebook with an example comparing the two: <https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb>","user":"U9Z3H4H5F","ts":"1615890684.001000","team":"T68168MUP","attachments":[{"title":"Notebook on nbviewer","title_link":"https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb","text":"Check out this Jupyter notebook!","fallback":"Notebook on nbviewer","from_url":"https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb","service_icon":"https://nbviewer.jupyter.org/static/ico/apple-touch-icon-144-precomposed.png","service_name":"nbviewer.jupyter.org","id":1,"original_url":"https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb"}],"blocks":[{"type":"rich_text","block_id":"LaJuf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I uploaded a notebook with an example comparing the two: "},{"type":"link","url":"https://nbviewer.jupyter.org/github/mforets/escritoire/blob/master/2021/Week11/ConcaveAndConvexHull.ipynb"}]}]}],"thread_ts":"1615816329.003100","parent_user_id":"U91Q3595Y","reactions":[{"name":"+1","users":["U017YGFQTE3"],"count":1}]},{"client_msg_id":"fcefc6e6-98cb-4f64-8f38-3224c12bd7eb","type":"message","text":"Oh this is great! Thank you","user":"U91Q3595Y","ts":"1615927513.001600","team":"T68168MUP","edited":{"user":"U91Q3595Y","ts":"1615927555.000000"},"blocks":[{"type":"rich_text","block_id":"qBKy3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh this is great! Thank you"}]}]}],"thread_ts":"1615816329.003100","parent_user_id":"U91Q3595Y","reactions":[{"name":"slightly_smiling_face","users":["U9Z3H4H5F"],"count":1}]}]