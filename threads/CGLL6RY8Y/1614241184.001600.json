[{"client_msg_id":"4c095261-bd9d-4ea1-a2f8-1552de1a0dcf","type":"message","text":"What’s the current status of `in` to check whether a point is in a polygon? And does it work for Shapefile polygons yet? I’m not really sure it made it past the move to GeometryBasics. <@U66SGEWAC>","user":"U73KENNG4","ts":"1614241184.001600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ECp3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What’s the current status of "},{"type":"text","text":"in","style":{"code":true}},{"type":"text","text":" to check whether a point is in a polygon? And does it work for Shapefile polygons yet? I’m not really sure it made it past the move to GeometryBasics. "},{"type":"user","user_id":"U66SGEWAC"}]}]}],"thread_ts":"1614241184.001600","reply_count":11,"reply_users_count":3,"latest_reply":"1614266838.004100","reply_users":["U8D0QF5NZ","U73KENNG4","UA3UH56HL"],"subscribed":false},{"client_msg_id":"cdd23dd4-84cf-4d28-bdf3-38b487367d1e","type":"message","text":"Shapefile hasn't moved to GeometryBasics yet, so it still has it's own geometry types.","user":"U8D0QF5NZ","ts":"1614241445.001700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0A5j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Shapefile hasn't moved to GeometryBasics yet, so it still has it's own geometry types."}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"a7a32df0-3e1d-4fcd-b19f-35fea61eca18","type":"message","text":"Not sure if `in` works for point in polygon in GeometryBasics. Point in polygon exists here as well: <https://github.com/JuliaGeometry/PolygonOps.jl>","user":"U8D0QF5NZ","ts":"1614241563.001900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dka","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure if "},{"type":"text","text":"in","style":{"code":true}},{"type":"text","text":" works for point in polygon in GeometryBasics. Point in polygon exists here as well: "},{"type":"link","url":"https://github.com/JuliaGeometry/PolygonOps.jl"}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"6a21a57c-9425-45a1-9b1b-c19385a419ad","type":"message","text":"OK so any operation doing that on Shapefiles would need to rely on GEOS?","user":"U73KENNG4","ts":"1614241946.002100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"K6Qnr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"OK so any operation doing that on Shapefiles would need to rely on GEOS?"}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"b95e6766-b5a5-4298-a63a-bb50c478e739","type":"message","text":"Not necessarily. I'd probably use ArchGDAL/GeoDataFrames, but if you need to avoid the GDAL dependency, you could use Shapefiles.jl and convert the geometries to what is needed for PolygonOps / GeometryBasics.","user":"U8D0QF5NZ","ts":"1614252049.002300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eCm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not necessarily. I'd probably use ArchGDAL/GeoDataFrames, but if you need to avoid the GDAL dependency, you could use Shapefiles.jl and convert the geometries to what is needed for PolygonOps / GeometryBasics."}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"d580e234-e39d-43fb-a048-2d0a869bfb45","type":"message","text":"It seems that all operations implemented in PolygonOps.jl are already available in Meshes.jl. In particular, the area of the polygon implemented in PolygonOps.jl can be negative which is incorrect (only the signed area can be negative). It also doesn't take into account the presence of holes. Regarding the `in` operation we only have the method based on winding numbers in Meshes.jl currently so a PR with the other method is welcome. Moving forward it would be a good idea to deprecate PolygonOps.jl and rewrite Shapefiles.jl to use Meshes.jl","user":"UA3UH56HL","ts":"1614253113.002500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jpp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems that all operations implemented in PolygonOps.jl are already available in Meshes.jl. In particular, the area of the polygon implemented in PolygonOps.jl can be negative which is incorrect (only the signed area can be negative). It also doesn't take into account the presence of holes. Regarding the "},{"type":"text","text":"in","style":{"code":true}},{"type":"text","text":" operation we only have the method based on winding numbers in Meshes.jl currently so a PR with the other method is welcome. Moving forward it would be a good idea to deprecate PolygonOps.jl and rewrite Shapefiles.jl to use Meshes.jl"}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"452cd03a-6074-4f2d-a539-bcebcaf7723d","type":"message","text":"Good to know al of that is already in Meshes.jl. Are you open to adding the GeoInterface to Meshes as well? Would make interior easier.","user":"U8D0QF5NZ","ts":"1614255603.002700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EgC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Good to know al of that is already in Meshes.jl. Are you open to adding the GeoInterface to Meshes as well? Would make interior easier."}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"5d305910-4dc0-472b-9592-e6a2480de2a0","type":"message","text":"I think we should aim for a more general integration strategy. We would like to detach Meshes.jl from specific domains (GIS, FEM, Viz) so that we never fall into the trap of overconstraining the implementation of algorithms to 2D spaces for example. If we assume that Meshes.jl is a repository of geometry types with a bunch of computational geometry algorithms, we would like to have an additional layer on top of it to deal with specific needs found in GIS for example. Perhaps this strategy would require an effort to first identify a general interface (e.g. MeshInterface.jl) on top of which GeoInterface.jl could be refactored. That is a more ambitious plan that I think will take time to materialize. When you say that it would make the interior easier, I understand you wanted to say that it would make the transition easier, right?","user":"UA3UH56HL","ts":"1614256214.002900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6ugg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think we should aim for a more general integration strategy. We would like to detach Meshes.jl from specific domains (GIS, FEM, Viz) so that we never fall into the trap of overconstraining the implementation of algorithms to 2D spaces for example. If we assume that Meshes.jl is a repository of geometry types with a bunch of computational geometry algorithms, we would like to have an additional layer on top of it to deal with specific needs found in GIS for example. Perhaps this strategy would require an effort to first identify a general interface (e.g. MeshInterface.jl) on top of which GeoInterface.jl could be refactored. That is a more ambitious plan that I think will take time to materialize. When you say that it would make the interior easier, I understand you wanted to say that it would make the transition easier, right?"}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"65307b1d-bef0-4334-838e-040b01d8baf0","type":"message","text":"What is the relationship between GeometryBasics and Meshes.jl? It sounds like your vision for Meshes is essentially what was envisioned for GeometryBasics","user":"U73KENNG4","ts":"1614264732.003100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WZ3Bn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the relationship between GeometryBasics and Meshes.jl? It sounds like your vision for Meshes is essentially what was envisioned for GeometryBasics"}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"de14e102-73f0-40d5-b71a-800d39cc583c","type":"message","text":"It has been discussed in various threads. See the announcement (<https://discourse.julialang.org/t/ann-announcing-meshes-jl/53973>), the documentation (<https://juliageometry.github.io/Meshes.jl/stable>) and various other threads on Discourse (e.g. <https://discourse.julialang.org/t/implementing-sqlite-spatialite-driver/55840>). In summary, it is a replacement of GeometryBasics.jl that fixes several conceptual and software design issues.","user":"UA3UH56HL","ts":"1614264915.003300","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"[ANN] Announcing Meshes.jl","title_link":"https://discourse.julialang.org/t/ann-announcing-meshes-jl/53973","text":"Meshes.jl provides efficient implementations of concepts from computational geometry and finite element analysis. It promotes rigorous mathematical definitions of spatial discretizations (a.k.a. meshes) that are adequate for describing general manifolds embedded in Rⁿ, including surfaces described with spherical coordinates, and geometries described with multiple coordinate reference systems. Our ambitious goal is to provide all the features of the CGAL project in pure Julia. Unlike other ex...","fallback":"JuliaLang: [ANN] Announcing Meshes.jl","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/3X/f/8/f81b05b39cba2fad4a4785e579b54294236f2e81.png","fields":[{"title":"Reading time","value":"1 mins :clock2:","short":true},{"title":"Likes","value":"47 :heart:","short":true}],"ts":1611662403,"from_url":"https://discourse.julialang.org/t/ann-announcing-meshes-jl/53973","thumb_width":800,"thumb_height":267,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/ann-announcing-meshes-jl/53973"},{"service_name":"JuliaLang","title":"Implementing SQLite / Spatialite driver","title_link":"https://discourse.julialang.org/t/implementing-sqlite-spatialite-driver/55840","text":"Hi! I’m sick of the mess shapefiles create and it itches me to write a package for reading geometries from sqlite files (they proved to be rather small and fast last time I tested). Given the simplicity of the WKB format it should be rather easy. The question is: What should the geometries be parsed into? Polygons etc. from GeometryBasics? Or a copy of the GeoInterface implementation in Shapefile.jl? Or sth completely different? I really don’t want to implement Point type #1001. All in all I’m n...","fallback":"JuliaLang: Implementing SQLite / Spatialite driver","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","fields":[{"title":"Reading time","value":"2 mins :clock2:","short":true},{"title":"Likes","value":"4 :heart:","short":true}],"ts":1614077926,"from_url":"https://discourse.julialang.org/t/implementing-sqlite-spatialite-driver/55840","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":2,"original_url":"https://discourse.julialang.org/t/implementing-sqlite-spatialite-driver/55840"}],"blocks":[{"type":"rich_text","block_id":"6MWgi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It has been discussed in various threads. See the announcement ("},{"type":"link","url":"https://discourse.julialang.org/t/ann-announcing-meshes-jl/53973"},{"type":"text","text":"), the documentation ("},{"type":"link","url":"https://juliageometry.github.io/Meshes.jl/stable"},{"type":"text","text":") and various other threads on Discourse (e.g. "},{"type":"link","url":"https://discourse.julialang.org/t/implementing-sqlite-spatialite-driver/55840"},{"type":"text","text":"). In summary, it is a replacement of GeometryBasics.jl that fixes several conceptual and software design issues."}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"B7ED7924-6BA4-44F2-B774-464B041A5E8A","type":"message","text":"Thank you!","user":"U73KENNG4","ts":"1614265439.003900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KggC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you!"}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"},{"client_msg_id":"ce2db748-61e9-47ae-9271-888ad1e1fc9c","type":"message","text":"Sorry I meant interop (interoperability) where I said interior. But indeed it would also make the transition easier. Though if you have ideas about another interface already it may not make sense.","user":"U8D0QF5NZ","ts":"1614266838.004100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h/DJG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry I meant interop (interoperability) where I said interior. But indeed it would also make the transition easier. Though if you have ideas about another interface already it may not make sense."}]}]}],"thread_ts":"1614241184.001600","parent_user_id":"U73KENNG4"}]