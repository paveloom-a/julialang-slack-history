[{"client_msg_id":"557dbaab-99b1-4e76-9c95-840c8fd46c8e","type":"message","text":"Hey,\nI have a question that has been keeping me busy quite some time now....\nI am working with polygon meshes and camera projections and so on. One aspect of this is having to compute visibility relations between camera positions and points in space with regard to a polygon mesh being in the way. I currently have a Python implementation, that uses raytracing/raycasting, and even though it makes use of all the CPU cores I have, it takes longer than I expected.\nNow that I am moving to Julia step by step, I want to also move this visibility computation, with the hope that I can find something better, maybe even making use of the GPU. Is anybody aware of a suitable implementation of visibility queries or raytracing?\nAny hints and ideas are welcome, I am slowly getting into the Julia geometry world.","user":"U019078LDND","ts":"1611931625.002400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N5V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey,\nI have a question that has been keeping me busy quite some time now....\nI am working with polygon meshes and camera projections and so on. One aspect of this is having to compute visibility relations between camera positions and points in space with regard to a polygon mesh being in the way. I currently have a Python implementation, that uses raytracing/raycasting, and even though it makes use of all the CPU cores I have, it takes longer than I expected.\nNow that I am moving to Julia step by step, I want to also move this visibility computation, with the hope that I can find something better, maybe even making use of the GPU. Is anybody aware of a suitable implementation of visibility queries or raytracing?\nAny hints and ideas are welcome, I am slowly getting into the Julia geometry world."}]}]}],"thread_ts":"1611931625.002400","reply_count":8,"reply_users_count":3,"latest_reply":"1612197963.004000","reply_users":["UA3UH56HL","U019078LDND","UGXP1QV41"],"subscribed":false},{"client_msg_id":"61421908-4c73-48b5-84a7-5df29a18c338","type":"message","text":"Welcome to the community Paul. It would be nice if you could implement these visibility algorithms on top of mesh types from Meshes.jl for example. We are working hard to make it agnostic to applications","user":"UA3UH56HL","ts":"1611957347.002500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fgI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Welcome to the community Paul. It would be nice if you could implement these visibility algorithms on top of mesh types from Meshes.jl for example. We are working hard to make it agnostic to applications"}]}]}],"thread_ts":"1611931625.002400","parent_user_id":"U019078LDND"},{"client_msg_id":"be38901d-82bf-4acb-93c2-36d7e402235a","type":"message","text":"Hey, thanks for the answer. I figured that there would not be an off-the-shelf solution, else I would have probably found it :wink:\nSounds like I will have to dip my toes into writing such a package. I have some ideas there, so this could work.\nDo you know about any raycasting/raytracing/intersection algorithms I could build upon? I only know about the differentiable raytracer and I found it a little hard to get going with it. And implementing efficient ray-mesh intersections is quite some challenge I would guess, so I would use any stepping stone I can find.","user":"U019078LDND","ts":"1612014113.002700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P1zIQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey, thanks for the answer. I figured that there would not be an off-the-shelf solution, else I would have probably found it "},{"type":"emoji","name":"wink"},{"type":"text","text":"\nSounds like I will have to dip my toes into writing such a package. I have some ideas there, so this could work.\nDo you know about any raycasting/raytracing/intersection algorithms I could build upon? I only know about the differentiable raytracer and I found it a little hard to get going with it. And implementing efficient ray-mesh intersections is quite some challenge I would guess, so I would use any stepping stone I can find."}]}]}],"thread_ts":"1611931625.002400","parent_user_id":"U019078LDND"},{"client_msg_id":"49768a37-923f-4a88-b74a-de723cd8e4e6","type":"message","text":"There is some legacy stuff here: <https://github.com/JuliaGeometry/TriangleIntersect.jl>","user":"UGXP1QV41","ts":"1612155011.003000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ov8x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is some legacy stuff here: "},{"type":"link","url":"https://github.com/JuliaGeometry/TriangleIntersect.jl"}]}]}],"thread_ts":"1611931625.002400","parent_user_id":"U019078LDND"},{"client_msg_id":"450c2e55-a3cd-4a29-9bcc-e1da60a89679","type":"message","text":"I've only done ray marching stuff on implicits, which I'm not sure is related. There is also <#CQJM57FLJ|rendering> with a few folks that were doing PBR in Julia i think.","user":"UGXP1QV41","ts":"1612155088.003200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4kTzF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've only done ray marching stuff on implicits, which I'm not sure is related. There is also "},{"type":"channel","channel_id":"CQJM57FLJ"},{"type":"text","text":" with a few folks that were doing PBR in Julia i think."}]}]}],"thread_ts":"1611931625.002400","parent_user_id":"U019078LDND"},{"client_msg_id":"e605fa37-8b28-4c74-89d7-1708cda93c20","type":"message","text":"Thanks for the pointers! I will look into those. Maybe I will pull out stuff from all of those, bringing the TriangleIntersect.jl to use more common datatypes. Maybe the BPRT people have some smart stuff.","user":"U019078LDND","ts":"1612172569.003400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pW3C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for the pointers! I will look into those. Maybe I will pull out stuff from all of those, bringing the TriangleIntersect.jl to use more common datatypes. Maybe the BPRT people have some smart stuff."}]}]}],"thread_ts":"1611931625.002400","parent_user_id":"U019078LDND"},{"client_msg_id":"c27735d9-6bfc-49a5-ac3f-4bfbcd7da643","type":"message","text":"<@UA3UH56HL> Hey, I have a follow up question regarding reading files with Meshes.jl. There seems to be no IO functionality in Meshes.jl, MeshIO.jl did not want to read my ply file and PlyIO.jl does not play with the Meshes.jl datastructures as far as I can tell. Am I missing something? Do you have an example of reading mesh files? Thanks!","user":"U019078LDND","ts":"1612197739.003600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k58a1","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UA3UH56HL"},{"type":"text","text":" Hey, I have a follow up question regarding reading files with Meshes.jl. There seems to be no IO functionality in Meshes.jl, MeshIO.jl did not want to read my ply file and PlyIO.jl does not play with the Meshes.jl datastructures as far as I can tell. Am I missing something? Do you have an example of reading mesh files? Thanks!"}]}]}],"thread_ts":"1611931625.002400","parent_user_id":"U019078LDND"},{"client_msg_id":"328cddc5-b514-4905-8399-96190dc73278","type":"message","text":"Hey <@U019078LDND> we currently don't have IO functionality. It would be nice to have it though. Perhaps update MeshIO.jl or other packages to support the data structures we are working on.","user":"UA3UH56HL","ts":"1612197919.003800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WO=re","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey "},{"type":"user","user_id":"U019078LDND"},{"type":"text","text":" we currently don't have IO functionality. It would be nice to have it though. Perhaps update MeshIO.jl or other packages to support the data structures we are working on."}]}]}],"thread_ts":"1611931625.002400","parent_user_id":"U019078LDND"},{"client_msg_id":"41c40a7d-8b7e-46ef-8c07-13d8dff374d6","type":"message","text":"Feel free to open an issue on Github and to discuss ideas on Zulip. Slack is a black hole and this conversation will be erased in a few weeks","user":"UA3UH56HL","ts":"1612197963.004000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/k8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Feel free to open an issue on Github and to discuss ideas on Zulip. Slack is a black hole and this conversation will be erased in a few weeks"}]}]}],"thread_ts":"1611931625.002400","parent_user_id":"U019078LDND"}]