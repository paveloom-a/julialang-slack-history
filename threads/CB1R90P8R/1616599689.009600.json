[{"client_msg_id":"cb1b6fb3-4fac-4962-bce8-bc8b2e4accb1","type":"message","text":"Hi everyone! I am a Julia newcomer and I am wondering what image processing library to use. I saw there exist several options and considered the following:\n1. A combination of <https://juliaimages.org/ImageFiltering.jl/stable/#ImageFiltering.jl-1|ImageFiltering> / <https://github.com/JuliaImages/ImageMorphology.jl|ImageMorphology> / <https://github.com/JuliaImages/ImageTransformations.jl|ImageTransformations> \n2. <https://juliaimages.org/stable/|JuliaImages>\n3. <https://docs.opencv.org/master/d8/da4/tutorial_julia.html|OpenCV binding>\nRoughly, my use-case is the following: I am trying to automatically learn playing <https://paperswithcode.com/dataset/arcade-learning-environment|Atari 2600 games>. I would need a library including a large variety of image filters to which fast calls can be performed as learning would require many samples + I would need to chain several filters together. As you can see, images on Atari 2600 are relatively small and unrealistic (no noise, objects rarely overlap and pixels of 1 object almost always have the same color).\nAny thought about this? Thanks in advance! :slightly_smiling_face:","user":"U01SHQ0AT4G","ts":"1616599689.009600","team":"T68168MUP","edited":{"user":"U01SHQ0AT4G","ts":"1617092148.000000"},"blocks":[{"type":"rich_text","block_id":"9SoXx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi everyone! I am a Julia newcomer and I am wondering what image processing library to use. I saw there exist several options and considered the following:\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A combination of "},{"type":"link","url":"https://juliaimages.org/ImageFiltering.jl/stable/#ImageFiltering.jl-1","text":"ImageFiltering"},{"type":"text","text":" / "},{"type":"link","url":"https://github.com/JuliaImages/ImageMorphology.jl","text":"ImageMorphology"},{"type":"text","text":" / "},{"type":"link","url":"https://github.com/JuliaImages/ImageTransformations.jl","text":"ImageTransformations"},{"type":"text","text":" "}]},{"type":"rich_text_section","elements":[{"type":"link","url":"https://juliaimages.org/stable/","text":"JuliaImages"}]},{"type":"rich_text_section","elements":[{"type":"link","url":"https://docs.opencv.org/master/d8/da4/tutorial_julia.html","text":"OpenCV binding"}]}],"style":"ordered","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"Roughly, my use-case is the following: I am trying to automatically learn playing "},{"type":"link","url":"https://paperswithcode.com/dataset/arcade-learning-environment","text":"Atari 2600 games"},{"type":"text","text":". I would need a library including a large variety of image filters to which fast calls can be performed as learning would require many samples + I would need to chain several filters together. As you can see, images on Atari 2600 are relatively small and unrealistic (no noise, objects rarely overlap and pixels of 1 object almost always have the same color).\nAny thought about this? Thanks in advance! "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1616599689.009600","reply_count":8,"reply_users_count":3,"latest_reply":"1616682547.012800","reply_users":["UB2QRMQPN","U01SHQ0AT4G","U7PGB5DU3"],"is_locked":false,"subscribed":false},{"client_msg_id":"19460001-78ef-4f35-a701-598e3d6748c7","type":"message","text":"Options (1) and (2) are the same - JuliaImages is an umbrella organization that includes ImageFiltering/ImageMorphology/ImageTransformations","user":"UB2QRMQPN","ts":"1616602753.010000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ciK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Options (1) and (2) are the same - JuliaImages is an umbrella organization that includes ImageFiltering/ImageMorphology/ImageTransformations"}]}]}],"thread_ts":"1616599689.009600","parent_user_id":"U01SHQ0AT4G"},{"client_msg_id":"44f5bd21-427d-4ff5-8d07-bd23804178e5","type":"message","text":"Right, thanks for pointing that! Any idea about how do JuliaImages and OpenCV bindings compare?","user":"U01SHQ0AT4G","ts":"1616604187.010200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hBgc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Right, thanks for pointing that! Any idea about how do JuliaImages and OpenCV bindings compare?"}]}]}],"thread_ts":"1616599689.009600","parent_user_id":"U01SHQ0AT4G"},{"client_msg_id":"ddc93f96-6ea8-4e9e-ab86-3ba5fddd0659","type":"message","text":"Images.jl is very intact (everything included works well), OpenCV.jl might not feel as intact, but useful for accessing some of the more exotic algorithms there. \nI'd suggests you start with Images.jl, and contribute if you miss anything :smile:","user":"U7PGB5DU3","ts":"1616608291.010400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"womR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Images.jl is very intact (everything included works well), OpenCV.jl might not feel as intact, but useful for accessing some of the more exotic algorithms there. \nI'd suggests you start with Images.jl, and contribute if you miss anything "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1616599689.009600","parent_user_id":"U01SHQ0AT4G","reactions":[{"name":"heavy_check_mark","users":["UB2QRMQPN","U01SHQ0AT4G"],"count":2}]},{"client_msg_id":"6c161bd5-351c-444f-b44a-7168504c8582","type":"message","text":"One caveat about Images.jl - it's focused on CPU algorithms, which will be significantly slower than GPU algos in most cases","user":"UB2QRMQPN","ts":"1616613533.010700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=sO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One caveat about Images.jl - it's focused on CPU algorithms, which will be significantly slower than GPU algos in most cases"}]}]}],"thread_ts":"1616599689.009600","parent_user_id":"U01SHQ0AT4G"},{"client_msg_id":"42ec3ca6-be5f-4087-a3c5-028ecef05546","type":"message","text":"It's easy to implement GPU kernels in Julia, so I think most people who've needed GPU filtering have just done so for their own use cases rather than upstreaming to Images.jl","user":"UB2QRMQPN","ts":"1616613650.010900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"szp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's easy to implement GPU kernels in Julia, so I think most people who've needed GPU filtering have just done so for their own use cases rather than upstreaming to Images.jl"}]}]}],"thread_ts":"1616599689.009600","parent_user_id":"U01SHQ0AT4G"},{"client_msg_id":"bdaf8d11-0b6b-45d2-821f-aeb4c2d1a540","type":"message","text":"We're really just waiting for a GSOC student to step up to the plate: <https://julialang.org/jsoc/gsoc/images/#gpu_support_for_many_algorithms_medium>","user":"UB2QRMQPN","ts":"1616613845.011100","team":"T68168MUP","attachments":[{"title":"JuliaImages Projects – Summer of Code","title_link":"https://julialang.org/jsoc/gsoc/images/#gpu_support_for_many_algorithms_medium","text":"The official website for the Julia Language. Julia is a language that is fast, dynamic, easy to use, and open source. Click here to learn more.","fallback":"JuliaImages Projects – Summer of Code","image_url":"https://julialang.org/assets/images/julia-open-graph.png","from_url":"https://julialang.org/jsoc/gsoc/images/#gpu_support_for_many_algorithms_medium","image_width":500,"image_height":250,"image_bytes":742374,"service_name":"julialang.org","id":1,"original_url":"https://julialang.org/jsoc/gsoc/images/#gpu_support_for_many_algorithms_medium"}],"blocks":[{"type":"rich_text","block_id":"xzm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We're really just waiting for a GSOC student to step up to the plate: "},{"type":"link","url":"https://julialang.org/jsoc/gsoc/images/#gpu_support_for_many_algorithms_medium"}]}]}],"thread_ts":"1616599689.009600","parent_user_id":"U01SHQ0AT4G"},{"client_msg_id":"513914b3-cd0b-4cdb-9580-6ef984f731ad","type":"message","text":"You may also want to take a look at <https://github.com/JuliaReinforcementLearning/ArcadeLearningEnvironment.jl>","user":"UB2QRMQPN","ts":"1616614463.011400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TJ7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You may also want to take a look at "},{"type":"link","url":"https://github.com/JuliaReinforcementLearning/ArcadeLearningEnvironment.jl"}]}]}],"thread_ts":"1616599689.009600","parent_user_id":"U01SHQ0AT4G","reactions":[{"name":"+1","users":["U01SHQ0AT4G"],"count":1}]},{"client_msg_id":"9222f201-dd77-4405-a022-a527a32cc2bb","type":"message","text":"Thanks a lot for the advice! As I am not sure I'll need GPUs I think I'd rather use Images.jl.","user":"U01SHQ0AT4G","ts":"1616682547.012800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"57q9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks a lot for the advice! As I am not sure I'll need GPUs I think I'd rather use Images.jl."}]}]}],"thread_ts":"1616599689.009600","parent_user_id":"U01SHQ0AT4G"}]