[{"client_msg_id":"F2238DD0-9D57-4DBD-8D0E-8D0AA7310C35","type":"message","text":"MATLAB, after 37 years of existence, finally has real keyword arguments. For those of you fortunate enough to not have to use MATLAB, the method up until this point for handling keyword arguments has been—no joke—passing in strings before arguments which have to be collected as pairs and manually parsed. There have been some attempts to sorta automate some of the manual parsing, but they were still pretty clunky. I really think one of the main reasons MATLAB users tend to write gigantic monolithic functions with almost no code reuse is that there’s so much boilerplate that goes into argument parsing for new functions.\n\nSo apprecigripe to Julia for spoiling me with such nice function argument syntax. ","user":"US4A6G6B0","ts":"1615996777.008700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pm5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"MATLAB, after 37 years of existence, finally has real keyword arguments. For those of you fortunate enough to not have to use MATLAB, the method up until this point for handling keyword arguments has been—no joke—passing in strings before arguments which have to be collected as pairs and manually parsed. There have been some attempts to sorta automate some of the manual parsing, but they were still pretty clunky. I really think one of the main reasons MATLAB users tend to write gigantic monolithic functions with almost no code reuse is that there’s so much boilerplate that goes into argument parsing for new functions.\n\nSo apprecigripe to Julia for spoiling me with such nice function argument syntax. "}]}]}],"thread_ts":"1615996777.008700","reply_count":13,"reply_users_count":6,"latest_reply":"1616002072.021700","reply_users":["U69J94HT9","U6QGE7S86","U6740K1SP","U6A936746","U6795JH6H","ULMSM9MAL"],"subscribed":false,"reactions":[{"name":"+1","users":["U011V2YN59N","U6795JH6H","UKG4WF8PJ"],"count":3},{"name":"matlab","users":["UGU761DU2","U6795JH6H"],"count":2},{"name":"juliaspinner","users":["UGU761DU2","U6795JH6H"],"count":2},{"name":"today-i-learned","users":["UM8JUNJG7"],"count":1}]},{"client_msg_id":"fe2a27b8-baa9-419c-b0a8-d12d3a1a8f49","type":"message","text":"MATLAB toolboxes contain at least three separate keyword parsing tools, none of which are documented","user":"U69J94HT9","ts":"1615997628.010800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VRBri","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"MATLAB toolboxes contain at least three separate keyword parsing tools, none of which are documented"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0","reactions":[{"name":"this-is-true","users":["US4A6G6B0","U6740K1SP","UKG4WF8PJ"],"count":3}]},{"type":"message","text":"Here's Invenia's retired utility function for argument parsing:","files":[{"id":"F01RL1Q8AF5","created":1615997801,"timestamp":1615997801,"name":"Utilities_Variables_ProcessVarargin.m","title":"Utilities_Variables_ProcessVarargin.m","mimetype":"text/plain","filetype":"matlab","pretty_type":"MATLAB","user":"U69J94HT9","editable":true,"size":28591,"mode":"snippet","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01RL1Q8AF5/utilities_variables_processvarargin.m","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01RL1Q8AF5/download/utilities_variables_processvarargin.m","permalink":"https://julialang.slack.com/files/U69J94HT9/F01RL1Q8AF5/utilities_variables_processvarargin.m","permalink_public":"https://slack-files.com/T68168MUP-F01RL1Q8AF5-c52eca20e1","edit_link":"https://julialang.slack.com/files/U69J94HT9/F01RL1Q8AF5/utilities_variables_processvarargin.m/edit","preview":"% Simplified argument processing by allowing a programmer to specify what\n% arguments and values they expect and having values returned in the form\n% of a struct.\n%\n% Inputs:","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-comment\">% Simplified argument processing by allowing a programmer to specify what</span></pre></div>\n<div><pre><span class=\"cm-comment\">% arguments and values they expect and having values returned in the form</span></pre></div>\n<div><pre><span class=\"cm-comment\">% of a struct.</span></pre></div>\n<div><pre><span class=\"cm-comment\">%</span></pre></div>\n<div><pre><span class=\"cm-comment\">% Inputs:</span></pre></div>\n</div>\n</div>\n","lines":755,"lines_more":750,"preview_is_truncated":true,"is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"his","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here's Invenia's retired utility function for argument parsing:"}]}]}],"user":"U69J94HT9","display_as_bot":false,"ts":"1615997922.011000","thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0","subtype":"thread_broadcast","root":{"client_msg_id":"F2238DD0-9D57-4DBD-8D0E-8D0AA7310C35","type":"message","text":"MATLAB, after 37 years of existence, finally has real keyword arguments. For those of you fortunate enough to not have to use MATLAB, the method up until this point for handling keyword arguments has been—no joke—passing in strings before arguments which have to be collected as pairs and manually parsed. There have been some attempts to sorta automate some of the manual parsing, but they were still pretty clunky. I really think one of the main reasons MATLAB users tend to write gigantic monolithic functions with almost no code reuse is that there’s so much boilerplate that goes into argument parsing for new functions.\n\nSo apprecigripe to Julia for spoiling me with such nice function argument syntax. ","user":"US4A6G6B0","ts":"1615996777.008700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pm5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"MATLAB, after 37 years of existence, finally has real keyword arguments. For those of you fortunate enough to not have to use MATLAB, the method up until this point for handling keyword arguments has been—no joke—passing in strings before arguments which have to be collected as pairs and manually parsed. There have been some attempts to sorta automate some of the manual parsing, but they were still pretty clunky. I really think one of the main reasons MATLAB users tend to write gigantic monolithic functions with almost no code reuse is that there’s so much boilerplate that goes into argument parsing for new functions.\n\nSo apprecigripe to Julia for spoiling me with such nice function argument syntax. "}]}]}],"thread_ts":"1615996777.008700","reply_count":13,"reply_users_count":6,"latest_reply":"1616002072.021700","reply_users":["U69J94HT9","U6QGE7S86","U6740K1SP","U6A936746","U6795JH6H","ULMSM9MAL"],"subscribed":false},"reactions":[{"name":"open_mouth","users":["US4A6G6B0","U01HD5VFXJM","U6QGE7S86","U8JAMQGQY","U6C5KSWAC","UEP056STX","UKG4WF8PJ"],"count":7},{"name":"scream","users":["U679VPJ8L","UPNRULT51","UEP056STX"],"count":3}]},{"client_msg_id":"6dabc8e6-d168-45cd-93ac-e07bbef1a39b","type":"message","text":"`Click to expand inline (755 lines)` :skull:","user":"U6QGE7S86","ts":"1615998013.011400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dB=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Click to expand inline (755 lines)","style":{"code":true}},{"type":"text","text":" "},{"type":"emoji","name":"skull"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0"},{"client_msg_id":"d9ed8662-3ad0-4ba9-a77d-e5fc90a8fff6","type":"message","text":"oooh, I can play this game!","user":"U6740K1SP","ts":"1615998326.013100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ce1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oooh, I can play this game!"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0"},{"client_msg_id":"68bdb7ed-9ba9-4b55-8277-b2e5d593af93","type":"message","text":"#matlab-in-production","user":"U6A936746","ts":"1615998354.013700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c7z=Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"#matlab-in-production"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0"},{"client_msg_id":"3f76c8f9-c9c9-4f14-bdeb-7409359e5463","type":"message","text":"NOPE. I'm unsubscribing from this thread. nope nope nope.","user":"U6QGE7S86","ts":"1615998509.016800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MpTC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NOPE. I'm unsubscribing from this thread. nope nope nope."}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0","reactions":[{"name":"heart","users":["U6A936746","U6795JH6H","UKG4WF8PJ"],"count":3},{"name":"joy","users":["U6795JH6H","U6740K1SP"],"count":2}]},{"type":"message","text":"","files":[{"id":"F01R545PY31","created":1615998532,"timestamp":1615998532,"name":"processVarargin.m","title":"processVarargin.m","mimetype":"text/plain","filetype":"matlab","pretty_type":"MATLAB","user":"U6740K1SP","editable":true,"size":4618,"mode":"snippet","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01R545PY31/processvarargin.m","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01R545PY31/download/processvarargin.m","permalink":"https://julialang.slack.com/files/U6740K1SP/F01R545PY31/processvarargin.m","permalink_public":"https://slack-files.com/T68168MUP-F01R545PY31-38ba0d9345","edit_link":"https://julialang.slack.com/files/U6740K1SP/F01R545PY31/processvarargin.m/edit","preview":"function [in,extras] = processVarargin(in,v,varargin)\r\n%processVarargin  Processes varargin and overrides defaults\r\n%\r\n%   Function to override default options.\r\n%\r","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-builtin\">function</span> [<span class=\"cm-variable\">in</span>,<span class=\"cm-variable\">extras</span>] = <span class=\"cm-variable\">processVarargin</span>(<span class=\"cm-variable\">in</span>,<span class=\"cm-variable\">v</span>,<span class=\"cm-variable\">varargin</span>)</pre></div>\n<div><pre><span class=\"cm-comment\">%processVarargin  Processes varargin and overrides defaults</span></pre></div>\n<div><pre><span class=\"cm-comment\">%</span></pre></div>\n<div><pre><span class=\"cm-comment\">%   Function to override default options.</span></pre></div>\n<div><pre><span class=\"cm-comment\">%</span></pre></div>\n</div>\n</div>\n","lines":145,"lines_more":140,"preview_is_truncated":true,"is_starred":false,"has_rich_preview":false}],"upload":false,"user":"U6740K1SP","display_as_bot":false,"ts":"1615998536.018100","thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0"},{"client_msg_id":"9bf75123-b982-4fd8-9cf1-03daa8c2bea6","type":"message","text":"```$ ls GeneralMatlab/functionInputHandling/\nDEFINE_CONSTANTS.m          assignopts.m                gsr_DEFINE_CONSTANTS.m      processVarargin.m\nEND_DEFINE_CONSTANTS.m      assignopts2.m               makeDefaultOptionalInputs.m sanitizeVarargin.m```","user":"U6740K1SP","ts":"1615998588.018700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KuPxg","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"$ ls GeneralMatlab/functionInputHandling/\nDEFINE_CONSTANTS.m          assignopts.m                gsr_DEFINE_CONSTANTS.m      processVarargin.m\nEND_DEFINE_CONSTANTS.m      assignopts2.m               makeDefaultOptionalInputs.m sanitizeVarargin.m"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0"},{"client_msg_id":"a2265998-59c2-48cc-9d30-66d0d451a7d0","type":"message","text":"^ my grad lab’s “toolbox” has like 5 different ways to parse varargin pairs","user":"U6740K1SP","ts":"1615998617.018900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=TU1z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"^ my grad lab’s “toolbox” has like 5 different ways to parse varargin pairs"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0"},{"client_msg_id":"1a2dc1f5-f5ec-4145-b552-0f111f0dbbb2","type":"message","text":"(the `DEFINE_CONSTANTS` ones are all the same, they use globals to do nastiness)","user":"U6740K1SP","ts":"1615998686.019200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BXW7u","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(the "},{"type":"text","text":"DEFINE_CONSTANTS","style":{"code":true}},{"type":"text","text":" ones are all the same, they use globals to do nastiness)"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0"},{"client_msg_id":"2e2f817e-8c35-4e0a-85e9-9f5311f19a65","type":"message","text":"oh man, I had forgotten all about these.  This was the “caller” syntax for `DEFINE_CONSTANTS`:\n```varagin = sanitizeVarargin(varargin);\nDEFINE_CONSTANTS\nmaintain_matlab_subdir = true;\ninclude_readme         = true;\ntarget_platform        = 'win64';\nEND_DEFINE_CONSTANTS```","user":"U6740K1SP","ts":"1615998948.019600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Ut/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"oh man, I had forgotten all about these.  This was the “caller” syntax for "},{"type":"text","text":"DEFINE_CONSTANTS","style":{"code":true}},{"type":"text","text":":\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"varagin = sanitizeVarargin(varargin);\nDEFINE_CONSTANTS\nmaintain_matlab_subdir = true;\ninclude_readme         = true;\ntarget_platform        = 'win64';\nEND_DEFINE_CONSTANTS"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0"},{"client_msg_id":"B84073AC-A973-40AB-8E7A-18D4212FAF78","type":"message","text":"Now I gotta go check the Matlab docs to see how heavily they copied Julia on this","user":"U6795JH6H","ts":"1615999576.021200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Er8b","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Now I gotta go check the Matlab docs to see how heavily they copied Julia on this"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0","reactions":[{"name":"laughing","users":["US4A6G6B0","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"b8d9dc82-2136-4005-845f-856436d742d7","type":"message","text":"Holy crap, the pain is real.\nI had to implement this by hand multiple times and every single time I lost a piece of my sanity.\nJust thinking back to that makes me mumble incoherently","user":"ULMSM9MAL","ts":"1616002072.021700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9sd7n","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Holy crap, the pain is real.\nI had to implement this by hand multiple times and every single time I lost a piece of my sanity.\nJust thinking back to that makes me mumble incoherently"}]}]}],"thread_ts":"1615996777.008700","parent_user_id":"US4A6G6B0"}]