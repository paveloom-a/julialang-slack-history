[{"client_msg_id":"863b475d-5974-4575-86c2-cdd864fe8316","type":"message","text":"Hello! For school, I'm finally forced to use python (via anaconda) for a project. I want to make sure I'm using best practices to ensure I don't end up in environment hell. Does anyone have a guide for how to get up and running on anaconda in a way that avoids those kinds of problems?","user":"UBF9YRB6H","ts":"1616014356.001200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4UJb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello! For school, I'm finally forced to use python (via anaconda) for a project. I want to make sure I'm using best practices to ensure I don't end up in environment hell. Does anyone have a guide for how to get up and running on anaconda in a way that avoids those kinds of problems?"}]}]}],"thread_ts":"1616014356.001200","reply_count":15,"reply_users_count":5,"latest_reply":"1616052476.004300","reply_users":["U8JP5B9T2","U01CQTKB86N","UBF9YRB6H","U7JQGPGCQ","UPSSPPBFV"],"subscribed":false},{"client_msg_id":"ca26dcd5-50e6-40da-9c4f-ada84ca0e7d9","type":"message","text":"Are you building the environment from scratch, or copying someone else's? If the later, just make sure you do `conda activate envname` before you install anything, and only install things with `conda install pkgname`","user":"U8JP5B9T2","ts":"1616015659.001300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xtz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you building the environment from scratch, or copying someone else's? If the later, just make sure you do "},{"type":"text","text":"conda activate envname","style":{"code":true}},{"type":"text","text":" before you install anything, and only install things with "},{"type":"text","text":"conda install pkgname","style":{"code":true}}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"973343b7-8a44-4b51-8a1d-07063b6b9920","type":"message","text":"This might be of help. I’m using a docker image that uses a conda-variant inside. Here’s the Dockerfile:\n<https://github.com/StatisticalMice/julia-jupyter-docker/blob/main/1.6-buster/Dockerfile>","user":"U01CQTKB86N","ts":"1616015844.001500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LY6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This might be of help. I’m using a docker image that uses a conda-variant inside. Here’s the Dockerfile:\n"},{"type":"link","url":"https://github.com/StatisticalMice/julia-jupyter-docker/blob/main/1.6-buster/Dockerfile"}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"26cd8e9d-0bf1-461c-9fad-75429b4030e1","type":"message","text":"okay he definitely didn't provide us a `requirements.txt`. So I have to manage an environment myself.\n\nQuestions.\n\n1. I use terminal + sublime text to work on code. I can do that with conda, right?\n2. How do I make sure I am running the correct (and same) version of python every time I start working in terminal?\n3. How do I maintain a good environment?\n\nMaybe the best question is if you have any good tutorials to read. I'm about to work through QuantEcon's tutorial by Thomas Sargeant","user":"UBF9YRB6H","ts":"1616016926.001700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"glM9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay he definitely didn't provide us a "},{"type":"text","text":"requirements.txt","style":{"code":true}},{"type":"text","text":". So I have to manage an environment myself.\n\nQuestions.\n\n1. I use terminal + sublime text to work on code. I can do that with conda, right?\n2. How do I make sure I am running the correct (and same) version of python every time I start working in terminal?\n3. How do I maintain a good environment?\n\nMaybe the best question is if you have any good tutorials to read. I'm about to work through QuantEcon's tutorial by Thomas Sargeant"}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"3247e520-5671-47be-8ed4-06c2482aca30","type":"message","text":"Ah i see anaconda overrides `python` from `2.7` to `3.8`. I hope that doesn't break things!","user":"UBF9YRB6H","ts":"1616017620.001900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RC67O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah i see anaconda overrides "},{"type":"text","text":"python","style":{"code":true}},{"type":"text","text":" from "},{"type":"text","text":"2.7","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"3.8","style":{"code":true}},{"type":"text","text":". I hope that doesn't break things!"}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"5651da77-605d-4017-a6d7-3855194a39ce","type":"message","text":"I've mostly learned it by trial and error. The key thing is to keep the conda-installed programs higher up your `$PATH` than anything else. When you do `conda activate myenv` , it's mostly just doing `export PATH=/path/to/miniconda/envs/myenv/bin:$PATH`\n\nI actually really dislike how conda highjacks my terminal prompt, so I will often just do that manually","user":"U8JP5B9T2","ts":"1616017775.002100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fniq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've mostly learned it by trial and error. The key thing is to keep the conda-installed programs higher up your "},{"type":"text","text":"$PATH","style":{"code":true}},{"type":"text","text":" than anything else. When you do "},{"type":"text","text":"conda activate myenv","style":{"code":true}},{"type":"text","text":" , it's mostly just doing "},{"type":"text","text":"export PATH=/path/to/miniconda/envs/myenv/bin:$PATH","style":{"code":true}},{"type":"text","text":"\n\nI actually really dislike how conda highjacks my terminal prompt, so I will often just do that manually"}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"c9ebef16-ace0-4f6a-8791-bd8813ec878e","type":"message","text":"yes I've noticed that, too. I think it also slows down startup on `.zsh`...\n\nHow are environments managed at the project level? Do I just have to remember the environment name associated with a project, then `activate` it when I start working? That seems kind of fragile.","user":"UBF9YRB6H","ts":"1616017873.002300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DR=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes I've noticed that, too. I think it also slows down startup on "},{"type":"text","text":".zsh","style":{"code":true}},{"type":"text","text":"...\n\nHow are environments managed at the project level? Do I just have to remember the environment name associated with a project, then "},{"type":"text","text":"activate","style":{"code":true}},{"type":"text","text":" it when I start working? That seems kind of fragile."}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"3d6afe2f-99e2-4ad3-a8eb-e521f8ad0483","type":"message","text":"I was told in a similar thread some weeks ago that poetry is the way to go on python environments, but I haven't actually tried it","user":"U7JQGPGCQ","ts":"1616020908.002500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G3s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was told in a similar thread some weeks ago that poetry is the way to go on python environments, but I haven't actually tried it"}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"e77b905f-163e-4419-acf8-881e8579109c","type":"message","text":"How does poetry handle non-python code? Both python and R require an unspecified amount of other binaries to function.","user":"U01CQTKB86N","ts":"1616022681.002900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ql1r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"How does poetry handle non-python code? Both python and R require an unspecified amount of other binaries to function."}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"439be7c7-0d8d-4e31-a272-1d4b434700ef","type":"message","text":"One good thing about conda is that it installs all kinds of software when needed.","user":"U01CQTKB86N","ts":"1616022701.003100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bZ/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One good thing about conda is that it installs all kinds of software when needed."}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"c998a7d8-9063-49f8-8229-b76a58da389e","type":"message","text":"<@U01CQTKB86N> Poetry installs packages via PyPi. So if your binaries are included in the pip wheels provided in PyPi you're fine. That's all up to the package maintainer to make sure that happens though, and not all maintainers have the means to do so (it's actually not that different with conda. If you depend on packages that are not in the official Anaconda channels but are only available in conda-forge you're in the same situation).","user":"UPSSPPBFV","ts":"1616051704.003300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dcCMc","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01CQTKB86N"},{"type":"text","text":" Poetry installs packages via PyPi. So if your binaries are included in the pip wheels provided in PyPi you're fine. That's all up to the package maintainer to make sure that happens though, and not all maintainers have the means to do so (it's actually not that different with conda. If you depend on packages that are not in the official Anaconda channels but are only available in conda-forge you're in the same situation)."}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"e1b3291a-71bc-43e7-9933-b3d282979964","type":"message","text":"I’m not sure how that all will pan out, but I’ve personally switched to using conda (forge) as the packages seem easier to manage than the earlier method I had. (That was using brew + pip.)","user":"U01CQTKB86N","ts":"1616052068.003500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kx=A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m not sure how that all will pan out, but I’ve personally switched to using conda (forge) as the packages seem easier to manage than the earlier method I had. (That was using brew + pip.)"}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"be00313f-e976-40a9-9f35-4fe1b8ec4f14","type":"message","text":"Brew has the same kind of problem that pip has, which is that it’s easy to install software, but harder to remove it. However, brew makes it easy to update, which pip does not.","user":"U01CQTKB86N","ts":"1616052152.003700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FYi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Brew has the same kind of problem that pip has, which is that it’s easy to install software, but harder to remove it. However, brew makes it easy to update, which pip does not."}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"cac5a749-7ca2-4438-a8f7-ba1c912e349a","type":"message","text":"<@UBF9YRB6H> Yes, when using Conda environments you need to remember the name of the env associated with a project to activate it (it's conventional to use the same name for the project and for the environment associated with it). That's just how Conda works. Other tools like Pipenv and Poetry associate a virtual environment with a project folder, so you don't have to remember the name of the environment and a simple `poetry shell` or `pipenv shell` will activate the right environment automatically. But those use the PyPi repositories rather than the Anaconda repos.","user":"UPSSPPBFV","ts":"1616052156.003900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XBw","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UBF9YRB6H"},{"type":"text","text":" Yes, when using Conda environments you need to remember the name of the env associated with a project to activate it (it's conventional to use the same name for the project and for the environment associated with it). That's just how Conda works. Other tools like Pipenv and Poetry associate a virtual environment with a project folder, so you don't have to remember the name of the environment and a simple "},{"type":"text","text":"poetry shell","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"pipenv shell","style":{"code":true}},{"type":"text","text":" will activate the right environment automatically. But those use the PyPi repositories rather than the Anaconda repos."}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"6f23480d-c3db-41f5-a14b-4a496a13fc07","type":"message","text":"I haven't used Conda for years. I could never find the packages I needed either in the official Anaconda repos or in conda-forge, and as soon as that happens you have to start installing things with Pip anyway, and the experience starts unravelling.","user":"UPSSPPBFV","ts":"1616052293.004100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cK6y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I haven't used Conda for years. I could never find the packages I needed either in the official Anaconda repos or in conda-forge, and as soon as that happens you have to start installing things with Pip anyway, and the experience starts unravelling."}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"},{"client_msg_id":"47d7d8d7-1101-48bd-a191-c184f7c7832f","type":"message","text":"Yes, I find that unfortunate. I’ve been working on moving my environment to inside docker so I can easily re-create it with newer versions. This also helps different things not break each other.","user":"U01CQTKB86N","ts":"1616052476.004300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Ks","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, I find that unfortunate. I’ve been working on moving my environment to inside docker so I can easily re-create it with newer versions. This also helps different things not break each other."}]}]}],"thread_ts":"1616014356.001200","parent_user_id":"UBF9YRB6H"}]