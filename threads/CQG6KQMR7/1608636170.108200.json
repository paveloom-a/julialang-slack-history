[{"client_msg_id":"0c59eb70-7ef3-49f1-b698-85cf77bfbbf8","type":"message","text":"You can do:\n```julia&gt; cat(\n           [1 2; 3 4],\n           [5 6; 7 8],\n           dims=3,\n       )\n2×2×2 Array{Int64,3}:\n[:, :, 1] =\n 1  2\n 3  4\n\n[:, :, 2] =\n 5  6\n 7  8```","user":"UM30MT6RF","ts":"1608636170.108200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PCG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can do:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> cat(\n           [1 2; 3 4],\n           [5 6; 7 8],\n           dims=3,\n       )\n2×2×2 Array{Int64,3}:\n[:, :, 1] =\n 1  2\n 3  4\n\n[:, :, 2] =\n 5  6\n 7  8"}]}]}],"thread_ts":"1608636170.108200","reply_count":45,"reply_users_count":3,"latest_reply":"1608643270.118700","reply_users":["U01FTP75MBR","UM30MT6RF","U013V2CFZAN"],"subscribed":false},{"client_msg_id":"a5ef1cbb-ba1a-45d1-bf49-c2421608a931","type":"message","text":"What about 2x2x2x3","user":"U01FTP75MBR","ts":"1608639531.109400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wof2T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What about 2x2x2x3"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"dbc8776d-9f41-41b5-9d1a-3fe70dea4efa","type":"message","text":"You can just nest `cat`, but agree it's not the nicest solution:\n```julia&gt; cat(\n           cat(\n               [1 2; 3 4],\n               [5 5; 7 8],\n               dims=3,\n           ),\n           cat(\n               [1 2; 3 4],\n               [5 5; 7 8],\n               dims=3,\n           ),\n           dims=4,\n       )\n2×2×2×2 Array{Int64,4}:\n[:, :, 1, 1] =\n 1  2\n 3  4\n\n[:, :, 2, 1] =\n 5  5\n 7  8\n\n[:, :, 1, 2] =\n 1  2\n 3  4\n\n[:, :, 2, 2] =\n 5  5\n 7  8```","user":"UM30MT6RF","ts":"1608639703.109600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0Zg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can just nest "},{"type":"text","text":"cat","style":{"code":true}},{"type":"text","text":", but agree it's not the nicest solution:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> cat(\n           cat(\n               [1 2; 3 4],\n               [5 5; 7 8],\n               dims=3,\n           ),\n           cat(\n               [1 2; 3 4],\n               [5 5; 7 8],\n               dims=3,\n           ),\n           dims=4,\n       )\n2×2×2×2 Array{Int64,4}:\n[:, :, 1, 1] =\n 1  2\n 3  4\n\n[:, :, 2, 1] =\n 5  5\n 7  8\n\n[:, :, 1, 2] =\n 1  2\n 3  4\n\n[:, :, 2, 2] =\n 5  5\n 7  8"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"bab6c16e-05f7-4181-942d-99ec7c1087a3","type":"message","text":"Lets say 2x2 matrix didnt exist how can i simulate it","user":"U01FTP75MBR","ts":"1608639783.109800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pI6q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Lets say 2x2 matrix didnt exist how can i simulate it"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"3e3e0ae6-5ac2-433a-a25f-d754d2b60cbd","type":"message","text":"But tbh, I never needed to construct such high-dimensional arrays as literals, usually I either read them from something like an h5 file or just generate them randomly","user":"UM30MT6RF","ts":"1608639791.110000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vpD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But tbh, I never needed to construct such high-dimensional arrays as literals, usually I either read them from something like an h5 file or just generate them randomly"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"b347a558-23c2-491a-bdc5-fb98662b5627","type":"message","text":"Using array based matrix simulation","user":"U01FTP75MBR","ts":"1608639807.110200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O7jF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Using array based matrix simulation"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"d052e436-718a-4def-b806-c6fed4d06a22","type":"message","text":"&gt; Lets say 2x2 matrix didnt exist how can i simulate it\nNot sure what you mean here","user":"UM30MT6RF","ts":"1608639817.110400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"L2l/","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Lets say 2x2 matrix didnt exist how can i simulate it"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nNot sure what you mean here"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"f7cf7ede-3dd5-4d83-89dd-c66e8c73809d","type":"message","text":"So i can generate high dimensionality from lower","user":"U01FTP75MBR","ts":"1608639856.110600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nnNd=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So i can generate high dimensionality from lower"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"33dab950-dbc8-44a6-b9eb-e99c46ac78f5","type":"message","text":"matrix is just collection of two lists in python","user":"U01FTP75MBR","ts":"1608639900.110800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0QAH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"matrix is just collection of two lists in python"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"7a2fe793-5f2a-4806-8e3f-0ece1453fbed","type":"message","text":"Do you mean something like:\n```julia&gt; cat(\n           [1, 3],\n           [2, 4],\n           dims=2,\n       )\n2×2 Array{Int64,2}:\n 1  2\n 3  4```\n?","user":"UM30MT6RF","ts":"1608639915.111000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"clC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you mean something like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> cat(\n           [1, 3],\n           [2, 4],\n           dims=2,\n       )\n2×2 Array{Int64,2}:\n 1  2\n 3  4"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"?"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"10975632-0c0c-40bb-98a8-929f935300a9","type":"message","text":"2 3 4 and 1 2 3","user":"U01FTP75MBR","ts":"1608639915.111200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lqHV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"2 3 4 and 1 2 3"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"f6b2a7cd-538b-4428-bfee-bf47310279ec","type":"message","text":"or just hcat","user":"UM30MT6RF","ts":"1608639932.111400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YjO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or just hcat"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"0980fb5f-394a-454b-8ced-d92a911d00f1","type":"message","text":"cant we concatenate without cat like in python","user":"U01FTP75MBR","ts":"1608639967.111600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NH6A4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"cant we concatenate without cat like in python"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"5e58beec-5edd-40e8-b905-007f55e5470a","type":"message","text":"No, because a vector of vectors is not the same as a matrix","user":"UM30MT6RF","ts":"1608639999.111800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QgS+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No, because a vector of vectors is not the same as a matrix"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"e96916d0-6e8e-439d-be6c-513c3b1d3523","type":"message","text":"The former may still be useful if you have a ragged array for example though","user":"UM30MT6RF","ts":"1608640021.112000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Kzza","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The former may still be useful if you have a ragged array for example though"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"fcc4432d-58a1-44fd-b3de-04c162478911","type":"message","text":"But generally you always want a matrix if you do linear algebra operations","user":"UM30MT6RF","ts":"1608640052.112200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gUc/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But generally you always want a matrix if you do linear algebra operations"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"dd15cc3c-bcf0-43fa-8694-471b8bd2d5b9","type":"message","text":"But in simulation a list of list can be simulated as a matrix","user":"U01FTP75MBR","ts":"1608640084.112400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KxkGy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But in simulation a list of list can be simulated as a matrix"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"3c2924b9-799c-4d15-8925-ce91a7733fb7","type":"message","text":"I just began last week in julia","user":"U01FTP75MBR","ts":"1608640159.112600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ahbSR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just began last week in julia"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"aab702e8-e512-463c-8ce7-9d7d6e32250e","type":"message","text":"It has to do with how the memory is layed out. For matmuls for example, operations on a matrix are much faster than operations on a vector of vectors","user":"UM30MT6RF","ts":"1608640183.112800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hPuK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It has to do with how the memory is layed out. For matmuls for example, operations on a matrix are much faster than operations on a vector of vectors"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"e8d2c84c-62e3-4e8d-956b-8b202bf77682","type":"message","text":"That's because a Matrix is one contiguous block of memory, whereas you can imagine a vector of vectors as a vector of pointers","user":"UM30MT6RF","ts":"1608640242.113000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"arhEx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's because a Matrix is one contiguous block of memory, whereas you can imagine a vector of vectors as a vector of pointers"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"cd603b67-656b-4417-9eff-8acf04ba63c2","type":"message","text":"Column first","user":"U01FTP75MBR","ts":"1608640264.113200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3Uci","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Column first"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"f1baeead-a56d-4fd2-95f9-fa93a59480a2","type":"message","text":"Yes, exactly!","user":"UM30MT6RF","ts":"1608640279.113400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BlMS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, exactly!"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"ff9052f2-fc41-4bea-84c6-dbeb44751bb0","type":"message","text":"Array implementation of julia and its matrix form is less than perfect, i smell matlab","user":"U01FTP75MBR","ts":"1608641195.113800","team":"T68168MUP","edited":{"user":"U01FTP75MBR","ts":"1608641213.000000"},"blocks":[{"type":"rich_text","block_id":"cRII","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Array implementation of julia and its matrix form is less than perfect, i smell matlab"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"3e9632fe-7d17-4805-be75-d1c819f00b3e","type":"message","text":"I mean Matlab is pretty nice for working with matrices, it's just pretty slow for a lot of things. I am not sure why not having a nice multidimensional array syntax would mean Julia's array implementation is suboptimal.","user":"UM30MT6RF","ts":"1608641396.114100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9Eco","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I mean Matlab is pretty nice for working with matrices, it's just pretty slow for a lot of things. I am not sure why not having a nice multidimensional array syntax would mean Julia's array implementation is suboptimal."}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"cdf85d6f-7db2-4e49-a8ff-bcf911b1159e","type":"message","text":"in what way is it 'nice'","user":"U01FTP75MBR","ts":"1608641448.114300","team":"T68168MUP","edited":{"user":"U01FTP75MBR","ts":"1608641456.000000"},"blocks":[{"type":"rich_text","block_id":"y+bDg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in what way is it 'nice'"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"40e8bfd0-235e-4c57-9fc5-dccea5fc0600","type":"message","text":"Look how complicated it is beyond 2 dims","user":"U01FTP75MBR","ts":"1608641487.114600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1KCd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Look how complicated it is beyond 2 dims"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"5c8f3105-2f6b-436d-8e63-d145e127a574","type":"message","text":"In pretty much all other ways. Julia's arrays are super efficient in their storage layout, so we don't need something like numpy for implementing efficient operations on arrays","user":"UM30MT6RF","ts":"1608641528.114800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=f4K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In pretty much all other ways. Julia's arrays are super efficient in their storage layout, so we don't need something like numpy for implementing efficient operations on arrays"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"c0ab4852-3fb5-4701-a156-75b4f3de35a7","type":"message","text":"Well C++ is row first","user":"U01FTP75MBR","ts":"1608641567.115000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"POm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well C++ is row first"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"32346616-b839-4d07-869c-eefd7b9e3de8","type":"message","text":"It's not really about col vs. row major though","user":"UM30MT6RF","ts":"1608641618.115200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"brf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's not really about col vs. row major though"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"b4cecb46-864e-4be3-87a6-883773d6ef09","type":"message","text":"Agreed syntax is just not in raw list form that can be visually seen, as we cant see more dimensions","user":"U01FTP75MBR","ts":"1608641665.115400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fau+x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Agreed syntax is just not in raw list form that can be visually seen, as we cant see more dimensions"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"ab9713a7-a6c6-4a45-b027-feaf238172e5","type":"message","text":"In raw form its abstracted nicely","user":"U01FTP75MBR","ts":"1608641689.115600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"lU0r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"In raw form its abstracted nicely"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"9e03b344-acbf-4dcd-ab57-305eedb31cd1","type":"message","text":"Imagine dealing with 10 dimensions how messy it will get, julia is for 2d matrix","user":"U01FTP75MBR","ts":"1608641761.115800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tJmr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Imagine dealing with 10 dimensions how messy it will get, julia is for 2d matrix"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"fc6c0ac8-c8dc-43b2-86b2-f3f0e877fe2b","type":"message","text":"But where do you actually need 10-dimensional arrays?","user":"UM30MT6RF","ts":"1608641781.116000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=w/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But where do you actually need 10-dimensional arrays?"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"20ab1d0a-fba8-4bc5-9bea-643323afc5e5","type":"message","text":"Physics","user":"U01FTP75MBR","ts":"1608641795.116200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rWW/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Physics"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"38436e61-97a6-466e-a4c6-fe193efbb86e","type":"message","text":"Higher dimensions r there in math regularly n even there is hyperdimensional computing- i admit i dont know it","user":"U01FTP75MBR","ts":"1608641843.116400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KvG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Higher dimensions r there in math regularly n even there is hyperdimensional computing- i admit i dont know it"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"4d25da9e-62f5-4f90-bf80-ac7a984c3506","type":"message","text":"R u on phone i think","user":"U01FTP75MBR","ts":"1608642007.116600","team":"T68168MUP","edited":{"user":"U01FTP75MBR","ts":"1608642083.000000"},"blocks":[{"type":"rich_text","block_id":"KB5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"R u on phone i think"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"d0432841-e0cd-41be-a33f-b2271d7fc2a5","type":"message","text":"I see u have patience to type you and are instead of u n r","user":"U01FTP75MBR","ts":"1608642036.116800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r6dI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see u have patience to type you and are instead of u n r"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"48738cfb-8d3c-4626-8584-d2fe1fa9f266","type":"message","text":"Just to be clear: Julia has great syntax for dealing with 10-dimensional arrays, it just doesn't have a specific syntax for writing them out as literals in your code. I shudder at the thought of writing a 10-dimensional array directly in your python script. You really should just use a proper storage format in cases like this.","user":"UM30MT6RF","ts":"1608642087.117100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U2Az","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just to be clear: Julia has great syntax for dealing with 10-dimensional arrays, it just doesn't have a specific syntax for writing them out as literals in your code. I shudder at the thought of writing a 10-dimensional array directly in your python script. You really should just use a proper storage format in cases like this."}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"8e7437a1-024c-4f6c-96c1-6c8a472a06e6","type":"message","text":"&gt; R u on phone i think (edited) \nI'm on my laptop","user":"UM30MT6RF","ts":"1608642131.117300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U5Wd","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"R u on phone i think (edited) "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI'm on my laptop"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"c079514c-2594-4859-86d9-4521245db106","type":"message","text":"Problem is i have difficulty imagining 3d array in literal form but in python its obvious","user":"U01FTP75MBR","ts":"1608642474.117500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CMmB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Problem is i have difficulty imagining 3d array in literal form but in python its obvious"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"db14e356-e937-4204-b1d3-c2cd0f981e81","type":"message","text":"As a result if i loop its hard to know whats being read if i cant visualize, i m a visual person","user":"U01FTP75MBR","ts":"1608642520.117700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Cze","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As a result if i loop its hard to know whats being read if i cant visualize, i m a visual person"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"e1e5bca2-ced7-4868-bd62-2d638132a601","type":"message","text":"I have seen that people coming from MATLAB and sometimes from numpy, want to construct multi-dimensional arrays because that what they are used to and is easier in MATLAB or numpy. However, having an array of arrays of arrays might sound more complicated conceptually, it's actually easier to use in many situations.","user":"U013V2CFZAN","ts":"1608642527.117900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j6ol9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have seen that people coming from MATLAB and sometimes from numpy, want to construct multi-dimensional arrays because that what they are used to and is easier in MATLAB or numpy. However, having an array of arrays of arrays might sound more complicated conceptually, it's actually easier to use in many situations."}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"df3c8201-806c-4b58-a940-01fda7601884","type":"message","text":"I don't know your application, but perhaps this is what you are actually looking for <https://github.com/KristofferC/Tensors.jl>","user":"U013V2CFZAN","ts":"1608642685.118100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qMu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know your application, but perhaps this is what you are actually looking for "},{"type":"link","url":"https://github.com/KristofferC/Tensors.jl"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"9197e125-2b03-4f65-9af8-ead48e57d68c","type":"message","text":"although `Tensors.jl` only supports tensors up to  order 4","user":"U013V2CFZAN","ts":"1608642845.118300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AyD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"although "},{"type":"text","text":"Tensors.jl","style":{"code":true}},{"type":"text","text":" only supports tensors up to  order 4"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"9f90c86c-12ad-467d-ba56-b9a75f996930","type":"message","text":"&gt; However, having an array of arrays of arrays might sound more complicated conceptually, it's actually easier to use in many situations.\nI personally find it much easier to reason about things like stride with n-dimensional arrays, which is quite important if you want to efficiently loop over them. Things like `CartesianIndices` make it so easy to write generic high-dimensional array code, that would really be a pain to write in numpy (not to mention slow if you write it in python). It definitely takes a while to adopt your mental model, but I really think it's worth if if you want to write efficient code.","user":"UM30MT6RF","ts":"1608643059.118500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"itW9","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"However, having an array of arrays of arrays might sound more complicated conceptually, it's actually easier to use in many situations."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI personally find it much easier to reason about things like stride with n-dimensional arrays, which is quite important if you want to efficiently loop over them. Things like "},{"type":"text","text":"CartesianIndices","style":{"code":true}},{"type":"text","text":" make it so easy to write generic high-dimensional array code, that would really be a pain to write in numpy (not to mention slow if you write it in python). It definitely takes a while to adopt your mental model, but I really think it's worth if if you want to write efficient code."}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"},{"client_msg_id":"ef2f5aea-bb6c-4f0d-9cce-814fc7e47ca6","type":"message","text":"well, true ... depends on your mental model. I tend to distrust multi-dimensional arrays because I have seen a lot of people misusing them (using the wrong index order, e.g. first to last in MATLAB or last to first in default numpy)","user":"U013V2CFZAN","ts":"1608643270.118700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DAtMd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well, true ... depends on your mental model. I tend to distrust multi-dimensional arrays because I have seen a lot of people misusing them (using the wrong index order, e.g. first to last in MATLAB or last to first in default numpy)"}]}]}],"thread_ts":"1608636170.108200","parent_user_id":"UM30MT6RF"}]