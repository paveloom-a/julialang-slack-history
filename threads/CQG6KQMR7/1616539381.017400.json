[{"client_msg_id":"ef59332a-df83-4436-bee6-d15d076922c8","type":"message","text":"Does anybody know how to fix the Intel MKL error with PyCall.jl when importing a package like sklearn, tensorflow, etc? I am on a Mac OS Catalina","user":"U01EF0QVAB0","ts":"1616539381.017400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q+pp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anybody know how to fix the Intel MKL error with PyCall.jl when importing a package like sklearn, tensorflow, etc? I am on a Mac OS Catalina"}]}]}],"thread_ts":"1616539381.017400","reply_count":8,"reply_users_count":3,"latest_reply":"1616968056.020300","reply_users":["UPUBAM63X","U01EF0QVAB0","U6BNE7LTZ"],"is_locked":false,"subscribed":false},{"client_msg_id":"e5ccd3ae-3e20-4fab-8a7f-7c28864a3249","type":"message","text":"are you on Julia 1.6?","user":"UPUBAM63X","ts":"1616853689.017900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NS1P9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"are you on Julia 1.6?"}]}]}],"thread_ts":"1616539381.017400","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"429cfb3e-6b51-4075-9445-9b915d6d834f","type":"message","text":"That error was on 1.5.3 but it is also happening on 1.6, just tried it since I updated. When I do using PyCall and then even something like `np=pyimport(\"numpy\")` (or anything) I get the \"Intel MKL FATAL ERROR: Cannot load libmkl_intel_thread.dylib.\" and Julia immediately exits","user":"U01EF0QVAB0","ts":"1616904205.018300","team":"T68168MUP","edited":{"user":"U01EF0QVAB0","ts":"1616904224.000000"},"blocks":[{"type":"rich_text","block_id":"hSwr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That error was on 1.5.3 but it is also happening on 1.6, just tried it since I updated. When I do using PyCall and then even something like "},{"type":"text","text":"np=pyimport(\"numpy\")","style":{"code":true}},{"type":"text","text":" (or anything) I get the \"Intel MKL FATAL ERROR: Cannot load libmkl_intel_thread.dylib.\" and Julia immediately exits"}]}]}],"thread_ts":"1616539381.017400","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"716e83ba-ef15-4566-bc42-49da63cf11c0","type":"message","text":"Its something like this: <https://discourse.julialang.org/t/intel-mkl-fatal-error-with-pyplot/36737/7> and someone there mentions some stuff to add .zshrc which I think is related to the shell but I get scared to try that stuff as a non-CS/IT person for fear of breaking something because I don't know what such commands are doing","user":"U01EF0QVAB0","ts":"1616904630.018600","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Intel MKL FATAL ERROR with PyPlot","title_link":"https://discourse.julialang.org/t/intel-mkl-fatal-error-with-pyplot/36737/7","text":"The following seems to work . . . export LD_LIBRARY_PATH=~/.julia/conda/3/lib More information at the bottom here. (phew . . .)","fallback":"JuliaLang: Intel MKL FATAL ERROR with PyPlot","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1596855547,"from_url":"https://discourse.julialang.org/t/intel-mkl-fatal-error-with-pyplot/36737/7","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/intel-mkl-fatal-error-with-pyplot/36737/7"}],"blocks":[{"type":"rich_text","block_id":"oTdL6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its something like this: "},{"type":"link","url":"https://discourse.julialang.org/t/intel-mkl-fatal-error-with-pyplot/36737/7"},{"type":"text","text":" and someone there mentions some stuff to add .zshrc which I think is related to the shell but I get scared to try that stuff as a non-CS/IT person for fear of breaking something because I don't know what such commands are doing"}]}]}],"thread_ts":"1616539381.017400","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"4531aaf1-7c49-491a-bfb3-f112bb2d3b96","type":"message","text":"Strangely when using Julia in the shell itself, I don't get any errors with PyCall. It is in an IDE like VSCode and Atom that I get it","user":"U01EF0QVAB0","ts":"1616905915.018900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y=JXQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Strangely when using Julia in the shell itself, I don't get any errors with PyCall. It is in an IDE like VSCode and Atom that I get it"}]}]}],"thread_ts":"1616539381.017400","parent_user_id":"U01EF0QVAB0","reactions":[{"name":"thinking_face","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"b81e535e-adeb-4621-9f96-0b7b57485451","type":"message","text":"<@U6BNE7LTZ> any idea what this is? seems like a config in the vscode extension fell out of whack?","user":"UPUBAM63X","ts":"1616935531.019200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uXpdg","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U6BNE7LTZ"},{"type":"text","text":" any idea what this is? seems like a config in the vscode extension fell out of whack?"}]}]}],"thread_ts":"1616539381.017400","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"bbc80cf8-af10-43e5-8d41-bebd7f6c0782","type":"message","text":"check the `terminal.integrated.inheritEnv` setting","user":"U6BNE7LTZ","ts":"1616935631.019700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ljE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"check the "},{"type":"text","text":"terminal.integrated.inheritEnv","style":{"code":true}},{"type":"text","text":" setting"}]}]}],"thread_ts":"1616539381.017400","parent_user_id":"U01EF0QVAB0","reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"dbbe1918-3a41-46c2-8223-3279d627a92c","type":"message","text":"and in general compare `PATH` in and outside of VSCode","user":"U6BNE7LTZ","ts":"1616935647.019900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kl7ut","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and in general compare "},{"type":"text","text":"PATH","style":{"code":true}},{"type":"text","text":" in and outside of VSCode"}]}]}],"thread_ts":"1616539381.017400","parent_user_id":"U01EF0QVAB0","reactions":[{"name":"100","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"c6b4ec22-857f-4ee6-aa2c-7ed9058b987e","type":"message","text":"What I ended up doing is creating a Python conda virtual env without the MKL installation specifically for Julia after finding this <https://stackoverflow.com/questions/65683623/pycall-importnumpy-produces-mkl-fatal-error>. Now it works in the IDEs. I wonder if there are any downsides to this though like in terms of the speed/performance, say when using Keras/TF, sklearn through Julia. My use case for PyCall would be mostly Keras","user":"U01EF0QVAB0","ts":"1616968056.020300","team":"T68168MUP","edited":{"user":"U01EF0QVAB0","ts":"1616968082.000000"},"attachments":[{"service_name":"Stack Overflow","title":"PyCall import(\"numpy\") produces MKL FATAL ERROR","title_link":"https://stackoverflow.com/questions/65683623/pycall-importnumpy-produces-mkl-fatal-error","text":"Background: Using mac 10.15, I just installed python, conda and julia. I then used conda to install numpy and installed julia PyCall pointing ENV[&amp;quot;PYTHON&amp;quot;] to the conda executable (out pu...","fallback":"Stack Overflow: PyCall import(\"numpy\") produces MKL FATAL ERROR","thumb_url":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded","from_url":"https://stackoverflow.com/questions/65683623/pycall-importnumpy-produces-mkl-fatal-error","thumb_width":316,"thumb_height":316,"service_icon":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon.png?v=c78bd457575a","id":1,"original_url":"https://stackoverflow.com/questions/65683623/pycall-importnumpy-produces-mkl-fatal-error"}],"blocks":[{"type":"rich_text","block_id":"BlSm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What I ended up doing is creating a Python conda virtual env without the MKL installation specifically for Julia after finding this "},{"type":"link","url":"https://stackoverflow.com/questions/65683623/pycall-importnumpy-produces-mkl-fatal-error"},{"type":"text","text":". Now it works in the IDEs. I wonder if there are any downsides to this though like in terms of the speed/performance, say when using Keras/TF, sklearn through Julia. My use case for PyCall would be mostly Keras"}]}]}],"thread_ts":"1616539381.017400","parent_user_id":"U01EF0QVAB0"}]