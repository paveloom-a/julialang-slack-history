[{"client_msg_id":"dba3b338-d13b-45ef-aea3-b2e8255f8e0a","type":"message","text":"Can we have a constructor for `Matrix` from a `Vector` of `Vector`s","user":"U67G3QRJM","ts":"1616078800.000700","team":"T68168MUP","edited":{"user":"U67G3QRJM","ts":"1616078825.000000"},"blocks":[{"type":"rich_text","block_id":"MJ8D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can we have a constructor for "},{"type":"text","text":"Matrix","style":{"code":true}},{"type":"text","text":" from a "},{"type":"text","text":"Vector","style":{"code":true}},{"type":"text","text":" of `Vector`s"}]}]}],"thread_ts":"1616078800.000700","reply_count":27,"reply_users_count":4,"latest_reply":"1616087941.006700","reply_users":["U01C3624SGJ","U67G3QRJM","U67D54KS8","UBEF50B7C"],"subscribed":false},{"client_msg_id":"272c803c-2289-483e-8933-f5f93e84ebed","type":"message","text":"Like an alias for hcat(vecvec...)?","user":"U01C3624SGJ","ts":"1616078950.000900","team":"T68168MUP","edited":{"user":"U01C3624SGJ","ts":"1616078957.000000"},"blocks":[{"type":"rich_text","block_id":"Ga+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Like an alias for hcat(vecvec...)?"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"348294bd-160f-4c92-8076-9367081a50b9","type":"message","text":"Yes exactly","user":"U67G3QRJM","ts":"1616079019.001200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cMczJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes exactly"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"cf6e714a-608e-44c3-a659-78be1811d13c","type":"message","text":"Actually for `reduce(hcat, vecvec)`","user":"U67G3QRJM","ts":"1616079033.001400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X+W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually for "},{"type":"text","text":"reduce(hcat, vecvec)","style":{"code":true}}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"3c4163df-f9d2-4db9-9f8e-64b515b9b67d","type":"message","text":"You can have a matrix with vector elements.","user":"U67D54KS8","ts":"1616079087.001600","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616079114.000000"},"blocks":[{"type":"rich_text","block_id":"7Jign","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can have a matrix with vector elements."}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"9342cf8a-afc8-408d-8f57-7a7e0b119e1c","type":"message","text":"Too much magic is also confusing. The `reduce` way is short and clear (imo).","user":"U67D54KS8","ts":"1616079156.001900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iuW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Too much magic is also confusing. The "},{"type":"text","text":"reduce","style":{"code":true}},{"type":"text","text":" way is short and clear (imo)."}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"24572c66-a708-4706-9da2-4acc29439281","type":"message","text":"I don’t think it’s magic or confusing?","user":"U67G3QRJM","ts":"1616079179.002100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S2duq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t think it’s magic or confusing?"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"b721b506-6681-4cda-8b7c-27c5fba3ea09","type":"message","text":"I see people asking how to convert a vector of vectors to a matrix a lot it could be pretty useful","user":"U01C3624SGJ","ts":"1616079239.002300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4a11","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I see people asking how to convert a vector of vectors to a matrix a lot it could be pretty useful"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM","reactions":[{"name":"point_up","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"ed565c30-10be-4bf7-bae6-55f5f15ada30","type":"message","text":"<@U67D54KS8> It’s true that you can have a matrix with vector elements, but `Matrix(vector)` is currently an error","user":"U67G3QRJM","ts":"1616079364.002600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uLb","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":" It’s true that you can have a matrix with vector elements, but "},{"type":"text","text":"Matrix(vector)","style":{"code":true}},{"type":"text","text":" is currently an error"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"a64c8fc0-067f-47e5-ab8d-89c785e7bc24","type":"message","text":"Yes, because it is unclear what should happen. You seem to have one thought, my thought would be that it basically just adds a dimension (and gives you a `Matrix{Vector}}`.","user":"U67D54KS8","ts":"1616079422.002800","team":"T68168MUP","edited":{"user":"U67D54KS8","ts":"1616079498.000000"},"blocks":[{"type":"rich_text","block_id":"T3Tl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, because it is unclear what should happen. You seem to have one thought, my thought would be that it basically just adds a dimension (and gives you a "},{"type":"text","text":"Matrix{Vector}}","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"d3963a9f-06a8-4aba-9d03-f7c8f847880e","type":"message","text":"I disagree, you cant call `Matrix(vec)` and get a matrix. It throws an error, if you want to add a dim you use reshape so I dont see how it would be badly interpreted","user":"U01C3624SGJ","ts":"1616079630.003100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gW/ks","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I disagree, you cant call "},{"type":"text","text":"Matrix(vec)","style":{"code":true}},{"type":"text","text":" and get a matrix. It throws an error, if you want to add a dim you use reshape so I dont see how it would be badly interpreted"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"1f26bc3e-82dd-4593-bc86-c995a459ecea","type":"message","text":"<@U67D54KS8> I guess that’s `reshape`","user":"U67G3QRJM","ts":"1616081298.003300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Snq","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U67D54KS8"},{"type":"text","text":" I guess that’s "},{"type":"text","text":"reshape","style":{"code":true}}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"bad8c242-1407-4236-817f-c6c6455e0686","type":"message","text":"Ah no, I see what you mean","user":"U67G3QRJM","ts":"1616081310.003500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NTNT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah no, I see what you mean"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"4562c3ba-509d-42ef-b1b8-4f078513a10b","type":"message","text":"&gt; if you want to add a dim you use reshape\nand if you want to concatenate along the horizontal direction you use `hcat`, or along the vertical one you use `vcat`.","user":"U67D54KS8","ts":"1616081378.003700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wvg","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"if you want to add a dim you use reshape"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nand if you want to concatenate along the horizontal direction you use "},{"type":"text","text":"hcat","style":{"code":true}},{"type":"text","text":", or along the vertical one you use "},{"type":"text","text":"vcat","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"90ab844c-8689-4a81-ab58-a695f225df75","type":"message","text":"Saying \"I want a Matrix based on a vector of vectors\" is just under specified.","user":"U67D54KS8","ts":"1616081426.003900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FWu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Saying \"I want a Matrix based on a vector of vectors\" is just under specified."}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"3cab66da-345a-45cd-abd6-7709121b36f2","type":"message","text":"`Matrix(vec, dims=1)` for example, I guess","user":"U67G3QRJM","ts":"1616081807.004100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RqX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Matrix(vec, dims=1)","style":{"code":true}},{"type":"text","text":" for example, I guess"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"d5d0089c-a659-45b5-81f7-4e075ae2c08a","type":"message","text":"The problem is that e.g. `hcat(vec)` doesn’t work. So people do `hcat(vec...)`, which is slow.","user":"U67G3QRJM","ts":"1616081860.004300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7ADN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The problem is that e.g. "},{"type":"text","text":"hcat(vec)","style":{"code":true}},{"type":"text","text":" doesn’t work. So people do "},{"type":"text","text":"hcat(vec...)","style":{"code":true}},{"type":"text","text":", which is slow."}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"0e50210d-af4d-4981-9e7d-646cb04c59e2","type":"message","text":"There is a discoverability problem","user":"U67G3QRJM","ts":"1616081866.004500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KvOs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is a discoverability problem"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"2383f29b-4e8c-4b75-8732-c99bd2cc99ab","type":"message","text":"for `reduce(hcat, vec)`","user":"U67G3QRJM","ts":"1616081877.004700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iBd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"for "},{"type":"text","text":"reduce(hcat, vec)","style":{"code":true}}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"247cb027-a975-4a9a-82fc-49171d73f882","type":"message","text":"It’s also unclear that vectors will be treated as column vectors I guess","user":"U67G3QRJM","ts":"1616081962.004900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EIL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s also unclear that vectors will be treated as column vectors I guess"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"0f27a565-6c35-4954-b0d6-da1c30144dc5","type":"message","text":"Are you sure that `hcat(vec...)`  is slow? Looking at the code, it  looks as if they have some specialized implementation for that case:\n\n```function hcat(V::Vector{T}...) where T\n    height = length(V[1])\n    for j = 2:length(V)\n        if length(V[j]) != height\n            throw(DimensionMismatch(\"vectors must have same lengths\"))\n        end\n    end\n    return [ V[j][i]::T for i=1:length(V[1]), j=1:length(V) ]\nend```","user":"UBEF50B7C","ts":"1616085752.005100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HdUb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you sure that "},{"type":"text","text":"hcat(vec...)","style":{"code":true}},{"type":"text","text":"  is slow? Looking at the code, it  looks as if they have some specialized implementation for that case:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function hcat(V::Vector{T}...) where T\n    height = length(V[1])\n    for j = 2:length(V)\n        if length(V[j]) != height\n            throw(DimensionMismatch(\"vectors must have same lengths\"))\n        end\n    end\n    return [ V[j][i]::T for i=1:length(V[1]), j=1:length(V) ]\nend"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"5571ebce-c5c0-4f9d-9b2b-d55e4502c201","type":"message","text":"Its a lot slower from what i've tested.\n```julia&gt; @btime hcat($b...)\n  403.590 ns (5 allocations: 512 bytes)\n5×5 Matrix{Int64}:\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n\njulia&gt; @btime reduce($hcat,$b)\n  58.195 ns (1 allocation: 288 bytes)\n5×5 Matrix{Int64}:\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5```","user":"U01C3624SGJ","ts":"1616086288.005300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YUt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its a lot slower from what i've tested.\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime hcat($b...)\n  403.590 ns (5 allocations: 512 bytes)\n5×5 Matrix{Int64}:\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n\njulia> @btime reduce($hcat,$b)\n  58.195 ns (1 allocation: 288 bytes)\n5×5 Matrix{Int64}:\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5\n 5  5  5  5  5"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM","reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"208d8fa2-3957-43d8-8163-39540623c2d3","type":"message","text":"maybe on bigger matrices it isnt but I doubt it","user":"U01C3624SGJ","ts":"1616086304.005500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Izlv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"maybe on bigger matrices it isnt but I doubt it"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"b5019a05-43d2-4b92-9bc3-5dd29d05c02f","type":"message","text":"The splitting itself can be slow","user":"U67D54KS8","ts":"1616086339.005700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QoIN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The splitting itself can be slow"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM","reactions":[{"name":"+1","users":["U67G3QRJM"],"count":1}]},{"client_msg_id":"0e349674-7f70-4389-9463-ec54b481cc84","type":"message","text":"For sure, but cant use just hcat without splitting","user":"U01C3624SGJ","ts":"1616086436.005900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N1d8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For sure, but cant use just hcat without splitting"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"f210c53a-70ca-47e9-b78f-80233f550250","type":"message","text":"with larger matrices there is still a difference in performance although way smaller, this is for 1000 vectors of 1000 elements:\n\n```julia&gt; @btime hcat($v...);\n  1.153 ms (7 allocations: 7.66 MiB)\n\njulia&gt; @btime reduce($hcat, $v);\n  913.972 μs (2 allocations: 7.63 MiB)```\n","user":"UBEF50B7C","ts":"1616087213.006300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CIebr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"with larger matrices there is still a difference in performance although way smaller, this is for 1000 vectors of 1000 elements:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime hcat($v...);\n  1.153 ms (7 allocations: 7.66 MiB)\n\njulia> @btime reduce($hcat, $v);\n  913.972 μs (2 allocations: 7.63 MiB)"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"daa63b06-01e8-4e69-a18a-b885ee58c76f","type":"message","text":"ok, I thought that maybe using the splitting operator in combination with slurping in the function signature would create some optimzed code, but using `@code_native` on `hcat(v...)` shows that the compiler actually creates an extra statement for each of the thousend vectors in `v` :smile:","user":"UBEF50B7C","ts":"1616087451.006500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vp3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok, I thought that maybe using the splitting operator in combination with slurping in the function signature would create some optimzed code, but using "},{"type":"text","text":"@code_native","style":{"code":true}},{"type":"text","text":" on "},{"type":"text","text":"hcat(v...)","style":{"code":true}},{"type":"text","text":" shows that the compiler actually creates an extra statement for each of the thousend vectors in "},{"type":"text","text":"v","style":{"code":true}},{"type":"text","text":" "},{"type":"emoji","name":"smile"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"},{"client_msg_id":"d212b8a7-ffce-4ee3-a454-8bedaa9c6c75","type":"message","text":"there must be some threshold, because for 10^4  vectors of 10^4 elements it actually creates some reasonable code, still slower though:\n```julia&gt; @btime hcat($v...);\n  321.019 ms (7 allocations: 763.09 MiB)\n\njulia&gt; @btime reduce($hcat, $v);\n  287.510 ms (2 allocations: 762.94 MiB)```","user":"UBEF50B7C","ts":"1616087941.006700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tpOy3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"there must be some threshold, because for 10^4  vectors of 10^4 elements it actually creates some reasonable code, still slower though:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> @btime hcat($v...);\n  321.019 ms (7 allocations: 763.09 MiB)\n\njulia> @btime reduce($hcat, $v);\n  287.510 ms (2 allocations: 762.94 MiB)"}]}]}],"thread_ts":"1616078800.000700","parent_user_id":"U67G3QRJM"}]