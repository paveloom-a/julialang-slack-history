[{"client_msg_id":"6f0c62e2-b42a-40a9-84f9-b8fb5b7c455d","type":"message","text":"I have two `SparseMatrixCSC` `A` and `B`. I want to in-place modify `B` so that its storage is the same as `A`. That is, drop nonzero entries in `B` that are structurally zero in `A`, and add nonstructural zeros to `B` for nonzero entries in `A` not in `B`. The result should be that they have the same `colptr` and `rowval` fields. Is there a helper function for this in SparseArrays?","user":"UHDQQ4GN6","ts":"1613896857.000600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Okl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have two "},{"type":"text","text":"SparseMatrixCSC","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":". I want to in-place modify "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":" so that its storage is the same as "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":". That is, drop nonzero entries in "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":" that are structurally zero in "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":", and add nonstructural zeros to "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":" for nonzero entries in "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" not in "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":". The result should be that they have the same "},{"type":"text","text":"colptr","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"rowval","style":{"code":true}},{"type":"text","text":" fields. Is there a helper function for this in SparseArrays?"}]}]}],"thread_ts":"1613896857.000600","reply_count":1,"reply_users_count":1,"latest_reply":"1613909612.000900","reply_users":["U01M655G9AR"],"subscribed":false},{"client_msg_id":"6771e646-46ca-4151-b273-80542a2cbdb0","type":"message","text":"If you don't care about the old values in `B`, you can just do `B .= A` . If you do care, you could do something like\n```B .= ((a,b)-&gt;a==0 ? 0.0 : (b == 0 ? NaN : b)).(A,B)\nmap!(x-&gt;(isnan(x) ? 0.0 : x), nonzeros(B), nonzeros(B))```\nThe first line would make what you want but putting `NaN` instead of `0` in `B` for nonzeros of `A` . You can't put `0` because broadcast would treat it as structural zero. The second line replaces `NaN`s with `0` in `B`.  This assumes that `eltype` is `Float64` and `NaN`  is not used in `B` , otherwise you'd need to replace it with another unused value.","user":"U01M655G9AR","ts":"1613909612.000900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Rki","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you don't care about the old values in "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":", you can just do "},{"type":"text","text":"B .= A","style":{"code":true}},{"type":"text","text":" . If you do care, you could do something like\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"B .= ((a,b)->a==0 ? 0.0 : (b == 0 ? NaN : b)).(A,B)\nmap!(x->(isnan(x) ? 0.0 : x), nonzeros(B), nonzeros(B))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"The first line would make what you want but putting "},{"type":"text","text":"NaN","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"0","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":" for nonzeros of "},{"type":"text","text":"A","style":{"code":true}},{"type":"text","text":" . You can't put "},{"type":"text","text":"0","style":{"code":true}},{"type":"text","text":" because broadcast would treat it as structural zero. The second line replaces "},{"type":"text","text":"NaN","style":{"code":true}},{"type":"text","text":"s with "},{"type":"text","text":"0","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":".  This assumes that "},{"type":"text","text":"eltype","style":{"code":true}},{"type":"text","text":" is "},{"type":"text","text":"Float64","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"NaN","style":{"code":true}},{"type":"text","text":"  is not used in "},{"type":"text","text":"B","style":{"code":true}},{"type":"text","text":" , otherwise you'd need to replace it with another unused value."}]}]}],"thread_ts":"1613896857.000600","parent_user_id":"UHDQQ4GN6"}]