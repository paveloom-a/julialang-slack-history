[{"client_msg_id":"8457D5CD-D5EE-49B7-8E36-6EA238C68E83","type":"message","text":"<https://github.com/jonniedie/ComponentArrays.jl|https://github.com/jonniedie/ComponentArrays.jl>","user":"U8D9768Q6","ts":"1611370533.014600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZO8Hd","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/jonniedie/ComponentArrays.jl","text":"https://github.com/jonniedie/ComponentArrays.jl"}]}]}],"thread_ts":"1611370533.014600","reply_count":5,"reply_users_count":2,"latest_reply":"1611382828.016000","reply_users":["U011LUQ182G","UD0NS8PDF"],"subscribed":false},{"client_msg_id":"5a83205c-e279-4837-9dc6-5ab8679415be","type":"message","text":"I think this does something slightly different, unless I’m misunderstanding.\n\nIt looks like it stores fields separately and provides a way to “combine” them into a “zipped” ordering. I’m aiming for the inverse, e.g., `[u1,v1,...,ui,vi,...]` as the underlying data representation, but with convenience accessors/settors like `U[1] = [u1,u2,...]`","user":"U011LUQ182G","ts":"1611371441.014700","team":"T68168MUP","edited":{"user":"U011LUQ182G","ts":"1611371635.000000"},"blocks":[{"type":"rich_text","block_id":"MBaU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think this does something slightly different, unless I’m misunderstanding.\n\nIt looks like it stores fields separately and provides a way to “combine” them into a “zipped” ordering. I’m aiming for the inverse, e.g., "},{"type":"text","text":"[u1,v1,...,ui,vi,...]","style":{"code":true}},{"type":"text","text":" as the underlying data representation, but with convenience accessors/settors like "},{"type":"text","text":"U[1] = [u1,u2,...]","style":{"code":true}}]}]}],"thread_ts":"1611370533.014600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"19d559c5-8163-4485-884c-d15421fff242","type":"message","text":"I was wondering whether a contiguous memory layout could improve cache locality for many accesses of sets of fields `(ui,vi)`","user":"U011LUQ182G","ts":"1611372125.015300","team":"T68168MUP","edited":{"user":"U011LUQ182G","ts":"1611379297.000000"},"blocks":[{"type":"rich_text","block_id":"C1Sj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was wondering whether a contiguous memory layout could improve cache locality for many accesses of sets of fields "},{"type":"text","text":"(ui,vi)","style":{"code":true}}]}]}],"thread_ts":"1611370533.014600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"9bb3f0ae-4aec-48e5-864c-a3d6578e5e0e","type":"message","text":"Maybe you want <https://github.com/JuliaArrays/ArraysOfArrays.jl>?","user":"UD0NS8PDF","ts":"1611381017.015600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dYI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe you want "},{"type":"link","url":"https://github.com/JuliaArrays/ArraysOfArrays.jl"},{"type":"text","text":"?"}]}]}],"thread_ts":"1611370533.014600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"07dc8af5-1878-40e4-abe5-b8cce5c77cac","type":"message","text":"Or just `eachcol`","user":"UD0NS8PDF","ts":"1611381057.015800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YxLEe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Or just "},{"type":"text","text":"eachcol","style":{"code":true}}]}]}],"thread_ts":"1611370533.014600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"b6568a5a-8f09-42bd-ae22-b5c532157002","type":"message","text":"I think ArraysOfArrays is closest to what I’m aiming for right now. I’ll take a closer look at the package. Thanks!","user":"U011LUQ182G","ts":"1611382828.016000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sPEi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think ArraysOfArrays is closest to what I’m aiming for right now. I’ll take a closer look at the package. Thanks!"}]}]}],"thread_ts":"1611370533.014600","parent_user_id":"U8D9768Q6"}]