[{"client_msg_id":"816b5ff9-02e7-45a6-89f5-ec3b0cf05fb5","type":"message","text":"Does anyone who uses Singular.jl know how to find the generators for a radical of an ideal? I see an old PR which said some other merged PR superceded it but fail to find the needed functionality.","user":"UDD5Z7FLZ","ts":"1612971229.002600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7kf6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does anyone who uses Singular.jl know how to find the generators for a radical of an ideal? I see an old PR which said some other merged PR superceded it but fail to find the needed functionality."}]}]}],"thread_ts":"1612971229.002600","reply_count":5,"reply_users_count":3,"latest_reply":"1613180866.003600","reply_users":["U012RPHRSP3","UDD5Z7FLZ","U012FH66MFW"],"subscribed":false},{"client_msg_id":"02b9fc08-ed1c-49c5-9b3d-4c0e7100912a","type":"message","text":"I don't know if it helps, but if you cannot find the answer using Singular  or other julia packages and you still need to get the compuation done, then you could consider Macaulay2 as alternative, it has a lot of advanced functionalities for computational algebraic geometry and it's open source. Particularly, computing the radical of an ideal is just `radical I`.","user":"U012RPHRSP3","ts":"1612973147.002700","team":"T68168MUP","edited":{"user":"U012RPHRSP3","ts":"1612973361.000000"},"blocks":[{"type":"rich_text","block_id":"lr=E","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know if it helps, but if you cannot find the answer using Singular  or other julia packages and you still need to get the compuation done, then you could consider Macaulay2 as alternative, it has a lot of advanced functionalities for computational algebraic geometry and it's open source. Particularly, computing the radical of an ideal is just "},{"type":"text","text":"radical I","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1612971229.002600","parent_user_id":"UDD5Z7FLZ"},{"client_msg_id":"52371a41-c980-487b-aa36-7e5180756b4f","type":"message","text":"As in I can do it in `Singular` (without the Julia port), but Im wondering how to do it in `Singular.jl`","user":"UDD5Z7FLZ","ts":"1612973579.003000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nZVr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"As in I can do it in "},{"type":"text","text":"Singular","style":{"code":true}},{"type":"text","text":" (without the Julia port), but Im wondering how to do it in "},{"type":"text","text":"Singular.jl","style":{"code":true}}]}]}],"thread_ts":"1612971229.002600","parent_user_id":"UDD5Z7FLZ"},{"client_msg_id":"d66bf71a-a0f2-49b6-b016-33214c2f77ad","type":"message","text":"<@U012RPHRSP3> Singular is also open source, and also can do that (and Macaulay in fact uses parts of Singular as its \"engine\" :wink: )","user":"U012FH66MFW","ts":"1613180738.003200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xz3","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U012RPHRSP3"},{"type":"text","text":" Singular is also open source, and also can do that (and Macaulay in fact uses parts of Singular as its \"engine\" "},{"type":"emoji","name":"wink"},{"type":"text","text":" )"}]}]}],"thread_ts":"1612971229.002600","parent_user_id":"UDD5Z7FLZ"},{"client_msg_id":"e0338344-7074-4856-acff-b0b3b787f0c1","type":"message","text":"<@UDD5Z7FLZ> there is a `radical` command in `Oscar.jl` which you can use. For reference, here's how it is defined (that may allow you to adapt it for \"raw\" Singular.jl, if you prefer that)\n```function radical(I::MPolyIdeal)\n  singular_assure(I)\n  R = base_ring(I)\n  J = Singular.LibPrimdec.radical(<http://I.gens.Sx|I.gens.Sx>, I.gens.S)\n  return ideal(R, J)\nend```","user":"U012FH66MFW","ts":"1613180807.003400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BUMP","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDD5Z7FLZ"},{"type":"text","text":" there is a "},{"type":"text","text":"radical","style":{"code":true}},{"type":"text","text":" command in "},{"type":"text","text":"Oscar.jl","style":{"code":true}},{"type":"text","text":" which you can use. For reference, here's how it is defined (that may allow you to adapt it for \"raw\" Singular.jl, if you prefer that)\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function radical(I::MPolyIdeal)\n  singular_assure(I)\n  R = base_ring(I)\n  J = Singular.LibPrimdec.radical(I.gens.Sx, I.gens.S)\n  return ideal(R, J)\nend"}]}]}],"thread_ts":"1612971229.002600","parent_user_id":"UDD5Z7FLZ"},{"client_msg_id":"7876e50f-fe5f-4307-b789-c74eb2f10cf5","type":"message","text":"Oh! I didn't know there is a package Oscar.jl, I've been playing around with the individual packages and just thought Oscar was more of a \"project name\"","user":"UDD5Z7FLZ","ts":"1613180866.003600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zCV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh! I didn't know there is a package Oscar.jl, I've been playing around with the individual packages and just thought Oscar was more of a \"project name\""}]}]}],"thread_ts":"1612971229.002600","parent_user_id":"UDD5Z7FLZ"}]