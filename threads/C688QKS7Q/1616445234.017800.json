[{"client_msg_id":"b9257063-4721-499d-af4f-bcb804b67dff","type":"message","text":"Why a decision was made to have the following difference? (if there is a link to a relevant discussion could you please share - thank you!)\n```julia&gt; (a=1, b=missing) &lt; (a=1,b=missing)\nfalse\n\njulia&gt; (1, missing) &lt; (1, missing)\nmissing```\nbut\n```julia&gt; (a=1, b=missing) == (a=1,b=missing)\nmissing\n\njulia&gt; (1, missing) == (1, missing)\nmissing```\nCC <@U67431ELR>","user":"U8JAMQGQY","ts":"1616445234.017800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JkbQf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why a decision was made to have the following difference? (if there is a link to a relevant discussion could you please share - thank you!)\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> (a=1, b=missing) < (a=1,b=missing)\nfalse\n\njulia> (1, missing) < (1, missing)\nmissing"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> (a=1, b=missing) == (a=1,b=missing)\nmissing\n\njulia> (1, missing) == (1, missing)\nmissing"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"CC "},{"type":"user","user_id":"U67431ELR"}]}]}],"thread_ts":"1616445234.017800","reply_count":8,"reply_users_count":3,"latest_reply":"1616515694.023200","reply_users":["U67431ELR","U8JAMQGQY","UB7JS9CHF"],"is_locked":false,"subscribed":false},{"client_msg_id":"90cfda05-c1e1-4637-bb6f-66e902f0269b","type":"message","text":"I'm afraid that's just a bug. :confused: I implemented the `Tuple` methods (maybe before `NamedTuple` existed), and `==(nt1::NamedTuple, nt2::NamedTuple)` happens to call `Tuple(nt1) == Tuple(nt2)`. But `&lt;` calls `isless`.","user":"U67431ELR","ts":"1616445368.018000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yy7I","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm afraid that's just a bug. "},{"type":"emoji","name":"confused"},{"type":"text","text":" I implemented the "},{"type":"text","text":"Tuple","style":{"code":true}},{"type":"text","text":" methods (maybe before "},{"type":"text","text":"NamedTuple","style":{"code":true}},{"type":"text","text":" existed), and "},{"type":"text","text":"==(nt1::NamedTuple, nt2::NamedTuple)","style":{"code":true}},{"type":"text","text":" happens to call "},{"type":"text","text":"Tuple(nt1) == Tuple(nt2)","style":{"code":true}},{"type":"text","text":". But "},{"type":"text","text":"<","style":{"code":true}},{"type":"text","text":" calls "},{"type":"text","text":"isless","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1616445234.017800","parent_user_id":"U8JAMQGQY"},{"client_msg_id":"c1ed847d-36f8-404c-8656-9d738b0a2040","type":"message","text":"I assume the way to fix this is to implement `&lt;` for `NamedTuple`?","user":"U8JAMQGQY","ts":"1616445616.018200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+yGAR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I assume the way to fix this is to implement "},{"type":"text","text":"<","style":{"code":true}},{"type":"text","text":" for "},{"type":"text","text":"NamedTuple","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1616445234.017800","parent_user_id":"U8JAMQGQY"},{"client_msg_id":"d303b3df-ea47-4dac-86b8-dbaed772e05d","type":"message","text":"I guess. But it's worth checking whether there's already an issue about it. Not sure whether it would be OK to change this before 2.0.","user":"U67431ELR","ts":"1616445683.018400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6voTB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess. But it's worth checking whether there's already an issue about it. Not sure whether it would be OK to change this before 2.0."}]}]}],"thread_ts":"1616445234.017800","parent_user_id":"U8JAMQGQY"},{"client_msg_id":"0ae06a93-f1ae-4178-958d-327006461d6a","type":"message","text":"Yes - probably it has to stay till 2.0. I could not find an issue or PR for this. I have opened <https://github.com/JuliaLang/julia/issues/40142>.","user":"U8JAMQGQY","ts":"1616446102.018600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9qWOK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes - probably it has to stay till 2.0. I could not find an issue or PR for this. I have opened "},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/40142"},{"type":"text","text":"."}]}]}],"thread_ts":"1616445234.017800","parent_user_id":"U8JAMQGQY"},{"client_msg_id":"2d49c775-6eef-42af-bcff-0109feb447ba","type":"message","text":"If it is a bug, why couldn’t it be changed before 2.0?  Is anything currently depending on the bug?","user":"UB7JS9CHF","ts":"1616502501.022600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pxW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If it is a bug, why couldn’t it be changed before 2.0?  Is anything currently depending on the bug?"}]}]}],"thread_ts":"1616445234.017800","parent_user_id":"U8JAMQGQY"},{"client_msg_id":"154fa2fd-7c17-4004-b0bc-92f8dc1bf7ce","type":"message","text":"Personally, I’d rather see this fixed now.","user":"UB7JS9CHF","ts":"1616502538.022800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"F52d","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Personally, I’d rather see this fixed now."}]}]}],"thread_ts":"1616445234.017800","parent_user_id":"U8JAMQGQY"},{"client_msg_id":"6220b044-e7d0-40cd-961a-2c7ec66a8702","type":"message","text":"I think left as it is, may end up causing strange bugs as people start using NamedTuple more.","user":"UB7JS9CHF","ts":"1616502840.023000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kbmHk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think left as it is, may end up causing strange bugs as people start using NamedTuple more."}]}]}],"thread_ts":"1616445234.017800","parent_user_id":"U8JAMQGQY"},{"client_msg_id":"8a9b420f-9fb6-4d8f-864b-ad315d62dbb6","type":"message","text":"Yes - I think it is a bug given the example with `-0.0` and `0.0`. I would love to see it backported.","user":"U8JAMQGQY","ts":"1616515694.023200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vMtWp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes - I think it is a bug given the example with "},{"type":"text","text":"-0.0","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"0.0","style":{"code":true}},{"type":"text","text":". I would love to see it backported."}]}]}],"thread_ts":"1616445234.017800","parent_user_id":"U8JAMQGQY"}]