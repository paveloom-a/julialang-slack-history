[{"type":"message","text":"Splitting this into a separate thread:","user":"U69KQT9DL","ts":"1611089630.036300","team":"T68168MUP","attachments":[{"fallback":"[January 19th, 2021 12:50 PM] staticfloat: for the record, embedding use cases should mostly remain the same, where you just continue to link against `libjulia`.","ts":"1611089403.035600","author_id":"U66GD0880","author_subname":"Elliot Saba","channel_id":"C688QKS7Q","channel_name":"internals","is_msg_unfurl":true,"is_reply_unfurl":true,"text":"for the record, embedding use cases should mostly remain the same, where you just continue to link against `libjulia`.","author_name":"Elliot Saba","author_link":"https://julialang.slack.com/team/U66GD0880","author_icon":"https://secure.gravatar.com/avatar/002ccfd8ee9e135f0dfb5650c292052d.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-48.png","mrkdwn_in":["text"],"color":"D0D0D0","from_url":"https://julialang.slack.com/archives/C688QKS7Q/p1611089403035600?thread_ts=1611088307034300&cid=C688QKS7Q","is_share":true,"footer":"From a thread in #internals"}],"blocks":[{"type":"rich_text","block_id":"rDR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Splitting this into a separate thread:"}]}]}],"thread_ts":"1611089630.036300","reply_count":25,"reply_users_count":3,"latest_reply":"1611151572.061900","reply_users":["U69KQT9DL","U66GD0880","U67BXBF99"],"subscribed":false},{"client_msg_id":"14799ae3-e8e8-4e5a-862c-1bb7c62f74a5","type":"message","text":"<@U66GD0880> working on <https://github.com/JuliaLang/PackageCompiler.jl/pull/490>, I found that I had some uninitialized symbols unless I linked against `libjulia-internal`.\n\nOne sec, I’ll check which ones.","user":"U69KQT9DL","ts":"1611089821.036400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XEn","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U66GD0880"},{"type":"text","text":" working on "},{"type":"link","url":"https://github.com/JuliaLang/PackageCompiler.jl/pull/490"},{"type":"text","text":", I found that I had some uninitialized symbols unless I linked against "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":".\n\nOne sec, I’ll check which ones."}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"5c93e0d8-4485-43c3-a2b7-3fdc98582b04","type":"message","text":"~Okay, never mind then.  It seems to be working!~ Actually, I was still linking against libjulia-internal…","user":"U69KQT9DL","ts":"1611091134.036800","team":"T68168MUP","edited":{"user":"U69KQT9DL","ts":"1611091255.000000"},"blocks":[{"type":"rich_text","block_id":"LQj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, never mind then.  It seems to be working!","style":{"strike":true}},{"type":"text","text":" Actually, I was still linking against libjulia-internal…"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"de74bcd6-dd90-4753-9fce-62fc181127f7","type":"message","text":"~Okay, was able to successfully run without libjulia-internal.  Thanks for the note, and sorry for the noise!~\n\nNope, still had it in there. (* sigh *)\n\n(PackageCompiler was already linking against it.  Removing all of those references and trying again.)","user":"U69KQT9DL","ts":"1611093928.037800","team":"T68168MUP","edited":{"user":"U69KQT9DL","ts":"1611094764.000000"},"blocks":[{"type":"rich_text","block_id":"8/=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, was able to successfully run without libjulia-internal.  Thanks for the note, and sorry for the noise!","style":{"strike":true}},{"type":"text","text":"\n\nNope, still had it in there. (* sigh *)\n\n(PackageCompiler was already linking against it.  Removing all of those references and trying again.)"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"8fa4b96c-b29b-4d85-be89-3c11b49361a3","type":"message","text":"Okay, it seems that PackageCompiler still needs to link against `libjulia-internal`, but the main application does not (in the PR above).  That seems fine to me.","user":"U69KQT9DL","ts":"1611098425.038300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bOk9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, it seems that PackageCompiler still needs to link against "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":", but the main application does not (in the PR above).  That seems fine to me."}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"04d66b74-67e0-4521-8d08-85d2a84bd26f","type":"message","text":"What do you mean PackageCompiler needs to link?","user":"U66GD0880","ts":"1611098826.040000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5UWY+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do you mean PackageCompiler needs to link?"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"6b5542c8-0533-455b-a1d0-c304f66325a3","type":"message","text":"you mean the `$CC` link step?","user":"U66GD0880","ts":"1611098842.040200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/j1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you mean the "},{"type":"text","text":"$CC","style":{"code":true}},{"type":"text","text":" link step?"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"ce7dbe91-3e3d-4257-aef5-b0eac76882dd","type":"message","text":"Sorry, yes.  During sysimage creation, it needs to link against `libjulia-internal` (<https://github.com/JuliaLang/PackageCompiler.jl/blob/2b70982482a164014cc3b88aa9d73e4b81d51d6a/src/PackageCompiler.jl#L479-L494|link>) removing this leads to unresolved symbols.  Which isn’t really that surprising.\nAt one point, I thought that I also needed to link the final binary explicitly with `libjulia-internal` .\n\nThat might actually have been true (at least on OSX) but setting rpath appropriately on the custom sysimage seems to have fixed it.","user":"U69KQT9DL","ts":"1611102546.040400","team":"T68168MUP","edited":{"user":"U69KQT9DL","ts":"1611102571.000000"},"blocks":[{"type":"rich_text","block_id":"hBw=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sorry, yes.  During sysimage creation, it needs to link against "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":" ("},{"type":"link","url":"https://github.com/JuliaLang/PackageCompiler.jl/blob/2b70982482a164014cc3b88aa9d73e4b81d51d6a/src/PackageCompiler.jl#L479-L494","text":"link"},{"type":"text","text":") removing this leads to unresolved symbols.  Which isn’t really that surprising.\nAt one point, I thought that I also needed to link the final binary explicitly with "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":" .\n\nThat might actually have been true (at least on OSX) but setting rpath appropriately on the custom sysimage seems to have fixed it."}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"40a37fd6-0be4-416e-bbaf-ec622fa42650","type":"message","text":"Hmmm, I don’t _think_ this should be necessary","user":"U66GD0880","ts":"1611103291.041200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rCfsO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmmm, I don’t "},{"type":"text","text":"think","style":{"italic":true}},{"type":"text","text":" this should be necessary"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"052a3b37-5b4b-4f9b-9efb-49b8dfc35df2","type":"message","text":"which symbols is it missing?","user":"U66GD0880","ts":"1611103297.041500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zsX4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"which symbols is it missing?"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"95be28df-ea73-4465-b79c-33876628640b","type":"message","text":"Quite a few, actually: <https://gist.github.com/kmsquire/3b25364b290c4aa7036a481dd92c6828|gist link>","user":"U69KQT9DL","ts":"1611103868.044900","team":"T68168MUP","edited":{"user":"U69KQT9DL","ts":"1611103889.000000"},"blocks":[{"type":"rich_text","block_id":"PbTUy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Quite a few, actually: "},{"type":"link","url":"https://gist.github.com/kmsquire/3b25364b290c4aa7036a481dd92c6828","text":"gist link"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"4e011cca-ce16-41c5-b563-c2a6f2ba07a6","type":"message","text":"okay those are all the data symbols","user":"U66GD0880","ts":"1611103895.045300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JBmb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"okay those are all the data symbols"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"0790c3ac-71ce-4ad6-a389-3c205b79657c","type":"message","text":"that’s bizarre, because those should be defined in `libjulia`, not `libjulia-internal`!","user":"U66GD0880","ts":"1611103912.045500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SWe79","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that’s bizarre, because those should be defined in "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":", not "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":"!"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"2bb9cfc6-bd2f-468e-86a8-dcb3b97322e1","type":"message","text":"can you try moving `-ljulia` to before the `.o` file?","user":"U66GD0880","ts":"1611103955.045700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ci8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"can you try moving "},{"type":"text","text":"-ljulia","style":{"code":true}},{"type":"text","text":" to before the "},{"type":"text","text":".o","style":{"code":true}},{"type":"text","text":" file?"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"dd2eed98-e151-4cca-9119-b3c5e6bc66fe","type":"message","text":"also, is there an easy way for me to reproduce this locally?","user":"U66GD0880","ts":"1611103979.045900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yMl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"also, is there an easy way for me to reproduce this locally?"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"b1eb5a6f-5065-4784-8a40-3d2d06cbbfdc","type":"message","text":"This was with <@U68P09RFZ>’s libcg, and a modified version of PackageCompiler.  I’ll push both and send you the links/instructions.\n\nAlso, it’s probably obvious, but I’m on OSX.","user":"U69KQT9DL","ts":"1611104095.046100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FpWR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This was with "},{"type":"user","user_id":"U68P09RFZ"},{"type":"text","text":"’s libcg, and a modified version of PackageCompiler.  I’ll push both and send you the links/instructions.\n\nAlso, it’s probably obvious, but I’m on OSX."}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL","reactions":[{"name":"+1","users":["U66GD0880","UKG4WF8PJ"],"count":2}]},{"client_msg_id":"69a6153d-12e7-4030-a28c-564a551b44c1","type":"message","text":"You can clone <https://github.com/kmsquire/libcg/tree/feature/no-libjulia-internal> (branch: `feature/no-libjulia-internal`)\n\nRunning `make` will instantiate the main project and the build project, and run PackageCompiler.\n\nIt should pull the right version of `PackageCompiler.jl` (which is <https://github.com/kmsquire/PackageCompiler.jl/tree/kms/create_library_no_libjulia_internal|here>).","user":"U69KQT9DL","ts":"1611105767.046400","team":"T68168MUP","edited":{"user":"U69KQT9DL","ts":"1611105823.000000"},"blocks":[{"type":"rich_text","block_id":"QNA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can clone "},{"type":"link","url":"https://github.com/kmsquire/libcg/tree/feature/no-libjulia-internal"},{"type":"text","text":" (branch: "},{"type":"text","text":"feature/no-libjulia-internal","style":{"code":true}},{"type":"text","text":")\n\nRunning "},{"type":"text","text":"make","style":{"code":true}},{"type":"text","text":" will instantiate the main project and the build project, and run PackageCompiler.\n\nIt should pull the right version of "},{"type":"text","text":"PackageCompiler.jl","style":{"code":true}},{"type":"text","text":" (which is "},{"type":"link","url":"https://github.com/kmsquire/PackageCompiler.jl/tree/kms/create_library_no_libjulia_internal","text":"here"},{"type":"text","text":")."}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"a47fd90a-0fd7-4cbe-944d-e38c21d55749","type":"message","text":"FWIW, moving the `-ljulia` before the `-o` didn’t change anthing.  That change is in the PackageCompiler commit above.","user":"U69KQT9DL","ts":"1611105910.046900","team":"T68168MUP","edited":{"user":"U69KQT9DL","ts":"1611105936.000000"},"blocks":[{"type":"rich_text","block_id":"eOn9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"FWIW, moving the "},{"type":"text","text":"-ljulia","style":{"code":true}},{"type":"text","text":" before the "},{"type":"text","text":"-o","style":{"code":true}},{"type":"text","text":" didn’t change anthing.  That change is in the PackageCompiler commit above."}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"af096b40-3a3f-437f-81ab-1e45c5ff8edc","type":"message","text":"(Also, please forgive the git history on the libcg branch I sent you.  I was spending a lot of time trying to debug Windows builds… which I still didn’t get to work, but one thing at a time.)","user":"U69KQT9DL","ts":"1611105987.047200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w=b+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(Also, please forgive the git history on the libcg branch I sent you.  I was spending a lot of time trying to debug Windows builds… which I still didn’t get to work, but one thing at a time.)"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"48da491a-2a30-4d86-a3b5-e565d7074b32","type":"message","text":"Could the misplaced symbols have something to do with the sysimage being generated multiple times?  During the first pass, an empty sysimage is created, followed by the desired version (<https://github.com/JuliaLang/PackageCompiler.jl/blob/2b70982482a164014cc3b88aa9d73e4b81d51d6a/src/PackageCompiler.jl#L664-L678|link>).","user":"U69KQT9DL","ts":"1611108394.047700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qwtu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could the misplaced symbols have something to do with the sysimage being generated multiple times?  During the first pass, an empty sysimage is created, followed by the desired version ("},{"type":"link","url":"https://github.com/JuliaLang/PackageCompiler.jl/blob/2b70982482a164014cc3b88aa9d73e4b81d51d6a/src/PackageCompiler.jl#L664-L678","text":"link"},{"type":"text","text":")."}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"9354461c-69c4-4557-9df7-f92a88e455e4","type":"message","text":"<@U66GD0880> I’m pretty sure we want the sysimg to link against libjulia-internal and not libjulia","user":"U67BXBF99","ts":"1611120294.049200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IeJA","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U66GD0880"},{"type":"text","text":" I’m pretty sure we want the sysimg to link against libjulia-internal and not libjulia"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"a9fdd591-086a-49b6-88c9-f5a1471c8401","type":"message","text":"It likely isn’t absolutely critical right now, but it is a performance impact","user":"U67BXBF99","ts":"1611120325.049400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"flKM8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It likely isn’t absolutely critical right now, but it is a performance impact"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"ba84a88b-3acd-441d-a419-b68f95127feb","type":"message","text":"The sysimg itself definitely should link against `libjulia-internal`; but I thought Kevin was talking about an embedding usecase here.  Sorry, perhaps I was confused, but if this is just the normal sysimg linking step, yes, that should be linked against `libjulia-internal` _and_ `libjulia`.","user":"U66GD0880","ts":"1611126647.049700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uk4rZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The sysimg itself definitely should link against "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":"; but I thought Kevin was talking about an embedding usecase here.  Sorry, perhaps I was confused, but if this is just the normal sysimg linking step, yes, that should be linked against "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":" "},{"type":"text","text":"and","style":{"italic":true}},{"type":"text","text":" "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"1436d2b6-71cf-42d6-97f4-0a4a7fe0b339","type":"message","text":"(We have to link against `libjulia` to get the data symbols, I believe)","user":"U66GD0880","ts":"1611126662.049900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=d0c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(We have to link against "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":" to get the data symbols, I believe)"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"CC4D0511-BA61-40A8-9462-4331803F6879","type":"message","text":"Ok cool. (It does seem like the data symbols are in `libjulia-internal` though.)","user":"U69KQT9DL","ts":"1611150725.052900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vhJ1f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok cool. (It does seem like the data symbols are in "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":" though.)"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"},{"client_msg_id":"1A1CC615-CDA7-4B99-8C62-5D14B54FC790","type":"message","text":"Thank you Elliot and Jameson","user":"U69KQT9DL","ts":"1611151572.061900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YQ03r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you Elliot and Jameson"}]}]}],"thread_ts":"1611089630.036300","parent_user_id":"U69KQT9DL"}]