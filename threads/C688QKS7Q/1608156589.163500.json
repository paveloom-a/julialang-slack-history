[{"client_msg_id":"22e1ea7c-2994-48a9-947a-b38b08636b61","type":"message","text":"`jl_init` is broken on master and presumably 1.6 as well, probably because when it tries to `dladdr` itself it gets `libjulia-internal.so` rather than `libjulia.so` and the former is not in the same directory as the latter in the nightly binaries (it is in the build tree though, which is why the embedding tests pass). I'm willing to help to fix this but I really don't know which assumptions are valid to make about the directory layout of a Julia installation. Can someone shed light on this (or point to documentation if it's documented)?","user":"UBVE598BC","ts":"1608156589.163500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+XcY7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"jl_init","style":{"code":true}},{"type":"text","text":" is broken on master and presumably 1.6 as well, probably because when it tries to "},{"type":"text","text":"dladdr","style":{"code":true}},{"type":"text","text":" itself it gets "},{"type":"text","text":"libjulia-internal.so","style":{"code":true}},{"type":"text","text":" rather than "},{"type":"text","text":"libjulia.so","style":{"code":true}},{"type":"text","text":" and the former is not in the same directory as the latter in the nightly binaries (it is in the build tree though, which is why the embedding tests pass). I'm willing to help to fix this but I really don't know which assumptions are valid to make about the directory layout of a Julia installation. Can someone shed light on this (or point to documentation if it's documented)?"}]}]}],"thread_ts":"1608156589.163500","reply_count":12,"reply_users_count":2,"latest_reply":"1608477790.193300","reply_users":["U66GD0880","UBVE598BC"],"subscribed":false},{"client_msg_id":"2a133f2f-a087-46c9-8c1e-caf996680b72","type":"message","text":"Hey Gunnar!  Yeah, this is an issue.  I think the fix is pretty simple though; instead of `jl_load_dynamic_library(NULL, ...)` we should just use `jl_load_dynamic_library(LIBJULIA_NAME, ....)` where `LIBJULIA_NAME` can be defined by the following: <https://github.com/JuliaLang/julia/blob/996dd557c9d5f40202394e295e4897a563f68064/cli/loader.h#L88-L93>","user":"U66GD0880","ts":"1608227977.163700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AkH2U","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey Gunnar!  Yeah, this is an issue.  I think the fix is pretty simple though; instead of "},{"type":"text","text":"jl_load_dynamic_library(NULL, ...)","style":{"code":true}},{"type":"text","text":" we should just use "},{"type":"text","text":"jl_load_dynamic_library(LIBJULIA_NAME, ....)","style":{"code":true}},{"type":"text","text":" where "},{"type":"text","text":"LIBJULIA_NAME","style":{"code":true}},{"type":"text","text":" can be defined by the following: "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/996dd557c9d5f40202394e295e4897a563f68064/cli/loader.h#L88-L93"}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"404d69bf-456a-4ea3-8a9a-8b5b89cb743e","type":"message","text":"It’s a little unfortunate that we need to do this twice","user":"U66GD0880","ts":"1608227995.163900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/uvS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It’s a little unfortunate that we need to do this twice"}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"72c729c5-bbf6-470f-a040-29f61c2b8472","type":"message","text":"<https://github.com/JuliaLang/julia/blob/master/cli/loader_lib.c#L82-L124>","user":"U66GD0880","ts":"1608228029.164100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fbe","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/blob/master/cli/loader_lib.c#L82-L124"}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"6c7b3a8e-c0ba-4be4-93b2-7038f46541e6","type":"message","text":"I would actually be quite happy with a solution that changes `get_libdir()` to something like `jl_get_libbindir()`, properly exports it from `libjulia` and then just calls that from `jl_init()`.","user":"U66GD0880","ts":"1608228064.164300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AF021","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would actually be quite happy with a solution that changes "},{"type":"text","text":"get_libdir()","style":{"code":true}},{"type":"text","text":" to something like "},{"type":"text","text":"jl_get_libbindir()","style":{"code":true}},{"type":"text","text":", properly exports it from "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":" and then just calls that from "},{"type":"text","text":"jl_init()","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"fad5b669-017b-46f4-aff4-07df4d0baa28","type":"message","text":"Since we’re caching the value in `lib_dir`, we can also initialize it to full of NULLs, then early-exit if `lib_dir[0] != NULL`, so that we don’t do this work twice like we are right now.","user":"U66GD0880","ts":"1608228123.164500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l+CZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Since we’re caching the value in "},{"type":"text","text":"lib_dir","style":{"code":true}},{"type":"text","text":", we can also initialize it to full of NULLs, then early-exit if "},{"type":"text","text":"lib_dir[0] != NULL","style":{"code":true}},{"type":"text","text":", so that we don’t do this work twice like we are right now."}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"025f3cf8-062f-4977-b248-f889e353eb65","type":"message","text":"Having an exported `jl_get_libbindir()` would be great (alternatively just having `jlinit` and `jlinit_with_image` called with `NULL` do the right thing for the embedding case). I'm still very hazy on how the locations of `libjulia` and `libjulia` internal would be distinguished. (And for that matter more exactly what `libbindir` is supposed to point to.)","user":"UBVE598BC","ts":"1608245572.165100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"H4n+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Having an exported "},{"type":"text","text":"jl_get_libbindir()","style":{"code":true}},{"type":"text","text":" would be great (alternatively just having "},{"type":"text","text":"jlinit","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"jlinit_with_image","style":{"code":true}},{"type":"text","text":" called with "},{"type":"text","text":"NULL","style":{"code":true}},{"type":"text","text":" do the right thing for the embedding case). I'm still very hazy on how the locations of "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":" internal would be distinguished. (And for that matter more exactly what "},{"type":"text","text":"libbindir","style":{"code":true}},{"type":"text","text":" is supposed to point to.)"}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"98e902d8-3803-4c4a-8647-d702ca3b4d54","type":"message","text":"So my proposed system is that `libjulia` (which consists of code from `cli/loader_lib.c`) would export `jl_get_libbindir()`, which reliably finds the location of `libjulia` which should exist in the `/lib` or `/bin` folders.  `jl_init()` (which is defined in `libjulia-internal`) would then call `jl_get_libbindir()` to find the bin and lib directory.  This would eliminate any confusion as to whether we’re in `libjulia` or `libjulia-internal`; just always use the function defined in `libjulia` which has a more predictable location than `libjulia-internal`.","user":"U66GD0880","ts":"1608245717.165300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3jnlL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So my proposed system is that "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":" (which consists of code from "},{"type":"text","text":"cli/loader_lib.c","style":{"code":true}},{"type":"text","text":") would export "},{"type":"text","text":"jl_get_libbindir()","style":{"code":true}},{"type":"text","text":", which reliably finds the location of "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":" which should exist in the "},{"type":"text","text":"/lib","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"/bin","style":{"code":true}},{"type":"text","text":" folders.  "},{"type":"text","text":"jl_init()","style":{"code":true}},{"type":"text","text":" (which is defined in "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":") would then call "},{"type":"text","text":"jl_get_libbindir()","style":{"code":true}},{"type":"text","text":" to find the bin and lib directory.  This would eliminate any confusion as to whether we’re in "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":"; just always use the function defined in "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":" which has a more predictable location than "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"69f68b06-2606-451e-9c56-d6b117faa46c","type":"message","text":"Thanks. That gives a clearer picture.","user":"UBVE598BC","ts":"1608247450.165500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1Ak","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. That gives a clearer picture."}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"0b455085-67f2-4b6d-b1f0-8a73e92fd3dc","type":"message","text":"let me know if anything doesn’t make sense or is unclear","user":"U66GD0880","ts":"1608248151.165700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qh1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let me know if anything doesn’t make sense or is unclear"}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"c38bb3af-f2d3-443f-a843-4e413d9aeb85","type":"message","text":"It looks to me like `get_libdir` already finds the location of `libjulia`, rather than `libjulia-internal`, despite the variable naming in the Windows case. So I assume the critical part is exporting it so it is available to `jl_init`.","user":"UBVE598BC","ts":"1608466866.192900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cB=Tz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It looks to me like "},{"type":"text","text":"get_libdir","style":{"code":true}},{"type":"text","text":" already finds the location of "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":", rather than "},{"type":"text","text":"libjulia-internal","style":{"code":true}},{"type":"text","text":", despite the variable naming in the Windows case. So I assume the critical part is exporting it so it is available to "},{"type":"text","text":"jl_init","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC","reactions":[{"name":"heavy_check_mark","users":["U66GD0880"],"count":1}]},{"client_msg_id":"4ad67a0e-52ed-4ae0-8ee8-64c36fe0e63e","type":"message","text":"Ok, so I'm confused on this part. Above you say that `jl_get_libbindir` should find the location of `libjulia`. However, in `jl_init` it constructs a `libbindir` which is sent to `jl_init_with_image`, which expects it to be the location of the `julia` binary.","user":"UBVE598BC","ts":"1608469127.193100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jElfV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ok, so I'm confused on this part. Above you say that "},{"type":"text","text":"jl_get_libbindir","style":{"code":true}},{"type":"text","text":" should find the location of "},{"type":"text","text":"libjulia","style":{"code":true}},{"type":"text","text":". However, in "},{"type":"text","text":"jl_init","style":{"code":true}},{"type":"text","text":" it constructs a "},{"type":"text","text":"libbindir","style":{"code":true}},{"type":"text","text":" which is sent to "},{"type":"text","text":"jl_init_with_image","style":{"code":true}},{"type":"text","text":", which expects it to be the location of the "},{"type":"text","text":"julia","style":{"code":true}},{"type":"text","text":" binary."}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"},{"client_msg_id":"15d66357-34d4-4aea-8eb5-9078a8c23bd4","type":"message","text":"<https://github.com/JuliaLang/julia/pull/38950> attacks the immediate problem. I'd like to also revisit `jl_init` and `jl_init_with_image` to make them more reliable and user-friendly if possible. But that probably should go into a different PR.","user":"UBVE598BC","ts":"1608477790.193300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Enef","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/pull/38950"},{"type":"text","text":" attacks the immediate problem. I'd like to also revisit "},{"type":"text","text":"jl_init","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"jl_init_with_image","style":{"code":true}},{"type":"text","text":" to make them more reliable and user-friendly if possible. But that probably should go into a different PR."}]}]}],"thread_ts":"1608156589.163500","parent_user_id":"UBVE598BC"}]