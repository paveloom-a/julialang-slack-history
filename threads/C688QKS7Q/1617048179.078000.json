[{"client_msg_id":"d5d0da8b-4dc4-4376-b84e-9e01bafac59c","type":"message","text":"<https://github.com/rust-lang/rust/issues/83623> is kinda interesting. Doesn't seem like we get the good code with any of the versions:\n\n```struct BluePrint\n    fuel_tank_size::UInt16\n    payload::UInt16\n    wheel_diameter::Float32\n    wheel_width::Float32\n    storage::UInt32\nend\n\neq(a::BluePrint, b::BluePrint) = a == b\n\neq2(a::BluePrint, b::BluePrint) =\n    a.fuel_tank_size == b.fuel_tank_size &amp;&amp;\n    a.payload == b.payload &amp;&amp;\n    a.wheel_diameter == b.wheel_diameter &amp;&amp;\n    a.wheel_width == b.wheel_width &amp;&amp;\n    a.storage == b.storage\n\nfunction eq3(a::BluePrint, b::BluePrint)\n    if a.fuel_tank_size != b.fuel_tank_size\n        return false\n    end\n    if a.payload != b.payload\n        return false\n    end\n    if a.wheel_diameter != b.wheel_diameter\n        return false\n    end\n    if a.wheel_width != b.wheel_width\n        return false\n    end\n    if a.storage != b.storage\n        return false\n    end\n    return true\nend\n\ncode_llvm(eq, Tuple{BluePrint, BluePrint})\ncode_llvm(eq2, Tuple{BluePrint, BluePrint})\ncode_llvm(eq3, Tuple{BluePrint, BluePrint})```","user":"U67D54KS8","ts":"1617048179.078000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TFy","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/rust-lang/rust/issues/83623"},{"type":"text","text":" is kinda interesting. Doesn't seem like we get the good code with any of the versions:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"struct BluePrint\n    fuel_tank_size::UInt16\n    payload::UInt16\n    wheel_diameter::Float32\n    wheel_width::Float32\n    storage::UInt32\nend\n\neq(a::BluePrint, b::BluePrint) = a == b\n\neq2(a::BluePrint, b::BluePrint) =\n    a.fuel_tank_size == b.fuel_tank_size &&\n    a.payload == b.payload &&\n    a.wheel_diameter == b.wheel_diameter &&\n    a.wheel_width == b.wheel_width &&\n    a.storage == b.storage\n\nfunction eq3(a::BluePrint, b::BluePrint)\n    if a.fuel_tank_size != b.fuel_tank_size\n        return false\n    end\n    if a.payload != b.payload\n        return false\n    end\n    if a.wheel_diameter != b.wheel_diameter\n        return false\n    end\n    if a.wheel_width != b.wheel_width\n        return false\n    end\n    if a.storage != b.storage\n        return false\n    end\n    return true\nend\n\ncode_llvm(eq, Tuple{BluePrint, BluePrint})\ncode_llvm(eq2, Tuple{BluePrint, BluePrint})\ncode_llvm(eq3, Tuple{BluePrint, BluePrint})"}]}]}],"thread_ts":"1617048179.078000","reply_count":4,"reply_users_count":3,"latest_reply":"1617052533.079200","reply_users":["U66SR8JHX","USU9FRPEU","U67D54KS8"],"is_locked":false,"subscribed":false,"reactions":[{"name":"open_mouth","users":["U680THK2S","U66SR8JHX"],"count":2},{"name":"llvm","users":["U66SR8JHX"],"count":1}]},{"client_msg_id":"5fb4b0ab-fc9b-4d02-911f-2152732d7986","type":"message","text":"Does this works better?\n```using StaticArrays\n\nfunction eq4(a::BluePrint, b::BluePrint)\n    T = NTuple{sizeof(BluePrint), UInt8}\n    reinterpret(T, SVector(a)) == reinterpret(T, SVector(b))\nend```","user":"U66SR8JHX","ts":"1617051872.078600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I6GZY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does this works better?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using StaticArrays\n\nfunction eq4(a::BluePrint, b::BluePrint)\n    T = NTuple{sizeof(BluePrint), UInt8}\n    reinterpret(T, SVector(a)) == reinterpret(T, SVector(b))\nend"}]}]}],"thread_ts":"1617048179.078000","parent_user_id":"U67D54KS8"},{"client_msg_id":"dc488ca2-ed52-4292-94a2-f5027cd0bac8","type":"message","text":"I wonder if we go back to a Julia version before LLVM 9, do we get better output?","user":"USU9FRPEU","ts":"1617052386.078800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jl4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wonder if we go back to a Julia version before LLVM 9, do we get better output?"}]}]}],"thread_ts":"1617048179.078000","parent_user_id":"U67D54KS8"},{"client_msg_id":"9fd25d89-650e-49b4-a305-8edefdc52b9f","type":"message","text":"I think I tried it and it didn't work well","user":"U67D54KS8","ts":"1617052396.079000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Sng","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think I tried it and it didn't work well"}]}]}],"thread_ts":"1617048179.078000","parent_user_id":"U67D54KS8"},{"client_msg_id":"49789af2-32d9-4d62-a93d-bb936233a46d","type":"message","text":"<@U66SR8JHX> The `==` doesn't seem to inline and it doesn't seem to give good code either","user":"U67D54KS8","ts":"1617052533.079200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Xkc","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U66SR8JHX"},{"type":"text","text":" The "},{"type":"text","text":"==","style":{"code":true}},{"type":"text","text":" doesn't seem to inline and it doesn't seem to give good code either"}]}]}],"thread_ts":"1617048179.078000","parent_user_id":"U67D54KS8"}]