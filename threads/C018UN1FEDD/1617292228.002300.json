[{"client_msg_id":"27ab4b29-321c-4843-be78-fdc446a52181","type":"message","text":"Hey! We (<http://leuko.com|leuko.com>) are in search of mocking libraries to help us write tests. We haven't found anything that fully meets our needs yet. What we're looking for is\n- Flexible interaction-based testing\n- Flexible verification, argument matchers\n- Extensible argument matching framework\n\nDoes anything public exist that covers this, beyond SimpleMock.jl and Mocking.jl?\nSimpleMock.jl and Mocking.jl fall short for us because either they 1) don't have all of the features above, 2) require editing the source code, 3) are slow (Cassette.jl), 4) don't work with Julia 1.6, or some combination of those.\nOtherwise, are there other people that need such tooling? Perhaps it could be a collaborative effort?","user":"U01537M2E9W","ts":"1617292228.002300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Lfy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey! We ("},{"type":"link","url":"http://leuko.com","text":"leuko.com"},{"type":"text","text":") are in search of mocking libraries to help us write tests. We haven't found anything that fully meets our needs yet. What we're looking for is\n- Flexible interaction-based testing\n- Flexible verification, argument matchers\n- Extensible argument matching framework\n\nDoes anything public exist that covers this, beyond SimpleMock.jl and Mocking.jl?\nSimpleMock.jl and Mocking.jl fall short for us because either they 1) don't have all of the features above, 2) require editing the source code, 3) are slow (Cassette.jl), 4) don't work with Julia 1.6, or some combination of those.\nOtherwise, are there other people that need such tooling? Perhaps it could be a collaborative effort?"}]}]}],"thread_ts":"1617292228.002300","reply_count":4,"reply_users_count":2,"latest_reply":"1617293557.003100","reply_users":["U6NFPDBV1","U8MPCDJAY"],"is_locked":false,"subscribed":false},{"client_msg_id":"62657aca-7972-4a19-9d11-a9ea9e68ab34","type":"message","text":"(SimpleMock dev here) if someone can think of a way to replace method calls without Cassette and without peppering the source code with macro calls, I'm all ears. I think maybe it's possible in 1.6 with the AbstractInterpreter interface but I've not spent any time looking into it yet.","user":"U6NFPDBV1","ts":"1617292879.002400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NEjx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(SimpleMock dev here) if someone can think of a way to replace method calls without Cassette and without peppering the source code with macro calls, I'm all ears. I think maybe it's possible in 1.6 with the AbstractInterpreter interface but I've not spent any time looking into it yet."}]}]}],"thread_ts":"1617292228.002300","parent_user_id":"U01537M2E9W"},{"client_msg_id":"92787146-3db1-4b35-912f-d4bd67e20442","type":"message","text":"Could it be done by filtering the AST? I don’t know how cassette works tbh","user":"U8MPCDJAY","ts":"1617293286.002600","team":"T68168MUP","edited":{"user":"U8MPCDJAY","ts":"1617293331.000000"},"blocks":[{"type":"rich_text","block_id":"XRczG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Could it be done by filtering the AST? I don’t know how cassette works tbh"}]}]}],"thread_ts":"1617292228.002300","parent_user_id":"U01537M2E9W"},{"client_msg_id":"577c55ff-c3e3-4bfc-bfd8-b6a8c619734c","type":"message","text":"Mocking isn't really effective if you can only mess with the AST, since you usually want to mock something nested (e.g. `foo` calls `bar` and you want to mock out `bar` when calling `foo`, but `bar` never actually appears in your source code)","user":"U6NFPDBV1","ts":"1617293522.002900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"raSdK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Mocking isn't really effective if you can only mess with the AST, since you usually want to mock something nested (e.g. "},{"type":"text","text":"foo","style":{"code":true}},{"type":"text","text":" calls "},{"type":"text","text":"bar","style":{"code":true}},{"type":"text","text":" and you want to mock out "},{"type":"text","text":"bar","style":{"code":true}},{"type":"text","text":" when calling "},{"type":"text","text":"foo","style":{"code":true}},{"type":"text","text":", but "},{"type":"text","text":"bar","style":{"code":true}},{"type":"text","text":" never actually appears in your source code)"}]}]}],"thread_ts":"1617292228.002300","parent_user_id":"U01537M2E9W"},{"client_msg_id":"806e51ba-ab2c-4779-aa69-71c79f240d46","type":"message","text":"ok yeah","user":"U8MPCDJAY","ts":"1617293557.003100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"o3OTx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ok yeah"}]}]}],"thread_ts":"1617292228.002300","parent_user_id":"U01537M2E9W"}]