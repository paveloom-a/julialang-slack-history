[{"client_msg_id":"a8e7b2c4-655e-497d-9954-778cb3ce8a7d","type":"message","text":"I don't get that sentiment. I see it often, but I don't understand what exactly they mean...\n• Do they mean that Julia's JIT + big runtime is unacceptable for phones, systems software and games, so there must only be scientific computing left?\n• Do they mean the ecosystem only have cool packages for science, so it's not worth learning?\n• Do they mean the compiler is built to only do science stuff? (How would that even work)","user":"U7HAYKY9X","ts":"1609799550.300800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HO7H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't get that sentiment. I see it often, but I don't understand what exactly they mean...\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do they mean that Julia's JIT + big runtime is unacceptable for phones, systems software and games, so there must only be scientific computing left?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Do they mean the ecosystem only have cool packages for science, so it's not worth learning?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Do they mean the compiler is built to only do science stuff? (How would that even work)"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1609799550.300800","reply_count":15,"reply_users_count":5,"latest_reply":"1609802873.306900","reply_users":["UDGT4PM41","U7HAYKY9X","U6NFPDBV1","U0179G7FG4F","UPUBAM63X"],"subscribed":false},{"type":"message","subtype":"thread_broadcast","text":"I've heard fragments of all three.... along with the way code is organized (module system or misunderstanding MD)","user":"UDGT4PM41","ts":"1609799636.301100","thread_ts":"1609799550.300800","root":{"client_msg_id":"a8e7b2c4-655e-497d-9954-778cb3ce8a7d","type":"message","text":"I don't get that sentiment. I see it often, but I don't understand what exactly they mean...\n• Do they mean that Julia's JIT + big runtime is unacceptable for phones, systems software and games, so there must only be scientific computing left?\n• Do they mean the ecosystem only have cool packages for science, so it's not worth learning?\n• Do they mean the compiler is built to only do science stuff? (How would that even work)","user":"U7HAYKY9X","ts":"1609799550.300800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HO7H","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't get that sentiment. I see it often, but I don't understand what exactly they mean...\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do they mean that Julia's JIT + big runtime is unacceptable for phones, systems software and games, so there must only be scientific computing left?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Do they mean the ecosystem only have cool packages for science, so it's not worth learning?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Do they mean the compiler is built to only do science stuff? (How would that even work)"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1609799550.300800","reply_count":15,"reply_users_count":5,"latest_reply":"1609802873.306900","reply_users":["UDGT4PM41","U7HAYKY9X","U6NFPDBV1","U0179G7FG4F","UPUBAM63X"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"fMq69","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've heard fragments of all three.... along with the way code is organized (module system or misunderstanding MD)"}]}]}],"client_msg_id":"63e53169-7011-4321-bfcb-930656db8460"},{"client_msg_id":"dcc38fdb-8a02-43ae-9cdf-764cbce04904","type":"message","text":"The first is somewhat correct - there's also web development, but I can't think of other good use cases given Julia's latency, unpredictability and memory usage.\nThe second is not quite true, but almost. The third, not so much though","user":"U7HAYKY9X","ts":"1609799788.301400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"h9l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The first is somewhat correct - there's also web development, but I can't think of other good use cases given Julia's latency, unpredictability and memory usage.\nThe second is not quite true, but almost. The third, not so much though"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"9a5a8d93-d219-45b4-b894-2edb4e31dbd6","type":"message","text":"&gt; along with the way code is organized (module system or misunderstanding MD)\nWell, I don't think it's an uncommon opinion that our module system leaves something to be desired. At least that's how I feel, and I know a lot of people prefer more deterministic module organization the way Python, Rust, Elixir, and others do it","user":"U6NFPDBV1","ts":"1609799813.301600","team":"T68168MUP","edited":{"user":"U6NFPDBV1","ts":"1609799817.000000"},"blocks":[{"type":"rich_text","block_id":"nNq","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"along with the way code is organized (module system or misunderstanding MD)"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Well, I don't think it's an uncommon opinion that our module system leaves something to be desired. At least that's how I feel, and I know a lot of people prefer more deterministic module organization the way Python, Rust, Elixir, and others do it"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"d8819e8d-c271-433f-bec4-ec16bde92f9b","type":"message","text":"I think part of it is that Julia's string processing (especially unicode) is kind of clunky and un-intuitive.","user":"U0179G7FG4F","ts":"1609799815.301800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JgIT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think part of it is that Julia's string processing (especially unicode) is kind of clunky and un-intuitive."}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"7ae17d0a-2473-48a7-acad-143e651b1526","type":"message","text":"I understand why Julia chose UTF-8+byte indexing, but it is way harder to work with than python's choice of UTF-32 and indexing just works","user":"U0179G7FG4F","ts":"1609799932.302100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fAKP4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I understand why Julia chose UTF-8+byte indexing, but it is way harder to work with than python's choice of UTF-32 and indexing just works"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"a6a3e3ca-4f67-41cc-8654-980fefa4e902","type":"message","text":"4x memory consumption for ASCII, though :grimacing: ... But a 32-bit string type should be really easy to make","user":"U7HAYKY9X","ts":"1609800063.302300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Unw1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"4x memory consumption for ASCII, though "},{"type":"emoji","name":"grimacing"},{"type":"text","text":" ... But a 32-bit string type should be really easy to make"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"94f4c752-e928-402e-ac2d-0130e6b14771","type":"message","text":"yeah, I'm mostly with you, 32 bit string type is easy, and you could even make it easy to use (eg `g\"UTF-32 String\"`) but strings not behaving the way people expect is an issue that inevitably will mainly affect new users","user":"U0179G7FG4F","ts":"1609800187.302500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"euCr/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yeah, I'm mostly with you, 32 bit string type is easy, and you could even make it easy to use (eg "},{"type":"text","text":"g\"UTF-32 String\"","style":{"code":true}},{"type":"text","text":") but strings not behaving the way people expect is an issue that inevitably will mainly affect new users"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"066d81b1-0c0d-4fb1-b95a-5ca983850528","type":"message","text":"unpredictability in what sense <@U7HAYKY9X>","user":"UDGT4PM41","ts":"1609800275.302700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9WZx=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"unpredictability in what sense "},{"type":"user","user_id":"U7HAYKY9X"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"c89441aa-9c32-495e-a96b-23e50707370c","type":"message","text":"If Julia only exported an arbitrary precision rational number by default no one in the hpc space would have used it and built the great ecosystem we have today","user":"U0179G7FG4F","ts":"1609800306.302900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sA8Za","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If Julia only exported an arbitrary precision rational number by default no one in the hpc space would have used it and built the great ecosystem we have today"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"79f3535b-3bd2-454f-9cf0-d6f9f9d2cb25","type":"message","text":"<@UDGT4PM41> you never know when you hit a previously uncompiled path, or when GC kicks in, and having code run and pass tests is not a guarantee that inference worked out. In contrast, having inferred code suddenly not infer in a static language is a breaking change, so you don't get those regressions","user":"U7HAYKY9X","ts":"1609800373.303100","team":"T68168MUP","edited":{"user":"U7HAYKY9X","ts":"1609800441.000000"},"blocks":[{"type":"rich_text","block_id":"6dG","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDGT4PM41"},{"type":"text","text":" you never know when you hit a previously uncompiled path, or when GC kicks in, and having code run and pass tests is not a guarantee that inference worked out. In contrast, having inferred code suddenly not infer in a static language is a breaking change, so you don't get those regressions"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"ed98591e-a28e-4725-bb14-572fa7124e76","type":"message","text":"Yea,  I guess you can't rely on Julia to be fast everywhere, or have predictable latency, especially in larger codebases. I really hope we'll get better tooling for that at some point, with opt in restricted semantics.","user":"UDGT4PM41","ts":"1609800781.306000","team":"T68168MUP","edited":{"user":"UDGT4PM41","ts":"1609800812.000000"},"blocks":[{"type":"rich_text","block_id":"R1/N","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea,  I guess you can't rely on Julia to be fast everywhere, or have predictable latency, especially in larger codebases. I really hope we'll get better tooling for that at some point, with opt in restricted semantics."}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"2eefe040-6b23-4217-ba83-ce980e6643d1","type":"message","text":"<@UH1BLK14H> I wonder if that's in scope for jet.jl?","user":"UDGT4PM41","ts":"1609800896.306300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8q3ve","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UH1BLK14H"},{"type":"text","text":" I wonder if that's in scope for jet.jl?"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"c68d9703-e82c-41aa-8ed9-5db882c85c6f","type":"message","text":"it would be really interesting to make a cli option for Julia that errors whenever inference finds a union of non-singleton types","user":"U0179G7FG4F","ts":"1609801155.306500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+P6e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it would be really interesting to make a cli option for Julia that errors whenever inference finds a union of non-singleton types"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"53cd9fe5-19ba-4381-8c3a-c978336edbea","type":"message","text":"So Julia's Runtime takes what 250mb RAM? That's a lot. It wasn't super long ago that Consider an entire OS (Android) ran on a minimum of 512mb.\nJuxtapose against python(32?64mb?). The java runtime is 128mb. Less than matlab or mathematica though so thats good,","user":"UPUBAM63X","ts":"1609802797.306700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3FC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So Julia's Runtime takes what 250mb RAM? That's a lot. It wasn't super long ago that Consider an entire OS (Android) ran on a minimum of 512mb.\nJuxtapose against python(32?64mb?). The java runtime is 128mb. Less than matlab or mathematica though so thats good,"}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"},{"client_msg_id":"c69f3efa-fc55-4279-b30f-733b0b5b85da","type":"message","text":"you can use Julia for other stuff, but, it's a dynamic language and it's runtime isn't mainstream. So if you want lean and mean - julia just isn't the right tool.","user":"UPUBAM63X","ts":"1609802873.306900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TUI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can use Julia for other stuff, but, it's a dynamic language and it's runtime isn't mainstream. So if you want lean and mean - julia just isn't the right tool."}]}]}],"thread_ts":"1609799550.300800","parent_user_id":"U7HAYKY9X"}]