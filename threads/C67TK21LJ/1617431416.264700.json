[{"client_msg_id":"77b823f9-1f3e-416f-ab44-4271beed874d","type":"message","text":"Ambiguities\n```Ambiguity #1\nreduce(op::O, A::StrideArraysCore.AbstractStrideArray{T}) where {O, T&lt;:Number} in StrideArrays at /home/chriselrod/.julia/dev/StrideArrays/src/miscellaneous.jl:23\nreduce(::typeof(vcat), A::AbstractVector{&lt;:AbstractVecOrMat}) in Base at abstractarray.jl:1570\n\nAmbiguity #2\nreduce(op::O, A::StrideArraysCore.AbstractStrideArray{T}) where {O, T&lt;:Number} in StrideArrays at /home/chriselrod/.julia/dev/StrideArrays/src/miscellaneous.jl:23\nreduce(::typeof(hcat), A::AbstractVector{&lt;:AbstractVecOrMat}) in Base at abstractarray.jl:1573```\n??? (Isn't `Number` and `AbstractVecOrMat` mutually exclusive?)","user":"UAUPJLBQX","ts":"1617431416.264700","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1617447103.000000"},"blocks":[{"type":"rich_text","block_id":"PEzl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ambiguities\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"Ambiguity #1\nreduce(op::O, A::StrideArraysCore.AbstractStrideArray{T}) where {O, T<:Number} in StrideArrays at /home/chriselrod/.julia/dev/StrideArrays/src/miscellaneous.jl:23\nreduce(::typeof(vcat), A::AbstractVector{<:AbstractVecOrMat}) in Base at abstractarray.jl:1570\n\nAmbiguity #2\nreduce(op::O, A::StrideArraysCore.AbstractStrideArray{T}) where {O, T<:Number} in StrideArrays at /home/chriselrod/.julia/dev/StrideArrays/src/miscellaneous.jl:23\nreduce(::typeof(hcat), A::AbstractVector{<:AbstractVecOrMat}) in Base at abstractarray.jl:1573"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"??? (Isn't "},{"type":"text","text":"Number","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"AbstractVecOrMat","style":{"code":true}},{"type":"text","text":" mutually exclusive?)"}]}]}],"thread_ts":"1617431416.264700","reply_count":4,"reply_users_count":3,"latest_reply":"1617646214.274600","reply_users":["U9AHT3YM7","USU9FRPEU","UAUPJLBQX"],"is_locked":false,"subscribed":false},{"client_msg_id":"e0015ae6-cbb4-4e13-b46a-996dbdb3701e","type":"message","text":"Technically they are not:\n```julia&gt; f(::AbstractArray{&lt;:Number}) = 10\nf (generic function with 2 methods)\n\njulia&gt; f(::AbstractArray{&lt;:AbstractArray}) = 11\nf (generic function with 2 methods)\n\njulia&gt; f(Union{}[])\nERROR: MethodError: f(::Vector{Union{}}) is ambiguous. Candidates:\n  f(::AbstractArray{var\"#s1\", N} where {var\"#s1\"&lt;:Number, N}) in Main at REPL[11]:1\n  f(::AbstractArray{var\"#s1\", N} where {var\"#s1\"&lt;:AbstractArray, N}) in Main at REPL[12]:1\nPossible fix, define\n  f(::AbstractArray{Union{}, N} where N)\nStacktrace:\n [1] top-level scope\n   @ REPL[13]:1```\nbut I don't know if there are any non-pathological examples where that ambiguity can occur.","user":"U9AHT3YM7","ts":"1617451163.265700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"E7qg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Technically they are not:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> f(::AbstractArray{<:Number}) = 10\nf (generic function with 2 methods)\n\njulia> f(::AbstractArray{<:AbstractArray}) = 11\nf (generic function with 2 methods)\n\njulia> f(Union{}[])\nERROR: MethodError: f(::Vector{Union{}}) is ambiguous. Candidates:\n  f(::AbstractArray{var\"#s1\", N} where {var\"#s1\"<:Number, N}) in Main at REPL[11]:1\n  f(::AbstractArray{var\"#s1\", N} where {var\"#s1\"<:AbstractArray, N}) in Main at REPL[12]:1\nPossible fix, define\n  f(::AbstractArray{Union{}, N} where N)\nStacktrace:\n [1] top-level scope\n   @ REPL[13]:1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"but I don't know if there are any non-pathological examples where that ambiguity can occur."}]}]}],"thread_ts":"1617431416.264700","parent_user_id":"UAUPJLBQX","reactions":[{"name":"today-i-learned","users":["UAUPJLBQX","U6795JH6H"],"count":2}]},{"client_msg_id":"b10440e6-7cde-431f-8780-5c85b681c819","type":"message","text":"```julia&gt; typeintersect(AbstractArray{&lt;:Number}, AbstractArray{&lt;:AbstractVecOrMat})\nAbstractArray{Union{}, N} where N\n\njulia&gt; subtypes(AbstractArray{Union{}, N} where N)\n25-element Vector{Any}:\n AbstractRange{Union{}}\n AbstractWeights{S, Union{}, V} where {S&lt;:Real, V&lt;:AbstractVector{Union{}}}\n Base.LogicalIndex{Union{}, A} where A&lt;:(AbstractArray{Bool, N} where N)\n Base.ReinterpretArray{Union{}, N, S, A, IsReshaped} where {N, S, A&lt;:(AbstractArray{S, N} where N), IsReshaped}\n Base.ReshapedArray{Union{}, N, P, MI} where {N, P&lt;:AbstractArray, MI&lt;:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N}}\n Core.Compiler.AbstractRange{Union{}}\n DataStructures.CircularBuffer{Union{}}\n DenseArray{Union{}, N} where N\n LinearAlgebra.AbstractQ{Union{}}\n LinearAlgebra.AbstractTriangular{Union{}, S} where S&lt;:(AbstractMatrix{T} where T)\n LinearAlgebra.Adjoint{Union{}, S} where S\n LinearAlgebra.Bidiagonal{Union{}, V} where V&lt;:AbstractVector{Union{}}\n LinearAlgebra.Diagonal{Union{}, V} where V&lt;:AbstractVector{Union{}}\n LinearAlgebra.Hermitian{Union{}, S} where S&lt;:(AbstractMatrix{var\"#s832\"} where var\"#s832\"&lt;:Union{})\n LinearAlgebra.LQPackedQ{Union{}, S} where S&lt;:(AbstractMatrix{T} where T)\n LinearAlgebra.SymTridiagonal{Union{}, V} where V&lt;:AbstractVector{Union{}}\n LinearAlgebra.Symmetric{Union{}, S} where S&lt;:(AbstractMatrix{var\"#s832\"} where var\"#s832\"&lt;:Union{})\n LinearAlgebra.Transpose{Union{}, S} where S\n LinearAlgebra.Tridiagonal{Union{}, V} where V&lt;:AbstractVector{Union{}}\n LinearAlgebra.UpperHessenberg{Union{}, S} where S&lt;:AbstractMatrix{Union{}}\n PermutedDimsArray{Union{}, N, perm, iperm, AA} where {N, perm, iperm, AA&lt;:AbstractArray}\n SparseArrays.AbstractSparseArray{Union{}, Ti, N} where {Ti, N}\n SubArray{Union{}, N, P, I, L} where {N, P, I, L}\n SuiteSparse.CHOLMOD.FactorComponent{Union{}, S} where S\n Test.GenericArray{Union{}, N} where N```","user":"USU9FRPEU","ts":"1617637846.273400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"abIMm","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> typeintersect(AbstractArray{<:Number}, AbstractArray{<:AbstractVecOrMat})\nAbstractArray{Union{}, N} where N\n\njulia> subtypes(AbstractArray{Union{}, N} where N)\n25-element Vector{Any}:\n AbstractRange{Union{}}\n AbstractWeights{S, Union{}, V} where {S<:Real, V<:AbstractVector{Union{}}}\n Base.LogicalIndex{Union{}, A} where A<:(AbstractArray{Bool, N} where N)\n Base.ReinterpretArray{Union{}, N, S, A, IsReshaped} where {N, S, A<:(AbstractArray{S, N} where N), IsReshaped}\n Base.ReshapedArray{Union{}, N, P, MI} where {N, P<:AbstractArray, MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, N} where N}}\n Core.Compiler.AbstractRange{Union{}}\n DataStructures.CircularBuffer{Union{}}\n DenseArray{Union{}, N} where N\n LinearAlgebra.AbstractQ{Union{}}\n LinearAlgebra.AbstractTriangular{Union{}, S} where S<:(AbstractMatrix{T} where T)\n LinearAlgebra.Adjoint{Union{}, S} where S\n LinearAlgebra.Bidiagonal{Union{}, V} where V<:AbstractVector{Union{}}\n LinearAlgebra.Diagonal{Union{}, V} where V<:AbstractVector{Union{}}\n LinearAlgebra.Hermitian{Union{}, S} where S<:(AbstractMatrix{var\"#s832\"} where var\"#s832\"<:Union{})\n LinearAlgebra.LQPackedQ{Union{}, S} where S<:(AbstractMatrix{T} where T)\n LinearAlgebra.SymTridiagonal{Union{}, V} where V<:AbstractVector{Union{}}\n LinearAlgebra.Symmetric{Union{}, S} where S<:(AbstractMatrix{var\"#s832\"} where var\"#s832\"<:Union{})\n LinearAlgebra.Transpose{Union{}, S} where S\n LinearAlgebra.Tridiagonal{Union{}, V} where V<:AbstractVector{Union{}}\n LinearAlgebra.UpperHessenberg{Union{}, S} where S<:AbstractMatrix{Union{}}\n PermutedDimsArray{Union{}, N, perm, iperm, AA} where {N, perm, iperm, AA<:AbstractArray}\n SparseArrays.AbstractSparseArray{Union{}, Ti, N} where {Ti, N}\n SubArray{Union{}, N, P, I, L} where {N, P, I, L}\n SuiteSparse.CHOLMOD.FactorComponent{Union{}, S} where S\n Test.GenericArray{Union{}, N} where N"}]}]}],"thread_ts":"1617431416.264700","parent_user_id":"UAUPJLBQX","reactions":[{"name":"+1","users":["UAUPJLBQX"],"count":1}]},{"client_msg_id":"903357cd-5cb2-44df-aa69-ad0353d876c7","type":"message","text":"Thanks, seems like I should've known `typeintersect`. That'll come in handy.","user":"UAUPJLBQX","ts":"1617639445.273800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"52tO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, seems like I should've known "},{"type":"text","text":"typeintersect","style":{"code":true}},{"type":"text","text":". That'll come in handy."}]}]}],"thread_ts":"1617431416.264700","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"9f9c7544-c8c0-4093-97ac-0d61ff4f802a","type":"message","text":"I'm still not convinced any of this makes any sense. Is there really a intersection if the parametric type is an empty Union? Maybe I'm missing something.","user":"USU9FRPEU","ts":"1617646214.274600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=0Xf+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm still not convinced any of this makes any sense. Is there really a intersection if the parametric type is an empty Union? Maybe I'm missing something."}]}]}],"thread_ts":"1617431416.264700","parent_user_id":"UAUPJLBQX"}]