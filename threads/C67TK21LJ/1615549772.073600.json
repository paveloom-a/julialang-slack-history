[{"client_msg_id":"46d29fb8-9f07-442c-a43e-51ad96a6cd67","type":"message","text":"We should make it possible to overload what any thing like `+=` or `*=` does.\nLike i would like it if  ``x ∪= Set([1,2,3])`` would call `union!`","user":"U6A936746","ts":"1615549772.073600","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1615549793.000000"},"blocks":[{"type":"rich_text","block_id":"eSEH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We should make it possible to overload what any thing like "},{"type":"text","text":"+=","style":{"code":true}},{"type":"text","text":" or "},{"type":"text","text":"*=","style":{"code":true}},{"type":"text","text":" does.\nLike i would like it if  `"},{"type":"text","text":"x ∪= Set([1,2,3])","style":{"code":true}},{"type":"text","text":"` would call "},{"type":"text","text":"union!","style":{"code":true}}]}]}],"thread_ts":"1615549772.073600","reply_count":22,"reply_users_count":4,"latest_reply":"1615991443.006500","reply_users":["UM30MT6RF","U6A936746","U680T6770","U6740K1SP"],"subscribed":false,"reactions":[{"name":"100","users":["ULG5V164A","UM8JUNJG7","USBKT1275"],"count":3},{"name":"fearful","users":["U695B1S2X"],"count":1}]},{"client_msg_id":"25dabf52-73be-4c66-8554-1f30c0784baa","type":"message","text":"I am not sure this is worth it. I think it would be confusing if `x=` would sometimes be mutating and sometimes not. The current behavior seems the most transparent to me.","user":"UM30MT6RF","ts":"1615550031.073900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wR3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am not sure this is worth it. I think it would be confusing if "},{"type":"text","text":"x=","style":{"code":true}},{"type":"text","text":" would sometimes be mutating and sometimes not. The current behavior seems the most transparent to me."}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"89611d8d-bd9d-4772-bf35-ac3d59ba2153","type":"message","text":"Well then i would like ```x ∪= Set([1,2,3])`  to call `x = x ∪ Set([1,2,3])`  then","user":"U6A936746","ts":"1615550071.074100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ONC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well then i would like ``"},{"type":"text","text":"x ∪= Set([1,2,3])","style":{"code":true}},{"type":"text","text":"  to call "},{"type":"text","text":"x = x ∪ Set([1,2,3])","style":{"code":true}},{"type":"text","text":"  then"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746","reactions":[{"name":"+1","users":["U67G3QRJM","ULG5V164A","U6795JH6H","U66QZ3QF3"],"count":4}]},{"client_msg_id":"358acfd4-e755-4f53-a1a2-8bbdab0685ed","type":"message","text":"Yes, I think we should be able to just do this for all infix operators in the parser (well, `:`would be an exception)","user":"UM30MT6RF","ts":"1615550293.074300","team":"T68168MUP","edited":{"user":"UM30MT6RF","ts":"1615550303.000000"},"blocks":[{"type":"rich_text","block_id":"ruQ+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, I think we should be able to just do this for all infix operators in the parser (well, "},{"type":"text","text":":","style":{"code":true}},{"type":"text","text":"would be an exception)"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746","reactions":[{"name":"+1","users":["U6740K1SP"],"count":1}]},{"client_msg_id":"7771acfa-130f-4954-a5ef-00dffee28e6f","type":"message","text":"The latter would probably be accepted as an extension of the ones already defined in <https://github.com/JuliaLang/julia/blob/master/src/julia-parser.scm#L7>","user":"U680T6770","ts":"1615550390.074600","team":"T68168MUP","edited":{"user":"U680T6770","ts":"1615550403.000000"},"blocks":[{"type":"rich_text","block_id":"w/l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The latter would probably be accepted as an extension of the ones already defined in "},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/master/src/julia-parser.scm#L7"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"83932a6f-ac5a-4eec-94dc-c2d40ea62a45","type":"message","text":"The first proposal has been discussed extensively.","user":"U680T6770","ts":"1615550424.074900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8OVhV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The first proposal has been discussed extensively."}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"59085f6c-4da3-47ab-b8a1-09186ca8b60d","type":"message","text":"I was surprised that wasn’t the case when I looked at the `:=` PR to see if anything else needed special casing","user":"U6740K1SP","ts":"1615558729.075500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NjBb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was surprised that wasn’t the case when I looked at the "},{"type":"text","text":":=","style":{"code":true}},{"type":"text","text":" PR to see if anything else needed special casing"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"caecdca8-777a-4781-9cf6-63758259fbac","type":"message","text":"(“that” being the supporting all infix operators as updating ones)","user":"U6740K1SP","ts":"1615558773.075700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SWJ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(“that” being the supporting all infix operators as updating ones)"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"34744686-8470-4dfc-86e8-a8df3ff114a9","type":"message","text":"::TerribleIdea::\n\nYou know: the following sytax is currently a parser error:\n\n``x bar= y``\n\nWe could make that do `x = bar(x, y)`\n\nYou can have infix, but only if also doing assignment","user":"U6A936746","ts":"1615572898.076400","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1615572956.000000"},"blocks":[{"type":"rich_text","block_id":"vizW8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"::TerribleIdea::\n\nYou know: the following sytax is currently a parser error:\n\n`"},{"type":"text","text":"x bar= y","style":{"code":true}},{"type":"text","text":"`\n\nWe could make that do "},{"type":"text","text":"x = bar(x, y)","style":{"code":true}},{"type":"text","text":"\n\nYou can have infix, but only if also doing assignment"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746","reactions":[{"name":"thinking_face","users":["UM30MT6RF"],"count":1},{"name":"vomiting_statue_of_liberty","users":["U6A936746"],"count":1}]},{"client_msg_id":"426ce726-0bdb-432b-83e6-92fc7a8e5eab","type":"message","text":"Would cause some breakage in macros, but we already have this whitespace sensitivity in other places, so that part might be ok. Visually looks a bit odd to me though.","user":"UM30MT6RF","ts":"1615573163.077000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rFa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would cause some breakage in macros, but we already have this whitespace sensitivity in other places, so that part might be ok. Visually looks a bit odd to me though."}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"6ae0205f-66f1-4dd5-8e1c-0759e05bd026","type":"message","text":"Would you mind opening an issue for implementing `x=` for more infix operators? Looking at the list, I don't think we can do this for all of them, but I think all with plus, times and power precedence would make sense","user":"UM30MT6RF","ts":"1615573328.077200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U=pw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would you mind opening an issue for implementing "},{"type":"text","text":"x=","style":{"code":true}},{"type":"text","text":" for more infix operators? Looking at the list, I don't think we can do this for all of them, but I think all with plus, times and power precedence would make sense"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"a7894e42-edd9-4568-a643-3afbceef54a7","type":"message","text":"Will do once github stops being broken\n<https://www.githubstatus.com/>","user":"U6A936746","ts":"1615573799.077500","team":"T68168MUP","attachments":[{"title":"GitHub Status","title_link":"https://www.githubstatus.com/","text":"Welcome to GitHub's home for real-time and historical data on system performance.","fallback":"GitHub Status","from_url":"https://www.githubstatus.com/","service_icon":"http://dka575ofm4ao0.cloudfront.net/pages-favicon_logos/original/36420/akacZEQQfOBdc7ftyxJt","service_name":"githubstatus.com","id":1,"original_url":"https://www.githubstatus.com/"}],"blocks":[{"type":"rich_text","block_id":"YafjX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Will do once github stops being broken\n"},{"type":"link","url":"https://www.githubstatus.com/"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746","reactions":[{"name":"github_unicorn","users":["UM30MT6RF","U6740K1SP"],"count":2}]},{"client_msg_id":"92bc198a-dfb3-45b1-9646-f0b52b3febe7","type":"message","text":"GitHub stopped being broken\n<https://github.com/JuliaLang/julia/issues/40079>","user":"U6A936746","ts":"1615984961.004200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eMW8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"GitHub stopped being broken\n"},{"type":"link","url":"https://github.com/JuliaLang/julia/issues/40079"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"1f1aa4c0-c7b0-4377-97d5-ffcda007734b","type":"message","text":"What do we think of `x |&gt;= f` for assigning function application?","user":"UM30MT6RF","ts":"1615986351.004400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GBJ7p","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What do we think of "},{"type":"text","text":"x |>= f","style":{"code":true}},{"type":"text","text":" for assigning function application?"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"75aea828-9957-48f7-abe2-d116dcdae728","type":"message","text":"I marginally hate it, but it is internally consistent. that should by the lowering rule discussed become:\n`x = |&gt;(x, f)` which is `x = f(x)`","user":"U6A936746","ts":"1615986632.004600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Iun1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I marginally hate it, but it is internally consistent. that should by the lowering rule discussed become:\n"},{"type":"text","text":"x = |>(x, f)","style":{"code":true}},{"type":"text","text":" which is "},{"type":"text","text":"x = f(x)","style":{"code":true}}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"134333fc-5899-4ad9-95a8-42eb701c1f81","type":"message","text":"Yes, that's what I meant. The question is just whether we want to include pipes in the operators that can have an assignment version.","user":"UM30MT6RF","ts":"1615986748.004800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"j3w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, that's what I meant. The question is just whether we want to include pipes in the operators that can have an assignment version."}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"21472fd5-70cc-4647-8203-5e691532fff0","type":"message","text":"Should `y in= xs` work?","user":"U6A936746","ts":"1615986784.005000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gLb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Should "},{"type":"text","text":"y in= xs","style":{"code":true}},{"type":"text","text":" work?"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"62dff464-af4b-489a-89a9-0dd959ff46de","type":"message","text":"Does `x &amp;&amp;= y` work?","user":"U6A936746","ts":"1615986805.005200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VgNq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Does "},{"type":"text","text":"x &&= y","style":{"code":true}},{"type":"text","text":" work?"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"d80e1a4c-fc23-4df9-af72-75ef3b88c175","type":"message","text":"I would probably leave these for now. `in` is also a relation and since we can't do this for other relations like `&gt;` I think this might be inconsistent.","user":"UM30MT6RF","ts":"1615987041.005400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zUYjc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would probably leave these for now. "},{"type":"text","text":"in","style":{"code":true}},{"type":"text","text":" is also a relation and since we can't do this for other relations like "},{"type":"text","text":">","style":{"code":true}},{"type":"text","text":" I think this might be inconsistent."}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"a5039d8c-39fd-49b6-9982-91839f989a66","type":"message","text":"Syntactic operators like `&amp;&amp;` also seem potentially problematic","user":"UM30MT6RF","ts":"1615987097.005600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uRVa6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Syntactic operators like "},{"type":"text","text":"&&","style":{"code":true}},{"type":"text","text":" also seem potentially problematic"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"c6d2f1f7-abe8-4a1d-9b75-d7213da9739c","type":"message","text":"Let's leave out all the multi-character cases for now?","user":"U6A936746","ts":"1615989331.005900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ou2L","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Let's leave out all the multi-character cases for now?"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"b964c0a4-cb9c-413f-bd12-5c980bd5ee15","type":"message","text":"`x (==)= y`","user":"U6A936746","ts":"1615990002.006100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"p7yvr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"x (==)= y","style":{"code":true}}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"},{"client_msg_id":"c8d8528e-be8d-4ad0-bb78-dd12988af9d9","type":"message","text":"No necessarily all multi-character ones, since we already have `&gt;&gt;=`, but definitely comparisons and probably arrows","user":"UM30MT6RF","ts":"1615991443.006500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aD6W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No necessarily all multi-character ones, since we already have "},{"type":"text","text":">>=","style":{"code":true}},{"type":"text","text":", but definitely comparisons and probably arrows"}]}]}],"thread_ts":"1615549772.073600","parent_user_id":"U6A936746"}]