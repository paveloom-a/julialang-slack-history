[{"client_msg_id":"dce514c4-5f65-4a5a-8868-d90fab820021","type":"message","text":"The use of `@pure` in base/irrationals.jl is pretty boarderline.\nIts well outside what is allowed by the `@pure` functions can’t call generic functions.\nIt also is really boarderline on the rule that all inputs should be so constrained that only know methods should be called (not user defined able methods). It makes it if you say that user can’t define methods on `Rational{T}` for their own type `T`.","user":"U6A936746","ts":"1608676887.119900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S/5K","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The use of "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":" in base/irrationals.jl is pretty boarderline.\nIts well outside what is allowed by the "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":" functions can’t call generic functions.\nIt also is really boarderline on the rule that all inputs should be so constrained that only know methods should be called (not user defined able methods). It makes it if you say that user can’t define methods on "},{"type":"text","text":"Rational{T}","style":{"code":true}},{"type":"text","text":" for their own type "},{"type":"text","text":"T","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1608676887.119900","reply_count":15,"reply_users_count":4,"latest_reply":"1609730262.286200","reply_users":["U0179G7FG4F","U6A936746","U68P09RFZ","U89GY9W1J"],"subscribed":false},{"client_msg_id":"cfdd759c-9eda-43c7-8e74-52684e799a0d","type":"message","text":"Is there any chance we could kill `@pure` and replace it with a version that people could actually use and not be wrong? (If we really need it, we could introduce a `@__DO_NOT_EVER_USE_PURE`)","user":"U0179G7FG4F","ts":"1608677356.122500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"29ZJj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there any chance we could kill "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":" and replace it with a version that people could actually use and not be wrong? (If we really need it, we could introduce a "},{"type":"text","text":"@__DO_NOT_EVER_USE_PURE","style":{"code":true}},{"type":"text","text":")"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"7e47a6d9-f8b6-44b9-bffd-0fb18f8e067a","type":"message","text":"I wish `@pure` had a scarier name, like `@mt_ignorant_nosides`\n(Method Table Ignorant, No side effects).","user":"U6A936746","ts":"1608677507.122800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fxq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wish "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":" had a scarier name, like "},{"type":"text","text":"@mt_ignorant_nosides","style":{"code":true}},{"type":"text","text":"\n(Method Table Ignorant, No side effects)."}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"3abc64dd-4aa9-41f9-95e7-e22804ec884f","type":"message","text":"&gt;  Is there any chance we could kill `@pure` and replace it with a version that people could actually use and not be wrong?\n&gt; (If we really need it, we could introduce a `@__DO_NOT_EVER_USE_PURE`)\nWe already have it, it is just normal functions.\nAnd the  `@__DO_NOT_EVER_USE_PURE`  is `@pure`\nthe times that someone needs `@pure` are so so rare.\nI would not be surprised if we can actually remove them from `base/irational.jl` now.","user":"U6A936746","ts":"1608677611.123000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KZR","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" Is there any chance we could kill "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":" and replace it with a version that people could actually use and not be wrong?\n(If we really need it, we could introduce a "},{"type":"text","text":"@__DO_NOT_EVER_USE_PURE","style":{"code":true}},{"type":"text","text":")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nWe already have it, it is just normal functions.\nAnd the  "},{"type":"text","text":"@__DO_NOT_EVER_USE_PURE","style":{"code":true}},{"type":"text","text":"  is "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":"\nthe times that someone needs "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":" are so so rare.\nI would not be surprised if we can actually remove them from "},{"type":"text","text":"base/irational.jl","style":{"code":true}},{"type":"text","text":" now."}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"a25d3f8a-309b-4afb-a3d3-31d4a75e85dd","type":"message","text":"right, but since people seem to want to mark functions `@pure`, we could be nice and give them a macro that doesn't do anything","user":"U0179G7FG4F","ts":"1608677664.123200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XG4vR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"right, but since people seem to want to mark functions "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":", we could be nice and give them a macro that doesn't do anything"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"6678552e-1d91-4b2c-bfb7-dc6fb8e2d89e","type":"message","text":"Its kind of sad that telling the compiler a function is pure doesn’t actually do anything useful.\nI think someone explained it as the compiler can workout purity just fine on its own, so you telling it doesn’t help, if just gives you the chance to make a mistake and lie to it.\n(this means normal purity, not the more agressive thing that `@pure`  requires)","user":"U6A936746","ts":"1608678093.123900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NkkXm","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Its kind of sad that telling the compiler a function is pure doesn’t actually do anything useful.\nI think someone explained it as the compiler can workout purity just fine on its own, so you telling it doesn’t help, if just gives you the chance to make a mistake and lie to it.\n(this means normal purity, not the more agressive thing that "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":"  requires)"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"bfbf60ba-faaf-4f25-a309-a67f299d1540","type":"message","text":"I plead guilty to that one. In my defense, they were `@generated` before that","user":"U68P09RFZ","ts":"1608682086.124100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BqDB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I plead guilty to that one. In my defense, they were "},{"type":"text","text":"@generated","style":{"code":true}},{"type":"text","text":" before that"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"e24914c7-b203-4950-8953-7a76eea8b02c","type":"message","text":"<https://github.com/JuliaLang/julia/pull/16527/files>","user":"U68P09RFZ","ts":"1608682087.124300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZXPV","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaLang/julia/pull/16527/files"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"a25f82dc-45c0-4c33-b289-e9e33716e1ca","type":"message","text":"Isn’t `@generated` better than `@pure`?","user":"U6A936746","ts":"1608682135.124500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xsr","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Isn’t "},{"type":"text","text":"@generated","style":{"code":true}},{"type":"text","text":" better than "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"46abf04b-1714-4688-82cb-1bd261e511d6","type":"message","text":"that's a good question","user":"U68P09RFZ","ts":"1608682150.124700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JzRTq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"that's a good question"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"491378d2-491c-43c0-af3f-9de9fc93caa9","type":"message","text":"I would like to know that as well","user":"U68P09RFZ","ts":"1608682210.124900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"n+yi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would like to know that as well"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"dbc3c6c1-4183-49c1-9bb7-05b3ac6d50fb","type":"message","text":"by coincidence i'm currently trying to decide which to use in another piece of code","user":"U68P09RFZ","ts":"1608682241.125100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qODe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"by coincidence i'm currently trying to decide which to use in another piece of code"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"b55342d4-67e1-4dc8-9ca0-abfbe11211b4","type":"message","text":"I kind of think we should have merged the stuff from <https://github.com/NHDaly/StagedFunctions.jl/>\ninto `Base`  as the behavour for `@generated` functions.\nThen they would believe in world ages.\nThey wouldn’t be weird at all then\n(though it would have meant adding some kind of tracing to deal with dynamic dispatch)","user":"U6A936746","ts":"1608682291.125300","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1608682310.000000"},"blocks":[{"type":"rich_text","block_id":"fAqYo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I kind of think we should have merged the stuff from "},{"type":"link","url":"https://github.com/NHDaly/StagedFunctions.jl/"},{"type":"text","text":"\ninto "},{"type":"text","text":"Base","style":{"code":true}},{"type":"text","text":"  as the behavour for "},{"type":"text","text":"@generated","style":{"code":true}},{"type":"text","text":" functions.\nThen they would believe in world ages.\nThey wouldn’t be weird at all then\n(though it would have meant adding some kind of tracing to deal with dynamic dispatch)"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746","reactions":[{"name":"+1","users":["U89GY9W1J"],"count":1},{"name":"heart","users":["U89GY9W1J"],"count":1}]},{"client_msg_id":"b229bf1a-bd07-4172-a7fd-ccb91e022b69","type":"message","text":"NamedDims.jl uses 3 `@generated` functions and 2 `@pure` functions.","user":"U6A936746","ts":"1608682511.125600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YOcJO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NamedDims.jl uses 3 "},{"type":"text","text":"@generated","style":{"code":true}},{"type":"text","text":" functions and 2 "},{"type":"text","text":"@pure","style":{"code":true}},{"type":"text","text":" functions."}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"4bafccbd-c939-4791-8219-de781a4786f9","type":"message","text":"Yeah i agree, <@U6A936746> - i was thinking about this the other day, and at least it would be nice to move the logic for generated functions from C into julia now that we've merged the julia functions needed for StagedFunctions.jl!","user":"U89GY9W1J","ts":"1609730185.286000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WYP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah i agree, "},{"type":"user","user_id":"U6A936746"},{"type":"text","text":" - i was thinking about this the other day, and at least it would be nice to move the logic for generated functions from C into julia now that we've merged the julia functions needed for StagedFunctions.jl!"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"},{"client_msg_id":"4638c7e7-8b93-4cf3-bb4b-d7769e4263f1","type":"message","text":"But yeah, i would love it if someone could pick up the work we did on StagedFunctions.jl -- i think that there must be a nice way to do the tracing without adding overhead to all function calls. It would be so nice to make generated functions less weird","user":"U89GY9W1J","ts":"1609730262.286200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/kvM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But yeah, i would love it if someone could pick up the work we did on StagedFunctions.jl -- i think that there must be a nice way to do the tracing without adding overhead to all function calls. It would be so nice to make generated functions less weird"}]}]}],"thread_ts":"1608676887.119900","parent_user_id":"U6A936746"}]