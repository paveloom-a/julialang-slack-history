[{"client_msg_id":"35bb9ebb-7049-4dac-a227-c50283d4f3d6","type":"message","text":"<https://en.wikibooks.org/wiki/Haskell/Indentation> this seems pretty standard. Basically the same as julia's indentation convention isn't it?","user":"U8D9768Q6","ts":"1609697575.274600","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1609697600.000000"},"blocks":[{"type":"rich_text","block_id":"+Lv","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://en.wikibooks.org/wiki/Haskell/Indentation"},{"type":"text","text":" this seems pretty standard. Basically the same as julia's indentation convention isn't it?"}]}]}],"thread_ts":"1609697575.274600","reply_count":43,"reply_users_count":4,"latest_reply":"1610206358.357100","reply_users":["U6A936746","U8D9768Q6","UPUBAM63X","UDSU53PEG"],"subscribed":false},{"client_msg_id":"00b32b00-9d77-4327-833b-867cfe7d282e","type":"message","text":"Julia doesn’t have a indentation convention.\nThis is actually the key point where BlueStyle and YASGuide diverge.\nThough neither want quite what haskell does\n\nApproximately:\n*BlueStyle* says: Always indent 4 spaces. Always\n*YASGuide* says: Indent with 4 spaces, except If an argument list extends to multiple lines, in that case align new lines to the parenthesis/bracket/etc. that started the argument list.","user":"U6A936746","ts":"1609698023.274800","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609698230.000000"},"blocks":[{"type":"rich_text","block_id":"ZwFZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Julia doesn’t have a indentation convention.\nThis is actually the key point where BlueStyle and YASGuide diverge.\nThough neither want quite what haskell does\n\nApproximately:\n"},{"type":"text","text":"BlueStyle","style":{"bold":true}},{"type":"text","text":" says: Always indent 4 spaces. Always\n"},{"type":"text","text":"YASGuide","style":{"bold":true}},{"type":"text","text":" says: Indent with 4 spaces, except If an argument list extends to multiple lines, in that case align new lines to the parenthesis/bracket/etc. that started the argument list."}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"type":"message","text":"That rule leads to this\n<https://github.com/domluna/JuliaFormatter.jl/issues/263>","files":[{"id":"F01HTRY4WSH","created":1609698121,"timestamp":1609698121,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U6A936746","editable":false,"size":105450,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01HTRY4WSH/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01HTRY4WSH/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01HTRY4WSH-62f7db0542/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01HTRY4WSH-62f7db0542/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01HTRY4WSH-62f7db0542/image_360.png","thumb_360_w":360,"thumb_360_h":201,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01HTRY4WSH-62f7db0542/image_480.png","thumb_480_w":480,"thumb_480_h":268,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01HTRY4WSH-62f7db0542/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01HTRY4WSH-62f7db0542/image_720.png","thumb_720_w":720,"thumb_720_h":402,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01HTRY4WSH-62f7db0542/image_800.png","thumb_800_w":800,"thumb_800_h":446,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01HTRY4WSH-62f7db0542/image_960.png","thumb_960_w":960,"thumb_960_h":535,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01HTRY4WSH-62f7db0542/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":571,"original_w":1275,"original_h":711,"thumb_tiny":"AwAaADCrRRRTAXj0o4pKKACiiigApaSigBfwo/CkooAPwooooA//2Q==","permalink":"https://julialang.slack.com/files/U6A936746/F01HTRY4WSH/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01HTRY4WSH-1673a55bef","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"iX4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That rule leads to this\n"},{"type":"link","url":"https://github.com/domluna/JuliaFormatter.jl/issues/263"}]}]}],"user":"U6A936746","display_as_bot":false,"ts":"1609698127.275100","thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"f194c54d-d767-4b2c-a73b-8b9cfeae4da1","type":"message","text":"The julia community certainly does approximately follow an indentation convention, in my experience the second one you listed is more common","user":"U8D9768Q6","ts":"1609698247.275700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7lP/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The julia community certainly does approximately follow an indentation convention, in my experience the second one you listed is more common"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"bf4042f9-2981-4c4d-b381-2e5b4812ab32","type":"message","text":"But still neither is the haskell one","user":"U6A936746","ts":"1609698265.275900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1j8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But still neither is the haskell one"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"f8b4b351-45aa-498e-ad35-c603313f8f2c","type":"message","text":"Pretty similar though, right?","user":"U8D9768Q6","ts":"1609698342.276100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4Ux","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Pretty similar though, right?"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"cbb435a1-66eb-401a-8650-0dd95b009a9e","type":"message","text":"Consider this code\n<https://github.com/JuliaLang/julia/blob/5ee2d601edcf2dcdd467041ba9f08c43bf23e1a3/base/arrayshow.jl#L137-L139>\n\n```r = k == length(A) &amp;&amp; !pad_right ?\n    \"\" :\n    repeat(\" \", max(0, w-length(vdots)-length(l)))```\n(Which both BlueStyle and YASGuide say is correctly indented)\n\n\nFollowing the Haskell rules it would be something like:\n```r = k == length(A) &amp;&amp; !pad_right ?\n                        \"\" :\n                        repeat(\" \", max(0, w-length(vdots)-length(l)))```\nWhich is way worse. (IMO)","user":"U6A936746","ts":"1609698399.276300","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609698485.000000"},"blocks":[{"type":"rich_text","block_id":"eSvH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Consider this code\n"},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/5ee2d601edcf2dcdd467041ba9f08c43bf23e1a3/base/arrayshow.jl#L137-L139"},{"type":"text","text":"\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"r = k == length(A) && !pad_right ?\n    \"\" :\n    repeat(\" \", max(0, w-length(vdots)-length(l)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"(Which both BlueStyle and YASGuide say is correctly indented)\n\n\nFollowing the Haskell rules it would be something like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"r = k == length(A) && !pad_right ?\n                        \"\" :\n                        repeat(\" \", max(0, w-length(vdots)-length(l)))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nWhich is way worse. (IMO)"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"cfcff49c-52c7-45df-a172-17ae2b075bf0","type":"message","text":"Ah, I see.","user":"U8D9768Q6","ts":"1609698437.276600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nkJ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ah, I see."}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"type":"message","subtype":"thread_broadcast","text":"I appreciate that julia does not enforce an indentation convention.","user":"U8D9768Q6","ts":"1609698558.276900","thread_ts":"1609697575.274600","root":{"client_msg_id":"35bb9ebb-7049-4dac-a227-c50283d4f3d6","type":"message","text":"<https://en.wikibooks.org/wiki/Haskell/Indentation> this seems pretty standard. Basically the same as julia's indentation convention isn't it?","user":"U8D9768Q6","ts":"1609697575.274600","team":"T68168MUP","edited":{"user":"U8D9768Q6","ts":"1609697600.000000"},"blocks":[{"type":"rich_text","block_id":"+Lv","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://en.wikibooks.org/wiki/Haskell/Indentation"},{"type":"text","text":" this seems pretty standard. Basically the same as julia's indentation convention isn't it?"}]}]}],"thread_ts":"1609697575.274600","reply_count":43,"reply_users_count":4,"latest_reply":"1610206358.357100","reply_users":["U6A936746","U8D9768Q6","UPUBAM63X","UDSU53PEG"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"A+D","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I appreciate that julia does not enforce an indentation convention."}]}]}],"client_msg_id":"69475c5e-7065-4c43-96cf-a3218d91cbbe","reactions":[{"name":"point_up","users":["UGU761DU2","UPUBAM63X","U89GY9W1J","U8T0YV7QC","U6QGE7S86"],"count":5}]},{"client_msg_id":"97dc3ed1-0cd7-4d3d-a63f-3809df12ec68","type":"message","text":"I can get behind the YASGuide aligning arguments.\n(I have some pros and cons of it, but I could happily use it).\nI can’t get behind the haskell one, as it basically maximises the chance to get into pathological cases where your code is squeezed up against the right margin.\n(Or off screen if you don’t enforce a line limit)","user":"U6A936746","ts":"1609698629.277200","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609698641.000000"},"blocks":[{"type":"rich_text","block_id":"9bn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can get behind the YASGuide aligning arguments.\n(I have some pros and cons of it, but I could happily use it).\nI can’t get behind the haskell one, as it basically maximises the chance to get into pathological cases where your code is squeezed up against the right margin.\n(Or off screen if you don’t enforce a line limit)"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6","reactions":[{"name":"point_up","users":["U695B1S2X"],"count":1}]},{"client_msg_id":"3e0cd2bd-6412-42aa-a213-95e3c670dad1","type":"message","text":"lyndon that code looks pretty unidiomatic can you post a snippet and I'll show you how I'd write it lol","user":"UPUBAM63X","ts":"1609716313.278800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GvB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lyndon that code looks pretty unidiomatic can you post a snippet and I'll show you how I'd write it lol"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"48695581-3491-4797-90b8-29cda8f07cfe","type":"message","text":"you've got like 400 indents when you only need 1 or 2 unless you want it for style purposes","user":"UPUBAM63X","ts":"1609716341.279000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tCq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you've got like 400 indents when you only need 1 or 2 unless you want it for style purposes"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"c93384dc-733c-4e8c-a768-8ebe995662c3","type":"message","text":"and no you wouldn't write haskell like this...\n```r = k == length(A) &amp;&amp; !pad_right ?\n                        \"\" :\n                        repeat(\" \", max(0, w-length(vdots)-length(l)))```","user":"UPUBAM63X","ts":"1609716398.279200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jVe9X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and no you wouldn't write haskell like this...\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"r = k == length(A) && !pad_right ?\n                        \"\" :\n                        repeat(\" \", max(0, w-length(vdots)-length(l)))"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"b0421089-98dd-4073-9d9f-2d807d4137ce","type":"message","text":"here's a depth first search monad I wrote. it's not good code quality but it does show indentations...\n```depthFirstSearchM :: Graph w -&gt; Int -&gt; IntSet -&gt; Seq.Seq Int -&gt; Seq.Seq Int \ndepthFirstSearchM (Graph adj) startID elementSet pathSeq = \n    case lookupSeq of \n        Seq.Empty -&gt; pathSeq\n        _ -&gt;  do \n            idxAvail &lt;- lookupSeq --every individual index\n            let actID = Maybe.fromMaybe (error \"your memory is corrupt?\") (Seq.lookup idxAvail nbIDs) \n            pathSeq Seq.&gt;&lt; depthFirstSearchM (Graph adj) actID \n                (IntSet.insert actID elementSet) (Seq.singleton actID)\n    where\n        nbIDs = getNeighborIDs (Graph adj) startID --Sequence of neighbors at node\n        lookupVisited = Seq.findIndicesL (`IntSet.notMember` elementSet) nbIDs --list of neighbors indices not at node\n        lookupSeq = Seq.fromList lookupVisited\n\ndepthFirstSearch (Graph adj) startidx = List.nub (toList (depthFirstSearchM (Graph adj) startidx \n        (IntSet.singleton startidx) (Seq.singleton startidx)))```","user":"UPUBAM63X","ts":"1609716511.279400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WX9RB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"here's a depth first search monad I wrote. it's not good code quality but it does show indentations...\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"depthFirstSearchM :: Graph w -> Int -> IntSet -> Seq.Seq Int -> Seq.Seq Int \ndepthFirstSearchM (Graph adj) startID elementSet pathSeq = \n    case lookupSeq of \n        Seq.Empty -> pathSeq\n        _ ->  do \n            idxAvail <- lookupSeq --every individual index\n            let actID = Maybe.fromMaybe (error \"your memory is corrupt?\") (Seq.lookup idxAvail nbIDs) \n            pathSeq Seq.>< depthFirstSearchM (Graph adj) actID \n                (IntSet.insert actID elementSet) (Seq.singleton actID)\n    where\n        nbIDs = getNeighborIDs (Graph adj) startID --Sequence of neighbors at node\n        lookupVisited = Seq.findIndicesL (`IntSet.notMember` elementSet) nbIDs --list of neighbors indices not at node\n        lookupSeq = Seq.fromList lookupVisited\n\ndepthFirstSearch (Graph adj) startidx = List.nub (toList (depthFirstSearchM (Graph adj) startidx \n        (IntSet.singleton startidx) (Seq.singleton startidx)))"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"0e1d6910-50f9-4aad-ab5c-e51883ad6f89","type":"message","text":"you could write that last block like this if you wanted...\n```depthFirstSearch (Graph adj) startidx = \n    List.nub (\n        toList (\n            depthFirstSearchM (Graph adj) startidx \n                (IntSet.singleton startidx) (Seq.singleton startidx)\n        )\n    )```\n","user":"UPUBAM63X","ts":"1609716665.279600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jwvp0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could write that last block like this if you wanted...\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"depthFirstSearch (Graph adj) startidx = \n    List.nub (\n        toList (\n            depthFirstSearchM (Graph adj) startidx \n                (IntSet.singleton startidx) (Seq.singleton startidx)\n        )\n    )"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"6858c3df-2b59-4468-968d-022eca14204a","type":"message","text":"you'll notice my variable names are a lot longer than most peoples, but it helps me think until I get used to writing functions almost exclusively. Most people use like (a,b,c)","user":"UPUBAM63X","ts":"1609716720.279800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HpEvp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you'll notice my variable names are a lot longer than most peoples, but it helps me think until I get used to writing functions almost exclusively. Most people use like (a,b,c)"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"03b9f8d0-03a2-4afc-9de1-20bf1dd735c2","type":"message","text":"&gt;  and no you wouldn’t write haskell like this...\nI am just illustrating the rule of how you have to indent in Haskell.\nIndenting needs the be deeper than where the expression started","user":"U6A936746","ts":"1609717021.281000","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609717033.000000"},"blocks":[{"type":"rich_text","block_id":"tYeyB","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":" and no you wouldn’t write haskell like this..."}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nI am just illustrating the rule of how you have to indent in Haskell.\nIndenting needs the be deeper than where the expression started"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"b4ebba49-0d47-4975-996a-ac18c15a68cc","type":"message","text":"I don't think you understood it correctly. Or you're writing really weird Haskell code","user":"UPUBAM63X","ts":"1609717065.281300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RwS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think you understood it correctly. Or you're writing really weird Haskell code"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"a7b1a449-4927-4d44-9327-16b155cab823","type":"message","text":"here's some example haskell code written by someone way better than me: <http://code.haskell.org/lambdabot/LBState.hs>","user":"UPUBAM63X","ts":"1609717144.281500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RMSJd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"here's some example haskell code written by someone way better than me: "},{"type":"link","url":"http://code.haskell.org/lambdabot/LBState.hs"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"85447ebe-59da-48df-a394-1152493461e7","type":"message","text":"I just want to concatentate a lists to one of two possible endings\n``````\n[\"aaaaa\", \"bbbbb\", \"cccccc\", \"ddddd\"] ++ if condition\n                                          then [\"AAAA\", \"BBBB\", CCC]\n                                          else [\"xxxx\", \"zzzz\"]\n``````\n(In the actual code those 3 lists are variables, but their names are fairly long. so this illustrates the point)","user":"U6A936746","ts":"1609717219.281700","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1609717352.000000"},"blocks":[{"type":"rich_text","block_id":"gRf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I just want to concatentate a lists to one of two possible endings\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"```\n[\"aaaaa\", \"bbbbb\", \"cccccc\", \"ddddd\"] ++ if condition\n                                          then [\"AAAA\", \"BBBB\", CCC]\n                                          else [\"xxxx\", \"zzzz\"]\n```"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\n(In the actual code those 3 lists are variables, but their names are fairly long. so this illustrates the point)"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"1ebc6278-9d66-41f9-8919-27885517993c","type":"message","text":"lol","user":"UPUBAM63X","ts":"1609717244.282000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kxe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"lol"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"0c603d26-56ba-44b8-9d40-673b4771281c","type":"message","text":"```    let condition = True\n        result = if condition \n            then [\"AAAA\", \"BBBB\", \"CCC\"] \n            else [\"xxxx\", \"zzzz\"]\n        strlst = [\"aaaaa\", \"bbbbb\", \"cccccc\", \"ddddd\"] ++ \n            result```\nsomething like this is valid","user":"UPUBAM63X","ts":"1609717490.282400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"75YO","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    let condition = True\n        result = if condition \n            then [\"AAAA\", \"BBBB\", \"CCC\"] \n            else [\"xxxx\", \"zzzz\"]\n        strlst = [\"aaaaa\", \"bbbbb\", \"cccccc\", \"ddddd\"] ++ \n            result"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"something like this is valid"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"d7cbd21b-8adb-4b3b-ac8b-2c42bbc7032e","type":"message","text":"let block needs subsequent lines to be indented,\nif can be one line, or indented on new line(s) etc.","user":"UPUBAM63X","ts":"1609717581.282600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bRms","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let block needs subsequent lines to be indented,\nif can be one line, or indented on new line(s) etc."}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"e50bde87-d1bc-4cf7-b23d-7899951375a0","type":"message","text":"or this...\n```    let condition = True\n        result = if condition then [\"AAAA\", \"BBBB\", \"CCC\"] \n            else [\"xxxx\", \"zzzz\"]\n        strlst = [\"aaaaa\", \"bbbbb\", \"cccccc\", \"ddddd\"]\n        catted =  strlst ++ result```","user":"UPUBAM63X","ts":"1609717640.282800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fblh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or this...\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"    let condition = True\n        result = if condition then [\"AAAA\", \"BBBB\", \"CCC\"] \n            else [\"xxxx\", \"zzzz\"]\n        strlst = [\"aaaaa\", \"bbbbb\", \"cccccc\", \"ddddd\"]\n        catted =  strlst ++ result"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"7de79948-d2ca-406e-a064-91eff495e05b","type":"message","text":"in julia it looks similar unless you use some sugar, but you could use sugar in Haskell too","user":"UPUBAM63X","ts":"1609717821.283400","team":"T68168MUP","edited":{"user":"UPUBAM63X","ts":"1609717902.000000"},"blocks":[{"type":"rich_text","block_id":"WmC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in julia it looks similar unless you use some sugar, but you could use sugar in Haskell too"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"6e1d6015-27e9-47b9-8c89-1899f84b3b2d","type":"message","text":"None of you code runs.\nAll of it gives me an error about incorrect indention","user":"U6A936746","ts":"1609718158.283900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iVQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"None of you code runs.\nAll of it gives me an error about incorrect indention"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"94e9d164-2c06-4989-8e03-07f19971f49e","type":"message","text":"Anyway, regardless looks like i did have the rule wrong, it is perfectly sensible.","user":"U6A936746","ts":"1609718439.284100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Vl4F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Anyway, regardless looks like i did have the rule wrong, it is perfectly sensible."}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"5e3eaf16-3ad7-4de2-8541-0939a424977b","type":"message","text":"1 sec.. I'm getting a unrelated issue and my computer decided to have it's battery die","user":"UPUBAM63X","ts":"1609718443.284300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zP9=A","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"1 sec.. I'm getting a unrelated issue and my computer decided to have it's battery die"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"883759a1-4440-409a-abb2-2dfb8ea60c08","type":"message","text":"well maybe not perfectly sensible but it's not horrendous at least","user":"UPUBAM63X","ts":"1609718457.284500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UWAKa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"well maybe not perfectly sensible but it's not horrendous at least"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"2de8c6a6-a053-4cde-992e-3cc04ff8b992","type":"message","text":"I don't enjoy it","user":"UPUBAM63X","ts":"1609718461.284700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Mq5X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't enjoy it"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"b8d5d939-f719-4fad-b0d5-a606c5b254d6","type":"message","text":"try this :slightly_smiling_face: in a file called Fun.hs\n```module Fun where\n\nmain :: IO ()\nmain = do\n    let condition = True\n        result = if condition then [\"AAAA\", \"BBBB\", \"CCC\"] \n            else [\"xxxx\", \"zzzz\"]\n        strlst = [\"aaaaa\", \"bbbbb\", \"cccccc\", \"ddddd\"]\n        catted =  strlst ++ result\n    print catted```\nshould print...\n`[\"aaaaa\",\"bbbbb\",\"cccccc\",\"ddddd\",\"AAAA\",\"BBBB\",\"CCC\"]`","user":"UPUBAM63X","ts":"1609718519.284900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"NKjK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"try this "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":" in a file called Fun.hs\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"module Fun where\n\nmain :: IO ()\nmain = do\n    let condition = True\n        result = if condition then [\"AAAA\", \"BBBB\", \"CCC\"] \n            else [\"xxxx\", \"zzzz\"]\n        strlst = [\"aaaaa\", \"bbbbb\", \"cccccc\", \"ddddd\"]\n        catted =  strlst ++ result\n    print catted"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"should print...\n"},{"type":"text","text":"[\"aaaaa\",\"bbbbb\",\"cccccc\",\"ddddd\",\"AAAA\",\"BBBB\",\"CCC\"]","style":{"code":true}}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"d8298a94-58d6-425c-afa7-ae0d9ad0e860","type":"message","text":"I have no idea how to run haskell code in a file :joy:  I need to sleep looks sensible enough though","user":"U6A936746","ts":"1609718672.285100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"t=Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I have no idea how to run haskell code in a file "},{"type":"emoji","name":"joy"},{"type":"text","text":"  I need to sleep looks sensible enough though"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"5623dfd0-14e1-456b-bf52-d02d7f25b91c","type":"message","text":"get the vscode extension lol. Then all you do is push the play button","user":"UPUBAM63X","ts":"1609718692.285300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"I/ph","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"get the vscode extension lol. Then all you do is push the play button"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"bc95c8b9-8d5e-4e0d-b324-06383ec0554e","type":"message","text":"get some sleep and dream of pure functions","user":"UPUBAM63X","ts":"1609718704.285500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"twiA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"get some sleep and dream of pure functions"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6","reactions":[{"name":"laughing","users":["U8T0YV7QC","U6QGE7S86"],"count":2}]},{"client_msg_id":"fd64e866-f96e-4cf1-a581-d936fbdd5e1e","type":"message","text":"personally I've always favored the readability OCaml for whatever reasons I can't account for :shrug:","user":"UDSU53PEG","ts":"1609830333.315300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/fTEo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"personally I've always favored the readability OCaml for whatever reasons I can't account for "},{"type":"emoji","name":"shrug"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6","reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"5f462164-c0c3-4efb-a037-5a880687b756","type":"message","text":"Never tried OCaml, haskell is appealling to me because it has no side effects. So these kinds of questions are drawing me in - what does a pure FP write like? Will I have gripes?","user":"UPUBAM63X","ts":"1609849513.319400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gGx06","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Never tried OCaml, haskell is appealling to me because it has no side effects. So these kinds of questions are drawing me in - what does a pure FP write like? Will I have gripes?"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"a7305397-4437-4bc3-b3aa-6a55908b331a","type":"message","text":"I think there are a lot of reasons to favor OCaml, Haskell can be very 'academic' to the extent of requiring a background in category theory to get it right, and even then I can point to experts in category theory and PL who disapprove of Haskell's approach, so yes there are real gripes about Haskell","user":"UDSU53PEG","ts":"1609876102.331000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/9Ko","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think there are a lot of reasons to favor OCaml, Haskell can be very 'academic' to the extent of requiring a background in category theory to get it right, and even then I can point to experts in category theory and PL who disapprove of Haskell's approach, so yes there are real gripes about Haskell"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"9479bbba-30a8-4854-b6f8-8be8e36c9356","type":"message","text":"<https://discourse.mc-stan.org/t/choosing-the-new-stan-compilers-implementation-language/6203/50>","user":"UDSU53PEG","ts":"1609876484.331200","team":"T68168MUP","attachments":[{"service_name":"The Stan Forums","title":"Choosing the new Stan compiler's implementation language","title_link":"https://discourse.mc-stan.org/t/choosing-the-new-stan-compilers-implementation-language/6203/50","text":"I wouldn’t say I hate Haskell, but I did voice a preference against it for this particular project. I use monads all the time to structure denotational semantics. I did a PhD in category theory so I don’t think I’m biased against monads. I just think they can add too much cognitive burden when doing simple things, particularly when you start mixing computational effects and need to use monad transformers. I’m not sure they’re the best programming abstraction for all purposes and I am hoping th...","fallback":"The Stan Forums: Choosing the new Stan compiler's implementation language","thumb_url":"https://aws1.discourse-cdn.com/standard14/uploads/mc_stan/original/2X/7/71f59fcb2f604f4a152dae417f8cc17739aa7b50.png","ts":1540986301,"from_url":"https://discourse.mc-stan.org/t/choosing-the-new-stan-compilers-implementation-language/6203/50","thumb_width":375,"thumb_height":376,"service_icon":"https://aws1.discourse-cdn.com/standard14/uploads/mc_stan/optimized/2X/b/b7b51b4b69d8d91ab67fe1889d27fd94f338d9ee_2_180x180.png","id":1,"original_url":"https://discourse.mc-stan.org/t/choosing-the-new-stan-compilers-implementation-language/6203/50"}],"blocks":[{"type":"rich_text","block_id":"5YcYa","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://discourse.mc-stan.org/t/choosing-the-new-stan-compilers-implementation-language/6203/50"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"39887353-6581-465a-961b-4bbc40a4f79a","type":"message","text":"yea I dunno what kind of stuff they are working on, but so far I haven't hit anything major really. I also am beyond a noob wrt to category theory. It's mostly just been really fun","user":"UPUBAM63X","ts":"1609885826.332900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Qvrcc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yea I dunno what kind of stuff they are working on, but so far I haven't hit anything major really. I also am beyond a noob wrt to category theory. It's mostly just been really fun"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"707cdfa3-39fe-4b1c-9f43-3109e6949ac5","type":"message","text":"<https://discuss.ocaml.org/t/why-should-i-use-ocaml/7064/3>","user":"UDSU53PEG","ts":"1610168422.355900","team":"T68168MUP","attachments":[{"service_name":"OCaml","title":"Why should I use OCaml?","title_link":"https://discuss.ocaml.org/t/why-should-i-use-ocaml/7064/3","text":"OCaml is a language that promotes developer productivity. It’s: Statically typed with an excellent implementation of ML type system Inherits features of Pascal and Modula-2 module system with fast incremental compiles Very pragmatic, doesn’t insist on functional purity like other languages. You can smash together stuff to get the job done and refactor later because of the type system Makes some really solid tradeoffs from an engineering point of view, e.g. has very good single-threaded perform...","fallback":"OCaml: Why should I use OCaml?","ts":1610166229,"from_url":"https://discuss.ocaml.org/t/why-should-i-use-ocaml/7064/3","id":1,"original_url":"https://discuss.ocaml.org/t/why-should-i-use-ocaml/7064/3"}],"blocks":[{"type":"rich_text","block_id":"IcLTb","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://discuss.ocaml.org/t/why-should-i-use-ocaml/7064/3"}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"176ae7fc-0e48-4dd4-812e-73ec69e83659","type":"message","text":"I've actually been looking into F# now Oliver. OCaml seems great but there's no parallelism it has a GIL just like python :disappointed:. There is PolyML but - it seems a little crazy to not have this in a modern language.","user":"UPUBAM63X","ts":"1610191119.356500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Nejcb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've actually been looking into F# now Oliver. OCaml seems great but there's no parallelism it has a GIL just like python "},{"type":"emoji","name":"disappointed"},{"type":"text","text":". There is PolyML but - it seems a little crazy to not have this in a modern language."}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"73fcbc0f-bdc9-41d8-9b99-2d31b476d743","type":"message","text":"F# has a little too much OOP for my taste but - it has a lot of upshots to round it out.","user":"UPUBAM63X","ts":"1610199982.356700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+8k","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"F# has a little too much OOP for my taste but - it has a lot of upshots to round it out."}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"1264d0ef-0ada-476b-b850-4f162151902b","type":"message","text":"Last time I used F# (which to be fair was like 2013) the OO was really painful and not really intended for use, just needed so can represent objects from other .net languages I guess.\n\nIt's OO didn't let you call methods from your superclass without upcasting first.\nRandom weird thing it did have was that interfaces could have fallback implementations. Which really blurs the line between abstract class and interface.","user":"U6A936746","ts":"1610203563.356900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BSsq5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Last time I used F# (which to be fair was like 2013) the OO was really painful and not really intended for use, just needed so can represent objects from other .net languages I guess.\n\nIt's OO didn't let you call methods from your superclass without upcasting first.\nRandom weird thing it did have was that interfaces could have fallback implementations. Which really blurs the line between abstract class and interface."}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"},{"client_msg_id":"a8df1b9a-06e0-4ffa-9e26-75882b6b8156","type":"message","text":"funky - I'm trying it now. It has generics, TCO, FP, some basic LA capabilities. It could be decent for desktop applications? I just don't know yet. Syntax is a little flippy to me still. Looks cool though.","user":"UPUBAM63X","ts":"1610206358.357100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"81/a","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"funky - I'm trying it now. It has generics, TCO, FP, some basic LA capabilities. It could be decent for desktop applications? I just don't know yet. Syntax is a little flippy to me still. Looks cool though."}]}]}],"thread_ts":"1609697575.274600","parent_user_id":"U8D9768Q6"}]