[{"client_msg_id":"67c0b549-3f0a-411e-bb6c-bd1cf615541a","type":"message","text":"```julia&gt; parse(Bool, \"1\")\ntrue```\nThat should error.","user":"U6A936746","ts":"1617798971.276400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jet","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> parse(Bool, \"1\")\ntrue"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"That should error."}]}]}],"thread_ts":"1617798971.276400","reply_count":13,"reply_users_count":2,"latest_reply":"1617801197.279500","reply_users":["U7HAYKY9X","U6A936746"],"is_locked":false,"subscribed":false,"reactions":[{"name":"thinking_face","users":["UDXST8ARK"],"count":1},{"name":"-1","users":["U67BJLYCS"],"count":1}]},{"client_msg_id":"f78c0320-ed67-4051-aae1-7ea8d83ef721","type":"message","text":"Not sure I agree. What about these, then?\n```parse(Float64, \"1\")\nparse(Int, \"1.0\")```\nOr the fact that\n```julia&gt; trues(1)\n1-element BitVector:\n 1```\n?","user":"U7HAYKY9X","ts":"1617799112.276500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"HTz/s","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not sure I agree. What about these, then?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"parse(Float64, \"1\")\nparse(Int, \"1.0\")"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Or the fact that\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> trues(1)\n1-element BitVector:\n 1"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"?"}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"client_msg_id":"a07380dc-10b2-41b7-b467-a569bcb433a1","type":"message","text":"Not to mention\n```julia&gt; true == 1\ntrue```","user":"U7HAYKY9X","ts":"1617799152.276800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZtLTj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not to mention\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> true == 1\ntrue"}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"client_msg_id":"5def7bab-16ef-4f0b-abfb-edaaa573b75a","type":"message","text":"`parse(Int, \"1.0\")` does error.\nSo does `parse(Int, \"true\")`","user":"U6A936746","ts":"1617799198.277000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2lRd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"parse(Int, \"1.0\")","style":{"code":true}},{"type":"text","text":" does error.\nSo does "},{"type":"text","text":"parse(Int, \"true\")","style":{"code":true}}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"client_msg_id":"619166c9-ed6a-4d80-9631-c45863547ddc","type":"message","text":"I had some nice code that was supposed to workout the type of things:\n```something(\n        tryparse(Bool, value_string),\n        tryparse(Int, value_string),\n        tryparse(Float64, value_string),\n        value_string,\n    )```\nAnd if you call it on `\"1\", \"2\", \"3\"`\nthe result is `true`, `2`, `3`.","user":"U6A936746","ts":"1617799317.277200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2vwGk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I had some nice code that was supposed to workout the type of things:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"something(\n        tryparse(Bool, value_string),\n        tryparse(Int, value_string),\n        tryparse(Float64, value_string),\n        value_string,\n    )"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nAnd if you call it on "},{"type":"text","text":"\"1\", \"2\", \"3\"","style":{"code":true}},{"type":"text","text":"\nthe result is "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"2","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"3","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"client_msg_id":"5517a498-10a1-4003-a447-33c622700755","type":"message","text":"It seems to me like `1` is a more \"valid\" representation of `true` than `true` are of `1` , but I can't really explain why. Maybe it's the fact that `true` is just a convenient name for what is essentially a 1-bit number.","user":"U7HAYKY9X","ts":"1617799493.277500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rvyc7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It seems to me like "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" is a more \"valid\" representation of "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":" than "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":" are of "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" , but I can't really explain why. Maybe it's the fact that "},{"type":"text","text":"true","style":{"code":true}},{"type":"text","text":" is just a convenient name for what is essentially a 1-bit number."}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"type":"message","subtype":"thread_broadcast","text":"Maybe we should have seperated `Int1` from `Bool`\nWe debated it before julia 1.0","user":"U6A936746","ts":"1617799510.277700","thread_ts":"1617798971.276400","root":{"client_msg_id":"67c0b549-3f0a-411e-bb6c-bd1cf615541a","type":"message","text":"```julia&gt; parse(Bool, \"1\")\ntrue```\nThat should error.","user":"U6A936746","ts":"1617798971.276400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jet","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> parse(Bool, \"1\")\ntrue"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"That should error."}]}]}],"thread_ts":"1617798971.276400","reply_count":13,"reply_users_count":2,"latest_reply":"1617801197.279500","reply_users":["U7HAYKY9X","U6A936746"],"is_locked":false,"subscribed":false},"blocks":[{"type":"rich_text","block_id":"NiBiy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe we should have seperated "},{"type":"text","text":"Int1","style":{"code":true}},{"type":"text","text":" from "},{"type":"text","text":"Bool","style":{"code":true}},{"type":"text","text":"\nWe debated it before julia 1.0"}]}]}],"client_msg_id":"fb13a01b-d3fe-41e5-9d63-cf61781193ce","edited":{"user":"U6A936746","ts":"1617799515.000000"}},{"client_msg_id":"07dc48d4-673b-4224-b70e-7dbe5f730d73","type":"message","text":"the representation of vectors of bools as being as integers was arecent change\nin Julia 1.0 it was\n```julia&gt; trues(1)\n1-element BitArray{1}:\n true```","user":"U6A936746","ts":"1617799581.278100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xQ5Wc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the representation of vectors of bools as being as integers was arecent change\nin Julia 1.0 it was\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> trues(1)\n1-element BitArray{1}:\n true"}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"client_msg_id":"a04f97b2-2afb-4ee9-b7ef-c09151d6ee1a","type":"message","text":"Just because things are isomorphic does not mean they are the same thing.","user":"U6A936746","ts":"1617799793.278300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GGe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Just because things are isomorphic does not mean they are the same thing."}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"client_msg_id":"6971c945-c84d-46f9-8cfe-f170f876e709","type":"message","text":"More discussion here:\n<https://github.com/JuliaLang/julia/pull/30575>","user":"U7HAYKY9X","ts":"1617799846.278500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5t=eX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"More discussion here:\n"},{"type":"link","url":"https://github.com/JuliaLang/julia/pull/30575"}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"client_msg_id":"836cf85b-0908-4bb4-b7eb-15867327cdac","type":"message","text":"I think they are the same thing - well, to the same extent that an Int32 and an Int64 is the same thing.","user":"U7HAYKY9X","ts":"1617799884.278700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0XNH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think they are the same thing - well, to the same extent that an Int32 and an Int64 is the same thing."}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"client_msg_id":"cc2746b4-b4db-4ba8-a85a-4904eafc9832","type":"message","text":"But of course \"same thinginess\" is really hard to pin down. Obviously they are actually different, since e.g. `1 + 1 == 2` doesn't hold for bools. It's sort of the same problem with ints vs floats. Are they the same? Rust doesn't allow implicit conversions or comparisons of unsigned/signed integers. There are some advantages to that, but it seems really practically useful to go the Julia way and say \"yes, 1.0 is the same thing as 1 and true\"","user":"U7HAYKY9X","ts":"1617800112.278900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZIuH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But of course \"same thinginess\" is really hard to pin down. Obviously they are actually different, since e.g. "},{"type":"text","text":"1 + 1 == 2","style":{"code":true}},{"type":"text","text":" doesn't hold for bools. It's sort of the same problem with ints vs floats. Are they the same? Rust doesn't allow implicit conversions or comparisons of unsigned/signed integers. There are some advantages to that, but it seems really practically useful to go the Julia way and say \"yes, 1.0 is the same thing as 1 and true\""}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"},{"client_msg_id":"5267a4c2-6a22-44fe-9cd3-86e5457d3e20","type":"message","text":"There is set of types julia’s parser tries to use for literals.\nFor interger literals it is the smallest literal that can fit it, that is at least the size of `Int`.\nWhich mostly means `Int64` (but occationally means `Int128` )\nJulia won’t parse `1` as into `Bool`\n`Bool[1]` works, but it parses it first as an `Int` then converts it.\nI feel like the fault behavour of `parse`  should align with what julia’s parser is willing to do for that type (even though julia’s parser doesn’t know the type, telling the type shouldn’t let it do more things)","user":"U6A936746","ts":"1617800766.279200","team":"T68168MUP","edited":{"user":"U6A936746","ts":"1617800797.000000"},"blocks":[{"type":"rich_text","block_id":"jQXq1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There is set of types julia’s parser tries to use for literals.\nFor interger literals it is the smallest literal that can fit it, that is at least the size of "},{"type":"text","text":"Int","style":{"code":true}},{"type":"text","text":".\nWhich mostly means "},{"type":"text","text":"Int64","style":{"code":true}},{"type":"text","text":" (but occationally means "},{"type":"text","text":"Int128","style":{"code":true}},{"type":"text","text":" )\nJulia won’t parse "},{"type":"text","text":"1","style":{"code":true}},{"type":"text","text":" as into "},{"type":"text","text":"Bool","style":{"code":true}},{"type":"text","text":"\n"},{"type":"text","text":"Bool[1]","style":{"code":true}},{"type":"text","text":" works, but it parses it first as an "},{"type":"text","text":"Int","style":{"code":true}},{"type":"text","text":" then converts it.\nI feel like the fault behavour of "},{"type":"text","text":"parse","style":{"code":true}},{"type":"text","text":"  should align with what julia’s parser is willing to do for that type (even though julia’s parser doesn’t know the type, telling the type shouldn’t let it do more things)"}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746","reactions":[{"name":"false","users":["U6A936746"],"count":1}]},{"client_msg_id":"78b2b2d6-ddc9-49a8-937b-2a1bacef1fd5","type":"message","text":"hmm no but that aregument is no good.\nAs I do want `parse(Float64, \"1\")` to work","user":"U6A936746","ts":"1617801197.279500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hZv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm no but that aregument is no good.\nAs I do want "},{"type":"text","text":"parse(Float64, \"1\")","style":{"code":true}},{"type":"text","text":" to work"}]}]}],"thread_ts":"1617798971.276400","parent_user_id":"U6A936746"}]