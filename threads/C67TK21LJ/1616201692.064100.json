[{"type":"message","text":"One gripe though is that Blosc.jl doesn't work on SubArrays.\n\n```julia> Blosc.compress(@view A[1:1024])\nERROR: MethodError: no method matching compress(::SubArray{UInt8,1,Array{UInt8,1},Tuple{UnitRange{Int64}},true})\nClosest candidates are:\n  compress(::Ptr{T}, ::Integer; kws...) where T at C:\\Users\\kittisopikulm\\.julia\\dev\\Blosc\\src\\Blosc.jl:105\n  compress(::DenseArray; kws...) at C:\\Users\\kittisopikulm\\.julia\\dev\\Blosc\\src\\Blosc.jl:111\n  compress(::AbstractString; kws...) at C:\\Users\\kittisopikulm\\.julia\\dev\\Blosc\\src\\Blosc.jl:115\nStacktrace:\n [1] top-level scope at REPL[151]:1```\n","user":"USU9FRPEU","ts":"1616201692.064100","team":"T68168MUP","attachments":[{"fallback":"[March 19th, 2021 8:50 PM] markkitt: I have new appreciation for how easy Blosc.jl is to use.\n\nToday someone asked me for help with python-blosc. For `a` a NumPy array, the most efficient compression call apparently looks like this:\n```blosc.compress_ptr(a.__array_interface__['data'][0], a.size, a.dtype.itemsize, 9,cname= 'lz4')```\nI think numcodecs is probably easier to use, but this was a bit shocking.","ts":"1616201430.050700","author_id":"USU9FRPEU","author_subname":"Mark Kittisopikul","channel_id":"C6FGJ8REC","channel_name":"appreciation","is_msg_unfurl":true,"is_thread_root_unfurl":true,"text":"I have new appreciation for how easy Blosc.jl is to use.\n\nToday someone asked me for help with python-blosc. For `a` a NumPy array, the most efficient compression call apparently looks like this:\n```blosc.compress_ptr(a.__array_interface__['data'][0], a.size, a.dtype.itemsize, 9,cname= 'lz4')```\nI think numcodecs is probably easier to use, but this was a bit shocking.","author_name":"Mark Kittisopikul","author_link":"https://julialang.slack.com/team/USU9FRPEU","author_icon":"https://avatars.slack-edge.com/2020-01-21/906110549521_7833cc5b4b6e7c66970e_48.jpg","mrkdwn_in":["text"],"color":"D0D0D0","from_url":"https://julialang.slack.com/archives/C6FGJ8REC/p1616201430050700?thread_ts=1616201430050700&cid=C6FGJ8REC","is_share":true,"footer":"Thread in #appreciation"}],"blocks":[{"type":"rich_text","block_id":"SG9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One gripe though is that Blosc.jl doesn't work on SubArrays.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Blosc.compress(@view A[1:1024])\nERROR: MethodError: no method matching compress(::SubArray{UInt8,1,Array{UInt8,1},Tuple{UnitRange{Int64}},true})\nClosest candidates are:\n  compress(::Ptr{T}, ::Integer; kws...) where T at C:\\Users\\kittisopikulm\\.julia\\dev\\Blosc\\src\\Blosc.jl:105\n  compress(::DenseArray; kws...) at C:\\Users\\kittisopikulm\\.julia\\dev\\Blosc\\src\\Blosc.jl:111\n  compress(::AbstractString; kws...) at C:\\Users\\kittisopikulm\\.julia\\dev\\Blosc\\src\\Blosc.jl:115\nStacktrace:\n [1] top-level scope at REPL[151]:1"}]},{"type":"rich_text_section","elements":[]}]}],"thread_ts":"1616201692.064100","reply_count":3,"reply_users_count":2,"latest_reply":"1616222490.065100","reply_users":["USU9FRPEU","U6795JH6H"],"subscribed":false},{"client_msg_id":"ce1515cb-1347-41cb-8fe5-030f5b847aa1","type":"message","text":"We probably should extend this to work on `Base.FastContiguousSubArray` at least. I'm working on a PR.","user":"USU9FRPEU","ts":"1616201891.064200","team":"T68168MUP","edited":{"user":"USU9FRPEU","ts":"1616201906.000000"},"blocks":[{"type":"rich_text","block_id":"FLXjh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We probably should extend this to work on "},{"type":"text","text":"Base.FastContiguousSubArray","style":{"code":true}},{"type":"text","text":" at least. I'm working on a PR."}]}]}],"thread_ts":"1616201692.064100","parent_user_id":"USU9FRPEU"},{"client_msg_id":"5B0A3EBA-0072-42E8-9062-0029B0D379E1","type":"message","text":"Sounds like an issue to open","user":"U6795JH6H","ts":"1616222197.064900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/chcO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Sounds like an issue to open"}]}]}],"thread_ts":"1616201692.064100","parent_user_id":"USU9FRPEU"},{"client_msg_id":"dc3deb48-82b1-46c9-8f83-d131166b47de","type":"message","text":"Yea, I'm trying not pile on SGJ. I've already got a similar PR open at PyCall: <https://github.com/JuliaPy/PyCall.jl/pull/876>","user":"USU9FRPEU","ts":"1616222490.065100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"e/=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea, I'm trying not pile on SGJ. I've already got a similar PR open at PyCall: "},{"type":"link","url":"https://github.com/JuliaPy/PyCall.jl/pull/876"}]}]}],"thread_ts":"1616201692.064100","parent_user_id":"USU9FRPEU"}]