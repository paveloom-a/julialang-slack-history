[{"client_msg_id":"9FA57155-BA29-4D9C-8068-92B8A0A386DB","type":"message","text":"You mean, C but with Julian syntax?","user":"UB7JS9CHF","ts":"1616083214.039100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/yUF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You mean, C but with Julian syntax?"}]}]}],"thread_ts":"1616083214.039100","reply_count":3,"reply_users_count":2,"latest_reply":"1616127463.048500","reply_users":["U9VG1AYSG","USU9FRPEU"],"subscribed":false},{"client_msg_id":"db7f378e-e845-4c17-8933-91bd89be42a8","type":"message","text":"rather a compiler mode for Julia that only allows you to use a special subset which is basically just C.  To be fair, technically you can do most of that in Julia already because of all the stuff available for calling C, but there is no subset which is specially designed to be used without garbage collection","user":"U9VG1AYSG","ts":"1616086822.039900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xngRj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"rather a compiler mode for Julia that only allows you to use a special subset which is basically just C.  To be fair, technically you can do most of that in Julia already because of all the stuff available for calling C, but there is no subset which is specially designed to be used without garbage collection"}]}]}],"thread_ts":"1616083214.039100","parent_user_id":"UB7JS9CHF","reactions":[{"name":"thumbsup_all","users":["U011V2YN59N","UKG4WF8PJ","UCNPT22MQ"],"count":3}]},{"client_msg_id":"fc031f11-bb85-49bc-b1d1-24cf82cfd3ee","type":"message","text":"If you don't allocate anything and keep your types immutable and bit based, there is nothing to garbage collect. They're some interesting developments over at <https://github.com/tshort/StaticCompiler.jl/pull/46>","user":"USU9FRPEU","ts":"1616127179.048300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ASo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If you don't allocate anything and keep your types immutable and bit based, there is nothing to garbage collect. They're some interesting developments over at "},{"type":"link","url":"https://github.com/tshort/StaticCompiler.jl/pull/46"}]}]}],"thread_ts":"1616083214.039100","parent_user_id":"UB7JS9CHF"},{"client_msg_id":"30d3c79d-f83d-4978-b95c-2e6877bc2ef3","type":"message","text":"```function sum_first_N_int(N)\n        s = 0\n        for a in 1:N\n            s += a\n        end\n        s\n    end\n    @test ccall(generate_shlib_fptr(sum_first_N_int, (Int,)), Int, (Int,), 10) == 55```\n<https://github.com/tshort/StaticCompiler.jl/blob/00772b5c40a1a4191f9b2bcb0b1c2096aed56630/test/runtests.jl#L42-L77>","user":"USU9FRPEU","ts":"1616127463.048500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w7=qr","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"function sum_first_N_int(N)\n        s = 0\n        for a in 1:N\n            s += a\n        end\n        s\n    end\n    @test ccall(generate_shlib_fptr(sum_first_N_int, (Int,)), Int, (Int,), 10) == 55"}]},{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/tshort/StaticCompiler.jl/blob/00772b5c40a1a4191f9b2bcb0b1c2096aed56630/test/runtests.jl#L42-L77"}]}]}],"thread_ts":"1616083214.039100","parent_user_id":"UB7JS9CHF"}]