[{"client_msg_id":"56ca03d6-11df-4fd1-82a4-b079acfad9fb","type":"message","text":"```julia&gt; using STREAMBenchmark\n[ Info: Precompiling STREAMBenchmark [05e9033e-e298-417a-adae-495536c11ad4]\n\njulia&gt; memory_bandwidth(verbose=true)\nCOPY:  74593.8 MB/s\nSCALE: 75572.1 MB/s\nADD:   75428.4 MB/s\nTRIAD: 75899.1 MB/s\n(75500.3, 74593.8, 75899.1)\n\njulia&gt; STREAMBenchmark.multithreading() = false\n\njulia&gt; memory_bandwidth(verbose=true)\nCOPY:  25702.9 MB/s\nSCALE: 26215.1 MB/s\nADD:   24204.0 MB/s\nTRIAD: 23823.8 MB/s\n(24953.4, 23823.8, 26215.1)\n\njulia&gt; versioninfo()\nJulia Version 1.7.0-DEV.762\nCommit 6a30cc5635* (2021-03-27 07:36 UTC)\nPlatform Info:\n  OS: Linux (x86_64-generic-linux)\n  CPU: Intel(R) Core(TM) i9-10980XE CPU @ 3.00GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-11.0.1 (ORCJIT, cascadelake)\nEnvironment:\n  JULIA_EXCLUSIVE = 1\n  JULIA_NUM_THREADS = 36```","user":"UAUPJLBQX","ts":"1616831443.004500","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1616831525.000000"},"blocks":[{"type":"rich_text","block_id":"=sM","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using STREAMBenchmark\n[ Info: Precompiling STREAMBenchmark [05e9033e-e298-417a-adae-495536c11ad4]\n\njulia> memory_bandwidth(verbose=true)\nCOPY:  74593.8 MB/s\nSCALE: 75572.1 MB/s\nADD:   75428.4 MB/s\nTRIAD: 75899.1 MB/s\n(75500.3, 74593.8, 75899.1)\n\njulia> STREAMBenchmark.multithreading() = false\n\njulia> memory_bandwidth(verbose=true)\nCOPY:  25702.9 MB/s\nSCALE: 26215.1 MB/s\nADD:   24204.0 MB/s\nTRIAD: 23823.8 MB/s\n(24953.4, 23823.8, 26215.1)\n\njulia> versioninfo()\nJulia Version 1.7.0-DEV.762\nCommit 6a30cc5635* (2021-03-27 07:36 UTC)\nPlatform Info:\n  OS: Linux (x86_64-generic-linux)\n  CPU: Intel(R) Core(TM) i9-10980XE CPU @ 3.00GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-11.0.1 (ORCJIT, cascadelake)\nEnvironment:\n  JULIA_EXCLUSIVE = 1\n  JULIA_NUM_THREADS = 36"}]}]}],"thread_ts":"1616831443.004500","reply_count":19,"reply_users_count":2,"latest_reply":"1616834801.009800","reply_users":["UAUPJLBQX","U881D0W2C"],"is_locked":false,"subscribed":false},{"client_msg_id":"169c0b3a-7b53-4051-beac-d9f0c4c5f6e4","type":"message","text":"```julia&gt; memory_bandwidth(verbose=true)\nCOPY:  75322.4 MB/s\nSCALE: 78412.6 MB/s\nADD:   75942.6 MB/s\nTRIAD: 77458.7 MB/s\n(76700.7, 75322.4, 78412.6)\n\njulia&gt; Threads.nthreads()\n18```\nResults were a little better with 18 instead of 36 threads.","user":"UAUPJLBQX","ts":"1616831955.004800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JaKz","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> memory_bandwidth(verbose=true)\nCOPY:  75322.4 MB/s\nSCALE: 78412.6 MB/s\nADD:   75942.6 MB/s\nTRIAD: 77458.7 MB/s\n(76700.7, 75322.4, 78412.6)\n\njulia> Threads.nthreads()\n18"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Results were a little better with 18 instead of 36 threads."}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"525d5bb3-94dc-4cfa-bd2a-fb1d6c991911","type":"message","text":"I can confirm that (watching htop), only cores 1-18 showed any activity, with core 1 being the primary.","user":"UAUPJLBQX","ts":"1616832228.006000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"73=Wf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I can confirm that (watching htop), only cores 1-18 showed any activity, with core 1 being the primary."}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"295913fd-58d0-4d93-a7af-bb06e81d0bdd","type":"message","text":"Oh, and:\n```julia&gt; STREAMBenchmark.avxt() = true\n\njulia&gt; memory_bandwidth(verbose=true)\nCOPY:  78182.0 MB/s\nSCALE: 80731.8 MB/s\nADD:   79484.3 MB/s\nTRIAD: 79585.3 MB/s\n(79534.8, 78182.0, 80731.8)```","user":"UAUPJLBQX","ts":"1616832417.006200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"rA5vB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, and:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> STREAMBenchmark.avxt() = true\n\njulia> memory_bandwidth(verbose=true)\nCOPY:  78182.0 MB/s\nSCALE: 80731.8 MB/s\nADD:   79484.3 MB/s\nTRIAD: 79585.3 MB/s\n(79534.8, 78182.0, 80731.8)"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"707b6d6b-34f3-494c-862f-5cd5a431f338","type":"message","text":"Oh your `avtx = true` results look consistent across kernels. For me I saw two different plateaus, one for COPY and SCALE, the other one for ADD and TRIAD.","user":"U881D0W2C","ts":"1616832521.006400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"k+yE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh your "},{"type":"text","text":"avtx = true","style":{"code":true}},{"type":"text","text":" results look consistent across kernels. For me I saw two different plateaus, one for COPY and SCALE, the other one for ADD and TRIAD."}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"d6ebc75d-23d4-40bc-afc9-57470930c086","type":"message","text":"BTW: <https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069>","user":"U881D0W2C","ts":"1616832626.006800","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Thread affinitization: pinning Julia threads to cores","title_link":"https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069","text":"Hi all, as part of my attempt to create a simple port of the STREAM benchmark (STREAMBenchmark.jl) for estimating the memory bandwidth of a machine I asked myself whether it is possible to pin Julia threads to specific cores. Iâ€™m mostly focused on linux but macOS would be great as well (though I doubt it is possible on the latter). (I know that I can pin tasks to thread using, for example, @tspawnat 4 Threads.threadid() from ThreadPools.jl. Here I am concerned about pinning threads to cores.) ...","fallback":"JuliaLang: Thread affinitization: pinning Julia threads to cores","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1616832276,"from_url":"https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069"}],"blocks":[{"type":"rich_text","block_id":"MveF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"BTW: "},{"type":"link","url":"https://discourse.julialang.org/t/thread-affinitization-pinning-julia-threads-to-cores/58069"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"49fdbd83-132f-4825-9af7-2d83d5c5aa8f","type":"message","text":"Hmm, you could file an issue. Are you on the latest version?\nHow different were the plateaus?","user":"UAUPJLBQX","ts":"1616832882.007100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Okw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hmm, you could file an issue. Are you on the latest version?\nHow different were the plateaus?"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"e7a56b28-e26f-41ba-8496-3ddd49c171f7","type":"message","text":"I used `JULIA_EXCLUSIVE=1` for these benchmarks.","user":"UAUPJLBQX","ts":"1616832916.007300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ATn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I used "},{"type":"text","text":"JULIA_EXCLUSIVE=1","style":{"code":true}},{"type":"text","text":" for these benchmarks."}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"779d7b4c-d56a-4edc-92c2-7b7f2406d7f2","type":"message","text":"It basically pins to cores `1:Threads.nthreads()`","user":"UAUPJLBQX","ts":"1616832980.007500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"r5n=2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It basically pins to cores "},{"type":"text","text":"1:Threads.nthreads()","style":{"code":true}}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"898f707e-383b-49cd-bb92-4c83f8389cda","type":"message","text":"so with `-t8`, Julia is on cores 1-8","user":"UAUPJLBQX","ts":"1616832996.007700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OZ4/C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"so with "},{"type":"text","text":"-t8","style":{"code":true}},{"type":"text","text":", Julia is on cores 1-8"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"f36bfa77-866c-43ac-b3e7-2264a09d3c6d","type":"message","text":"```julia&gt; memory_bandwidth(verbose=true)\nCOPY:  29998.7 MB/s\nSCALE: 29788.9 MB/s\nADD:   28905.1 MB/s\nTRIAD: 29392.9 MB/s\n(29590.9, 28905.1, 29998.7)\n\njulia&gt; STREAMBenchmark.avxt() = true\n\njulia&gt; memory_bandwidth(verbose=true)\nCOPY:  27450.4 MB/s\nSCALE: 27237.5 MB/s\nADD:   23167.6 MB/s\nTRIAD: 23932.2 MB/s\n(25584.9, 23167.6, 27450.4)```","user":"U881D0W2C","ts":"1616833008.007900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UWps","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> memory_bandwidth(verbose=true)\nCOPY:  29998.7 MB/s\nSCALE: 29788.9 MB/s\nADD:   28905.1 MB/s\nTRIAD: 29392.9 MB/s\n(29590.9, 28905.1, 29998.7)\n\njulia> STREAMBenchmark.avxt() = true\n\njulia> memory_bandwidth(verbose=true)\nCOPY:  27450.4 MB/s\nSCALE: 27237.5 MB/s\nADD:   23167.6 MB/s\nTRIAD: 23932.2 MB/s\n(25584.9, 23167.6, 27450.4)"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"68e3dc6d-da9b-46be-a21a-5f03d9f967b0","type":"message","text":"&gt; It basically pins to coresÂ `1:Threads.nthreads()`\nYeah, thatâ€™s what I thought","user":"U881D0W2C","ts":"1616833029.008100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s/Q5","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"It basically pins to coresÂ "},{"type":"text","text":"1:Threads.nthreads()","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, thatâ€™s what I thought"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"cb083fef-8e79-4719-a727-50a4614a8cad","type":"message","text":"Would be great to have even more fine-grained control.","user":"U881D0W2C","ts":"1616833039.008300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AKN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would be great to have even more fine-grained control."}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"2e773628-29e7-47fe-b884-30ba62c5223b","type":"message","text":"```julia&gt; STREAMBenchmark.avxt() = true\n\njulia&gt; memory_bandwidth(verbose=true)\nCOPY:  83019.9 MB/s\nSCALE: 84283.9 MB/s\nADD:   85062.6 MB/s\nTRIAD: 85587.2 MB/s\n(84673.2, 83019.9, 85587.2)\n\njulia&gt; Threads.nthreads()\n8```","user":"UAUPJLBQX","ts":"1616833040.008500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"IXWb","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> STREAMBenchmark.avxt() = true\n\njulia> memory_bandwidth(verbose=true)\nCOPY:  83019.9 MB/s\nSCALE: 84283.9 MB/s\nADD:   85062.6 MB/s\nTRIAD: 85587.2 MB/s\n(84673.2, 83019.9, 85587.2)\n\njulia> Threads.nthreads()\n8"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"54067ace-6483-43ca-9521-2e9c1110edff","type":"message","text":"You mean to choose the specific cores?","user":"UAUPJLBQX","ts":"1616833081.008700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KGxi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You mean to choose the specific cores?"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"16c80d80-c8ae-4e32-aac7-8cc79b7f3948","type":"message","text":"like 1,3,5,7,11,13?","user":"UAUPJLBQX","ts":"1616833090.008900","team":"T68168MUP","edited":{"user":"UAUPJLBQX","ts":"1616833122.000000"},"blocks":[{"type":"rich_text","block_id":"/c9hO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"like 1,3,5,7,11,13?"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"48851734-e958-4262-8d21-37280cf4f956","type":"message","text":"or more realistically, for NUMA setups?","user":"UAUPJLBQX","ts":"1616833105.009100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wsx4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"or more realistically, for NUMA setups?"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"40d3714c-aca2-42b0-a127-05db720ae3c4","type":"message","text":"I meant specific cores, but NUMA setup options would probably be good enough for most cases.","user":"U881D0W2C","ts":"1616833153.009400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pOO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I meant specific cores, but NUMA setup options would probably be good enough for most cases."}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"17c9a252-ca5c-4e08-9ceb-fc3dd8c7e9c7","type":"message","text":"<https://github.com/JuliaSIMD/LoopVectorization.jl/issues/226>","user":"U881D0W2C","ts":"1616833387.009600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0g4","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaSIMD/LoopVectorization.jl/issues/226"}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX"},{"client_msg_id":"1d52aaef-f0f6-4550-a489-771e2940487b","type":"message","text":"Not related to that issue, but it should add `@inbounds` when `multithreading() == false`","user":"UAUPJLBQX","ts":"1616834801.009800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"qd9Tx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not related to that issue, but it should add "},{"type":"text","text":"@inbounds","style":{"code":true}},{"type":"text","text":" when "},{"type":"text","text":"multithreading() == false","style":{"code":true}}]}]}],"thread_ts":"1616831443.004500","parent_user_id":"UAUPJLBQX","reactions":[{"name":"+1","users":["U881D0W2C"],"count":1}]}]