[{"client_msg_id":"f6c19a05-b1e3-413a-a710-bed479eebd5b","type":"message","text":"what do you do if inference can't figure out the types","user":"U674T3KB3","ts":"1614729687.010100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wJrx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"what do you do if inference can't figure out the types"}]}]}],"thread_ts":"1614729687.010100","reply_count":16,"reply_users_count":4,"latest_reply":"1614736124.014400","reply_users":["UPUBAM63X","U674T3KB3","U6A0PD8CR","UDGT4PM41"],"subscribed":false},{"client_msg_id":"4c932a82-06cc-4243-9019-31f3747c9cb5","type":"message","text":"ah yea theres no guarantee inference would work at the base library level....","user":"UPUBAM63X","ts":"1614729766.010200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"exnN9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ah yea theres no guarantee inference would work at the base library level...."}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"0bf84c90-89fe-4740-9bd7-6505f9860e05","type":"message","text":"basically I'm thinking about some static well defined types in a DSL and forgetting that Julia isn't a vacuum","user":"UPUBAM63X","ts":"1614729859.010400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=+6p0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"basically I'm thinking about some static well defined types in a DSL and forgetting that Julia isn't a vacuum"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"16d2780a-f957-4d5c-9bef-5c855ad6e54a","type":"message","text":"yes, that's GPUCompiler + JET.jl for static enforcement of inferability","user":"U674T3KB3","ts":"1614729885.010600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AJL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, that's GPUCompiler + JET.jl for static enforcement of inferability"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"7c5baa07-f5ed-419b-86db-070813235ba4","type":"message","text":"This tool is all AbstractInterpreter based now, so we just need to find the right abstractions to compose them properly","user":"U674T3KB3","ts":"1614729949.010800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z8Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This tool is all AbstractInterpreter based now, so we just need to find the right abstractions to compose them properly"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"241dd288-cf6e-42fa-9d0f-776fe8e3a92d","type":"message","text":"looks like theres no quick hacking to be done here, I'll try to unpack some of this but it'll probably take a while hahaha","user":"UPUBAM63X","ts":"1614730215.011000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VTDWo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"looks like theres no quick hacking to be done here, I'll try to unpack some of this but it'll probably take a while hahaha"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"991e8510-b2e8-4aa7-b507-e1f1e0515ad5","type":"message","text":"<@U674T3KB3> you compile until you hit dynamic dispatch, and just leave them as is. For example: A developer uses SnoopCompile to find all the signatures they want to compile for their application, and feeds those into GPUCompiler to get one or more object files, some of which want to link to libjulia (specifically the runtime) for dynamic dispatch and I/O and such. We link them together, against a hypothetical libjulia-runtime.so, and slap on a loader frontend if it'll be an executable.","user":"U6A0PD8CR","ts":"1614732681.012200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Ij","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U674T3KB3"},{"type":"text","text":" you compile until you hit dynamic dispatch, and just leave them as is. For example: A developer uses SnoopCompile to find all the signatures they want to compile for their application, and feeds those into GPUCompiler to get one or more object files, some of which want to link to libjulia (specifically the runtime) for dynamic dispatch and I/O and such. We link them together, against a hypothetical libjulia-runtime.so, and slap on a loader frontend if it'll be an executable."}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"19bfb576-8c6b-40d3-bd47-a67c965ab601","type":"message","text":"yes, sure, but that's not what <@UPUBAM63X> was asking for","user":"U674T3KB3","ts":"1614732719.012400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EPi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, sure, but that's not what "},{"type":"user","user_id":"UPUBAM63X"},{"type":"text","text":" was asking for"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"e5947cf7-9fc5-4997-9e0c-772e0c1cfed3","type":"message","text":"Oh I see, yes that would be an issue. Maybe a \"try really hard mode\" for inference?","user":"U6A0PD8CR","ts":"1614732772.012600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ncByE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh I see, yes that would be an issue. Maybe a \"try really hard mode\" for inference?"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"135d2598-6b06-42bc-8d8d-6c138a058996","type":"message","text":"sure, you can fiddle with the prameters in AbstractInterpreter in the setup I described above","user":"U674T3KB3","ts":"1614732835.012800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"EhP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"sure, you can fiddle with the prameters in AbstractInterpreter in the setup I described above"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3","reactions":[{"name":"+1","users":["U6A0PD8CR"],"count":1}]},{"client_msg_id":"a1965828-74e1-4222-8ce3-72a98f3b46db","type":"message","text":"Yea basically what I want is, to have a series of functions/structs be staticly typed and compiled. No need for inference in the code I'd write, but inference probably is needed for core julia stuff and deps","user":"UPUBAM63X","ts":"1614734400.013100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Puy","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea basically what I want is, to have a series of functions/structs be staticly typed and compiled. No need for inference in the code I'd write, but inference probably is needed for core julia stuff and deps"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"715c3a04-2e5d-4974-8a0d-550586c53d4c","type":"message","text":"Even c++ and swift have dynamic dispatch (protocol witness tables  etc) so I think there's some overloading of terminology here","user":"UDGT4PM41","ts":"1614736011.013400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ghe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Even c++ and swift have dynamic dispatch (protocol witness tables  etc) so I think there's some overloading of terminology here"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"807140ec-cb26-44fd-9b2e-e353ecc3e5bf","type":"message","text":"But they are statically typed","user":"UDGT4PM41","ts":"1614736018.013600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MVIL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But they are statically typed"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"ea0d65ad-a3c0-49bf-8b74-80591edafe2a","type":"message","text":"I think the point being made here is that some users might want to guarantee that their code never does dynamic dispatch","user":"U6A0PD8CR","ts":"1614736068.013800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1bOY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think the point being made here is that some users might want to guarantee that their code never does dynamic dispatch"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"2ca3ab4e-0c33-4a42-ae3c-55497f07cb08","type":"message","text":"yes, otherwise you need at least the interpreter and the entire runtime state of the language","user":"U674T3KB3","ts":"1614736101.014000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uc5f3","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"yes, otherwise you need at least the interpreter and the entire runtime state of the language"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"64af48f5-e078-44c1-9069-c1bd18eded55","type":"message","text":"you could of course turn all of that into runtime errors","user":"U674T3KB3","ts":"1614736116.014200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bNBBH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you could of course turn all of that into runtime errors"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"},{"client_msg_id":"c2f53660-4931-499e-ade4-9d20c8ab3d74","type":"message","text":"but I suspect the user experience would be terrible","user":"U674T3KB3","ts":"1614736124.014400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"X0XA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but I suspect the user experience would be terrible"}]}]}],"thread_ts":"1614729687.010100","parent_user_id":"U674T3KB3"}]