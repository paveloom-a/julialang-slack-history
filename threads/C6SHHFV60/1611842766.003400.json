[{"client_msg_id":"82bee45a-9d35-4668-8869-cd2add2c1c5a","type":"message","text":"I'll post an issue if this is indeed not expected, just didn't want to spam if this is just a misunderstanding on my end","user":"U82RE6STE","ts":"1611842766.003400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"phf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'll post an issue if this is indeed not expected, just didn't want to spam if this is just a misunderstanding on my end"}]}]}],"thread_ts":"1611842766.003400","reply_count":1,"reply_users_count":1,"latest_reply":"1611843172.003500","reply_users":["U82RE6STE"],"subscribed":false},{"client_msg_id":"3e7e8255-fddb-42c1-baa0-02f9cb579f22","type":"message","text":"example to illustrate the issue:\n```julia&gt; Int\nInt64\n\njulia&gt; using LinearAlgebra\n\njulia&gt; LinearAlgebra.BlasInt\nInt32\n\njulia&gt; v = rand(type)\ntypeassert    typeintersect  typejoin       typemax        typemin        typeof\njulia&gt; v = rand(typemax(Int32) + 2);\n\njulia&gt; norm(v);\nERROR: InexactError: trunc(Int32, 2147483649)\nStacktrace:\n [1] throw_inexacterror(::Symbol, ::Type{Int32}, ::Int64) at ./boot.jl:558\n [2] checked_trunc_sint at ./boot.jl:580 [inlined]\n [3] toInt32 at ./boot.jl:617 [inlined]\n [4] Int32 at ./boot.jl:707 [inlined]\n [5] convert at ./number.jl:7 [inlined]\n [6] RefValue at ./refvalue.jl:8 [inlined]\n [7] convert at ./refpointer.jl:63 [inlined]\n [8] cconvert at ./essentials.jl:388 [inlined]\n [9] nrm2 at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl:413 [inlined]\n [10] nrm2 at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl:419 [inlined]\n [11] norm2(::Array{Float64,1}) at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl:105\n [12] norm(::Array{Float64,1}, ::Int64) at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:607\n [13] norm(::Array{Float64,1}) at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:605\n [14] top-level scope at REPL[5]:1```","user":"U82RE6STE","ts":"1611843172.003500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G=x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"example to illustrate the issue:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> Int\nInt64\n\njulia> using LinearAlgebra\n\njulia> LinearAlgebra.BlasInt\nInt32\n\njulia> v = rand(type)\ntypeassert    typeintersect  typejoin       typemax        typemin        typeof\njulia> v = rand(typemax(Int32) + 2);\n\njulia> norm(v);\nERROR: InexactError: trunc(Int32, 2147483649)\nStacktrace:\n [1] throw_inexacterror(::Symbol, ::Type{Int32}, ::Int64) at ./boot.jl:558\n [2] checked_trunc_sint at ./boot.jl:580 [inlined]\n [3] toInt32 at ./boot.jl:617 [inlined]\n [4] Int32 at ./boot.jl:707 [inlined]\n [5] convert at ./number.jl:7 [inlined]\n [6] RefValue at ./refvalue.jl:8 [inlined]\n [7] convert at ./refpointer.jl:63 [inlined]\n [8] cconvert at ./essentials.jl:388 [inlined]\n [9] nrm2 at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl:413 [inlined]\n [10] nrm2 at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl:419 [inlined]\n [11] norm2(::Array{Float64,1}) at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl:105\n [12] norm(::Array{Float64,1}, ::Int64) at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:607\n [13] norm(::Array{Float64,1}) at /buildworker/worker/package_linuxaarch64/build/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl:605\n [14] top-level scope at REPL[5]:1"}]}]}],"thread_ts":"1611842766.003400","parent_user_id":"U82RE6STE"}]