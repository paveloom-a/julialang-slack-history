[{"type":"message","text":"By the way are there any tutorials on Bayesian (Generalized) Linear Mixed Models in Turing? I don't see any here <https://turing.ml/dev/tutorials/>, seems like it would be nice to have that considering GLMMs are a big thing people use Bayesian for. In my case, I need to do an LMM with a random slope/intercept but in 1D but at each x for each ID I need to estimate the variance. Basically I have a bunch of continuous x with replicates (designed experiment) for each ID and need to get a *good estimate for the variance at each x:ID combo*, with limited data like possibly only 4 or less replicates for each x:ID. Looks something like this, but with way more Trial IDs (100+) and multiple observations for each Trial at each x. Data is also heteroscedastic. Then in the end, I also need to average the x:ID variance estimates at each x and then do another average of that across the whole range. Its a multilevel error analysis madness","files":[{"id":"F01HU92SJ6T","created":1610091166,"timestamp":1610091166,"name":"image.png","title":"image.png","mimetype":"image/png","filetype":"png","pretty_type":"PNG","user":"U01EF0QVAB0","editable":false,"size":83313,"mode":"hosted","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01HU92SJ6T/image.png","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01HU92SJ6T/download/image.png","thumb_64":"https://files.slack.com/files-tmb/T68168MUP-F01HU92SJ6T-d6baace478/image_64.png","thumb_80":"https://files.slack.com/files-tmb/T68168MUP-F01HU92SJ6T-d6baace478/image_80.png","thumb_360":"https://files.slack.com/files-tmb/T68168MUP-F01HU92SJ6T-d6baace478/image_360.png","thumb_360_w":360,"thumb_360_h":254,"thumb_480":"https://files.slack.com/files-tmb/T68168MUP-F01HU92SJ6T-d6baace478/image_480.png","thumb_480_w":480,"thumb_480_h":338,"thumb_160":"https://files.slack.com/files-tmb/T68168MUP-F01HU92SJ6T-d6baace478/image_160.png","thumb_720":"https://files.slack.com/files-tmb/T68168MUP-F01HU92SJ6T-d6baace478/image_720.png","thumb_720_w":720,"thumb_720_h":507,"thumb_800":"https://files.slack.com/files-tmb/T68168MUP-F01HU92SJ6T-d6baace478/image_800.png","thumb_800_w":800,"thumb_800_h":563,"thumb_960":"https://files.slack.com/files-tmb/T68168MUP-F01HU92SJ6T-d6baace478/image_960.png","thumb_960_w":960,"thumb_960_h":676,"thumb_1024":"https://files.slack.com/files-tmb/T68168MUP-F01HU92SJ6T-d6baace478/image_1024.png","thumb_1024_w":1024,"thumb_1024_h":721,"original_w":1346,"original_h":948,"thumb_tiny":"AwAhADDRbrSUrc0lABRRSUALTl6UynDtQAN1pKVgSaTaaAEpaMGjBoAKco4puDTl6UALRRRQAHpRQelFABRRRQB//9k=","permalink":"https://julialang.slack.com/files/U01EF0QVAB0/F01HU92SJ6T/image.png","permalink_public":"https://slack-files.com/T68168MUP-F01HU92SJ6T-fa4f532d0b","is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"8CcX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"By the way are there any tutorials on Bayesian (Generalized) Linear Mixed Models in Turing? I don't see any here "},{"type":"link","url":"https://turing.ml/dev/tutorials/"},{"type":"text","text":", seems like it would be nice to have that considering GLMMs are a big thing people use Bayesian for. In my case, I need to do an LMM with a random slope/intercept but in 1D but at each x for each ID I need to estimate the variance. Basically I have a bunch of continuous x with replicates (designed experiment) for each ID and need to get a "},{"type":"text","text":"good estimate for the variance at each x:ID combo","style":{"bold":true}},{"type":"text","text":", with limited data like possibly only 4 or less replicates for each x:ID. Looks something like this, but with way more Trial IDs (100+) and multiple observations for each Trial at each x. Data is also heteroscedastic. Then in the end, I also need to average the x:ID variance estimates at each x and then do another average of that across the whole range. Its a multilevel error analysis madness"}]}]}],"user":"U01EF0QVAB0","display_as_bot":false,"ts":"1610091236.315900","edited":{"user":"U01EF0QVAB0","ts":"1610091357.000000"},"thread_ts":"1610091236.315900","reply_count":17,"reply_users_count":4,"latest_reply":"1610346830.338000","reply_users":["U01EF0QVAB0","UC0SY9JFP","UH08DT0JU","U01BTNDCUBX"],"subscribed":false,"reactions":[{"name":"+1","users":["UC0SY9JFP"],"count":1}]},{"client_msg_id":"1687a2c4-3094-4a00-a1ef-c694bd567756","type":"message","text":"I also need to get confidence/credible intervals for the variance estimates themselves which is why im not doing a simple averaging, the sample size is too small (&lt;4) for each x:ID for a frequentist chi square interval to be reliable parametrically or via bootstrap","user":"U01EF0QVAB0","ts":"1610091579.316500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zxLz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I also need to get confidence/credible intervals for the variance estimates themselves which is why im not doing a simple averaging, the sample size is too small (<4) for each x:ID for a frequentist chi square interval to be reliable parametrically or via bootstrap"}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"E7598678-39ED-4D87-9482-68A75A1393C7","type":"message","text":"This should help: <https://turing.ml/dev/tutorials/5-linearregression/|https://turing.ml/dev/tutorials/5-linearregression/>","user":"UC0SY9JFP","ts":"1610095516.317100","team":"T68168MUP","attachments":[{"title":"Linear Regression","title_link":"https://turing.ml/dev/tutorials/5-linearregression/","text":"Linear Regression","fallback":"Linear Regression","from_url":"https://turing.ml/dev/tutorials/5-linearregression/","service_icon":"https://turing.ml/dev/assets/img/favicon.ico","service_name":"turing.ml","id":1,"original_url":"https://turing.ml/dev/tutorials/5-linearregression/"}],"blocks":[{"type":"rich_text","block_id":"V7o","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This should help: "},{"type":"link","url":"https://turing.ml/dev/tutorials/5-linearregression/","text":"https://turing.ml/dev/tutorials/5-linearregression/"}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"46F03361-15EF-4959-B272-27D374AE608E","type":"message","text":"But I agree we should have a tutorial explicitly in mixed effects models. We are currently refactoring parts of the docs. Could you please open an issue on Turing.jl for this.","user":"UC0SY9JFP","ts":"1610095609.319600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nZ804","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I agree we should have a tutorial explicitly in mixed effects models. We are currently refactoring parts of the docs. Could you please open an issue on Turing.jl for this."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0","reactions":[{"name":"+1","users":["UH08DT0JU","U01EF0QVAB0"],"count":2}]},{"client_msg_id":"3e298042-cc03-45cd-ae03-2ed1e8d0bbfa","type":"message","text":"This might be a good guide for creating models:\n\n<https://mc-stan.org/docs/2_25/stan-users-guide/linear-regression.html>","user":"UH08DT0JU","ts":"1610128423.320000","team":"T68168MUP","attachments":[{"title":"1.1 Linear Regression | Stan User’s Guide","title_link":"https://mc-stan.org/docs/2_25/stan-users-guide/linear-regression.html","text":"Stan user’s guide with examples and programming techniques.","fallback":"1.1 Linear Regression | Stan User’s Guide","from_url":"https://mc-stan.org/docs/2_25/stan-users-guide/linear-regression.html","service_name":"mc-stan.org","id":1,"original_url":"https://mc-stan.org/docs/2_25/stan-users-guide/linear-regression.html"}],"blocks":[{"type":"rich_text","block_id":"a0eI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This might be a good guide for creating models:\n\n"},{"type":"link","url":"https://mc-stan.org/docs/2_25/stan-users-guide/linear-regression.html"}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"21cf9daa-4b4a-4be5-bce2-acf112ccf511","type":"message","text":"If I understand Statistical Rethinking (2020) correctly, then GLMs are models with a link function and are not multilevel yet. I'm creating a static site for some of the models together with Rob Goedman. This model might be interesting for you <https://statisticalrethinkingjulia.github.io/TuringModels.jl/models/beta-binomial/> See also the other models for examples.","user":"U01BTNDCUBX","ts":"1610128736.320600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JrYfd","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If I understand Statistical Rethinking (2020) correctly, then GLMs are models with a link function and are not multilevel yet. I'm creating a static site for some of the models together with Rob Goedman. This model might be interesting for you "},{"type":"link","url":"https://statisticalrethinkingjulia.github.io/TuringModels.jl/models/beta-binomial/"},{"type":"text","text":" See also the other models for examples."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"76e7c852-ca1e-4e08-891d-75c1cb468b75","type":"message","text":"Thanks, yea I probably should create a github haha so I can open issues. Still new to that, haven't learned Git yet.  Yea linear regression/GLMs aren't multilevel yet, and multilevel is a big use case for Bayesian methods. Is the Stan stuff easily translatable to Turing.jl? I am using Turing.jl because the syntax seems much more user friendly.","user":"U01EF0QVAB0","ts":"1610130588.320900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WUa","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks, yea I probably should create a github haha so I can open issues. Still new to that, haven't learned Git yet.  Yea linear regression/GLMs aren't multilevel yet, and multilevel is a big use case for Bayesian methods. Is the Stan stuff easily translatable to Turing.jl? I am using Turing.jl because the syntax seems much more user friendly."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"43a15024-c37d-4bc2-98ef-e1285af3a82c","type":"message","text":"I think it’s much easier to simply go from the linear regression example in the Turing documentation.","user":"UC0SY9JFP","ts":"1610130675.321300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tajlK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think it’s much easier to simply go from the linear regression example in the Turing documentation."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"bdc17f7c-11d1-4464-8a82-b9e04b012746","type":"message","text":"I guess the main part is making that multi-level random intercept/slope which I don't know how to do.","user":"U01EF0QVAB0","ts":"1610131381.321500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"P4qv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess the main part is making that multi-level random intercept/slope which I don't know how to do."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"17ae3be8-e19c-43fc-ba11-ddc25a23733a","type":"message","text":"Well, the linked Stan doc is simply a linear regression model.","user":"UC0SY9JFP","ts":"1610131463.321700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"4J5l","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, the linked Stan doc is simply a linear regression model."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"31e9be48-9c83-4a3e-917e-2c3ca8358a82","type":"message","text":"But implementing a multilevel model is not very difficult in Turing either.","user":"UC0SY9JFP","ts":"1610131489.321900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"BhUn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But implementing a multilevel model is not very difficult in Turing either."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"79e5fd5b-8712-4b32-ba5a-9d5bd0bef06c","type":"message","text":"I'm looking at the Stan docs it doesn't seem to have multilevel linear but it does have multilevel logistic. Yea I can't imagine it would be hard in Turing after seeing the general syntax for a mixed model","user":"U01EF0QVAB0","ts":"1610131585.322100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VQ9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm looking at the Stan docs it doesn't seem to have multilevel linear but it does have multilevel logistic. Yea I can't imagine it would be hard in Turing after seeing the general syntax for a mixed model"}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"dfc36141-9b23-4523-9de4-0b39c7145c96","type":"message","text":"A good starting point is to start from the math. notation of the multilevel model you are interested in and try to write this up in Turing. The Turing model is often very close to the math notation.","user":"UC0SY9JFP","ts":"1610131613.322300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"JrB","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A good starting point is to start from the math. notation of the multilevel model you are interested in and try to write this up in Turing. The Turing model is often very close to the math notation."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"6aaa723f-de36-427f-a580-d5316e45ff17","type":"message","text":"Here is an example of a multilevel linear regression model: <https://mc-stan.org/users/documentation/case-studies/radon.html>","user":"UH08DT0JU","ts":"1610136711.323700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"b6cJt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here is an example of a multilevel linear regression model: "},{"type":"link","url":"https://mc-stan.org/users/documentation/case-studies/radon.html"}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"f9ff7dba-726a-4242-ac5e-1a3c14d9e29f","type":"message","text":"I noticed in the stan stuff like here it declares the mu ahead of time and then uses a loop for each of the D levels. In Julia, would this just be using no loop for that and doing something like `mu ~ Normal.([0,0,0,0,0],[100,100,100,100,100])` ?\n```model {\n  for (d in 1:D) {\n    mu[d] ~ normal(0, 100);\n    for (l in 1:L)\n      beta[l,d] ~ normal(mu[d], sigma[d]);\n  }\n  for (n in 1:N)\n    y[n] ~ bernoulli(inv_logit(x[n] * beta[ll[n]]));\n}```","user":"U01EF0QVAB0","ts":"1610152947.324200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ulSJe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I noticed in the stan stuff like here it declares the mu ahead of time and then uses a loop for each of the D levels. In Julia, would this just be using no loop for that and doing something like "},{"type":"text","text":"mu ~ Normal.([0,0,0,0,0],[100,100,100,100,100])","style":{"code":true}},{"type":"text","text":" ?\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"model {\n  for (d in 1:D) {\n    mu[d] ~ normal(0, 100);\n    for (l in 1:L)\n      beta[l,d] ~ normal(mu[d], sigma[d]);\n  }\n  for (n in 1:N)\n    y[n] ~ bernoulli(inv_logit(x[n] * beta[ll[n]]));\n}"}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"27f327cf-2ad4-43e6-86d6-e50b800e3684","type":"message","text":"Good question. I don't know much about building multilevel models in Turing. The documentation recommends using a multivariate normal, but I don't know how this would apply in this case.\n\nI'm not positive, but I think you need to use y ~ LogitNormal. Also, I think you need to index x and beta as `x[:,n]` and `beta[:,ll[n]]` . Otherwise, it appears that you are only accessing single elements.\n\nI would be interested in seeing how this should be done efficiently in Turing.","user":"UH08DT0JU","ts":"1610199501.329600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hQSP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Good question. I don't know much about building multilevel models in Turing. The documentation recommends using a multivariate normal, but I don't know how this would apply in this case.\n\nI'm not positive, but I think you need to use y ~ LogitNormal. Also, I think you need to index x and beta as"},{"type":"text","text":" x[:,n]","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"beta[:,ll[n]]","style":{"code":true}},{"type":"text","text":" . Otherwise, it appears that you are only accessing single elements.\n\nI would be interested in seeing how this should be done efficiently in Turing."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"91BB823A-7BEC-4A26-AE8C-2E242243CA51","type":"message","text":"You could do something in the lines of:\n\n```\nmu ~ MvNormal(zeros(D), 1)\nmu *= 100\nbeta ~ filldist(MvNormal(mu, sigma), L)\nz = inv_logit.(x .* beta[:,ll])\nfor n in eachindex(y)\n    y[n] ~ Bernoulli(z[n])\nend\n```\n\nI’m not at a computer atm. So it might not run out of the box.","user":"UC0SY9JFP","ts":"1610300475.336700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZaUkS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could do something in the lines of:\n\n"},{"type":"text","text":"```\nmu ~ MvNormal(zeros(D), 1)\nmu *= 100\nbeta ~ filldist(MvNormal(mu, sigma), L)\nz = inv_logit.(x .* beta[:,ll])\nfor n in eachindex(y)\n    y[n] ~ Bernoulli(z[n])\nend\n```\n"},{"type":"text","text":"\nI’m not at a computer atm. So it might not run out of the box."}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0"},{"client_msg_id":"a6ac0f31-9633-44ab-a1f1-827e472a5447","type":"message","text":"I made a github and filed the issue: <https://github.com/TuringLang/Turing.jl/issues/1518>. Been very helpful so far in learning it for the LMM case and can also be a starting point for others as there aren't many resources about this yet. Currently experimenting with some stuff with the code skeleton he provided, which seems to work. Its actually easier than some of the PyMC3 or Stan stuff I have seen out there. Really appreciate the help from this community!","user":"U01EF0QVAB0","ts":"1610346830.338000","team":"T68168MUP","edited":{"user":"U01EF0QVAB0","ts":"1610346907.000000"},"blocks":[{"type":"rich_text","block_id":"x9F","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I made a github and filed the issue: "},{"type":"link","url":"https://github.com/TuringLang/Turing.jl/issues/1518"},{"type":"text","text":". Been very helpful so far in learning it for the LMM case and can also be a starting point for others as there aren't many resources about this yet. Currently experimenting with some stuff with the code skeleton he provided, which seems to work. Its actually easier than some of the PyMC3 or Stan stuff I have seen out there. Really appreciate the help from this community!"}]}]}],"thread_ts":"1610091236.315900","parent_user_id":"U01EF0QVAB0","reactions":[{"name":"+1","users":["UC0SY9JFP"],"count":1}]}]