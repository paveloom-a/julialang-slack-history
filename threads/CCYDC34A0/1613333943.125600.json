[{"client_msg_id":"2959cd82-0d89-4ec0-b938-04fcea6589f1","type":"message","text":"Hey folks, does anyone know of an Julia example of running a dynamical system on a graph/network and then using Turing the estimate the parameters of that dynamical system. Seems like I could just use the Julia DifferentialEquations `DiscreteProblem` to define the problem and then run this inside of Turing as I normally would. Am I oversimplifying, or would something like this work. I imagine that running something like this might take a while, depending on the size of the graph. Right now this is just a proof of concept--so I can keep the graph pretty small.","user":"UDDSTBX19","ts":"1613333943.125600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jGI2e","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey folks, does anyone know of an Julia example of running a dynamical system on a graph/network and then using Turing the estimate the parameters of that dynamical system. Seems like I could just use the Julia DifferentialEquations "},{"type":"text","text":"DiscreteProblem","style":{"code":true}},{"type":"text","text":" to define the problem and then run this inside of Turing as I normally would. Am I oversimplifying, or would something like this work. I imagine that running something like this might take a while, depending on the size of the graph. Right now this is just a proof of concept--so I can keep the graph pretty small."}]}]}],"thread_ts":"1613333943.125600","reply_count":3,"reply_users_count":2,"latest_reply":"1613485481.148000","reply_users":["U01M641BZEY","UDDSTBX19"],"subscribed":false},{"client_msg_id":"0B655256-BD29-43F4-8A47-5BBC0784FDC0","type":"message","text":"I’ve just started working on something similar. At the moment I’m working with a single ode with two parameters on a small network and using Turing to infer initial conditions and parameters. Seems to work fine using ODEProblem inside the Turing model. Haven’t scaled up to larger, more complicated systems yet. ","user":"U01M641BZEY","ts":"1613334841.130100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"O62","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’ve just started working on something similar. At the moment I’m working with a single ode with two parameters on a small network and using Turing to infer initial conditions and parameters. Seems to work fine using ODEProblem inside the Turing model. Haven’t scaled up to larger, more complicated systems yet. "}]}]}],"thread_ts":"1613333943.125600","parent_user_id":"UDDSTBX19"},{"client_msg_id":"fe215df8-1620-4279-b675-0dd82cd45ef5","type":"message","text":"<@U01M641BZEY> Oh this make sense. Yeah I was starting with the discrete problem, but certainly the continuous problem is on my list as well. Were you able to get it working? And how long is it taking to do--seems like it could easily get prohibitive unless the julia ode runner can handle running the graphs on gpu too. The NetworkDynamics folks might already be working on this, so it might be faster than I think :wink:.","user":"UDDSTBX19","ts":"1613335104.130900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GLy","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U01M641BZEY"},{"type":"text","text":" Oh this make sense. Yeah I was starting with the discrete problem, but certainly the continuous problem is on my list as well. Were you able to get it working? And how long is it taking to do--seems like it could easily get prohibitive unless the julia ode runner can handle running the graphs on gpu too. The NetworkDynamics folks might already be working on this, so it might be faster than I think "},{"type":"emoji","name":"wink"},{"type":"text","text":"."}]}]}],"thread_ts":"1613333943.125600","parent_user_id":"UDDSTBX19"},{"client_msg_id":"e85ebd87-7308-4299-8e6c-761d84e5b304","type":"message","text":"<@UDDSTBX19> Sorry for my late reply. Just getting back to my models now. Yes, I’ve gotten them working. For a simple network diffusion model du/dt = -k*L*u, if I’m estimated only the k and noise, sigma, it’s very snappy and takes less than a minute on a small random graph (5 nodes). If inferring initial conditions as well then it takes a little longer (a few minutes). I’m scaling up today so will let you know how i get on. 10 nodes with 12 parameters takes approx 10 minutes with NUTS and 1000 samples and 10 parallel chains","user":"U01M641BZEY","ts":"1613485481.148000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UtWO7","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UDDSTBX19"},{"type":"text","text":" Sorry for my late reply. Just getting back to my models now. Yes, I’ve gotten them working. For a simple network diffusion model du/dt = -k*L*u, if I’m estimated only the k and noise, sigma, it’s very snappy and takes less than a minute on a small random graph (5 nodes). If inferring initial conditions as well then it takes a little longer (a few minutes). I’m scaling up today so will let you know how i get on. 10 nodes with 12 parameters takes approx 10 minutes with NUTS and 1000 samples and 10 parallel chains"}]}]}],"thread_ts":"1613333943.125600","parent_user_id":"UDDSTBX19"}]