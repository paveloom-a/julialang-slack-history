[{"client_msg_id":"fd371119-693e-4a23-b731-a3913943636e","type":"message","text":"Hello, how do I make my prior ordered? MWE\n\n```@model function gdemo(y)\n    theta ~ filldist(Normal(1, 2),6)\n    y .~ OrderedLogistic(0, theta) \nend```\nTo be specific, I want to order my `theta` priors for `OrderedLogistic` so `theta[6] &gt; theta[5] &gt; theta[4] &gt; theta[3] &gt; theta[2] &gt; theta[1]` ?\n\nIf this isn't supported yet, is there any dirty workaround? I am stucked with this for a long time so I don't mind some workaround at the moment :eyes:","user":"U011PPW7K53","ts":"1613219560.111200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZfIG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello, how do I make my prior ordered? MWE\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@model function gdemo(y)\n    theta ~ filldist(Normal(1, 2),6)\n    y .~ OrderedLogistic(0, theta) \nend"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"\nTo be specific, I want to order my "},{"type":"text","text":"theta","style":{"code":true}},{"type":"text","text":" priors for "},{"type":"text","text":"OrderedLogistic","style":{"code":true}},{"type":"text","text":" so "},{"type":"text","text":"theta[6] > theta[5] > theta[4] > theta[3] > theta[2] > theta[1]","style":{"code":true}},{"type":"text","text":" ?\n\nIf this isn't supported yet, is there any dirty workaround? I am stucked with this for a long time so I don't mind some workaround at the moment "},{"type":"emoji","name":"eyes"}]}]}],"thread_ts":"1613219560.111200","reply_count":2,"reply_users_count":2,"latest_reply":"1613239052.111600","reply_users":["U011PPW7K53","U017YGFQTE3"],"subscribed":false},{"client_msg_id":"f6507d64-9996-48cd-8dbc-a85521589a7f","type":"message","text":"Got this error for cutpoints parameter named `theta` in MWE\n\n```ERROR: TaskFailedException: cutpoints are not sorted```","user":"U011PPW7K53","ts":"1613220383.111300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5RIT","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Got this error for cutpoints parameter named "},{"type":"text","text":"theta","style":{"code":true}},{"type":"text","text":" in MWE\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: TaskFailedException: cutpoints are not sorted"}]}]}],"thread_ts":"1613219560.111200","parent_user_id":"U011PPW7K53"},{"client_msg_id":"49fc48c9-00db-440a-8378-924984ff8882","type":"message","text":"Would either of the following work for your use case?\n• Substitution phi[j] = theta[j+1] - theta[j]  and setting truncated priors for the phis?\n• rejection sampling using a try catch loop and `Turing.@addlogprob! -Inf`\n• Sorting theta before passing to the logistic function. This should still work with forwarddiff. it'll mean your theta estimates are unordered, but they're treated as ordered in the `OrderedLogistic`. ","user":"U017YGFQTE3","ts":"1613239052.111600","team":"T68168MUP","edited":{"user":"U017YGFQTE3","ts":"1613239263.000000"},"blocks":[{"type":"rich_text","block_id":"CkJOn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would either of the following work for your use case?\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Substitution phi[j] = theta[j+1] - theta[j]  and setting truncated priors for the phis?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"rejection sampling using a try catch loop and "},{"type":"text","text":"Turing.@addlogprob! -Inf","style":{"code":true}}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Sorting theta before passing to the logistic function. This should still work with forwarddiff. it'll mean your theta estimates are unordered, but they're treated as ordered in the "},{"type":"text","text":"OrderedLogistic","style":{"code":true}},{"type":"text","text":". "}]}],"style":"bullet","indent":0}]}],"thread_ts":"1613219560.111200","parent_user_id":"U011PPW7K53"}]