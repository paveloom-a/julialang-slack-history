[{"client_msg_id":"7e2cbc64-cbc8-4819-b71d-9cc7a31a9883","type":"message","text":"If my Turing model has a positive variable `τ`, then `log(τ)` is what's actually being sampled. Is there a way given a `Chains` object and a `Model` to get all of the transformed samples (i.e. `log(τ)`)?","user":"UHDQQ4GN6","ts":"1608317946.121400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Zt6em","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If my Turing model has a positive variable "},{"type":"text","text":"τ","style":{"code":true}},{"type":"text","text":", then "},{"type":"text","text":"log(τ)","style":{"code":true}},{"type":"text","text":" is what's actually being sampled. Is there a way given a "},{"type":"text","text":"Chains","style":{"code":true}},{"type":"text","text":" object and a "},{"type":"text","text":"Model","style":{"code":true}},{"type":"text","text":" to get all of the transformed samples (i.e. "},{"type":"text","text":"log(τ)","style":{"code":true}},{"type":"text","text":")?"}]}]}],"thread_ts":"1608317946.121400","reply_count":7,"reply_users_count":2,"latest_reply":"1608326456.122800","reply_users":["U9JNHB83X","UHDQQ4GN6"],"subscribed":false},{"client_msg_id":"048b8992-44c6-4e6c-8a71-346e5f1bca1f","type":"message","text":"Not that I'm aware of -- we do all the transforms before it makes it to the chain. We could add a flag if this is a common use case?","user":"U9JNHB83X","ts":"1608318801.121500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"1MTjH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Not that I'm aware of -- we do all the transforms before it makes it to the chain. We could add a flag if this is a common use case?"}]}]}],"thread_ts":"1608317946.121400","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"733abe63-466c-4369-8a9f-f0ac9f675a7f","type":"message","text":"This could totally be a post-processing thing. e.g. I have a model, and from that I should be able to somehow get its bijector, right? So in principle I could get the samples from the `Chains` in a format to pass through the bijector to get the unconstrained variables?\n\nI don't know if this is a common use case, but when diagnosing poor convergence it is sometimes more convenient to work with the unconstrained variables, since the unconstrained space is where the variables are actually sampled.","user":"UHDQQ4GN6","ts":"1608320355.121700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XlL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"This could totally be a post-processing thing. e.g. I have a model, and from that I should be able to somehow get its bijector, right? So in principle I could get the samples from the "},{"type":"text","text":"Chains","style":{"code":true}},{"type":"text","text":" in a format to pass through the bijector to get the unconstrained variables?\n\nI don't know if this is a common use case, but when diagnosing poor convergence it is sometimes more convenient to work with the unconstrained variables, since the unconstrained space is where the variables are actually sampled."}]}]}],"thread_ts":"1608317946.121400","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"c98e42ce-6868-40a9-94cb-0452aba029fa","type":"message","text":"It's reasonably straightforward to add this, but not quick -- there's a lot of code that'd need to be touched","user":"U9JNHB83X","ts":"1608320942.121900","team":"T68168MUP","edited":{"user":"U9JNHB83X","ts":"1608320949.000000"},"blocks":[{"type":"rich_text","block_id":"HfmP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's reasonably straightforward to add this, but not quick -- there's a lot of code that'd need to be touched"}]}]}],"thread_ts":"1608317946.121400","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"f3b47cbe-c174-4a02-b34d-d8f4f7e30bdb","type":"message","text":"But I understand the need for this","user":"U9JNHB83X","ts":"1608320962.122200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CJV0T","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"But I understand the need for this"}]}]}],"thread_ts":"1608317946.121400","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"c4830bc4-ddf1-4210-8b2e-046c834cba62","type":"message","text":"I wouldn't put it at high priority, but I'll open an issue.","user":"UHDQQ4GN6","ts":"1608321024.122400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XHuZ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I wouldn't put it at high priority, but I'll open an issue."}]}]}],"thread_ts":"1608317946.121400","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"5dea76b9-5dbe-4f2f-8bb7-2c739015802b","type":"message","text":"<https://github.com/TuringLang/Turing.jl/issues/1494>","user":"UHDQQ4GN6","ts":"1608321335.122600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Ag18v","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/TuringLang/Turing.jl/issues/1494"}]}]}],"thread_ts":"1608317946.121400","parent_user_id":"UHDQQ4GN6"},{"client_msg_id":"2f4ba082-d12a-44b7-8b32-d54ab939a7f4","type":"message","text":"Thanks!","user":"U9JNHB83X","ts":"1608326456.122800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"KxsQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks!"}]}]}],"thread_ts":"1608317946.121400","parent_user_id":"UHDQQ4GN6"}]