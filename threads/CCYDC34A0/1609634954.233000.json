[{"client_msg_id":"6617e50b-f8ba-44dc-8470-c759b0bc3934","type":"message","text":"I'm doing linear regression with 5 data columns and 100k rows, and it takes about 15 minutes with ADVI(10, 10_000). Is that normal?","user":"U01ARRMLM7E","ts":"1609634954.233000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"CtCIh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm doing linear regression with 5 data columns and 100k rows, and it takes about 15 minutes with ADVI(10, 10_000). Is that normal?"}]}]}],"thread_ts":"1609634954.233000","reply_count":13,"reply_users_count":4,"latest_reply":"1609700892.243700","reply_users":["U9JNHB83X","U01ARRMLM7E","UC0SY9JFP","UH08DT0JU"],"subscribed":false},{"client_msg_id":"ecefd97c-c73a-4e97-9776-9a566528ea9c","type":"message","text":"It's hard to say, how many variables?","user":"U9JNHB83X","ts":"1609635110.233100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9=X","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's hard to say, how many variables?"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"ca479654-bd33-456f-a95d-b25495b0db20","type":"message","text":"4 coefficients + intercept + noise scale","user":"U01ARRMLM7E","ts":"1609635314.233700","team":"T68168MUP","edited":{"user":"U01ARRMLM7E","ts":"1609635360.000000"},"blocks":[{"type":"rich_text","block_id":"dx=Tv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"4 coefficients + intercept + noise scale"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"6df69f8a-c7c1-4d73-9a57-723d9fb0440a","type":"message","text":"NUTS is only about 4 minutes","user":"U01ARRMLM7E","ts":"1609635870.234400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7GF7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NUTS is only about 4 minutes"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"0fcea2f4-e1e4-4728-b8b0-ebd48e05db21","type":"message","text":"With n=1million, ADVI(10,10000) says ETA 2hr, NUTS says 50min","user":"U01ARRMLM7E","ts":"1609637136.234600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bhe","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"With n=1million, ADVI(10,10000) says ETA 2hr, NUTS says 50min"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"dffeac71-707c-4164-b55d-5d1187f9ffa5","type":"message","text":"Uh I think that seems like a lot, yeah.","user":"U9JNHB83X","ts":"1609637926.234800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ye6x","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Uh I think that seems like a lot, yeah."}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"47267ec7-ee9c-4f78-b966-fca6858086a4","type":"message","text":"Alright I'll try to make a minimal example","user":"U01ARRMLM7E","ts":"1609637974.235100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SZq6","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alright I'll try to make a minimal example"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"37e6be13-bb40-4055-99bc-98d006b0f358","type":"message","text":"```using Random\nusing Turing\nusing Turing: Variational\nusing ConjugatePriors\nusing Turing.Bijectors\nusing RDatasets\n\nSAMPLE_SIZE = 1_000_000\n\n\n# Bayesian linear regression.\n@model linear_regression(x, y, ) = begin\n\n\n    # Set intercept prior.\n    intercept ~ Normal(mean(y), 3)\n\n    # Set the priors on our coefficients.\n    coefficients ~ MvNormal(size(x,2), .5)\n\n    # Calculate all the mu terms.\n    mu = intercept .+ x * coefficients\n\n\n    σ ~ truncated(Normal(0,5), 0, Inf)\n    y ~ MvNormal(mu, σ)\nend;\n\n\n\ndf, parameters = let\n    β = (\n        β_0 = 7,\n        β_1 = 0.05,\n        β_2 = 0.10,\n        β_3 = 0.15,\n        β_4 = 0.20,\n    )\n    σ = 2\n    parameters = (β..., σ=σ)\n    parameters_df = DataFrame(\n        parameter=collect(keys(parameters)),\n        value=collect(values(parameters)),\n    )\n\n    N = SAMPLE_SIZE\n    X = DataFrame(\n        x_0=fill(1, N),\n        x_1=rand([1,2], N),\n        x_2=rand(1:1:10, N),\n        x_3=rand([0,1], N),\n        x_4=rand(0:1:10, N),\n    )\n    df = transform(X)\n    μ = Matrix(df) * collect(β)\n    ϵ = rand(Normal(0, σ), N)\n    y = μ .+ ϵ\n\n    (df = transform(\n        X,\n        [] =&gt; (() -&gt; μ) =&gt; :μ,\n        [] =&gt; (() -&gt; ϵ) =&gt; :ϵ,\n        [] =&gt; (() -&gt; y) =&gt; :y,\n        ),\n     parameters = parameters_df,    )\nend\n\n\n\nm = model = linear_regression(Matrix(select(df, [ :x_1, :x_2, :x_3, :x_4])), df.y)\n\n\n\n# samples_nuts =  @time sample(model, NUTS(0.65), 3000)\n# estimate_vi = @time vi(model, ADVI(10, 10_000))```","user":"U01ARRMLM7E","ts":"1609645865.235300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=M=VS","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Random\nusing Turing\nusing Turing: Variational\nusing ConjugatePriors\nusing Turing.Bijectors\nusing RDatasets\n\nSAMPLE_SIZE = 1_000_000\n\n\n# Bayesian linear regression.\n@model linear_regression(x, y, ) = begin\n\n\n    # Set intercept prior.\n    intercept ~ Normal(mean(y), 3)\n\n    # Set the priors on our coefficients.\n    coefficients ~ MvNormal(size(x,2), .5)\n\n    # Calculate all the mu terms.\n    mu = intercept .+ x * coefficients\n\n\n    σ ~ truncated(Normal(0,5), 0, Inf)\n    y ~ MvNormal(mu, σ)\nend;\n\n\n\ndf, parameters = let\n    β = (\n        β_0 = 7,\n        β_1 = 0.05,\n        β_2 = 0.10,\n        β_3 = 0.15,\n        β_4 = 0.20,\n    )\n    σ = 2\n    parameters = (β..., σ=σ)\n    parameters_df = DataFrame(\n        parameter=collect(keys(parameters)),\n        value=collect(values(parameters)),\n    )\n\n    N = SAMPLE_SIZE\n    X = DataFrame(\n        x_0=fill(1, N),\n        x_1=rand([1,2], N),\n        x_2=rand(1:1:10, N),\n        x_3=rand([0,1], N),\n        x_4=rand(0:1:10, N),\n    )\n    df = transform(X)\n    μ = Matrix(df) * collect(β)\n    ϵ = rand(Normal(0, σ), N)\n    y = μ .+ ϵ\n\n    (df = transform(\n        X,\n        [] => (() -> μ) => :μ,\n        [] => (() -> ϵ) => :ϵ,\n        [] => (() -> y) => :y,\n        ),\n     parameters = parameters_df,    )\nend\n\n\n\nm = model = linear_regression(Matrix(select(df, [ :x_1, :x_2, :x_3, :x_4])), df.y)\n\n\n\n# samples_nuts =  @time sample(model, NUTS(0.65), 3000)\n# estimate_vi = @time vi(model, ADVI(10, 10_000))"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"e2921606-3012-474d-a694-66ca3b79b85b","type":"message","text":"NUTS ETA is 2h20min, ADVI ETA is 5h28m","user":"U01ARRMLM7E","ts":"1609645914.235500","team":"T68168MUP","edited":{"user":"U01ARRMLM7E","ts":"1609646139.000000"},"blocks":[{"type":"rich_text","block_id":"C1/ba","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NUTS ETA is 2h20min, ADVI ETA is 5h28m"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"9c7c2dd2-56aa-4297-ba2d-0c7643e9bbef","type":"message","text":"Is there something I can do to make it faster, without losing too much acuracy?","user":"U01ARRMLM7E","ts":"1609648376.235900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"QMJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there something I can do to make it faster, without losing too much acuracy?"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"eee397b6-0eea-490c-a15f-3a0315e65035","type":"message","text":"NUTS finished after 3hr9min, ADVI still predicting another 2hr","user":"U01ARRMLM7E","ts":"1609657790.236200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cNdg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NUTS finished after 3hr9min, ADVI still predicting another 2hr"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"8BCD769F-BDB8-4DDD-9694-476DA4EDB0B5","type":"message","text":"I think we still use forwarddiff as standard AD. Could you please try using a reverse mode AD? Say reversed diff or zygote. You can find a documentation about changing the AD here: <https://turing.ml/dev/docs/using-turing/autodiff|https://turing.ml/dev/docs/using-turing/autodiff>","user":"UC0SY9JFP","ts":"1609690837.240500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"UOF1G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think we still use forwarddiff as standard AD. Could you please try using a reverse mode AD? Say reversed diff or zygote. You can find a documentation about changing the AD here: "},{"type":"link","url":"https://turing.ml/dev/docs/using-turing/autodiff","text":"https://turing.ml/dev/docs/using-turing/autodiff"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"BC2C1D92-AA66-44E1-A3EA-79AC7C46C089","type":"message","text":"Oh wait. You have only very few parameters it seems. So forward mode should actually be fine. ","user":"UC0SY9JFP","ts":"1609690989.241900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GNKCJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh wait. You have only very few parameters it seems. So forward mode should actually be fine. "}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"},{"client_msg_id":"dbd2764e-c269-4035-b982-64e844ad7fd7","type":"message","text":"For certain models, I have encountered scalability issues with Julia's autodiff packages. However, without a reference point, it is difficult to know whether your example is slow given the large number of observations. Have you considered trying CmdStan.jl as a point of comparison?\n\nAlso, sometimes standardizing your data can improve efficiency. <https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html>","user":"UH08DT0JU","ts":"1609700892.243700","team":"T68168MUP","attachments":[{"title":"22.12 Standardizing Predictors and Outputs | Stan User’s Guide","title_link":"https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html","text":"Stan user’s guide with examples and programming techniques.","fallback":"22.12 Standardizing Predictors and Outputs | Stan User’s Guide","from_url":"https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html","service_name":"mc-stan.org","id":1,"original_url":"https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html"}],"blocks":[{"type":"rich_text","block_id":"jPSx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"For certain models, I have encountered scalability issues with Julia's autodiff packages. However, without a reference point, it is difficult to know whether your example is slow given the large number of observations. Have you considered trying CmdStan.jl as a point of comparison?\n\nAlso, sometimes standardizing your data can improve efficiency. "},{"type":"link","url":"https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html"}]}]}],"thread_ts":"1609634954.233000","parent_user_id":"U01ARRMLM7E"}]