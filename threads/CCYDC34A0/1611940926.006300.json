[{"client_msg_id":"a830c95b-6de3-49a1-bf77-3c3b06b5d9b5","type":"message","text":"Hey all I am having really slow sampling and I am not sure what it is, seems like a simple model. I am using VScode and the sampling is stuck at 0.0% for long time and then after several minutes (~10) the sampling suddently shoots to 100%, but maybe thats just a vscode problem with showing the progress. I am trying ReverseDiff now but it seems the same (if not slower). I tried `chain2 = sample(model2, NUTS(0.65), 10000)` but even if I try to just sample 100 samples it takes a long time. Here is model:\n\n```@model function m3(damage, plate, species, trt, n1, n2, n3, ::Type{T} = Float64) where {T}\n    mu0 ~ Normal(0,10)\n    trt_effects ~ filldist(Normal(0,10), n1)\n    species_effects ~ filldist(Normal(0,10), n2)\n    interaction_effects ~ filldist(Normal(0,10), n1*n2) \n    plate_effects ~ filldist(Normal(0,10), n3)\n    sigma ~ Gamma(1,1)\n    mu = Array{T,3}(undef, n1+1,n2+1,n3+1)\n    mu .= 0.0\n    for i in 1:(n1+1)\n        for j in 1:(n2+1)\n            for k in 1:(n3+1)\n                mu[i,j,k] += mu0\n                if i != 1\n                    mu[i,j,k] += trt_effects[i-1]\n                end\n                if j != 1\n                    mu[i,j,k] += species_effects[j-1]\n                end\n                if k != 1\n                    mu[i,j,k] += plate_effects[k-1]\n                end\n                if (i != 1) &amp;&amp; (j != 1)\n                    mu[i,j,k] += interaction_effects[i-1 + n1*(j-2)]\n                end\n            end\n        end\n    end\n    residuals = Array{T,1}(undef, length(damage))\n    residuals .= 0.0\n\n    for i in 1:length(damage)\n        residuals[i] = damage[i] - mu[trt[i],species[i],plate[i]]\n        damage[i] ~ Normal(mu[trt[i],species[i],plate[i]],sigma)\n    end\n    return mu, residuals\nend```","user":"U6CFMFM2R","ts":"1611940926.006300","team":"T68168MUP","edited":{"user":"U6CFMFM2R","ts":"1611941634.000000"},"blocks":[{"type":"rich_text","block_id":"G4Yc9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hey all I am having really slow sampling and I am not sure what it is, seems like a simple model. I am using VScode and the sampling is stuck at 0.0% for long time and then after several minutes (~10) the sampling suddently shoots to 100%, but maybe thats just a vscode problem with showing the progress. I am trying ReverseDiff now but it seems the same (if not slower). I tried "},{"type":"text","text":"chain2 = sample(model2, NUTS(0.65), 10000)","style":{"code":true}},{"type":"text","text":" but even if I try to just sample 100 samples it takes a long time. Here is model:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@model function m3(damage, plate, species, trt, n1, n2, n3, ::Type{T} = Float64) where {T}\n    mu0 ~ Normal(0,10)\n    trt_effects ~ filldist(Normal(0,10), n1)\n    species_effects ~ filldist(Normal(0,10), n2)\n    interaction_effects ~ filldist(Normal(0,10), n1*n2) \n    plate_effects ~ filldist(Normal(0,10), n3)\n    sigma ~ Gamma(1,1)\n    mu = Array{T,3}(undef, n1+1,n2+1,n3+1)\n    mu .= 0.0\n    for i in 1:(n1+1)\n        for j in 1:(n2+1)\n            for k in 1:(n3+1)\n                mu[i,j,k] += mu0\n                if i != 1\n                    mu[i,j,k] += trt_effects[i-1]\n                end\n                if j != 1\n                    mu[i,j,k] += species_effects[j-1]\n                end\n                if k != 1\n                    mu[i,j,k] += plate_effects[k-1]\n                end\n                if (i != 1) && (j != 1)\n                    mu[i,j,k] += interaction_effects[i-1 + n1*(j-2)]\n                end\n            end\n        end\n    end\n    residuals = Array{T,1}(undef, length(damage))\n    residuals .= 0.0\n\n    for i in 1:length(damage)\n        residuals[i] = damage[i] - mu[trt[i],species[i],plate[i]]\n        damage[i] ~ Normal(mu[trt[i],species[i],plate[i]],sigma)\n    end\n    return mu, residuals\nend"}]}]}],"thread_ts":"1611940926.006300","reply_count":3,"reply_users_count":2,"latest_reply":"1611952475.018100","reply_users":["U8T9JUA5R","U6CFMFM2R"],"subscribed":false},{"client_msg_id":"ec21f778-531a-4a2a-8e34-164b0a7e4fe7","type":"message","text":"Since Julia is column major, the inner loop should be over the first dimension etc. Additionally, you could use `zeros` to initialize the arrays. Not sure though how significantly this improves performance.","user":"U8T9JUA5R","ts":"1611947600.017300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AyFGb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Since Julia is column major, the inner loop should be over the first dimension etc. Additionally, you could use "},{"type":"text","text":"zeros","style":{"code":true}},{"type":"text","text":" to initialize the arrays. Not sure though how significantly this improves performance."}]}]}],"thread_ts":"1611940926.006300","parent_user_id":"U6CFMFM2R"},{"client_msg_id":"99669d35-0ed7-4946-bb17-b83c9df22121","type":"message","text":"And mu could even be initialized with `fill(mu0,...)`","user":"U8T9JUA5R","ts":"1611947690.017500","team":"T68168MUP","edited":{"user":"U8T9JUA5R","ts":"1611947747.000000"},"blocks":[{"type":"rich_text","block_id":"MXa1","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And mu could even be initialized with "},{"type":"text","text":"fill(mu0,...)","style":{"code":true}}]}]}],"thread_ts":"1611940926.006300","parent_user_id":"U6CFMFM2R"},{"client_msg_id":"ed0c2edf-9329-48d9-8401-615f5ce7b80e","type":"message","text":"thanks I changed these things, but it had minimal impact","user":"U6CFMFM2R","ts":"1611952475.018100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XaA","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks I changed these things, but it had minimal impact"}]}]}],"thread_ts":"1611940926.006300","parent_user_id":"U6CFMFM2R"}]