[{"client_msg_id":"087cca24-8b16-476f-afc5-91096c1fe149","type":"message","text":"Out of curiosity, what is the development plan for Turing over the next 6-12 months?","user":"UH08DT0JU","ts":"1607864180.072700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q6W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Out of curiosity, what is the development plan for Turing over the next 6-12 months?"}]}]}],"thread_ts":"1607864180.072700","reply_count":10,"reply_users_count":5,"latest_reply":"1608002405.080600","reply_users":["U9JNHB83X","UH08DT0JU","U011PPW7K53","U85JBUGGP","UCRDHV7PB"],"subscribed":false},{"client_msg_id":"b68c2994-0a98-44a4-ae0b-73378dda92d1","type":"message","text":"Good question -- I don't think we have a document prepared anywhere","user":"U9JNHB83X","ts":"1607896197.072800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"0=C","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Good question -- I don't think we have a document prepared anywhere"}]}]}],"thread_ts":"1607864180.072700","parent_user_id":"UH08DT0JU"},{"client_msg_id":"41be47d1-0395-4a3e-8260-ebe2315fbc58","type":"message","text":"The particle samplers are being overhauled and split off into a separate package, I know. DynamicPPL is having some misc performance improvements. Mostly lost of maintenance and improvement projects.","user":"U9JNHB83X","ts":"1607896264.073000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YO2OG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The particle samplers are being overhauled and split off into a separate package, I know. DynamicPPL is having some misc performance improvements. Mostly lost of maintenance and improvement projects."}]}]}],"thread_ts":"1607864180.072700","parent_user_id":"UH08DT0JU"},{"client_msg_id":"6222f154-80c8-41cf-b0ec-800ff6ff606b","type":"message","text":"Thanks for the info.\n\nIt seems that autodiff is primarily responsible for the performance gap between Turing and Stan. I have noticed that ReverseDiff  does not scale as well as Stan, and is less flexible compared to ForwardDiff. Some of these issues were mentioned in the PPL paper written by members of the Turing team. Do you know of any efforts outside or within Turing to start closing this gap?","user":"UH08DT0JU","ts":"1607900010.073200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"G13","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for the info.\n\nIt seems that autodiff is primarily responsible for the performance gap between Turing and Stan. I have noticed that ReverseDiff  does not scale as well as Stan, and is less flexible compared to ForwardDiff. Some of these issues were mentioned in the PPL paper written by members of the Turing team. Do you know of any efforts outside or within Turing to start closing this gap?"}]}]}],"thread_ts":"1607864180.072700","parent_user_id":"UH08DT0JU"},{"client_msg_id":"a80aaac3-ce00-43ea-ba61-20957d575d39","type":"message","text":"I'm basically the farthest from the AD side of things. <@U85JBUGGP> or <@U6PQP41C3> might know better","user":"U9JNHB83X","ts":"1607900660.073400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tMiE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm basically the farthest from the AD side of things. "},{"type":"user","user_id":"U85JBUGGP"},{"type":"text","text":" or "},{"type":"user","user_id":"U6PQP41C3"},{"type":"text","text":" might know better"}]}]}],"thread_ts":"1607864180.072700","parent_user_id":"UH08DT0JU"},{"client_msg_id":"d16f2940-caf2-4414-b552-6f2aae891c6a","type":"message","text":"I am also interested to know is there any development plan for leave-one-out cross validation PSIS-LOO and WAIC by Aki Vehtari and Gelman from this paper <https://arxiv.org/abs/1507.04544|Practical Bayesian model evaluation using leave-one-out cross-validation and WAIC>. Right now my workaround is to install Python just for ArviZ.jl wrapper for Python's arviz library. I would like these in native Turing so that I can hack around and implement some variants of PSIS-LOO such as for non-factorized model and large data. Stan has some nice coverage in this area <https://mc-stan.org/loo/articles/index.html>","user":"U011PPW7K53","ts":"1607904729.073600","team":"T68168MUP","attachments":[{"service_name":"arXiv.org","title":"Practical Bayesian model evaluation using leave-one-out...","title_link":"https://arxiv.org/abs/1507.04544","text":"Leave-one-out cross-validation (LOO) and the widely applicable information criterion (WAIC) are methods for estimating pointwise out-of-sample prediction accuracy from a fitted Bayesian model...","fallback":"arXiv.org: Practical Bayesian model evaluation using leave-one-out...","from_url":"https://arxiv.org/abs/1507.04544","service_icon":"https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico","id":1,"original_url":"https://arxiv.org/abs/1507.04544"},{"title":"Articles","title_link":"https://mc-stan.org/loo/articles/index.html","fallback":"Articles","image_url":"https://mc-stan.org/loo/logo.png","from_url":"https://mc-stan.org/loo/articles/index.html","image_width":250,"image_height":250,"image_bytes":11746,"service_icon":"https://mc-stan.org/loo/apple-touch-icon.png","service_name":"mc-stan.org","id":2,"original_url":"https://mc-stan.org/loo/articles/index.html"}],"blocks":[{"type":"rich_text","block_id":"fRc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am also interested to know is there any development plan for leave-one-out cross validation PSIS-LOO and WAIC by Aki Vehtari and Gelman from this paper "},{"type":"link","url":"https://arxiv.org/abs/1507.04544","text":"Practical Bayesian model evaluation using leave-one-out cross-validation and WAIC"},{"type":"text","text":". Right now my workaround is to install Python just for ArviZ.jl wrapper for Python's arviz library. I would like these in native Turing so that I can hack around and implement some variants of PSIS-LOO such as for non-factorized model and large data. Stan has some nice coverage in this area "},{"type":"link","url":"https://mc-stan.org/loo/articles/index.html"}]}]}],"thread_ts":"1607864180.072700","parent_user_id":"UH08DT0JU","reactions":[{"name":"+1","users":["UC0SY9JFP"],"count":1}]},{"client_msg_id":"5ed258cf-fc42-4df8-ad59-912f4f7d6f84","type":"message","text":"I agree. That would be nice to have.","user":"UH08DT0JU","ts":"1607906105.074300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+Y1Sn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree. That would be nice to have."}]}]}],"thread_ts":"1607864180.072700","parent_user_id":"UH08DT0JU"},{"client_msg_id":"2afd75da-a65b-4a1d-9f3f-6d555720a0fc","type":"message","text":"Diffractor.jl and Enzyme.jl are the packages to follow for AD development. The first is still privately worked on by Keno.","user":"U85JBUGGP","ts":"1607912415.074500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ZkI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Diffractor.jl and Enzyme.jl are the packages to follow for AD development. The first is still privately worked on by Keno."}]}]}],"thread_ts":"1607864180.072700","parent_user_id":"UH08DT0JU","reactions":[{"name":"+1","users":["UH08DT0JU","U011PPW7K53"],"count":2}]},{"type":"message","subtype":"thread_broadcast","text":"Some ongoing progress:\n\n1. Refactor and improve particle MCMC and particle filtering samplers into a light-weight package `AdvancedPS` \n2. Unify and modularise some core tracing data structure in `DynamicPPL` and separate them into `AbstractPPL` <@UN45LV5K6> <@UCRDHV7PB> \n3. Implement an experimental sub-DSL that’s compatible with the BUGS modelling language, and add support for efficient generalised Gibbs sampling.  \n4. Improve documentation and tutorials. \n5. Initial GPU accelerated HMC and RWMH support. \n6. Initial Annealed Important Sampling support and other model assessment methods. \n7. Initial Nested Sampling support. \n8. Revisit all Github existing issues, improve stability of public APIs and plan for Turing 1.0 release. \n9. any other issues raised by the Turing.jl and probabilistic programming community during the Turing.jl general public meeting and later feedbacks. \nWe aim to keep this progress as transparent as possible. We’ll also try to minimise disruption to existing Turing.jl users by maximising backward compatibility.\nWe anticipate it might still be a long way ahead before we can release Turing 1.0. Any help, comments feedbacks on improving the development and release of Turing are welcome! We also welcome community developers to join the Turing.jl team. Together, we aim to make Julia the go-to language for Bayesian inference and computation.","user":"UCRDHV7PB","ts":"1607986152.079200","thread_ts":"1607864180.072700","root":{"client_msg_id":"087cca24-8b16-476f-afc5-91096c1fe149","type":"message","text":"Out of curiosity, what is the development plan for Turing over the next 6-12 months?","user":"UH08DT0JU","ts":"1607864180.072700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Q6W","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Out of curiosity, what is the development plan for Turing over the next 6-12 months?"}]}]}],"thread_ts":"1607864180.072700","reply_count":10,"reply_users_count":5,"latest_reply":"1608002405.080600","reply_users":["U9JNHB83X","UH08DT0JU","U011PPW7K53","U85JBUGGP","UCRDHV7PB"],"subscribed":false},"blocks":[{"type":"rich_text","block_id":"oiGby","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some ongoing progress:\n\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Refactor and improve particle MCMC and particle filtering samplers into a light-weight package "},{"type":"text","text":"AdvancedPS","style":{"code":true}},{"type":"text","text":" "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Unify and modularise some core tracing data structure in "},{"type":"text","text":"DynamicPPL","style":{"code":true}},{"type":"text","text":" and separate them into "},{"type":"text","text":"AbstractPPL","style":{"code":true}},{"type":"text","text":" "},{"type":"user","user_id":"UN45LV5K6"},{"type":"text","text":" "},{"type":"user","user_id":"UCRDHV7PB"},{"type":"text","text":" "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Implement an experimental sub-DSL that’s compatible with the BUGS modelling language, and add support for efficient generalised Gibbs sampling.  "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Improve documentation and tutorials. "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Initial GPU accelerated HMC and RWMH support. "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Initial Annealed Important Sampling support and other model assessment methods. "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Initial Nested Sampling support. "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Revisit all Github existing issues, improve stability of public APIs and plan for Turing 1.0 release. "}]},{"type":"rich_text_section","elements":[{"type":"text","text":"any other issues raised by the Turing.jl and probabilistic programming community during the Turing.jl general public meeting and later feedbacks. "}]}],"style":"ordered","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"\nWe aim to keep this progress as transparent as possible. We’ll also try to minimise disruption to existing Turing.jl users by maximising backward compatibility.\nWe anticipate it might still be a long way ahead before we can release Turing 1.0. Any help, comments feedbacks on improving the development and release of Turing are welcome! We also welcome community developers to join the Turing.jl team. Together, we aim to make Julia the go-to language for Bayesian inference and computation."}]}]}],"client_msg_id":"936126fd-fb92-4b66-a35b-b9e8ee041c28","edited":{"user":"UCRDHV7PB","ts":"1607986264.000000"},"reactions":[{"name":"heart","users":["UGD4K0Z25","U011PPW7K53","UTVH86LJ0","U7QLM6E2E","UF6T1632L","UC0SY9JFP","UH08DT0JU","U01A08JMUKT","U01BTNDCUBX","U011SGGQJCA","U018NKR9X70","UE98VNG4U","U680T6770","U6H9SJKCH"],"count":14},{"name":"juliaspinner","users":["U011PPW7K53","UGU761DU2","U018NKR9X70","U01A4SJJQDA","U680T6770","U6H9SJKCH"],"count":6},{"name":"turing","users":["U019X0KMT6Y","U01BTNDCUBX","U011PPW7K53","U018NKR9X70","U680T6770","U6H9SJKCH"],"count":6}]},{"client_msg_id":"4d877d15-9f8b-4ed4-9696-cdef86993df6","type":"message","text":"<@UCRDHV7PB> Thank you for sharing the updates\n\nI am pretty new to Bayesian but I am keen on learning Turing internal API to further understand Bayesian and potentially contribute to Turing in the future. My plan is to study some internal Turing API, study the code base and play around with Turing.jl, MCMCChains.jl and AdvancedHMC.jl. My question\n• Do you have any advice or guidelines for beginner to learn internal Turing code base? For example, starts with Turing guides as in section 'FOR DEVELOPERS' <https://turing.ml/dev/docs/for-developers/interface>, and then play around with code bases mentioned above...\nIn addition, I am particularly interested in learning and following the development of *Initial Annealed Important Sampling support and other model assessment methods.* My questions\n• Is the development currently on any public Github branch or pull request that I can follow?\n• Do you have links to theoretical resources related to the implementation? i.e. Arxiv papers","user":"U011PPW7K53","ts":"1608001853.079900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"fDV6","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"UCRDHV7PB"},{"type":"text","text":" Thank you for sharing the updates\n\nI am pretty new to Bayesian but I am keen on learning Turing internal API to further understand Bayesian and potentially contribute to Turing in the future. My plan is to study some internal Turing API, study the code base and play around with Turing.jl, MCMCChains.jl and AdvancedHMC.jl. My question\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Do you have any advice or guidelines for beginner to learn internal Turing code base? For example, starts with Turing guides as in section 'FOR DEVELOPERS' "},{"type":"link","url":"https://turing.ml/dev/docs/for-developers/interface"},{"type":"text","text":", and then play around with code bases mentioned above..."}]}],"style":"bullet","indent":0},{"type":"rich_text_section","elements":[{"type":"text","text":"\nIn addition, I am particularly interested in learning and following the development of "},{"type":"text","text":"Initial Annealed Important Sampling support and other model assessment methods. ","style":{"bold":true}},{"type":"text","text":"My questions\n"}]},{"type":"rich_text_list","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is the development currently on any public Github branch or pull request that I can follow?"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Do you have links to theoretical resources related to the implementation? i.e. Arxiv papers"}]}],"style":"bullet","indent":0}]}],"thread_ts":"1607864180.072700","parent_user_id":"UH08DT0JU"},{"client_msg_id":"a50c5c78-4ca7-4735-ab8c-073cb6113e09","type":"message","text":"It's really great to know Turing have this goal in mind: _Together, we aim to make Julia the go-to language for Bayesian inference and computation._ :muscle::turing:","user":"U011PPW7K53","ts":"1608002405.080600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"DMS8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's really great to know Turing have this goal in mind: "},{"type":"text","text":"Together, we aim to make Julia the go-to language for Bayesian inference and computation. ","style":{"italic":true}},{"type":"emoji","name":"muscle","style":{"italic":true}},{"type":"emoji","name":"turing","style":{"italic":true}}]}]}],"thread_ts":"1607864180.072700","parent_user_id":"UH08DT0JU","reactions":[{"name":"+1","users":["UH08DT0JU","U6H9SJKCH"],"count":2}]}]