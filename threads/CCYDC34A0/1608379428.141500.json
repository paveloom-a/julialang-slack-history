[{"client_msg_id":"3ee970dd-e17f-4985-afe0-ba0c72aa15eb","type":"message","text":"So we talked yesterday during the meeting about how my relatively simple model takes quite some time to run already (40+ minutes), and that I should post a snippet here to see if maybe there is a problem in the code, because I thought it might be normal given the 1800 samples and the model. There is quite a lot of missing data as well, but even when I just reran it with complete cases only, I still got above 40 minutes somehow anyway. I'll post a code snippet in the thread/comments.","user":"U01C2AJ9F63","ts":"1608379428.141500","team":"T68168MUP","edited":{"user":"U01C2AJ9F63","ts":"1608379706.000000"},"blocks":[{"type":"rich_text","block_id":"yLl0f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So we talked yesterday during the meeting about how my relatively simple model takes quite some time to run already (40+ minutes), and that I should post a snippet here to see if maybe there is a problem in the code, because I thought it might be normal given the 1800 samples and the model. There is quite a lot of missing data as well, but even when I just reran it with complete cases only, I still got above 40 minutes somehow anyway. I'll post a code snippet in the thread/comments."}]}]}],"thread_ts":"1608379428.141500","reply_count":30,"reply_users_count":5,"latest_reply":"1608685614.167800","reply_users":["U01C2AJ9F63","U017YGFQTE3","UH08DT0JU","UC0SY9JFP","U85JBUGGP"],"subscribed":false},{"client_msg_id":"6aff7ca6-f81f-49e2-820d-997c64dc6d43","type":"message","text":"```begin\n\t# transform dataframe columns to correct type for passing it to the sampler afterwards\n\tn = size(df)[1]\n\tage = Vector{Union{Float64, Missing}}(undef, n)\n\tweight = Vector{Union{Float64, Missing}}(undef, n)\n\tfor i in 1:n\n\t\tage[i] = df[\"computed_age\"][i]\n\t\tweight[i] = df[\"weight\"][i]\n\tend\n\t# variable for level of femaleness, 1 is male and 2 is female\n\tfemaleness = (df[\"gender\"] .== \"female\") .+ 1\nend\n\nfunction initialize_missing(age, femaleness, weight)\n\tif (age === missing || age === nothing)\n\t\tn = 1\n\t\tage = Vector{Float64}(undef, n)\n\telse\n\t\tn = length(age)\n\tend\n\tif (weight === missing || weight === nothing)\n\t\tweight = Vector{Float64}(undef, n)\n\tend\n\tif (femaleness === missing || femaleness === nothing)\n\t\tfemaleness = Vector{Int64}(undef, n)\n\tend\n\n\treturn age, femaleness, weight, n\nend\n@model function age_weight(age, femaleness, weight)\n\tage, femaleness, weight, n = initialize_missing(age, femaleness, weight)\n\n\tmean_age ~ Truncated(Normal(7.0, 4.0), 0, Inf)\n\tvar_age ~ InverseGamma(3, 6)\n\tfemaleness_prior ~ Dirichlet(2, 2)\n\t\n\tfor i in 1:n\n\t\tfemaleness[i] ~ Categorical(femaleness_prior)\n\t\tage[i] ~ Truncated(Normal(mean_age, sqrt(var_age)), 0, Inf)\n\tend\n\n\t# 1 variable for each gender\n\tbeta_age ~ filldist(Normal(0, 1), 2)\n\tintercept ~ filldist(Truncated(Normal(25, 15), 0, Inf), 2)\n\t\n\tvar_weight ~ InverseGamma(3, 6)\n\tfor i in 1:n\n\t\tmean_weight = intercept[femaleness[i]] + beta_age[femaleness[i]]*age[i]\n\t\tweight[i] ~ Truncated(Normal(mean_weight, sqrt(var_weight)), 0, Inf)\n\tend\n\t\n\treturn weight\nend\n\nbegin\n\titerations = 1000\n\tdog_weight_model = age_weight(age, femaleness, weight )\n\t@time chns1 = sample(dog_weight_model, NUTS(0.65), iterations)\nend```","user":"U01C2AJ9F63","ts":"1608379526.141600","team":"T68168MUP","edited":{"user":"U01C2AJ9F63","ts":"1608379600.000000"},"blocks":[{"type":"rich_text","block_id":"RFGyg","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"begin\n\t# transform dataframe columns to correct type for passing it to the sampler afterwards\n\tn = size(df)[1]\n\tage = Vector{Union{Float64, Missing}}(undef, n)\n\tweight = Vector{Union{Float64, Missing}}(undef, n)\n\tfor i in 1:n\n\t\tage[i] = df[\"computed_age\"][i]\n\t\tweight[i] = df[\"weight\"][i]\n\tend\n\t# variable for level of femaleness, 1 is male and 2 is female\n\tfemaleness = (df[\"gender\"] .== \"female\") .+ 1\nend\n\nfunction initialize_missing(age, femaleness, weight)\n\tif (age === missing || age === nothing)\n\t\tn = 1\n\t\tage = Vector{Float64}(undef, n)\n\telse\n\t\tn = length(age)\n\tend\n\tif (weight === missing || weight === nothing)\n\t\tweight = Vector{Float64}(undef, n)\n\tend\n\tif (femaleness === missing || femaleness === nothing)\n\t\tfemaleness = Vector{Int64}(undef, n)\n\tend\n\n\treturn age, femaleness, weight, n\nend\n@model function age_weight(age, femaleness, weight)\n\tage, femaleness, weight, n = initialize_missing(age, femaleness, weight)\n\n\tmean_age ~ Truncated(Normal(7.0, 4.0), 0, Inf)\n\tvar_age ~ InverseGamma(3, 6)\n\tfemaleness_prior ~ Dirichlet(2, 2)\n\t\n\tfor i in 1:n\n\t\tfemaleness[i] ~ Categorical(femaleness_prior)\n\t\tage[i] ~ Truncated(Normal(mean_age, sqrt(var_age)), 0, Inf)\n\tend\n\n\t# 1 variable for each gender\n\tbeta_age ~ filldist(Normal(0, 1), 2)\n\tintercept ~ filldist(Truncated(Normal(25, 15), 0, Inf), 2)\n\t\n\tvar_weight ~ InverseGamma(3, 6)\n\tfor i in 1:n\n\t\tmean_weight = intercept[femaleness[i]] + beta_age[femaleness[i]]*age[i]\n\t\tweight[i] ~ Truncated(Normal(mean_weight, sqrt(var_weight)), 0, Inf)\n\tend\n\t\n\treturn weight\nend\n\nbegin\n\titerations = 1000\n\tdog_weight_model = age_weight(age, femaleness, weight )\n\t@time chns1 = sample(dog_weight_model, NUTS(0.65), iterations)\nend"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63","reactions":[{"name":"dog2","users":["U68M6ERG8","UC0SY9JFP"],"count":2}]},{"client_msg_id":"a441c86b-41f6-4cb2-9940-ac6dc7513d69","type":"message","text":"Maybe try `Memoize.@memoize`  before `function initialize_missing`. Also, I wonder if the truncated normal distributions are really necessary from a statistical point of view? For example, changing the `weight[i] ~` line to use an `MvNormal` would allow -ve weight values, which would clearly not be possible, but it might not affect your estimates in a noticeable way, and it would probably speed up your code a lot. You might even be able to bring `age` and `weight`  into a single `MvNormal` .","user":"U017YGFQTE3","ts":"1608384722.142200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xhYAo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe try "},{"type":"text","text":"Memoize.@memoize","style":{"code":true}},{"type":"text","text":"  before "},{"type":"text","text":"function initialize_missing","style":{"code":true}},{"type":"text","text":". Also, I wonder if the truncated normal distributions are really necessary from a statistical point of view? For example, changing the "},{"type":"text","text":"weight[i] ~","style":{"code":true}},{"type":"text","text":" line to use an "},{"type":"text","text":"MvNormal","style":{"code":true}},{"type":"text","text":" would allow -ve weight values, which would clearly not be possible, but it might not affect your estimates in a noticeable way, and it would probably speed up your code a lot. You might even be able to bring "},{"type":"text","text":"age","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"weight","style":{"code":true}},{"type":"text","text":"  into a single "},{"type":"text","text":"MvNormal","style":{"code":true}},{"type":"text","text":" ."}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"5c7d2d85-cb7b-459a-bf29-8227a1a74cc8","type":"message","text":"I added the memoize. And I did the truncation because I thought that makes sense to encode as prior information, and in turn I thought that implies it would help the model, since indeed I know they cannot go negative. To be honest I have been considering to use a Gamma distribution for the age, because it is non-negative (and it actually might make sense in my case), so then I wouldn't need to truncate it anyway. Also, how should I replace it with an MvNormal, because how do I make the mean_weight a vector in this case?","user":"U01C2AJ9F63","ts":"1608387393.142400","team":"T68168MUP","edited":{"user":"U01C2AJ9F63","ts":"1608388271.000000"},"blocks":[{"type":"rich_text","block_id":"58zI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I added the memoize. And I did the truncation because I thought that makes sense to encode as prior information, and in turn I thought that implies it would help the model, since indeed I know they cannot go negative. To be honest I have been considering to use a Gamma distribution for the age, because it is non-negative (and it actually might make sense in my case), so then I wouldn't need to truncate it anyway. Also, how should I replace it with an MvNormal, because how do I make the mean_weight a vector in this case?"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"31770ac0-0fb4-4428-8474-c2f75ce0adcf","type":"message","text":"NUTS is most efficient with standard normal distributions. Sometimes the speed up can be significant. So I would avoid using a Gamma or truncated normal unless it is a hard constraint (e.g. like a standard deviation), or your posterior distribution has significant density over negative values.","user":"UH08DT0JU","ts":"1608388383.142700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ld2gY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NUTS is most efficient with standard normal distributions. Sometimes the speed up can be significant. So I would avoid using a Gamma or truncated normal unless it is a hard constraint (e.g. like a standard deviation), or your posterior distribution has significant density over negative values."}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"b3fa71ae-0fef-48a6-8cd0-09b69f71c2dd","type":"message","text":"Depending on the scaling of your data and priors, it might be worth rescaling. See the following for details:\n\n<https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html>","user":"UH08DT0JU","ts":"1608388568.143300","team":"T68168MUP","attachments":[{"title":"22.12 Standardizing Predictors and Outputs | Stan User’s Guide","title_link":"https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html","text":"Stan user’s guide with examples and programming techniques.","fallback":"22.12 Standardizing Predictors and Outputs | Stan User’s Guide","from_url":"https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html","service_name":"mc-stan.org","id":1,"original_url":"https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html"}],"blocks":[{"type":"rich_text","block_id":"Etp4c","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Depending on the scaling of your data and priors, it might be worth rescaling. See the following for details:\n\n"},{"type":"link","url":"https://mc-stan.org/docs/2_22/stan-users-guide/standardizing-predictors-and-outputs.html"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"9bbab847-60a4-460c-b3cc-5852e27be503","type":"message","text":"If this is not in the documentation, it probably should go in it once the documentation is being overhauled as performance tip :stuck_out_tongue: Because to me it just made sense to encode any information I have into the priors, I definitely did not expect it to have negative consequences on the performance. And yeah, I looked into standardizing, but I was wondering how does one standardize with missing data. Because I have lots of dogs for which the weight is unknown, and also dogs for which the age is unknown","user":"U01C2AJ9F63","ts":"1608388610.143600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Jm8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If this is not in the documentation, it probably should go in it once the documentation is being overhauled as performance tip "},{"type":"emoji","name":"stuck_out_tongue"},{"type":"text","text":" Because to me it just made sense to encode any information I have into the priors, I definitely did not expect it to have negative consequences on the performance. And yeah, I looked into standardizing, but I was wondering how does one standardize with missing data. Because I have lots of dogs for which the weight is unknown, and also dogs for which the age is unknown"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"608d451b-e982-41af-bf50-086fb0cfe00f","type":"message","text":"Yeah. I think it might be a good idea to include a link to the Stan performance tips in the Turing documentation, or at least note which points are relevant for Turing.","user":"UH08DT0JU","ts":"1608388822.144000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sygk","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah. I think it might be a good idea to include a link to the Stan performance tips in the Turing documentation, or at least note which points are relevant for Turing."}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63","reactions":[{"name":"+1","users":["UC0SY9JFP"],"count":1}]},{"client_msg_id":"be19db77-dc99-4bca-85c3-4fd52563067b","type":"message","text":"Although I am not certain, I would suspect that missing values would not affect standardization since it is a linear transformation.","user":"UH08DT0JU","ts":"1608388945.145700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/Dq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Although I am not certain, I would suspect that missing values would not affect standardization since it is a linear transformation."}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"9a12c132-5ada-40d2-855e-3a8a692e7788","type":"message","text":"The Turing documentation provides a simple example of using MvNormal. That might help you get started.\n\n<https://turing.ml/dev/docs/using-turing/performancetips>","user":"UH08DT0JU","ts":"1608389249.145900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"YNdn+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The Turing documentation provides a simple example of using MvNormal. That might help you get started.\n\n"},{"type":"link","url":"https://turing.ml/dev/docs/using-turing/performancetips"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"e436bc0b-edad-4faf-8955-21e6d7ecd5df","type":"message","text":"I would think it would be something like this then:\n```\tmean_weight = Vector{Real}(undef, n)\n\tfor i in 1:n\n\t\tmean_weight[i] = intercept[femaleness[i]] + beta_age[femaleness[i]]*age[i]\n\tend\n\tweight ~ MvNormal(mean_weight, sqrt(var_weight))```\nBut this gives me StackOverflowError:\n```ERROR: LoadError: StackOverflowError:\nStacktrace:\n [1] ScalMat at /home/michiel/.julia/packages/PDMats/G0Prn/src/scalmat.jl:5 [inlined] (repeats 2 times)\n [2] convert at /home/michiel/.julia/packages/PDMats/G0Prn/src/scalmat.jl:13 [inlined]\n [3] convert at /home/michiel/.julia/packages/PDMats/G0Prn/src/scalmat.jl:14 [inlined]\n [4] MvNormal(::Array{Real,1}, ::PDMats.ScalMat{Float64}) at /home/michiel/.julia/packages/Distributions/HjzA0/src/multivariate/mvnormal.jl:202 (repeats 79984 times)\nin expression starting at /dog_weight_gender.jl:118```","user":"U01C2AJ9F63","ts":"1608389736.146100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SeM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would think it would be something like this then:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"\tmean_weight = Vector{Real}(undef, n)\n\tfor i in 1:n\n\t\tmean_weight[i] = intercept[femaleness[i]] + beta_age[femaleness[i]]*age[i]\n\tend\n\tweight ~ MvNormal(mean_weight, sqrt(var_weight))"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"But this gives me StackOverflowError:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"ERROR: LoadError: StackOverflowError:\nStacktrace:\n [1] ScalMat at /home/michiel/.julia/packages/PDMats/G0Prn/src/scalmat.jl:5 [inlined] (repeats 2 times)\n [2] convert at /home/michiel/.julia/packages/PDMats/G0Prn/src/scalmat.jl:13 [inlined]\n [3] convert at /home/michiel/.julia/packages/PDMats/G0Prn/src/scalmat.jl:14 [inlined]\n [4] MvNormal(::Array{Real,1}, ::PDMats.ScalMat{Float64}) at /home/michiel/.julia/packages/Distributions/HjzA0/src/multivariate/mvnormal.jl:202 (repeats 79984 times)\nin expression starting at /dog_weight_gender.jl:118"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"f678d7b8-ef13-4375-83bc-29501075c5d0","type":"message","text":"I am not sure if MvNormal works with missing values, for some reason I keep getting errors about that. Because if I initialize the model Vector{Float64} and no missing values, it works. But if there is missing values, it complains.","user":"U01C2AJ9F63","ts":"1608390351.148200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"POaJ=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am not sure if MvNormal works with missing values, for some reason I keep getting errors about that. Because if I initialize the model Vector{Float64} and no missing values, it works. But if there is missing values, it complains."}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"622B1FFB-0BFB-4466-8367-43D410A37B49","type":"message","text":"Why do you need the init missing function?","user":"UC0SY9JFP","ts":"1608459833.149300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vd1O","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why do you need the init missing function?"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"c14b77ae-521f-4f8c-a816-d5457c711bd8","type":"message","text":"It's for when I sample from the posterior, then I initialize it with missing data in its entirety","user":"U01C2AJ9F63","ts":"1608470283.153400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PZ8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"It's for when I sample from the posterior, then I initialize it with missing data in its entirety"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"04C95EC6-A04F-4385-A014-97C65B6C646C","type":"message","text":"Why not pass a vector of missing’s to the model function instead? I think that this function might be better removed.","user":"UC0SY9JFP","ts":"1608471539.155500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wlzi","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Why not pass a vector of missing’s to the model function instead? I think that this function might be better removed."}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"808F1661-FE0B-4EB2-9027-138C305E0DBB","type":"message","text":"See: <https://turing.ml/dev/docs/using-turing/guide|https://turing.ml/dev/docs/using-turing/guide> ","user":"UC0SY9JFP","ts":"1608471786.157700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"TYc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"See: "},{"type":"link","url":"https://turing.ml/dev/docs/using-turing/guide","text":"https://turing.ml/dev/docs/using-turing/guide"},{"type":"text","text":" "}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"02520663-8d2a-42fb-97d8-0b466fadcc6d","type":"message","text":"I guess that could work, Im trying it now. But indeed in the tutorial you link to, it is always just single variables of missing with subsequent statements like:\n```  if x === missing\n        # Initialize `x` if missing\n        x = Vector{T}(undef, 2)\n    end```\nlike here: <https://turing.ml/dev/docs/using-turing/guide#sampling-from-a-conditional-distribution-the-posterior>\nAlso, apparently I can't pass in an array of missing values for the femaleness data, because then femaleness automatically becomes a Float value, even though I need it to be integers since I use it for indexing. Unless there is another way to explicitly specify femaleness should be a vector of ints?","user":"U01C2AJ9F63","ts":"1608539265.158900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cbsc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I guess that could work, Im trying it now. But indeed in the tutorial you link to, it is always just single variables of missing with subsequent statements like:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"  if x === missing\n        # Initialize `x` if missing\n        x = Vector{T}(undef, 2)\n    end"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"like here: "},{"type":"link","url":"https://turing.ml/dev/docs/using-turing/guide#sampling-from-a-conditional-distribution-the-posterior"},{"type":"text","text":"\nAlso, apparently I can't pass in an array of missing values for the femaleness data, because then femaleness automatically becomes a Float value, even though I need it to be integers since I use it for indexing. Unless there is another way to explicitly specify femaleness should be a vector of ints?"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"FD8EBD37-FD91-4827-8077-2E8CDE5E7BB7","type":"message","text":"Hm, let me check. :)","user":"UC0SY9JFP","ts":"1608543326.159600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uRAq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hm, let me check. :)"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"type":"message","text":"Here is an implementation that does not require your init function and does some minor reparameterisations. See the second model for one that takes about 25s to run on 100 observations for 100 iterations of NUTS. I suppose you can make it faster by using filldist in case of the loop. But just can’t quite remember how to do this in case of missing values correctly atm.","files":[{"id":"F01HA50SVJ9","created":1608571410,"timestamp":1608571410,"name":"model.jl","title":"model.jl","mimetype":"text/plain","filetype":"text","pretty_type":"Plain Text","user":"UC0SY9JFP","editable":true,"size":4388,"mode":"snippet","is_external":false,"external_type":"","is_public":true,"public_url_shared":false,"display_as_bot":false,"username":"","url_private":"https://files.slack.com/files-pri/T68168MUP-F01HA50SVJ9/model.jl","url_private_download":"https://files.slack.com/files-pri/T68168MUP-F01HA50SVJ9/download/model.jl","permalink":"https://julialang.slack.com/files/UC0SY9JFP/F01HA50SVJ9/model.jl","permalink_public":"https://slack-files.com/T68168MUP-F01HA50SVJ9-bbcb31d7ba","edit_link":"https://julialang.slack.com/files/UC0SY9JFP/F01HA50SVJ9/model.jl/edit","preview":"### A Pluto.jl notebook ###\n# v0.12.17\n\nusing Markdown\nusing InteractiveUtils","preview_highlight":"<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>### A Pluto.jl notebook ###</pre></div>\n<div><pre># v0.12.17</pre></div>\n<div><pre></pre></div>\n<div><pre>using Markdown</pre></div>\n<div><pre>using InteractiveUtils</pre></div>\n</div>\n</div>\n","lines":149,"lines_more":144,"preview_is_truncated":true,"is_starred":false,"has_rich_preview":false}],"upload":false,"blocks":[{"type":"rich_text","block_id":"dFtKn","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Here is an implementation that does not require your init function and does some minor reparameterisations. See the second model for one that takes about 25s to run on 100 observations for 100 iterations of NUTS. I suppose you can make it faster by using filldist in case of the loop. But just can’t quite remember how to do this in case of missing values correctly atm."}]}]}],"user":"UC0SY9JFP","display_as_bot":false,"ts":"1608571543.159800","thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"8fec032e-800a-4b4f-9997-9a5131a8e3d5","type":"message","text":"Maybe <@U85JBUGGP> can remind me how to do this. :)","user":"UC0SY9JFP","ts":"1608572062.160200","team":"T68168MUP","edited":{"user":"UC0SY9JFP","ts":"1608581418.000000"},"blocks":[{"type":"rich_text","block_id":"U1q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Maybe "},{"type":"user","user_id":"U85JBUGGP"},{"type":"text","text":" can remind me how to do this. :)"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"efa9384b-11fd-417b-9da1-0b1c45e3c479","type":"message","text":"Some general remarks regarding you code: try to use `truncated` instead of `Truncated`, if you have a discrete variable with 2 states, better use a Bernoulli with a Beta prior instead of a Dirichlet (easier to sample from), make sure the code is type stable.","user":"UC0SY9JFP","ts":"1608572143.160400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zKJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Some general remarks regarding you code: try to use "},{"type":"text","text":"truncated","style":{"code":true}},{"type":"text","text":" instead of "},{"type":"text","text":"Truncated","style":{"code":true}},{"type":"text","text":", if you have a discrete variable with 2 states, better use a Bernoulli with a Beta prior instead of a Dirichlet (easier to sample from), make sure the code is type stable."}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63","reactions":[{"name":"100","users":["U8T9JUA5R"],"count":1}]},{"client_msg_id":"4e4bdb1b-0a71-43a3-a7fd-db7e32179e6c","type":"message","text":"Thanks Martin! The missing values in age seem to not allow me to take mean_weight out of the for loop though. It gives me this error: `ERROR: LoadError: ArgumentError: type does not have a definite number of fields` and it points at exactly that line. And indeed the moment I remove the missing values and convert the type to Float64 like in your example, then it does work. Also, interesting that doing something like this `Normal(7 + mean_age*4, sqrt(var_age))` would result in a performance improvement, even though its technically doing the same thing right?","user":"U01C2AJ9F63","ts":"1608636968.160800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"XHN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks Martin! The missing values in age seem to not allow me to take mean_weight out of the for loop though. It gives me this error: "},{"type":"text","text":"ERROR: LoadError: ArgumentError: type does not have a definite number of fields","style":{"code":true}},{"type":"text","text":" and it points at exactly that line. And indeed the moment I remove the missing values and convert the type to Float64 like in your example, then it does work. Also, interesting that doing something like this "},{"type":"text","text":"Normal(7 + mean_age*4, sqrt(var_age))","style":{"code":true}},{"type":"text","text":" would result in a performance improvement, even though its technically doing the same thing right?"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"830841F3-370A-4B7C-BE42-6A0852BD07CF","type":"message","text":"Yeah, it makes sense that it is fast as the inference is easier. NUTS has to “look” several steps ahead, if the geometry is nice this will result in less steps it will look ahead. And convergence will be better too. ","user":"UC0SY9JFP","ts":"1608642835.163700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"quX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, it makes sense that it is fast as the inference is easier. NUTS has to “look” several steps ahead, if the geometry is nice this will result in less steps it will look ahead. And convergence will be better too. "}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"18abebb3-88ef-4073-bc42-bcbb51164ac5","type":"message","text":"I don't understand. What do you want to do with `filldist`?","user":"U85JBUGGP","ts":"1608647620.166200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"w7=1G","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't understand. What do you want to do with "},{"type":"text","text":"filldist","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"c9b47061-ef97-4656-82de-e452dde18e91","type":"message","text":"in general a missing observation will be treated like a random variable so `x ~ filldist(..)` will sample `x` if it is passed in as `missing` in the arguments","user":"U85JBUGGP","ts":"1608647714.166400","team":"T68168MUP","edited":{"user":"U85JBUGGP","ts":"1608647727.000000"},"blocks":[{"type":"rich_text","block_id":"/bMu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"in general a missing observation will be treated like a random variable so "},{"type":"text","text":"x ~ filldist(..)","style":{"code":true}},{"type":"text","text":" will sample "},{"type":"text","text":"x","style":{"code":true}},{"type":"text","text":" if it is passed in as "},{"type":"text","text":"missing","style":{"code":true}},{"type":"text","text":" in the arguments"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"aeb67481-8378-4b5e-a935-fed06dfa0e55","type":"message","text":"Yeah so that wouldn't work then when x is a mixture of Float64 and missing right? It's not like it would only sample the x[i] values where x[i] is missing","user":"U01C2AJ9F63","ts":"1608648215.166700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8Ta","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah so that wouldn't work then when x is a mixture of Float64 and missing right? It's not like it would only sample the x[i] values where x[i] is missing"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"39e9262b-334a-4a6d-9d67-e49630de4dbd","type":"message","text":"Ya it wouldn't","user":"U85JBUGGP","ts":"1608648916.166900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D7SQz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ya it wouldn't"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"35659d33-16e5-4cd8-bcc2-71b0733cf797","type":"message","text":"Try splitting the inputs into 2","user":"U85JBUGGP","ts":"1608648941.167100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wfS","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Try splitting the inputs into 2"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"95d948b2-2c31-4559-9531-1f0ca38af5ef","type":"message","text":"One completely missing and one not","user":"U85JBUGGP","ts":"1608648952.167300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iEfob","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One completely missing and one not"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"1511e787-a877-448e-9fe1-aef37a1b969c","type":"message","text":"I'm not sure that would work very well in my case, especially because both weights and ages can having missing values, so any given row can be any combination of age being missing/not missing and weight being missing/not missing. And even if I would somehow make it work, my dataset is notorious for its missing values so this problem would only become worse I fear.","user":"U01C2AJ9F63","ts":"1608649623.167500","team":"T68168MUP","edited":{"user":"U01C2AJ9F63","ts":"1608649634.000000"},"blocks":[{"type":"rich_text","block_id":"/lDL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm not sure that would work very well in my case, especially because both weights and ages can having missing values, so any given row can be any combination of age being missing/not missing and weight being missing/not missing. And even if I would somehow make it work, my dataset is notorious for its missing values so this problem would only become worse I fear."}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"},{"client_msg_id":"6f1077f1-dbbb-42fd-9d8b-fe96690aeb85","type":"message","text":"ya","user":"U85JBUGGP","ts":"1608685614.167800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VUq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"ya"}]}]}],"thread_ts":"1608379428.141500","parent_user_id":"U01C2AJ9F63"}]