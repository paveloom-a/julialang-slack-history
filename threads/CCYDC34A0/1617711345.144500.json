[{"client_msg_id":"bbc94cf5-ef7f-4f5f-87a7-c484fae3d3e7","type":"message","text":"Hi all, I'm tipping my toes gently in Julia and Turing and so far I really love what I see, but I have some difficulties coming from python (and relatively new to PPLs in general).\nI'm trying to do something that I guess should be simple but got stuck so I thought I'd fetch some help :slightly_smiling_face:\nI'm trying to fit a zero-truncated Poisson, and get errors where the autodiff cannot infer the types of something. I basically adapted the simple example on Turing's homepage like so:\n```# Import libraries.\nusing Turing, StatsPlots, Random\n\n# Set the true Poisson rate\nλ_true = 0.5\n\n# Number of un-truncated Poisson observations (I know I can directly sample from Truncated, but don't want to).\nN = 1000\n\n# Draw data from a Poisson distribution\nRandom.seed!(12)\ndata = rand(Poisson(λ_true), N)\ndata_trunc = data[data .&gt; 0]\n\n# Declare our Turing model.\n@model function truncated_poisson(y)\n    # Our prior belief about the Poisson rate.\n    λ ~ Beta(1, 1)\n\n    # Data model\n    for n in 1:length(y)\n        y[n] ~ truncated(Poisson(λ), 0, Inf)\n    end\nend\n\nprint(length(data_trunc))\n\n# Settings of the Hamiltonian Monte Carlo (HMC) sampler.\niterations = 1000\nϵ = 0.05\nτ = 10\n\n# Start sampling.\nchain = sample(truncated_poisson(data_trunc), HMC(ϵ, τ), iterations)\n\n# Plot a summary of the sampling process for the parameter p, i.e. the probability of heads in a coin.\nhistogram(chain[:λ])```\nAm I doing something obviously stupid? I'd really appreciate help on this, thanks! :sweat_smile:  And thanks for the good work you guys are doing!!","user":"U01PJ4X8YCV","ts":"1617711345.144500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"2Dmq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi all, I'm tipping my toes gently in Julia and Turing and so far I really love what I see, but I have some difficulties coming from python (and relatively new to PPLs in general).\nI'm trying to do something that I guess should be simple but got stuck so I thought I'd fetch some help "},{"type":"emoji","name":"slightly_smiling_face"},{"type":"text","text":"\nI'm trying to fit a zero-truncated Poisson, and get errors where the autodiff cannot infer the types of something. I basically adapted the simple example on Turing's homepage like so:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"# Import libraries.\nusing Turing, StatsPlots, Random\n\n# Set the true Poisson rate\nλ_true = 0.5\n\n# Number of un-truncated Poisson observations (I know I can directly sample from Truncated, but don't want to).\nN = 1000\n\n# Draw data from a Poisson distribution\nRandom.seed!(12)\ndata = rand(Poisson(λ_true), N)\ndata_trunc = data[data .> 0]\n\n# Declare our Turing model.\n@model function truncated_poisson(y)\n    # Our prior belief about the Poisson rate.\n    λ ~ Beta(1, 1)\n\n    # Data model\n    for n in 1:length(y)\n        y[n] ~ truncated(Poisson(λ), 0, Inf)\n    end\nend\n\nprint(length(data_trunc))\n\n# Settings of the Hamiltonian Monte Carlo (HMC) sampler.\niterations = 1000\nϵ = 0.05\nτ = 10\n\n# Start sampling.\nchain = sample(truncated_poisson(data_trunc), HMC(ϵ, τ), iterations)\n\n# Plot a summary of the sampling process for the parameter p, i.e. the probability of heads in a coin.\nhistogram(chain[:λ])"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"Am I doing something obviously stupid? I'd really appreciate help on this, thanks! "},{"type":"emoji","name":"sweat_smile"},{"type":"text","text":"  And thanks for the good work you guys are doing!!"}]}]}],"thread_ts":"1617711345.144500","reply_count":31,"reply_users_count":3,"latest_reply":"1617715662.151100","reply_users":["U01PJ4X8YCV","UC0SY9JFP","U85JBUGGP"],"is_locked":false,"subscribed":false},{"client_msg_id":"c26754d2-3d71-4aba-8d92-ba7645dae33a","type":"message","text":"I forgot to add the error message I get. It starts with:\n```MethodError: no method matching poiscdf(::ForwardDiff.Dual{ForwardDiff.Tag{Turing.Core.var\"#f#1\"{DynamicPPL.VarInfo{NamedTuple{(:λ,),Tuple{DynamicPPL.Metadata{Dict{DynamicPPL.VarName{:λ,Tuple{}},Int64},Array{Beta{Float64},1},Array{DynamicPPL.VarName{:λ,Tuple{}},1},Array{Float64,1},Array{Set{DynamicPPL.Selector},1}}}},Float64},DynamicPPL.Model{var\"#29#30\",(:y,),(),(),Tuple{Array{Int64,1}},Tuple{}},DynamicPPL.Sampler{HMC{Turing.Core.ForwardDiffAD{40},(),AdvancedHMC.UnitEuclideanMetric}},DynamicPPL.DefaultContext},Float64},Float64,1}, ::Int64)\nClosest candidates are:\n  poiscdf(::Union{Float64, Int64}, ::Union{Float64, Int64}) at /home/omri/.julia/packages/StatsFuns/zJ1EI/src/rmath.jl:77```","user":"U01PJ4X8YCV","ts":"1617711446.144600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"N5qDW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I forgot to add the error message I get. It starts with:\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"MethodError: no method matching poiscdf(::ForwardDiff.Dual{ForwardDiff.Tag{Turing.Core.var\"#f#1\"{DynamicPPL.VarInfo{NamedTuple{(:λ,),Tuple{DynamicPPL.Metadata{Dict{DynamicPPL.VarName{:λ,Tuple{}},Int64},Array{Beta{Float64},1},Array{DynamicPPL.VarName{:λ,Tuple{}},1},Array{Float64,1},Array{Set{DynamicPPL.Selector},1}}}},Float64},DynamicPPL.Model{var\"#29#30\",(:y,),(),(),Tuple{Array{Int64,1}},Tuple{}},DynamicPPL.Sampler{HMC{Turing.Core.ForwardDiffAD{40},(),AdvancedHMC.UnitEuclideanMetric}},DynamicPPL.DefaultContext},Float64},Float64,1}, ::Int64)\nClosest candidates are:\n  poiscdf(::Union{Float64, Int64}, ::Union{Float64, Int64}) at /home/omri/.julia/packages/StatsFuns/zJ1EI/src/rmath.jl:77"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"5e8af94d-b378-43b9-9f67-e5cb83b60aec","type":"message","text":"Yeah, that looks like a typical *pain in the ass* AD issue for the CDF of a Poisson distribution as it’s imported as an R function from StatsFuns.","user":"UC0SY9JFP","ts":"1617712307.144800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"sdh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, that looks like a typical "},{"type":"text","text":"pain in the ass","style":{"bold":true}},{"type":"text","text":" AD issue for the CDF of a Poisson distribution as it’s imported as an R function from StatsFuns."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"e6c9ec82-17e0-43d1-b496-fb2be4f8c50d","type":"message","text":"<@U85JBUGGP> any idea how to get around this?","user":"UC0SY9JFP","ts":"1617712329.145000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GiT","elements":[{"type":"rich_text_section","elements":[{"type":"user","user_id":"U85JBUGGP"},{"type":"text","text":" any idea how to get around this?"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"77e9b848-f1f0-4619-aca7-9d8f67eb6c22","type":"message","text":"hmm never seen this before","user":"U85JBUGGP","ts":"1617712468.145200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zPxLj","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"hmm never seen this before"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"4d4bf356-0791-4165-9d2d-209d524db821","type":"message","text":"let me check","user":"U85JBUGGP","ts":"1617712471.145400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"J9V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"let me check"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"9e23feb7-9806-4028-9aca-1d45a0b6c4b5","type":"message","text":"One option would be to simply hack up the zero truncated Poisson and add it to Turing’s stdlib as it’s a standard case anyways.","user":"UC0SY9JFP","ts":"1617712495.145600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hCdfp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"One option would be to simply hack up the zero truncated Poisson and add it to Turing’s stdlib as it’s a standard case anyways."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"617255de-1371-4b13-806f-3a1b9187eb7c","type":"message","text":"Alternatively just use Poisson. If your data is truncated, this will give you an unnormalised logpdf which is good enough for MCMC because the domain is constant.","user":"U85JBUGGP","ts":"1617712621.145800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"D=qxK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Alternatively just use Poisson. If your data is truncated, this will give you an unnormalised logpdf which is good enough for MCMC because the domain is constant."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"ab2e693e-66ff-4e51-8c51-7eac5c0bed25","type":"message","text":"but wouldn't that overestimate the rate? I have a case with very low rates (~0.05)","user":"U01PJ4X8YCV","ts":"1617712669.146000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wFWeJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"but wouldn't that overestimate the rate? I have a case with very low rates (~0.05)"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"d5e32e9e-2702-46b4-ba9d-80871ee94c3e","type":"message","text":"and intend to build a GLM around that","user":"U01PJ4X8YCV","ts":"1617712678.146200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/UC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"and intend to build a GLM around that"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"137b710d-a216-4531-8de5-2fb9a4773214","type":"message","text":"Well the only thing that a truncated does in this case is scale the probabilities up so they sum up to 1. If your data is truly truncated, you don’t really need this “scaling” at all when sampling because MCMC can handle unnormalised pdfs.","user":"U85JBUGGP","ts":"1617712753.146400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"LsoQ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well the only thing that a truncated does in this case is scale the probabilities up so they sum up to 1. If your data is truly truncated, you don’t really need this “scaling” at all when sampling because MCMC can handle unnormalised pdfs."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"3c1be3eb-3095-4093-b52f-86949b3279f8","type":"message","text":"If your data is not truncated, then your truncated model will error anyways.","user":"U85JBUGGP","ts":"1617712799.146600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xul","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"If your data is not truncated, then your truncated model will error anyways."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"5dc9d329-8750-488d-a32a-ac510c3bf4f8","type":"message","text":"Well, actually, I followed this blog post (<http://blog.richardweiss.org/2017/10/18/pymc3-truncated-poisson.html>) to implement ZTP in PyMC3 where this worked just fine. I now tried running the sampling with true rate λ=0.05 and just a Poisson (not truncated) and got an estimate for λ around 1. Following that blogpost worked just fine but I was hoping to try this out in Julia..","user":"U01PJ4X8YCV","ts":"1617713007.146800","team":"T68168MUP","attachments":[{"title":"Truncated Poisson Distributions in PyMC3","title_link":"http://blog.richardweiss.org/2017/10/18/pymc3-truncated-poisson.html","text":"IntroductionIn this post, I’ll be describing how I implemented a zero-truncated poisson distribution in PyMC3, as well as why I did so.","fallback":"Truncated Poisson Distributions in PyMC3","from_url":"http://blog.richardweiss.org/2017/10/18/pymc3-truncated-poisson.html","service_icon":"http://blog.richardweiss.org/favicon.ico","service_name":"blog.richardweiss.org","id":1,"original_url":"http://blog.richardweiss.org/2017/10/18/pymc3-truncated-poisson.html"}],"blocks":[{"type":"rich_text","block_id":"cB7li","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, actually, I followed this blog post ("},{"type":"link","url":"http://blog.richardweiss.org/2017/10/18/pymc3-truncated-poisson.html"},{"type":"text","text":") to implement ZTP in PyMC3 where this worked just fine. I now tried running the sampling with true rate λ=0.05 and just a Poisson (not truncated) and got an estimate for λ around 1. Following that blogpost worked just fine but I was hoping to try this out in Julia.."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"1992912e-1222-4f62-823e-401c550aaac3","type":"message","text":"The truncation does add a term to the log likelihood","user":"U01PJ4X8YCV","ts":"1617713021.147100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ryyV0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The truncation does add a term to the log likelihood"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"93bec573-8a8d-4ced-924d-cad09d18f024","type":"message","text":"Well, the zero truncated Poisson is a conditional Poisson distribution. So simply using a Poisson in MCMC should give you wrong estimates.","user":"UC0SY9JFP","ts":"1617713021.147300","team":"T68168MUP","edited":{"user":"UC0SY9JFP","ts":"1617713036.000000"},"blocks":[{"type":"rich_text","block_id":"PEV","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Well, the zero truncated Poisson is a conditional Poisson distribution. So simply using a Poisson in MCMC should give you wrong estimates."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"6633092b-50a6-4d4a-90fb-008a18c751ce","type":"message","text":"Exactly","user":"U01PJ4X8YCV","ts":"1617713033.147500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cTii","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Exactly"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"77b6fcff-c85a-414c-8f74-d34fa16e238b","type":"message","text":"I’m trying to write up a code example…. wip…","user":"UC0SY9JFP","ts":"1617713063.147800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Y2H0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I’m trying to write up a code example…. wip…"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"ea50db15-bb23-4c53-9e75-f0199a8538b2","type":"message","text":":pray:","user":"U01PJ4X8YCV","ts":"1617713072.148000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"bXm","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"pray"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"1062d052-9f08-4066-b509-fc31a370acca","type":"message","text":"btw, I listened yesterday to your interview with Alex Andorra and really liked it :slightly_smiling_face:","user":"U01PJ4X8YCV","ts":"1617713086.148200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"dlg=","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"btw, I listened yesterday to your interview with Alex Andorra and really liked it "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"bc7fe31e-3b33-4e1b-bd82-bcc1984b1f02","type":"message","text":"Thanks! :slightly_smiling_face:","user":"UC0SY9JFP","ts":"1617713103.148400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"SAJTG","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! "},{"type":"emoji","name":"slightly_smiling_face"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"9c368a91-4598-49c0-9125-6ebe6c203e48","type":"message","text":"now I want to know more about probabilistic circuits :wink:","user":"U01PJ4X8YCV","ts":"1617713138.148600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RjHs","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"now I want to know more about probabilistic circuits "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV","reactions":[{"name":"tada","users":["UC0SY9JFP"],"count":1}]},{"client_msg_id":"5d430b3c-5c08-4bf7-9379-9867f510e4b6","type":"message","text":"```using Distributions\nusing StatsFuns\nusing SpecialFunctions\n\nstruct PositivePoisson{T&lt;:Real} &lt;: DiscreteUnivariateDistribution\n  λ::T\nend\n\nDistributions.@distr_support PositivePoisson 1 (d.λ == zero(typeof(d.λ)) ? 1 : Inf)\n_ppoisson_logpdf(x, λ) = StatsFuns.xlogy(x, λ) - logexpm1(λ) - loggamma(x + 1)\nDistributions.logpdf(d::PositivePoisson, x::Real) = _ppoisson_logpdf(x, d.λ)```","user":"UC0SY9JFP","ts":"1617714785.148900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8LSgY","elements":[{"type":"rich_text_preformatted","elements":[{"type":"text","text":"using Distributions\nusing StatsFuns\nusing SpecialFunctions\n\nstruct PositivePoisson{T<:Real} <: DiscreteUnivariateDistribution\n  λ::T\nend\n\nDistributions.@distr_support PositivePoisson 1 (d.λ == zero(typeof(d.λ)) ? 1 : Inf)\n_ppoisson_logpdf(x, λ) = StatsFuns.xlogy(x, λ) - logexpm1(λ) - loggamma(x + 1)\nDistributions.logpdf(d::PositivePoisson, x::Real) = _ppoisson_logpdf(x, d.λ)"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"55fa4b87-00f6-4a2a-bbfe-0a84e748380b","type":"message","text":"I think that should do the trick, if I didn’t mess up something in coding it up.","user":"UC0SY9JFP","ts":"1617714803.149100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RpI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think that should do the trick, if I didn’t mess up something in coding it up."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"237700ba-c02f-4649-8a82-4d6ad65c58f9","type":"message","text":"&gt; Well, actually, I followed this blog post (<http://blog.richardweiss.org/2017/10/18/pymc3-truncated-poisson.html>) to implement ZTP in PyMC3\nI see. Thanks for this. The normalisation constant is actually a function of lambda. So yes the 2 are not the same. My bad.","user":"U85JBUGGP","ts":"1617715012.149300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Afc","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"Well, actually, I followed this blog post ("},{"type":"link","url":"http://blog.richardweiss.org/2017/10/18/pymc3-truncated-poisson.html"},{"type":"text","text":") to implement ZTP in PyMC3"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I see. Thanks for this. The normalisation constant is actually a function of lambda. So yes the 2 are not the same. My bad."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"2203feca-f229-475a-8b39-765cf0fbee57","type":"message","text":"this would be nice in Distributions.jl btw","user":"U85JBUGGP","ts":"1617715115.149500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pD/6Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this would be nice in Distributions.jl btw"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV","reactions":[{"name":"+1","users":["UC0SY9JFP","U01PJ4X8YCV"],"count":2}]},{"client_msg_id":"62865805-ddc1-4277-9321-c7c136a38249","type":"message","text":"I agree. I can try write up a PR. Or maybe someone is faster and can add the missing functionallity.","user":"UC0SY9JFP","ts":"1617715241.149800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Yl1/0","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I agree. I can try write up a PR. Or maybe someone is faster and can add the missing functionallity."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"8b96a7b4-6767-4855-8bfc-b3ebe144b3a6","type":"message","text":"Awesome! I think it would be really nice to have this supported out of the box :wink:","user":"U01PJ4X8YCV","ts":"1617715372.150100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"pccsW","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Awesome! I think it would be really nice to have this supported out of the box "},{"type":"emoji","name":"wink"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"8cf50241-f137-4238-aca7-6147a5438bde","type":"message","text":"it’s one PR away, you can do it!","user":"U85JBUGGP","ts":"1617715399.150300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"kqTQ4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it’s one PR away, you can do it!"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"8ea75bf3-afe2-4adf-a2d9-4ac09adb8cd5","type":"message","text":"Would it be much more difficult to support any truncation? (I only need Zero, but maybe for someone else out there...)","user":"U01PJ4X8YCV","ts":"1617715401.150500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fbqg","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Would it be much more difficult to support any truncation? (I only need Zero, but maybe for someone else out there...)"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"54ca2a08-7aca-4275-a5da-55b1463ec714","type":"message","text":"Yes, because Distributions.jl currently uses an R implementation for the CDF of a Poisson distribution.","user":"UC0SY9JFP","ts":"1617715447.150700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"MYfF/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes, because Distributions.jl currently uses an R implementation for the CDF of a Poisson distribution."}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"2ecf55f7-5e01-48a8-ac9b-86a2f30c85a4","type":"message","text":"I don't mind trying to make a PR, but my knowledge of Julia is very superficial and my time is relatively limited... But I can give it a go","user":"U01PJ4X8YCV","ts":"1617715626.150900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xbIK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't mind trying to make a PR, but my knowledge of Julia is very superficial and my time is relatively limited... But I can give it a go"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV"},{"client_msg_id":"e53ecb0a-245c-4037-854d-17a4f7862726","type":"message","text":"btw, I would name it ZeroTruncatedPoisson rather than PositivePoisson, since I believe that's what people use so it'll be easier to find, I think","user":"U01PJ4X8YCV","ts":"1617715662.151100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"oOVwx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"btw, I would name it ZeroTruncatedPoisson rather than PositivePoisson, since I believe that's what people use so it'll be easier to find, I think"}]}]}],"thread_ts":"1617711345.144500","parent_user_id":"U01PJ4X8YCV","reactions":[{"name":"+1","users":["UC0SY9JFP"],"count":1}]}]