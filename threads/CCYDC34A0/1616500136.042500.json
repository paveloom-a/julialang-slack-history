[{"client_msg_id":"d3b92171-68b7-4bf6-8876-67971f99c214","type":"message","text":"I'm having some troubles with the Turing API. Given a model (as for example the one described in <https://turing.ml/dev/docs/using-turing/get-started>), how do I get the joint likelihood of data and hidden variables? I've tried `logjoint` but I am not sure how to pass the values of the latent variables as `AbstractVarInfo`?","user":"U6BJ9E351","ts":"1616500136.042500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8zLt","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm having some troubles with the Turing API. Given a model (as for example the one described in "},{"type":"link","url":"https://turing.ml/dev/docs/using-turing/get-started"},{"type":"text","text":"), how do I get the joint likelihood of data and hidden variables? I've tried "},{"type":"text","text":"logjoint","style":{"code":true}},{"type":"text","text":" but I am not sure how to pass the values of the latent variables as "},{"type":"text","text":"AbstractVarInfo","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1616500136.042500","reply_count":7,"reply_users_count":2,"latest_reply":"1616500661.043900","reply_users":["U6BJ9E351","U85JBUGGP"],"subscribed":false},{"client_msg_id":"69321aee-a10e-4fcf-8359-0dbe36085c43","type":"message","text":"to make a concrete example:\n\n```julia&gt; using Turing\n\njulia&gt; @model function gdemo(x, y)\n         s ~ InverseGamma(2, 3)\n         m ~ Normal(0, sqrt(s))\n         x ~ Normal(m, sqrt(s))\n         y ~ Normal(m, sqrt(s))\n       end\ngdemo (generic function with 1 method)\n\njulia&gt; m = gdemo(1, 2.3)\nDynamicPPL.Model{var\"#3#4\", (:x, :y), (), (), Tuple{Int64, Float64}, Tuple{}}(:gdemo, var\"#3#4\"(), (x = 1, y = 2.3), NamedTuple())\n\njulia&gt; logjoint(m, (s = 1,)) # naive attempt```","user":"U6BJ9E351","ts":"1616500196.042600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"cuU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"to make a concrete example:\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"julia> using Turing\n\njulia> @model function gdemo(x, y)\n         s ~ InverseGamma(2, 3)\n         m ~ Normal(0, sqrt(s))\n         x ~ Normal(m, sqrt(s))\n         y ~ Normal(m, sqrt(s))\n       end\ngdemo (generic function with 1 method)\n\njulia> m = gdemo(1, 2.3)\nDynamicPPL.Model{var\"#3#4\", (:x, :y), (), (), Tuple{Int64, Float64}, Tuple{}}(:gdemo, var\"#3#4\"(), (x = 1, y = 2.3), NamedTuple())\n\njulia> logjoint(m, (s = 1,)) # naive attempt"}]}]}],"thread_ts":"1616500136.042500","parent_user_id":"U6BJ9E351"},{"client_msg_id":"c212b172-115b-4b03-b29b-446453c19c0c","type":"message","text":"check <https://turing.ml/dev/docs/using-turing/guide#querying-probabilities-from-model-or-chain>","user":"U85JBUGGP","ts":"1616500283.042800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xXOQH","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"check "},{"type":"link","url":"https://turing.ml/dev/docs/using-turing/guide#querying-probabilities-from-model-or-chain"}]}]}],"thread_ts":"1616500136.042500","parent_user_id":"U6BJ9E351"},{"client_msg_id":"29a866e3-5521-4dcd-b806-9551472214ef","type":"message","text":"I think you need to pass `m` not `gdemo`","user":"U85JBUGGP","ts":"1616500310.043000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"B//v4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think you need to pass "},{"type":"text","text":"m","style":{"code":true}},{"type":"text","text":" not "},{"type":"text","text":"gdemo","style":{"code":true}}]}]}],"thread_ts":"1616500136.042500","parent_user_id":"U6BJ9E351"},{"client_msg_id":"6504d87a-3ba4-4985-8aeb-aadbf53b28d0","type":"message","text":"thanks! exactly what I was looking for (somehow I missed that section of the docs)","user":"U6BJ9E351","ts":"1616500485.043200","team":"T68168MUP","edited":{"user":"U6BJ9E351","ts":"1616500509.000000"},"blocks":[{"type":"rich_text","block_id":"Z/FUR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks! exactly what I was looking for (somehow I missed that section of the docs)"}]}]}],"thread_ts":"1616500136.042500","parent_user_id":"U6BJ9E351"},{"client_msg_id":"c3497522-bbfa-4a41-9f5c-67444c916b18","type":"message","text":"one more doubt: is it easy to access the names of the latent variables from `m`?","user":"U6BJ9E351","ts":"1616500531.043500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"68Ld","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"one more doubt: is it easy to access the names of the latent variables from "},{"type":"text","text":"m","style":{"code":true}},{"type":"text","text":"?"}]}]}],"thread_ts":"1616500136.042500","parent_user_id":"U6BJ9E351"},{"client_msg_id":"6c86047b-ac49-4ce6-a80b-32bc7d4a2231","type":"message","text":"(ah, but I see that in practice one just runs the optimizer to get the `MAP` estimate, so I would have the names as well)","user":"U6BJ9E351","ts":"1616500611.043700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"VIF7Y","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"(ah, but I see that in practice one just runs the optimizer to get the "},{"type":"text","text":"MAP","style":{"code":true}},{"type":"text","text":" estimate, so I would have the names as well)"}]}]}],"thread_ts":"1616500136.042500","parent_user_id":"U6BJ9E351"},{"client_msg_id":"c50e06b0-0f16-4f2d-ad30-c8c2161a4fb2","type":"message","text":"try `DynamicPPL.syms(DynamicPPL.VarInfo(m))`","user":"U85JBUGGP","ts":"1616500661.043900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=kIc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"try "},{"type":"text","text":"DynamicPPL.syms(DynamicPPL.VarInfo(m))","style":{"code":true}}]}]}],"thread_ts":"1616500136.042500","parent_user_id":"U6BJ9E351"}]