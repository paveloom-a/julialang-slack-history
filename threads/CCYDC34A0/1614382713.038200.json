[{"client_msg_id":"5d020a83-1de4-49bb-83a8-3b664364d065","type":"message","text":"Hi everyone! probably a basic question. Is there any concise syntax for declaring multiple parameters that share the same (but not joint) prior distribution? Something like: [par1; par2; par3; par4; par5;] ~ Normal(0, simga2), instead of par1 ~ N(0, sigma2), par2 ~ N(0, sigma2), and so on. Thank you!","user":"U01H6G07MST","ts":"1614382713.038200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Hvq","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hi everyone! probably a basic question. Is there any concise syntax for declaring multiple parameters that share the same (but not joint) prior distribution? Something like: [par1; par2; par3; par4; par5;] ~ Normal(0, simga2), instead of par1 ~ N(0, sigma2), par2 ~ N(0, sigma2), and so on. Thank you!"}]}]}],"thread_ts":"1614382713.038200","reply_count":3,"reply_users_count":3,"latest_reply":"1614463189.042500","reply_users":["U7QLM6E2E","ULG5V164A","U01H6G07MST"],"subscribed":false},{"client_msg_id":"d032f19b-ec13-47cb-acac-0c80bca7fe44","type":"message","text":"You could use a MvNormal with a diagonal covariance","user":"U7QLM6E2E","ts":"1614385621.039100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5Ly2t","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You could use a MvNormal with a diagonal covariance"}]}]}],"thread_ts":"1614382713.038200","parent_user_id":"U01H6G07MST","reactions":[{"name":"+1","users":["ULG5V164A","U01H6G07MST"],"count":2}]},{"client_msg_id":"fd34c7ce-da1f-4b93-ad1e-a1997c41fd71","type":"message","text":"You can also call `filldist` for this, e.g. `filldist(Normal(0, sigma2), 5)` but accessing is slightly trickier (i.e. unpacking doesn't quite work).","user":"ULG5V164A","ts":"1614386306.041700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"x5Mld","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can also call "},{"type":"text","text":"filldist","style":{"code":true}},{"type":"text","text":" for this, e.g. "},{"type":"text","text":"filldist(Normal(0, sigma2), 5)","style":{"code":true}},{"type":"text","text":" but accessing is slightly trickier (i.e. unpacking doesn't quite work)."}]}]}],"thread_ts":"1614382713.038200","parent_user_id":"U01H6G07MST","reactions":[{"name":"+1","users":["U01H6G07MST"],"count":1}]},{"client_msg_id":"07fed605-e4b4-4069-b3e2-1951cfa7994d","type":"message","text":"Thank you!","user":"U01H6G07MST","ts":"1614463189.042500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"3=9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thank you!"}]}]}],"thread_ts":"1614382713.038200","parent_user_id":"U01H6G07MST"}]