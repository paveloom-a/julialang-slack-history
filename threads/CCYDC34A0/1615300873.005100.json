[{"client_msg_id":"45fcb3ae-01ef-47b6-bcc2-ba476543aef3","type":"message","text":"Is there an effort atm to include likelihood-free/simulation based inference in Turing (or elsewhere?)","user":"U01M641BZEY","ts":"1615300873.005100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RCx07","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there an effort atm to include likelihood-free/simulation based inference in Turing (or elsewhere?)"}]}]}],"thread_ts":"1615300873.005100","reply_count":14,"reply_users_count":4,"latest_reply":"1615761354.133300","reply_users":["U9JNHB83X","U01J62981NK","U01M641BZEY","UHDNY2YMA"],"subscribed":false},{"client_msg_id":"cb00dbdc-a527-4081-abdf-a412321db7ad","type":"message","text":"Nothing yet, as far as I'm aware.","user":"U9JNHB83X","ts":"1615319351.010200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"S95","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Nothing yet, as far as I'm aware."}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"5ef2a26f-93b4-4016-8e81-77741fcf67d1","type":"message","text":"Might be interesting though","user":"U9JNHB83X","ts":"1615319357.010400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Gxa1h","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Might be interesting though"}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"9475e843-77d0-41e8-994a-0c712efd7360","type":"message","text":"Is there much interest in a library for likelihood free inference? I'm really interested in it (writing a grant application for an ABC postdoc at the moment) and noticed that the Julia ecosystem for ABC is a bit fragmented. I'd be happy to put in time towards this.","user":"U01J62981NK","ts":"1615554032.035800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OzGh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is there much interest in a library for likelihood free inference? I'm really interested in it (writing a grant application for an ABC postdoc at the moment) and noticed that the Julia ecosystem for ABC is a bit fragmented. I'd be happy to put in time towards this."}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"eda40d9d-4f51-4171-b69c-ca1d89ef6947","type":"message","text":"I'm interested at least, dunno about other folks.","user":"U9JNHB83X","ts":"1615561595.036400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"U+cKR","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'm interested at least, dunno about other folks."}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"676949E4-18B5-4F8D-BB06-6808410F6F04","type":"message","text":"I would certainly be interested in contributing to such a package, however, I’m still developing my Julia development skills :) ","user":"U01M641BZEY","ts":"1615646342.066100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c=4i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I would certainly be interested in contributing to such a package, however, I’m still developing my Julia development skills :) "}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"57cd2946-30c1-446c-ab45-fa9844a45ae2","type":"message","text":"I did some initial work on adding functionality to support ABC in Turing.jl a while back (it died down because it seemed like the ABC-people at time were convinced to move towards implementing the interface for `AbstractMCMC.jl` and thus we'd get Turing-compat \"for free\"): <https://github.com/TuringLang/Turing.jl/pull/1334>.\n\nBut it seems like the ApproximateInference people aren't really working on the project anymore :confused: <https://github.com/JuliaApproxInference/ApproxInferenceBase.jl/issues/1>","user":"UHDNY2YMA","ts":"1615666099.086900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xP2","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I did some initial work on adding functionality to support ABC in Turing.jl a while back (it died down because it seemed like the ABC-people at time were convinced to move towards implementing the interface for "},{"type":"text","text":"AbstractMCMC.jl","style":{"code":true}},{"type":"text","text":" and thus we'd get Turing-compat \"for free\"): "},{"type":"link","url":"https://github.com/TuringLang/Turing.jl/pull/1334"},{"type":"text","text":".\n\nBut it seems like the ApproximateInference people aren't really working on the project anymore "},{"type":"emoji","name":"confused"},{"type":"text","text":" "},{"type":"link","url":"https://github.com/JuliaApproxInference/ApproxInferenceBase.jl/issues/1"}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"f1ee9b15-ecac-42d0-9254-4d09c2db80c9","type":"message","text":"That's really helpful background. Thanks! I'll comb through the PRs and issues and see if I can try and pick up where things were left off.","user":"U01J62981NK","ts":"1615757817.130200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"y0P9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's really helpful background. Thanks! I'll comb through the PRs and issues and see if I can try and pick up where things were left off."}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"9b6c149a-5735-4950-ab31-bdb44a814c3d","type":"message","text":"I think a very fruitful path is to adopt the AbstractMCMC.jl framework (it's not much, mainly just `step` ) as this would make it possible to use ABC methods as drop-in replacements for MCMC methods (ith a bit of work on the PPL side of things.","user":"UHDNY2YMA","ts":"1615758301.131000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"66Z","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I think a very fruitful path is to adopt the AbstractMCMC.jl framework (it's not much, mainly just "},{"type":"text","text":"step","style":{"code":true}},{"type":"text","text":" ) as this would make it possible to use ABC methods as drop-in replacements for MCMC methods (ith a bit of work on the PPL side of things."}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY","reactions":[{"name":"+1","users":["U01J62981NK"],"count":1}]},{"client_msg_id":"075c4db2-5c64-411e-8422-68dc2325e0af","type":"message","text":"Are you still actively working on it?","user":"U01J62981NK","ts":"1615758427.131200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gwWb","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Are you still actively working on it?"}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"cd9953c0-252c-4b04-a5fe-f01bf6442526","type":"message","text":"On the ABC PR I mentioned above? For the PR: no, unfortunately not. It is not a family of methods I really use myself and at the time it seemed like it would be a better idea to let the ABC-peeps make a proper implementation that we could then just hook into, and so I left the PR in a very raw form.","user":"UHDNY2YMA","ts":"1615758667.131700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uEFf","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"On the ABC PR I mentioned above? For the PR: no, unfortunately not. It is not a family of methods I really use myself and at the time it seemed like it would be a better idea to let the ABC-peeps make a proper implementation that we could then just hook into, and so I left the PR in a very raw form."}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"f44d8602-0ac9-4677-9023-499ec4ccad40","type":"message","text":"Great. Thanks for the pointers, much appreciated!","user":"U01J62981NK","ts":"1615758695.131900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"6qM5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Great. Thanks for the pointers, much appreciated!"}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"5b67178c-21ca-40f4-80ab-062b1aea2f83","type":"message","text":"I'd be happy to do some work on making it possible to use ABC methods in Turing if such methods became available in the Julia ecosystem though! In particular if the samplers are using an interface which we already have good support for. Similarly I'd be happy to discuss/help out with questions about how to for example implement these in the AbstractMCMC framework and if it makes sense to do so (there's the discussion in the above issue that I mentioned that goes a bit into this).","user":"UHDNY2YMA","ts":"1615758823.132100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7ohL","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I'd be happy to do some work on making it possible to use ABC methods in Turing if such methods became available in the Julia ecosystem though! In particular if the samplers are using an interface which we already have good support for. Similarly I'd be happy to discuss/help out with questions about how to for example implement these in the AbstractMCMC framework and if it makes sense to do so (there's the discussion in the above issue that I mentioned that goes a bit into this)."}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"},{"client_msg_id":"385bca56-b748-457f-8556-433e5a29a0ea","type":"message","text":"Awesome, thanks! I'll put together some stuff and splat it in a repo somewhere. I'll share it around this channel when it gets to a shareable state to see how it might keep consistency the 'likelihood-rich' stuff.","user":"U01J62981NK","ts":"1615760526.133100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Bo0os","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Awesome, thanks! I'll put together some stuff and splat it in a repo somewhere. I'll share it around this channel when it gets to a shareable state to see how it might keep consistency the 'likelihood-rich' stuff."}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY","reactions":[{"name":"thumbsup_all","users":["U01M641BZEY"],"count":1}]},{"client_msg_id":"cd55359b-b8d6-4582-a247-f2357da8385a","type":"message","text":"Awesome!:)","user":"UHDNY2YMA","ts":"1615761354.133300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+HF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Awesome!:)"}]}]}],"thread_ts":"1615300873.005100","parent_user_id":"U01M641BZEY"}]