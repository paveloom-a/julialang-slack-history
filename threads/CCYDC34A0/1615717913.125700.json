[{"client_msg_id":"49b42c15-4ee7-46aa-a23b-0aefe04cbe0d","type":"message","text":"Hello Turing community, how do I compute predictions for `Turing.addlogprob!` ? MWE\n\n```@model function gdemo(y)\n    mu ~ Normal(0,2)\n    for i in eachindex(y)\n        y[i] ~ Normal(mu,1)\n    end\nend\n\n@model function gdemoFail(y)\n    mu ~ Normal(0,2)\n    for i in eachindex(y)\n        Turing.@addlogprob! logpdf(Normal(mu, 1), y[i])\n    end\nend\n\ny = randn(50)\nchn = sample(gdemo(y), NUTS(), 100)\nyTest = Vector{Union{Missing,Float64}}(undef, length(y))\n\ntestModel = gdemo(yTest)\npredictions = predict(testModel, chn)\n\ntestModelFail = gdemoFail(yTest)\npredictionsFail = predict(testModelFail, chn)\njulia&gt; ERROR: MethodError: no method matching logpdf(::Normal{Float64}, ::Missing).....................```","user":"U011PPW7K53","ts":"1615717913.125700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/Ec+Q","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello Turing community, how do I compute predictions for "},{"type":"text","text":"Turing.addlogprob!","style":{"code":true}},{"type":"text","text":" ? MWE\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@model function gdemo(y)\n    mu ~ Normal(0,2)\n    for i in eachindex(y)\n        y[i] ~ Normal(mu,1)\n    end\nend\n\n@model function gdemoFail(y)\n    mu ~ Normal(0,2)\n    for i in eachindex(y)\n        Turing.@addlogprob! logpdf(Normal(mu, 1), y[i])\n    end\nend\n\ny = randn(50)\nchn = sample(gdemo(y), NUTS(), 100)\nyTest = Vector{Union{Missing,Float64}}(undef, length(y))\n\ntestModel = gdemo(yTest)\npredictions = predict(testModel, chn)\n\ntestModelFail = gdemoFail(yTest)\npredictionsFail = predict(testModelFail, chn)\njulia> ERROR: MethodError: no method matching logpdf(::Normal{Float64}, ::Missing)....................."}]}]}],"thread_ts":"1615717913.125700","reply_count":1,"reply_users_count":1,"latest_reply":"1615721289.125800","reply_users":["UHDNY2YMA"],"subscribed":false},{"client_msg_id":"1113794a-372b-4d19-aa53-f3b946b2e6a8","type":"message","text":"The purpose of `@addlogprob!` is to allow the user to override Turing's detection of what is and what is not a observation; it will just assume that the user knows what they're doing and execute everything on the RHS and expecting it to return a number.\n\nSo you need to manually check if it's missing or not, e.g. `ismissing(y[i]) &amp;&amp; Turing.@addlogprob! ...`","user":"UHDNY2YMA","ts":"1615721289.125800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"zcr/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"The purpose of "},{"type":"text","text":"@addlogprob!","style":{"code":true}},{"type":"text","text":" is to allow the user to override Turing's detection of what is and what is not a observation; it will just assume that the user knows what they're doing and execute everything on the RHS and expecting it to return a number.\n\nSo you need to manually check if it's missing or not, e.g. "},{"type":"text","text":"ismissing(y[i]) && Turing.@addlogprob! ...","style":{"code":true}}]}]}],"thread_ts":"1615717913.125700","parent_user_id":"U011PPW7K53"}]