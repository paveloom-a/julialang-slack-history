[{"client_msg_id":"422a66f7-a1af-40ff-b02d-7a2722c20171","type":"message","text":"What is the best way to encode parameter interdependendence in a Turing. ? E.g. paramerter bounds are dependent on a second parameter. The parameter part of my models looks like this at the moment, basically just rejecting any sample which doesn't satisfy the conditions by add `-Inf` to `logprob` but that doesn't seem a particular efficient nor elegant way of doing it.\n\n```@model function _turing_model(data::NamedTuple, ode_prob::ODEProblem, solver, priors::NamedTuple, sim::Bool=false, logp::Bool=false; ode_args = (;))\n\t### priors\n    p_preDCbm ~ priors.p_preDCbm\n    p_cDC1bm ~ priors.p_cDC1bm\n    p_cDC2bm ~ priors.p_cDC2bm\n    δ_preDCb ~ Uniform(0.0,2.0)\n    λ_cDC1 ~ Uniform(0.0,2.0)\n    λ_cDC2 ~ Uniform(0.0,2.0)\n    Δ_cDC2bm ~ Uniform(0.0,2.0)\n    Δ_cDC2b ~ Uniform(0.0,2.0)\n    σ1 ~ TruncatedNormal(0.0, 1.0, 0.0,Inf)\n    σ2 ~ TruncatedNormal(0.0, 1.0, 0.0,Inf)\n    σ3 ~ TruncatedNormal(0.0, 1.0, 0.0,Inf)\n\n    λ_preDC = (Δ_cDC2b + δ_preDCb) / data.R.RpreDC\n\n\t### parameter constraints\n\tif p_preDCbm ≤ (λ_preDC + Δ_cDC2bm)\n\t\tTuring.@addlogprob! -Inf\n\t\treturn\n\telseif λ_cDC1 ≥ p_cDC1bm\n\t\tTuring.@addlogprob! -Inf\n\t\treturn\n\telseif λ_cDC2 ≥ p_cDC2bm + Δ_cDC2bm * data.R.RpreDC_cDC2_bm\n\t \tTuring.@addlogprob! -Inf\n\t \treturn\n\tend\n\n    ### compound parameter\n    δ_preDCbm = p_preDCbm - λ_preDC - Δ_cDC2bm\n    δ_cDC1bm = p_cDC1bm - λ_cDC1\n    δ_cDC2bm = p_cDC2bm + Δ_cDC2bm * data.R.RpreDC_cDC2_bm - λ_cDC2\n    δ_cDC1b = λ_cDC1 * data.R.RcDC1\n    δ_cDC2b = λ_cDC2 * data.R.RcDC2 + Δ_cDC2b * data.R.RpreDC_cDC2_blood\n\n    ### parameter vector\n    theta = [p_preDCbm, δ_preDCbm, p_cDC1bm, δ_cDC1bm, p_cDC2bm, δ_cDC2bm, δ_preDCb, δ_cDC1b, δ_cDC2b, λ_preDC, λ_cDC1, λ_cDC2, Δ_cDC2bm, Δ_cDC2b]\n\n...\nend```","user":"UGFMDAMC3","ts":"1614967762.071300","team":"T68168MUP","edited":{"user":"UGFMDAMC3","ts":"1614968023.000000"},"blocks":[{"type":"rich_text","block_id":"A+BE","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"What is the best way to encode parameter interdependendence in a Turing. ? E.g. paramerter bounds are dependent on a second parameter. The parameter part of my models looks like this at the moment, basically just rejecting any sample which doesn't satisfy the conditions by add "},{"type":"text","text":"-Inf","style":{"code":true}},{"type":"text","text":" to "},{"type":"text","text":"logprob","style":{"code":true}},{"type":"text","text":" but that doesn't seem a particular efficient nor elegant way of doing it.\n\n"}]},{"type":"rich_text_preformatted","elements":[{"type":"text","text":"@model function _turing_model(data::NamedTuple, ode_prob::ODEProblem, solver, priors::NamedTuple, sim::Bool=false, logp::Bool=false; ode_args = (;))\n\t### priors\n    p_preDCbm ~ priors.p_preDCbm\n    p_cDC1bm ~ priors.p_cDC1bm\n    p_cDC2bm ~ priors.p_cDC2bm\n    δ_preDCb ~ Uniform(0.0,2.0)\n    λ_cDC1 ~ Uniform(0.0,2.0)\n    λ_cDC2 ~ Uniform(0.0,2.0)\n    Δ_cDC2bm ~ Uniform(0.0,2.0)\n    Δ_cDC2b ~ Uniform(0.0,2.0)\n    σ1 ~ TruncatedNormal(0.0, 1.0, 0.0,Inf)\n    σ2 ~ TruncatedNormal(0.0, 1.0, 0.0,Inf)\n    σ3 ~ TruncatedNormal(0.0, 1.0, 0.0,Inf)\n\n    λ_preDC = (Δ_cDC2b + δ_preDCb) / data.R.RpreDC\n\n\t### parameter constraints\n\tif p_preDCbm ≤ (λ_preDC + Δ_cDC2bm)\n\t\tTuring.@addlogprob! -Inf\n\t\treturn\n\telseif λ_cDC1 ≥ p_cDC1bm\n\t\tTuring.@addlogprob! -Inf\n\t\treturn\n\telseif λ_cDC2 ≥ p_cDC2bm + Δ_cDC2bm * data.R.RpreDC_cDC2_bm\n\t \tTuring.@addlogprob! -Inf\n\t \treturn\n\tend\n\n    ### compound parameter\n    δ_preDCbm = p_preDCbm - λ_preDC - Δ_cDC2bm\n    δ_cDC1bm = p_cDC1bm - λ_cDC1\n    δ_cDC2bm = p_cDC2bm + Δ_cDC2bm * data.R.RpreDC_cDC2_bm - λ_cDC2\n    δ_cDC1b = λ_cDC1 * data.R.RcDC1\n    δ_cDC2b = λ_cDC2 * data.R.RcDC2 + Δ_cDC2b * data.R.RpreDC_cDC2_blood\n\n    ### parameter vector\n    theta = [p_preDCbm, δ_preDCbm, p_cDC1bm, δ_cDC1bm, p_cDC2bm, δ_cDC2bm, δ_preDCb, δ_cDC1b, δ_cDC2b, λ_preDC, λ_cDC1, λ_cDC2, Δ_cDC2bm, Δ_cDC2b]\n\n...\nend"}]}]}],"thread_ts":"1614967762.071300","reply_count":20,"reply_users_count":3,"latest_reply":"1615391511.013700","reply_users":["U9JNHB83X","U85JBUGGP","UGFMDAMC3"],"subscribed":false},{"client_msg_id":"84bc87ca-c880-48be-945b-09fc3e0e7d88","type":"message","text":"We don't support stochastic bounds yet I think, so I suspect this'll have to be sufficient for now","user":"U9JNHB83X","ts":"1614988737.072700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"yZJU","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We don't support stochastic bounds yet I think, so I suspect this'll have to be sufficient for now"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"3b7611ef-200f-4159-ac9e-d742eb99eb7b","type":"message","text":"you can write your own distribution to do that though","user":"U85JBUGGP","ts":"1615022531.072900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"s9u7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"you can write your own distribution to do that though"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"7940feb8-8d4f-40ee-a0f9-ebd34375ad3f","type":"message","text":"<https://github.com/TuringLang/Turing.jl/issues/1270>","user":"U85JBUGGP","ts":"1615022611.073200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"eC2G","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/TuringLang/Turing.jl/issues/1270"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"6c33c713-5aea-4226-8eb1-25e7fd331b2c","type":"message","text":"thanks i will take a closer look at that and might come back with some questions. btw are you still planning for a general implementation in DynamicPPL?","user":"UGFMDAMC3","ts":"1615023389.073400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"m0j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"thanks i will take a closer look at that and might come back with some questions. btw are you still planning for a general implementation in DynamicPPL?"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"fd01071a-a798-4e53-bb5b-76ec82634148","type":"message","text":"not at the moment","user":"U85JBUGGP","ts":"1615024876.073600","team":"T68168MUP","edited":{"user":"U85JBUGGP","ts":"1615024887.000000"},"blocks":[{"type":"rich_text","block_id":"rly","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"not at the moment"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"97425256-436d-4e71-91b6-3cbb0a1e4f44","type":"message","text":"the branch is there but it was too complicated a change so it got kept aside for too long then rebasing became too difficult and I got busy","user":"U85JBUGGP","ts":"1615024986.073900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"d1V","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"the branch is there but it was too complicated a change so it got kept aside for too long then rebasing became too difficult and I got busy"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"933e717b-5674-49de-8031-e48e14d3bf64","type":"message","text":"fair enough. using the `addlogprob!` approach is there potential for insufficient sampling near the \"hard border\" due to the constraint?","user":"UGFMDAMC3","ts":"1615228072.104700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"hJFc","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"fair enough. using the "},{"type":"text","text":"addlogprob!","style":{"code":true}},{"type":"text","text":" approach is there potential for insufficient sampling near the \"hard border\" due to the constraint?"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"647d2acc-c058-4121-b179-9af57ffa602c","type":"message","text":"I am getting probably more then 90% of samples with numerical error and I reckon that this is because at some point in the tree of the NUTS sampling step there it didn't satisfy the above condition and return `-Inf` . The `max_hamiltonian_energy_error` for all these samples is also `Inf`. How can I distinguish between these errors and real divergent transitions? Would the implicit constraints of the custom distribution solve this?","user":"UGFMDAMC3","ts":"1615376278.011200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gUY0f","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am getting probably more then 90% of samples with numerical error and I reckon that this is because at some point in the tree of the NUTS sampling step there it didn't satisfy the above condition and return "},{"type":"text","text":"-Inf","style":{"code":true}},{"type":"text","text":" . The "},{"type":"text","text":"max_hamiltonian_energy_error","style":{"code":true}},{"type":"text","text":" for all these samples is also "},{"type":"text","text":"Inf","style":{"code":true}},{"type":"text","text":". How can I distinguish between these errors and real divergent transitions? Would the implicit constraints of the custom distribution solve this?"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"2c0fa4f3-b9a8-4764-9446-f7c55146e88e","type":"message","text":"Yeah, I would imagine so","user":"U9JNHB83X","ts":"1615389051.011400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"gIIiK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, I would imagine so"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"fb78c7ee-a57b-4dc6-a4c5-f57472861c90","type":"message","text":"And I don't know that there is a way to distinguish, other than actually checking whether the conditions were satisfied for each sample that is flagged as a numerical error","user":"U9JNHB83X","ts":"1615389106.011600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jtN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"And I don't know that there is a way to distinguish, other than actually checking whether the conditions were satisfied for each sample that is flagged as a numerical error"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"d8339dbe-591a-4585-9412-a43f3f403d72","type":"message","text":"Okay, I am, still struggling wrapping my head around the example you posted. Can I come back to you when I have tried to mould it to my problem at hand.","user":"UGFMDAMC3","ts":"1615389291.011800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"vNXw","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, I am, still struggling wrapping my head around the example you posted. Can I come back to you when I have tried to mould it to my problem at hand."}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"4ed0a8ea-cb56-4a87-94ff-c1b9dd747ee6","type":"message","text":"Yeah, absolutely","user":"U9JNHB83X","ts":"1615389345.012000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Uhe0g","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yeah, absolutely"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"02443543-1d93-470c-8f25-a6ac6c05faf1","type":"message","text":"Also, I have seen this <https://github.com/TuringLang/Turing.jl/issues/1533> where the parameter is assigned to intermediate variable to avoid custom distribution? Does this make sense?","user":"UGFMDAMC3","ts":"1615389370.012200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pb4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Also, I have seen this "},{"type":"link","url":"https://github.com/TuringLang/Turing.jl/issues/1533"},{"type":"text","text":" where the parameter is assigned to intermediate variable to avoid custom distribution? Does this make sense?"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"1b9cee84-8f55-49f7-901e-0f95bd2b2b52","type":"message","text":"&gt; And I don't know that there is a way to distinguish, other than actually checking whether the conditions were satisfied for each sample that is flagged as a numerical error\nI would imagine though that its not the sample returned but one of the calculation during the leapfrog steps ran into a parameter combination which didn't satisfy the conditions?","user":"UGFMDAMC3","ts":"1615389501.012400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"FPWS7","elements":[{"type":"rich_text_quote","elements":[{"type":"text","text":"And I don't know that there is a way to distinguish, other than actually checking whether the conditions were satisfied for each sample that is flagged as a numerical error"}]},{"type":"rich_text_section","elements":[{"type":"text","text":"I would imagine though that its not the sample returned but one of the calculation during the leapfrog steps ran into a parameter combination which didn't satisfy the conditions?"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"545c3d35-3c19-4467-a964-0436657d5a84","type":"message","text":"Crap, right, so I guess even that wouldn't work.","user":"U9JNHB83X","ts":"1615389663.012600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9=zl","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Crap, right, so I guess even that wouldn't work."}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"c34f9ff9-b53a-4a1a-be29-4f65b4ee80cd","type":"message","text":"A custom distribution is the only proper way I know how to do this.","user":"U85JBUGGP","ts":"1615390192.012800","team":"T68168MUP","edited":{"user":"U85JBUGGP","ts":"1615390197.000000"},"blocks":[{"type":"rich_text","block_id":"e3j","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A custom distribution is the only proper way I know how to do this."}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"1a9fb88e-9f51-46b2-b6d3-a9e70b6691a3","type":"message","text":"Okay, I will try to get something working and come back here.","user":"UGFMDAMC3","ts":"1615390430.013100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nz2xx","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Okay, I will try to get something working and come back here."}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"58799d1a-9c63-47e0-a1d4-4c384638d949","type":"message","text":"On the topic of the divergence though, how can we distinguish between a rejected sample due to `Turing.@addlogprob -Inf` , if for example the ODE solver fails, and a true divergent transition due the divergence of the hamiltonian trajectory?","user":"UGFMDAMC3","ts":"1615390668.013300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Z6cC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"On the topic of the divergence though, how can we distinguish between a rejected sample due to "},{"type":"text","text":"Turing.@addlogprob -Inf","style":{"code":true}},{"type":"text","text":" , if for example the ODE solver fails, and a true divergent transition due the divergence of the hamiltonian trajectory?"}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"e43b77c0-ee35-467c-bec6-82f151a033a2","type":"message","text":"I don’t think it’s possible to distinguish between them after the fact.","user":"U85JBUGGP","ts":"1615391279.013500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"tn/","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don’t think it’s possible to distinguish between them after the fact."}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"},{"client_msg_id":"bb0b5cb7-cede-4b27-a0a6-fec202e366ad","type":"message","text":"That makes sense.","user":"UGFMDAMC3","ts":"1615391511.013700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=4R","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That makes sense."}]}]}],"thread_ts":"1614967762.071300","parent_user_id":"UGFMDAMC3"}]