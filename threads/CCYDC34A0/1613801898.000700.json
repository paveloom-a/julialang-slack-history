[{"client_msg_id":"4da6a3bc-3709-472e-b994-8cf5579034ce","type":"message","text":"Hello everyone, is there any docs for saving and loading Turing model?","user":"U011PPW7K53","ts":"1613801898.000700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"+zEy7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Hello everyone, is there any docs for saving and loading Turing model?"}]}]}],"thread_ts":"1613801898.000700","reply_count":10,"reply_users_count":4,"latest_reply":"1613809390.006900","reply_users":["UN45LV5K6","U011PPW7K53","UC0SY9JFP","U8T9JUA5R"],"subscribed":false},{"client_msg_id":"26797ec6-26bf-4014-85f8-a7013e648412","type":"message","text":"No... because there is no (standard) way to do that as of now. It constructs a closure, internally. But I encourage you to look at Github and open an issue, if there's not already one. The idea seems like a reasonable wish for the future.","user":"UN45LV5K6","ts":"1613804165.000800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"z3i","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"No... because there is no (standard) way to do that as of now. It constructs a closure, internally. But I encourage you to look at Github and open an issue, if there's not already one. The idea seems like a reasonable wish for the future."}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53"},{"client_msg_id":"3820d69a-fcdf-44ee-a1b5-b7a4aea96396","type":"message","text":"Thanks Philipp.\n\nWhat is the best workaround at the moment? :eyes: I just spent 5 hours finished a sampling and need to save it.","user":"U011PPW7K53","ts":"1613804635.001200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"9qu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks Philipp.\n\nWhat is the best workaround at the moment? "},{"type":"emoji","name":"eyes"},{"type":"text","text":" I just spent 5 hours finished a sampling and need to save it."}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53"},{"client_msg_id":"A9881358-C451-4485-B1F8-D48B91C535F7","type":"message","text":"You can save the chain using serialisation. What Philipp refers to is saving the model definition. The samples can be saved quite easily but saving the model definition is not supported. ","user":"UC0SY9JFP","ts":"1613804742.003200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"RtK","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"You can save the chain using serialisation. What Philipp refers to is saving the model definition. The samples can be saved quite easily but saving the model definition is not supported. "}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53","reactions":[{"name":"+1","users":["U011PPW7K53"],"count":1}]},{"client_msg_id":"f30a2c17-1a45-4d26-b46f-e2586fb81243","type":"message","text":"Oh, saving the samples should be easier. Have a look at MCMCChains.jl (which is the implementation of chains, it's not an external package).","user":"UN45LV5K6","ts":"1613804746.003500","team":"T68168MUP","edited":{"user":"UN45LV5K6","ts":"1613804864.000000"},"blocks":[{"type":"rich_text","block_id":"8nkXN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh, saving the samples should be easier. Have a look at MCMCChains.jl (which is the implementation of chains, it's not an external package)."}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53","reactions":[{"name":"+1","users":["U011PPW7K53"],"count":1}]},{"client_msg_id":"f67d5d02-ccdb-4378-a60e-6fa0ef026d5f","type":"message","text":"We even test saving and loading models (it's just a function): <https://github.com/TuringLang/DynamicPPL.jl/blob/master/test/serialization.jl|https://github.com/TuringLang/DynamicPPL.jl/blob/master/test/serialization.jl> :stuck_out_tongue:","user":"U8T9JUA5R","ts":"1613805441.003800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"PFII","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"We even test saving and loading models (it's just a function): "},{"type":"link","url":"https://github.com/TuringLang/DynamicPPL.jl/blob/master/test/serialization.jl","text":"https://github.com/TuringLang/DynamicPPL.jl/blob/master/test/serialization.jl"},{"type":"text","text":" "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53","reactions":[{"name":"+1","users":["U011PPW7K53"],"count":1}]},{"client_msg_id":"39e8837b-3b24-4420-a7f7-6e396580c198","type":"message","text":"Chains can also be (de-)serialized. Note though that it's not guaranteed that you can load it with a different Julia version (as for any serialization procedure). Have a look at JSLO.jl if you want to save additional metadata such as Julia version and the status of the packages.","user":"U8T9JUA5R","ts":"1613805607.004000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"xkmM","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Chains can also be (de-)serialized. Note though that it's not guaranteed that you can load it with a different Julia version (as for any serialization procedure). Have a look at JSLO.jl if you want to save additional metadata such as Julia version and the status of the packages."}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53"},{"client_msg_id":"ac00c370-ea30-4234-8107-995140f4d2b9","type":"message","text":"Whoa how does that work. Must be my Haskell legacy that leads me to such erroneous assumptions as functions not being serializable...","user":"UN45LV5K6","ts":"1613807272.004200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5nWo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Whoa how does that work. Must be my Haskell legacy that leads me to such erroneous assumptions as functions not being serializable..."}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53"},{"client_msg_id":"097ec336-447b-445a-8a4f-8f3dc84bbd28","type":"message","text":"Ahhhhhhhh yes that's my bad I was actually referring to saving chain object. Thanks I got it working with `Serialization.serialize`.","user":"U011PPW7K53","ts":"1613807468.004400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"5U7r","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Ahhhhhhhh yes that's my bad I was actually referring to saving chain object. Thanks I got it working with "},{"type":"text","text":"Serialization.serialize","style":{"code":true}},{"type":"text","text":"."}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53"},{"client_msg_id":"52befb6c-dbb0-4705-a783-f5623dbc4275","type":"message","text":":+1: Keep in mind though that in general you won't be able to load it with a different Julia version and different package versions, so it's not intended to be used for persistent storage (see e.g. <https://discourse.julialang.org/t/object-serialization-in-julia/8442/5|https://discourse.julialang.org/t/object-serialization-in-julia/8442/5>). In contrast, JLSO is a storage container that uses serialization under the hood as default (\"JLSO is a storage container for serialized Julia objects. Think of it less as a serialization format but as a container, that employs a serializer, and a compressor, handles all the other concerns including metadata and saving.\").","user":"U8T9JUA5R","ts":"1613809208.006600","team":"T68168MUP","attachments":[{"service_name":"JuliaLang","title":"Object Serialization In Julia","title_link":"https://discourse.julialang.org/t/object-serialization-in-julia/8442/5","text":"serialize / deserialize is not a stable format and it is possible that you cannot read a serialized object created with another Julia version. It really is only intended for process to process communication.","fallback":"JuliaLang: Object Serialization In Julia","thumb_url":"https://aws1.discourse-cdn.com/business5/uploads/julialang/original/2X/1/12829a7ba92b924d4ce81099cbf99785bee9b405.png","ts":1516269601,"from_url":"https://discourse.julialang.org/t/object-serialization-in-julia/8442/5","thumb_width":408,"thumb_height":263,"service_icon":"https://aws1.discourse-cdn.com/business5/uploads/julialang/optimized/2X/6/6ca888e296f59ca2a599807f7d5edd489e3d1829_2_180x180.png","id":1,"original_url":"https://discourse.julialang.org/t/object-serialization-in-julia/8442/5"}],"blocks":[{"type":"rich_text","block_id":"5Ndy","elements":[{"type":"rich_text_section","elements":[{"type":"emoji","name":"+1"},{"type":"text","text":" Keep in mind though that in general you won't be able to load it with a different Julia version and different package versions, so it's not intended to be used for persistent storage (see e.g. "},{"type":"link","url":"https://discourse.julialang.org/t/object-serialization-in-julia/8442/5","text":"https://discourse.julialang.org/t/object-serialization-in-julia/8442/5"},{"type":"text","text":"). In contrast, JLSO is a storage container that uses serialization under the hood as default (\"JLSO is a storage container for serialized Julia objects. Think of it less as a serialization format but as a container, that employs a serializer, and a compressor, handles all the other concerns including metadata and saving.\")."}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53","reactions":[{"name":"+1","users":["U011PPW7K53"],"count":1}]},{"client_msg_id":"15101d52-9a20-4489-9739-7f499062e217","type":"message","text":"Gotcha. I am looking into JLSO.jl now. Thanks <@U8T9JUA5R> for the discourse link and explanation.","user":"U011PPW7K53","ts":"1613809390.006900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"jnpaP","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Gotcha. I am looking into JLSO.jl now. Thanks "},{"type":"user","user_id":"U8T9JUA5R"},{"type":"text","text":" for the discourse link and explanation."}]}]}],"thread_ts":"1613801898.000700","parent_user_id":"U011PPW7K53"}]