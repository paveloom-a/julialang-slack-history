[{"client_msg_id":"18645C0A-086C-499B-A3B3-43FF726F2578","type":"message","text":"Have you seen external agents in rllib? <@U7V6YNG04>\nCurious if this would be hard to accomplish with Julia?\n<https://docs.ray.io/en/master/rllib-env.html|https://docs.ray.io/en/master/rllib-env.html>","user":"U01BG0NN34J","ts":"1612062143.019000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OZYR9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Have you seen external agents in rllib? "},{"type":"user","user_id":"U7V6YNG04"},{"type":"text","text":"\nCurious if this would be hard to accomplish with Julia?\n"},{"type":"link","url":"https://docs.ray.io/en/master/rllib-env.html","text":"https://docs.ray.io/en/master/rllib-env.html"}]}]}],"thread_ts":"1612062143.019000","reply_count":5,"reply_users_count":2,"latest_reply":"1612147324.024800","reply_users":["U7V6YNG04","U01BG0NN34J"],"subscribed":false},{"client_msg_id":"d5026d2a-c71e-4fd2-9fac-85403b5c9c44","type":"message","text":"Yes. Current interfaces are mainly inspired by it :wink: So of course we support it. Only that we lack a concrete example.","user":"U7V6YNG04","ts":"1612063062.019500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"=Jvn8","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yes. Current interfaces are mainly inspired by it "},{"type":"emoji","name":"wink"},{"type":"text","text":" So of course we support it. Only that we lack a concrete example."}]}]}],"thread_ts":"1612062143.019000","parent_user_id":"U01BG0NN34J","reactions":[{"name":"raised_hands","users":["U01BG0NN34J"],"count":1}]},{"client_msg_id":"c7368a2f-9152-4ed3-91f6-df08ef7f9dc5","type":"message","text":"<https://github.com/JuliaReinforcementLearning/ReinforcementLearning.jl/issues/68#issuecomment-643592276>","user":"U7V6YNG04","ts":"1612063118.019700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"AKHOY","elements":[{"type":"rich_text_section","elements":[{"type":"link","url":"https://github.com/JuliaReinforcementLearning/ReinforcementLearning.jl/issues/68#issuecomment-643592276"}]}]}],"thread_ts":"1612062143.019000","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"35A6C4AE-F721-45F4-8C50-858FB442B5AC","type":"message","text":" Cool. I think you can link to that rllib section and it will be a great explanation. \nNow I get it. \n\nAnother reasoning you may use to justify your API design is command query segregation principle (I recall this back from my DDD programming phase):\n\n<https://khalilstemmler.com/articles/oop-design-principles/command-query-segregation/|https://khalilstemmler.com/articles/oop-design-principles/command-query-segregation/>","user":"U01BG0NN34J","ts":"1612110746.022500","team":"T68168MUP","attachments":[{"title":"Command Query Segregation | Object-Oriented Design Principles w/ TypeScript | Khalil Stemmler","title_link":"https://khalilstemmler.com/articles/oop-design-principles/command-query-segregation/","text":"CQS (Command-Query Segregation) is a design principle that states that a method is either a COMMAND that performs an action OR a QUERY that returns data to the caller, but never both.","fallback":"Command Query Segregation | Object-Oriented Design Principles w/ TypeScript | Khalil Stemmler","image_url":"https://khalilstemmler.com/img/blog/design-principles/object-oriented-design-principles.png","from_url":"https://khalilstemmler.com/articles/oop-design-principles/command-query-segregation/","image_width":441,"image_height":250,"image_bytes":36890,"service_icon":"https://khalilstemmler.com/icons/icon-48x48.png?v=694d39374a33acd28503afea58620062","service_name":"khalilstemmler.com","id":1,"original_url":"https://khalilstemmler.com/articles/oop-design-principles/command-query-segregation/"}],"blocks":[{"type":"rich_text","block_id":"xAADC","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":" Cool. I think you can link to that rllib section and it will be a great explanation. \nNow I get it. \n"},{"type":"text","text":"\n"},{"type":"text","text":"Another reasoning you may use to justify your API design is command query segregation principle (I recall this back from my DDD programming phase):\n"},{"type":"text","text":"\n"},{"type":"link","url":"https://khalilstemmler.com/articles/oop-design-principles/command-query-segregation/","text":"https://khalilstemmler.com/articles/oop-design-principles/command-query-segregation/"}]}]}],"thread_ts":"1612062143.019000","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"2233F1D6-FF84-44FF-8505-47C20B5FA3EE","type":"message","text":"Actually now that I think about it open AI gym interface always bugged me because of their step function. \nI just couldn't put my finger on it. This makes it clear what they were doing wrong. ","user":"U01BG0NN34J","ts":"1612110805.024400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"aY9","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Actually now that I think about it open AI gym interface always bugged me because of their step function. \nI just couldn't put my finger on it. This makes it clear what they were doing wrong. "}]}]}],"thread_ts":"1612062143.019000","parent_user_id":"U01BG0NN34J"},{"client_msg_id":"75c73379-8bb8-4304-8bf8-55253c4ccc07","type":"message","text":"Thanks for the link. This is the first time I hear about it:heart:","user":"U7V6YNG04","ts":"1612147324.024800","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OCEWJ","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks for the link. This is the first time I hear about it"},{"type":"emoji","name":"heart"}]}]}],"thread_ts":"1612062143.019000","parent_user_id":"U01BG0NN34J"}]