[{"client_msg_id":"9dc5e706-7877-4e4a-a1f0-9e66be92d160","type":"message","text":"this will have a big effect on matrix'y type operations going forward","user":"UDSU53PEG","ts":"1609209693.228000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"ldY","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"this will have a big effect on matrix'y type operations going forward"}]}]}],"thread_ts":"1609209693.228000","reply_count":12,"reply_users_count":4,"latest_reply":"1609795941.232700","reply_users":["UPUBAM63X","UUCN877U5","UDSU53PEG","U69J94HT9"],"subscribed":false,"reactions":[{"name":"+1","users":["UPUBAM63X"],"count":1}]},{"client_msg_id":"6d62a119-754e-4cbf-86a0-c121c7e8d8c2","type":"message","text":"That's pretty handy! reminds me of C++","user":"UPUBAM63X","ts":"1609238896.228200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pz4","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"That's pretty handy! reminds me of C++"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"cbf729af-6d6a-4154-a25f-d8be6638fa73","type":"message","text":"Oh yeah,this is going to mean something. I just wish if I could compare this with `StaticArrays.jl` <@UDSU53PEG> do you know this?","user":"UUCN877U5","ts":"1609273720.228400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"c8M","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Oh yeah,this is going to mean something. I just wish if I could compare this with "},{"type":"text","text":"StaticArrays.jl","style":{"code":true}},{"type":"text","text":" "},{"type":"user","user_id":"UDSU53PEG"},{"type":"text","text":" do you know this?"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"c2600a18-6c73-4b8b-94e4-3ddc1d139cb2","type":"message","text":"Is this helpful: <https://github.com/rust-lang/rust/pull/79135>","user":"UDSU53PEG","ts":"1609273831.228700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"a84","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Is this helpful: "},{"type":"link","url":"https://github.com/rust-lang/rust/pull/79135"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"e9a82b7d-de02-4766-970a-447266319d99","type":"message","text":"I don't know anything about the julia package :stuck_out_tongue:","user":"UUCN877U5","ts":"1609273896.228900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Njv","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't know anything about the julia package "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"0953ab9f-fcdd-4d21-ae7e-01204d5dece5","type":"message","text":"I don't think they're comparable other than superficially","user":"UDSU53PEG","ts":"1609274062.229100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"GSF","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I don't think they're comparable other than superficially"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"7e98d9b5-f622-4b5f-881b-e3cc501106b6","type":"message","text":"Can `N` in `[T; N]`  be whatever or is it constrained in the `StaticArray.jl?`","user":"UUCN877U5","ts":"1609274133.229300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"seBh","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Can "},{"type":"text","text":"N","style":{"code":true}},{"type":"text","text":" in "},{"type":"text","text":"[T; N]","style":{"code":true}},{"type":"text","text":"  be whatever or is it constrained in the "},{"type":"text","text":"StaticArray.jl?","style":{"code":true}}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"bd34ed67-6420-4e3b-a1fa-5fd25a5ed998","type":"message","text":"it's determined by the type, in Rust it is derived at compile time afiak","user":"UDSU53PEG","ts":"1609274287.229500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"7Xp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"it's determined by the type, in Rust it is derived at compile time afiak"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"70fc557b-37b1-41e3-bbc3-80fc94b3abc6","type":"message","text":"Rust: 'Const parameters allow users to naturally specify variants of a generic type which are more naturally parameterized by values, rather than by types.'\nStaticArrays: 'statically sized\" means that the size can be determined from the _type_, and \"static\" does *not* necessarily imply `immutable`.'","user":"UDSU53PEG","ts":"1609274347.229700","team":"T68168MUP","edited":{"user":"UDSU53PEG","ts":"1609274355.000000"},"blocks":[{"type":"rich_text","block_id":"jEbD","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Rust: 'Const parameters allow users to naturally specify variants of a generic type which are more naturally parameterized by values, rather than by types.'\nStaticArrays: 'statically sized\" means that the size can be determined from the "},{"type":"text","text":"type","style":{"italic":true}},{"type":"text","text":", and \"static\" does "},{"type":"text","text":"not","style":{"bold":true}},{"type":"text","text":" necessarily imply "},{"type":"text","text":"immutable","style":{"code":true}},{"type":"text","text":".'"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"bf512160-3802-4917-8e94-a81867cf9fa7","type":"message","text":"So the two may _look_ similar but they are pretty different","user":"UDSU53PEG","ts":"1609274377.230000","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uYGrO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"So the two may "},{"type":"text","text":"look","style":{"italic":true}},{"type":"text","text":" similar but they are pretty different"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"1838f929-72b9-4f75-8459-99950e8de34f","type":"message","text":"Thanks. The limit on the rust-side was removed in this: <https://github.com/rust-lang/rust/pull/74060>","user":"UUCN877U5","ts":"1609274469.230200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"plr7","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks. The limit on the rust-side was removed in this: "},{"type":"link","url":"https://github.com/rust-lang/rust/pull/74060"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"fbf4984b-953d-445e-a93e-d7013172b183","type":"message","text":"NICE\n\nndarray has developed pretty well without them but IMO \"Ix1, Ix2, ..., IxDyn\" is still kind of ugly. But they basically reimplement the operations necessary for arrays so it's not that bad\n\nEach index type (e.g. `Ix2`) has an associated `Smaller` and `Larger` type (e.g., `Ix1`, `Ix3` respectively) via the `Dimension` trait (e.g. <https://github.com/rust-ndarray/ndarray/blob/master/src/dimension/dimension_trait.rs#L559>)\n\nSo code like this is still actually possible and not terribly ugly: <https://github.com/rust-ndarray/ndarray/blob/master/src/stacking.rs#L37>","user":"U69J94HT9","ts":"1609795847.232500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"wTtu","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"NICE\n\nndarray has developed pretty well without them but IMO \"Ix1, Ix2, ..., IxDyn\" is still kind of ugly. But they basically reimplement the operations necessary for arrays so it's not that bad\n\nEach index type (e.g. "},{"type":"text","text":"Ix2","style":{"code":true}},{"type":"text","text":") has an associated "},{"type":"text","text":"Smaller","style":{"code":true}},{"type":"text","text":" and "},{"type":"text","text":"Larger","style":{"code":true}},{"type":"text","text":" type (e.g., "},{"type":"text","text":"Ix1","style":{"code":true}},{"type":"text","text":", "},{"type":"text","text":"Ix3","style":{"code":true}},{"type":"text","text":" respectively) via the "},{"type":"text","text":"Dimension","style":{"code":true}},{"type":"text","text":" trait (e.g. "},{"type":"link","url":"https://github.com/rust-ndarray/ndarray/blob/master/src/dimension/dimension_trait.rs#L559"},{"type":"text","text":")\n\nSo code like this is still actually possible and not terribly ugly: "},{"type":"link","url":"https://github.com/rust-ndarray/ndarray/blob/master/src/stacking.rs#L37"}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"},{"client_msg_id":"593ca814-0cf5-4273-9747-0b7b06d4d5ba","type":"message","text":"I used to think const generics was vital for multidim stuff looking decent but these days I'm not so sure.","user":"U69J94HT9","ts":"1609795941.232700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"l=CN","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I used to think const generics was vital for multidim stuff looking decent but these days I'm not so sure."}]}]}],"thread_ts":"1609209693.228000","parent_user_id":"UDSU53PEG"}]