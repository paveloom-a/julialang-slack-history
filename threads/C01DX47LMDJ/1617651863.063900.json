[{"client_msg_id":"e3de711c-5741-4cd8-b336-c3d3e9185c33","type":"message","text":"I was just wondering, is there a _neat_ way for Julia and Rust to interact with each other? (I guess that `ccall()` is the most obvious answer, but that is not what I am thinking ). I have had stupid ideas before, so feel free to call this one another nonsensical idea. However, I was thinking that it _feels_ that somehow due to Julia's type inference and Rust type inference both should be able to be aware of each other. Perhaps generate Rust libraries that are Julia-aware and compile most of it except for a small piece that Julia will fill in later, or perhaps generate Julia modules that could rely on Rust to allocate memory or perhaps something else. What are your thoughts?","user":"U013V2CFZAN","ts":"1617651863.063900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Fddo","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I was just wondering, is there a "},{"type":"text","text":"neat","style":{"italic":true}},{"type":"text","text":" way for Julia and Rust to interact with each other? (I guess that "},{"type":"text","text":"ccall()","style":{"code":true}},{"type":"text","text":" is the most obvious answer, but that is not what I am thinking ). I have had stupid ideas before, so feel free to call this one another nonsensical idea. However, I was thinking that it "},{"type":"text","text":"feels","style":{"italic":true}},{"type":"text","text":" that somehow due to Julia's type inference and Rust type inference both should be able to be aware of each other. Perhaps generate Rust libraries that are Julia-aware and compile most of it except for a small piece that Julia will fill in later, or perhaps generate Julia modules that could rely on Rust to allocate memory or perhaps something else. What are your thoughts?"}]}]}],"thread_ts":"1617651863.063900","reply_count":6,"reply_users_count":2,"latest_reply":"1617653681.066300","reply_users":["U013V2CFZAN","URVFJB60N"],"is_locked":false,"subscribed":false},{"client_msg_id":"68e8863e-5816-467e-847c-2e1d0c345a44","type":"message","text":"A valid thought is \"you are on drugs or something, this doesn't make any sense\" :stuck_out_tongue:","user":"U013V2CFZAN","ts":"1617652243.065000","team":"T68168MUP","edited":{"user":"U013V2CFZAN","ts":"1617652272.000000"},"blocks":[{"type":"rich_text","block_id":"RFO","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"A valid thought is \"you are on drugs or something, this doesn't make any sense\" "},{"type":"emoji","name":"stuck_out_tongue"}]}]}],"thread_ts":"1617651863.063900","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"2852a1fd-395c-4c98-b30e-5d0e10732ea7","type":"message","text":"There's <https://github.com/Taaitaaiger/jlrs|jlrs> on the Rust side. `ccall` really is the best option right now on the Julia side. I think it'd be neat to have something like Cxx.jl, but it doesn't exist yet.","user":"URVFJB60N","ts":"1617652328.065500","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WdBr+","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"There's "},{"type":"link","url":"https://github.com/Taaitaaiger/jlrs","text":"jlrs"},{"type":"text","text":" on the Rust side. "},{"type":"text","text":"ccall","style":{"code":true}},{"type":"text","text":" really is the best option right now on the Julia side. I think it'd be neat to have something like Cxx.jl, but it doesn't exist yet."}]}]}],"thread_ts":"1617651863.063900","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"3a4a54ec-31e5-474e-b550-46aac2fdb9f3","type":"message","text":"aha! I knew that I was not _completely_ crazy","user":"U013V2CFZAN","ts":"1617652479.065700","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"OXp","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"aha! I knew that I was not "},{"type":"text","text":"completely","style":{"italic":true}},{"type":"text","text":" crazy"}]}]}],"thread_ts":"1617651863.063900","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"5fd5fcb8-d213-40c5-af84-70eab9ab6c30","type":"message","text":"Thanks! <@URVFJB60N>","user":"U013V2CFZAN","ts":"1617652665.065900","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"/8BWX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Thanks! "},{"type":"user","user_id":"URVFJB60N"}]}]}],"thread_ts":"1617651863.063900","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"e11f1bfa-de5f-4d2b-a811-3dc69880adcf","type":"message","text":"Haha, totally. I myself am not interested in FFI between Julia and Rust. Julia is fast enough. What Rust provides for me is type safety, and any sort of FFI just wrecks type reasoning.","user":"URVFJB60N","ts":"1617652848.066100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"uK5","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Haha, totally. I myself am not interested in FFI between Julia and Rust. Julia is fast enough. What Rust provides for me is type safety, and any sort of FFI just wrecks type reasoning."}]}]}],"thread_ts":"1617651863.063900","parent_user_id":"U013V2CFZAN"},{"client_msg_id":"500274d4-6345-4604-afee-2db72056c3e5","type":"message","text":"I am also happy with Julia's speed in general. However, at work people want to call Julia from C/C++ and they would like to have more \"deterministic\" behavior and type safety as you mention. Not sure if Rust is a way to achieve something of the like though.","user":"U013V2CFZAN","ts":"1617653681.066300","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"nX=m","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I am also happy with Julia's speed in general. However, at work people want to call Julia from C/C++ and they would like to have more \"deterministic\" behavior and type safety as you mention. Not sure if Rust is a way to achieve something of the like though."}]}]}],"thread_ts":"1617651863.063900","parent_user_id":"U013V2CFZAN"}]