[{"client_msg_id":"d7c7b95d-5266-4595-a00f-9bedb2a7950d","type":"message","text":"today I learned <https://doc.rust-lang.org/edition-guide/rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html>","user":"UPUBAM63X","ts":"1613520677.089100","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"WwDHI","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"today I learned "},{"type":"link","url":"https://doc.rust-lang.org/edition-guide/rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html"}]}]}],"thread_ts":"1613520677.089100","reply_count":3,"reply_users_count":2,"latest_reply":"1613602423.090600","reply_users":["U8T0YV7QC","UPUBAM63X"],"subscribed":false,"reactions":[{"name":"clapping","users":["U01HLRSFPCN"],"count":1}]},{"client_msg_id":"EB0C64BB-347E-4D8D-9D92-614004D7016E","type":"message","text":"I thought it was talking about Julia. Didn’t know Rust can do that too. \n&gt; This sort of evolution is one of the great advantages of a powerful macro system: speculative extensions to the language syntax can be prototyped and iterated on without modifying the language itself, and in return, macros that turn out to be especially useful can indicate missing language features","user":"U8T0YV7QC","ts":"1613587855.090200","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"iqOX","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I thought it was talking about Julia. Didn’t know Rust can do that too. \n"}]},{"type":"rich_text_quote","elements":[{"type":"text","text":"This sort of evolution is one of the great advantages of a powerful macro system: speculative extensions to the language syntax can be prototyped and iterated on without modifying the language itself, and in return, macros that turn out to be especially useful can indicate missing language features"}]}]}],"thread_ts":"1613520677.089100","parent_user_id":"UPUBAM63X"},{"client_msg_id":"fcadcb15-271b-4ae3-bec1-3e07f803119a","type":"message","text":"Yea apparently rust has pretty strong metaprograming capabilities","user":"UPUBAM63X","ts":"1613602328.090400","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"8a2w","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"Yea apparently rust has pretty strong metaprograming capabilities"}]}]}],"thread_ts":"1613520677.089100","parent_user_id":"UPUBAM63X"},{"client_msg_id":"0d78c37c-c48f-48a2-9270-6bc2e8b9c44c","type":"message","text":"I've never used them to be honest. I don't feel like I look at Rust for very expressive syntax. Rust for me is like very concrete problems. Julia is more like \"oh crap I have something hairy and need to try anything to make this easy enough to be possible\"","user":"UPUBAM63X","ts":"1613602423.090600","team":"T68168MUP","blocks":[{"type":"rich_text","block_id":"Pulz","elements":[{"type":"rich_text_section","elements":[{"type":"text","text":"I've never used them to be honest. I don't feel like I look at Rust for very expressive syntax. Rust for me is like very concrete problems. Julia is more like \"oh crap I have something hairy and need to try anything to make this easy enough to be possible\""}]}]}],"thread_ts":"1613520677.089100","parent_user_id":"UPUBAM63X"}]